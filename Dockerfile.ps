FROM ghcr.io/posthog/rust-node-container:bookworm_rust_1.80.1-node_18.19.1 AS plugin-server-build
WORKDIR /code
# Workspace settings
COPY package.json pnpm-lock.yaml pnpm-workspace.yaml nx.json .npmrc project.json ./
COPY ./bin/ ./bin/
COPY ./rust ./rust
SHELL ["/bin/bash", "-e", "-o", "pipefail", "-c"]

# Compile and install Node.js dependencies.
COPY ./plugin-server/package.json ./plugin-server/pnpm-lock.yaml ./plugin-server/tsconfig.json ./plugin-server/project.json ./plugin-server/
COPY ./plugin-server/patches/ ./plugin-server/patches/
ENV PNPM_HOME /tmp/pnpm-store 
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    "make" \
    "g++" \
    "gcc" \
    "python3" \
    "libssl-dev" \
    "zlib1g-dev" \
    && \
    rm -rf /var/lib/apt/lists/*

COPY ./common/ ./common/
RUN --mount=type=cache,id=pnpm,target=/tmp/pnpm-store \
    corepack enable && \
    pnpm install --frozen-lockfile --filter @posthog/plugin-server... --store-dir /tmp/pnpm-store

# Build the plugin server.
#
# Note: we run the build as a separate action to increase
# the cache hit ratio of the layers above.
COPY ./plugin-server/src/ ./plugin-server/src/
COPY ./plugin-server/tests/ ./plugin-server/tests/
# RUN bin/nx build plugin-server --verbose

# # As the plugin-server is now built, letâ€™s keep
# # only prod dependencies in the node_module folder
# # as we will copy it to the last image.
# RUN --mount=type=cache,id=pnpm,target=/tmp/pnpm-store \
#     corepack enable && \
#     rm -rf plugin-server/node_modules && \
#     pnpm install --frozen-lockfile --filter @posthog/plugin-server --store-dir /tmp/pnpm-store --prod
