common/hogvm/python/execute.py:0: error: Method `__setitem__` of type `bound method dict[int, dict[Unknown, Unknown]].__setitem__(key: int, value: dict[Unknown, Unknown], /) -> None` cannot be called with a key of type `Unknown | int | None` and a value of type `dict[Unknown | str, Unknown | int | None]` on object of type `dict[int, dict[Unknown, Unknown]]`  [invalid-assignment]
common/hogvm/python/stl/__init__.py:0: warning: The function `utcfromtimestamp` is deprecated: Use timezone-aware objects to represent datetimes in UTC; e.g. by calling .fromtimestamp(datetime.timezone.utc)  [deprecated]
common/hogvm/python/stl/__init__.py:0: warning: The function `utcfromtimestamp` is deprecated: Use timezone-aware objects to represent datetimes in UTC; e.g. by calling .fromtimestamp(datetime.timezone.utc)  [deprecated]
common/hogvm/python/stl/__init__.py:0: warning: The function `utcfromtimestamp` is deprecated: Use timezone-aware objects to represent datetimes in UTC; e.g. by calling .fromtimestamp(datetime.timezone.utc)  [deprecated]
common/hogvm/python/stl/__init__.py:0: warning: The function `utcfromtimestamp` is deprecated: Use timezone-aware objects to represent datetimes in UTC; e.g. by calling .fromtimestamp(datetime.timezone.utc)  [deprecated]
common/hogvm/python/stl/__init__.py:0: warning: The function `utcfromtimestamp` is deprecated: Use timezone-aware objects to represent datetimes in UTC; e.g. by calling .fromtimestamp(datetime.timezone.utc)  [deprecated]
common/hogvm/python/test/test_execute.py:0: error: Object of type `list[Unknown | str | int]` is not assignable to `list[str]`  [invalid-assignment]
common/hogvm/python/test/test_execute.py:0: error: Object of type `list[Unknown | str | int]` is not assignable to `list[str]`  [invalid-assignment]
common/hogvm/stl/compile.py:0: error: List literals are not allowed in this context in a type expression: Did you mean `tuple[list[str], list[Unknown]]`?  [invalid-type-form]
common/hogvm/stl/compile.py:0: error: Variable of type `def any(iterable: Iterable[object], /) -> bool` is not allowed in a type expression  [invalid-type-form]
dags/backups.py:0: warning: Attribute `shard` on type `Backup | None` may be missing  [possibly-missing-attribute]
dags/backups.py:0: warning: Attribute `shard` on type `Backup | None` may be missing  [possibly-missing-attribute]
dags/export_query_logs_to_s3.py:0: error: Object of type `None` is not assignable to `DateRange`  [invalid-assignment]
dags/postgres_to_clickhouse_etl.py:0: error: Object of type `None` is not assignable to `list[str]`  [invalid-assignment]
dags/property_definitions.py:0: error: Variable of type `<module 'datetime'>` is not allowed in a type expression  [invalid-type-form]
dags/property_definitions.py:0: error: Variable of type `<module 'datetime'>` is not allowed in a type expression  [invalid-type-form]
dags/tests/test_backups.py:0: error: Variable of type `Overload[(service_name: Literal["accessanalyzer"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["account"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["acm"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["acm-pca"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["amp"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["amplify"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["amplifybackend"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["amplifyuibuilder"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["apigateway"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["apigatewaymanagementapi"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["apigatewayv2"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["appconfig"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["appconfigdata"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["appfabric"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["appflow"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["appintegrations"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["application-autoscaling"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["application-insights"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["application-signals"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["applicationcostprofiler"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["appmesh"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["apprunner"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["appstream"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["appsync"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["apptest"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["arc-zonal-shift"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["artifact"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["athena"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["auditmanager"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["autoscaling"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["autoscaling-plans"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["b2bi"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["backup"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["backup-gateway"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["backupsearch"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["batch"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["bcm-data-exports"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["bcm-pricing-calculator"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["bedrock"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["bedrock-agent"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["bedrock-agent-runtime"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["bedrock-data-automation"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["bedrock-data-automation-runtime"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["bedrock-runtime"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["billing"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["billingconductor"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["braket"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["budgets"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["ce"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["chatbot"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["chime"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["chime-sdk-identity"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["chime-sdk-media-pipelines"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["chime-sdk-meetings"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["chime-sdk-messaging"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["chime-sdk-voice"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["cleanrooms"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["cleanroomsml"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["cloud9"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["cloudcontrol"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["clouddirectory"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["cloudformation"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> CloudFormationClient, (service_name: Literal["cloudfront"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["cloudfront-keyvaluestore"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["cloudhsm"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["cloudhsmv2"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["cloudsearch"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["cloudsearchdomain"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["cloudtrail"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["cloudtrail-data"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["cloudwatch"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["codeartifact"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["codebuild"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["codecatalyst"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["codecommit"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["codeconnections"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["codedeploy"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["codeguru-reviewer"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["codeguru-security"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["codeguruprofiler"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["codepipeline"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["codestar-connections"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["codestar-notifications"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["cognito-identity"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["cognito-idp"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["cognito-sync"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["comprehend"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["comprehendmedical"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["compute-optimizer"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["config"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["connect"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["connect-contact-lens"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["connectcampaigns"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["connectcampaignsv2"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["connectcases"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["connectparticipant"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["controlcatalog"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["controltower"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["cost-optimization-hub"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["cur"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["customer-profiles"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["databrew"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["dataexchange"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["datapipeline"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["datasync"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["datazone"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["dax"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["deadline"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["detective"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["devicefarm"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["devops-guru"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["directconnect"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["discovery"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["dlm"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["dms"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["docdb"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["docdb-elastic"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["drs"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["ds"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["ds-data"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["dsql"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["dynamodb"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> DynamoDBClient, (service_name: Literal["dynamodbstreams"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["ebs"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["ec2"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> EC2Client, (service_name: Literal["ec2-instance-connect"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["ecr"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["ecr-public"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["ecs"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["efs"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["eks"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["eks-auth"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["elasticache"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["elasticbeanstalk"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["elastictranscoder"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["elb"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["elbv2"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["emr"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["emr-containers"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["emr-serverless"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["entityresolution"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["es"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["events"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["evidently"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["finspace"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["finspace-data"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["firehose"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["fis"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["fms"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["forecast"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["forecastquery"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["frauddetector"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["freetier"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["fsx"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["gamelift"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["geo-maps"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["geo-places"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["geo-routes"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["glacier"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["globalaccelerator"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["glue"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["grafana"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["greengrass"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["greengrassv2"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["groundstation"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["guardduty"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["health"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["healthlake"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["iam"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["identitystore"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["imagebuilder"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["importexport"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["inspector"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["inspector-scan"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["inspector2"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["internetmonitor"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["invoicing"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["iot"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["iot-data"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["iot-jobs-data"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["iot-managed-integrations"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["iotanalytics"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["iotdeviceadvisor"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["iotevents"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["iotevents-data"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["iotfleethub"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["iotfleetwise"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["iotsecuretunneling"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["iotsitewise"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["iotthingsgraph"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["iottwinmaker"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["iotwireless"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["ivs"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["ivs-realtime"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["ivschat"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["kafka"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["kafkaconnect"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["kendra"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["kendra-ranking"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["keyspaces"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["kinesis"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["kinesis-video-archived-media"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["kinesis-video-media"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["kinesis-video-signaling"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["kinesis-video-webrtc-storage"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["kinesisanalytics"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["kinesisanalyticsv2"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["kinesisvideo"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["kms"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["lakeformation"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["lambda"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> LambdaClient, (service_name: Literal["launch-wizard"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["lex-models"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["lex-runtime"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["lexv2-models"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["lexv2-runtime"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["license-manager"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["license-manager-linux-subscriptions"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["license-manager-user-subscriptions"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["lightsail"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["location"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["logs"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["lookoutequipment"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["lookoutmetrics"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["lookoutvision"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["m2"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["machinelearning"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["macie2"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["mailmanager"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["managedblockchain"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["managedblockchain-query"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["marketplace-agreement"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["marketplace-catalog"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["marketplace-deployment"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["marketplace-entitlement"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["marketplace-reporting"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["marketplacecommerceanalytics"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["mediaconnect"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["mediaconvert"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["medialive"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["mediapackage"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["mediapackage-vod"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["mediapackagev2"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["mediastore"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["mediastore-data"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["mediatailor"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["medical-imaging"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["memorydb"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["meteringmarketplace"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["mgh"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["mgn"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["migration-hub-refactor-spaces"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["migrationhub-config"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["migrationhuborchestrator"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["migrationhubstrategy"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["mq"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["mturk"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["mwaa"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["neptune"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["neptune-graph"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["neptunedata"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["network-firewall"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["networkflowmonitor"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["networkmanager"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["networkmonitor"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["notifications"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["notificationscontacts"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["oam"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["observabilityadmin"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["omics"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["opensearch"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["opensearchserverless"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["opsworks"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["opsworkscm"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["organizations"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["osis"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["outposts"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["panorama"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["partnercentral-selling"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["payment-cryptography"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["payment-cryptography-data"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["pca-connector-ad"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["pca-connector-scep"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["pcs"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["personalize"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["personalize-events"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["personalize-runtime"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["pi"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["pinpoint"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["pinpoint-email"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["pinpoint-sms-voice"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["pinpoint-sms-voice-v2"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["pipes"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["polly"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["pricing"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["privatenetworks"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["proton"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["qapps"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["qbusiness"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["qconnect"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["qldb"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["qldb-session"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["quicksight"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["ram"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["rbin"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["rds"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> RDSClient, (service_name: Literal["rds-data"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["redshift"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["redshift-data"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["redshift-serverless"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["rekognition"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["repostspace"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["resiliencehub"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["resource-explorer-2"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["resource-groups"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["resourcegroupstaggingapi"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["robomaker"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["rolesanywhere"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["route53"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["route53-recovery-cluster"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["route53-recovery-control-config"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["route53-recovery-readiness"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["route53domains"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["route53profiles"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["route53resolver"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["rum"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["s3"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> S3Client, (service_name: Literal["s3control"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["s3outposts"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["s3tables"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["sagemaker"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["sagemaker-a2i-runtime"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["sagemaker-edge"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["sagemaker-featurestore-runtime"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["sagemaker-geospatial"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["sagemaker-metrics"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["sagemaker-runtime"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["savingsplans"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["scheduler"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["schemas"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["sdb"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["secretsmanager"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["security-ir"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["securityhub"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["securitylake"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["serverlessrepo"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["service-quotas"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["servicecatalog"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["servicecatalog-appregistry"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["servicediscovery"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["ses"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["sesv2"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["shield"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["signer"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["simspaceweaver"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["sms"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["sms-voice"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["snow-device-management"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["snowball"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["sns"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["socialmessaging"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["sqs"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> SQSClient, (service_name: Literal["ssm"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["ssm-contacts"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["ssm-incidents"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["ssm-quicksetup"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["ssm-sap"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["sso"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["sso-admin"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["sso-oidc"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["stepfunctions"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["storagegateway"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["sts"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["supplychain"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["support"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["support-app"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["swf"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["synthetics"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["taxsettings"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["textract"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["timestream-influxdb"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["timestream-query"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["timestream-write"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["tnb"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["transcribe"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["transfer"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["translate"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["trustedadvisor"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["verifiedpermissions"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["voice-id"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["vpc-lattice"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["waf"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["waf-regional"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["wafv2"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["wellarchitected"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["wisdom"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["workdocs"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["workmail"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["workmailmessageflow"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["workspaces"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["workspaces-thin-client"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["workspaces-web"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown, (service_name: Literal["xray"], region_name: str | None = EllipsisType, api_version: str | None = EllipsisType, use_ssl: bool | None = EllipsisType, verify: bool | str | None = EllipsisType, endpoint_url: str | None = EllipsisType, aws_access_key_id: str | None = EllipsisType, aws_secret_access_key: str | None = EllipsisType, aws_session_token: str | None = EllipsisType, config: Config | None = EllipsisType) -> Unknown]` is not allowed in a type expression  [invalid-type-form]
dags/web_preaggregated_asset_checks.py:0: error: Default value of type `None` is not assignable to annotated parameter type `AssetCheckExecutionContext`  [invalid-parameter-default]
dags/web_preaggregated_asset_checks.py:0: error: Default value of type `None` is not assignable to annotated parameter type `DagsterTags`  [invalid-parameter-default]
dags/web_preaggregated_asset_checks.py:0: error: Return type does not match returned value: expected `tuple[bool, dict[str, Any]]`, found `tuple[Unknown | int | str | ... omitted 3 union elements, dict[Unknown | str, Unknown | int | str | ... omitted 3 union elements]]`  [invalid-return-type]
dags/web_preaggregated_asset_checks.py:0: error: Return type does not match returned value: expected `tuple[int | float, int, int, str, str]`, found `tuple[@Todo, @Todo, str | Literal[1, 2], Unknown, Unknown]`  [invalid-return-type]
dags/web_preaggregated_asset_checks.py:0: warning: Method `__setitem__` of type `Unknown | int | str | ... omitted 3 union elements` may be missing  [possibly-missing-implicit-call]
ee/api/authentication.py:0: error: Return type does not match returned value: expected `str`, found `None | @Todo`  [invalid-return-type]
ee/api/authentication.py:0: warning: Member `RSAAlgorithm` of module `jwt.algorithms` may be missing  [possibly-missing-import]
ee/api/sentry_stats.py:0: warning: The function `utcnow` is deprecated: Use timezone-aware objects to represent datetimes in UTC; e.g. by calling .now(datetime.timezone.utc)  [deprecated]
ee/api/test/base.py:0: error: Object of type `None` is not assignable to `License`  [invalid-assignment]
ee/api/test/base.py:0: warning: Value is already of type `LicenseManager`  [redundant-cast]
ee/api/test/test_action.py:0: warning: Value is already of type `LicenseManager`  [redundant-cast]
ee/api/test/test_action.py:0: warning: Value is already of type `LicenseManager`  [redundant-cast]
ee/api/test/test_action.py:0: warning: Value is already of type `LicenseManager`  [redundant-cast]
ee/api/test/test_action.py:0: warning: Value is already of type `LicenseManager`  [redundant-cast]
ee/api/test/test_authentication.py:0: error: No argument provided for required parameter `strategy` of bound method `__init__`  [missing-argument]
ee/api/test/test_billing.py:0: error: Invalid key access on TypedDict `CustomerProductAddon`: Unknown key "free_allocation"  [invalid-key]
ee/api/test/test_billing.py:0: error: Invalid key access on TypedDict `CustomerProductAddon`: Unknown key "has_exceeded_limit"  [invalid-key]
ee/api/test/test_billing.py:0: error: Invalid key access on TypedDict `CustomerProductAddon`: Unknown key "percentage_usage"  [invalid-key]
ee/api/test/test_billing.py:0: error: Invalid key access on TypedDict `CustomerProduct`: Unknown key "projected_amount_usd_with_limit"  [invalid-key]
ee/api/test/test_billing.py:0: error: Invalid key access on TypedDict `CustomerProduct`: Unknown key "projected_amount_usd_with_limit"  [invalid-key]
ee/api/test/test_billing.py:0: error: Missing required key 'available_product_features' in TypedDict `CustomerInfo` constructor  [missing-typed-dict-key]
ee/api/test/test_billing.py:0: error: Missing required key 'contact_support' in TypedDict `CustomerProductAddon` constructor  [missing-typed-dict-key]
ee/api/test/test_billing.py:0: error: Missing required key 'current_total_amount_usd_after_discount' in TypedDict `CustomerInfo` constructor  [missing-typed-dict-key]
ee/api/test/test_billing.py:0: error: Missing required key 'current_total_amount_usd_after_discount' in TypedDict `CustomerInfo` constructor  [missing-typed-dict-key]
ee/api/test/test_billing.py:0: error: Missing required key 'customer_trust_scores' in TypedDict `CustomerInfo` constructor  [missing-typed-dict-key]
ee/api/test/test_billing.py:0: error: Missing required key 'discount_amount_usd' in TypedDict `CustomerInfo` constructor  [missing-typed-dict-key]
ee/api/test/test_billing.py:0: error: Missing required key 'discount_amount_usd' in TypedDict `CustomerInfo` constructor  [missing-typed-dict-key]
ee/api/test/test_billing.py:0: error: Missing required key 'discount_percent' in TypedDict `CustomerInfo` constructor  [missing-typed-dict-key]
ee/api/test/test_billing.py:0: error: Missing required key 'discount_percent' in TypedDict `CustomerInfo` constructor  [missing-typed-dict-key]
ee/api/test/test_billing.py:0: error: Missing required key 'docs_url' in TypedDict `CustomerProductAddon` constructor  [missing-typed-dict-key]
ee/api/test/test_billing.py:0: error: Missing required key 'icon_key' in TypedDict `CustomerProductAddon` constructor  [missing-typed-dict-key]
ee/api/test/test_billing.py:0: error: Missing required key 'included_with_main_product' in TypedDict `CustomerProductAddon` constructor  [missing-typed-dict-key]
ee/api/test/test_billing.py:0: error: Missing required key 'inclusion_only' in TypedDict `CustomerProductAddon` constructor  [missing-typed-dict-key]
ee/api/test/test_billing.py:0: error: Missing required key 'interval' in TypedDict `BillingPeriod` constructor  [missing-typed-dict-key]
ee/api/test/test_billing.py:0: error: Missing required key 'interval' in TypedDict `BillingPeriod` constructor  [missing-typed-dict-key]
ee/api/test/test_billing.py:0: error: Missing required key 'projected_amount' in TypedDict `CustomerProduct` constructor  [missing-typed-dict-key]
ee/api/test/test_billing.py:0: error: Missing required key 'unit' in TypedDict `CustomerProductAddon` constructor  [missing-typed-dict-key]
ee/api/test/test_billing.py:0: warning: Attribute `plan` on type `License | None` may be missing  [possibly-missing-attribute]
ee/api/test/test_billing.py:0: warning: Attribute `plan` on type `License | None` may be missing  [possibly-missing-attribute]
ee/api/test/test_billing.py:0: warning: Attribute `valid_until` on type `License | None` may be missing  [possibly-missing-attribute]
ee/api/test/test_billing.py:0: warning: Attribute `valid_until` on type `License | None` may be missing  [possibly-missing-attribute]
ee/api/test/test_event_definition.py:0: warning: Value is already of type `LicenseManager`  [redundant-cast]
ee/api/test/test_event_definition.py:0: warning: Value is already of type `LicenseManager`  [redundant-cast]
ee/api/test/test_event_definition.py:0: warning: Value is already of type `LicenseManager`  [redundant-cast]
ee/api/test/test_event_definition.py:0: warning: Value is already of type `LicenseManager`  [redundant-cast]
ee/api/test/test_event_definition.py:0: warning: Value is already of type `LicenseManager`  [redundant-cast]
ee/api/test/test_event_definition.py:0: warning: Value is already of type `LicenseManager`  [redundant-cast]
ee/api/test/test_event_definition.py:0: warning: Value is already of type `LicenseManager`  [redundant-cast]
ee/api/test/test_event_definition.py:0: warning: Value is already of type `LicenseManager`  [redundant-cast]
ee/api/test/test_event_definition.py:0: warning: Value is already of type `LicenseManager`  [redundant-cast]
ee/api/test/test_event_definition.py:0: warning: Value is already of type `LicenseManager`  [redundant-cast]
ee/api/test/test_event_definition.py:0: warning: Value is already of type `LicenseManager`  [redundant-cast]
ee/api/test/test_event_definition.py:0: warning: Value is already of type `LicenseManager`  [redundant-cast]
ee/api/test/test_event_definition.py:0: warning: Value is already of type `LicenseManager`  [redundant-cast]
ee/api/test/test_insight.py:0: warning: Value is already of type `LicenseManager`  [redundant-cast]
ee/api/test/test_property_definition.py:0: warning: Value is already of type `LicenseManager`  [redundant-cast]
ee/api/test/test_property_definition.py:0: warning: Value is already of type `LicenseManager`  [redundant-cast]
ee/api/test/test_property_definition.py:0: warning: Value is already of type `LicenseManager`  [redundant-cast]
ee/api/test/test_property_definition.py:0: warning: Value is already of type `LicenseManager`  [redundant-cast]
ee/api/test/test_property_definition.py:0: warning: Value is already of type `LicenseManager`  [redundant-cast]
ee/api/test/test_property_definition.py:0: warning: Value is already of type `LicenseManager`  [redundant-cast]
ee/api/test/test_property_definition.py:0: warning: Value is already of type `LicenseManager`  [redundant-cast]
ee/api/test/test_property_definition.py:0: warning: Value is already of type `LicenseManager`  [redundant-cast]
ee/api/test/test_property_definition.py:0: warning: Value is already of type `LicenseManager`  [redundant-cast]
ee/api/test/test_property_definition.py:0: warning: Value is already of type `LicenseManager`  [redundant-cast]
ee/api/test/test_property_definition.py:0: warning: Value is already of type `LicenseManager`  [redundant-cast]
ee/api/test/test_property_definition.py:0: warning: Value is already of type `LicenseManager`  [redundant-cast]
ee/api/test/test_property_definition.py:0: warning: Value is already of type `LicenseManager`  [redundant-cast]
ee/api/test/test_property_definition.py:0: warning: Value is already of type `LicenseManager`  [redundant-cast]
ee/api/test/test_property_definition.py:0: warning: Value is already of type `LicenseManager`  [redundant-cast]
ee/api/test/test_property_definition.py:0: warning: Value is already of type `LicenseManager`  [redundant-cast]
ee/api/test/test_property_definition.py:0: warning: Value is already of type `LicenseManager`  [redundant-cast]
ee/api/test/test_tagged_item.py:0: warning: Value is already of type `LicenseManager`  [redundant-cast]
ee/api/test/test_tagged_item.py:0: warning: Value is already of type `LicenseManager`  [redundant-cast]
ee/api/test/test_tagged_item.py:0: warning: Value is already of type `LicenseManager`  [redundant-cast]
ee/api/test/test_tagged_item.py:0: warning: Value is already of type `LicenseManager`  [redundant-cast]
ee/api/test/test_tagged_item.py:0: warning: Value is already of type `LicenseManager`  [redundant-cast]
ee/api/test/test_tagged_item.py:0: warning: Value is already of type `LicenseManager`  [redundant-cast]
ee/api/vercel/vercel_region_proxy_mixin.py:0: error: Too many positional arguments to function `__new__`: expected 1, got 2  [too-many-positional-arguments]
ee/billing/billing_manager.py:0: warning: Attribute `get` on type `Any | list[Unknown]` may be missing  [possibly-missing-attribute]
ee/billing/queue/BillingConsumer.py:0: error: Object of type `bytes` is not assignable to `str`  [invalid-assignment]
ee/billing/queue/BillingConsumer.py:0: error: Object of type `bytes` is not assignable to `str`  [invalid-assignment]
ee/billing/test/test_billing_manager.py:0: warning: Value is already of type `LicenseManager`  [redundant-cast]
ee/billing/test/test_billing_manager.py:0: warning: Value is already of type `LicenseManager`  [redundant-cast]
ee/billing/test/test_billing_manager.py:0: warning: Value is already of type `LicenseManager`  [redundant-cast]
ee/clickhouse/models/test/test_property.py:0: error: Object of type `Literal[True]` is not assignable to attribute `can_enable_actor_on_events` of type `Literal[False]`  [invalid-assignment]
ee/clickhouse/queries/test/test_cohort_query.py:0: error: Operator `|=` is unsupported between objects of type `str` and `dict[Unknown | str, Unknown | int]`  [unsupported-operator]
ee/hogai/assistant/deep_research_assistant.py:0: error: Argument `notebook_short_id` does not match any known parameter  [unknown-argument]
ee/hogai/django_checkpoint/checkpointer.py:0: error: Missing required key 'channel_versions' in TypedDict `Checkpoint` constructor  [missing-typed-dict-key]
ee/hogai/django_checkpoint/checkpointer.py:0: error: Missing required key 'id' in TypedDict `Checkpoint` constructor  [missing-typed-dict-key]
ee/hogai/django_checkpoint/checkpointer.py:0: error: Missing required key 'ts' in TypedDict `Checkpoint` constructor  [missing-typed-dict-key]
ee/hogai/django_checkpoint/checkpointer.py:0: error: Missing required key 'v' in TypedDict `Checkpoint` constructor  [missing-typed-dict-key]
ee/hogai/django_checkpoint/checkpointer.py:0: error: Missing required key 'versions_seen' in TypedDict `Checkpoint` constructor  [missing-typed-dict-key]
ee/hogai/eval/ci/eval_survey_analysis.py:0: error: Argument `team` does not match any known parameter  [unknown-argument]
ee/hogai/eval/ci/eval_survey_analysis.py:0: error: Argument `user` does not match any known parameter  [unknown-argument]
ee/hogai/eval/ci/eval_survey_analysis.py:0: error: No arguments provided for required parameters `_context`, `_config`, `_state`  [missing-argument]
ee/hogai/eval/ci/eval_surveys.py:0: error: Argument `team` does not match any known parameter  [unknown-argument]
ee/hogai/eval/ci/eval_surveys.py:0: error: Argument `user` does not match any known parameter  [unknown-argument]
ee/hogai/eval/ci/eval_surveys.py:0: error: No arguments provided for required parameters `_context`, `_config`, `_state`  [missing-argument]
ee/hogai/eval/ci/max_tools/eval_hogql_generator_tool.py:0: error: Argument `state` does not match any known parameter  [unknown-argument]
ee/hogai/eval/ci/max_tools/eval_hogql_generator_tool.py:0: error: Argument `team` does not match any known parameter  [unknown-argument]
ee/hogai/eval/ci/max_tools/eval_hogql_generator_tool.py:0: error: Argument `user` does not match any known parameter  [unknown-argument]
ee/hogai/eval/ci/max_tools/eval_hogql_generator_tool.py:0: error: No arguments provided for required parameters `_context`, `_config`, `_state`  [missing-argument]
ee/hogai/eval/ci/max_tools/eval_hogql_generator_tool.py:0: error: Return type does not match returned value: expected `braintrust.score.Score`, found `braintrust_core.score.Score`  [invalid-return-type]
ee/hogai/eval/ci/max_tools/eval_revenue_analytics_filter_generation.py:0: warning: Attribute `date_from` on type `Unknown | None` may be missing  [possibly-missing-attribute]
ee/hogai/eval/ci/max_tools/eval_revenue_analytics_filter_generation.py:0: warning: Attribute `date_from` on type `Unknown | None` may be missing  [possibly-missing-attribute]
ee/hogai/eval/ci/max_tools/eval_revenue_analytics_filter_generation.py:0: warning: Attribute `date_to` on type `Unknown | None` may be missing  [possibly-missing-attribute]
ee/hogai/eval/ci/max_tools/eval_revenue_analytics_filter_generation.py:0: warning: Attribute `date_to` on type `Unknown | None` may be missing  [possibly-missing-attribute]
ee/hogai/eval/ci/max_tools/eval_revenue_analytics_filter_generation.py:0: warning: Attribute `model_dump` on type `Unknown | None` may be missing  [possibly-missing-attribute]
ee/hogai/eval/ci/max_tools/eval_session_replay_filter_generation.py:0: warning: Attribute `date_from` on type `Unknown | None` may be missing  [possibly-missing-attribute]
ee/hogai/eval/ci/max_tools/eval_session_replay_filter_generation.py:0: warning: Attribute `date_from` on type `Unknown | None` may be missing  [possibly-missing-attribute]
ee/hogai/eval/ci/max_tools/eval_session_replay_filter_generation.py:0: warning: Attribute `date_to` on type `Unknown | None` may be missing  [possibly-missing-attribute]
ee/hogai/eval/ci/max_tools/eval_session_replay_filter_generation.py:0: warning: Attribute `date_to` on type `Unknown | None` may be missing  [possibly-missing-attribute]
ee/hogai/eval/ci/max_tools/eval_session_replay_filter_generation.py:0: warning: Attribute `model_dump` on type `Unknown | None` may be missing  [possibly-missing-attribute]
ee/hogai/eval/ci/max_tools/eval_tool_filter_generation.py:0: warning: Attribute `date_from` on type `Unknown | None` may be missing  [possibly-missing-attribute]
ee/hogai/eval/ci/max_tools/eval_tool_filter_generation.py:0: warning: Attribute `date_from` on type `Unknown | None` may be missing  [possibly-missing-attribute]
ee/hogai/eval/ci/max_tools/eval_tool_filter_generation.py:0: warning: Attribute `date_to` on type `Unknown | None` may be missing  [possibly-missing-attribute]
ee/hogai/eval/ci/max_tools/eval_tool_filter_generation.py:0: warning: Attribute `date_to` on type `Unknown | None` may be missing  [possibly-missing-attribute]
ee/hogai/eval/ci/max_tools/eval_tool_filter_generation.py:0: warning: Attribute `model_dump` on type `Unknown | None` may be missing  [possibly-missing-attribute]
ee/hogai/eval/offline/conftest.py:0: error: Variable of type `Never` is not allowed in a type expression  [invalid-type-form]
ee/hogai/eval/offline/eval_sql.py:0: error: Return type does not match returned value: expected `braintrust.score.Score`, found `braintrust_core.score.Score`  [invalid-return-type]
ee/hogai/eval/offline/eval_sql.py:0: error: Return type does not match returned value: expected `braintrust.score.Score`, found `braintrust_core.score.Score`  [invalid-return-type]
ee/hogai/eval/scorers/__init__.py:0: error: Operator `*` is unsupported between objects of type `int | float | None` and `int | float`  [unsupported-operator]
ee/hogai/graph/billing/nodes.py:0: warning: Attribute `append` on type `Any | str | int | ... omitted 3 union elements` may be missing  [possibly-missing-attribute]
ee/hogai/graph/dashboards/nodes.py:0: error: Argument `max_completion_tokens` does not match any known parameter  [unknown-argument]
ee/hogai/graph/dashboards/nodes.py:0: error: Argument `model` does not match any known parameter  [unknown-argument]
ee/hogai/graph/funnels/test/test_nodes.py:0: warning: Attribute `funnelAggregateByHogQL` on type `AssistantFunnelsFilter | None` may be missing  [possibly-missing-attribute]
ee/hogai/graph/insights/nodes.py:0: error: Argument `max_completion_tokens` does not match any known parameter  [unknown-argument]
ee/hogai/graph/insights/nodes.py:0: error: Argument `model` does not match any known parameter  [unknown-argument]
ee/hogai/graph/memory/test/test_nodes.py:0: warning: Attribute `messages` on type `PartialAssistantState | None` may be missing  [possibly-missing-attribute]
ee/hogai/graph/memory/test/test_nodes.py:0: warning: Attribute `messages` on type `PartialAssistantState | None` may be missing  [possibly-missing-attribute]
ee/hogai/graph/memory/test/test_nodes.py:0: warning: Attribute `messages` on type `PartialAssistantState | None` may be missing  [possibly-missing-attribute]
ee/hogai/graph/memory/test/test_nodes.py:0: warning: Attribute `messages` on type `PartialAssistantState | None` may be missing  [possibly-missing-attribute]
ee/hogai/graph/parallel_task_execution/mixins.py:0: error: Argument `model` does not match any known parameter  [unknown-argument]
ee/hogai/graph/parallel_task_execution/test/test_nodes.py:0: error: Argument `messages` does not match any known parameter  [unknown-argument]
ee/hogai/graph/parallel_task_execution/test/test_nodes.py:0: error: Argument `messages` does not match any known parameter  [unknown-argument]
ee/hogai/graph/parallel_task_execution/test/test_nodes.py:0: error: Argument `messages` does not match any known parameter  [unknown-argument]
ee/hogai/graph/parallel_task_execution/test/test_nodes.py:0: error: Argument `messages` does not match any known parameter  [unknown-argument]
ee/hogai/graph/parallel_task_execution/test/test_nodes.py:0: error: Argument `messages` does not match any known parameter  [unknown-argument]
ee/hogai/graph/parallel_task_execution/test/test_nodes.py:0: error: Argument `messages` does not match any known parameter  [unknown-argument]
ee/hogai/graph/parallel_task_execution/test/test_nodes.py:0: error: Argument `messages` does not match any known parameter  [unknown-argument]
ee/hogai/graph/parallel_task_execution/test/test_nodes.py:0: error: Argument `messages` does not match any known parameter  [unknown-argument]
ee/hogai/graph/parallel_task_execution/test/test_nodes.py:0: error: Argument `messages` does not match any known parameter  [unknown-argument]
ee/hogai/graph/parallel_task_execution/test/test_nodes.py:0: error: Argument `messages` does not match any known parameter  [unknown-argument]
ee/hogai/graph/query_executor/nodes.py:0: warning: Attribute `funnelsFilter` on type `AssistantTrendsQuery | AssistantFunnelsQuery | AssistantRetentionQuery | ... omitted 9 union elements` may be missing  [possibly-missing-attribute]
ee/hogai/graph/query_executor/nodes.py:0: warning: Attribute `funnelsFilter` on type `AssistantTrendsQuery | AssistantFunnelsQuery | AssistantRetentionQuery | ... omitted 9 union elements` may be missing  [possibly-missing-attribute]
ee/hogai/graph/query_executor/nodes.py:0: warning: Attribute `funnelsFilter` on type `AssistantTrendsQuery | AssistantFunnelsQuery | AssistantRetentionQuery | ... omitted 9 union elements` may be missing  [possibly-missing-attribute]
ee/hogai/graph/query_executor/nodes.py:0: warning: Attribute `funnelsFilter` on type `AssistantTrendsQuery | AssistantFunnelsQuery | AssistantRetentionQuery | ... omitted 9 union elements` may be missing  [possibly-missing-attribute]
ee/hogai/graph/schema_generator/test/test_nodes.py:0: warning: Value is already of type `PartialAssistantState`  [redundant-cast]
ee/hogai/graph/schema_generator/test/test_nodes.py:0: warning: Value is already of type `PartialAssistantState`  [redundant-cast]
ee/hogai/graph/session_summaries/nodes.py:0: error: Argument `team` does not match any known parameter  [unknown-argument]
ee/hogai/graph/session_summaries/nodes.py:0: error: Argument `user` does not match any known parameter  [unknown-argument]
ee/hogai/graph/session_summaries/nodes.py:0: error: No arguments provided for required parameters `_context`, `_config`, `_state`  [missing-argument]
ee/hogai/graph/taxonomy/test/test_nodes.py:0: error: Invalid key access on TypedDict `InitErrorDetails`: Unknown key "msg" - did you mean "loc"?  [invalid-key]
ee/hogai/graph/taxonomy/test/test_nodes.py:0: error: Missing required key 'input' in TypedDict `InitErrorDetails` constructor  [missing-typed-dict-key]
ee/hogai/graph/taxonomy/test/test_toolkit.py:0: error: Cannot subscript object of type `None` with no `__getitem__` method  [non-subscriptable]
ee/hogai/graph/taxonomy/test/test_toolkit.py:0: error: Cannot subscript object of type `None` with no `__getitem__` method  [non-subscriptable]
ee/hogai/notebook/test_notebook_serializer.py:0: warning: Attribute `query` on type `TrendsQuery | FunnelsQuery | RetentionQuery | HogQLQuery` may be missing  [possibly-missing-attribute]
ee/hogai/summarizers/chains.py:0: error: Argument `model` does not match any known parameter  [unknown-argument]
ee/hogai/summarizers/test/test_property_filters.py:0: warning: Attribute `description` on type `PropertyFilterTaxonomyEntry | None` may be missing  [possibly-missing-attribute]
ee/hogai/summarizers/test/test_property_filters.py:0: warning: Attribute `description` on type `PropertyFilterTaxonomyEntry | None` may be missing  [possibly-missing-attribute]
ee/hogai/summarizers/test/test_property_filters.py:0: warning: Attribute `description` on type `PropertyFilterTaxonomyEntry | None` may be missing  [possibly-missing-attribute]
ee/hogai/summarizers/test/test_property_filters.py:0: warning: Attribute `group` on type `PropertyFilterTaxonomyEntry | None` may be missing  [possibly-missing-attribute]
ee/hogai/summarizers/test/test_property_filters.py:0: warning: Attribute `group` on type `PropertyFilterTaxonomyEntry | None` may be missing  [possibly-missing-attribute]
ee/hogai/summarizers/test/test_property_filters.py:0: warning: Attribute `group` on type `PropertyFilterTaxonomyEntry | None` may be missing  [possibly-missing-attribute]
ee/hogai/summarizers/test/test_property_filters.py:0: warning: Attribute `key` on type `PropertyFilterTaxonomyEntry | None` may be missing  [possibly-missing-attribute]
ee/hogai/summarizers/test/test_property_filters.py:0: warning: Attribute `key` on type `PropertyFilterTaxonomyEntry | None` may be missing  [possibly-missing-attribute]
ee/hogai/summarizers/test/test_property_filters.py:0: warning: Attribute `key` on type `PropertyFilterTaxonomyEntry | None` may be missing  [possibly-missing-attribute]
ee/hogai/utils/test/test_format_events_prompt.py:0: warning: Attribute `find` on type `Element[str] | None` may be missing  [possibly-missing-attribute]
ee/hogai/utils/test/test_format_events_prompt.py:0: warning: Attribute `find` on type `Element[str] | None` may be missing  [possibly-missing-attribute]
ee/hogai/utils/test/test_format_events_prompt.py:0: warning: Attribute `text` on type `Element[str] | None` may be missing  [possibly-missing-attribute]
ee/hogai/utils/tests.py:0: error: Argument `api_key` does not match any known parameter  [unknown-argument]
ee/hogai/utils/tests.py:0: error: Argument `model` does not match any known parameter  [unknown-argument]
ee/hogai/utils/yaml.py:0: error: Argument `model` does not match any known parameter  [unknown-argument]
ee/management/commands/materialize_columns.py:0: error: Object of type `Unknown | None` may not be iterable  [not-iterable]
ee/management/commands/materialize_columns.py:0: warning: Member `MATERIALIZE_COLUMNS_ANALYSIS_PERIOD_HOURS` of module `posthog.settings` may be missing  [possibly-missing-import]
ee/management/commands/materialize_columns.py:0: warning: Member `MATERIALIZE_COLUMNS_BACKFILL_PERIOD_DAYS` of module `posthog.settings` may be missing  [possibly-missing-import]
ee/management/commands/materialize_columns.py:0: warning: Member `MATERIALIZE_COLUMNS_MAX_AT_ONCE` of module `posthog.settings` may be missing  [possibly-missing-import]
ee/management/commands/materialize_columns.py:0: warning: Member `MATERIALIZE_COLUMNS_MINIMUM_QUERY_TIME` of module `posthog.settings` may be missing  [possibly-missing-import]
ee/models/test/test_session_summaries.py:0: warning: Attribute `team_id` on type `(Unknown & ~None) | SingleSessionSummary` may be missing  [possibly-missing-attribute]
ee/models/test/test_session_summaries.py:0: warning: Attribute `team_id` on type `Unknown | SingleSessionSummary` may be missing  [possibly-missing-attribute]
ee/tasks/auto_rollback_feature_flag.py:0: warning: The function `utcnow` is deprecated: Use timezone-aware objects to represent datetimes in UTC; e.g. by calling .now(datetime.timezone.utc)  [deprecated]
ee/tasks/subscriptions/__init__.py:0: warning: Attribute `PARALLEL_ASSET_GENERATION_MAX_TIMEOUT_MINUTES` on type `<module 'posthog.settings'>` may be missing  [possibly-missing-attribute]
ee/tasks/subscriptions/__init__.py:0: warning: The function `utcnow` is deprecated: Use timezone-aware objects to represent datetimes in UTC; e.g. by calling .now(datetime.timezone.utc)  [deprecated]
ee/tasks/test/subscriptions/test_subscriptions.py:0: warning: Attribute `id` on type `Unknown | Subscription` may be missing  [possibly-missing-attribute]
ee/tasks/test/subscriptions/test_subscriptions.py:0: warning: Attribute `id` on type `Unknown | Subscription` may be missing  [possibly-missing-attribute]
posthog/api/batch_imports.py:0: warning: Attribute `distinct_id` on type `@Todo | AnonymousUser` may be missing  [possibly-missing-attribute]
posthog/api/batch_imports.py:0: warning: Attribute `distinct_id` on type `@Todo | AnonymousUser` may be missing  [possibly-missing-attribute]
posthog/api/dead_letter_queue.py:0: error: Return type does not match returned value: expected `int`, found `Literal["-"] | Unknown`  [invalid-return-type]
posthog/api/decide.py:0: warning: Attribute `id` on type `(Team & ~AlwaysFalsy) | (Unknown & ~AlwaysFalsy)` may be missing  [possibly-missing-attribute]
posthog/api/decide.py:0: warning: Attribute `id` on type `(Team & ~AlwaysFalsy) | (Unknown & ~AlwaysFalsy)` may be missing  [possibly-missing-attribute]
posthog/api/decide.py:0: warning: Attribute `id` on type `(Team & ~AlwaysFalsy) | (Unknown & ~AlwaysFalsy)` may be missing  [possibly-missing-attribute]
posthog/api/decide.py:0: warning: Attribute `id` on type `(Team & ~AlwaysFalsy) | (Unknown & ~AlwaysFalsy)` may be missing  [possibly-missing-attribute]
posthog/api/error_tracking.py:0: warning: Member `sync_execute` of module `posthog.models.plugin` may be missing  [possibly-missing-import]
posthog/api/event_definition.py:0: error: Return type does not match returned value: expected `list[tuple[str, Literal["ASC", "DESC"]]]`, found `(list[Unknown] & ~AlwaysFalsy) | list[Unknown | tuple[str, str]]`  [invalid-return-type]
posthog/api/feature_flag.py:0: warning: Attribute `distinct_id` on type `@Todo | AnonymousUser` may be missing  [possibly-missing-attribute]
posthog/api/integration.py:0: error: Object of type `Unknown | None` is not assignable to `str`  [invalid-assignment]
posthog/api/plugin.py:0: warning: Attribute `read` on type `IO[Unknown] | None` may be missing  [possibly-missing-attribute]
posthog/api/plugin.py:0: warning: Attribute `read` on type `IO[Unknown] | None` may be missing  [possibly-missing-attribute]
posthog/api/team.py:0: warning: Attribute `id` on type `(Team & ~AlwaysFalsy) | (Project & ~AlwaysFalsy)` may be missing  [possibly-missing-attribute]
posthog/api/test/batch_exports/conftest.py:0: warning: The function `warn` is deprecated: Deprecated since Python 3.3. Use `warning()` instead.  [deprecated]
posthog/api/test/batch_exports/test_create.py:0: warning: Attribute `pop` on type `Unknown | str | dict[Unknown | str, Unknown | str | bool] | None` may be missing  [possibly-missing-attribute]
posthog/api/test/batch_exports/test_create.py:0: warning: Attribute `pop` on type `Unknown | str | dict[Unknown | str, Unknown | str | bool] | None` may be missing  [possibly-missing-attribute]
posthog/api/test/batch_exports/test_update.py:0: warning: Method `__setitem__` of type `Unknown | str | dict[Unknown | str, Unknown | str]` may be missing  [possibly-missing-implicit-call]
posthog/api/test/batch_exports/test_update.py:0: warning: Method `__setitem__` of type `Unknown | str | dict[Unknown | str, Unknown | str]` may be missing  [possibly-missing-implicit-call]
posthog/api/test/test_authentication.py:0: error: Too many positional arguments to function `__new__`: expected 1, got 2  [too-many-positional-arguments]
posthog/api/test/test_authentication.py:0: error: Too many positional arguments to function `__new__`: expected 1, got 2  [too-many-positional-arguments]
posthog/api/test/test_authentication.py:0: error: Too many positional arguments to function `__new__`: expected 1, got 2  [too-many-positional-arguments]
posthog/api/test/test_authentication.py:0: error: Too many positional arguments to function `__new__`: expected 1, got 2  [too-many-positional-arguments]
posthog/api/test/test_authentication.py:0: error: Too many positional arguments to function `__new__`: expected 1, got 2  [too-many-positional-arguments]
posthog/api/test/test_authentication.py:0: error: Too many positional arguments to function `__new__`: expected 1, got 2  [too-many-positional-arguments]
posthog/api/test/test_authentication.py:0: error: Too many positional arguments to function `__new__`: expected 1, got 2  [too-many-positional-arguments]
posthog/api/test/test_authentication.py:0: error: Too many positional arguments to function `__new__`: expected 1, got 2  [too-many-positional-arguments]
posthog/api/test/test_authentication.py:0: error: Too many positional arguments to function `__new__`: expected 1, got 2  [too-many-positional-arguments]
posthog/api/test/test_authentication.py:0: error: Too many positional arguments to function `__new__`: expected 1, got 2  [too-many-positional-arguments]
posthog/api/test/test_authentication.py:0: error: Too many positional arguments to function `__new__`: expected 1, got 2  [too-many-positional-arguments]
posthog/api/test/test_authentication.py:0: error: Too many positional arguments to function `__new__`: expected 1, got 2  [too-many-positional-arguments]
posthog/api/test/test_authentication.py:0: error: Too many positional arguments to function `__new__`: expected 1, got 2  [too-many-positional-arguments]
posthog/api/test/test_authentication.py:0: error: Too many positional arguments to function `__new__`: expected 1, got 2  [too-many-positional-arguments]
posthog/api/test/test_authentication.py:0: error: Too many positional arguments to function `__new__`: expected 1, got 2  [too-many-positional-arguments]
posthog/api/test/test_authentication.py:0: error: Too many positional arguments to function `__new__`: expected 1, got 2  [too-many-positional-arguments]
posthog/api/test/test_authentication.py:0: error: Too many positional arguments to function `__new__`: expected 1, got 2  [too-many-positional-arguments]
posthog/api/test/test_authentication.py:0: error: Too many positional arguments to function `__new__`: expected 1, got 2  [too-many-positional-arguments]
posthog/api/test/test_feature_flag.py:0: warning: Value is already of type `LicenseManager`  [redundant-cast]
posthog/api/test/test_personal_api_keys.py:0: warning: The function `dict` is deprecated: The `dict` method is deprecated; use `model_dump` instead.  [deprecated]
posthog/api/test/test_preflight.py:0: warning: Value is already of type `LicenseManager`  [redundant-cast]
posthog/api/test/test_preflight.py:0: warning: Value is already of type `LicenseManager`  [redundant-cast]
posthog/api/test/test_query.py:0: warning: The function `dict` is deprecated: The `dict` method is deprecated; use `model_dump` instead.  [deprecated]
posthog/api/test/test_query.py:0: warning: The function `dict` is deprecated: The `dict` method is deprecated; use `model_dump` instead.  [deprecated]
posthog/api/test/test_query.py:0: warning: The function `dict` is deprecated: The `dict` method is deprecated; use `model_dump` instead.  [deprecated]
posthog/api/test/test_query.py:0: warning: The function `dict` is deprecated: The `dict` method is deprecated; use `model_dump` instead.  [deprecated]
posthog/api/test/test_query.py:0: warning: The function `dict` is deprecated: The `dict` method is deprecated; use `model_dump` instead.  [deprecated]
posthog/api/test/test_query.py:0: warning: The function `dict` is deprecated: The `dict` method is deprecated; use `model_dump` instead.  [deprecated]
posthog/api/test/test_query.py:0: warning: The function `dict` is deprecated: The `dict` method is deprecated; use `model_dump` instead.  [deprecated]
posthog/api/test/test_query.py:0: warning: The function `dict` is deprecated: The `dict` method is deprecated; use `model_dump` instead.  [deprecated]
posthog/api/test/test_query.py:0: warning: The function `dict` is deprecated: The `dict` method is deprecated; use `model_dump` instead.  [deprecated]
posthog/api/test/test_query.py:0: warning: The function `dict` is deprecated: The `dict` method is deprecated; use `model_dump` instead.  [deprecated]
posthog/api/test/test_query.py:0: warning: The function `dict` is deprecated: The `dict` method is deprecated; use `model_dump` instead.  [deprecated]
posthog/api/test/test_query.py:0: warning: The function `dict` is deprecated: The `dict` method is deprecated; use `model_dump` instead.  [deprecated]
posthog/api/test/test_query.py:0: warning: The function `dict` is deprecated: The `dict` method is deprecated; use `model_dump` instead.  [deprecated]
posthog/api/test/test_query.py:0: warning: The function `dict` is deprecated: The `dict` method is deprecated; use `model_dump` instead.  [deprecated]
posthog/api/test/test_query.py:0: warning: The function `dict` is deprecated: The `dict` method is deprecated; use `model_dump` instead.  [deprecated]
posthog/api/test/test_query.py:0: warning: The function `dict` is deprecated: The `dict` method is deprecated; use `model_dump` instead.  [deprecated]
posthog/api/test/test_query.py:0: warning: The function `dict` is deprecated: The `dict` method is deprecated; use `model_dump` instead.  [deprecated]
posthog/api/test/test_query.py:0: warning: The function `dict` is deprecated: The `dict` method is deprecated; use `model_dump` instead.  [deprecated]
posthog/api/test/test_query.py:0: warning: The function `dict` is deprecated: The `dict` method is deprecated; use `model_dump` instead.  [deprecated]
posthog/api/test/test_query.py:0: warning: The function `dict` is deprecated: The `dict` method is deprecated; use `model_dump` instead.  [deprecated]
posthog/api/test/test_query.py:0: warning: The function `dict` is deprecated: The `dict` method is deprecated; use `model_dump` instead.  [deprecated]
posthog/api/test/test_signup.py:0: warning: Value is already of type `LicenseManager`  [redundant-cast]
posthog/api/test/test_signup.py:0: warning: Value is already of type `LicenseManager`  [redundant-cast]
posthog/api/test/test_signup.py:0: warning: Value is already of type `LicenseManager`  [redundant-cast]
posthog/api/test/test_signup.py:0: warning: Value is already of type `LicenseManager`  [redundant-cast]
posthog/api/test/test_utils.py:0: error: Object of type `dict[Unknown | str, Unknown | str]` is not assignable to attribute `POST` of type `_ImmutableQueryDict`  [invalid-assignment]
posthog/api/user.py:0: warning: Value is already of type `User`  [redundant-cast]
posthog/apps.py:0: error: Object of type `Literal["phc_ex7Mnvi4DqeB6xSQoXU1UVPzAmUIpiciRKQQXGGTYQO"]` is not assignable to attribute `api_key` of type `None`  [invalid-assignment]
posthog/apps.py:0: error: Object of type `Literal["sTMFPsFhdP1Ssg"]` is not assignable to attribute `api_key` of type `None`  [invalid-assignment]
posthog/apps.py:0: error: Object of type `Literal[90]` is not assignable to attribute `poll_interval` of type `Literal[30]`  [invalid-assignment]
posthog/apps.py:0: error: Object of type `Literal[True]` is not assignable to attribute `disabled` of type `Literal[False]`  [invalid-assignment]
posthog/apps.py:0: error: Object of type `Literal[True]` is not assignable to attribute `disabled` of type `Literal[False]`  [invalid-assignment]
posthog/apps.py:0: error: Object of type `Literal[True]` is not assignable to attribute `enable_exception_autocapture` of type `Literal[False]`  [invalid-assignment]
posthog/apps.py:0: error: Object of type `Literal[True]` is not assignable to attribute `log_captured_exceptions` of type `Literal[False]`  [invalid-assignment]
posthog/apps.py:0: error: Object of type `dict[Unknown | str, Unknown | str | None]` is not assignable to attribute `super_properties` of type `None`  [invalid-assignment]
posthog/apps.py:0: error: Object of type `str | None` is not assignable to attribute `personal_api_key` of type `None`  [invalid-assignment]
posthog/async_migrations/utils.py:0: error: Object of type `Literal["sTMFPsFhdP1Ssg"]` is not assignable to attribute `project_api_key` of type `None`  [invalid-assignment]
posthog/auth.py:0: error: Too many positional arguments to function `__new__`: expected 1, got 2  [too-many-positional-arguments]
posthog/caching/test/test_should_refresh_insight.py:0: error: Too many positional arguments to function `__new__`: expected 1, got 2  [too-many-positional-arguments]
posthog/caching/test/test_should_refresh_insight.py:0: error: Too many positional arguments to function `__new__`: expected 1, got 2  [too-many-positional-arguments]
posthog/caching/test/test_should_refresh_insight.py:0: error: Too many positional arguments to function `__new__`: expected 1, got 2  [too-many-positional-arguments]
posthog/caching/test/test_should_refresh_insight.py:0: error: Too many positional arguments to function `__new__`: expected 1, got 2  [too-many-positional-arguments]
posthog/cdp/migrations.py:0: warning: Attribute `id` on type `(Team & ~AlwaysFalsy) | (Unknown & ~AlwaysFalsy)` may be missing  [possibly-missing-attribute]
posthog/cdp/templates/hubspot/template_hubspot.py:0: warning: Method `__setitem__` of type `Unknown | str | dict[Unknown | str, Unknown | str]` may be missing  [possibly-missing-implicit-call]
posthog/cdp/templates/sendgrid/template_sendgrid.py:0: warning: Method `__setitem__` of type `Unknown | str | dict[Unknown, Unknown]` may be missing  [possibly-missing-implicit-call]
posthog/cdp/templates/sendgrid/template_sendgrid.py:0: warning: Method `__setitem__` of type `Unknown | str | dict[Unknown, Unknown]` may be missing  [possibly-missing-implicit-call]
posthog/celery.py:0: error: Cannot subscript object of type `None` with no `__getitem__` method  [non-subscriptable]
posthog/celery.py:0: warning: Attribute `connect` on type `Unknown | None | Signal` may be missing  [possibly-missing-attribute]
posthog/clickhouse/client/connection.py:0: warning: Method `__setitem__` of type `Unknown | None` may be missing  [possibly-missing-implicit-call]
posthog/clickhouse/cluster.py:0: error: No overload of function `field` matches arguments  [no-matching-overload]
posthog/clickhouse/cluster.py:0: error: No overload of function `field` matches arguments  [no-matching-overload]
posthog/helpers/encrypted_fields.py:0: error: `Unknown & ~<Protocol with members '_already_decrypted'>` is not an instance or subclass of `<class 'EncryptedFieldMixin'>` in `super(<class 'EncryptedFieldMixin'>, Unknown & ~<Protocol with members '_already_decrypted'>)` call  [invalid-super-argument]
posthog/hogql/autocomplete.py:0: warning: Attribute `query` on type `(EventsNode & ~AlwaysFalsy) | (ActionsNode & ~AlwaysFalsy) | (PersonsNode & ~AlwaysFalsy) | ... omitted 40 union elements` may be missing  [possibly-missing-attribute]
posthog/hogql/autocomplete.py:0: warning: Attribute `query` on type `(EventsNode & ~AlwaysFalsy) | (ActionsNode & ~AlwaysFalsy) | (PersonsNode & ~AlwaysFalsy) | ... omitted 40 union elements` may be missing  [possibly-missing-attribute]
posthog/hogql/autocomplete.py:0: warning: Value is already of type `SelectQuery`  [redundant-cast]
posthog/hogql/database/database.py:0: error: Argument `schema` does not match any known parameter  [unknown-argument]
posthog/hogql/database/schema/persons.py:0: warning: Value is already of type `And`  [redundant-cast]
posthog/hogql/filters.py:0: error: Default value of type `None` is not assignable to annotated parameter type `Team`  [invalid-parameter-default]
posthog/hogql/parser.py:0: error: Return type does not match returned value: expected `Call`, found `Unknown | Expr`  [invalid-return-type]
posthog/hogql/parser.py:0: error: Return type does not match returned value: expected `OrderExpr`, found `Unknown | Expr`  [invalid-return-type]
posthog/hogql/parser.py:0: error: Return type does not match returned value: expected `SelectQuery | SelectSetQuery`, found `Unknown | Expr`  [invalid-return-type]
posthog/hogql/parser.py:0: warning: Value is already of type `Literal["ASC", "DESC"]`  [redundant-cast]
posthog/hogql/parser.py:0: warning: Value is already of type `Literal["expr", "order_expr", "select", "full_template_string"]`  [redundant-cast]
posthog/hogql/printer.py:0: error: No overload of bound method `join` matches arguments  [no-matching-overload]
posthog/hogql/printer.py:0: error: Object of type `list[Expr] | None` may not be iterable  [not-iterable]
posthog/hogql/property.py:0: warning: Attribute `startswith` on type `str | int` may be missing  [possibly-missing-attribute]
posthog/hogql/resolver.py:0: error: Object of type `Expr` is not assignable to attribute `table` of type `SelectQuery | SelectSetQuery | Placeholder | ... omitted 3 union elements`  [invalid-assignment]
posthog/hogql/transforms/in_cohort.py:0: warning: Attribute `expr` on type `JoinConstraint | None` may be missing  [possibly-missing-attribute]
posthog/hogql/transforms/in_cohort.py:0: warning: Attribute `expr` on type `JoinConstraint | None` may be missing  [possibly-missing-attribute]
posthog/hogql/transforms/lazy_tables.py:0: error: Object of type `dict[Unknown, Unknown]` is not assignable to `list[ConstraintOverride]`  [invalid-assignment]
posthog/hogql/transforms/lazy_tables.py:0: warning: Value is already of type `LazyTable`  [redundant-cast]
posthog/hogql/transforms/property_types.py:0: warning: Attribute `project_id` on type `(Team & ~AlwaysFalsy) | (Unknown & ~AlwaysFalsy)` may be missing  [possibly-missing-attribute]
posthog/hogql/transforms/property_types.py:0: warning: Attribute `project_id` on type `(Team & ~AlwaysFalsy) | (Unknown & ~AlwaysFalsy)` may be missing  [possibly-missing-attribute]
posthog/hogql/transforms/property_types.py:0: warning: Attribute `project_id` on type `(Team & ~AlwaysFalsy) | (Unknown & ~AlwaysFalsy)` may be missing  [possibly-missing-attribute]
posthog/hogql_queries/actor_strategies.py:0: warning: Value is already of type `Literal["ASC", "DESC"]`  [redundant-cast]
posthog/hogql_queries/actor_strategies.py:0: warning: Value is already of type `Literal["ASC", "DESC"]`  [redundant-cast]
posthog/hogql_queries/actors_query_runner.py:0: warning: Attribute `modifiers` on type `QueryRunner[Unknown, Unknown, Unknown] | None` may be missing  [possibly-missing-attribute]
posthog/hogql_queries/experiments/exposure_query_logic.py:0: error: Return type does not match returned value: expected `str`, found `(~AlwaysFalsy & ~Literal["$feature_flag_called"]) | Literal["$feature_flag_called"]`  [invalid-return-type]
posthog/hogql_queries/experiments/test/test_experiment_trends_query_runner.py:0: warning: Attribute `id` on type `Unknown | Team` may be missing  [possibly-missing-attribute]
posthog/hogql_queries/experiments/test/test_experiment_trends_query_runner.py:0: warning: Attribute `id` on type `Unknown | Team` may be missing  [possibly-missing-attribute]
posthog/hogql_queries/hogql_cohort_query.py:0: warning: Unsupported class base with type `<class 'EnterpriseCohortQuery'> | <class 'FOSSCohortQuery'>`  [unsupported-base]
posthog/hogql_queries/insights/funnels/test/test_funnel_persons.py:0: warning: Member `bulk_create_persons` of module `posthog.models.person.util` may be missing  [possibly-missing-import]
posthog/hogql_queries/insights/funnels/test/test_funnel_trends.py:0: warning: Value is already of type `FunnelsQueryResponse`  [redundant-cast]
posthog/hogql_queries/insights/funnels/test/test_funnel_trends_udf.py:0: warning: Value is already of type `FunnelsQueryResponse`  [redundant-cast]
posthog/hogql_queries/insights/funnels/test/test_funnel_trends_udf.py:0: warning: Value is already of type `FunnelsQueryResponse`  [redundant-cast]
posthog/hogql_queries/insights/funnels/test/test_funnel_udf.py:0: warning: Value is already of type `FunnelsQueryResponse`  [redundant-cast]
posthog/hogql_queries/insights/funnels/test/test_funnel_udf.py:0: warning: Value is already of type `FunnelsQueryResponse`  [redundant-cast]
posthog/hogql_queries/insights/paginators.py:0: warning: Value is already of type `HogQLQueryResponse`  [redundant-cast]
posthog/hogql_queries/insights/test/test_paths_query_runner.py:0: warning: The function `dict` is deprecated: The `dict` method is deprecated; use `model_dump` instead.  [deprecated]
posthog/hogql_queries/insights/test/test_paths_query_runner.py:0: warning: The function `dict` is deprecated: The `dict` method is deprecated; use `model_dump` instead.  [deprecated]
posthog/hogql_queries/insights/test/test_paths_query_runner.py:0: warning: The function `dict` is deprecated: The `dict` method is deprecated; use `model_dump` instead.  [deprecated]
posthog/hogql_queries/insights/test/test_paths_query_runner.py:0: warning: The function `dict` is deprecated: The `dict` method is deprecated; use `model_dump` instead.  [deprecated]
posthog/hogql_queries/insights/test/test_paths_query_runner.py:0: warning: The function `dict` is deprecated: The `dict` method is deprecated; use `model_dump` instead.  [deprecated]
posthog/hogql_queries/insights/test/test_paths_query_runner.py:0: warning: The function `dict` is deprecated: The `dict` method is deprecated; use `model_dump` instead.  [deprecated]
posthog/hogql_queries/insights/test/test_paths_query_runner.py:0: warning: The function `dict` is deprecated: The `dict` method is deprecated; use `model_dump` instead.  [deprecated]
posthog/hogql_queries/insights/test/test_paths_query_runner.py:0: warning: The function `dict` is deprecated: The `dict` method is deprecated; use `model_dump` instead.  [deprecated]
posthog/hogql_queries/insights/test/test_paths_query_runner.py:0: warning: The function `dict` is deprecated: The `dict` method is deprecated; use `model_dump` instead.  [deprecated]
posthog/hogql_queries/insights/test/test_paths_query_runner.py:0: warning: The function `dict` is deprecated: The `dict` method is deprecated; use `model_dump` instead.  [deprecated]
posthog/hogql_queries/insights/test/test_paths_query_runner.py:0: warning: The function `dict` is deprecated: The `dict` method is deprecated; use `model_dump` instead.  [deprecated]
posthog/hogql_queries/insights/test/test_paths_query_runner.py:0: warning: The function `dict` is deprecated: The `dict` method is deprecated; use `model_dump` instead.  [deprecated]
posthog/hogql_queries/insights/test/test_paths_query_runner.py:0: warning: The function `dict` is deprecated: The `dict` method is deprecated; use `model_dump` instead.  [deprecated]
posthog/hogql_queries/insights/trends/trends_query_runner.py:0: error: Object of type `Unknown | list[Unknown] | int | ... omitted 3 union elements` may not be iterable  [not-iterable]
posthog/hogql_queries/insights/trends/trends_query_runner.py:0: warning: Attribute `get` on type `Unknown | list[Unknown] | int | ... omitted 3 union elements` may be missing  [possibly-missing-attribute]
posthog/hogql_queries/insights/utils/entities.py:0: error: Argument `detail` does not match any known parameter of bound method `__init__`  [unknown-argument]
posthog/hogql_queries/insights/utils/entities.py:0: warning: Attribute `event` on type `EntityNode | ExclusionEntityNode` may be missing  [possibly-missing-attribute]
posthog/hogql_queries/insights/utils/entities.py:0: warning: Attribute `event` on type `EntityNode` may be missing  [possibly-missing-attribute]
posthog/hogql_queries/insights/utils/entities.py:0: warning: Attribute `id` on type `EntityNode | ExclusionEntityNode` may be missing  [possibly-missing-attribute]
posthog/hogql_queries/insights/utils/entities.py:0: warning: Attribute `id` on type `EntityNode` may be missing  [possibly-missing-attribute]
posthog/hogql_queries/legacy_compatibility/filter_to_query.py:0: warning: Attribute `model_dump` on type `(ActionsNode & ~EventsNode) | (DataWarehouseNode & ~EventsNode) | str` may be missing  [possibly-missing-attribute]
posthog/hogql_queries/query_runner.py:0: error: Object of type `Unknown | bool | None` is not assignable to `list[Unknown] | None`  [invalid-assignment]
posthog/hogql_queries/query_runner.py:0: error: Object of type `dict[Unknown | bool, Unknown | Enum]` is not assignable to `dict[str | bool, ExecutionMode]`  [invalid-assignment]
posthog/hogql_queries/query_runner.py:0: warning: Method `__setitem__` of type `dict[Unknown, Unknown] | None` may be missing  [possibly-missing-implicit-call]
posthog/hogql_queries/utils/formula_ast.py:0: warning: The class `Num` is deprecated: Removed in Python 3.14. Use `ast.Constant` instead.  [deprecated]
posthog/hogql_queries/utils/query_date_range.py:0: error: Default value of type `None` is not assignable to annotated parameter type `Expr`  [invalid-parameter-default]
posthog/hogql_queries/utils/query_date_range.py:0: error: Function can implicitly return `None`, which is not assignable to return type `datetime`  [invalid-return-type]
posthog/management/commands/analyze_behavioral_cohorts.py:0: warning: The function `utcnow` is deprecated: Use timezone-aware objects to represent datetimes in UTC; e.g. by calling .now(datetime.timezone.utc)  [deprecated]
posthog/management/commands/background_delete_model.py:0: warning: Attribute `split` on type `@Todo | None` may be missing  [possibly-missing-attribute]
posthog/management/commands/compare_hogql_insights.py:0: error: Object of type `(Unknown & ~AlwaysFalsy) | (int & ~AlwaysFalsy) | list[Unknown]` may not be iterable  [not-iterable]
posthog/management/commands/compare_hogql_insights.py:0: error: Object of type `(Unknown & ~AlwaysFalsy) | (int & ~AlwaysFalsy) | list[Unknown]` may not be iterable  [not-iterable]
posthog/management/commands/notify_helm_install.py:0: error: Object of type `Literal["sTMFPsFhdP1Ssg"]` is not assignable to attribute `api_key` of type `None`  [invalid-assignment]
posthog/management/commands/plugin_server_load_test.py:0: warning: Attribute `api_token` on type `Unknown | None` may be missing  [possibly-missing-attribute]
posthog/management/commands/run_autoreload_celery.py:0: error: Implicit shadowing of function `iter_all_python_module_files`  [invalid-assignment]
posthog/management/commands/run_rbac_migrations.py:0: error: Cannot subscript object of type `int` with no `__getitem__` method  [non-subscriptable]
posthog/management/commands/run_rbac_migrations.py:0: error: Cannot subscript object of type `int` with no `__getitem__` method  [non-subscriptable]
posthog/management/commands/run_rbac_migrations.py:0: error: Cannot subscript object of type `int` with no `__getitem__` method  [non-subscriptable]
posthog/management/commands/run_rbac_migrations.py:0: error: Operator `+=` is unsupported between objects of type `list[Unknown]` and `Literal[1]`  [unsupported-operator]
posthog/management/commands/run_rbac_migrations.py:0: error: Operator `+=` is unsupported between objects of type `list[Unknown]` and `Literal[1]`  [unsupported-operator]
posthog/management/commands/run_rbac_migrations.py:0: error: Operator `+=` is unsupported between objects of type `list[Unknown]` and `Literal[1]`  [unsupported-operator]
posthog/management/commands/run_rbac_migrations.py:0: warning: Attribute `append` on type `Any | int | list[Unknown]` may be missing  [possibly-missing-attribute]
posthog/management/commands/run_rbac_migrations.py:0: warning: Attribute `append` on type `Any | int | list[Unknown]` may be missing  [possibly-missing-attribute]
posthog/management/commands/run_rbac_migrations.py:0: warning: Method `__setitem__` of type `Any | int | dict[Unknown | str, Unknown | bool | None]` may be missing  [possibly-missing-implicit-call]
posthog/management/commands/run_rbac_migrations.py:0: warning: Method `__setitem__` of type `Any | int | dict[Unknown | str, Unknown | bool | None]` may be missing  [possibly-missing-implicit-call]
posthog/management/commands/run_rbac_migrations.py:0: warning: Method `__setitem__` of type `Any | int | dict[Unknown | str, Unknown | bool | None]` may be missing  [possibly-missing-implicit-call]
posthog/management/commands/run_rbac_migrations.py:0: warning: Method `__setitem__` of type `Any | int | dict[Unknown | str, Unknown | bool | None]` may be missing  [possibly-missing-implicit-call]
posthog/management/commands/run_rbac_migrations.py:0: warning: Method `__setitem__` of type `Any | int | dict[Unknown | str, Unknown | bool | None]` may be missing  [possibly-missing-implicit-call]
posthog/management/commands/run_rbac_migrations.py:0: warning: Method `__setitem__` of type `Any | int | dict[Unknown | str, Unknown | bool | None]` may be missing  [possibly-missing-implicit-call]
posthog/management/commands/test/test_update_batch_export_schedules.py:0: warning: The function `warn` is deprecated: Deprecated since Python 3.3. Use `warning()` instead.  [deprecated]
posthog/management/commands/test_ch_migrations_are_safe.py:0: warning: The function `warn` is deprecated: Deprecated since Python 3.3. Use `Logger.warning()` instead.  [deprecated]
posthog/management/commands/test_ch_migrations_are_safe.py:0: warning: The function `warn` is deprecated: Deprecated since Python 3.3. Use `Logger.warning()` instead.  [deprecated]
posthog/management/commands/test_ch_migrations_are_safe.py:0: warning: The function `warn` is deprecated: Deprecated since Python 3.3. Use `Logger.warning()` instead.  [deprecated]
posthog/management/commands/test_ch_migrations_are_safe.py:0: warning: The function `warn` is deprecated: Deprecated since Python 3.3. Use `Logger.warning()` instead.  [deprecated]
posthog/management/commands/test_ch_migrations_are_safe.py:0: warning: The function `warn` is deprecated: Deprecated since Python 3.3. Use `Logger.warning()` instead.  [deprecated]
posthog/management/commands/warehouse_last_incremental_value_sync.py:0: error: Implicit shadowing of function `resolve_single_provider_value`  [invalid-assignment]
posthog/models/event/util.py:0: warning: Attribute `items` on type `(Unknown & ~AlwaysFalsy) | dict[Unknown, Unknown] | (str & ~AlwaysFalsy)` may be missing  [possibly-missing-attribute]
posthog/models/filters/mixins/common.py:0: error: Type arguments for `Literal` must be `None`, a literal value (int, bool, str, or bytes), or an enum member  [invalid-type-form]
posthog/models/filters/mixins/common.py:0: warning: Value is already of type `int`  [redundant-cast]
posthog/models/surveys/debug.py:0: error: Cannot subscript object of type `None` with no `__getitem__` method  [non-subscriptable]
posthog/models/surveys/debug.py:0: error: Cannot subscript object of type `None` with no `__getitem__` method  [non-subscriptable]
posthog/models/surveys/debug.py:0: error: Cannot subscript object of type `bool` with no `__getitem__` method  [non-subscriptable]
posthog/models/surveys/debug.py:0: error: Cannot subscript object of type `bool` with no `__getitem__` method  [non-subscriptable]
posthog/models/surveys/debug.py:0: error: Object of type `Any | None | bool | list[Unknown] | dict[Unknown, Unknown]` may not be iterable  [not-iterable]
posthog/models/surveys/debug.py:0: warning: Attribute `append` on type `Any | None | bool | list[Unknown] | dict[Unknown, Unknown]` may be missing  [possibly-missing-attribute]
posthog/models/surveys/debug.py:0: warning: Method `__setitem__` of type `Any | None | bool | list[Unknown] | dict[Unknown, Unknown]` may be missing  [possibly-missing-implicit-call]
posthog/models/surveys/debug.py:0: warning: Method `__setitem__` of type `Any | None | bool | list[Unknown] | dict[Unknown, Unknown]` may be missing  [possibly-missing-implicit-call]
posthog/models/team/team.py:0: warning: Value is already of type `User`  [redundant-cast]
posthog/models/team/team.py:0: warning: Value is already of type `User`  [redundant-cast]
posthog/models/team/team.py:0: warning: Value is already of type `User`  [redundant-cast]
posthog/permissions.py:0: warning: Value is already of type `User`  [redundant-cast]
posthog/queries/foss_cohort_query.py:0: warning: Attribute `project_id` on type `Unknown | Team` may be missing  [possibly-missing-attribute]
posthog/queries/foss_cohort_query.py:0: warning: Unsupported class base with type `<class 'EnterpriseEventQuery'> | <class 'EventQuery'>`  [unsupported-base]
posthog/queries/funnels/funnel_event_query.py:0: warning: Unsupported class base with type `<class 'EnterpriseEventQuery'> | <class 'EventQuery'>`  [unsupported-base]
posthog/queries/funnels/test/test_funnel_persons.py:0: warning: Member `bulk_create_persons` of module `posthog.models.person.util` may be missing  [possibly-missing-import]
posthog/queries/properties_timeline/properties_timeline_event_query.py:0: warning: Unsupported class base with type `<class 'EnterpriseEventQuery'> | <class 'EventQuery'>`  [unsupported-base]
posthog/queries/stickiness/stickiness_event_query.py:0: warning: Unsupported class base with type `<class 'EnterpriseEventQuery'> | <class 'EventQuery'>`  [unsupported-base]
posthog/queries/test/test_trends.py:0: error: Object of type `Literal[True]` is not assignable to attribute `can_enable_actor_on_events` of type `Literal[False]`  [invalid-assignment]
posthog/queries/test/test_trends.py:0: warning: Attribute `utcoffset` on type `@Todo | None` may be missing  [possibly-missing-attribute]
posthog/queries/trends/lifecycle.py:0: warning: Unsupported class base with type `<class 'EnterpriseEventQuery'> | <class 'EventQuery'>`  [unsupported-base]
posthog/queries/trends/trends.py:0: error: Function can implicitly return `None`, which is not assignable to return type `bool`  [invalid-return-type]
posthog/queries/trends/trends_event_query_base.py:0: warning: Unsupported class base with type `<class 'EnterpriseEventQuery'> | <class 'EventQuery'>`  [unsupported-base]
posthog/session_recordings/queries/session_replay_events.py:0: error: Return type does not match returned value: expected `LiteralString`, found `str`  [invalid-return-type]
posthog/session_recordings/queries/sub_queries/person_ids_subquery.py:0: warning: The function `utcnow` is deprecated: Use timezone-aware objects to represent datetimes in UTC; e.g. by calling .now(datetime.timezone.utc)  [deprecated]
posthog/session_recordings/queries/test/listing_recordings/test_session_recording_list_from_query.py:0: warning: The function `utcnow` is deprecated: Use timezone-aware objects to represent datetimes in UTC; e.g. by calling .now(datetime.timezone.utc)  [deprecated]
posthog/session_recordings/queries/test/listing_recordings/test_session_recording_list_from_query.py:0: warning: The function `utcnow` is deprecated: Use timezone-aware objects to represent datetimes in UTC; e.g. by calling .now(datetime.timezone.utc)  [deprecated]
posthog/session_recordings/queries/test/session_replay_sql.py:0: warning: The function `utcnow` is deprecated: Use timezone-aware objects to represent datetimes in UTC; e.g. by calling .now(datetime.timezone.utc)  [deprecated]
posthog/session_recordings/queries/utils.py:0: warning: Attribute `event` on type `EventsNode | ActionsNode` may be missing  [possibly-missing-attribute]
posthog/session_recordings/queries/utils.py:0: warning: Attribute `id` on type `EventsNode | ActionsNode` may be missing  [possibly-missing-attribute]
posthog/session_recordings/session_recording_api.py:0: error: Argument `posthog_properties` does not match any known parameter of bound method `parse`  [unknown-argument]
posthog/tasks/exports/csv_exporter.py:0: error: Cannot subscript object of type `None` with no `__getitem__` method  [non-subscriptable]
posthog/tasks/periodic_digest/periodic_digest.py:0: error: Object of type `object` is not callable  [call-non-callable]
posthog/tasks/periodic_digest/periodic_digest.py:0: error: Object of type `object` is not callable  [call-non-callable]
posthog/temporal/data_imports/pipelines/helpers.py:0: error: Function can implicitly return `None`, which is not assignable to return type `int | date | str`  [invalid-return-type]
posthog/temporal/data_imports/pipelines/pipeline_sync.py:0: error: Implicit shadowing of function `from_arrow_scalar`  [invalid-assignment]
posthog/temporal/data_imports/pipelines/pipeline_sync.py:0: error: Implicit shadowing of function `from_arrow_scalar`  [invalid-assignment]
posthog/temporal/data_imports/pipelines/pipeline_sync.py:0: warning: Attribute `get` on type `dict[str, str] | None` may be missing  [possibly-missing-attribute]
posthog/temporal/data_imports/sources/common/rest_source/__init__.py:0: error: Object of type `list[str] | None | list[Unknown]` is not assignable to `list[str]`  [invalid-assignment]
posthog/temporal/data_imports/sources/common/rest_source/config_setup.py:0: error: Method `__setitem__` of type `bound method dict[str, ResolvedParam].__setitem__(key: str, value: ResolvedParam, /) -> None` cannot be called with a key of type `str` and a value of type `None` on object of type `dict[str, ResolvedParam]`  [invalid-assignment]
posthog/temporal/data_imports/sources/common/rest_source/config_setup.py:0: error: Object of type `None` is not assignable to `AuthConfigBase`  [invalid-assignment]
posthog/temporal/data_imports/sources/common/rest_source/config_setup.py:0: error: Object of type `dict[Unknown | str, Unknown | <class 'JSONResponsePaginator'> | <class 'HeaderLinkPaginator'> | ... omitted 5 union elements]` is not assignable to `dict[@Todo, type[BasePaginator]]`  [invalid-assignment]
posthog/temporal/data_imports/sources/common/rest_source/config_setup.py:0: error: Object of type `str | None` is not assignable to `str`  [invalid-assignment]
posthog/temporal/data_imports/sources/common/rest_source/config_setup.py:0: error: Object of type `str | None` is not assignable to `str`  [invalid-assignment]
posthog/temporal/data_imports/sources/common/rest_source/config_setup.py:0: error: Return type does not match returned value: expected `tuple[Any, dict[str, EndpointResource], dict[str, ResolvedParam | None]]`, found `tuple[TopologicalSorter[Unknown], dict[str, EndpointResource], dict[str, ResolvedParam]]`  [invalid-return-type]
posthog/temporal/data_imports/sources/common/rest_source/config_setup.py:0: warning: Attribute `items` on type `dict[str, ResolveParamConfig | IncrementalParamConfig | Any] | None | dict[Unknown, Unknown]` may be missing  [possibly-missing-attribute]
posthog/temporal/proxy_service/proto/proxy_provisioner_pb2.py:0: error: Name `_CERTIFICATESTATE` used when not defined  [unresolved-reference]
posthog/temporal/proxy_service/proto/proxy_provisioner_pb2.py:0: error: Name `_CERTIFICATESTATE` used when not defined  [unresolved-reference]
posthog/temporal/proxy_service/proto/proxy_provisioner_pb2.py:0: error: Name `_CREATEREQUEST` used when not defined  [unresolved-reference]
posthog/temporal/proxy_service/proto/proxy_provisioner_pb2.py:0: error: Name `_CREATEREQUEST` used when not defined  [unresolved-reference]
posthog/temporal/proxy_service/proto/proxy_provisioner_pb2.py:0: error: Name `_CREATERESPONSE` used when not defined  [unresolved-reference]
posthog/temporal/proxy_service/proto/proxy_provisioner_pb2.py:0: error: Name `_CREATERESPONSE` used when not defined  [unresolved-reference]
posthog/temporal/proxy_service/proto/proxy_provisioner_pb2.py:0: error: Name `_DELETEREQUEST` used when not defined  [unresolved-reference]
posthog/temporal/proxy_service/proto/proxy_provisioner_pb2.py:0: error: Name `_DELETEREQUEST` used when not defined  [unresolved-reference]
posthog/temporal/proxy_service/proto/proxy_provisioner_pb2.py:0: error: Name `_DELETERESPONSE` used when not defined  [unresolved-reference]
posthog/temporal/proxy_service/proto/proxy_provisioner_pb2.py:0: error: Name `_DELETERESPONSE` used when not defined  [unresolved-reference]
posthog/temporal/proxy_service/proto/proxy_provisioner_pb2.py:0: error: Name `_ERRORTYPE` used when not defined  [unresolved-reference]
posthog/temporal/proxy_service/proto/proxy_provisioner_pb2.py:0: error: Name `_ERRORTYPE` used when not defined  [unresolved-reference]
posthog/temporal/proxy_service/proto/proxy_provisioner_pb2.py:0: error: Name `_PROXYPROVISIONERSERVICE` used when not defined  [unresolved-reference]
posthog/temporal/proxy_service/proto/proxy_provisioner_pb2.py:0: error: Name `_PROXYPROVISIONERSERVICE` used when not defined  [unresolved-reference]
posthog/temporal/proxy_service/proto/proxy_provisioner_pb2.py:0: error: Name `_RESPONSESTATUS` used when not defined  [unresolved-reference]
posthog/temporal/proxy_service/proto/proxy_provisioner_pb2.py:0: error: Name `_RESPONSESTATUS` used when not defined  [unresolved-reference]
posthog/temporal/proxy_service/proto/proxy_provisioner_pb2.py:0: error: Name `_STATUSREQUEST` used when not defined  [unresolved-reference]
posthog/temporal/proxy_service/proto/proxy_provisioner_pb2.py:0: error: Name `_STATUSREQUEST` used when not defined  [unresolved-reference]
posthog/temporal/proxy_service/proto/proxy_provisioner_pb2.py:0: error: Name `_STATUSRESPONSE` used when not defined  [unresolved-reference]
posthog/temporal/proxy_service/proto/proxy_provisioner_pb2.py:0: error: Name `_STATUSRESPONSE` used when not defined  [unresolved-reference]
posthog/temporal/subscriptions/subscription_scheduling_workflow.py:0: warning: The function `utcnow` is deprecated: Use timezone-aware objects to represent datetimes in UTC; e.g. by calling .now(datetime.timezone.utc)  [deprecated]
posthog/temporal/tests/ai/test_module_integrity.py:0: warning: Attribute `__name__` on type `Unknown | ((inputs: GetApproximateActionsCountInputs) -> CoroutineType[Any, Any, int]) | ((inputs: BatchSummarizeActionsInputs) -> Unknown) | ((inputs: BatchEmbedAndSyncActionsInputs) -> CoroutineType[Any, Any, BatchEmbedAndSyncActionsOutputs]) | ((inputs: AssistantConversationRunnerWorkflowInputs) -> CoroutineType[Any, Any, None])` may be missing  [possibly-missing-attribute]
posthog/temporal/tests/ai/test_sync_vectors.py:0: warning: Attribute `id` on type `Unknown | Action` may be missing  [possibly-missing-attribute]
posthog/temporal/tests/ai/test_sync_vectors.py:0: warning: Attribute `id` on type `Unknown | Action` may be missing  [possibly-missing-attribute]
posthog/temporal/tests/ai/test_sync_vectors.py:0: warning: Attribute `id` on type `Unknown | Action` may be missing  [possibly-missing-attribute]
posthog/temporal/tests/data_imports/stripe/conftest.py:0: error: Operator `<=` is not supported for types `str` and `int`, in comparing `Unknown | str | int | float | list[Unknown | dict[Unknown | str, Unknown | int | None | str]]` with `int`  [unsupported-operator]
posthog/temporal/tests/data_imports/stripe/conftest.py:0: error: Operator `<` is not supported for types `str` and `int`, in comparing `Unknown | str | int | float | list[Unknown | dict[Unknown | str, Unknown | int | None | str]]` with `int`  [unsupported-operator]
posthog/temporal/tests/data_imports/stripe/conftest.py:0: error: Operator `>=` is not supported for types `str` and `int`, in comparing `Unknown | str | int | float | list[Unknown | dict[Unknown | str, Unknown | int | None | str]]` with `int`  [unsupported-operator]
posthog/temporal/tests/data_imports/stripe/conftest.py:0: error: Operator `>` is not supported for types `str` and `int`, in comparing `Unknown | str | int | float | list[Unknown | dict[Unknown | str, Unknown | int | None | str]]` with `int`  [unsupported-operator]
posthog/test/base.py:0: error: Object of type `Literal[True]` is not assignable to attribute `can_enable_actor_on_events` of type `Literal[False]`  [invalid-assignment]
posthog/test/base.py:0: error: Object of type `None` is not assignable to `OrganizationMembership`  [invalid-assignment]
posthog/test/base.py:0: error: Object of type `None` is not assignable to `Organization`  [invalid-assignment]
posthog/test/base.py:0: error: Object of type `None` is not assignable to `Project`  [invalid-assignment]
posthog/test/base.py:0: error: Object of type `None` is not assignable to `Team`  [invalid-assignment]
posthog/test/base.py:0: error: Object of type `None` is not assignable to `User`  [invalid-assignment]
posthog/test/base.py:0: error: Variable of type `def any(iterable: Iterable[object], /) -> bool` is not allowed in a type expression  [invalid-type-form]
posthog/test/base.py:0: warning: Attribute `f_back` on type `FrameType | None` may be missing  [possibly-missing-attribute]
posthog/test/base.py:0: warning: Attribute `f_back` on type `FrameType | None` may be missing  [possibly-missing-attribute]
posthog/test/base.py:0: warning: Attribute `f_back` on type `FrameType | None` may be missing  [possibly-missing-attribute]
posthog/test/base.py:0: warning: Attribute `f_locals` on type `FrameType | None` may be missing  [possibly-missing-attribute]
posthog/test/base.py:0: warning: Attribute `f_locals` on type `FrameType | None` may be missing  [possibly-missing-attribute]
posthog/test/base.py:0: warning: Attribute `f_locals` on type `FrameType | None` may be missing  [possibly-missing-attribute]
posthog/test/base.py:0: warning: Attribute `name` on type `AppConfig | None` may be missing  [possibly-missing-attribute]
posthog/test/base.py:0: warning: Member `bulk_create_persons` of module `posthog.models.person.util` may be missing  [possibly-missing-import]
posthog/test/test_health.py:0: error: Return type does not match returned value: expected `HttpResponse`, found `_MonkeyPatchedWSGIResponse`  [invalid-return-type]
posthog/test/test_health.py:0: error: Return type does not match returned value: expected `HttpResponse`, found `_MonkeyPatchedWSGIResponse`  [invalid-return-type]
posthog/test/test_team.py:0: error: Object of type `Literal[True]` is not assignable to attribute `can_enable_actor_on_events` of type `Literal[False]`  [invalid-assignment]
posthog/test/test_utils.py:0: error: Argument `request` does not match any known parameter of function `__new__`  [unknown-argument]
posthog/test/test_utils.py:0: error: Too many positional arguments to function `__new__`: expected 1, got 2  [too-many-positional-arguments]
posthog/test/test_utils.py:0: error: Too many positional arguments to function `__new__`: expected 1, got 2  [too-many-positional-arguments]
posthog/test/test_utils.py:0: error: Too many positional arguments to function `__new__`: expected 1, got 2  [too-many-positional-arguments]
posthog/test/test_utils.py:0: error: Too many positional arguments to function `__new__`: expected 1, got 2  [too-many-positional-arguments]
posthog/test/test_utils.py:0: error: Too many positional arguments to function `__new__`: expected 1, got 2  [too-many-positional-arguments]
posthog/test/test_utils.py:0: error: Too many positional arguments to function `__new__`: expected 1, got 2  [too-many-positional-arguments]
posthog/test/test_utils.py:0: error: Too many positional arguments to function `__new__`: expected 1, got 2  [too-many-positional-arguments]
posthog/test/test_utils.py:0: error: Too many positional arguments to function `__new__`: expected 1, got 2  [too-many-positional-arguments]
posthog/test/test_utils_cors.py:0: error: Argument `META` does not match any known parameter of function `__new__`  [unknown-argument]
posthog/urls.py:0: error: No overload of function `path` matches arguments  [no-matching-overload]
posthog/urls.py:0: error: No overload of function `re_path` matches arguments  [no-matching-overload]
posthog/utils.py:0: error: Return type does not match returned value: expected `str`, found `(str & ~Enum) | (list[Unknown] & ~Enum) | (dict[Unknown, Unknown] & ~Enum)`  [invalid-return-type]
posthog/utils.py:0: error: Return type does not match returned value: expected `str`, found `Any | None`  [invalid-return-type]
posthog/version_requirement.py:0: error: Function can implicitly return `None`, which is not assignable to return type `Version`  [invalid-return-type]
posthog/views.py:0: error: Implicit shadowing of function `get_licensed_users_available`  [invalid-assignment]
posthog/warehouse/api/external_data_source.py:0: error: Return type does not match returned value: expected `str`, found `Unknown | None`  [invalid-return-type]
posthog/warehouse/models/join.py:0: error: Object of type `object` is not iterable  [not-iterable]
