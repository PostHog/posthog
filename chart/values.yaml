# Default values for posthog.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
image:
  repository: posthog/posthog
  tag: latest
  pullPolicy: Always

posthogSecret: ''

# How many web UI instances to run
web:
  hpa:
    enabled: false
    cputhreshold: 60
    minpods: 1
    maxpods: 10
  replicacount: 1
  resources: {}
    # limits:
    #   cpu: 500m
    #   memory: 500Mi
    # requests:
    #   cpu: 300m
    #   memory: 300Mi
  env: []
  nodeSelector: {}
  tolerations: []
  affinity: {}
  livenessProbe:
    failureThreshold: 5
    initialDelaySeconds: 50
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 2
  readinessProbe:
    failureThreshold: 10
    initialDelaySeconds: 50
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 2
  # priorityClassName: ""
  ## Use an alternate scheduler, e.g. "stork".
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  # schedulerName:
  # Optional extra labels for pod, i.e. redis-client: "true"
  # podLabels: []

# How many worker instances to run
worker:
  hpa:
    enabled: false
    cputhreshold: 60
    minpods: 1
    maxpods: 10
  env: []
  replicacount: 2
  resources: {}
    # limits:
    #   cpu: 300m
    #   memory: 500Mi
    # requests:
    #   cpu: 100m
    #   memory: 100Mi
  nodeSelector: {}
  tolerations: []
  affinity: {}
  # priorityClassName: ""
  # schedulerName:
  # Optional extra labels for pod, i.e. redis-client: "true"
  # podLabels: []
  # concurrency:

# Name of the service and what port to expose on the pod
# Don't change these unless you know what you're doing
service:
  name: posthog
  type: LoadBalancer
  externalPort: 8000
  internalPort: 8000

  ## Service annotations
  ##
  annotations: {}

  ## External IP addresses of service
  ## Default: nil
  ##
  # externalIPs:
  # - 192.168.0.1

  ## Load Balancer allow-list
  # loadBalancerSourceRanges: []

## Configure ingress resource that allow you to access the
## PostHog installation. Set up the URL
## ref: http://kubernetes.io/docs/user-guide/ingress/
##
ingress:
  enabled: false
  hostname: posthog.local

  ## Ingress annotations
  ##
  annotations: {}
  #   kubernetes.io/ingress.class: nginx
  #   kubernetes.io/tls-acme: 'true'

  ## Ingress TLS configuration
  ## Secrets must be manually created in the namespace
  ##
  tls: []
  #   - secretName: posthog.local-tls
  #     hosts:
  #       - posthog.local

postgresql:
  enabled: true
  nameOverride: posthog-postgresql
  postgresqlDatabase: posthog
  postgresqlUsername: postgres
  postgresqlPassword: postgres
  # The following variables are only used when internal PG is disabled
  # postgresqlHost: postgres
  # postgresqlPort: 5432
  # When defined the `postgresqlPassword` field is ignored
  # existingSecret: secret-name
  # existingSecretKey: postgresql-password

## Prometheus Exporter / Metrics
##
metrics:
  enabled: false

  ## Configure extra options for liveness and readiness probes
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes)
  livenessProbe:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 5
    timeoutSeconds: 2
    failureThreshold: 3
    successThreshold: 1
  readinessProbe:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 5
    timeoutSeconds: 2
    failureThreshold: 3
    successThreshold: 1

  ## Metrics exporter resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  resources: {}
  #   limits:
  #     cpu: 100m
  #     memory: 100Mi
  #   requests:
  #     cpu: 100m
  #     memory: 100Mi

  nodeSelector: {}
  tolerations: []
  affinity: {}
  # schedulerName:
  # Optional extra labels for pod, i.e. redis-client: "true"
  # podLabels: []
  service:
    type: ClusterIP
    labels: {}

  image:
    repository: prom/statsd-exporter
    tag: v0.10.5
    pullPolicy: IfNotPresent

  # Enable this if you're using https://github.com/coreos/prometheus-operator
  serviceMonitor:
    enabled: false
    ## Specify a namespace if needed
    # namespace: monitoring
    # fallback to the prometheus default unless specified
    # interval: 10s
    ## Defaults to what's used if you follow CoreOS [Prometheus Install Instructions](https://github.com/helm/charts/tree/master/stable/prometheus-operator#tldr)
    ## [Prometheus Selector Label](https://github.com/helm/charts/tree/master/stable/prometheus-operator#prometheus-operator-1)
    ## [Kube Prometheus Selector Label](https://github.com/helm/charts/tree/master/stable/prometheus-operator#exporters)
    selector:
      prometheus: kube-prometheus

# Provide affinity for hooks if needed
hooks:
  affinity: {}
  migrate:
    env: []
    resources:
      limits:
        memory: 1000Mi
      requests:
        memory: 1000Mi

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:
  annotations: {}
