# serializer version: 1
# name: TestSessionRecordingListDateTimeFilters.test_date_from_filter_respects_ttl_0_that_searching_from_20_days_ago_excludes_sessions_past_TTL
  '''
  SELECT s.session_id AS session_id,
         any(s.team_id) AS `any(s.team_id)`,
         any(s.distinct_id) AS `any(s.distinct_id)`,
         min(toTimeZone(s.min_first_timestamp, 'UTC')) AS start_time,
         max(toTimeZone(s.max_last_timestamp, 'UTC')) AS end_time,
         dateDiff('SECOND', start_time, end_time) AS duration,
         argMinMerge(s.first_url) AS first_url,
         sum(s.click_count) AS click_count,
         sum(s.keypress_count) AS keypress_count,
         sum(s.mouse_activity_count) AS mouse_activity_count,
         divide(sum(s.active_milliseconds), 1000) AS active_seconds,
         minus(duration, active_seconds) AS inactive_seconds,
         sum(s.console_log_count) AS console_log_count,
         sum(s.console_warn_count) AS console_warn_count,
         sum(s.console_error_count) AS console_error_count,
         greaterOrEquals(max(toTimeZone(s._timestamp, 'UTC')), toDateTime64('today', 6, 'UTC')) AS ongoing,
         round(multiply(divide(plus(plus(plus(divide(sum(s.active_milliseconds), 1000), sum(s.click_count)), sum(s.keypress_count)), sum(s.console_error_count)), plus(plus(plus(plus(sum(s.mouse_activity_count), dateDiff('SECOND', start_time, end_time)), sum(s.console_error_count)), sum(s.console_log_count)), sum(s.console_warn_count))), 100), 2) AS activity_score
  FROM session_replay_events AS s
  WHERE and(equals(s.team_id, 99999), greaterOrEquals(toTimeZone(s.min_first_timestamp, 'UTC'), toDateTime64('2020-12-11 12:46:00.000000', 6, 'UTC')), greaterOrEquals(toTimeZone(s.min_first_timestamp, 'UTC'), toDateTime64('2020-12-12 00:00:00.000000', 6, 'UTC')), lessOrEquals(toTimeZone(s.min_first_timestamp, 'UTC'), toDateTime64('today', 6, 'UTC')))
  GROUP BY s.session_id
  HAVING 1
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1,
                    format_csv_allow_double_quotes=0,
                    max_ast_elements=4000000,
                    max_expanded_ast_elements=4000000,
                    max_bytes_before_external_group_by=0,
                    transform_null_in=1,
                    optimize_min_equality_disjunction_chain_length=4294967295,
                    allow_experimental_join_condition=1
  '''
# ---
# name: TestSessionRecordingListDateTimeFilters.test_date_from_filter_respects_ttl_1_that_searching_from_21_days_ago_still_excludes_sessions_past_TTL
  '''
  SELECT s.session_id AS session_id,
         any(s.team_id) AS `any(s.team_id)`,
         any(s.distinct_id) AS `any(s.distinct_id)`,
         min(toTimeZone(s.min_first_timestamp, 'UTC')) AS start_time,
         max(toTimeZone(s.max_last_timestamp, 'UTC')) AS end_time,
         dateDiff('SECOND', start_time, end_time) AS duration,
         argMinMerge(s.first_url) AS first_url,
         sum(s.click_count) AS click_count,
         sum(s.keypress_count) AS keypress_count,
         sum(s.mouse_activity_count) AS mouse_activity_count,
         divide(sum(s.active_milliseconds), 1000) AS active_seconds,
         minus(duration, active_seconds) AS inactive_seconds,
         sum(s.console_log_count) AS console_log_count,
         sum(s.console_warn_count) AS console_warn_count,
         sum(s.console_error_count) AS console_error_count,
         greaterOrEquals(max(toTimeZone(s._timestamp, 'UTC')), toDateTime64('today', 6, 'UTC')) AS ongoing,
         round(multiply(divide(plus(plus(plus(divide(sum(s.active_milliseconds), 1000), sum(s.click_count)), sum(s.keypress_count)), sum(s.console_error_count)), plus(plus(plus(plus(sum(s.mouse_activity_count), dateDiff('SECOND', start_time, end_time)), sum(s.console_error_count)), sum(s.console_log_count)), sum(s.console_warn_count))), 100), 2) AS activity_score
  FROM session_replay_events AS s
  WHERE and(equals(s.team_id, 99999), greaterOrEquals(toTimeZone(s.min_first_timestamp, 'UTC'), toDateTime64('2020-12-11 12:46:00.000000', 6, 'UTC')), greaterOrEquals(toTimeZone(s.min_first_timestamp, 'UTC'), toDateTime64('2020-12-11 00:00:00.000000', 6, 'UTC')), lessOrEquals(toTimeZone(s.min_first_timestamp, 'UTC'), toDateTime64('today', 6, 'UTC')))
  GROUP BY s.session_id
  HAVING 1
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1,
                    format_csv_allow_double_quotes=0,
                    max_ast_elements=4000000,
                    max_expanded_ast_elements=4000000,
                    max_bytes_before_external_group_by=0,
                    transform_null_in=1,
                    optimize_min_equality_disjunction_chain_length=4294967295,
                    allow_experimental_join_condition=1
  '''
# ---
# name: TestSessionRecordingListDateTimeFilters.test_date_from_filter_respects_ttl_2_that_even_searching_from_22_days_ago_exactly_at_TTL_boundary_excludes_sessions_past_TTL
  '''
  SELECT s.session_id AS session_id,
         any(s.team_id) AS `any(s.team_id)`,
         any(s.distinct_id) AS `any(s.distinct_id)`,
         min(toTimeZone(s.min_first_timestamp, 'UTC')) AS start_time,
         max(toTimeZone(s.max_last_timestamp, 'UTC')) AS end_time,
         dateDiff('SECOND', start_time, end_time) AS duration,
         argMinMerge(s.first_url) AS first_url,
         sum(s.click_count) AS click_count,
         sum(s.keypress_count) AS keypress_count,
         sum(s.mouse_activity_count) AS mouse_activity_count,
         divide(sum(s.active_milliseconds), 1000) AS active_seconds,
         minus(duration, active_seconds) AS inactive_seconds,
         sum(s.console_log_count) AS console_log_count,
         sum(s.console_warn_count) AS console_warn_count,
         sum(s.console_error_count) AS console_error_count,
         greaterOrEquals(max(toTimeZone(s._timestamp, 'UTC')), toDateTime64('today', 6, 'UTC')) AS ongoing,
         round(multiply(divide(plus(plus(plus(divide(sum(s.active_milliseconds), 1000), sum(s.click_count)), sum(s.keypress_count)), sum(s.console_error_count)), plus(plus(plus(plus(sum(s.mouse_activity_count), dateDiff('SECOND', start_time, end_time)), sum(s.console_error_count)), sum(s.console_log_count)), sum(s.console_warn_count))), 100), 2) AS activity_score
  FROM session_replay_events AS s
  WHERE and(equals(s.team_id, 99999), greaterOrEquals(toTimeZone(s.min_first_timestamp, 'UTC'), toDateTime64('2020-12-11 12:46:00.000000', 6, 'UTC')), greaterOrEquals(toTimeZone(s.min_first_timestamp, 'UTC'), toDateTime64('2020-12-10 00:00:00.000000', 6, 'UTC')), lessOrEquals(toTimeZone(s.min_first_timestamp, 'UTC'), toDateTime64('today', 6, 'UTC')))
  GROUP BY s.session_id
  HAVING 1
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1,
                    format_csv_allow_double_quotes=0,
                    max_ast_elements=4000000,
                    max_expanded_ast_elements=4000000,
                    max_bytes_before_external_group_by=0,
                    transform_null_in=1,
                    optimize_min_equality_disjunction_chain_length=4294967295,
                    allow_experimental_join_condition=1
  '''
# ---
# name: TestSessionRecordingListDateTimeFilters.test_date_to_filter
  '''
  SELECT s.session_id AS session_id,
         any(s.team_id) AS `any(s.team_id)`,
         any(s.distinct_id) AS `any(s.distinct_id)`,
         min(toTimeZone(s.min_first_timestamp, 'UTC')) AS start_time,
         max(toTimeZone(s.max_last_timestamp, 'UTC')) AS end_time,
         dateDiff('SECOND', start_time, end_time) AS duration,
         argMinMerge(s.first_url) AS first_url,
         sum(s.click_count) AS click_count,
         sum(s.keypress_count) AS keypress_count,
         sum(s.mouse_activity_count) AS mouse_activity_count,
         divide(sum(s.active_milliseconds), 1000) AS active_seconds,
         minus(duration, active_seconds) AS inactive_seconds,
         sum(s.console_log_count) AS console_log_count,
         sum(s.console_warn_count) AS console_warn_count,
         sum(s.console_error_count) AS console_error_count,
         greaterOrEquals(max(toTimeZone(s._timestamp, 'UTC')), toDateTime64('today', 6, 'UTC')) AS ongoing,
         round(multiply(divide(plus(plus(plus(divide(sum(s.active_milliseconds), 1000), sum(s.click_count)), sum(s.keypress_count)), sum(s.console_error_count)), plus(plus(plus(plus(sum(s.mouse_activity_count), dateDiff('SECOND', start_time, end_time)), sum(s.console_error_count)), sum(s.console_log_count)), sum(s.console_warn_count))), 100), 2) AS activity_score
  FROM session_replay_events AS s
  WHERE and(equals(s.team_id, 99999), greaterOrEquals(toTimeZone(s.min_first_timestamp, 'UTC'), toDateTime64('2020-12-11 13:46:23.000000', 6, 'UTC')), greaterOrEquals(toTimeZone(s.min_first_timestamp, 'UTC'), toDateTime64('2020-12-29 00:00:00.000000', 6, 'UTC')), lessOrEquals(toTimeZone(s.min_first_timestamp, 'UTC'), toDateTime64('2020-12-28 00:00:00.000000', 6, 'UTC')))
  GROUP BY s.session_id
  HAVING 1
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1,
                    format_csv_allow_double_quotes=0,
                    max_ast_elements=4000000,
                    max_expanded_ast_elements=4000000,
                    max_bytes_before_external_group_by=0,
                    transform_null_in=1,
                    optimize_min_equality_disjunction_chain_length=4294967295,
                    allow_experimental_join_condition=1
  '''
# ---
# name: TestSessionRecordingListDateTimeFilters.test_date_to_filter.1
  '''
  SELECT s.session_id AS session_id,
         any(s.team_id) AS `any(s.team_id)`,
         any(s.distinct_id) AS `any(s.distinct_id)`,
         min(toTimeZone(s.min_first_timestamp, 'UTC')) AS start_time,
         max(toTimeZone(s.max_last_timestamp, 'UTC')) AS end_time,
         dateDiff('SECOND', start_time, end_time) AS duration,
         argMinMerge(s.first_url) AS first_url,
         sum(s.click_count) AS click_count,
         sum(s.keypress_count) AS keypress_count,
         sum(s.mouse_activity_count) AS mouse_activity_count,
         divide(sum(s.active_milliseconds), 1000) AS active_seconds,
         minus(duration, active_seconds) AS inactive_seconds,
         sum(s.console_log_count) AS console_log_count,
         sum(s.console_warn_count) AS console_warn_count,
         sum(s.console_error_count) AS console_error_count,
         greaterOrEquals(max(toTimeZone(s._timestamp, 'UTC')), toDateTime64('today', 6, 'UTC')) AS ongoing,
         round(multiply(divide(plus(plus(plus(divide(sum(s.active_milliseconds), 1000), sum(s.click_count)), sum(s.keypress_count)), sum(s.console_error_count)), plus(plus(plus(plus(sum(s.mouse_activity_count), dateDiff('SECOND', start_time, end_time)), sum(s.console_error_count)), sum(s.console_log_count)), sum(s.console_warn_count))), 100), 2) AS activity_score
  FROM session_replay_events AS s
  WHERE and(equals(s.team_id, 99999), greaterOrEquals(toTimeZone(s.min_first_timestamp, 'UTC'), toDateTime64('2020-12-11 13:46:23.000000', 6, 'UTC')), greaterOrEquals(toTimeZone(s.min_first_timestamp, 'UTC'), toDateTime64('2020-12-29 00:00:00.000000', 6, 'UTC')), lessOrEquals(toTimeZone(s.min_first_timestamp, 'UTC'), toDateTime64('2020-12-29 12:46:00.000000', 6, 'UTC')))
  GROUP BY s.session_id
  HAVING 1
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1,
                    format_csv_allow_double_quotes=0,
                    max_ast_elements=4000000,
                    max_expanded_ast_elements=4000000,
                    max_bytes_before_external_group_by=0,
                    transform_null_in=1,
                    optimize_min_equality_disjunction_chain_length=4294967295,
                    allow_experimental_join_condition=1
  '''
# ---
# name: TestSessionRecordingListDateTimeFilters.test_listing_ignores_future_replays
  '''
  SELECT s.session_id AS session_id,
         any(s.team_id) AS `any(s.team_id)`,
         any(s.distinct_id) AS `any(s.distinct_id)`,
         min(toTimeZone(s.min_first_timestamp, 'UTC')) AS start_time,
         max(toTimeZone(s.max_last_timestamp, 'UTC')) AS end_time,
         dateDiff('SECOND', start_time, end_time) AS duration,
         argMinMerge(s.first_url) AS first_url,
         sum(s.click_count) AS click_count,
         sum(s.keypress_count) AS keypress_count,
         sum(s.mouse_activity_count) AS mouse_activity_count,
         divide(sum(s.active_milliseconds), 1000) AS active_seconds,
         minus(duration, active_seconds) AS inactive_seconds,
         sum(s.console_log_count) AS console_log_count,
         sum(s.console_warn_count) AS console_warn_count,
         sum(s.console_error_count) AS console_error_count,
         greaterOrEquals(max(toTimeZone(s._timestamp, 'UTC')), toDateTime64('2023-08-30 11:55:01.000000', 6, 'UTC')) AS ongoing,
         round(multiply(divide(plus(plus(plus(divide(sum(s.active_milliseconds), 1000), sum(s.click_count)), sum(s.keypress_count)), sum(s.console_error_count)), plus(plus(plus(plus(sum(s.mouse_activity_count), dateDiff('SECOND', start_time, end_time)), sum(s.console_error_count)), sum(s.console_log_count)), sum(s.console_warn_count))), 100), 2) AS activity_score
  FROM session_replay_events AS s
  WHERE and(equals(s.team_id, 99999), greaterOrEquals(toTimeZone(s.min_first_timestamp, 'UTC'), toDateTime64('2023-08-09 12:00:01.000000', 6, 'UTC')), greaterOrEquals(toTimeZone(s.min_first_timestamp, 'UTC'), toDateTime64('2023-08-27 00:00:00.000000', 6, 'UTC')), lessOrEquals(toTimeZone(s.min_first_timestamp, 'UTC'), toDateTime64('2023-08-30 12:00:01.000000', 6, 'UTC')))
  GROUP BY s.session_id
  HAVING 1
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1,
                    format_csv_allow_double_quotes=0,
                    max_ast_elements=4000000,
                    max_expanded_ast_elements=4000000,
                    max_bytes_before_external_group_by=0,
                    transform_null_in=1,
                    optimize_min_equality_disjunction_chain_length=4294967295,
                    allow_experimental_join_condition=1
  '''
# ---
