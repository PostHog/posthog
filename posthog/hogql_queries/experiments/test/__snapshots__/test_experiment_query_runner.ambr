# serializer version: 1
# name: TestExperimentQueryRunner.test_query_runner_continuous_metric
  '''
  SELECT metrics_per_user.variant AS variant,
         count(metrics_per_user.entity_id) AS num_users,
         sum(metrics_per_user.value) AS total_sum,
         sum(power(metrics_per_user.value, 2)) AS total_sum_of_squares
  FROM
    (SELECT exposure_data.variant AS variant,
            exposure_data.entity_id AS entity_id,
            sum(coalesce(events_after_exposure.value, 0)) AS value
     FROM
       (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
               replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
               min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time
        FROM events
        LEFT OUTER JOIN
          (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                  person_distinct_id_overrides.distinct_id AS distinct_id
           FROM person_distinct_id_overrides
           WHERE equals(person_distinct_id_overrides.team_id, 99999)
           GROUP BY person_distinct_id_overrides.distinct_id
           HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
        WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')))
        GROUP BY variant,
                 entity_id) AS exposure_data
     LEFT JOIN
       (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
               if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
               exposure_data.variant AS variant,
               events.event AS event,
               accurateCastOrNull(JSONExtractRaw(events.properties, 'amount'), 'Float64') AS value
        FROM events
        LEFT OUTER JOIN
          (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                  person_distinct_id_overrides.distinct_id AS distinct_id
           FROM person_distinct_id_overrides
           WHERE equals(person_distinct_id_overrides.team_id, 99999)
           GROUP BY person_distinct_id_overrides.distinct_id
           HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
        INNER JOIN
          (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
                  replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
                  min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time
           FROM events
           LEFT OUTER JOIN
             (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                     person_distinct_id_overrides.distinct_id AS distinct_id
              FROM person_distinct_id_overrides
              WHERE equals(person_distinct_id_overrides.team_id, 99999)
              GROUP BY person_distinct_id_overrides.distinct_id
              HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
           WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')))
           GROUP BY variant,
                    entity_id) AS exposure_data ON equals(if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id), exposure_data.entity_id)
        WHERE and(equals(events.team_id, 99999), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), exposure_data.first_exposure_time), equals(events.event, 'purchase'))) AS events_after_exposure ON and(equals(toString(exposure_data.entity_id), toString(events_after_exposure.entity_id)), equals(exposure_data.variant, events_after_exposure.variant))
     GROUP BY exposure_data.variant,
              exposure_data.entity_id) AS metrics_per_user
  GROUP BY metrics_per_user.variant
  LIMIT 100 SETTINGS readonly=2,
                     max_execution_time=60,
                     allow_experimental_object_type=1,
                     format_csv_allow_double_quotes=0,
                     max_ast_elements=4000000,
                     max_expanded_ast_elements=4000000,
                     max_bytes_before_external_group_by=0
  '''
# ---
# name: TestExperimentQueryRunner.test_query_runner_data_warehouse_binomial_metric
  '''
  SELECT metrics_per_user.variant AS variant,
         count(metrics_per_user.entity_id) AS num_users,
         sum(metrics_per_user.value) AS total_sum,
         sum(power(metrics_per_user.value, 2)) AS total_sum_of_squares
  FROM
    (SELECT exposure_data.variant AS variant,
            exposure_data.entity_id AS entity_id,
            coalesce(argMax(events_after_exposure.value, events_after_exposure.timestamp), 0) AS value
     FROM
       (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
               replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
               min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time,
               replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$user_id'), ''), 'null'), '^"|"$', '') AS exposure_identifier
        FROM events
        LEFT OUTER JOIN
          (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                  person_distinct_id_overrides.distinct_id AS distinct_id
           FROM person_distinct_id_overrides
           WHERE equals(person_distinct_id_overrides.team_id, 99999)
           GROUP BY person_distinct_id_overrides.distinct_id
           HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
        WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')))
        GROUP BY variant,
                 entity_id,
                 replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$user_id'), ''), 'null'), '^"|"$', '')) AS exposure_data
     LEFT JOIN
       (SELECT usage.ds AS timestamp,
               usage.userid AS after_exposure_identifier,
               exposure_data.variant AS variant,
               1 AS value
        FROM
          (SELECT *
           FROM s3('http://host.docker.internal:19000/posthog/test_storage_bucket-posthog.hogql.experiments.queryrunner/*.parquet', 'object_storage_root_user', 'object_storage_root_password', 'Parquet', '`ds` Date, `id` String, `usage` Int64, `userid` String')) AS usage
        INNER JOIN
          (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
                  replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
                  min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time,
                  replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$user_id'), ''), 'null'), '^"|"$', '') AS exposure_identifier
           FROM events
           LEFT OUTER JOIN
             (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                     person_distinct_id_overrides.distinct_id AS distinct_id
              FROM person_distinct_id_overrides
              WHERE equals(person_distinct_id_overrides.team_id, 99999)
              GROUP BY person_distinct_id_overrides.distinct_id
              HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
           WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')))
           GROUP BY variant,
                    entity_id,
                    replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$user_id'), ''), 'null'), '^"|"$', '')) AS exposure_data ON equals(usage.userid, toString(exposure_data.exposure_identifier))
        WHERE and(greaterOrEquals(usage.ds, toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(usage.ds, toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), ifNull(greaterOrEquals(usage.ds, exposure_data.first_exposure_time), 0))) AS events_after_exposure ON and(equals(toString(exposure_data.exposure_identifier), toString(events_after_exposure.after_exposure_identifier)), equals(exposure_data.variant, events_after_exposure.variant))
     GROUP BY exposure_data.variant,
              exposure_data.entity_id) AS metrics_per_user
  GROUP BY metrics_per_user.variant
  LIMIT 100 SETTINGS readonly=2,
                     max_execution_time=60,
                     allow_experimental_object_type=1,
                     format_csv_allow_double_quotes=0,
                     max_ast_elements=4000000,
                     max_expanded_ast_elements=4000000,
                     max_bytes_before_external_group_by=0
  '''
# ---
# name: TestExperimentQueryRunner.test_query_runner_data_warehouse_continuous_metric
  '''
  SELECT metrics_per_user.variant AS variant,
         count(metrics_per_user.entity_id) AS num_users,
         sum(metrics_per_user.value) AS total_sum,
         sum(power(metrics_per_user.value, 2)) AS total_sum_of_squares
  FROM
    (SELECT exposure_data.variant AS variant,
            exposure_data.entity_id AS entity_id,
            sum(coalesce(events_after_exposure.value, 0)) AS value
     FROM
       (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
               replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
               min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time,
               replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$user_id'), ''), 'null'), '^"|"$', '') AS exposure_identifier
        FROM events
        LEFT OUTER JOIN
          (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                  person_distinct_id_overrides.distinct_id AS distinct_id
           FROM person_distinct_id_overrides
           WHERE equals(person_distinct_id_overrides.team_id, 99999)
           GROUP BY person_distinct_id_overrides.distinct_id
           HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
        WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')))
        GROUP BY variant,
                 entity_id,
                 replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$user_id'), ''), 'null'), '^"|"$', '')) AS exposure_data
     LEFT JOIN
       (SELECT usage.ds AS timestamp,
               usage.userid AS after_exposure_identifier,
               exposure_data.variant AS variant,
               usage.usage AS value
        FROM
          (SELECT *
           FROM s3('http://host.docker.internal:19000/posthog/test_storage_bucket-posthog.hogql.experiments.queryrunner/*.parquet', 'object_storage_root_user', 'object_storage_root_password', 'Parquet', '`ds` Date, `id` String, `usage` Int64, `userid` String')) AS usage
        INNER JOIN
          (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
                  replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
                  min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time,
                  replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$user_id'), ''), 'null'), '^"|"$', '') AS exposure_identifier
           FROM events
           LEFT OUTER JOIN
             (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                     person_distinct_id_overrides.distinct_id AS distinct_id
              FROM person_distinct_id_overrides
              WHERE equals(person_distinct_id_overrides.team_id, 99999)
              GROUP BY person_distinct_id_overrides.distinct_id
              HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
           WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')))
           GROUP BY variant,
                    entity_id,
                    replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$user_id'), ''), 'null'), '^"|"$', '')) AS exposure_data ON equals(usage.userid, toString(exposure_data.exposure_identifier))
        WHERE and(greaterOrEquals(usage.ds, toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(usage.ds, toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), ifNull(greaterOrEquals(usage.ds, exposure_data.first_exposure_time), 0))) AS events_after_exposure ON and(equals(toString(exposure_data.exposure_identifier), toString(events_after_exposure.after_exposure_identifier)), equals(exposure_data.variant, events_after_exposure.variant))
     GROUP BY exposure_data.variant,
              exposure_data.entity_id) AS metrics_per_user
  GROUP BY metrics_per_user.variant
  LIMIT 100 SETTINGS readonly=2,
                     max_execution_time=60,
                     allow_experimental_object_type=1,
                     format_csv_allow_double_quotes=0,
                     max_ast_elements=4000000,
                     max_expanded_ast_elements=4000000,
                     max_bytes_before_external_group_by=0
  '''
# ---
# name: TestExperimentQueryRunner.test_query_runner_data_warehouse_count_metric
  '''
  SELECT metrics_per_user.variant AS variant,
         count(metrics_per_user.entity_id) AS num_users,
         sum(metrics_per_user.value) AS total_sum,
         sum(power(metrics_per_user.value, 2)) AS total_sum_of_squares
  FROM
    (SELECT exposure_data.variant AS variant,
            exposure_data.entity_id AS entity_id,
            sum(coalesce(events_after_exposure.value, 0)) AS value
     FROM
       (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
               replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
               min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time,
               replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$user_id'), ''), 'null'), '^"|"$', '') AS exposure_identifier
        FROM events
        LEFT OUTER JOIN
          (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                  person_distinct_id_overrides.distinct_id AS distinct_id
           FROM person_distinct_id_overrides
           WHERE equals(person_distinct_id_overrides.team_id, 99999)
           GROUP BY person_distinct_id_overrides.distinct_id
           HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
        WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')))
        GROUP BY variant,
                 entity_id,
                 replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$user_id'), ''), 'null'), '^"|"$', '')) AS exposure_data
     LEFT JOIN
       (SELECT usage.ds AS timestamp,
               usage.userid AS after_exposure_identifier,
               exposure_data.variant AS variant,
               1 AS value
        FROM
          (SELECT *
           FROM s3('http://host.docker.internal:19000/posthog/test_storage_bucket-posthog.hogql.experiments.queryrunner/*.parquet', 'object_storage_root_user', 'object_storage_root_password', 'Parquet', '`ds` Date, `id` String, `usage` Int64, `userid` String')) AS usage
        INNER JOIN
          (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
                  replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
                  min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time,
                  replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$user_id'), ''), 'null'), '^"|"$', '') AS exposure_identifier
           FROM events
           LEFT OUTER JOIN
             (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                     person_distinct_id_overrides.distinct_id AS distinct_id
              FROM person_distinct_id_overrides
              WHERE equals(person_distinct_id_overrides.team_id, 99999)
              GROUP BY person_distinct_id_overrides.distinct_id
              HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
           WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')))
           GROUP BY variant,
                    entity_id,
                    replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$user_id'), ''), 'null'), '^"|"$', '')) AS exposure_data ON equals(usage.userid, toString(exposure_data.exposure_identifier))
        WHERE and(greaterOrEquals(usage.ds, toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(usage.ds, toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), ifNull(greaterOrEquals(usage.ds, exposure_data.first_exposure_time), 0))) AS events_after_exposure ON and(equals(toString(exposure_data.exposure_identifier), toString(events_after_exposure.after_exposure_identifier)), equals(exposure_data.variant, events_after_exposure.variant))
     GROUP BY exposure_data.variant,
              exposure_data.entity_id) AS metrics_per_user
  GROUP BY metrics_per_user.variant
  LIMIT 100 SETTINGS readonly=2,
                     max_execution_time=60,
                     allow_experimental_object_type=1,
                     format_csv_allow_double_quotes=0,
                     max_ast_elements=4000000,
                     max_expanded_ast_elements=4000000,
                     max_bytes_before_external_group_by=0
  '''
# ---
# name: TestExperimentQueryRunner.test_query_runner_funnel_metric
  '''
  SELECT metrics_per_user.variant AS variant,
         count(metrics_per_user.entity_id) AS num_users,
         sum(metrics_per_user.value) AS total_sum,
         sum(power(metrics_per_user.value, 2)) AS total_sum_of_squares
  FROM
    (SELECT exposure_data.variant AS variant,
            exposure_data.entity_id AS entity_id,
            coalesce(argMax(events_after_exposure.value, events_after_exposure.timestamp), 0) AS value
     FROM
       (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
               replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
               min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time
        FROM events
        LEFT OUTER JOIN
          (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                  person_distinct_id_overrides.distinct_id AS distinct_id
           FROM person_distinct_id_overrides
           WHERE equals(person_distinct_id_overrides.team_id, 99999)
           GROUP BY person_distinct_id_overrides.distinct_id
           HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
        WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')))
        GROUP BY variant,
                 entity_id) AS exposure_data
     LEFT JOIN
       (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
               if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
               exposure_data.variant AS variant,
               events.event AS event,
               1 AS value
        FROM events
        LEFT OUTER JOIN
          (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                  person_distinct_id_overrides.distinct_id AS distinct_id
           FROM person_distinct_id_overrides
           WHERE equals(person_distinct_id_overrides.team_id, 99999)
           GROUP BY person_distinct_id_overrides.distinct_id
           HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
        INNER JOIN
          (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
                  replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
                  min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time
           FROM events
           LEFT OUTER JOIN
             (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                     person_distinct_id_overrides.distinct_id AS distinct_id
              FROM person_distinct_id_overrides
              WHERE equals(person_distinct_id_overrides.team_id, 99999)
              GROUP BY person_distinct_id_overrides.distinct_id
              HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
           WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')))
           GROUP BY variant,
                    entity_id) AS exposure_data ON equals(if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id), exposure_data.entity_id)
        WHERE and(equals(events.team_id, 99999), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), exposure_data.first_exposure_time), equals(events.event, 'purchase'))) AS events_after_exposure ON and(equals(toString(exposure_data.entity_id), toString(events_after_exposure.entity_id)), equals(exposure_data.variant, events_after_exposure.variant))
     GROUP BY exposure_data.variant,
              exposure_data.entity_id) AS metrics_per_user
  GROUP BY metrics_per_user.variant
  LIMIT 100 SETTINGS readonly=2,
                     max_execution_time=60,
                     allow_experimental_object_type=1,
                     format_csv_allow_double_quotes=0,
                     max_ast_elements=4000000,
                     max_expanded_ast_elements=4000000,
                     max_bytes_before_external_group_by=0
  '''
# ---
# name: TestExperimentQueryRunner.test_query_runner_includes_date_range
  '''
  SELECT metrics_per_user.variant AS variant,
         count(metrics_per_user.entity_id) AS num_users,
         sum(metrics_per_user.value) AS total_sum,
         sum(power(metrics_per_user.value, 2)) AS total_sum_of_squares
  FROM
    (SELECT exposure_data.variant AS variant,
            exposure_data.entity_id AS entity_id,
            sum(coalesce(events_after_exposure.value, 0)) AS value
     FROM
       (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
               replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
               min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time
        FROM events
        LEFT OUTER JOIN
          (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                  person_distinct_id_overrides.distinct_id AS distinct_id
           FROM person_distinct_id_overrides
           WHERE equals(person_distinct_id_overrides.team_id, 99999)
           GROUP BY person_distinct_id_overrides.distinct_id
           HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
        WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')))
        GROUP BY variant,
                 entity_id) AS exposure_data
     LEFT JOIN
       (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
               if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
               exposure_data.variant AS variant,
               events.event AS event,
               1 AS value
        FROM events
        LEFT OUTER JOIN
          (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                  person_distinct_id_overrides.distinct_id AS distinct_id
           FROM person_distinct_id_overrides
           WHERE equals(person_distinct_id_overrides.team_id, 99999)
           GROUP BY person_distinct_id_overrides.distinct_id
           HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
        INNER JOIN
          (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
                  replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
                  min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time
           FROM events
           LEFT OUTER JOIN
             (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                     person_distinct_id_overrides.distinct_id AS distinct_id
              FROM person_distinct_id_overrides
              WHERE equals(person_distinct_id_overrides.team_id, 99999)
              GROUP BY person_distinct_id_overrides.distinct_id
              HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
           WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')))
           GROUP BY variant,
                    entity_id) AS exposure_data ON equals(if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id), exposure_data.entity_id)
        WHERE and(equals(events.team_id, 99999), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), exposure_data.first_exposure_time), equals(events.event, 'purchase'))) AS events_after_exposure ON and(equals(toString(exposure_data.entity_id), toString(events_after_exposure.entity_id)), equals(exposure_data.variant, events_after_exposure.variant))
     GROUP BY exposure_data.variant,
              exposure_data.entity_id) AS metrics_per_user
  GROUP BY metrics_per_user.variant
  LIMIT 100 SETTINGS readonly=2,
                     max_execution_time=60,
                     allow_experimental_object_type=1,
                     format_csv_allow_double_quotes=0,
                     max_ast_elements=4000000,
                     max_expanded_ast_elements=4000000,
                     max_bytes_before_external_group_by=0
  '''
# ---
# name: TestExperimentQueryRunner.test_query_runner_includes_event_property_filters
  '''
  SELECT metrics_per_user.variant AS variant,
         count(metrics_per_user.entity_id) AS num_users,
         sum(metrics_per_user.value) AS total_sum,
         sum(power(metrics_per_user.value, 2)) AS total_sum_of_squares
  FROM
    (SELECT exposure_data.variant AS variant,
            exposure_data.entity_id AS entity_id,
            sum(coalesce(events_after_exposure.value, 0)) AS value
     FROM
       (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
               replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
               min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time
        FROM events
        LEFT OUTER JOIN
          (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                  person_distinct_id_overrides.distinct_id AS distinct_id
           FROM person_distinct_id_overrides
           WHERE equals(person_distinct_id_overrides.team_id, 99999)
           GROUP BY person_distinct_id_overrides.distinct_id
           HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
        WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')))
        GROUP BY variant,
                 entity_id) AS exposure_data
     LEFT JOIN
       (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
               if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
               exposure_data.variant AS variant,
               events.event AS event,
               1 AS value
        FROM events
        LEFT OUTER JOIN
          (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                  person_distinct_id_overrides.distinct_id AS distinct_id
           FROM person_distinct_id_overrides
           WHERE equals(person_distinct_id_overrides.team_id, 99999)
           GROUP BY person_distinct_id_overrides.distinct_id
           HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
        INNER JOIN
          (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
                  replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
                  min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time
           FROM events
           LEFT OUTER JOIN
             (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                     person_distinct_id_overrides.distinct_id AS distinct_id
              FROM person_distinct_id_overrides
              WHERE equals(person_distinct_id_overrides.team_id, 99999)
              GROUP BY person_distinct_id_overrides.distinct_id
              HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
           WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')))
           GROUP BY variant,
                    entity_id) AS exposure_data ON equals(if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id), exposure_data.entity_id)
        WHERE and(equals(events.team_id, 99999), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), exposure_data.first_exposure_time), equals(events.event, 'purchase'), ifNull(notEquals(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, 'plan'), ''), 'null'), '^"|"$', ''), 'pro'), 1))) AS events_after_exposure ON and(equals(toString(exposure_data.entity_id), toString(events_after_exposure.entity_id)), equals(exposure_data.variant, events_after_exposure.variant))
     GROUP BY exposure_data.variant,
              exposure_data.entity_id) AS metrics_per_user
  GROUP BY metrics_per_user.variant
  LIMIT 100 SETTINGS readonly=2,
                     max_execution_time=60,
                     allow_experimental_object_type=1,
                     format_csv_allow_double_quotes=0,
                     max_ast_elements=4000000,
                     max_expanded_ast_elements=4000000,
                     max_bytes_before_external_group_by=0
  '''
# ---
# name: TestExperimentQueryRunner.test_query_runner_invalid_feature_flag_property
  '''
  SELECT metrics_per_user.variant AS variant,
         count(metrics_per_user.entity_id) AS num_users,
         sum(metrics_per_user.value) AS total_sum,
         sum(power(metrics_per_user.value, 2)) AS total_sum_of_squares
  FROM
    (SELECT exposure_data.variant AS variant,
            exposure_data.entity_id AS entity_id,
            sum(coalesce(events_after_exposure.value, 0)) AS value
     FROM
       (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
               replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
               min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time
        FROM events
        LEFT OUTER JOIN
          (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                  person_distinct_id_overrides.distinct_id AS distinct_id
           FROM person_distinct_id_overrides
           WHERE equals(person_distinct_id_overrides.team_id, 99999)
           GROUP BY person_distinct_id_overrides.distinct_id
           HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
        WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')))
        GROUP BY variant,
                 entity_id) AS exposure_data
     LEFT JOIN
       (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
               if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
               exposure_data.variant AS variant,
               events.event AS event,
               1 AS value
        FROM events
        LEFT OUTER JOIN
          (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                  person_distinct_id_overrides.distinct_id AS distinct_id
           FROM person_distinct_id_overrides
           WHERE equals(person_distinct_id_overrides.team_id, 99999)
           GROUP BY person_distinct_id_overrides.distinct_id
           HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
        INNER JOIN
          (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
                  replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
                  min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time
           FROM events
           LEFT OUTER JOIN
             (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                     person_distinct_id_overrides.distinct_id AS distinct_id
              FROM person_distinct_id_overrides
              WHERE equals(person_distinct_id_overrides.team_id, 99999)
              GROUP BY person_distinct_id_overrides.distinct_id
              HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
           WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')))
           GROUP BY variant,
                    entity_id) AS exposure_data ON equals(if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id), exposure_data.entity_id)
        WHERE and(equals(events.team_id, 99999), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), exposure_data.first_exposure_time), equals(events.event, 'purchase'))) AS events_after_exposure ON and(equals(toString(exposure_data.entity_id), toString(events_after_exposure.entity_id)), equals(exposure_data.variant, events_after_exposure.variant))
     GROUP BY exposure_data.variant,
              exposure_data.entity_id) AS metrics_per_user
  GROUP BY metrics_per_user.variant
  LIMIT 100 SETTINGS readonly=2,
                     max_execution_time=60,
                     allow_experimental_object_type=1,
                     format_csv_allow_double_quotes=0,
                     max_ast_elements=4000000,
                     max_expanded_ast_elements=4000000,
                     max_bytes_before_external_group_by=0
  '''
# ---
# name: TestExperimentQueryRunner.test_query_runner_standard_flow_v2_stats
  '''
  SELECT metrics_per_user.variant AS variant,
         count(metrics_per_user.entity_id) AS num_users,
         sum(metrics_per_user.value) AS total_sum,
         sum(power(metrics_per_user.value, 2)) AS total_sum_of_squares
  FROM
    (SELECT exposure_data.variant AS variant,
            exposure_data.entity_id AS entity_id,
            sum(coalesce(events_after_exposure.value, 0)) AS value
     FROM
       (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
               replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
               min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time
        FROM events
        LEFT OUTER JOIN
          (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                  person_distinct_id_overrides.distinct_id AS distinct_id
           FROM person_distinct_id_overrides
           WHERE equals(person_distinct_id_overrides.team_id, 99999)
           GROUP BY person_distinct_id_overrides.distinct_id
           HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
        WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')))
        GROUP BY variant,
                 entity_id) AS exposure_data
     LEFT JOIN
       (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
               if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
               exposure_data.variant AS variant,
               events.event AS event,
               1 AS value
        FROM events
        LEFT OUTER JOIN
          (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                  person_distinct_id_overrides.distinct_id AS distinct_id
           FROM person_distinct_id_overrides
           WHERE equals(person_distinct_id_overrides.team_id, 99999)
           GROUP BY person_distinct_id_overrides.distinct_id
           HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
        INNER JOIN
          (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
                  replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
                  min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time
           FROM events
           LEFT OUTER JOIN
             (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                     person_distinct_id_overrides.distinct_id AS distinct_id
              FROM person_distinct_id_overrides
              WHERE equals(person_distinct_id_overrides.team_id, 99999)
              GROUP BY person_distinct_id_overrides.distinct_id
              HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
           WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')))
           GROUP BY variant,
                    entity_id) AS exposure_data ON equals(if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id), exposure_data.entity_id)
        WHERE and(equals(events.team_id, 99999), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), exposure_data.first_exposure_time), equals(events.event, '$pageview'))) AS events_after_exposure ON and(equals(toString(exposure_data.entity_id), toString(events_after_exposure.entity_id)), equals(exposure_data.variant, events_after_exposure.variant))
     GROUP BY exposure_data.variant,
              exposure_data.entity_id) AS metrics_per_user
  GROUP BY metrics_per_user.variant
  LIMIT 100 SETTINGS readonly=2,
                     max_execution_time=60,
                     allow_experimental_object_type=1,
                     format_csv_allow_double_quotes=0,
                     max_ast_elements=4000000,
                     max_expanded_ast_elements=4000000,
                     max_bytes_before_external_group_by=0
  '''
# ---
# name: TestExperimentQueryRunner.test_query_runner_using_action
  '''
  SELECT metrics_per_user.variant AS variant,
         count(metrics_per_user.entity_id) AS num_users,
         sum(metrics_per_user.value) AS total_sum,
         sum(power(metrics_per_user.value, 2)) AS total_sum_of_squares
  FROM
    (SELECT exposure_data.variant AS variant,
            exposure_data.entity_id AS entity_id,
            sum(coalesce(events_after_exposure.value, 0)) AS value
     FROM
       (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
               replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
               min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time
        FROM events
        LEFT OUTER JOIN
          (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                  person_distinct_id_overrides.distinct_id AS distinct_id
           FROM person_distinct_id_overrides
           WHERE equals(person_distinct_id_overrides.team_id, 99999)
           GROUP BY person_distinct_id_overrides.distinct_id
           HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
        WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')))
        GROUP BY variant,
                 entity_id) AS exposure_data
     LEFT JOIN
       (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
               if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
               exposure_data.variant AS variant,
               events.event AS event,
               1 AS value
        FROM events
        LEFT OUTER JOIN
          (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                  person_distinct_id_overrides.distinct_id AS distinct_id
           FROM person_distinct_id_overrides
           WHERE equals(person_distinct_id_overrides.team_id, 99999)
           GROUP BY person_distinct_id_overrides.distinct_id
           HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
        INNER JOIN
          (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
                  replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
                  min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time
           FROM events
           LEFT OUTER JOIN
             (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                     person_distinct_id_overrides.distinct_id AS distinct_id
              FROM person_distinct_id_overrides
              WHERE equals(person_distinct_id_overrides.team_id, 99999)
              GROUP BY person_distinct_id_overrides.distinct_id
              HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
           WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')))
           GROUP BY variant,
                    entity_id) AS exposure_data ON equals(if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id), exposure_data.entity_id)
        WHERE and(equals(events.team_id, 99999), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), exposure_data.first_exposure_time), equals(events.event, 'purchase'))) AS events_after_exposure ON and(equals(toString(exposure_data.entity_id), toString(events_after_exposure.entity_id)), equals(exposure_data.variant, events_after_exposure.variant))
     GROUP BY exposure_data.variant,
              exposure_data.entity_id) AS metrics_per_user
  GROUP BY metrics_per_user.variant
  LIMIT 100 SETTINGS readonly=2,
                     max_execution_time=60,
                     allow_experimental_object_type=1,
                     format_csv_allow_double_quotes=0,
                     max_ast_elements=4000000,
                     max_expanded_ast_elements=4000000,
                     max_bytes_before_external_group_by=0
  '''
# ---
# name: TestExperimentQueryRunner.test_query_runner_with_custom_exposure
  '''
  SELECT metrics_per_user.variant AS variant,
         count(metrics_per_user.entity_id) AS num_users,
         sum(metrics_per_user.value) AS total_sum,
         sum(power(metrics_per_user.value, 2)) AS total_sum_of_squares
  FROM
    (SELECT exposure_data.variant AS variant,
            exposure_data.entity_id AS entity_id,
            sum(coalesce(events_after_exposure.value, 0)) AS value
     FROM
       (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
               replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
               min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time
        FROM events
        LEFT OUTER JOIN
          (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                  person_distinct_id_overrides.distinct_id AS distinct_id
           FROM person_distinct_id_overrides
           WHERE equals(person_distinct_id_overrides.team_id, 99999)
           GROUP BY person_distinct_id_overrides.distinct_id
           HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
        WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$pageview'), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0), ifNull(notEquals(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, 'plan'), ''), 'null'), '^"|"$', ''), 'free'), 1)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')))
        GROUP BY variant,
                 entity_id) AS exposure_data
     LEFT JOIN
       (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
               if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
               exposure_data.variant AS variant,
               events.event AS event,
               1 AS value
        FROM events
        LEFT OUTER JOIN
          (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                  person_distinct_id_overrides.distinct_id AS distinct_id
           FROM person_distinct_id_overrides
           WHERE equals(person_distinct_id_overrides.team_id, 99999)
           GROUP BY person_distinct_id_overrides.distinct_id
           HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
        INNER JOIN
          (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
                  replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
                  min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time
           FROM events
           LEFT OUTER JOIN
             (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                     person_distinct_id_overrides.distinct_id AS distinct_id
              FROM person_distinct_id_overrides
              WHERE equals(person_distinct_id_overrides.team_id, 99999)
              GROUP BY person_distinct_id_overrides.distinct_id
              HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
           WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$pageview'), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0), ifNull(notEquals(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, 'plan'), ''), 'null'), '^"|"$', ''), 'free'), 1)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')))
           GROUP BY variant,
                    entity_id) AS exposure_data ON equals(if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id), exposure_data.entity_id)
        WHERE and(equals(events.team_id, 99999), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), exposure_data.first_exposure_time), equals(events.event, 'purchase'))) AS events_after_exposure ON and(equals(toString(exposure_data.entity_id), toString(events_after_exposure.entity_id)), equals(exposure_data.variant, events_after_exposure.variant))
     GROUP BY exposure_data.variant,
              exposure_data.entity_id) AS metrics_per_user
  GROUP BY metrics_per_user.variant
  LIMIT 100 SETTINGS readonly=2,
                     max_execution_time=60,
                     allow_experimental_object_type=1,
                     format_csv_allow_double_quotes=0,
                     max_ast_elements=4000000,
                     max_expanded_ast_elements=4000000,
                     max_bytes_before_external_group_by=0
  '''
# ---
# name: TestExperimentQueryRunner.test_query_runner_with_data_warehouse_internal_filters_0_person_properties
  '''
  SELECT metrics_per_user.variant AS variant,
         count(metrics_per_user.entity_id) AS num_users,
         sum(metrics_per_user.value) AS total_sum,
         sum(power(metrics_per_user.value, 2)) AS total_sum_of_squares
  FROM
    (SELECT exposure_data.variant AS variant,
            exposure_data.entity_id AS entity_id,
            sum(coalesce(events_after_exposure.value, 0)) AS value
     FROM
       (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
               replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
               min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time,
               replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$user_id'), ''), 'null'), '^"|"$', '') AS exposure_identifier
        FROM events
        LEFT OUTER JOIN
          (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                  person_distinct_id_overrides.distinct_id AS distinct_id
           FROM person_distinct_id_overrides
           WHERE equals(person_distinct_id_overrides.team_id, 99999)
           GROUP BY person_distinct_id_overrides.distinct_id
           HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
        LEFT JOIN
          (SELECT person.id AS id,
                  replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(person.properties, 'email'), ''), 'null'), '^"|"$', '') AS properties___email
           FROM person
           WHERE and(equals(person.team_id, 99999), ifNull(in(tuple(person.id, person.version),
                                                                (SELECT person.id AS id, max(person.version) AS version
                                                                 FROM person
                                                                 WHERE equals(person.team_id, 99999)
                                                                 GROUP BY person.id
                                                                 HAVING and(ifNull(equals(argMax(person.is_deleted, person.version), 0), 0), ifNull(less(argMax(toTimeZone(person.created_at, 'UTC'), person.version), plus(now64(6, 'UTC'), toIntervalDay(1))), 0)))), 0)) SETTINGS optimize_aggregation_in_order=1) AS events__person ON equals(if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id), events__person.id)
        WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), ifNull(notILike(toString(events__person.properties___email), '%@posthog.com%'), 1))
        GROUP BY variant,
                 entity_id,
                 replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$user_id'), ''), 'null'), '^"|"$', '')) AS exposure_data
     LEFT JOIN
       (SELECT usage.ds AS timestamp,
               usage.userid AS after_exposure_identifier,
               exposure_data.variant AS variant,
               usage.usage AS value
        FROM
          (SELECT *
           FROM s3('http://host.docker.internal:19000/posthog/test_storage_bucket-posthog.hogql.experiments.queryrunner/*.parquet', 'object_storage_root_user', 'object_storage_root_password', 'Parquet', '`ds` Date, `id` String, `usage` Int64, `userid` String')) AS usage
        INNER JOIN
          (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
                  replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
                  min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time,
                  replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$user_id'), ''), 'null'), '^"|"$', '') AS exposure_identifier
           FROM events
           LEFT OUTER JOIN
             (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                     person_distinct_id_overrides.distinct_id AS distinct_id
              FROM person_distinct_id_overrides
              WHERE equals(person_distinct_id_overrides.team_id, 99999)
              GROUP BY person_distinct_id_overrides.distinct_id
              HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
           LEFT JOIN
             (SELECT person.id AS id,
                     replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(person.properties, 'email'), ''), 'null'), '^"|"$', '') AS properties___email
              FROM person
              WHERE and(equals(person.team_id, 99999), ifNull(in(tuple(person.id, person.version),
                                                                   (SELECT person.id AS id, max(person.version) AS version
                                                                    FROM person
                                                                    WHERE equals(person.team_id, 99999)
                                                                    GROUP BY person.id
                                                                    HAVING and(ifNull(equals(argMax(person.is_deleted, person.version), 0), 0), ifNull(less(argMax(toTimeZone(person.created_at, 'UTC'), person.version), plus(now64(6, 'UTC'), toIntervalDay(1))), 0)))), 0)) SETTINGS optimize_aggregation_in_order=1) AS events__person ON equals(if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id), events__person.id)
           WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), ifNull(notILike(toString(events__person.properties___email), '%@posthog.com%'), 1))
           GROUP BY variant,
                    entity_id,
                    replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$user_id'), ''), 'null'), '^"|"$', '')) AS exposure_data ON equals(usage.userid, toString(exposure_data.exposure_identifier))
        WHERE and(greaterOrEquals(usage.ds, toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(usage.ds, toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), ifNull(greaterOrEquals(usage.ds, exposure_data.first_exposure_time), 0))) AS events_after_exposure ON and(equals(toString(exposure_data.exposure_identifier), toString(events_after_exposure.after_exposure_identifier)), equals(exposure_data.variant, events_after_exposure.variant))
     GROUP BY exposure_data.variant,
              exposure_data.entity_id) AS metrics_per_user
  GROUP BY metrics_per_user.variant
  LIMIT 100 SETTINGS readonly=2,
                     max_execution_time=60,
                     allow_experimental_object_type=1,
                     format_csv_allow_double_quotes=0,
                     max_ast_elements=4000000,
                     max_expanded_ast_elements=4000000,
                     max_bytes_before_external_group_by=0
  '''
# ---
# name: TestExperimentQueryRunner.test_query_runner_with_data_warehouse_internal_filters_0_person_properties.1
  '''
  SELECT metrics_per_user.variant AS variant,
         count(metrics_per_user.entity_id) AS num_users,
         sum(metrics_per_user.value) AS total_sum,
         sum(power(metrics_per_user.value, 2)) AS total_sum_of_squares
  FROM
    (SELECT exposure_data.variant AS variant,
            exposure_data.entity_id AS entity_id,
            sum(coalesce(events_after_exposure.value, 0)) AS value
     FROM
       (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
               replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
               min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time,
               replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$user_id'), ''), 'null'), '^"|"$', '') AS exposure_identifier
        FROM events
        LEFT OUTER JOIN
          (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                  person_distinct_id_overrides.distinct_id AS distinct_id
           FROM person_distinct_id_overrides
           WHERE equals(person_distinct_id_overrides.team_id, 99999)
           GROUP BY person_distinct_id_overrides.distinct_id
           HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
        WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')))
        GROUP BY variant,
                 entity_id,
                 replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$user_id'), ''), 'null'), '^"|"$', '')) AS exposure_data
     LEFT JOIN
       (SELECT usage.ds AS timestamp,
               usage.userid AS after_exposure_identifier,
               exposure_data.variant AS variant,
               usage.usage AS value
        FROM
          (SELECT *
           FROM s3('http://host.docker.internal:19000/posthog/test_storage_bucket-posthog.hogql.experiments.queryrunner/*.parquet', 'object_storage_root_user', 'object_storage_root_password', 'Parquet', '`ds` Date, `id` String, `usage` Int64, `userid` String')) AS usage
        INNER JOIN
          (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
                  replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
                  min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time,
                  replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$user_id'), ''), 'null'), '^"|"$', '') AS exposure_identifier
           FROM events
           LEFT OUTER JOIN
             (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                     person_distinct_id_overrides.distinct_id AS distinct_id
              FROM person_distinct_id_overrides
              WHERE equals(person_distinct_id_overrides.team_id, 99999)
              GROUP BY person_distinct_id_overrides.distinct_id
              HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
           WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')))
           GROUP BY variant,
                    entity_id,
                    replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$user_id'), ''), 'null'), '^"|"$', '')) AS exposure_data ON equals(usage.userid, toString(exposure_data.exposure_identifier))
        WHERE and(greaterOrEquals(usage.ds, toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(usage.ds, toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), ifNull(greaterOrEquals(usage.ds, exposure_data.first_exposure_time), 0))) AS events_after_exposure ON and(equals(toString(exposure_data.exposure_identifier), toString(events_after_exposure.after_exposure_identifier)), equals(exposure_data.variant, events_after_exposure.variant))
     GROUP BY exposure_data.variant,
              exposure_data.entity_id) AS metrics_per_user
  GROUP BY metrics_per_user.variant
  LIMIT 100 SETTINGS readonly=2,
                     max_execution_time=60,
                     allow_experimental_object_type=1,
                     format_csv_allow_double_quotes=0,
                     max_ast_elements=4000000,
                     max_expanded_ast_elements=4000000,
                     max_bytes_before_external_group_by=0
  '''
# ---
# name: TestExperimentQueryRunner.test_query_runner_with_data_warehouse_internal_filters_1_event_properties
  '''
  SELECT metrics_per_user.variant AS variant,
         count(metrics_per_user.entity_id) AS num_users,
         sum(metrics_per_user.value) AS total_sum,
         sum(power(metrics_per_user.value, 2)) AS total_sum_of_squares
  FROM
    (SELECT exposure_data.variant AS variant,
            exposure_data.entity_id AS entity_id,
            sum(coalesce(events_after_exposure.value, 0)) AS value
     FROM
       (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
               replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
               min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time,
               replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$user_id'), ''), 'null'), '^"|"$', '') AS exposure_identifier
        FROM events
        LEFT OUTER JOIN
          (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                  person_distinct_id_overrides.distinct_id AS distinct_id
           FROM person_distinct_id_overrides
           WHERE equals(person_distinct_id_overrides.team_id, 99999)
           GROUP BY person_distinct_id_overrides.distinct_id
           HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
        WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), ifNull(not(match(toString(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$host'), ''), 'null'), '^"|"$', '')), '^(localhost|127\\.0\\.0\\.1)($|:)')), 1))
        GROUP BY variant,
                 entity_id,
                 replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$user_id'), ''), 'null'), '^"|"$', '')) AS exposure_data
     LEFT JOIN
       (SELECT usage.ds AS timestamp,
               usage.userid AS after_exposure_identifier,
               exposure_data.variant AS variant,
               usage.usage AS value
        FROM
          (SELECT *
           FROM s3('http://host.docker.internal:19000/posthog/test_storage_bucket-posthog.hogql.experiments.queryrunner/*.parquet', 'object_storage_root_user', 'object_storage_root_password', 'Parquet', '`ds` Date, `id` String, `usage` Int64, `userid` String')) AS usage
        INNER JOIN
          (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
                  replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
                  min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time,
                  replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$user_id'), ''), 'null'), '^"|"$', '') AS exposure_identifier
           FROM events
           LEFT OUTER JOIN
             (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                     person_distinct_id_overrides.distinct_id AS distinct_id
              FROM person_distinct_id_overrides
              WHERE equals(person_distinct_id_overrides.team_id, 99999)
              GROUP BY person_distinct_id_overrides.distinct_id
              HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
           WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), ifNull(not(match(toString(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$host'), ''), 'null'), '^"|"$', '')), '^(localhost|127\\.0\\.0\\.1)($|:)')), 1))
           GROUP BY variant,
                    entity_id,
                    replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$user_id'), ''), 'null'), '^"|"$', '')) AS exposure_data ON equals(usage.userid, toString(exposure_data.exposure_identifier))
        WHERE and(greaterOrEquals(usage.ds, toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(usage.ds, toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), ifNull(greaterOrEquals(usage.ds, exposure_data.first_exposure_time), 0))) AS events_after_exposure ON and(equals(toString(exposure_data.exposure_identifier), toString(events_after_exposure.after_exposure_identifier)), equals(exposure_data.variant, events_after_exposure.variant))
     GROUP BY exposure_data.variant,
              exposure_data.entity_id) AS metrics_per_user
  GROUP BY metrics_per_user.variant
  LIMIT 100 SETTINGS readonly=2,
                     max_execution_time=60,
                     allow_experimental_object_type=1,
                     format_csv_allow_double_quotes=0,
                     max_ast_elements=4000000,
                     max_expanded_ast_elements=4000000,
                     max_bytes_before_external_group_by=0
  '''
# ---
# name: TestExperimentQueryRunner.test_query_runner_with_data_warehouse_internal_filters_1_event_properties.1
  '''
  SELECT metrics_per_user.variant AS variant,
         count(metrics_per_user.entity_id) AS num_users,
         sum(metrics_per_user.value) AS total_sum,
         sum(power(metrics_per_user.value, 2)) AS total_sum_of_squares
  FROM
    (SELECT exposure_data.variant AS variant,
            exposure_data.entity_id AS entity_id,
            sum(coalesce(events_after_exposure.value, 0)) AS value
     FROM
       (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
               replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
               min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time,
               replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$user_id'), ''), 'null'), '^"|"$', '') AS exposure_identifier
        FROM events
        LEFT OUTER JOIN
          (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                  person_distinct_id_overrides.distinct_id AS distinct_id
           FROM person_distinct_id_overrides
           WHERE equals(person_distinct_id_overrides.team_id, 99999)
           GROUP BY person_distinct_id_overrides.distinct_id
           HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
        WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')))
        GROUP BY variant,
                 entity_id,
                 replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$user_id'), ''), 'null'), '^"|"$', '')) AS exposure_data
     LEFT JOIN
       (SELECT usage.ds AS timestamp,
               usage.userid AS after_exposure_identifier,
               exposure_data.variant AS variant,
               usage.usage AS value
        FROM
          (SELECT *
           FROM s3('http://host.docker.internal:19000/posthog/test_storage_bucket-posthog.hogql.experiments.queryrunner/*.parquet', 'object_storage_root_user', 'object_storage_root_password', 'Parquet', '`ds` Date, `id` String, `usage` Int64, `userid` String')) AS usage
        INNER JOIN
          (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
                  replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
                  min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time,
                  replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$user_id'), ''), 'null'), '^"|"$', '') AS exposure_identifier
           FROM events
           LEFT OUTER JOIN
             (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                     person_distinct_id_overrides.distinct_id AS distinct_id
              FROM person_distinct_id_overrides
              WHERE equals(person_distinct_id_overrides.team_id, 99999)
              GROUP BY person_distinct_id_overrides.distinct_id
              HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
           WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')))
           GROUP BY variant,
                    entity_id,
                    replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$user_id'), ''), 'null'), '^"|"$', '')) AS exposure_data ON equals(usage.userid, toString(exposure_data.exposure_identifier))
        WHERE and(greaterOrEquals(usage.ds, toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(usage.ds, toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), ifNull(greaterOrEquals(usage.ds, exposure_data.first_exposure_time), 0))) AS events_after_exposure ON and(equals(toString(exposure_data.exposure_identifier), toString(events_after_exposure.after_exposure_identifier)), equals(exposure_data.variant, events_after_exposure.variant))
     GROUP BY exposure_data.variant,
              exposure_data.entity_id) AS metrics_per_user
  GROUP BY metrics_per_user.variant
  LIMIT 100 SETTINGS readonly=2,
                     max_execution_time=60,
                     allow_experimental_object_type=1,
                     format_csv_allow_double_quotes=0,
                     max_ast_elements=4000000,
                     max_expanded_ast_elements=4000000,
                     max_bytes_before_external_group_by=0
  '''
# ---
# name: TestExperimentQueryRunner.test_query_runner_with_data_warehouse_internal_filters_2_feature_flags
  '''
  SELECT metrics_per_user.variant AS variant,
         count(metrics_per_user.entity_id) AS num_users,
         sum(metrics_per_user.value) AS total_sum,
         sum(power(metrics_per_user.value, 2)) AS total_sum_of_squares
  FROM
    (SELECT exposure_data.variant AS variant,
            exposure_data.entity_id AS entity_id,
            sum(coalesce(events_after_exposure.value, 0)) AS value
     FROM
       (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
               replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
               min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time,
               replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$user_id'), ''), 'null'), '^"|"$', '') AS exposure_identifier
        FROM events
        LEFT OUTER JOIN
          (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                  person_distinct_id_overrides.distinct_id AS distinct_id
           FROM person_distinct_id_overrides
           WHERE equals(person_distinct_id_overrides.team_id, 99999)
           GROUP BY person_distinct_id_overrides.distinct_id
           HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
        WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), or(ifNull(equals(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$feature/flag_doesnt_exist'), ''), 'null'), '^"|"$', ''), 'test'), 0), ifNull(equals(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$feature/flag_doesnt_exist'), ''), 'null'), '^"|"$', ''), 'control'), 0)))
        GROUP BY variant,
                 entity_id,
                 replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$user_id'), ''), 'null'), '^"|"$', '')) AS exposure_data
     LEFT JOIN
       (SELECT usage.ds AS timestamp,
               usage.userid AS after_exposure_identifier,
               exposure_data.variant AS variant,
               usage.usage AS value
        FROM
          (SELECT *
           FROM s3('http://host.docker.internal:19000/posthog/test_storage_bucket-posthog.hogql.experiments.queryrunner/*.parquet', 'object_storage_root_user', 'object_storage_root_password', 'Parquet', '`ds` Date, `id` String, `usage` Int64, `userid` String')) AS usage
        INNER JOIN
          (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
                  replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
                  min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time,
                  replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$user_id'), ''), 'null'), '^"|"$', '') AS exposure_identifier
           FROM events
           LEFT OUTER JOIN
             (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                     person_distinct_id_overrides.distinct_id AS distinct_id
              FROM person_distinct_id_overrides
              WHERE equals(person_distinct_id_overrides.team_id, 99999)
              GROUP BY person_distinct_id_overrides.distinct_id
              HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
           WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), or(ifNull(equals(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$feature/flag_doesnt_exist'), ''), 'null'), '^"|"$', ''), 'test'), 0), ifNull(equals(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$feature/flag_doesnt_exist'), ''), 'null'), '^"|"$', ''), 'control'), 0)))
           GROUP BY variant,
                    entity_id,
                    replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$user_id'), ''), 'null'), '^"|"$', '')) AS exposure_data ON equals(usage.userid, toString(exposure_data.exposure_identifier))
        WHERE and(greaterOrEquals(usage.ds, toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(usage.ds, toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), ifNull(greaterOrEquals(usage.ds, exposure_data.first_exposure_time), 0))) AS events_after_exposure ON and(equals(toString(exposure_data.exposure_identifier), toString(events_after_exposure.after_exposure_identifier)), equals(exposure_data.variant, events_after_exposure.variant))
     GROUP BY exposure_data.variant,
              exposure_data.entity_id) AS metrics_per_user
  GROUP BY metrics_per_user.variant
  LIMIT 100 SETTINGS readonly=2,
                     max_execution_time=60,
                     allow_experimental_object_type=1,
                     format_csv_allow_double_quotes=0,
                     max_ast_elements=4000000,
                     max_expanded_ast_elements=4000000,
                     max_bytes_before_external_group_by=0
  '''
# ---
# name: TestExperimentQueryRunner.test_query_runner_with_data_warehouse_internal_filters_2_feature_flags.1
  '''
  SELECT metrics_per_user.variant AS variant,
         count(metrics_per_user.entity_id) AS num_users,
         sum(metrics_per_user.value) AS total_sum,
         sum(power(metrics_per_user.value, 2)) AS total_sum_of_squares
  FROM
    (SELECT exposure_data.variant AS variant,
            exposure_data.entity_id AS entity_id,
            sum(coalesce(events_after_exposure.value, 0)) AS value
     FROM
       (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
               replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
               min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time,
               replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$user_id'), ''), 'null'), '^"|"$', '') AS exposure_identifier
        FROM events
        LEFT OUTER JOIN
          (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                  person_distinct_id_overrides.distinct_id AS distinct_id
           FROM person_distinct_id_overrides
           WHERE equals(person_distinct_id_overrides.team_id, 99999)
           GROUP BY person_distinct_id_overrides.distinct_id
           HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
        WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')))
        GROUP BY variant,
                 entity_id,
                 replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$user_id'), ''), 'null'), '^"|"$', '')) AS exposure_data
     LEFT JOIN
       (SELECT usage.ds AS timestamp,
               usage.userid AS after_exposure_identifier,
               exposure_data.variant AS variant,
               usage.usage AS value
        FROM
          (SELECT *
           FROM s3('http://host.docker.internal:19000/posthog/test_storage_bucket-posthog.hogql.experiments.queryrunner/*.parquet', 'object_storage_root_user', 'object_storage_root_password', 'Parquet', '`ds` Date, `id` String, `usage` Int64, `userid` String')) AS usage
        INNER JOIN
          (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
                  replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
                  min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time,
                  replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$user_id'), ''), 'null'), '^"|"$', '') AS exposure_identifier
           FROM events
           LEFT OUTER JOIN
             (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                     person_distinct_id_overrides.distinct_id AS distinct_id
              FROM person_distinct_id_overrides
              WHERE equals(person_distinct_id_overrides.team_id, 99999)
              GROUP BY person_distinct_id_overrides.distinct_id
              HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
           WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')))
           GROUP BY variant,
                    entity_id,
                    replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$user_id'), ''), 'null'), '^"|"$', '')) AS exposure_data ON equals(usage.userid, toString(exposure_data.exposure_identifier))
        WHERE and(greaterOrEquals(usage.ds, toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(usage.ds, toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), ifNull(greaterOrEquals(usage.ds, exposure_data.first_exposure_time), 0))) AS events_after_exposure ON and(equals(toString(exposure_data.exposure_identifier), toString(events_after_exposure.after_exposure_identifier)), equals(exposure_data.variant, events_after_exposure.variant))
     GROUP BY exposure_data.variant,
              exposure_data.entity_id) AS metrics_per_user
  GROUP BY metrics_per_user.variant
  LIMIT 100 SETTINGS readonly=2,
                     max_execution_time=60,
                     allow_experimental_object_type=1,
                     format_csv_allow_double_quotes=0,
                     max_ast_elements=4000000,
                     max_expanded_ast_elements=4000000,
                     max_bytes_before_external_group_by=0
  '''
# ---
# name: TestExperimentQueryRunner.test_query_runner_with_data_warehouse_internal_filters_3_cohort_static
  '''
  
  SELECT count(DISTINCT person_id)
  FROM person_static_cohort
  WHERE team_id = 99999
    AND cohort_id = 99999
  '''
# ---
# name: TestExperimentQueryRunner.test_query_runner_with_data_warehouse_internal_filters_3_cohort_static.1
  '''
  SELECT metrics_per_user.variant AS variant,
         count(metrics_per_user.entity_id) AS num_users,
         sum(metrics_per_user.value) AS total_sum,
         sum(power(metrics_per_user.value, 2)) AS total_sum_of_squares
  FROM
    (SELECT exposure_data.variant AS variant,
            exposure_data.entity_id AS entity_id,
            sum(coalesce(events_after_exposure.value, 0)) AS value
     FROM
       (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
               replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
               min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time,
               replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$user_id'), ''), 'null'), '^"|"$', '') AS exposure_identifier
        FROM events
        LEFT OUTER JOIN
          (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                  person_distinct_id_overrides.distinct_id AS distinct_id
           FROM person_distinct_id_overrides
           WHERE equals(person_distinct_id_overrides.team_id, 99999)
           GROUP BY person_distinct_id_overrides.distinct_id
           HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
        WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), ifNull(in(if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id),
person_static_cohort.person_id AS person_id
person_static_cohort
and(equals(person_static_cohort.team_id, 99999), equals(person_static_cohort.cohort_id, 99999)))), 0))
        GROUP BY variant,
                 entity_id,
                 replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$user_id'), ''), 'null'), '^"|"$', '')) AS exposure_data
     LEFT JOIN
       (SELECT usage.ds AS timestamp,
               usage.userid AS after_exposure_identifier,
               exposure_data.variant AS variant,
               usage.usage AS value
        FROM
          (SELECT *
           FROM s3('http://host.docker.internal:19000/posthog/test_storage_bucket-posthog.hogql.experiments.queryrunner/*.parquet', 'object_storage_root_user', 'object_storage_root_password', 'Parquet', '`ds` Date, `id` String, `usage` Int64, `userid` String')) AS usage
        INNER JOIN
          (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
                  replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
                  min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time,
                  replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$user_id'), ''), 'null'), '^"|"$', '') AS exposure_identifier
           FROM events
           LEFT OUTER JOIN
             (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                     person_distinct_id_overrides.distinct_id AS distinct_id
              FROM person_distinct_id_overrides
              WHERE equals(person_distinct_id_overrides.team_id, 99999)
              GROUP BY person_distinct_id_overrides.distinct_id
              HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
           WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), ifNull(in(if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id),
person_static_cohort.person_id AS person_id
person_static_cohort
and(equals(person_static_cohort.team_id, 99999), equals(person_static_cohort.cohort_id, 99999)))), 0))
           GROUP BY variant,
                    entity_id,
                    replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$user_id'), ''), 'null'), '^"|"$', '')) AS exposure_data ON equals(usage.userid, toString(exposure_data.exposure_identifier))
        WHERE and(greaterOrEquals(usage.ds, toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(usage.ds, toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), ifNull(greaterOrEquals(usage.ds, exposure_data.first_exposure_time), 0))) AS events_after_exposure ON and(equals(toString(exposure_data.exposure_identifier), toString(events_after_exposure.after_exposure_identifier)), equals(exposure_data.variant, events_after_exposure.variant))
     GROUP BY exposure_data.variant,
              exposure_data.entity_id) AS metrics_per_user
  GROUP BY metrics_per_user.variant
  LIMIT 100 SETTINGS readonly=2,
                     max_execution_time=60,
                     allow_experimental_object_type=1,
                     format_csv_allow_double_quotes=0,
                     max_ast_elements=4000000,
                     max_expanded_ast_elements=4000000,
                     max_bytes_before_external_group_by=0
  '''
# ---
# name: TestExperimentQueryRunner.test_query_runner_with_data_warehouse_internal_filters_3_cohort_static.2
  '''
  SELECT metrics_per_user.variant AS variant,
         count(metrics_per_user.entity_id) AS num_users,
         sum(metrics_per_user.value) AS total_sum,
         sum(power(metrics_per_user.value, 2)) AS total_sum_of_squares
  FROM
    (SELECT exposure_data.variant AS variant,
            exposure_data.entity_id AS entity_id,
            sum(coalesce(events_after_exposure.value, 0)) AS value
     FROM
       (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
               replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
               min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time,
               replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$user_id'), ''), 'null'), '^"|"$', '') AS exposure_identifier
        FROM events
        LEFT OUTER JOIN
          (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                  person_distinct_id_overrides.distinct_id AS distinct_id
           FROM person_distinct_id_overrides
           WHERE equals(person_distinct_id_overrides.team_id, 99999)
           GROUP BY person_distinct_id_overrides.distinct_id
           HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
        WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')))
        GROUP BY variant,
                 entity_id,
                 replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$user_id'), ''), 'null'), '^"|"$', '')) AS exposure_data
     LEFT JOIN
       (SELECT usage.ds AS timestamp,
               usage.userid AS after_exposure_identifier,
               exposure_data.variant AS variant,
               usage.usage AS value
        FROM
          (SELECT *
           FROM s3('http://host.docker.internal:19000/posthog/test_storage_bucket-posthog.hogql.experiments.queryrunner/*.parquet', 'object_storage_root_user', 'object_storage_root_password', 'Parquet', '`ds` Date, `id` String, `usage` Int64, `userid` String')) AS usage
        INNER JOIN
          (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
                  replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
                  min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time,
                  replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$user_id'), ''), 'null'), '^"|"$', '') AS exposure_identifier
           FROM events
           LEFT OUTER JOIN
             (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                     person_distinct_id_overrides.distinct_id AS distinct_id
              FROM person_distinct_id_overrides
              WHERE equals(person_distinct_id_overrides.team_id, 99999)
              GROUP BY person_distinct_id_overrides.distinct_id
              HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
           WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')))
           GROUP BY variant,
                    entity_id,
                    replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$user_id'), ''), 'null'), '^"|"$', '')) AS exposure_data ON equals(usage.userid, toString(exposure_data.exposure_identifier))
        WHERE and(greaterOrEquals(usage.ds, toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(usage.ds, toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), ifNull(greaterOrEquals(usage.ds, exposure_data.first_exposure_time), 0))) AS events_after_exposure ON and(equals(toString(exposure_data.exposure_identifier), toString(events_after_exposure.after_exposure_identifier)), equals(exposure_data.variant, events_after_exposure.variant))
     GROUP BY exposure_data.variant,
              exposure_data.entity_id) AS metrics_per_user
  GROUP BY metrics_per_user.variant
  LIMIT 100 SETTINGS readonly=2,
                     max_execution_time=60,
                     allow_experimental_object_type=1,
                     format_csv_allow_double_quotes=0,
                     max_ast_elements=4000000,
                     max_expanded_ast_elements=4000000,
                     max_bytes_before_external_group_by=0
  '''
# ---
# name: TestExperimentQueryRunner.test_query_runner_with_data_warehouse_internal_filters_4_cohort_dynamic
  '''
  
  SELECT count(DISTINCT person_id)
  FROM cohortpeople
  WHERE team_id = 99999
    AND cohort_id = 99999
    AND version = NULL
  '''
# ---
# name: TestExperimentQueryRunner.test_query_runner_with_data_warehouse_internal_filters_4_cohort_dynamic.1
  '''
  /* cohort_calculation: */
  SELECT count(DISTINCT person_id)
  FROM cohortpeople
  WHERE team_id = 99999
    AND cohort_id = 99999
    AND version = 0
  '''
# ---
# name: TestExperimentQueryRunner.test_query_runner_with_data_warehouse_internal_filters_4_cohort_dynamic.2
  '''
  SELECT metrics_per_user.variant AS variant,
         count(metrics_per_user.entity_id) AS num_users,
         sum(metrics_per_user.value) AS total_sum,
         sum(power(metrics_per_user.value, 2)) AS total_sum_of_squares
  FROM
    (SELECT exposure_data.variant AS variant,
            exposure_data.entity_id AS entity_id,
            sum(coalesce(events_after_exposure.value, 0)) AS value
     FROM
       (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
               replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
               min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time,
               replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$user_id'), ''), 'null'), '^"|"$', '') AS exposure_identifier
        FROM events
        LEFT OUTER JOIN
          (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                  person_distinct_id_overrides.distinct_id AS distinct_id
           FROM person_distinct_id_overrides
           WHERE equals(person_distinct_id_overrides.team_id, 99999)
           GROUP BY person_distinct_id_overrides.distinct_id
           HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
        WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), ifNull(in(if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id),
cohortpeople.person_id AS person_id
cohortpeople
and(equals(cohortpeople.team_id, 99999), equals(cohortpeople.cohort_id, 99999), equals(cohortpeople.version, 0)))), 0))
        GROUP BY variant,
                 entity_id,
                 replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$user_id'), ''), 'null'), '^"|"$', '')) AS exposure_data
     LEFT JOIN
       (SELECT usage.ds AS timestamp,
               usage.userid AS after_exposure_identifier,
               exposure_data.variant AS variant,
               usage.usage AS value
        FROM
          (SELECT *
           FROM s3('http://host.docker.internal:19000/posthog/test_storage_bucket-posthog.hogql.experiments.queryrunner/*.parquet', 'object_storage_root_user', 'object_storage_root_password', 'Parquet', '`ds` Date, `id` String, `usage` Int64, `userid` String')) AS usage
        INNER JOIN
          (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
                  replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
                  min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time,
                  replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$user_id'), ''), 'null'), '^"|"$', '') AS exposure_identifier
           FROM events
           LEFT OUTER JOIN
             (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                     person_distinct_id_overrides.distinct_id AS distinct_id
              FROM person_distinct_id_overrides
              WHERE equals(person_distinct_id_overrides.team_id, 99999)
              GROUP BY person_distinct_id_overrides.distinct_id
              HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
           WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), ifNull(in(if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id),
cohortpeople.person_id AS person_id
cohortpeople
and(equals(cohortpeople.team_id, 99999), equals(cohortpeople.cohort_id, 99999), equals(cohortpeople.version, 0)))), 0))
           GROUP BY variant,
                    entity_id,
                    replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$user_id'), ''), 'null'), '^"|"$', '')) AS exposure_data ON equals(usage.userid, toString(exposure_data.exposure_identifier))
        WHERE and(greaterOrEquals(usage.ds, toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(usage.ds, toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), ifNull(greaterOrEquals(usage.ds, exposure_data.first_exposure_time), 0))) AS events_after_exposure ON and(equals(toString(exposure_data.exposure_identifier), toString(events_after_exposure.after_exposure_identifier)), equals(exposure_data.variant, events_after_exposure.variant))
     GROUP BY exposure_data.variant,
              exposure_data.entity_id) AS metrics_per_user
  GROUP BY metrics_per_user.variant
  LIMIT 100 SETTINGS readonly=2,
                     max_execution_time=60,
                     allow_experimental_object_type=1,
                     format_csv_allow_double_quotes=0,
                     max_ast_elements=4000000,
                     max_expanded_ast_elements=4000000,
                     max_bytes_before_external_group_by=0
  '''
# ---
# name: TestExperimentQueryRunner.test_query_runner_with_data_warehouse_internal_filters_4_cohort_dynamic.3
  '''
  SELECT metrics_per_user.variant AS variant,
         count(metrics_per_user.entity_id) AS num_users,
         sum(metrics_per_user.value) AS total_sum,
         sum(power(metrics_per_user.value, 2)) AS total_sum_of_squares
  FROM
    (SELECT exposure_data.variant AS variant,
            exposure_data.entity_id AS entity_id,
            sum(coalesce(events_after_exposure.value, 0)) AS value
     FROM
       (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
               replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
               min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time,
               replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$user_id'), ''), 'null'), '^"|"$', '') AS exposure_identifier
        FROM events
        LEFT OUTER JOIN
          (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                  person_distinct_id_overrides.distinct_id AS distinct_id
           FROM person_distinct_id_overrides
           WHERE equals(person_distinct_id_overrides.team_id, 99999)
           GROUP BY person_distinct_id_overrides.distinct_id
           HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
        WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')))
        GROUP BY variant,
                 entity_id,
                 replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$user_id'), ''), 'null'), '^"|"$', '')) AS exposure_data
     LEFT JOIN
       (SELECT usage.ds AS timestamp,
               usage.userid AS after_exposure_identifier,
               exposure_data.variant AS variant,
               usage.usage AS value
        FROM
          (SELECT *
           FROM s3('http://host.docker.internal:19000/posthog/test_storage_bucket-posthog.hogql.experiments.queryrunner/*.parquet', 'object_storage_root_user', 'object_storage_root_password', 'Parquet', '`ds` Date, `id` String, `usage` Int64, `userid` String')) AS usage
        INNER JOIN
          (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
                  replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
                  min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time,
                  replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$user_id'), ''), 'null'), '^"|"$', '') AS exposure_identifier
           FROM events
           LEFT OUTER JOIN
             (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                     person_distinct_id_overrides.distinct_id AS distinct_id
              FROM person_distinct_id_overrides
              WHERE equals(person_distinct_id_overrides.team_id, 99999)
              GROUP BY person_distinct_id_overrides.distinct_id
              HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
           WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')))
           GROUP BY variant,
                    entity_id,
                    replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$user_id'), ''), 'null'), '^"|"$', '')) AS exposure_data ON equals(usage.userid, toString(exposure_data.exposure_identifier))
        WHERE and(greaterOrEquals(usage.ds, toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(usage.ds, toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), ifNull(greaterOrEquals(usage.ds, exposure_data.first_exposure_time), 0))) AS events_after_exposure ON and(equals(toString(exposure_data.exposure_identifier), toString(events_after_exposure.after_exposure_identifier)), equals(exposure_data.variant, events_after_exposure.variant))
     GROUP BY exposure_data.variant,
              exposure_data.entity_id) AS metrics_per_user
  GROUP BY metrics_per_user.variant
  LIMIT 100 SETTINGS readonly=2,
                     max_execution_time=60,
                     allow_experimental_object_type=1,
                     format_csv_allow_double_quotes=0,
                     max_ast_elements=4000000,
                     max_expanded_ast_elements=4000000,
                     max_bytes_before_external_group_by=0
  '''
# ---
# name: TestExperimentQueryRunner.test_query_runner_with_data_warehouse_internal_filters_5_group
  '''
  SELECT metrics_per_user.variant AS variant,
         count(metrics_per_user.entity_id) AS num_users,
         sum(metrics_per_user.value) AS total_sum,
         sum(power(metrics_per_user.value, 2)) AS total_sum_of_squares
  FROM
    (SELECT exposure_data.variant AS variant,
            exposure_data.entity_id AS entity_id,
            sum(coalesce(events_after_exposure.value, 0)) AS value
     FROM
       (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
               replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
               min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time,
               replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$user_id'), ''), 'null'), '^"|"$', '') AS exposure_identifier
        FROM events
        LEFT OUTER JOIN
          (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                  person_distinct_id_overrides.distinct_id AS distinct_id
           FROM person_distinct_id_overrides
           WHERE equals(person_distinct_id_overrides.team_id, 99999)
           GROUP BY person_distinct_id_overrides.distinct_id
           HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
        LEFT JOIN
          (SELECT argMax(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(groups.group_properties, 'name'), ''), 'null'), '^"|"$', ''), toTimeZone(groups._timestamp, 'UTC')) AS properties___name,
                  groups.group_type_index AS index,
                  groups.group_key AS key
           FROM groups
           WHERE and(equals(groups.team_id, 99999), equals(index, 0))
           GROUP BY groups.group_type_index,
                    groups.group_key) AS events__group_0 ON equals(events.`$group_0`, events__group_0.key)
        WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), ifNull(equals(events__group_0.properties___name, 'Test Group'), 0))
        GROUP BY variant,
                 entity_id,
                 replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$user_id'), ''), 'null'), '^"|"$', '')) AS exposure_data
     LEFT JOIN
       (SELECT usage.ds AS timestamp,
               usage.userid AS after_exposure_identifier,
               exposure_data.variant AS variant,
               usage.usage AS value
        FROM
          (SELECT *
           FROM s3('http://host.docker.internal:19000/posthog/test_storage_bucket-posthog.hogql.experiments.queryrunner/*.parquet', 'object_storage_root_user', 'object_storage_root_password', 'Parquet', '`ds` Date, `id` String, `usage` Int64, `userid` String')) AS usage
        INNER JOIN
          (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
                  replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
                  min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time,
                  replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$user_id'), ''), 'null'), '^"|"$', '') AS exposure_identifier
           FROM events
           LEFT OUTER JOIN
             (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                     person_distinct_id_overrides.distinct_id AS distinct_id
              FROM person_distinct_id_overrides
              WHERE equals(person_distinct_id_overrides.team_id, 99999)
              GROUP BY person_distinct_id_overrides.distinct_id
              HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
           LEFT JOIN
             (SELECT argMax(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(groups.group_properties, 'name'), ''), 'null'), '^"|"$', ''), toTimeZone(groups._timestamp, 'UTC')) AS properties___name,
                     groups.group_type_index AS index,
                     groups.group_key AS key
              FROM groups
              WHERE and(equals(groups.team_id, 99999), equals(index, 0))
              GROUP BY groups.group_type_index,
                       groups.group_key) AS events__group_0 ON equals(events.`$group_0`, events__group_0.key)
           WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), ifNull(equals(events__group_0.properties___name, 'Test Group'), 0))
           GROUP BY variant,
                    entity_id,
                    replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$user_id'), ''), 'null'), '^"|"$', '')) AS exposure_data ON equals(usage.userid, toString(exposure_data.exposure_identifier))
        WHERE and(greaterOrEquals(usage.ds, toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(usage.ds, toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), ifNull(greaterOrEquals(usage.ds, exposure_data.first_exposure_time), 0))) AS events_after_exposure ON and(equals(toString(exposure_data.exposure_identifier), toString(events_after_exposure.after_exposure_identifier)), equals(exposure_data.variant, events_after_exposure.variant))
     GROUP BY exposure_data.variant,
              exposure_data.entity_id) AS metrics_per_user
  GROUP BY metrics_per_user.variant
  LIMIT 100 SETTINGS readonly=2,
                     max_execution_time=60,
                     allow_experimental_object_type=1,
                     format_csv_allow_double_quotes=0,
                     max_ast_elements=4000000,
                     max_expanded_ast_elements=4000000,
                     max_bytes_before_external_group_by=0
  '''
# ---
# name: TestExperimentQueryRunner.test_query_runner_with_data_warehouse_internal_filters_5_group.1
  '''
  SELECT metrics_per_user.variant AS variant,
         count(metrics_per_user.entity_id) AS num_users,
         sum(metrics_per_user.value) AS total_sum,
         sum(power(metrics_per_user.value, 2)) AS total_sum_of_squares
  FROM
    (SELECT exposure_data.variant AS variant,
            exposure_data.entity_id AS entity_id,
            sum(coalesce(events_after_exposure.value, 0)) AS value
     FROM
       (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
               replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
               min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time,
               replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$user_id'), ''), 'null'), '^"|"$', '') AS exposure_identifier
        FROM events
        LEFT OUTER JOIN
          (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                  person_distinct_id_overrides.distinct_id AS distinct_id
           FROM person_distinct_id_overrides
           WHERE equals(person_distinct_id_overrides.team_id, 99999)
           GROUP BY person_distinct_id_overrides.distinct_id
           HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
        WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')))
        GROUP BY variant,
                 entity_id,
                 replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$user_id'), ''), 'null'), '^"|"$', '')) AS exposure_data
     LEFT JOIN
       (SELECT usage.ds AS timestamp,
               usage.userid AS after_exposure_identifier,
               exposure_data.variant AS variant,
               usage.usage AS value
        FROM
          (SELECT *
           FROM s3('http://host.docker.internal:19000/posthog/test_storage_bucket-posthog.hogql.experiments.queryrunner/*.parquet', 'object_storage_root_user', 'object_storage_root_password', 'Parquet', '`ds` Date, `id` String, `usage` Int64, `userid` String')) AS usage
        INNER JOIN
          (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
                  replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
                  min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time,
                  replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$user_id'), ''), 'null'), '^"|"$', '') AS exposure_identifier
           FROM events
           LEFT OUTER JOIN
             (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                     person_distinct_id_overrides.distinct_id AS distinct_id
              FROM person_distinct_id_overrides
              WHERE equals(person_distinct_id_overrides.team_id, 99999)
              GROUP BY person_distinct_id_overrides.distinct_id
              HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
           WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')))
           GROUP BY variant,
                    entity_id,
                    replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$user_id'), ''), 'null'), '^"|"$', '')) AS exposure_data ON equals(usage.userid, toString(exposure_data.exposure_identifier))
        WHERE and(greaterOrEquals(usage.ds, toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(usage.ds, toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), ifNull(greaterOrEquals(usage.ds, exposure_data.first_exposure_time), 0))) AS events_after_exposure ON and(equals(toString(exposure_data.exposure_identifier), toString(events_after_exposure.after_exposure_identifier)), equals(exposure_data.variant, events_after_exposure.variant))
     GROUP BY exposure_data.variant,
              exposure_data.entity_id) AS metrics_per_user
  GROUP BY metrics_per_user.variant
  LIMIT 100 SETTINGS readonly=2,
                     max_execution_time=60,
                     allow_experimental_object_type=1,
                     format_csv_allow_double_quotes=0,
                     max_ast_elements=4000000,
                     max_expanded_ast_elements=4000000,
                     max_bytes_before_external_group_by=0
  '''
# ---
# name: TestExperimentQueryRunner.test_query_runner_with_data_warehouse_internal_filters_6_element
  '''
  SELECT metrics_per_user.variant AS variant,
         count(metrics_per_user.entity_id) AS num_users,
         sum(metrics_per_user.value) AS total_sum,
         sum(power(metrics_per_user.value, 2)) AS total_sum_of_squares
  FROM
    (SELECT exposure_data.variant AS variant,
            exposure_data.entity_id AS entity_id,
            sum(coalesce(events_after_exposure.value, 0)) AS value
     FROM
       (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
               replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
               min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time,
               replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$user_id'), ''), 'null'), '^"|"$', '') AS exposure_identifier
        FROM events
        LEFT OUTER JOIN
          (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                  person_distinct_id_overrides.distinct_id AS distinct_id
           FROM person_distinct_id_overrides
           WHERE equals(person_distinct_id_overrides.team_id, 99999)
           GROUP BY person_distinct_id_overrides.distinct_id
           HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
        WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), match(events.elements_chain, '(^|;)button(\\.|$|;|:)'))
        GROUP BY variant,
                 entity_id,
                 replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$user_id'), ''), 'null'), '^"|"$', '')) AS exposure_data
     LEFT JOIN
       (SELECT usage.ds AS timestamp,
               usage.userid AS after_exposure_identifier,
               exposure_data.variant AS variant,
               usage.usage AS value
        FROM
          (SELECT *
           FROM s3('http://host.docker.internal:19000/posthog/test_storage_bucket-posthog.hogql.experiments.queryrunner/*.parquet', 'object_storage_root_user', 'object_storage_root_password', 'Parquet', '`ds` Date, `id` String, `usage` Int64, `userid` String')) AS usage
        INNER JOIN
          (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
                  replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
                  min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time,
                  replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$user_id'), ''), 'null'), '^"|"$', '') AS exposure_identifier
           FROM events
           LEFT OUTER JOIN
             (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                     person_distinct_id_overrides.distinct_id AS distinct_id
              FROM person_distinct_id_overrides
              WHERE equals(person_distinct_id_overrides.team_id, 99999)
              GROUP BY person_distinct_id_overrides.distinct_id
              HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
           WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), match(events.elements_chain, '(^|;)button(\\.|$|;|:)'))
           GROUP BY variant,
                    entity_id,
                    replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$user_id'), ''), 'null'), '^"|"$', '')) AS exposure_data ON equals(usage.userid, toString(exposure_data.exposure_identifier))
        WHERE and(greaterOrEquals(usage.ds, toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(usage.ds, toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), ifNull(greaterOrEquals(usage.ds, exposure_data.first_exposure_time), 0))) AS events_after_exposure ON and(equals(toString(exposure_data.exposure_identifier), toString(events_after_exposure.after_exposure_identifier)), equals(exposure_data.variant, events_after_exposure.variant))
     GROUP BY exposure_data.variant,
              exposure_data.entity_id) AS metrics_per_user
  GROUP BY metrics_per_user.variant
  LIMIT 100 SETTINGS readonly=2,
                     max_execution_time=60,
                     allow_experimental_object_type=1,
                     format_csv_allow_double_quotes=0,
                     max_ast_elements=4000000,
                     max_expanded_ast_elements=4000000,
                     max_bytes_before_external_group_by=0
  '''
# ---
# name: TestExperimentQueryRunner.test_query_runner_with_data_warehouse_internal_filters_6_element.1
  '''
  SELECT metrics_per_user.variant AS variant,
         count(metrics_per_user.entity_id) AS num_users,
         sum(metrics_per_user.value) AS total_sum,
         sum(power(metrics_per_user.value, 2)) AS total_sum_of_squares
  FROM
    (SELECT exposure_data.variant AS variant,
            exposure_data.entity_id AS entity_id,
            sum(coalesce(events_after_exposure.value, 0)) AS value
     FROM
       (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
               replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
               min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time,
               replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$user_id'), ''), 'null'), '^"|"$', '') AS exposure_identifier
        FROM events
        LEFT OUTER JOIN
          (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                  person_distinct_id_overrides.distinct_id AS distinct_id
           FROM person_distinct_id_overrides
           WHERE equals(person_distinct_id_overrides.team_id, 99999)
           GROUP BY person_distinct_id_overrides.distinct_id
           HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
        WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')))
        GROUP BY variant,
                 entity_id,
                 replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$user_id'), ''), 'null'), '^"|"$', '')) AS exposure_data
     LEFT JOIN
       (SELECT usage.ds AS timestamp,
               usage.userid AS after_exposure_identifier,
               exposure_data.variant AS variant,
               usage.usage AS value
        FROM
          (SELECT *
           FROM s3('http://host.docker.internal:19000/posthog/test_storage_bucket-posthog.hogql.experiments.queryrunner/*.parquet', 'object_storage_root_user', 'object_storage_root_password', 'Parquet', '`ds` Date, `id` String, `usage` Int64, `userid` String')) AS usage
        INNER JOIN
          (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
                  replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
                  min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time,
                  replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$user_id'), ''), 'null'), '^"|"$', '') AS exposure_identifier
           FROM events
           LEFT OUTER JOIN
             (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                     person_distinct_id_overrides.distinct_id AS distinct_id
              FROM person_distinct_id_overrides
              WHERE equals(person_distinct_id_overrides.team_id, 99999)
              GROUP BY person_distinct_id_overrides.distinct_id
              HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
           WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')))
           GROUP BY variant,
                    entity_id,
                    replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$user_id'), ''), 'null'), '^"|"$', '')) AS exposure_data ON equals(usage.userid, toString(exposure_data.exposure_identifier))
        WHERE and(greaterOrEquals(usage.ds, toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(usage.ds, toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), ifNull(greaterOrEquals(usage.ds, exposure_data.first_exposure_time), 0))) AS events_after_exposure ON and(equals(toString(exposure_data.exposure_identifier), toString(events_after_exposure.after_exposure_identifier)), equals(exposure_data.variant, events_after_exposure.variant))
     GROUP BY exposure_data.variant,
              exposure_data.entity_id) AS metrics_per_user
  GROUP BY metrics_per_user.variant
  LIMIT 100 SETTINGS readonly=2,
                     max_execution_time=60,
                     allow_experimental_object_type=1,
                     format_csv_allow_double_quotes=0,
                     max_ast_elements=4000000,
                     max_expanded_ast_elements=4000000,
                     max_bytes_before_external_group_by=0
  '''
# ---
# name: TestExperimentQueryRunner.test_query_runner_with_data_warehouse_subscriptions_table
  '''
  SELECT metrics_per_user.variant AS variant,
         count(metrics_per_user.entity_id) AS num_users,
         sum(metrics_per_user.value) AS total_sum,
         sum(power(metrics_per_user.value, 2)) AS total_sum_of_squares
  FROM
    (SELECT exposure_data.variant AS variant,
            exposure_data.entity_id AS entity_id,
            sum(coalesce(events_after_exposure.value, 0)) AS value
     FROM
       (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
               replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
               min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time,
               events__person.properties___email AS exposure_identifier
        FROM events
        LEFT OUTER JOIN
          (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                  person_distinct_id_overrides.distinct_id AS distinct_id
           FROM person_distinct_id_overrides
           WHERE equals(person_distinct_id_overrides.team_id, 99999)
           GROUP BY person_distinct_id_overrides.distinct_id
           HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
        LEFT JOIN
          (SELECT person.id AS id,
                  replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(person.properties, 'email'), ''), 'null'), '^"|"$', '') AS properties___email
           FROM person
           WHERE and(equals(person.team_id, 99999), ifNull(in(tuple(person.id, person.version),
                                                                (SELECT person.id AS id, max(person.version) AS version
                                                                 FROM person
                                                                 WHERE equals(person.team_id, 99999)
                                                                 GROUP BY person.id
                                                                 HAVING and(ifNull(equals(argMax(person.is_deleted, person.version), 0), 0), ifNull(less(argMax(toTimeZone(person.created_at, 'UTC'), person.version), plus(now64(6, 'UTC'), toIntervalDay(1))), 0)))), 0)) SETTINGS optimize_aggregation_in_order=1) AS events__person ON equals(if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id), events__person.id)
        WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')))
        GROUP BY variant,
                 entity_id,
                 events__person.properties___email) AS exposure_data
     LEFT JOIN
       (SELECT toTimeZone(subscriptions.subscription_created_at, 'UTC') AS timestamp,
               subscriptions__subscription_customer.customer_email AS after_exposure_identifier,
               exposure_data.variant AS variant,
               1 AS value
        FROM
          (SELECT *
           FROM s3('http://host.docker.internal:19000/posthog/test_storage_bucket-posthog.hogql.experiments.queryrunner/*.parquet', 'object_storage_root_user', 'object_storage_root_password', 'Parquet', '`subscription_id` String, `subscription_amount` Int64, `subscription_created_at` DateTime64(3, \'UTC\'), `subscription_customer_id` String')) AS subscriptions
        LEFT JOIN
          (SELECT customers.customer_email AS customer_email,
                  customers.customer_id AS subscriptions__subscription_customer___customer_id
           FROM s3('http://host.docker.internal:19000/posthog/test_storage_bucket-posthog.hogql.experiments.queryrunner/*.parquet', 'object_storage_root_user', 'object_storage_root_password', 'Parquet', '`customer_id` String, `customer_name` String, `customer_email` String, `customer_created_at` DateTime64(3, \'UTC\')') AS customers) AS subscriptions__subscription_customer ON equals(subscriptions.subscription_customer_id, subscriptions__subscription_customer.subscriptions__subscription_customer___customer_id)
        INNER JOIN
          (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
                  replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
                  min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time,
                  events__person.properties___email AS exposure_identifier
           FROM events
           LEFT OUTER JOIN
             (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                     person_distinct_id_overrides.distinct_id AS distinct_id
              FROM person_distinct_id_overrides
              WHERE equals(person_distinct_id_overrides.team_id, 99999)
              GROUP BY person_distinct_id_overrides.distinct_id
              HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
           LEFT JOIN
             (SELECT person.id AS id,
                     replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(person.properties, 'email'), ''), 'null'), '^"|"$', '') AS properties___email
              FROM person
              WHERE and(equals(person.team_id, 99999), ifNull(in(tuple(person.id, person.version),
                                                                   (SELECT person.id AS id, max(person.version) AS version
                                                                    FROM person
                                                                    WHERE equals(person.team_id, 99999)
                                                                    GROUP BY person.id
                                                                    HAVING and(ifNull(equals(argMax(person.is_deleted, person.version), 0), 0), ifNull(less(argMax(toTimeZone(person.created_at, 'UTC'), person.version), plus(now64(6, 'UTC'), toIntervalDay(1))), 0)))), 0)) SETTINGS optimize_aggregation_in_order=1) AS events__person ON equals(if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id), events__person.id)
           WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')))
           GROUP BY variant,
                    entity_id,
                    events__person.properties___email) AS exposure_data ON equals(subscriptions__subscription_customer.customer_email, toString(exposure_data.exposure_identifier))
        WHERE and(ifNull(greaterOrEquals(toTimeZone(subscriptions.subscription_created_at, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), 0), ifNull(lessOrEquals(toTimeZone(subscriptions.subscription_created_at, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), 0), ifNull(greaterOrEquals(toTimeZone(subscriptions.subscription_created_at, 'UTC'), exposure_data.first_exposure_time), 0))) AS events_after_exposure ON and(equals(toString(exposure_data.exposure_identifier), toString(events_after_exposure.after_exposure_identifier)), equals(exposure_data.variant, events_after_exposure.variant))
     GROUP BY exposure_data.variant,
              exposure_data.entity_id) AS metrics_per_user
  GROUP BY metrics_per_user.variant
  LIMIT 100 SETTINGS readonly=2,
                     max_execution_time=60,
                     allow_experimental_object_type=1,
                     format_csv_allow_double_quotes=0,
                     max_ast_elements=4000000,
                     max_expanded_ast_elements=4000000,
                     max_bytes_before_external_group_by=0
  '''
# ---
# name: TestExperimentQueryRunner.test_query_runner_with_internal_filters_0_person_properties
  '''
  SELECT metrics_per_user.variant AS variant,
         count(metrics_per_user.entity_id) AS num_users,
         sum(metrics_per_user.value) AS total_sum,
         sum(power(metrics_per_user.value, 2)) AS total_sum_of_squares
  FROM
    (SELECT exposure_data.variant AS variant,
            exposure_data.entity_id AS entity_id,
            sum(coalesce(events_after_exposure.value, 0)) AS value
     FROM
       (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
               replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
               min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time
        FROM events
        LEFT OUTER JOIN
          (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                  person_distinct_id_overrides.distinct_id AS distinct_id
           FROM person_distinct_id_overrides
           WHERE equals(person_distinct_id_overrides.team_id, 99999)
           GROUP BY person_distinct_id_overrides.distinct_id
           HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
        LEFT JOIN
          (SELECT person.id AS id,
                  replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(person.properties, 'email'), ''), 'null'), '^"|"$', '') AS properties___email
           FROM person
           WHERE and(equals(person.team_id, 99999), ifNull(in(tuple(person.id, person.version),
                                                                (SELECT person.id AS id, max(person.version) AS version
                                                                 FROM person
                                                                 WHERE equals(person.team_id, 99999)
                                                                 GROUP BY person.id
                                                                 HAVING and(ifNull(equals(argMax(person.is_deleted, person.version), 0), 0), ifNull(less(argMax(toTimeZone(person.created_at, 'UTC'), person.version), plus(now64(6, 'UTC'), toIntervalDay(1))), 0)))), 0)) SETTINGS optimize_aggregation_in_order=1) AS events__person ON equals(if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id), events__person.id)
        WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), ifNull(notILike(toString(events__person.properties___email), '%@posthog.com%'), 1))
        GROUP BY variant,
                 entity_id) AS exposure_data
     LEFT JOIN
       (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
               if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
               exposure_data.variant AS variant,
               events.event AS event,
               1 AS value
        FROM events
        LEFT OUTER JOIN
          (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                  person_distinct_id_overrides.distinct_id AS distinct_id
           FROM person_distinct_id_overrides
           WHERE equals(person_distinct_id_overrides.team_id, 99999)
           GROUP BY person_distinct_id_overrides.distinct_id
           HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
        LEFT JOIN
          (SELECT person.id AS id,
                  replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(person.properties, 'email'), ''), 'null'), '^"|"$', '') AS properties___email
           FROM person
           WHERE and(equals(person.team_id, 99999), ifNull(in(tuple(person.id, person.version),
                                                                (SELECT person.id AS id, max(person.version) AS version
                                                                 FROM person
                                                                 WHERE equals(person.team_id, 99999)
                                                                 GROUP BY person.id
                                                                 HAVING and(ifNull(equals(argMax(person.is_deleted, person.version), 0), 0), ifNull(less(argMax(toTimeZone(person.created_at, 'UTC'), person.version), plus(now64(6, 'UTC'), toIntervalDay(1))), 0)))), 0)) SETTINGS optimize_aggregation_in_order=1) AS events__person ON equals(if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id), events__person.id)
        INNER JOIN
          (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
                  replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
                  min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time
           FROM events
           LEFT OUTER JOIN
             (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                     person_distinct_id_overrides.distinct_id AS distinct_id
              FROM person_distinct_id_overrides
              WHERE equals(person_distinct_id_overrides.team_id, 99999)
              GROUP BY person_distinct_id_overrides.distinct_id
              HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
           LEFT JOIN
             (SELECT person.id AS id,
                     replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(person.properties, 'email'), ''), 'null'), '^"|"$', '') AS properties___email
              FROM person
              WHERE and(equals(person.team_id, 99999), ifNull(in(tuple(person.id, person.version),
                                                                   (SELECT person.id AS id, max(person.version) AS version
                                                                    FROM person
                                                                    WHERE equals(person.team_id, 99999)
                                                                    GROUP BY person.id
                                                                    HAVING and(ifNull(equals(argMax(person.is_deleted, person.version), 0), 0), ifNull(less(argMax(toTimeZone(person.created_at, 'UTC'), person.version), plus(now64(6, 'UTC'), toIntervalDay(1))), 0)))), 0)) SETTINGS optimize_aggregation_in_order=1) AS events__person ON equals(if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id), events__person.id)
           WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), ifNull(notILike(toString(events__person.properties___email), '%@posthog.com%'), 1))
           GROUP BY variant,
                    entity_id) AS exposure_data ON equals(if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id), exposure_data.entity_id)
        WHERE and(equals(events.team_id, 99999), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), exposure_data.first_exposure_time), equals(events.event, '$pageview'), ifNull(notILike(toString(events__person.properties___email), '%@posthog.com%'), 1))) AS events_after_exposure ON and(equals(toString(exposure_data.entity_id), toString(events_after_exposure.entity_id)), equals(exposure_data.variant, events_after_exposure.variant))
     GROUP BY exposure_data.variant,
              exposure_data.entity_id) AS metrics_per_user
  GROUP BY metrics_per_user.variant
  LIMIT 100 SETTINGS readonly=2,
                     max_execution_time=60,
                     allow_experimental_object_type=1,
                     format_csv_allow_double_quotes=0,
                     max_ast_elements=4000000,
                     max_expanded_ast_elements=4000000,
                     max_bytes_before_external_group_by=0
  '''
# ---
# name: TestExperimentQueryRunner.test_query_runner_with_internal_filters_0_person_properties.1
  '''
  SELECT metrics_per_user.variant AS variant,
         count(metrics_per_user.entity_id) AS num_users,
         sum(metrics_per_user.value) AS total_sum,
         sum(power(metrics_per_user.value, 2)) AS total_sum_of_squares
  FROM
    (SELECT exposure_data.variant AS variant,
            exposure_data.entity_id AS entity_id,
            sum(coalesce(events_after_exposure.value, 0)) AS value
     FROM
       (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
               replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
               min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time
        FROM events
        LEFT OUTER JOIN
          (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                  person_distinct_id_overrides.distinct_id AS distinct_id
           FROM person_distinct_id_overrides
           WHERE equals(person_distinct_id_overrides.team_id, 99999)
           GROUP BY person_distinct_id_overrides.distinct_id
           HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
        WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')))
        GROUP BY variant,
                 entity_id) AS exposure_data
     LEFT JOIN
       (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
               if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
               exposure_data.variant AS variant,
               events.event AS event,
               1 AS value
        FROM events
        LEFT OUTER JOIN
          (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                  person_distinct_id_overrides.distinct_id AS distinct_id
           FROM person_distinct_id_overrides
           WHERE equals(person_distinct_id_overrides.team_id, 99999)
           GROUP BY person_distinct_id_overrides.distinct_id
           HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
        INNER JOIN
          (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
                  replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
                  min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time
           FROM events
           LEFT OUTER JOIN
             (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                     person_distinct_id_overrides.distinct_id AS distinct_id
              FROM person_distinct_id_overrides
              WHERE equals(person_distinct_id_overrides.team_id, 99999)
              GROUP BY person_distinct_id_overrides.distinct_id
              HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
           WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')))
           GROUP BY variant,
                    entity_id) AS exposure_data ON equals(if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id), exposure_data.entity_id)
        WHERE and(equals(events.team_id, 99999), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), exposure_data.first_exposure_time), equals(events.event, '$pageview'))) AS events_after_exposure ON and(equals(toString(exposure_data.entity_id), toString(events_after_exposure.entity_id)), equals(exposure_data.variant, events_after_exposure.variant))
     GROUP BY exposure_data.variant,
              exposure_data.entity_id) AS metrics_per_user
  GROUP BY metrics_per_user.variant
  LIMIT 100 SETTINGS readonly=2,
                     max_execution_time=60,
                     allow_experimental_object_type=1,
                     format_csv_allow_double_quotes=0,
                     max_ast_elements=4000000,
                     max_expanded_ast_elements=4000000,
                     max_bytes_before_external_group_by=0
  '''
# ---
# name: TestExperimentQueryRunner.test_query_runner_with_internal_filters_1_event_properties
  '''
  SELECT metrics_per_user.variant AS variant,
         count(metrics_per_user.entity_id) AS num_users,
         sum(metrics_per_user.value) AS total_sum,
         sum(power(metrics_per_user.value, 2)) AS total_sum_of_squares
  FROM
    (SELECT exposure_data.variant AS variant,
            exposure_data.entity_id AS entity_id,
            sum(coalesce(events_after_exposure.value, 0)) AS value
     FROM
       (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
               replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
               min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time
        FROM events
        LEFT OUTER JOIN
          (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                  person_distinct_id_overrides.distinct_id AS distinct_id
           FROM person_distinct_id_overrides
           WHERE equals(person_distinct_id_overrides.team_id, 99999)
           GROUP BY person_distinct_id_overrides.distinct_id
           HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
        WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), ifNull(not(match(toString(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$host'), ''), 'null'), '^"|"$', '')), '^(localhost|127\\.0\\.0\\.1)($|:)')), 1))
        GROUP BY variant,
                 entity_id) AS exposure_data
     LEFT JOIN
       (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
               if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
               exposure_data.variant AS variant,
               events.event AS event,
               1 AS value
        FROM events
        LEFT OUTER JOIN
          (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                  person_distinct_id_overrides.distinct_id AS distinct_id
           FROM person_distinct_id_overrides
           WHERE equals(person_distinct_id_overrides.team_id, 99999)
           GROUP BY person_distinct_id_overrides.distinct_id
           HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
        INNER JOIN
          (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
                  replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
                  min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time
           FROM events
           LEFT OUTER JOIN
             (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                     person_distinct_id_overrides.distinct_id AS distinct_id
              FROM person_distinct_id_overrides
              WHERE equals(person_distinct_id_overrides.team_id, 99999)
              GROUP BY person_distinct_id_overrides.distinct_id
              HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
           WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), ifNull(not(match(toString(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$host'), ''), 'null'), '^"|"$', '')), '^(localhost|127\\.0\\.0\\.1)($|:)')), 1))
           GROUP BY variant,
                    entity_id) AS exposure_data ON equals(if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id), exposure_data.entity_id)
        WHERE and(equals(events.team_id, 99999), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), exposure_data.first_exposure_time), equals(events.event, '$pageview'), ifNull(not(match(toString(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$host'), ''), 'null'), '^"|"$', '')), '^(localhost|127\\.0\\.0\\.1)($|:)')), 1))) AS events_after_exposure ON and(equals(toString(exposure_data.entity_id), toString(events_after_exposure.entity_id)), equals(exposure_data.variant, events_after_exposure.variant))
     GROUP BY exposure_data.variant,
              exposure_data.entity_id) AS metrics_per_user
  GROUP BY metrics_per_user.variant
  LIMIT 100 SETTINGS readonly=2,
                     max_execution_time=60,
                     allow_experimental_object_type=1,
                     format_csv_allow_double_quotes=0,
                     max_ast_elements=4000000,
                     max_expanded_ast_elements=4000000,
                     max_bytes_before_external_group_by=0
  '''
# ---
# name: TestExperimentQueryRunner.test_query_runner_with_internal_filters_1_event_properties.1
  '''
  SELECT metrics_per_user.variant AS variant,
         count(metrics_per_user.entity_id) AS num_users,
         sum(metrics_per_user.value) AS total_sum,
         sum(power(metrics_per_user.value, 2)) AS total_sum_of_squares
  FROM
    (SELECT exposure_data.variant AS variant,
            exposure_data.entity_id AS entity_id,
            sum(coalesce(events_after_exposure.value, 0)) AS value
     FROM
       (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
               replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
               min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time
        FROM events
        LEFT OUTER JOIN
          (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                  person_distinct_id_overrides.distinct_id AS distinct_id
           FROM person_distinct_id_overrides
           WHERE equals(person_distinct_id_overrides.team_id, 99999)
           GROUP BY person_distinct_id_overrides.distinct_id
           HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
        WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')))
        GROUP BY variant,
                 entity_id) AS exposure_data
     LEFT JOIN
       (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
               if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
               exposure_data.variant AS variant,
               events.event AS event,
               1 AS value
        FROM events
        LEFT OUTER JOIN
          (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                  person_distinct_id_overrides.distinct_id AS distinct_id
           FROM person_distinct_id_overrides
           WHERE equals(person_distinct_id_overrides.team_id, 99999)
           GROUP BY person_distinct_id_overrides.distinct_id
           HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
        INNER JOIN
          (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
                  replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
                  min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time
           FROM events
           LEFT OUTER JOIN
             (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                     person_distinct_id_overrides.distinct_id AS distinct_id
              FROM person_distinct_id_overrides
              WHERE equals(person_distinct_id_overrides.team_id, 99999)
              GROUP BY person_distinct_id_overrides.distinct_id
              HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
           WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')))
           GROUP BY variant,
                    entity_id) AS exposure_data ON equals(if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id), exposure_data.entity_id)
        WHERE and(equals(events.team_id, 99999), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), exposure_data.first_exposure_time), equals(events.event, '$pageview'))) AS events_after_exposure ON and(equals(toString(exposure_data.entity_id), toString(events_after_exposure.entity_id)), equals(exposure_data.variant, events_after_exposure.variant))
     GROUP BY exposure_data.variant,
              exposure_data.entity_id) AS metrics_per_user
  GROUP BY metrics_per_user.variant
  LIMIT 100 SETTINGS readonly=2,
                     max_execution_time=60,
                     allow_experimental_object_type=1,
                     format_csv_allow_double_quotes=0,
                     max_ast_elements=4000000,
                     max_expanded_ast_elements=4000000,
                     max_bytes_before_external_group_by=0
  '''
# ---
# name: TestExperimentQueryRunner.test_query_runner_with_internal_filters_2_feature_flags
  '''
  SELECT metrics_per_user.variant AS variant,
         count(metrics_per_user.entity_id) AS num_users,
         sum(metrics_per_user.value) AS total_sum,
         sum(power(metrics_per_user.value, 2)) AS total_sum_of_squares
  FROM
    (SELECT exposure_data.variant AS variant,
            exposure_data.entity_id AS entity_id,
            sum(coalesce(events_after_exposure.value, 0)) AS value
     FROM
       (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
               replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
               min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time
        FROM events
        LEFT OUTER JOIN
          (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                  person_distinct_id_overrides.distinct_id AS distinct_id
           FROM person_distinct_id_overrides
           WHERE equals(person_distinct_id_overrides.team_id, 99999)
           GROUP BY person_distinct_id_overrides.distinct_id
           HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
        WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), or(ifNull(equals(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$feature/flag_doesnt_exist'), ''), 'null'), '^"|"$', ''), 'test'), 0), ifNull(equals(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$feature/flag_doesnt_exist'), ''), 'null'), '^"|"$', ''), 'control'), 0)))
        GROUP BY variant,
                 entity_id) AS exposure_data
     LEFT JOIN
       (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
               if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
               exposure_data.variant AS variant,
               events.event AS event,
               1 AS value
        FROM events
        LEFT OUTER JOIN
          (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                  person_distinct_id_overrides.distinct_id AS distinct_id
           FROM person_distinct_id_overrides
           WHERE equals(person_distinct_id_overrides.team_id, 99999)
           GROUP BY person_distinct_id_overrides.distinct_id
           HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
        INNER JOIN
          (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
                  replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
                  min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time
           FROM events
           LEFT OUTER JOIN
             (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                     person_distinct_id_overrides.distinct_id AS distinct_id
              FROM person_distinct_id_overrides
              WHERE equals(person_distinct_id_overrides.team_id, 99999)
              GROUP BY person_distinct_id_overrides.distinct_id
              HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
           WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), or(ifNull(equals(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$feature/flag_doesnt_exist'), ''), 'null'), '^"|"$', ''), 'test'), 0), ifNull(equals(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$feature/flag_doesnt_exist'), ''), 'null'), '^"|"$', ''), 'control'), 0)))
           GROUP BY variant,
                    entity_id) AS exposure_data ON equals(if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id), exposure_data.entity_id)
        WHERE and(equals(events.team_id, 99999), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), exposure_data.first_exposure_time), equals(events.event, '$pageview'), or(ifNull(equals(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$feature/flag_doesnt_exist'), ''), 'null'), '^"|"$', ''), 'test'), 0), ifNull(equals(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$feature/flag_doesnt_exist'), ''), 'null'), '^"|"$', ''), 'control'), 0)))) AS events_after_exposure ON and(equals(toString(exposure_data.entity_id), toString(events_after_exposure.entity_id)), equals(exposure_data.variant, events_after_exposure.variant))
     GROUP BY exposure_data.variant,
              exposure_data.entity_id) AS metrics_per_user
  GROUP BY metrics_per_user.variant
  LIMIT 100 SETTINGS readonly=2,
                     max_execution_time=60,
                     allow_experimental_object_type=1,
                     format_csv_allow_double_quotes=0,
                     max_ast_elements=4000000,
                     max_expanded_ast_elements=4000000,
                     max_bytes_before_external_group_by=0
  '''
# ---
# name: TestExperimentQueryRunner.test_query_runner_with_internal_filters_2_feature_flags.1
  '''
  SELECT metrics_per_user.variant AS variant,
         count(metrics_per_user.entity_id) AS num_users,
         sum(metrics_per_user.value) AS total_sum,
         sum(power(metrics_per_user.value, 2)) AS total_sum_of_squares
  FROM
    (SELECT exposure_data.variant AS variant,
            exposure_data.entity_id AS entity_id,
            sum(coalesce(events_after_exposure.value, 0)) AS value
     FROM
       (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
               replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
               min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time
        FROM events
        LEFT OUTER JOIN
          (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                  person_distinct_id_overrides.distinct_id AS distinct_id
           FROM person_distinct_id_overrides
           WHERE equals(person_distinct_id_overrides.team_id, 99999)
           GROUP BY person_distinct_id_overrides.distinct_id
           HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
        WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')))
        GROUP BY variant,
                 entity_id) AS exposure_data
     LEFT JOIN
       (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
               if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
               exposure_data.variant AS variant,
               events.event AS event,
               1 AS value
        FROM events
        LEFT OUTER JOIN
          (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                  person_distinct_id_overrides.distinct_id AS distinct_id
           FROM person_distinct_id_overrides
           WHERE equals(person_distinct_id_overrides.team_id, 99999)
           GROUP BY person_distinct_id_overrides.distinct_id
           HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
        INNER JOIN
          (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
                  replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
                  min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time
           FROM events
           LEFT OUTER JOIN
             (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                     person_distinct_id_overrides.distinct_id AS distinct_id
              FROM person_distinct_id_overrides
              WHERE equals(person_distinct_id_overrides.team_id, 99999)
              GROUP BY person_distinct_id_overrides.distinct_id
              HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
           WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')))
           GROUP BY variant,
                    entity_id) AS exposure_data ON equals(if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id), exposure_data.entity_id)
        WHERE and(equals(events.team_id, 99999), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), exposure_data.first_exposure_time), equals(events.event, '$pageview'))) AS events_after_exposure ON and(equals(toString(exposure_data.entity_id), toString(events_after_exposure.entity_id)), equals(exposure_data.variant, events_after_exposure.variant))
     GROUP BY exposure_data.variant,
              exposure_data.entity_id) AS metrics_per_user
  GROUP BY metrics_per_user.variant
  LIMIT 100 SETTINGS readonly=2,
                     max_execution_time=60,
                     allow_experimental_object_type=1,
                     format_csv_allow_double_quotes=0,
                     max_ast_elements=4000000,
                     max_expanded_ast_elements=4000000,
                     max_bytes_before_external_group_by=0
  '''
# ---
# name: TestExperimentQueryRunner.test_query_runner_with_internal_filters_3_cohort_static
  '''
  
  SELECT count(DISTINCT person_id)
  FROM person_static_cohort
  WHERE team_id = 99999
    AND cohort_id = 99999
  '''
# ---
# name: TestExperimentQueryRunner.test_query_runner_with_internal_filters_3_cohort_static.1
  '''
  SELECT metrics_per_user.variant AS variant,
         count(metrics_per_user.entity_id) AS num_users,
         sum(metrics_per_user.value) AS total_sum,
         sum(power(metrics_per_user.value, 2)) AS total_sum_of_squares
  FROM
    (SELECT exposure_data.variant AS variant,
            exposure_data.entity_id AS entity_id,
            sum(coalesce(events_after_exposure.value, 0)) AS value
     FROM
       (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
               replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
               min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time
        FROM events
        LEFT OUTER JOIN
          (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                  person_distinct_id_overrides.distinct_id AS distinct_id
           FROM person_distinct_id_overrides
           WHERE equals(person_distinct_id_overrides.team_id, 99999)
           GROUP BY person_distinct_id_overrides.distinct_id
           HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
        WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), ifNull(in(if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id),
person_static_cohort.person_id AS person_id
person_static_cohort
and(equals(person_static_cohort.team_id, 99999), equals(person_static_cohort.cohort_id, 99999)))), 0))
        GROUP BY variant,
                 entity_id) AS exposure_data
     LEFT JOIN
       (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
               if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
               exposure_data.variant AS variant,
               events.event AS event,
               1 AS value
        FROM events
        LEFT OUTER JOIN
          (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                  person_distinct_id_overrides.distinct_id AS distinct_id
           FROM person_distinct_id_overrides
           WHERE equals(person_distinct_id_overrides.team_id, 99999)
           GROUP BY person_distinct_id_overrides.distinct_id
           HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
        INNER JOIN
          (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
                  replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
                  min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time
           FROM events
           LEFT OUTER JOIN
             (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                     person_distinct_id_overrides.distinct_id AS distinct_id
              FROM person_distinct_id_overrides
              WHERE equals(person_distinct_id_overrides.team_id, 99999)
              GROUP BY person_distinct_id_overrides.distinct_id
              HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
           WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), ifNull(in(if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id),
person_static_cohort.person_id AS person_id
person_static_cohort
and(equals(person_static_cohort.team_id, 99999), equals(person_static_cohort.cohort_id, 99999)))), 0))
           GROUP BY variant,
                    entity_id) AS exposure_data ON equals(if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id), exposure_data.entity_id)
        WHERE and(equals(events.team_id, 99999), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), exposure_data.first_exposure_time), equals(events.event, '$pageview'), ifNull(in(if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id),
                                                                                                                                                                                                                                                                                                                                                                                                                              (SELECT person_static_cohort.person_id AS person_id
                                                                                                                                                                                                                                                                                                                                                                                                                               FROM person_static_cohort
                                                                                                                                                                                                                                                                                                                                                                                                                               WHERE and(equals(person_static_cohort.team_id, 99999), equals(person_static_cohort.cohort_id, 99999)))), 0))) AS events_after_exposure ON and(equals(toString(exposure_data.entity_id), toString(events_after_exposure.entity_id)), equals(exposure_data.variant, events_after_exposure.variant))
     GROUP BY exposure_data.variant,
              exposure_data.entity_id) AS metrics_per_user
  GROUP BY metrics_per_user.variant
  LIMIT 100 SETTINGS readonly=2,
                     max_execution_time=60,
                     allow_experimental_object_type=1,
                     format_csv_allow_double_quotes=0,
                     max_ast_elements=4000000,
                     max_expanded_ast_elements=4000000,
                     max_bytes_before_external_group_by=0
  '''
# ---
# name: TestExperimentQueryRunner.test_query_runner_with_internal_filters_3_cohort_static.2
  '''
  SELECT metrics_per_user.variant AS variant,
         count(metrics_per_user.entity_id) AS num_users,
         sum(metrics_per_user.value) AS total_sum,
         sum(power(metrics_per_user.value, 2)) AS total_sum_of_squares
  FROM
    (SELECT exposure_data.variant AS variant,
            exposure_data.entity_id AS entity_id,
            sum(coalesce(events_after_exposure.value, 0)) AS value
     FROM
       (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
               replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
               min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time
        FROM events
        LEFT OUTER JOIN
          (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                  person_distinct_id_overrides.distinct_id AS distinct_id
           FROM person_distinct_id_overrides
           WHERE equals(person_distinct_id_overrides.team_id, 99999)
           GROUP BY person_distinct_id_overrides.distinct_id
           HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
        WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')))
        GROUP BY variant,
                 entity_id) AS exposure_data
     LEFT JOIN
       (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
               if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
               exposure_data.variant AS variant,
               events.event AS event,
               1 AS value
        FROM events
        LEFT OUTER JOIN
          (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                  person_distinct_id_overrides.distinct_id AS distinct_id
           FROM person_distinct_id_overrides
           WHERE equals(person_distinct_id_overrides.team_id, 99999)
           GROUP BY person_distinct_id_overrides.distinct_id
           HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
        INNER JOIN
          (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
                  replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
                  min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time
           FROM events
           LEFT OUTER JOIN
             (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                     person_distinct_id_overrides.distinct_id AS distinct_id
              FROM person_distinct_id_overrides
              WHERE equals(person_distinct_id_overrides.team_id, 99999)
              GROUP BY person_distinct_id_overrides.distinct_id
              HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
           WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')))
           GROUP BY variant,
                    entity_id) AS exposure_data ON equals(if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id), exposure_data.entity_id)
        WHERE and(equals(events.team_id, 99999), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), exposure_data.first_exposure_time), equals(events.event, '$pageview'))) AS events_after_exposure ON and(equals(toString(exposure_data.entity_id), toString(events_after_exposure.entity_id)), equals(exposure_data.variant, events_after_exposure.variant))
     GROUP BY exposure_data.variant,
              exposure_data.entity_id) AS metrics_per_user
  GROUP BY metrics_per_user.variant
  LIMIT 100 SETTINGS readonly=2,
                     max_execution_time=60,
                     allow_experimental_object_type=1,
                     format_csv_allow_double_quotes=0,
                     max_ast_elements=4000000,
                     max_expanded_ast_elements=4000000,
                     max_bytes_before_external_group_by=0
  '''
# ---
# name: TestExperimentQueryRunner.test_query_runner_with_internal_filters_4_cohort_dynamic
  '''
  
  SELECT count(DISTINCT person_id)
  FROM cohortpeople
  WHERE team_id = 99999
    AND cohort_id = 99999
    AND version = NULL
  '''
# ---
# name: TestExperimentQueryRunner.test_query_runner_with_internal_filters_4_cohort_dynamic.1
  '''
  /* cohort_calculation: */
  SELECT count(DISTINCT person_id)
  FROM cohortpeople
  WHERE team_id = 99999
    AND cohort_id = 99999
    AND version = 0
  '''
# ---
# name: TestExperimentQueryRunner.test_query_runner_with_internal_filters_4_cohort_dynamic.2
  '''
  SELECT metrics_per_user.variant AS variant,
         count(metrics_per_user.entity_id) AS num_users,
         sum(metrics_per_user.value) AS total_sum,
         sum(power(metrics_per_user.value, 2)) AS total_sum_of_squares
  FROM
    (SELECT exposure_data.variant AS variant,
            exposure_data.entity_id AS entity_id,
            sum(coalesce(events_after_exposure.value, 0)) AS value
     FROM
       (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
               replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
               min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time
        FROM events
        LEFT OUTER JOIN
          (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                  person_distinct_id_overrides.distinct_id AS distinct_id
           FROM person_distinct_id_overrides
           WHERE equals(person_distinct_id_overrides.team_id, 99999)
           GROUP BY person_distinct_id_overrides.distinct_id
           HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
        WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), ifNull(in(if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id),
cohortpeople.person_id AS person_id
cohortpeople
and(equals(cohortpeople.team_id, 99999), equals(cohortpeople.cohort_id, 99999), equals(cohortpeople.version, 0)))), 0))
        GROUP BY variant,
                 entity_id) AS exposure_data
     LEFT JOIN
       (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
               if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
               exposure_data.variant AS variant,
               events.event AS event,
               1 AS value
        FROM events
        LEFT OUTER JOIN
          (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                  person_distinct_id_overrides.distinct_id AS distinct_id
           FROM person_distinct_id_overrides
           WHERE equals(person_distinct_id_overrides.team_id, 99999)
           GROUP BY person_distinct_id_overrides.distinct_id
           HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
        INNER JOIN
          (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
                  replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
                  min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time
           FROM events
           LEFT OUTER JOIN
             (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                     person_distinct_id_overrides.distinct_id AS distinct_id
              FROM person_distinct_id_overrides
              WHERE equals(person_distinct_id_overrides.team_id, 99999)
              GROUP BY person_distinct_id_overrides.distinct_id
              HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
           WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), ifNull(in(if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id),
cohortpeople.person_id AS person_id
cohortpeople
and(equals(cohortpeople.team_id, 99999), equals(cohortpeople.cohort_id, 99999), equals(cohortpeople.version, 0)))), 0))
           GROUP BY variant,
                    entity_id) AS exposure_data ON equals(if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id), exposure_data.entity_id)
        WHERE and(equals(events.team_id, 99999), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), exposure_data.first_exposure_time), equals(events.event, '$pageview'), ifNull(in(if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id),
                                                                                                                                                                                                                                                                                                                                                                                                                              (SELECT cohortpeople.person_id AS person_id
                                                                                                                                                                                                                                                                                                                                                                                                                               FROM cohortpeople
                                                                                                                                                                                                                                                                                                                                                                                                                               WHERE and(equals(cohortpeople.team_id, 99999), equals(cohortpeople.cohort_id, 99999), equals(cohortpeople.version, 0)))), 0))) AS events_after_exposure ON and(equals(toString(exposure_data.entity_id), toString(events_after_exposure.entity_id)), equals(exposure_data.variant, events_after_exposure.variant))
     GROUP BY exposure_data.variant,
              exposure_data.entity_id) AS metrics_per_user
  GROUP BY metrics_per_user.variant
  LIMIT 100 SETTINGS readonly=2,
                     max_execution_time=60,
                     allow_experimental_object_type=1,
                     format_csv_allow_double_quotes=0,
                     max_ast_elements=4000000,
                     max_expanded_ast_elements=4000000,
                     max_bytes_before_external_group_by=0
  '''
# ---
# name: TestExperimentQueryRunner.test_query_runner_with_internal_filters_4_cohort_dynamic.3
  '''
  SELECT metrics_per_user.variant AS variant,
         count(metrics_per_user.entity_id) AS num_users,
         sum(metrics_per_user.value) AS total_sum,
         sum(power(metrics_per_user.value, 2)) AS total_sum_of_squares
  FROM
    (SELECT exposure_data.variant AS variant,
            exposure_data.entity_id AS entity_id,
            sum(coalesce(events_after_exposure.value, 0)) AS value
     FROM
       (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
               replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
               min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time
        FROM events
        LEFT OUTER JOIN
          (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                  person_distinct_id_overrides.distinct_id AS distinct_id
           FROM person_distinct_id_overrides
           WHERE equals(person_distinct_id_overrides.team_id, 99999)
           GROUP BY person_distinct_id_overrides.distinct_id
           HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
        WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')))
        GROUP BY variant,
                 entity_id) AS exposure_data
     LEFT JOIN
       (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
               if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
               exposure_data.variant AS variant,
               events.event AS event,
               1 AS value
        FROM events
        LEFT OUTER JOIN
          (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                  person_distinct_id_overrides.distinct_id AS distinct_id
           FROM person_distinct_id_overrides
           WHERE equals(person_distinct_id_overrides.team_id, 99999)
           GROUP BY person_distinct_id_overrides.distinct_id
           HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
        INNER JOIN
          (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
                  replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
                  min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time
           FROM events
           LEFT OUTER JOIN
             (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                     person_distinct_id_overrides.distinct_id AS distinct_id
              FROM person_distinct_id_overrides
              WHERE equals(person_distinct_id_overrides.team_id, 99999)
              GROUP BY person_distinct_id_overrides.distinct_id
              HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
           WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')))
           GROUP BY variant,
                    entity_id) AS exposure_data ON equals(if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id), exposure_data.entity_id)
        WHERE and(equals(events.team_id, 99999), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), exposure_data.first_exposure_time), equals(events.event, '$pageview'))) AS events_after_exposure ON and(equals(toString(exposure_data.entity_id), toString(events_after_exposure.entity_id)), equals(exposure_data.variant, events_after_exposure.variant))
     GROUP BY exposure_data.variant,
              exposure_data.entity_id) AS metrics_per_user
  GROUP BY metrics_per_user.variant
  LIMIT 100 SETTINGS readonly=2,
                     max_execution_time=60,
                     allow_experimental_object_type=1,
                     format_csv_allow_double_quotes=0,
                     max_ast_elements=4000000,
                     max_expanded_ast_elements=4000000,
                     max_bytes_before_external_group_by=0
  '''
# ---
# name: TestExperimentQueryRunner.test_query_runner_with_internal_filters_5_group
  '''
  SELECT metrics_per_user.variant AS variant,
         count(metrics_per_user.entity_id) AS num_users,
         sum(metrics_per_user.value) AS total_sum,
         sum(power(metrics_per_user.value, 2)) AS total_sum_of_squares
  FROM
    (SELECT exposure_data.variant AS variant,
            exposure_data.entity_id AS entity_id,
            sum(coalesce(events_after_exposure.value, 0)) AS value
     FROM
       (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
               replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
               min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time
        FROM events
        LEFT OUTER JOIN
          (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                  person_distinct_id_overrides.distinct_id AS distinct_id
           FROM person_distinct_id_overrides
           WHERE equals(person_distinct_id_overrides.team_id, 99999)
           GROUP BY person_distinct_id_overrides.distinct_id
           HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
        LEFT JOIN
          (SELECT argMax(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(groups.group_properties, 'name'), ''), 'null'), '^"|"$', ''), toTimeZone(groups._timestamp, 'UTC')) AS properties___name,
                  groups.group_type_index AS index,
                  groups.group_key AS key
           FROM groups
           WHERE and(equals(groups.team_id, 99999), equals(index, 0))
           GROUP BY groups.group_type_index,
                    groups.group_key) AS events__group_0 ON equals(events.`$group_0`, events__group_0.key)
        WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), ifNull(equals(events__group_0.properties___name, 'Test Group'), 0))
        GROUP BY variant,
                 entity_id) AS exposure_data
     LEFT JOIN
       (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
               if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
               exposure_data.variant AS variant,
               events.event AS event,
               1 AS value
        FROM events
        LEFT OUTER JOIN
          (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                  person_distinct_id_overrides.distinct_id AS distinct_id
           FROM person_distinct_id_overrides
           WHERE equals(person_distinct_id_overrides.team_id, 99999)
           GROUP BY person_distinct_id_overrides.distinct_id
           HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
        LEFT JOIN
          (SELECT argMax(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(groups.group_properties, 'name'), ''), 'null'), '^"|"$', ''), toTimeZone(groups._timestamp, 'UTC')) AS properties___name,
                  groups.group_type_index AS index,
                  groups.group_key AS key
           FROM groups
           WHERE and(equals(groups.team_id, 99999), equals(index, 0))
           GROUP BY groups.group_type_index,
                    groups.group_key) AS events__group_0 ON equals(events.`$group_0`, events__group_0.key)
        INNER JOIN
          (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
                  replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
                  min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time
           FROM events
           LEFT OUTER JOIN
             (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                     person_distinct_id_overrides.distinct_id AS distinct_id
              FROM person_distinct_id_overrides
              WHERE equals(person_distinct_id_overrides.team_id, 99999)
              GROUP BY person_distinct_id_overrides.distinct_id
              HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
           LEFT JOIN
             (SELECT argMax(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(groups.group_properties, 'name'), ''), 'null'), '^"|"$', ''), toTimeZone(groups._timestamp, 'UTC')) AS properties___name,
                     groups.group_type_index AS index,
                     groups.group_key AS key
              FROM groups
              WHERE and(equals(groups.team_id, 99999), equals(index, 0))
              GROUP BY groups.group_type_index,
                       groups.group_key) AS events__group_0 ON equals(events.`$group_0`, events__group_0.key)
           WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), ifNull(equals(events__group_0.properties___name, 'Test Group'), 0))
           GROUP BY variant,
                    entity_id) AS exposure_data ON equals(if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id), exposure_data.entity_id)
        WHERE and(equals(events.team_id, 99999), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), exposure_data.first_exposure_time), equals(events.event, '$pageview'), ifNull(equals(events__group_0.properties___name, 'Test Group'), 0))) AS events_after_exposure ON and(equals(toString(exposure_data.entity_id), toString(events_after_exposure.entity_id)), equals(exposure_data.variant, events_after_exposure.variant))
     GROUP BY exposure_data.variant,
              exposure_data.entity_id) AS metrics_per_user
  GROUP BY metrics_per_user.variant
  LIMIT 100 SETTINGS readonly=2,
                     max_execution_time=60,
                     allow_experimental_object_type=1,
                     format_csv_allow_double_quotes=0,
                     max_ast_elements=4000000,
                     max_expanded_ast_elements=4000000,
                     max_bytes_before_external_group_by=0
  '''
# ---
# name: TestExperimentQueryRunner.test_query_runner_with_internal_filters_5_group.1
  '''
  SELECT metrics_per_user.variant AS variant,
         count(metrics_per_user.entity_id) AS num_users,
         sum(metrics_per_user.value) AS total_sum,
         sum(power(metrics_per_user.value, 2)) AS total_sum_of_squares
  FROM
    (SELECT exposure_data.variant AS variant,
            exposure_data.entity_id AS entity_id,
            sum(coalesce(events_after_exposure.value, 0)) AS value
     FROM
       (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
               replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
               min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time
        FROM events
        LEFT OUTER JOIN
          (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                  person_distinct_id_overrides.distinct_id AS distinct_id
           FROM person_distinct_id_overrides
           WHERE equals(person_distinct_id_overrides.team_id, 99999)
           GROUP BY person_distinct_id_overrides.distinct_id
           HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
        WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')))
        GROUP BY variant,
                 entity_id) AS exposure_data
     LEFT JOIN
       (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
               if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
               exposure_data.variant AS variant,
               events.event AS event,
               1 AS value
        FROM events
        LEFT OUTER JOIN
          (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                  person_distinct_id_overrides.distinct_id AS distinct_id
           FROM person_distinct_id_overrides
           WHERE equals(person_distinct_id_overrides.team_id, 99999)
           GROUP BY person_distinct_id_overrides.distinct_id
           HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
        INNER JOIN
          (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
                  replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
                  min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time
           FROM events
           LEFT OUTER JOIN
             (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                     person_distinct_id_overrides.distinct_id AS distinct_id
              FROM person_distinct_id_overrides
              WHERE equals(person_distinct_id_overrides.team_id, 99999)
              GROUP BY person_distinct_id_overrides.distinct_id
              HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
           WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')))
           GROUP BY variant,
                    entity_id) AS exposure_data ON equals(if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id), exposure_data.entity_id)
        WHERE and(equals(events.team_id, 99999), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), exposure_data.first_exposure_time), equals(events.event, '$pageview'))) AS events_after_exposure ON and(equals(toString(exposure_data.entity_id), toString(events_after_exposure.entity_id)), equals(exposure_data.variant, events_after_exposure.variant))
     GROUP BY exposure_data.variant,
              exposure_data.entity_id) AS metrics_per_user
  GROUP BY metrics_per_user.variant
  LIMIT 100 SETTINGS readonly=2,
                     max_execution_time=60,
                     allow_experimental_object_type=1,
                     format_csv_allow_double_quotes=0,
                     max_ast_elements=4000000,
                     max_expanded_ast_elements=4000000,
                     max_bytes_before_external_group_by=0
  '''
# ---
# name: TestExperimentQueryRunner.test_query_runner_with_internal_filters_6_element
  '''
  SELECT metrics_per_user.variant AS variant,
         count(metrics_per_user.entity_id) AS num_users,
         sum(metrics_per_user.value) AS total_sum,
         sum(power(metrics_per_user.value, 2)) AS total_sum_of_squares
  FROM
    (SELECT exposure_data.variant AS variant,
            exposure_data.entity_id AS entity_id,
            sum(coalesce(events_after_exposure.value, 0)) AS value
     FROM
       (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
               replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
               min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time
        FROM events
        LEFT OUTER JOIN
          (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                  person_distinct_id_overrides.distinct_id AS distinct_id
           FROM person_distinct_id_overrides
           WHERE equals(person_distinct_id_overrides.team_id, 99999)
           GROUP BY person_distinct_id_overrides.distinct_id
           HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
        WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), match(events.elements_chain, '(^|;)button(\\.|$|;|:)'))
        GROUP BY variant,
                 entity_id) AS exposure_data
     LEFT JOIN
       (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
               if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
               exposure_data.variant AS variant,
               events.event AS event,
               1 AS value
        FROM events
        LEFT OUTER JOIN
          (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                  person_distinct_id_overrides.distinct_id AS distinct_id
           FROM person_distinct_id_overrides
           WHERE equals(person_distinct_id_overrides.team_id, 99999)
           GROUP BY person_distinct_id_overrides.distinct_id
           HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
        INNER JOIN
          (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
                  replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
                  min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time
           FROM events
           LEFT OUTER JOIN
             (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                     person_distinct_id_overrides.distinct_id AS distinct_id
              FROM person_distinct_id_overrides
              WHERE equals(person_distinct_id_overrides.team_id, 99999)
              GROUP BY person_distinct_id_overrides.distinct_id
              HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
           WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), match(events.elements_chain, '(^|;)button(\\.|$|;|:)'))
           GROUP BY variant,
                    entity_id) AS exposure_data ON equals(if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id), exposure_data.entity_id)
        WHERE and(equals(events.team_id, 99999), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), exposure_data.first_exposure_time), equals(events.event, '$pageview'), match(events.elements_chain, '(^|;)button(\\.|$|;|:)'))) AS events_after_exposure ON and(equals(toString(exposure_data.entity_id), toString(events_after_exposure.entity_id)), equals(exposure_data.variant, events_after_exposure.variant))
     GROUP BY exposure_data.variant,
              exposure_data.entity_id) AS metrics_per_user
  GROUP BY metrics_per_user.variant
  LIMIT 100 SETTINGS readonly=2,
                     max_execution_time=60,
                     allow_experimental_object_type=1,
                     format_csv_allow_double_quotes=0,
                     max_ast_elements=4000000,
                     max_expanded_ast_elements=4000000,
                     max_bytes_before_external_group_by=0
  '''
# ---
# name: TestExperimentQueryRunner.test_query_runner_with_internal_filters_6_element.1
  '''
  SELECT metrics_per_user.variant AS variant,
         count(metrics_per_user.entity_id) AS num_users,
         sum(metrics_per_user.value) AS total_sum,
         sum(power(metrics_per_user.value, 2)) AS total_sum_of_squares
  FROM
    (SELECT exposure_data.variant AS variant,
            exposure_data.entity_id AS entity_id,
            sum(coalesce(events_after_exposure.value, 0)) AS value
     FROM
       (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
               replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
               min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time
        FROM events
        LEFT OUTER JOIN
          (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                  person_distinct_id_overrides.distinct_id AS distinct_id
           FROM person_distinct_id_overrides
           WHERE equals(person_distinct_id_overrides.team_id, 99999)
           GROUP BY person_distinct_id_overrides.distinct_id
           HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
        WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')))
        GROUP BY variant,
                 entity_id) AS exposure_data
     LEFT JOIN
       (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
               if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
               exposure_data.variant AS variant,
               events.event AS event,
               1 AS value
        FROM events
        LEFT OUTER JOIN
          (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                  person_distinct_id_overrides.distinct_id AS distinct_id
           FROM person_distinct_id_overrides
           WHERE equals(person_distinct_id_overrides.team_id, 99999)
           GROUP BY person_distinct_id_overrides.distinct_id
           HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
        INNER JOIN
          (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
                  replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
                  min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time
           FROM events
           LEFT OUTER JOIN
             (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                     person_distinct_id_overrides.distinct_id AS distinct_id
              FROM person_distinct_id_overrides
              WHERE equals(person_distinct_id_overrides.team_id, 99999)
              GROUP BY person_distinct_id_overrides.distinct_id
              HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
           WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')))
           GROUP BY variant,
                    entity_id) AS exposure_data ON equals(if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id), exposure_data.entity_id)
        WHERE and(equals(events.team_id, 99999), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), exposure_data.first_exposure_time), equals(events.event, '$pageview'))) AS events_after_exposure ON and(equals(toString(exposure_data.entity_id), toString(events_after_exposure.entity_id)), equals(exposure_data.variant, events_after_exposure.variant))
     GROUP BY exposure_data.variant,
              exposure_data.entity_id) AS metrics_per_user
  GROUP BY metrics_per_user.variant
  LIMIT 100 SETTINGS readonly=2,
                     max_execution_time=60,
                     allow_experimental_object_type=1,
                     format_csv_allow_double_quotes=0,
                     max_ast_elements=4000000,
                     max_expanded_ast_elements=4000000,
                     max_bytes_before_external_group_by=0
  '''
# ---
# name: TestExperimentQueryRunner.test_query_runner_with_persons_on_events_mode_0_person_id_override_properties_on_events_no_filter
  '''
  
  SELECT DISTINCT person_id
  FROM events
  WHERE team_id = 99999
    AND distinct_id = 'person_id_1_distinct_id_2'
  '''
# ---
# name: TestExperimentQueryRunner.test_query_runner_with_persons_on_events_mode_0_person_id_override_properties_on_events_no_filter.1
  '''
  SELECT metrics_per_user.variant AS variant,
         count(metrics_per_user.entity_id) AS num_users,
         sum(metrics_per_user.value) AS total_sum,
         sum(power(metrics_per_user.value, 2)) AS total_sum_of_squares
  FROM
    (SELECT exposure_data.variant AS variant,
            exposure_data.entity_id AS entity_id,
            coalesce(argMax(events_after_exposure.value, events_after_exposure.timestamp), 0) AS value
     FROM
       (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
               replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
               min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time
        FROM events
        LEFT OUTER JOIN
          (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                  person_distinct_id_overrides.distinct_id AS distinct_id
           FROM person_distinct_id_overrides
           WHERE equals(person_distinct_id_overrides.team_id, 99999)
           GROUP BY person_distinct_id_overrides.distinct_id
           HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
        WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), ifNull(notILike(toString(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.person_properties, 'email'), ''), 'null'), '^"|"$', '')), '%@posthog.com%'), 1))
        GROUP BY variant,
                 entity_id) AS exposure_data
     LEFT JOIN
       (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
               if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
               exposure_data.variant AS variant,
               events.event AS event,
               1 AS value
        FROM events
        LEFT OUTER JOIN
          (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                  person_distinct_id_overrides.distinct_id AS distinct_id
           FROM person_distinct_id_overrides
           WHERE equals(person_distinct_id_overrides.team_id, 99999)
           GROUP BY person_distinct_id_overrides.distinct_id
           HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
        INNER JOIN
          (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
                  replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
                  min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time
           FROM events
           LEFT OUTER JOIN
             (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                     person_distinct_id_overrides.distinct_id AS distinct_id
              FROM person_distinct_id_overrides
              WHERE equals(person_distinct_id_overrides.team_id, 99999)
              GROUP BY person_distinct_id_overrides.distinct_id
              HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
           WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), ifNull(notILike(toString(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.person_properties, 'email'), ''), 'null'), '^"|"$', '')), '%@posthog.com%'), 1))
           GROUP BY variant,
                    entity_id) AS exposure_data ON equals(if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id), exposure_data.entity_id)
        WHERE and(equals(events.team_id, 99999), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), exposure_data.first_exposure_time), equals(events.event, 'purchase'), ifNull(notILike(toString(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.person_properties, 'email'), ''), 'null'), '^"|"$', '')), '%@posthog.com%'), 1))) AS events_after_exposure ON and(equals(toString(exposure_data.entity_id), toString(events_after_exposure.entity_id)), equals(exposure_data.variant, events_after_exposure.variant))
     GROUP BY exposure_data.variant,
              exposure_data.entity_id) AS metrics_per_user
  GROUP BY metrics_per_user.variant
  LIMIT 100 SETTINGS readonly=2,
                     max_execution_time=60,
                     allow_experimental_object_type=1,
                     format_csv_allow_double_quotes=0,
                     max_ast_elements=4000000,
                     max_expanded_ast_elements=4000000,
                     max_bytes_before_external_group_by=0
  '''
# ---
# name: TestExperimentQueryRunner.test_query_runner_with_persons_on_events_mode_1_person_id_override_properties_on_events_filter_earlierevent
  '''
  
  SELECT DISTINCT person_id
  FROM events
  WHERE team_id = 99999
    AND distinct_id = 'person_id_1_distinct_id_2'
  '''
# ---
# name: TestExperimentQueryRunner.test_query_runner_with_persons_on_events_mode_1_person_id_override_properties_on_events_filter_earlierevent.1
  '''
  SELECT metrics_per_user.variant AS variant,
         count(metrics_per_user.entity_id) AS num_users,
         sum(metrics_per_user.value) AS total_sum,
         sum(power(metrics_per_user.value, 2)) AS total_sum_of_squares
  FROM
    (SELECT exposure_data.variant AS variant,
            exposure_data.entity_id AS entity_id,
            coalesce(argMax(events_after_exposure.value, events_after_exposure.timestamp), 0) AS value
     FROM
       (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
               replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
               min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time
        FROM events
        LEFT OUTER JOIN
          (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                  person_distinct_id_overrides.distinct_id AS distinct_id
           FROM person_distinct_id_overrides
           WHERE equals(person_distinct_id_overrides.team_id, 99999)
           GROUP BY person_distinct_id_overrides.distinct_id
           HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
        WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), ifNull(notILike(toString(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.person_properties, 'email'), ''), 'null'), '^"|"$', '')), '%@earlierevent.com%'), 1))
        GROUP BY variant,
                 entity_id) AS exposure_data
     LEFT JOIN
       (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
               if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
               exposure_data.variant AS variant,
               events.event AS event,
               1 AS value
        FROM events
        LEFT OUTER JOIN
          (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                  person_distinct_id_overrides.distinct_id AS distinct_id
           FROM person_distinct_id_overrides
           WHERE equals(person_distinct_id_overrides.team_id, 99999)
           GROUP BY person_distinct_id_overrides.distinct_id
           HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
        INNER JOIN
          (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
                  replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
                  min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time
           FROM events
           LEFT OUTER JOIN
             (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                     person_distinct_id_overrides.distinct_id AS distinct_id
              FROM person_distinct_id_overrides
              WHERE equals(person_distinct_id_overrides.team_id, 99999)
              GROUP BY person_distinct_id_overrides.distinct_id
              HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
           WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), ifNull(notILike(toString(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.person_properties, 'email'), ''), 'null'), '^"|"$', '')), '%@earlierevent.com%'), 1))
           GROUP BY variant,
                    entity_id) AS exposure_data ON equals(if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id), exposure_data.entity_id)
        WHERE and(equals(events.team_id, 99999), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), exposure_data.first_exposure_time), equals(events.event, 'purchase'), ifNull(notILike(toString(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.person_properties, 'email'), ''), 'null'), '^"|"$', '')), '%@earlierevent.com%'), 1))) AS events_after_exposure ON and(equals(toString(exposure_data.entity_id), toString(events_after_exposure.entity_id)), equals(exposure_data.variant, events_after_exposure.variant))
     GROUP BY exposure_data.variant,
              exposure_data.entity_id) AS metrics_per_user
  GROUP BY metrics_per_user.variant
  LIMIT 100 SETTINGS readonly=2,
                     max_execution_time=60,
                     allow_experimental_object_type=1,
                     format_csv_allow_double_quotes=0,
                     max_ast_elements=4000000,
                     max_expanded_ast_elements=4000000,
                     max_bytes_before_external_group_by=0
  '''
# ---
# name: TestExperimentQueryRunner.test_query_runner_with_persons_on_events_mode_2_person_id_override_properties_on_events_filter_laterevent
  '''
  
  SELECT DISTINCT person_id
  FROM events
  WHERE team_id = 99999
    AND distinct_id = 'person_id_1_distinct_id_2'
  '''
# ---
# name: TestExperimentQueryRunner.test_query_runner_with_persons_on_events_mode_2_person_id_override_properties_on_events_filter_laterevent.1
  '''
  SELECT metrics_per_user.variant AS variant,
         count(metrics_per_user.entity_id) AS num_users,
         sum(metrics_per_user.value) AS total_sum,
         sum(power(metrics_per_user.value, 2)) AS total_sum_of_squares
  FROM
    (SELECT exposure_data.variant AS variant,
            exposure_data.entity_id AS entity_id,
            coalesce(argMax(events_after_exposure.value, events_after_exposure.timestamp), 0) AS value
     FROM
       (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
               replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
               min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time
        FROM events
        LEFT OUTER JOIN
          (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                  person_distinct_id_overrides.distinct_id AS distinct_id
           FROM person_distinct_id_overrides
           WHERE equals(person_distinct_id_overrides.team_id, 99999)
           GROUP BY person_distinct_id_overrides.distinct_id
           HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
        WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), ifNull(notILike(toString(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.person_properties, 'email'), ''), 'null'), '^"|"$', '')), '%@laterevent.com%'), 1))
        GROUP BY variant,
                 entity_id) AS exposure_data
     LEFT JOIN
       (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
               if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
               exposure_data.variant AS variant,
               events.event AS event,
               1 AS value
        FROM events
        LEFT OUTER JOIN
          (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                  person_distinct_id_overrides.distinct_id AS distinct_id
           FROM person_distinct_id_overrides
           WHERE equals(person_distinct_id_overrides.team_id, 99999)
           GROUP BY person_distinct_id_overrides.distinct_id
           HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
        INNER JOIN
          (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
                  replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
                  min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time
           FROM events
           LEFT OUTER JOIN
             (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                     person_distinct_id_overrides.distinct_id AS distinct_id
              FROM person_distinct_id_overrides
              WHERE equals(person_distinct_id_overrides.team_id, 99999)
              GROUP BY person_distinct_id_overrides.distinct_id
              HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
           WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), ifNull(notILike(toString(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.person_properties, 'email'), ''), 'null'), '^"|"$', '')), '%@laterevent.com%'), 1))
           GROUP BY variant,
                    entity_id) AS exposure_data ON equals(if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id), exposure_data.entity_id)
        WHERE and(equals(events.team_id, 99999), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), exposure_data.first_exposure_time), equals(events.event, 'purchase'), ifNull(notILike(toString(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.person_properties, 'email'), ''), 'null'), '^"|"$', '')), '%@laterevent.com%'), 1))) AS events_after_exposure ON and(equals(toString(exposure_data.entity_id), toString(events_after_exposure.entity_id)), equals(exposure_data.variant, events_after_exposure.variant))
     GROUP BY exposure_data.variant,
              exposure_data.entity_id) AS metrics_per_user
  GROUP BY metrics_per_user.variant
  LIMIT 100 SETTINGS readonly=2,
                     max_execution_time=60,
                     allow_experimental_object_type=1,
                     format_csv_allow_double_quotes=0,
                     max_ast_elements=4000000,
                     max_expanded_ast_elements=4000000,
                     max_bytes_before_external_group_by=0
  '''
# ---
# name: TestExperimentQueryRunner.test_query_runner_with_persons_on_events_mode_3_person_id_override_properties_joined_no_filter
  '''
  
  SELECT DISTINCT person_id
  FROM events
  WHERE team_id = 99999
    AND distinct_id = 'person_id_1_distinct_id_2'
  '''
# ---
# name: TestExperimentQueryRunner.test_query_runner_with_persons_on_events_mode_3_person_id_override_properties_joined_no_filter.1
  '''
  SELECT metrics_per_user.variant AS variant,
         count(metrics_per_user.entity_id) AS num_users,
         sum(metrics_per_user.value) AS total_sum,
         sum(power(metrics_per_user.value, 2)) AS total_sum_of_squares
  FROM
    (SELECT exposure_data.variant AS variant,
            exposure_data.entity_id AS entity_id,
            coalesce(argMax(events_after_exposure.value, events_after_exposure.timestamp), 0) AS value
     FROM
       (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
               replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
               min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time
        FROM events
        LEFT OUTER JOIN
          (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                  person_distinct_id_overrides.distinct_id AS distinct_id
           FROM person_distinct_id_overrides
           WHERE equals(person_distinct_id_overrides.team_id, 99999)
           GROUP BY person_distinct_id_overrides.distinct_id
           HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
        LEFT JOIN
          (SELECT person.id AS id,
                  replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(person.properties, 'email'), ''), 'null'), '^"|"$', '') AS properties___email
           FROM person
           WHERE and(equals(person.team_id, 99999), ifNull(in(tuple(person.id, person.version),
                                                                (SELECT person.id AS id, max(person.version) AS version
                                                                 FROM person
                                                                 WHERE equals(person.team_id, 99999)
                                                                 GROUP BY person.id
                                                                 HAVING and(ifNull(equals(argMax(person.is_deleted, person.version), 0), 0), ifNull(less(argMax(toTimeZone(person.created_at, 'UTC'), person.version), plus(now64(6, 'UTC'), toIntervalDay(1))), 0)))), 0)) SETTINGS optimize_aggregation_in_order=1) AS events__person ON equals(if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id), events__person.id)
        WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), ifNull(notILike(toString(events__person.properties___email), '%@posthog.com%'), 1))
        GROUP BY variant,
                 entity_id) AS exposure_data
     LEFT JOIN
       (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
               if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
               exposure_data.variant AS variant,
               events.event AS event,
               1 AS value
        FROM events
        LEFT OUTER JOIN
          (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                  person_distinct_id_overrides.distinct_id AS distinct_id
           FROM person_distinct_id_overrides
           WHERE equals(person_distinct_id_overrides.team_id, 99999)
           GROUP BY person_distinct_id_overrides.distinct_id
           HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
        LEFT JOIN
          (SELECT person.id AS id,
                  replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(person.properties, 'email'), ''), 'null'), '^"|"$', '') AS properties___email
           FROM person
           WHERE and(equals(person.team_id, 99999), ifNull(in(tuple(person.id, person.version),
                                                                (SELECT person.id AS id, max(person.version) AS version
                                                                 FROM person
                                                                 WHERE equals(person.team_id, 99999)
                                                                 GROUP BY person.id
                                                                 HAVING and(ifNull(equals(argMax(person.is_deleted, person.version), 0), 0), ifNull(less(argMax(toTimeZone(person.created_at, 'UTC'), person.version), plus(now64(6, 'UTC'), toIntervalDay(1))), 0)))), 0)) SETTINGS optimize_aggregation_in_order=1) AS events__person ON equals(if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id), events__person.id)
        INNER JOIN
          (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
                  replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
                  min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time
           FROM events
           LEFT OUTER JOIN
             (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                     person_distinct_id_overrides.distinct_id AS distinct_id
              FROM person_distinct_id_overrides
              WHERE equals(person_distinct_id_overrides.team_id, 99999)
              GROUP BY person_distinct_id_overrides.distinct_id
              HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
           LEFT JOIN
             (SELECT person.id AS id,
                     replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(person.properties, 'email'), ''), 'null'), '^"|"$', '') AS properties___email
              FROM person
              WHERE and(equals(person.team_id, 99999), ifNull(in(tuple(person.id, person.version),
                                                                   (SELECT person.id AS id, max(person.version) AS version
                                                                    FROM person
                                                                    WHERE equals(person.team_id, 99999)
                                                                    GROUP BY person.id
                                                                    HAVING and(ifNull(equals(argMax(person.is_deleted, person.version), 0), 0), ifNull(less(argMax(toTimeZone(person.created_at, 'UTC'), person.version), plus(now64(6, 'UTC'), toIntervalDay(1))), 0)))), 0)) SETTINGS optimize_aggregation_in_order=1) AS events__person ON equals(if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id), events__person.id)
           WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), ifNull(notILike(toString(events__person.properties___email), '%@posthog.com%'), 1))
           GROUP BY variant,
                    entity_id) AS exposure_data ON equals(if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id), exposure_data.entity_id)
        WHERE and(equals(events.team_id, 99999), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), exposure_data.first_exposure_time), equals(events.event, 'purchase'), ifNull(notILike(toString(events__person.properties___email), '%@posthog.com%'), 1))) AS events_after_exposure ON and(equals(toString(exposure_data.entity_id), toString(events_after_exposure.entity_id)), equals(exposure_data.variant, events_after_exposure.variant))
     GROUP BY exposure_data.variant,
              exposure_data.entity_id) AS metrics_per_user
  GROUP BY metrics_per_user.variant
  LIMIT 100 SETTINGS readonly=2,
                     max_execution_time=60,
                     allow_experimental_object_type=1,
                     format_csv_allow_double_quotes=0,
                     max_ast_elements=4000000,
                     max_expanded_ast_elements=4000000,
                     max_bytes_before_external_group_by=0
  '''
# ---
# name: TestExperimentQueryRunner.test_query_runner_with_persons_on_events_mode_4_person_id_override_properties_joined_filter_earlierevent
  '''
  
  SELECT DISTINCT person_id
  FROM events
  WHERE team_id = 99999
    AND distinct_id = 'person_id_1_distinct_id_2'
  '''
# ---
# name: TestExperimentQueryRunner.test_query_runner_with_persons_on_events_mode_4_person_id_override_properties_joined_filter_earlierevent.1
  '''
  SELECT metrics_per_user.variant AS variant,
         count(metrics_per_user.entity_id) AS num_users,
         sum(metrics_per_user.value) AS total_sum,
         sum(power(metrics_per_user.value, 2)) AS total_sum_of_squares
  FROM
    (SELECT exposure_data.variant AS variant,
            exposure_data.entity_id AS entity_id,
            coalesce(argMax(events_after_exposure.value, events_after_exposure.timestamp), 0) AS value
     FROM
       (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
               replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
               min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time
        FROM events
        LEFT OUTER JOIN
          (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                  person_distinct_id_overrides.distinct_id AS distinct_id
           FROM person_distinct_id_overrides
           WHERE equals(person_distinct_id_overrides.team_id, 99999)
           GROUP BY person_distinct_id_overrides.distinct_id
           HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
        LEFT JOIN
          (SELECT person.id AS id,
                  replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(person.properties, 'email'), ''), 'null'), '^"|"$', '') AS properties___email
           FROM person
           WHERE and(equals(person.team_id, 99999), ifNull(in(tuple(person.id, person.version),
                                                                (SELECT person.id AS id, max(person.version) AS version
                                                                 FROM person
                                                                 WHERE equals(person.team_id, 99999)
                                                                 GROUP BY person.id
                                                                 HAVING and(ifNull(equals(argMax(person.is_deleted, person.version), 0), 0), ifNull(less(argMax(toTimeZone(person.created_at, 'UTC'), person.version), plus(now64(6, 'UTC'), toIntervalDay(1))), 0)))), 0)) SETTINGS optimize_aggregation_in_order=1) AS events__person ON equals(if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id), events__person.id)
        WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), ifNull(notILike(toString(events__person.properties___email), '%@earlierevent.com%'), 1))
        GROUP BY variant,
                 entity_id) AS exposure_data
     LEFT JOIN
       (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
               if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
               exposure_data.variant AS variant,
               events.event AS event,
               1 AS value
        FROM events
        LEFT OUTER JOIN
          (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                  person_distinct_id_overrides.distinct_id AS distinct_id
           FROM person_distinct_id_overrides
           WHERE equals(person_distinct_id_overrides.team_id, 99999)
           GROUP BY person_distinct_id_overrides.distinct_id
           HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
        LEFT JOIN
          (SELECT person.id AS id,
                  replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(person.properties, 'email'), ''), 'null'), '^"|"$', '') AS properties___email
           FROM person
           WHERE and(equals(person.team_id, 99999), ifNull(in(tuple(person.id, person.version),
                                                                (SELECT person.id AS id, max(person.version) AS version
                                                                 FROM person
                                                                 WHERE equals(person.team_id, 99999)
                                                                 GROUP BY person.id
                                                                 HAVING and(ifNull(equals(argMax(person.is_deleted, person.version), 0), 0), ifNull(less(argMax(toTimeZone(person.created_at, 'UTC'), person.version), plus(now64(6, 'UTC'), toIntervalDay(1))), 0)))), 0)) SETTINGS optimize_aggregation_in_order=1) AS events__person ON equals(if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id), events__person.id)
        INNER JOIN
          (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
                  replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
                  min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time
           FROM events
           LEFT OUTER JOIN
             (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                     person_distinct_id_overrides.distinct_id AS distinct_id
              FROM person_distinct_id_overrides
              WHERE equals(person_distinct_id_overrides.team_id, 99999)
              GROUP BY person_distinct_id_overrides.distinct_id
              HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
           LEFT JOIN
             (SELECT person.id AS id,
                     replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(person.properties, 'email'), ''), 'null'), '^"|"$', '') AS properties___email
              FROM person
              WHERE and(equals(person.team_id, 99999), ifNull(in(tuple(person.id, person.version),
                                                                   (SELECT person.id AS id, max(person.version) AS version
                                                                    FROM person
                                                                    WHERE equals(person.team_id, 99999)
                                                                    GROUP BY person.id
                                                                    HAVING and(ifNull(equals(argMax(person.is_deleted, person.version), 0), 0), ifNull(less(argMax(toTimeZone(person.created_at, 'UTC'), person.version), plus(now64(6, 'UTC'), toIntervalDay(1))), 0)))), 0)) SETTINGS optimize_aggregation_in_order=1) AS events__person ON equals(if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id), events__person.id)
           WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), ifNull(notILike(toString(events__person.properties___email), '%@earlierevent.com%'), 1))
           GROUP BY variant,
                    entity_id) AS exposure_data ON equals(if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id), exposure_data.entity_id)
        WHERE and(equals(events.team_id, 99999), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), exposure_data.first_exposure_time), equals(events.event, 'purchase'), ifNull(notILike(toString(events__person.properties___email), '%@earlierevent.com%'), 1))) AS events_after_exposure ON and(equals(toString(exposure_data.entity_id), toString(events_after_exposure.entity_id)), equals(exposure_data.variant, events_after_exposure.variant))
     GROUP BY exposure_data.variant,
              exposure_data.entity_id) AS metrics_per_user
  GROUP BY metrics_per_user.variant
  LIMIT 100 SETTINGS readonly=2,
                     max_execution_time=60,
                     allow_experimental_object_type=1,
                     format_csv_allow_double_quotes=0,
                     max_ast_elements=4000000,
                     max_expanded_ast_elements=4000000,
                     max_bytes_before_external_group_by=0
  '''
# ---
# name: TestExperimentQueryRunner.test_query_runner_with_persons_on_events_mode_5_person_id_override_properties_joined_filter_laterevent
  '''
  
  SELECT DISTINCT person_id
  FROM events
  WHERE team_id = 99999
    AND distinct_id = 'person_id_1_distinct_id_2'
  '''
# ---
# name: TestExperimentQueryRunner.test_query_runner_with_persons_on_events_mode_5_person_id_override_properties_joined_filter_laterevent.1
  '''
  SELECT metrics_per_user.variant AS variant,
         count(metrics_per_user.entity_id) AS num_users,
         sum(metrics_per_user.value) AS total_sum,
         sum(power(metrics_per_user.value, 2)) AS total_sum_of_squares
  FROM
    (SELECT exposure_data.variant AS variant,
            exposure_data.entity_id AS entity_id,
            coalesce(argMax(events_after_exposure.value, events_after_exposure.timestamp), 0) AS value
     FROM
       (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
               replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
               min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time
        FROM events
        LEFT OUTER JOIN
          (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                  person_distinct_id_overrides.distinct_id AS distinct_id
           FROM person_distinct_id_overrides
           WHERE equals(person_distinct_id_overrides.team_id, 99999)
           GROUP BY person_distinct_id_overrides.distinct_id
           HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
        LEFT JOIN
          (SELECT person.id AS id,
                  replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(person.properties, 'email'), ''), 'null'), '^"|"$', '') AS properties___email
           FROM person
           WHERE and(equals(person.team_id, 99999), ifNull(in(tuple(person.id, person.version),
                                                                (SELECT person.id AS id, max(person.version) AS version
                                                                 FROM person
                                                                 WHERE equals(person.team_id, 99999)
                                                                 GROUP BY person.id
                                                                 HAVING and(ifNull(equals(argMax(person.is_deleted, person.version), 0), 0), ifNull(less(argMax(toTimeZone(person.created_at, 'UTC'), person.version), plus(now64(6, 'UTC'), toIntervalDay(1))), 0)))), 0)) SETTINGS optimize_aggregation_in_order=1) AS events__person ON equals(if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id), events__person.id)
        WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), ifNull(notILike(toString(events__person.properties___email), '%@laterevent.com%'), 1))
        GROUP BY variant,
                 entity_id) AS exposure_data
     LEFT JOIN
       (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
               if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
               exposure_data.variant AS variant,
               events.event AS event,
               1 AS value
        FROM events
        LEFT OUTER JOIN
          (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                  person_distinct_id_overrides.distinct_id AS distinct_id
           FROM person_distinct_id_overrides
           WHERE equals(person_distinct_id_overrides.team_id, 99999)
           GROUP BY person_distinct_id_overrides.distinct_id
           HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
        LEFT JOIN
          (SELECT person.id AS id,
                  replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(person.properties, 'email'), ''), 'null'), '^"|"$', '') AS properties___email
           FROM person
           WHERE and(equals(person.team_id, 99999), ifNull(in(tuple(person.id, person.version),
                                                                (SELECT person.id AS id, max(person.version) AS version
                                                                 FROM person
                                                                 WHERE equals(person.team_id, 99999)
                                                                 GROUP BY person.id
                                                                 HAVING and(ifNull(equals(argMax(person.is_deleted, person.version), 0), 0), ifNull(less(argMax(toTimeZone(person.created_at, 'UTC'), person.version), plus(now64(6, 'UTC'), toIntervalDay(1))), 0)))), 0)) SETTINGS optimize_aggregation_in_order=1) AS events__person ON equals(if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id), events__person.id)
        INNER JOIN
          (SELECT if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id) AS entity_id,
                  replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
                  min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time
           FROM events
           LEFT OUTER JOIN
             (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                     person_distinct_id_overrides.distinct_id AS distinct_id
              FROM person_distinct_id_overrides
              WHERE equals(person_distinct_id_overrides.team_id, 99999)
              GROUP BY person_distinct_id_overrides.distinct_id
              HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
           LEFT JOIN
             (SELECT person.id AS id,
                     replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(person.properties, 'email'), ''), 'null'), '^"|"$', '') AS properties___email
              FROM person
              WHERE and(equals(person.team_id, 99999), ifNull(in(tuple(person.id, person.version),
                                                                   (SELECT person.id AS id, max(person.version) AS version
                                                                    FROM person
                                                                    WHERE equals(person.team_id, 99999)
                                                                    GROUP BY person.id
                                                                    HAVING and(ifNull(equals(argMax(person.is_deleted, person.version), 0), 0), ifNull(less(argMax(toTimeZone(person.created_at, 'UTC'), person.version), plus(now64(6, 'UTC'), toIntervalDay(1))), 0)))), 0)) SETTINGS optimize_aggregation_in_order=1) AS events__person ON equals(if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id), events__person.id)
           WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), ifNull(notILike(toString(events__person.properties___email), '%@laterevent.com%'), 1))
           GROUP BY variant,
                    entity_id) AS exposure_data ON equals(if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id), exposure_data.entity_id)
        WHERE and(equals(events.team_id, 99999), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), exposure_data.first_exposure_time), equals(events.event, 'purchase'), ifNull(notILike(toString(events__person.properties___email), '%@laterevent.com%'), 1))) AS events_after_exposure ON and(equals(toString(exposure_data.entity_id), toString(events_after_exposure.entity_id)), equals(exposure_data.variant, events_after_exposure.variant))
     GROUP BY exposure_data.variant,
              exposure_data.entity_id) AS metrics_per_user
  GROUP BY metrics_per_user.variant
  LIMIT 100 SETTINGS readonly=2,
                     max_execution_time=60,
                     allow_experimental_object_type=1,
                     format_csv_allow_double_quotes=0,
                     max_ast_elements=4000000,
                     max_expanded_ast_elements=4000000,
                     max_bytes_before_external_group_by=0
  '''
# ---
# name: TestExperimentQueryRunner.test_query_runner_with_persons_on_events_mode_6_person_id_no_override_properties_on_events_no_filter
  '''
  
  SELECT DISTINCT person_id
  FROM events
  WHERE team_id = 99999
    AND distinct_id = 'person_id_1_distinct_id_2'
  '''
# ---
# name: TestExperimentQueryRunner.test_query_runner_with_persons_on_events_mode_6_person_id_no_override_properties_on_events_no_filter.1
  '''
  SELECT metrics_per_user.variant AS variant,
         count(metrics_per_user.entity_id) AS num_users,
         sum(metrics_per_user.value) AS total_sum,
         sum(power(metrics_per_user.value, 2)) AS total_sum_of_squares
  FROM
    (SELECT exposure_data.variant AS variant,
            exposure_data.entity_id AS entity_id,
            coalesce(argMax(events_after_exposure.value, events_after_exposure.timestamp), 0) AS value
     FROM
       (SELECT events.person_id AS entity_id,
               replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
               min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time
        FROM events
        WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('2020-01-01 00:00:00.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('2020-01-31 00:00:00.000000', 6, 'UTC')), ifNull(notILike(toString(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.person_properties, 'email'), ''), 'null'), '^"|"$', '')), '%@posthog.com%'), 1))
        GROUP BY variant,
                 entity_id) AS exposure_data
     LEFT JOIN
       (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
               events.person_id AS entity_id,
               exposure_data.variant AS variant,
               events.event AS event,
               1 AS value
        FROM events
        INNER JOIN
          (SELECT events.person_id AS entity_id,
                  replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
                  min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time
           FROM events
           WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('2020-01-01 00:00:00.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('2020-01-31 00:00:00.000000', 6, 'UTC')), ifNull(notILike(toString(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.person_properties, 'email'), ''), 'null'), '^"|"$', '')), '%@posthog.com%'), 1))
           GROUP BY variant,
                    entity_id) AS exposure_data ON equals(events.person_id, exposure_data.entity_id)
        WHERE and(equals(events.team_id, 99999), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('2020-01-01 00:00:00.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('2020-01-31 00:00:00.000000', 6, 'UTC')), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), exposure_data.first_exposure_time), equals(events.event, 'purchase'), ifNull(notILike(toString(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.person_properties, 'email'), ''), 'null'), '^"|"$', '')), '%@posthog.com%'), 1))) AS events_after_exposure ON and(equals(toString(exposure_data.entity_id), toString(events_after_exposure.entity_id)), equals(exposure_data.variant, events_after_exposure.variant))
     GROUP BY exposure_data.variant,
              exposure_data.entity_id) AS metrics_per_user
  GROUP BY metrics_per_user.variant
  LIMIT 100 SETTINGS readonly=2,
                     max_execution_time=60,
                     allow_experimental_object_type=1,
                     format_csv_allow_double_quotes=0,
                     max_ast_elements=4000000,
                     max_expanded_ast_elements=4000000,
                     max_bytes_before_external_group_by=0
  '''
# ---
# name: TestExperimentQueryRunner.test_query_runner_with_persons_on_events_mode_7_person_id_no_override_properties_on_events_filter_earlierevent
  '''
  
  SELECT DISTINCT person_id
  FROM events
  WHERE team_id = 99999
    AND distinct_id = 'person_id_1_distinct_id_2'
  '''
# ---
# name: TestExperimentQueryRunner.test_query_runner_with_persons_on_events_mode_7_person_id_no_override_properties_on_events_filter_earlierevent.1
  '''
  SELECT metrics_per_user.variant AS variant,
         count(metrics_per_user.entity_id) AS num_users,
         sum(metrics_per_user.value) AS total_sum,
         sum(power(metrics_per_user.value, 2)) AS total_sum_of_squares
  FROM
    (SELECT exposure_data.variant AS variant,
            exposure_data.entity_id AS entity_id,
            coalesce(argMax(events_after_exposure.value, events_after_exposure.timestamp), 0) AS value
     FROM
       (SELECT events.person_id AS entity_id,
               replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
               min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time
        FROM events
        WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('2020-01-01 00:00:00.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('2020-01-31 00:00:00.000000', 6, 'UTC')), ifNull(notILike(toString(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.person_properties, 'email'), ''), 'null'), '^"|"$', '')), '%@earlierevent.com%'), 1))
        GROUP BY variant,
                 entity_id) AS exposure_data
     LEFT JOIN
       (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
               events.person_id AS entity_id,
               exposure_data.variant AS variant,
               events.event AS event,
               1 AS value
        FROM events
        INNER JOIN
          (SELECT events.person_id AS entity_id,
                  replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
                  min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time
           FROM events
           WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('2020-01-01 00:00:00.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('2020-01-31 00:00:00.000000', 6, 'UTC')), ifNull(notILike(toString(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.person_properties, 'email'), ''), 'null'), '^"|"$', '')), '%@earlierevent.com%'), 1))
           GROUP BY variant,
                    entity_id) AS exposure_data ON equals(events.person_id, exposure_data.entity_id)
        WHERE and(equals(events.team_id, 99999), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('2020-01-01 00:00:00.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('2020-01-31 00:00:00.000000', 6, 'UTC')), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), exposure_data.first_exposure_time), equals(events.event, 'purchase'), ifNull(notILike(toString(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.person_properties, 'email'), ''), 'null'), '^"|"$', '')), '%@earlierevent.com%'), 1))) AS events_after_exposure ON and(equals(toString(exposure_data.entity_id), toString(events_after_exposure.entity_id)), equals(exposure_data.variant, events_after_exposure.variant))
     GROUP BY exposure_data.variant,
              exposure_data.entity_id) AS metrics_per_user
  GROUP BY metrics_per_user.variant
  LIMIT 100 SETTINGS readonly=2,
                     max_execution_time=60,
                     allow_experimental_object_type=1,
                     format_csv_allow_double_quotes=0,
                     max_ast_elements=4000000,
                     max_expanded_ast_elements=4000000,
                     max_bytes_before_external_group_by=0
  '''
# ---
# name: TestExperimentQueryRunner.test_query_runner_with_persons_on_events_mode_8_person_id_no_override_properties_on_events_filter_laterevent
  '''
  
  SELECT DISTINCT person_id
  FROM events
  WHERE team_id = 99999
    AND distinct_id = 'person_id_1_distinct_id_2'
  '''
# ---
# name: TestExperimentQueryRunner.test_query_runner_with_persons_on_events_mode_8_person_id_no_override_properties_on_events_filter_laterevent.1
  '''
  SELECT metrics_per_user.variant AS variant,
         count(metrics_per_user.entity_id) AS num_users,
         sum(metrics_per_user.value) AS total_sum,
         sum(power(metrics_per_user.value, 2)) AS total_sum_of_squares
  FROM
    (SELECT exposure_data.variant AS variant,
            exposure_data.entity_id AS entity_id,
            coalesce(argMax(events_after_exposure.value, events_after_exposure.timestamp), 0) AS value
     FROM
       (SELECT events.person_id AS entity_id,
               replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
               min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time
        FROM events
        WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('2020-01-01 00:00:00.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('2020-01-31 00:00:00.000000', 6, 'UTC')), ifNull(notILike(toString(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.person_properties, 'email'), ''), 'null'), '^"|"$', '')), '%@laterevent.com%'), 1))
        GROUP BY variant,
                 entity_id) AS exposure_data
     LEFT JOIN
       (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
               events.person_id AS entity_id,
               exposure_data.variant AS variant,
               events.event AS event,
               1 AS value
        FROM events
        INNER JOIN
          (SELECT events.person_id AS entity_id,
                  replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', '') AS variant,
                  min(toTimeZone(events.timestamp, 'UTC')) AS first_exposure_time
           FROM events
           WHERE and(equals(events.team_id, 99999), and(equals(events.event, '$feature_flag_called'), ifNull(equals(replaceAll(JSONExtractRaw(events.properties, '$feature_flag'), '"', ''), 'test-experiment'), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature_flag_response'), '"', ''), ['control', 'test']), 0), ifNull(in(replaceAll(JSONExtractRaw(events.properties, '$feature/test-experiment'), '"', ''), ['control', 'test']), 0)), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('2020-01-01 00:00:00.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('2020-01-31 00:00:00.000000', 6, 'UTC')), ifNull(notILike(toString(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.person_properties, 'email'), ''), 'null'), '^"|"$', '')), '%@laterevent.com%'), 1))
           GROUP BY variant,
                    entity_id) AS exposure_data ON equals(events.person_id, exposure_data.entity_id)
        WHERE and(equals(events.team_id, 99999), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('2020-01-01 00:00:00.000000', 6, 'UTC')), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('2020-01-31 00:00:00.000000', 6, 'UTC')), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), exposure_data.first_exposure_time), equals(events.event, 'purchase'), ifNull(notILike(toString(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.person_properties, 'email'), ''), 'null'), '^"|"$', '')), '%@laterevent.com%'), 1))) AS events_after_exposure ON and(equals(toString(exposure_data.entity_id), toString(events_after_exposure.entity_id)), equals(exposure_data.variant, events_after_exposure.variant))
     GROUP BY exposure_data.variant,
              exposure_data.entity_id) AS metrics_per_user
  GROUP BY metrics_per_user.variant
  LIMIT 100 SETTINGS readonly=2,
                     max_execution_time=60,
                     allow_experimental_object_type=1,
                     format_csv_allow_double_quotes=0,
                     max_ast_elements=4000000,
                     max_expanded_ast_elements=4000000,
                     max_bytes_before_external_group_by=0
  '''
# ---
