# serializer version: 1
# name: TestErrorTrackingQueryRunner.test_column_names
  '''
  SELECT if(not(empty(events__exception_issue_override.issue_id)), events__exception_issue_override.issue_id, accurateCastOrNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$exception_issue_id'), ''), 'null'), '^"|"$', ''), 'UUID')) AS id,
         count(DISTINCT events.uuid) AS occurrences,
         count(DISTINCT nullIf(events.`$session_id`, '')) AS sessions,
         count(DISTINCT events.distinct_id) AS users,
         max(toTimeZone(events.timestamp, 'UTC')) AS last_seen,
         min(toTimeZone(events.timestamp, 'UTC')) AS first_seen,
         sumForEach(arrayMap(bin -> if(and(greater(toTimeZone(events.timestamp, 'UTC'), bin), less(dateDiff('seconds', bin, toTimeZone(events.timestamp, 'UTC')), divide(dateDiff('seconds', parseDateTime64BestEffort('2025-03-25T18:06:18.466609', 6, 'UTC'), parseDateTime64BestEffort('2025-03-26T18:06:18.466619', 6, 'UTC')), 10))), 1, 0), arrayMap(i -> dateAdd(parseDateTime64BestEffort('2025-03-25T18:06:18.466609', 6, 'UTC'), toIntervalSecond(multiply(i, divide(dateDiff('seconds', parseDateTime64BestEffort('2025-03-25T18:06:18.466609', 6, 'UTC'), parseDateTime64BestEffort('2025-03-26T18:06:18.466619', 6, 'UTC')), 10)))), range(0, 10)))) AS volumeDay,
         sumForEach(arrayMap(bin -> if(and(greater(toTimeZone(events.timestamp, 'UTC'), bin), less(dateDiff('seconds', bin, toTimeZone(events.timestamp, 'UTC')), divide(dateDiff('seconds', parseDateTime64BestEffortOrNull(NULL, 6, 'UTC'), parseDateTime64BestEffortOrNull(NULL, 6, 'UTC')), 10))), 1, 0), arrayMap(i -> dateAdd(parseDateTime64BestEffortOrNull(NULL, 6, 'UTC'), toIntervalSecond(multiply(i, divide(dateDiff('seconds', parseDateTime64BestEffortOrNull(NULL, 6, 'UTC'), parseDateTime64BestEffortOrNull(NULL, 6, 'UTC')), 10)))), range(0, 10)))) AS volumeRange
  FROM events
  LEFT OUTER JOIN
    (SELECT argMax(error_tracking_issue_fingerprint_overrides.issue_id, error_tracking_issue_fingerprint_overrides.version) AS issue_id,
            error_tracking_issue_fingerprint_overrides.fingerprint AS fingerprint
     FROM error_tracking_issue_fingerprint_overrides
     WHERE equals(error_tracking_issue_fingerprint_overrides.team_id, 99999)
     GROUP BY error_tracking_issue_fingerprint_overrides.fingerprint
     HAVING ifNull(equals(argMax(error_tracking_issue_fingerprint_overrides.is_deleted, error_tracking_issue_fingerprint_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__exception_issue_override ON equals(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$exception_fingerprint'), ''), 'null'), '^"|"$', ''), events__exception_issue_override.fingerprint)
  WHERE and(equals(events.team_id, 99999), equals(events.event, '$exception'), isNotNull(if(not(empty(events__exception_issue_override.issue_id)), events__exception_issue_override.issue_id, accurateCastOrNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$exception_issue_id'), ''), 'null'), '^"|"$', ''), 'UUID'))), 1)
  GROUP BY if(not(empty(events__exception_issue_override.issue_id)), events__exception_issue_override.issue_id, accurateCastOrNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$exception_issue_id'), ''), 'null'), '^"|"$', ''), 'UUID'))
  LIMIT 101
  OFFSET 0 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1,
                    format_csv_allow_double_quotes=0,
                    max_ast_elements=4000000,
                    max_expanded_ast_elements=4000000,
                    max_bytes_before_external_group_by=0
  '''
# ---
# name: TestErrorTrackingQueryRunner.test_column_names.1
  '''
  SELECT if(not(empty(events__exception_issue_override.issue_id)), events__exception_issue_override.issue_id, accurateCastOrNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$exception_issue_id'), ''), 'null'), '^"|"$', ''), 'UUID')) AS id,
         count(DISTINCT events.uuid) AS occurrences,
         count(DISTINCT nullIf(events.`$session_id`, '')) AS sessions,
         count(DISTINCT events.distinct_id) AS users,
         max(toTimeZone(events.timestamp, 'UTC')) AS last_seen,
         min(toTimeZone(events.timestamp, 'UTC')) AS first_seen,
         sumForEach(arrayMap(bin -> if(and(greater(toTimeZone(events.timestamp, 'UTC'), bin), less(dateDiff('seconds', bin, toTimeZone(events.timestamp, 'UTC')), divide(dateDiff('seconds', parseDateTime64BestEffort('2025-03-25T18:06:18.574482', 6, 'UTC'), parseDateTime64BestEffort('2025-03-26T18:06:18.574491', 6, 'UTC')), 10))), 1, 0), arrayMap(i -> dateAdd(parseDateTime64BestEffort('2025-03-25T18:06:18.574482', 6, 'UTC'), toIntervalSecond(multiply(i, divide(dateDiff('seconds', parseDateTime64BestEffort('2025-03-25T18:06:18.574482', 6, 'UTC'), parseDateTime64BestEffort('2025-03-26T18:06:18.574491', 6, 'UTC')), 10)))), range(0, 10)))) AS volumeDay,
         sumForEach(arrayMap(bin -> if(and(greater(toTimeZone(events.timestamp, 'UTC'), bin), less(dateDiff('seconds', bin, toTimeZone(events.timestamp, 'UTC')), divide(dateDiff('seconds', parseDateTime64BestEffortOrNull(NULL, 6, 'UTC'), parseDateTime64BestEffortOrNull(NULL, 6, 'UTC')), 10))), 1, 0), arrayMap(i -> dateAdd(parseDateTime64BestEffortOrNull(NULL, 6, 'UTC'), toIntervalSecond(multiply(i, divide(dateDiff('seconds', parseDateTime64BestEffortOrNull(NULL, 6, 'UTC'), parseDateTime64BestEffortOrNull(NULL, 6, 'UTC')), 10)))), range(0, 10)))) AS volumeRange,
         argMin(events.properties, toTimeZone(events.timestamp, 'UTC')) AS earliest
  FROM events
  LEFT OUTER JOIN
    (SELECT argMax(error_tracking_issue_fingerprint_overrides.issue_id, error_tracking_issue_fingerprint_overrides.version) AS issue_id,
            error_tracking_issue_fingerprint_overrides.fingerprint AS fingerprint
     FROM error_tracking_issue_fingerprint_overrides
     WHERE equals(error_tracking_issue_fingerprint_overrides.team_id, 99999)
     GROUP BY error_tracking_issue_fingerprint_overrides.fingerprint
     HAVING ifNull(equals(argMax(error_tracking_issue_fingerprint_overrides.is_deleted, error_tracking_issue_fingerprint_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__exception_issue_override ON equals(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$exception_fingerprint'), ''), 'null'), '^"|"$', ''), events__exception_issue_override.fingerprint)
  WHERE and(equals(events.team_id, 99999), equals(events.event, '$exception'), isNotNull(if(not(empty(events__exception_issue_override.issue_id)), events__exception_issue_override.issue_id, accurateCastOrNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$exception_issue_id'), ''), 'null'), '^"|"$', ''), 'UUID'))), 1, ifNull(equals(if(not(empty(events__exception_issue_override.issue_id)), events__exception_issue_override.issue_id, accurateCastOrNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$exception_issue_id'), ''), 'null'), '^"|"$', ''), 'UUID')), '01936e7f-d7ff-7314-b2d4-7627981e34f0'), 0))
  GROUP BY if(not(empty(events__exception_issue_override.issue_id)), events__exception_issue_override.issue_id, accurateCastOrNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$exception_issue_id'), ''), 'null'), '^"|"$', ''), 'UUID'))
  LIMIT 101
  OFFSET 0 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1,
                    format_csv_allow_double_quotes=0,
                    max_ast_elements=4000000,
                    max_expanded_ast_elements=4000000,
                    max_bytes_before_external_group_by=0
  '''
# ---
# name: TestErrorTrackingQueryRunner.test_correctly_counts_session_ids
  '''
  SELECT if(not(empty(events__exception_issue_override.issue_id)), events__exception_issue_override.issue_id, accurateCastOrNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$exception_issue_id'), ''), 'null'), '^"|"$', ''), 'UUID')) AS id,
         count(DISTINCT events.uuid) AS occurrences,
         count(DISTINCT nullIf(events.`$session_id`, '')) AS sessions,
         count(DISTINCT events.distinct_id) AS users,
         max(toTimeZone(events.timestamp, 'UTC')) AS last_seen,
         min(toTimeZone(events.timestamp, 'UTC')) AS first_seen,
         sumForEach(arrayMap(bin -> if(and(greater(toTimeZone(events.timestamp, 'UTC'), bin), less(dateDiff('seconds', bin, toTimeZone(events.timestamp, 'UTC')), divide(dateDiff('seconds', parseDateTime64BestEffort('2025-03-25T18:06:19.263939', 6, 'UTC'), parseDateTime64BestEffort('2025-03-26T18:06:19.263954', 6, 'UTC')), 10))), 1, 0), arrayMap(i -> dateAdd(parseDateTime64BestEffort('2025-03-25T18:06:19.263939', 6, 'UTC'), toIntervalSecond(multiply(i, divide(dateDiff('seconds', parseDateTime64BestEffort('2025-03-25T18:06:19.263939', 6, 'UTC'), parseDateTime64BestEffort('2025-03-26T18:06:19.263954', 6, 'UTC')), 10)))), range(0, 10)))) AS volumeDay,
         sumForEach(arrayMap(bin -> if(and(greater(toTimeZone(events.timestamp, 'UTC'), bin), less(dateDiff('seconds', bin, toTimeZone(events.timestamp, 'UTC')), divide(dateDiff('seconds', parseDateTime64BestEffortOrNull(NULL, 6, 'UTC'), parseDateTime64BestEffortOrNull(NULL, 6, 'UTC')), 10))), 1, 0), arrayMap(i -> dateAdd(parseDateTime64BestEffortOrNull(NULL, 6, 'UTC'), toIntervalSecond(multiply(i, divide(dateDiff('seconds', parseDateTime64BestEffortOrNull(NULL, 6, 'UTC'), parseDateTime64BestEffortOrNull(NULL, 6, 'UTC')), 10)))), range(0, 10)))) AS volumeRange,
         argMin(events.properties, toTimeZone(events.timestamp, 'UTC')) AS earliest
  FROM events
  LEFT OUTER JOIN
    (SELECT argMax(error_tracking_issue_fingerprint_overrides.issue_id, error_tracking_issue_fingerprint_overrides.version) AS issue_id,
            error_tracking_issue_fingerprint_overrides.fingerprint AS fingerprint
     FROM error_tracking_issue_fingerprint_overrides
     WHERE equals(error_tracking_issue_fingerprint_overrides.team_id, 99999)
     GROUP BY error_tracking_issue_fingerprint_overrides.fingerprint
     HAVING ifNull(equals(argMax(error_tracking_issue_fingerprint_overrides.is_deleted, error_tracking_issue_fingerprint_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__exception_issue_override ON equals(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$exception_fingerprint'), ''), 'null'), '^"|"$', ''), events__exception_issue_override.fingerprint)
  WHERE and(equals(events.team_id, 99999), equals(events.event, '$exception'), isNotNull(if(not(empty(events__exception_issue_override.issue_id)), events__exception_issue_override.issue_id, accurateCastOrNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$exception_issue_id'), ''), 'null'), '^"|"$', ''), 'UUID'))), 1, ifNull(equals(if(not(empty(events__exception_issue_override.issue_id)), events__exception_issue_override.issue_id, accurateCastOrNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$exception_issue_id'), ''), 'null'), '^"|"$', ''), 'UUID')), '01936e7f-d7ff-7314-b2d4-7627981e34f0'), 0))
  GROUP BY if(not(empty(events__exception_issue_override.issue_id)), events__exception_issue_override.issue_id, accurateCastOrNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$exception_issue_id'), ''), 'null'), '^"|"$', ''), 'UUID'))
  LIMIT 101
  OFFSET 0 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1,
                    format_csv_allow_double_quotes=0,
                    max_ast_elements=4000000,
                    max_expanded_ast_elements=4000000,
                    max_bytes_before_external_group_by=0
  '''
# ---
# name: TestErrorTrackingQueryRunner.test_hogql_filters
  '''
  SELECT if(not(empty(events__exception_issue_override.issue_id)), events__exception_issue_override.issue_id, accurateCastOrNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$exception_issue_id'), ''), 'null'), '^"|"$', ''), 'UUID')) AS id,
         count(DISTINCT events.uuid) AS occurrences,
         count(DISTINCT nullIf(events.`$session_id`, '')) AS sessions,
         count(DISTINCT events.distinct_id) AS users,
         max(toTimeZone(events.timestamp, 'UTC')) AS last_seen,
         min(toTimeZone(events.timestamp, 'UTC')) AS first_seen,
         sumForEach(arrayMap(bin -> if(and(greater(toTimeZone(events.timestamp, 'UTC'), bin), less(dateDiff('seconds', bin, toTimeZone(events.timestamp, 'UTC')), divide(dateDiff('seconds', parseDateTime64BestEffort('2025-03-25T18:06:20.341619', 6, 'UTC'), parseDateTime64BestEffort('2025-03-26T18:06:20.341633', 6, 'UTC')), 10))), 1, 0), arrayMap(i -> dateAdd(parseDateTime64BestEffort('2025-03-25T18:06:20.341619', 6, 'UTC'), toIntervalSecond(multiply(i, divide(dateDiff('seconds', parseDateTime64BestEffort('2025-03-25T18:06:20.341619', 6, 'UTC'), parseDateTime64BestEffort('2025-03-26T18:06:20.341633', 6, 'UTC')), 10)))), range(0, 10)))) AS volumeDay,
         sumForEach(arrayMap(bin -> if(and(greater(toTimeZone(events.timestamp, 'UTC'), bin), less(dateDiff('seconds', bin, toTimeZone(events.timestamp, 'UTC')), divide(dateDiff('seconds', parseDateTime64BestEffortOrNull(NULL, 6, 'UTC'), parseDateTime64BestEffortOrNull(NULL, 6, 'UTC')), 10))), 1, 0), arrayMap(i -> dateAdd(parseDateTime64BestEffortOrNull(NULL, 6, 'UTC'), toIntervalSecond(multiply(i, divide(dateDiff('seconds', parseDateTime64BestEffortOrNull(NULL, 6, 'UTC'), parseDateTime64BestEffortOrNull(NULL, 6, 'UTC')), 10)))), range(0, 10)))) AS volumeRange
  FROM events
  LEFT OUTER JOIN
    (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
            person_distinct_id_overrides.distinct_id AS distinct_id
     FROM person_distinct_id_overrides
     WHERE equals(person_distinct_id_overrides.team_id, 99999)
     GROUP BY person_distinct_id_overrides.distinct_id
     HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
  LEFT OUTER JOIN
    (SELECT argMax(error_tracking_issue_fingerprint_overrides.issue_id, error_tracking_issue_fingerprint_overrides.version) AS issue_id,
            error_tracking_issue_fingerprint_overrides.fingerprint AS fingerprint
     FROM error_tracking_issue_fingerprint_overrides
     WHERE equals(error_tracking_issue_fingerprint_overrides.team_id, 99999)
     GROUP BY error_tracking_issue_fingerprint_overrides.fingerprint
     HAVING ifNull(equals(argMax(error_tracking_issue_fingerprint_overrides.is_deleted, error_tracking_issue_fingerprint_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__exception_issue_override ON equals(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$exception_fingerprint'), ''), 'null'), '^"|"$', ''), events__exception_issue_override.fingerprint)
  LEFT JOIN
    (SELECT person.id AS id,
            replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(person.properties, 'email'), ''), 'null'), '^"|"$', '') AS properties___email
     FROM person
     WHERE and(equals(person.team_id, 99999), ifNull(in(tuple(person.id, person.version),
                                                          (SELECT person.id AS id, max(person.version) AS version
                                                           FROM person
                                                           WHERE equals(person.team_id, 99999)
                                                           GROUP BY person.id
                                                           HAVING and(ifNull(equals(argMax(person.is_deleted, person.version), 0), 0), ifNull(less(argMax(toTimeZone(person.created_at, 'UTC'), person.version), plus(now64(6, 'UTC'), toIntervalDay(1))), 0)))), 0)) SETTINGS optimize_aggregation_in_order=1) AS events__person ON equals(if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id), events__person.id)
  WHERE and(equals(events.team_id, 99999), equals(events.event, '$exception'), isNotNull(if(not(empty(events__exception_issue_override.issue_id)), events__exception_issue_override.issue_id, accurateCastOrNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$exception_issue_id'), ''), 'null'), '^"|"$', ''), 'UUID'))), ifNull(equals(events__person.properties___email, 'email@posthog.com'), 0))
  GROUP BY if(not(empty(events__exception_issue_override.issue_id)), events__exception_issue_override.issue_id, accurateCastOrNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$exception_issue_id'), ''), 'null'), '^"|"$', ''), 'UUID'))
  LIMIT 101
  OFFSET 0 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1,
                    format_csv_allow_double_quotes=0,
                    max_ast_elements=4000000,
                    max_expanded_ast_elements=4000000,
                    max_bytes_before_external_group_by=0
  '''
# ---
# name: TestErrorTrackingQueryRunner.test_issue_grouping
  '''
  SELECT if(not(empty(events__exception_issue_override.issue_id)), events__exception_issue_override.issue_id, accurateCastOrNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$exception_issue_id'), ''), 'null'), '^"|"$', ''), 'UUID')) AS id,
         count(DISTINCT events.uuid) AS occurrences,
         count(DISTINCT nullIf(events.`$session_id`, '')) AS sessions,
         count(DISTINCT events.distinct_id) AS users,
         max(toTimeZone(events.timestamp, 'UTC')) AS last_seen,
         min(toTimeZone(events.timestamp, 'UTC')) AS first_seen,
         sumForEach(arrayMap(bin -> if(and(greater(toTimeZone(events.timestamp, 'UTC'), bin), less(dateDiff('seconds', bin, toTimeZone(events.timestamp, 'UTC')), divide(dateDiff('seconds', parseDateTime64BestEffort('2025-03-25T18:06:20.947286', 6, 'UTC'), parseDateTime64BestEffort('2025-03-26T18:06:20.947295', 6, 'UTC')), 10))), 1, 0), arrayMap(i -> dateAdd(parseDateTime64BestEffort('2025-03-25T18:06:20.947286', 6, 'UTC'), toIntervalSecond(multiply(i, divide(dateDiff('seconds', parseDateTime64BestEffort('2025-03-25T18:06:20.947286', 6, 'UTC'), parseDateTime64BestEffort('2025-03-26T18:06:20.947295', 6, 'UTC')), 10)))), range(0, 10)))) AS volumeDay,
         sumForEach(arrayMap(bin -> if(and(greater(toTimeZone(events.timestamp, 'UTC'), bin), less(dateDiff('seconds', bin, toTimeZone(events.timestamp, 'UTC')), divide(dateDiff('seconds', parseDateTime64BestEffortOrNull(NULL, 6, 'UTC'), parseDateTime64BestEffortOrNull(NULL, 6, 'UTC')), 10))), 1, 0), arrayMap(i -> dateAdd(parseDateTime64BestEffortOrNull(NULL, 6, 'UTC'), toIntervalSecond(multiply(i, divide(dateDiff('seconds', parseDateTime64BestEffortOrNull(NULL, 6, 'UTC'), parseDateTime64BestEffortOrNull(NULL, 6, 'UTC')), 10)))), range(0, 10)))) AS volumeRange,
         argMin(events.properties, toTimeZone(events.timestamp, 'UTC')) AS earliest
  FROM events
  LEFT OUTER JOIN
    (SELECT argMax(error_tracking_issue_fingerprint_overrides.issue_id, error_tracking_issue_fingerprint_overrides.version) AS issue_id,
            error_tracking_issue_fingerprint_overrides.fingerprint AS fingerprint
     FROM error_tracking_issue_fingerprint_overrides
     WHERE equals(error_tracking_issue_fingerprint_overrides.team_id, 99999)
     GROUP BY error_tracking_issue_fingerprint_overrides.fingerprint
     HAVING ifNull(equals(argMax(error_tracking_issue_fingerprint_overrides.is_deleted, error_tracking_issue_fingerprint_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__exception_issue_override ON equals(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$exception_fingerprint'), ''), 'null'), '^"|"$', ''), events__exception_issue_override.fingerprint)
  WHERE and(equals(events.team_id, 99999), equals(events.event, '$exception'), isNotNull(if(not(empty(events__exception_issue_override.issue_id)), events__exception_issue_override.issue_id, accurateCastOrNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$exception_issue_id'), ''), 'null'), '^"|"$', ''), 'UUID'))), 1, ifNull(equals(if(not(empty(events__exception_issue_override.issue_id)), events__exception_issue_override.issue_id, accurateCastOrNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$exception_issue_id'), ''), 'null'), '^"|"$', ''), 'UUID')), '01936e7f-d7ff-7314-b2d4-7627981e34f0'), 0))
  GROUP BY if(not(empty(events__exception_issue_override.issue_id)), events__exception_issue_override.issue_id, accurateCastOrNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$exception_issue_id'), ''), 'null'), '^"|"$', ''), 'UUID'))
  LIMIT 101
  OFFSET 0 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1,
                    format_csv_allow_double_quotes=0,
                    max_ast_elements=4000000,
                    max_expanded_ast_elements=4000000,
                    max_bytes_before_external_group_by=0
  '''
# ---
# name: TestErrorTrackingQueryRunner.test_ordering
  '''
  SELECT if(not(empty(events__exception_issue_override.issue_id)), events__exception_issue_override.issue_id, accurateCastOrNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$exception_issue_id'), ''), 'null'), '^"|"$', ''), 'UUID')) AS id,
         count(DISTINCT events.uuid) AS occurrences,
         count(DISTINCT nullIf(events.`$session_id`, '')) AS sessions,
         count(DISTINCT events.distinct_id) AS users,
         max(toTimeZone(events.timestamp, 'UTC')) AS last_seen,
         min(toTimeZone(events.timestamp, 'UTC')) AS first_seen,
         sumForEach(arrayMap(bin -> if(and(greater(toTimeZone(events.timestamp, 'UTC'), bin), less(dateDiff('seconds', bin, toTimeZone(events.timestamp, 'UTC')), divide(dateDiff('seconds', parseDateTime64BestEffort('2025-03-25T18:06:21.876474', 6, 'UTC'), parseDateTime64BestEffort('2025-03-26T18:06:21.876488', 6, 'UTC')), 10))), 1, 0), arrayMap(i -> dateAdd(parseDateTime64BestEffort('2025-03-25T18:06:21.876474', 6, 'UTC'), toIntervalSecond(multiply(i, divide(dateDiff('seconds', parseDateTime64BestEffort('2025-03-25T18:06:21.876474', 6, 'UTC'), parseDateTime64BestEffort('2025-03-26T18:06:21.876488', 6, 'UTC')), 10)))), range(0, 10)))) AS volumeDay,
         sumForEach(arrayMap(bin -> if(and(greater(toTimeZone(events.timestamp, 'UTC'), bin), less(dateDiff('seconds', bin, toTimeZone(events.timestamp, 'UTC')), divide(dateDiff('seconds', parseDateTime64BestEffortOrNull(NULL, 6, 'UTC'), parseDateTime64BestEffortOrNull(NULL, 6, 'UTC')), 10))), 1, 0), arrayMap(i -> dateAdd(parseDateTime64BestEffortOrNull(NULL, 6, 'UTC'), toIntervalSecond(multiply(i, divide(dateDiff('seconds', parseDateTime64BestEffortOrNull(NULL, 6, 'UTC'), parseDateTime64BestEffortOrNull(NULL, 6, 'UTC')), 10)))), range(0, 10)))) AS volumeRange
  FROM events
  LEFT OUTER JOIN
    (SELECT argMax(error_tracking_issue_fingerprint_overrides.issue_id, error_tracking_issue_fingerprint_overrides.version) AS issue_id,
            error_tracking_issue_fingerprint_overrides.fingerprint AS fingerprint
     FROM error_tracking_issue_fingerprint_overrides
     WHERE equals(error_tracking_issue_fingerprint_overrides.team_id, 99999)
     GROUP BY error_tracking_issue_fingerprint_overrides.fingerprint
     HAVING ifNull(equals(argMax(error_tracking_issue_fingerprint_overrides.is_deleted, error_tracking_issue_fingerprint_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__exception_issue_override ON equals(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$exception_fingerprint'), ''), 'null'), '^"|"$', ''), events__exception_issue_override.fingerprint)
  WHERE and(equals(events.team_id, 99999), equals(events.event, '$exception'), isNotNull(if(not(empty(events__exception_issue_override.issue_id)), events__exception_issue_override.issue_id, accurateCastOrNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$exception_issue_id'), ''), 'null'), '^"|"$', ''), 'UUID'))), 1)
  GROUP BY if(not(empty(events__exception_issue_override.issue_id)), events__exception_issue_override.issue_id, accurateCastOrNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$exception_issue_id'), ''), 'null'), '^"|"$', ''), 'UUID'))
  ORDER BY last_seen DESC
  LIMIT 101
  OFFSET 0 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1,
                    format_csv_allow_double_quotes=0,
                    max_ast_elements=4000000,
                    max_expanded_ast_elements=4000000,
                    max_bytes_before_external_group_by=0
  '''
# ---
# name: TestErrorTrackingQueryRunner.test_ordering.1
  '''
  SELECT if(not(empty(events__exception_issue_override.issue_id)), events__exception_issue_override.issue_id, accurateCastOrNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$exception_issue_id'), ''), 'null'), '^"|"$', ''), 'UUID')) AS id,
         count(DISTINCT events.uuid) AS occurrences,
         count(DISTINCT nullIf(events.`$session_id`, '')) AS sessions,
         count(DISTINCT events.distinct_id) AS users,
         max(toTimeZone(events.timestamp, 'UTC')) AS last_seen,
         min(toTimeZone(events.timestamp, 'UTC')) AS first_seen,
         sumForEach(arrayMap(bin -> if(and(greater(toTimeZone(events.timestamp, 'UTC'), bin), less(dateDiff('seconds', bin, toTimeZone(events.timestamp, 'UTC')), divide(dateDiff('seconds', parseDateTime64BestEffort('2025-03-25T18:06:21.976332', 6, 'UTC'), parseDateTime64BestEffort('2025-03-26T18:06:21.976342', 6, 'UTC')), 10))), 1, 0), arrayMap(i -> dateAdd(parseDateTime64BestEffort('2025-03-25T18:06:21.976332', 6, 'UTC'), toIntervalSecond(multiply(i, divide(dateDiff('seconds', parseDateTime64BestEffort('2025-03-25T18:06:21.976332', 6, 'UTC'), parseDateTime64BestEffort('2025-03-26T18:06:21.976342', 6, 'UTC')), 10)))), range(0, 10)))) AS volumeDay,
         sumForEach(arrayMap(bin -> if(and(greater(toTimeZone(events.timestamp, 'UTC'), bin), less(dateDiff('seconds', bin, toTimeZone(events.timestamp, 'UTC')), divide(dateDiff('seconds', parseDateTime64BestEffortOrNull(NULL, 6, 'UTC'), parseDateTime64BestEffortOrNull(NULL, 6, 'UTC')), 10))), 1, 0), arrayMap(i -> dateAdd(parseDateTime64BestEffortOrNull(NULL, 6, 'UTC'), toIntervalSecond(multiply(i, divide(dateDiff('seconds', parseDateTime64BestEffortOrNull(NULL, 6, 'UTC'), parseDateTime64BestEffortOrNull(NULL, 6, 'UTC')), 10)))), range(0, 10)))) AS volumeRange
  FROM events
  LEFT OUTER JOIN
    (SELECT argMax(error_tracking_issue_fingerprint_overrides.issue_id, error_tracking_issue_fingerprint_overrides.version) AS issue_id,
            error_tracking_issue_fingerprint_overrides.fingerprint AS fingerprint
     FROM error_tracking_issue_fingerprint_overrides
     WHERE equals(error_tracking_issue_fingerprint_overrides.team_id, 99999)
     GROUP BY error_tracking_issue_fingerprint_overrides.fingerprint
     HAVING ifNull(equals(argMax(error_tracking_issue_fingerprint_overrides.is_deleted, error_tracking_issue_fingerprint_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__exception_issue_override ON equals(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$exception_fingerprint'), ''), 'null'), '^"|"$', ''), events__exception_issue_override.fingerprint)
  WHERE and(equals(events.team_id, 99999), equals(events.event, '$exception'), isNotNull(if(not(empty(events__exception_issue_override.issue_id)), events__exception_issue_override.issue_id, accurateCastOrNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$exception_issue_id'), ''), 'null'), '^"|"$', ''), 'UUID'))), 1)
  GROUP BY if(not(empty(events__exception_issue_override.issue_id)), events__exception_issue_override.issue_id, accurateCastOrNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$exception_issue_id'), ''), 'null'), '^"|"$', ''), 'UUID'))
  ORDER BY first_seen ASC
  LIMIT 101
  OFFSET 0 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1,
                    format_csv_allow_double_quotes=0,
                    max_ast_elements=4000000,
                    max_expanded_ast_elements=4000000,
                    max_bytes_before_external_group_by=0
  '''
# ---
# name: TestErrorTrackingQueryRunner.test_search_query
  '''
  SELECT if(not(empty(events__exception_issue_override.issue_id)), events__exception_issue_override.issue_id, accurateCastOrNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$exception_issue_id'), ''), 'null'), '^"|"$', ''), 'UUID')) AS id,
         count(DISTINCT events.uuid) AS occurrences,
         count(DISTINCT nullIf(events.`$session_id`, '')) AS sessions,
         count(DISTINCT events.distinct_id) AS users,
         max(toTimeZone(events.timestamp, 'UTC')) AS last_seen,
         min(toTimeZone(events.timestamp, 'UTC')) AS first_seen,
         sumForEach(arrayMap(bin -> if(and(greater(toTimeZone(events.timestamp, 'UTC'), bin), less(dateDiff('seconds', bin, toTimeZone(events.timestamp, 'UTC')), divide(dateDiff('seconds', parseDateTime64BestEffort('2025-03-25T18:06:23.014722', 6, 'UTC'), parseDateTime64BestEffort('2025-03-26T18:06:23.014735', 6, 'UTC')), 10))), 1, 0), arrayMap(i -> dateAdd(parseDateTime64BestEffort('2025-03-25T18:06:23.014722', 6, 'UTC'), toIntervalSecond(multiply(i, divide(dateDiff('seconds', parseDateTime64BestEffort('2025-03-25T18:06:23.014722', 6, 'UTC'), parseDateTime64BestEffort('2025-03-26T18:06:23.014735', 6, 'UTC')), 10)))), range(0, 10)))) AS volumeDay,
         sumForEach(arrayMap(bin -> if(and(greater(toTimeZone(events.timestamp, 'UTC'), bin), less(dateDiff('seconds', bin, toTimeZone(events.timestamp, 'UTC')), divide(dateDiff('seconds', toDateTime('2022-01-10', 'UTC'), toDateTime('2022-01-11', 'UTC')), 10))), 1, 0), arrayMap(i -> dateAdd(toDateTime('2022-01-10', 'UTC'), toIntervalSecond(multiply(i, divide(dateDiff('seconds', toDateTime('2022-01-10', 'UTC'), toDateTime('2022-01-11', 'UTC')), 10)))), range(0, 10)))) AS volumeRange
  FROM events
  LEFT OUTER JOIN
    (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
            person_distinct_id_overrides.distinct_id AS distinct_id
     FROM person_distinct_id_overrides
     WHERE equals(person_distinct_id_overrides.team_id, 99999)
     GROUP BY person_distinct_id_overrides.distinct_id
     HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
  LEFT OUTER JOIN
    (SELECT argMax(error_tracking_issue_fingerprint_overrides.issue_id, error_tracking_issue_fingerprint_overrides.version) AS issue_id,
            error_tracking_issue_fingerprint_overrides.fingerprint AS fingerprint
     FROM error_tracking_issue_fingerprint_overrides
     WHERE equals(error_tracking_issue_fingerprint_overrides.team_id, 99999)
     GROUP BY error_tracking_issue_fingerprint_overrides.fingerprint
     HAVING ifNull(equals(argMax(error_tracking_issue_fingerprint_overrides.is_deleted, error_tracking_issue_fingerprint_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__exception_issue_override ON equals(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$exception_fingerprint'), ''), 'null'), '^"|"$', ''), events__exception_issue_override.fingerprint)
  LEFT JOIN
    (SELECT person.id AS id,
            replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(person.properties, 'email'), ''), 'null'), '^"|"$', '') AS properties___email
     FROM person
     WHERE and(equals(person.team_id, 99999), ifNull(in(tuple(person.id, person.version),
                                                          (SELECT person.id AS id, max(person.version) AS version
                                                           FROM person
                                                           WHERE equals(person.team_id, 99999)
                                                           GROUP BY person.id
                                                           HAVING and(ifNull(equals(argMax(person.is_deleted, person.version), 0), 0), ifNull(less(argMax(toTimeZone(person.created_at, 'UTC'), person.version), plus(now64(6, 'UTC'), toIntervalDay(1))), 0)))), 0)) SETTINGS optimize_aggregation_in_order=1) AS events__person ON equals(if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id), events__person.id)
  WHERE and(equals(events.team_id, 99999), equals(events.event, '$exception'), isNotNull(if(not(empty(events__exception_issue_override.issue_id)), events__exception_issue_override.issue_id, accurateCastOrNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$exception_issue_id'), ''), 'null'), '^"|"$', ''), 'UUID'))), and(less(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp', 6, 'UTC')), greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp', 6, 'UTC')), ifNull(notILike(toString(events__person.properties___email), '%@posthog.com%'), 1)), or(ifNull(greater(position(lower(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$exception_types'), ''), 'null'), '^"|"$', '')), lower('databasenot')), 0), 0), ifNull(greater(position(lower(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$exception_values'), ''), 'null'), '^"|"$', '')), lower('databasenot')), 0), 0), ifNull(greater(position(lower(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$exception_sources'), ''), 'null'), '^"|"$', '')), lower('databasenot')), 0), 0), ifNull(greater(position(lower(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$exception_functions'), ''), 'null'), '^"|"$', '')), lower('databasenot')), 0), 0)))
  GROUP BY if(not(empty(events__exception_issue_override.issue_id)), events__exception_issue_override.issue_id, accurateCastOrNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$exception_issue_id'), ''), 'null'), '^"|"$', ''), 'UUID'))
  LIMIT 101
  OFFSET 0 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1,
                    format_csv_allow_double_quotes=0,
                    max_ast_elements=4000000,
                    max_expanded_ast_elements=4000000,
                    max_bytes_before_external_group_by=0
  '''
# ---
# name: TestErrorTrackingQueryRunner.test_search_query_with_multiple_search_items
  '''
  SELECT if(not(empty(events__exception_issue_override.issue_id)), events__exception_issue_override.issue_id, accurateCastOrNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$exception_issue_id'), ''), 'null'), '^"|"$', ''), 'UUID')) AS id,
         count(DISTINCT events.uuid) AS occurrences,
         count(DISTINCT nullIf(events.`$session_id`, '')) AS sessions,
         count(DISTINCT events.distinct_id) AS users,
         max(toTimeZone(events.timestamp, 'UTC')) AS last_seen,
         min(toTimeZone(events.timestamp, 'UTC')) AS first_seen,
         sumForEach(arrayMap(bin -> if(and(greater(toTimeZone(events.timestamp, 'UTC'), bin), less(dateDiff('seconds', bin, toTimeZone(events.timestamp, 'UTC')), divide(dateDiff('seconds', parseDateTime64BestEffort('2025-03-25T18:06:23.825757', 6, 'UTC'), parseDateTime64BestEffort('2025-03-26T18:06:23.825769', 6, 'UTC')), 10))), 1, 0), arrayMap(i -> dateAdd(parseDateTime64BestEffort('2025-03-25T18:06:23.825757', 6, 'UTC'), toIntervalSecond(multiply(i, divide(dateDiff('seconds', parseDateTime64BestEffort('2025-03-25T18:06:23.825757', 6, 'UTC'), parseDateTime64BestEffort('2025-03-26T18:06:23.825769', 6, 'UTC')), 10)))), range(0, 10)))) AS volumeDay,
         sumForEach(arrayMap(bin -> if(and(greater(toTimeZone(events.timestamp, 'UTC'), bin), less(dateDiff('seconds', bin, toTimeZone(events.timestamp, 'UTC')), divide(dateDiff('seconds', parseDateTime64BestEffortOrNull(NULL, 6, 'UTC'), parseDateTime64BestEffortOrNull(NULL, 6, 'UTC')), 10))), 1, 0), arrayMap(i -> dateAdd(parseDateTime64BestEffortOrNull(NULL, 6, 'UTC'), toIntervalSecond(multiply(i, divide(dateDiff('seconds', parseDateTime64BestEffortOrNull(NULL, 6, 'UTC'), parseDateTime64BestEffortOrNull(NULL, 6, 'UTC')), 10)))), range(0, 10)))) AS volumeRange
  FROM events
  LEFT OUTER JOIN
    (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
            person_distinct_id_overrides.distinct_id AS distinct_id
     FROM person_distinct_id_overrides
     WHERE equals(person_distinct_id_overrides.team_id, 99999)
     GROUP BY person_distinct_id_overrides.distinct_id
     HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
  LEFT OUTER JOIN
    (SELECT argMax(error_tracking_issue_fingerprint_overrides.issue_id, error_tracking_issue_fingerprint_overrides.version) AS issue_id,
            error_tracking_issue_fingerprint_overrides.fingerprint AS fingerprint
     FROM error_tracking_issue_fingerprint_overrides
     WHERE equals(error_tracking_issue_fingerprint_overrides.team_id, 99999)
     GROUP BY error_tracking_issue_fingerprint_overrides.fingerprint
     HAVING ifNull(equals(argMax(error_tracking_issue_fingerprint_overrides.is_deleted, error_tracking_issue_fingerprint_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__exception_issue_override ON equals(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$exception_fingerprint'), ''), 'null'), '^"|"$', ''), events__exception_issue_override.fingerprint)
  LEFT JOIN
    (SELECT person.id AS id,
            replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(person.properties, 'email'), ''), 'null'), '^"|"$', '') AS properties___email
     FROM person
     WHERE and(equals(person.team_id, 99999), ifNull(in(tuple(person.id, person.version),
                                                          (SELECT person.id AS id, max(person.version) AS version
                                                           FROM person
                                                           WHERE equals(person.team_id, 99999)
                                                           GROUP BY person.id
                                                           HAVING and(ifNull(equals(argMax(person.is_deleted, person.version), 0), 0), ifNull(less(argMax(toTimeZone(person.created_at, 'UTC'), person.version), plus(now64(6, 'UTC'), toIntervalDay(1))), 0)))), 0)) SETTINGS optimize_aggregation_in_order=1) AS events__person ON equals(if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id), events__person.id)
  WHERE and(equals(events.team_id, 99999), equals(events.event, '$exception'), isNotNull(if(not(empty(events__exception_issue_override.issue_id)), events__exception_issue_override.issue_id, accurateCastOrNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$exception_issue_id'), ''), 'null'), '^"|"$', ''), 'UUID'))), ifNull(notILike(toString(events__person.properties___email), '%@posthog.com%'), 1), and(or(ifNull(greater(position(lower(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$exception_types'), ''), 'null'), '^"|"$', '')), lower('databasenotfoundX')), 0), 0), ifNull(greater(position(lower(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$exception_values'), ''), 'null'), '^"|"$', '')), lower('databasenotfoundX')), 0), 0), ifNull(greater(position(lower(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$exception_sources'), ''), 'null'), '^"|"$', '')), lower('databasenotfoundX')), 0), 0), ifNull(greater(position(lower(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$exception_functions'), ''), 'null'), '^"|"$', '')), lower('databasenotfoundX')), 0), 0)), or(ifNull(greater(position(lower(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$exception_types'), ''), 'null'), '^"|"$', '')), lower('clickhouse/client/execute.py')), 0), 0), ifNull(greater(position(lower(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$exception_values'), ''), 'null'), '^"|"$', '')), lower('clickhouse/client/execute.py')), 0), 0), ifNull(greater(position(lower(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$exception_sources'), ''), 'null'), '^"|"$', '')), lower('clickhouse/client/execute.py')), 0), 0), ifNull(greater(position(lower(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$exception_functions'), ''), 'null'), '^"|"$', '')), lower('clickhouse/client/execute.py')), 0), 0))))
  GROUP BY if(not(empty(events__exception_issue_override.issue_id)), events__exception_issue_override.issue_id, accurateCastOrNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$exception_issue_id'), ''), 'null'), '^"|"$', ''), 'UUID'))
  LIMIT 101
  OFFSET 0 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1,
                    format_csv_allow_double_quotes=0,
                    max_ast_elements=4000000,
                    max_expanded_ast_elements=4000000,
                    max_bytes_before_external_group_by=0
  '''
# ---
# name: TestErrorTrackingQueryRunner.test_status
  '''
  SELECT if(not(empty(events__exception_issue_override.issue_id)), events__exception_issue_override.issue_id, accurateCastOrNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$exception_issue_id'), ''), 'null'), '^"|"$', ''), 'UUID')) AS id,
         count(DISTINCT events.uuid) AS occurrences,
         count(DISTINCT nullIf(events.`$session_id`, '')) AS sessions,
         count(DISTINCT events.distinct_id) AS users,
         max(toTimeZone(events.timestamp, 'UTC')) AS last_seen,
         min(toTimeZone(events.timestamp, 'UTC')) AS first_seen,
         sumForEach(arrayMap(bin -> if(and(greater(toTimeZone(events.timestamp, 'UTC'), bin), less(dateDiff('seconds', bin, toTimeZone(events.timestamp, 'UTC')), divide(dateDiff('seconds', parseDateTime64BestEffort('2025-03-25T18:06:24.725420', 6, 'UTC'), parseDateTime64BestEffort('2025-03-26T18:06:24.725428', 6, 'UTC')), 10))), 1, 0), arrayMap(i -> dateAdd(parseDateTime64BestEffort('2025-03-25T18:06:24.725420', 6, 'UTC'), toIntervalSecond(multiply(i, divide(dateDiff('seconds', parseDateTime64BestEffort('2025-03-25T18:06:24.725420', 6, 'UTC'), parseDateTime64BestEffort('2025-03-26T18:06:24.725428', 6, 'UTC')), 10)))), range(0, 10)))) AS volumeDay,
         sumForEach(arrayMap(bin -> if(and(greater(toTimeZone(events.timestamp, 'UTC'), bin), less(dateDiff('seconds', bin, toTimeZone(events.timestamp, 'UTC')), divide(dateDiff('seconds', parseDateTime64BestEffortOrNull(NULL, 6, 'UTC'), parseDateTime64BestEffortOrNull(NULL, 6, 'UTC')), 10))), 1, 0), arrayMap(i -> dateAdd(parseDateTime64BestEffortOrNull(NULL, 6, 'UTC'), toIntervalSecond(multiply(i, divide(dateDiff('seconds', parseDateTime64BestEffortOrNull(NULL, 6, 'UTC'), parseDateTime64BestEffortOrNull(NULL, 6, 'UTC')), 10)))), range(0, 10)))) AS volumeRange
  FROM events
  LEFT OUTER JOIN
    (SELECT argMax(error_tracking_issue_fingerprint_overrides.issue_id, error_tracking_issue_fingerprint_overrides.version) AS issue_id,
            error_tracking_issue_fingerprint_overrides.fingerprint AS fingerprint
     FROM error_tracking_issue_fingerprint_overrides
     WHERE equals(error_tracking_issue_fingerprint_overrides.team_id, 99999)
     GROUP BY error_tracking_issue_fingerprint_overrides.fingerprint
     HAVING ifNull(equals(argMax(error_tracking_issue_fingerprint_overrides.is_deleted, error_tracking_issue_fingerprint_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__exception_issue_override ON equals(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$exception_fingerprint'), ''), 'null'), '^"|"$', ''), events__exception_issue_override.fingerprint)
  WHERE and(equals(events.team_id, 99999), equals(events.event, '$exception'), isNotNull(if(not(empty(events__exception_issue_override.issue_id)), events__exception_issue_override.issue_id, accurateCastOrNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$exception_issue_id'), ''), 'null'), '^"|"$', ''), 'UUID'))), 1)
  GROUP BY if(not(empty(events__exception_issue_override.issue_id)), events__exception_issue_override.issue_id, accurateCastOrNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$exception_issue_id'), ''), 'null'), '^"|"$', ''), 'UUID'))
  LIMIT 101
  OFFSET 0 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1,
                    format_csv_allow_double_quotes=0,
                    max_ast_elements=4000000,
                    max_expanded_ast_elements=4000000,
                    max_bytes_before_external_group_by=0
  '''
# ---
# name: TestErrorTrackingQueryRunner.test_status.1
  '''
  SELECT if(not(empty(events__exception_issue_override.issue_id)), events__exception_issue_override.issue_id, accurateCastOrNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$exception_issue_id'), ''), 'null'), '^"|"$', ''), 'UUID')) AS id,
         count(DISTINCT events.uuid) AS occurrences,
         count(DISTINCT nullIf(events.`$session_id`, '')) AS sessions,
         count(DISTINCT events.distinct_id) AS users,
         max(toTimeZone(events.timestamp, 'UTC')) AS last_seen,
         min(toTimeZone(events.timestamp, 'UTC')) AS first_seen,
         sumForEach(arrayMap(bin -> if(and(greater(toTimeZone(events.timestamp, 'UTC'), bin), less(dateDiff('seconds', bin, toTimeZone(events.timestamp, 'UTC')), divide(dateDiff('seconds', parseDateTime64BestEffort('2025-03-25T18:06:24.833773', 6, 'UTC'), parseDateTime64BestEffort('2025-03-26T18:06:24.833783', 6, 'UTC')), 10))), 1, 0), arrayMap(i -> dateAdd(parseDateTime64BestEffort('2025-03-25T18:06:24.833773', 6, 'UTC'), toIntervalSecond(multiply(i, divide(dateDiff('seconds', parseDateTime64BestEffort('2025-03-25T18:06:24.833773', 6, 'UTC'), parseDateTime64BestEffort('2025-03-26T18:06:24.833783', 6, 'UTC')), 10)))), range(0, 10)))) AS volumeDay,
         sumForEach(arrayMap(bin -> if(and(greater(toTimeZone(events.timestamp, 'UTC'), bin), less(dateDiff('seconds', bin, toTimeZone(events.timestamp, 'UTC')), divide(dateDiff('seconds', parseDateTime64BestEffortOrNull(NULL, 6, 'UTC'), parseDateTime64BestEffortOrNull(NULL, 6, 'UTC')), 10))), 1, 0), arrayMap(i -> dateAdd(parseDateTime64BestEffortOrNull(NULL, 6, 'UTC'), toIntervalSecond(multiply(i, divide(dateDiff('seconds', parseDateTime64BestEffortOrNull(NULL, 6, 'UTC'), parseDateTime64BestEffortOrNull(NULL, 6, 'UTC')), 10)))), range(0, 10)))) AS volumeRange
  FROM events
  LEFT OUTER JOIN
    (SELECT argMax(error_tracking_issue_fingerprint_overrides.issue_id, error_tracking_issue_fingerprint_overrides.version) AS issue_id,
            error_tracking_issue_fingerprint_overrides.fingerprint AS fingerprint
     FROM error_tracking_issue_fingerprint_overrides
     WHERE equals(error_tracking_issue_fingerprint_overrides.team_id, 99999)
     GROUP BY error_tracking_issue_fingerprint_overrides.fingerprint
     HAVING ifNull(equals(argMax(error_tracking_issue_fingerprint_overrides.is_deleted, error_tracking_issue_fingerprint_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__exception_issue_override ON equals(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$exception_fingerprint'), ''), 'null'), '^"|"$', ''), events__exception_issue_override.fingerprint)
  WHERE and(equals(events.team_id, 99999), equals(events.event, '$exception'), isNotNull(if(not(empty(events__exception_issue_override.issue_id)), events__exception_issue_override.issue_id, accurateCastOrNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$exception_issue_id'), ''), 'null'), '^"|"$', ''), 'UUID'))), 1)
  GROUP BY if(not(empty(events__exception_issue_override.issue_id)), events__exception_issue_override.issue_id, accurateCastOrNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$exception_issue_id'), ''), 'null'), '^"|"$', ''), 'UUID'))
  LIMIT 101
  OFFSET 0 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1,
                    format_csv_allow_double_quotes=0,
                    max_ast_elements=4000000,
                    max_expanded_ast_elements=4000000,
                    max_bytes_before_external_group_by=0
  '''
# ---
# name: TestErrorTrackingQueryRunner.test_status.2
  '''
  SELECT if(not(empty(events__exception_issue_override.issue_id)), events__exception_issue_override.issue_id, accurateCastOrNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$exception_issue_id'), ''), 'null'), '^"|"$', ''), 'UUID')) AS id,
         count(DISTINCT events.uuid) AS occurrences,
         count(DISTINCT nullIf(events.`$session_id`, '')) AS sessions,
         count(DISTINCT events.distinct_id) AS users,
         max(toTimeZone(events.timestamp, 'UTC')) AS last_seen,
         min(toTimeZone(events.timestamp, 'UTC')) AS first_seen,
         sumForEach(arrayMap(bin -> if(and(greater(toTimeZone(events.timestamp, 'UTC'), bin), less(dateDiff('seconds', bin, toTimeZone(events.timestamp, 'UTC')), divide(dateDiff('seconds', parseDateTime64BestEffort('2025-03-25T18:06:24.978005', 6, 'UTC'), parseDateTime64BestEffort('2025-03-26T18:06:24.978016', 6, 'UTC')), 10))), 1, 0), arrayMap(i -> dateAdd(parseDateTime64BestEffort('2025-03-25T18:06:24.978005', 6, 'UTC'), toIntervalSecond(multiply(i, divide(dateDiff('seconds', parseDateTime64BestEffort('2025-03-25T18:06:24.978005', 6, 'UTC'), parseDateTime64BestEffort('2025-03-26T18:06:24.978016', 6, 'UTC')), 10)))), range(0, 10)))) AS volumeDay,
         sumForEach(arrayMap(bin -> if(and(greater(toTimeZone(events.timestamp, 'UTC'), bin), less(dateDiff('seconds', bin, toTimeZone(events.timestamp, 'UTC')), divide(dateDiff('seconds', parseDateTime64BestEffortOrNull(NULL, 6, 'UTC'), parseDateTime64BestEffortOrNull(NULL, 6, 'UTC')), 10))), 1, 0), arrayMap(i -> dateAdd(parseDateTime64BestEffortOrNull(NULL, 6, 'UTC'), toIntervalSecond(multiply(i, divide(dateDiff('seconds', parseDateTime64BestEffortOrNull(NULL, 6, 'UTC'), parseDateTime64BestEffortOrNull(NULL, 6, 'UTC')), 10)))), range(0, 10)))) AS volumeRange
  FROM events
  LEFT OUTER JOIN
    (SELECT argMax(error_tracking_issue_fingerprint_overrides.issue_id, error_tracking_issue_fingerprint_overrides.version) AS issue_id,
            error_tracking_issue_fingerprint_overrides.fingerprint AS fingerprint
     FROM error_tracking_issue_fingerprint_overrides
     WHERE equals(error_tracking_issue_fingerprint_overrides.team_id, 99999)
     GROUP BY error_tracking_issue_fingerprint_overrides.fingerprint
     HAVING ifNull(equals(argMax(error_tracking_issue_fingerprint_overrides.is_deleted, error_tracking_issue_fingerprint_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__exception_issue_override ON equals(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$exception_fingerprint'), ''), 'null'), '^"|"$', ''), events__exception_issue_override.fingerprint)
  WHERE and(equals(events.team_id, 99999), equals(events.event, '$exception'), isNotNull(if(not(empty(events__exception_issue_override.issue_id)), events__exception_issue_override.issue_id, accurateCastOrNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$exception_issue_id'), ''), 'null'), '^"|"$', ''), 'UUID'))), 1)
  GROUP BY if(not(empty(events__exception_issue_override.issue_id)), events__exception_issue_override.issue_id, accurateCastOrNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$exception_issue_id'), ''), 'null'), '^"|"$', ''), 'UUID'))
  LIMIT 101
  OFFSET 0 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1,
                    format_csv_allow_double_quotes=0,
                    max_ast_elements=4000000,
                    max_expanded_ast_elements=4000000,
                    max_bytes_before_external_group_by=0
  '''
# ---
# name: TestErrorTrackingQueryRunner.test_status.3
  '''
  SELECT if(not(empty(events__exception_issue_override.issue_id)), events__exception_issue_override.issue_id, accurateCastOrNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$exception_issue_id'), ''), 'null'), '^"|"$', ''), 'UUID')) AS id,
         count(DISTINCT events.uuid) AS occurrences,
         count(DISTINCT nullIf(events.`$session_id`, '')) AS sessions,
         count(DISTINCT events.distinct_id) AS users,
         max(toTimeZone(events.timestamp, 'UTC')) AS last_seen,
         min(toTimeZone(events.timestamp, 'UTC')) AS first_seen,
         sumForEach(arrayMap(bin -> if(and(greater(toTimeZone(events.timestamp, 'UTC'), bin), less(dateDiff('seconds', bin, toTimeZone(events.timestamp, 'UTC')), divide(dateDiff('seconds', parseDateTime64BestEffort('2025-03-25T18:06:25.103873', 6, 'UTC'), parseDateTime64BestEffort('2025-03-26T18:06:25.103885', 6, 'UTC')), 10))), 1, 0), arrayMap(i -> dateAdd(parseDateTime64BestEffort('2025-03-25T18:06:25.103873', 6, 'UTC'), toIntervalSecond(multiply(i, divide(dateDiff('seconds', parseDateTime64BestEffort('2025-03-25T18:06:25.103873', 6, 'UTC'), parseDateTime64BestEffort('2025-03-26T18:06:25.103885', 6, 'UTC')), 10)))), range(0, 10)))) AS volumeDay,
         sumForEach(arrayMap(bin -> if(and(greater(toTimeZone(events.timestamp, 'UTC'), bin), less(dateDiff('seconds', bin, toTimeZone(events.timestamp, 'UTC')), divide(dateDiff('seconds', parseDateTime64BestEffortOrNull(NULL, 6, 'UTC'), parseDateTime64BestEffortOrNull(NULL, 6, 'UTC')), 10))), 1, 0), arrayMap(i -> dateAdd(parseDateTime64BestEffortOrNull(NULL, 6, 'UTC'), toIntervalSecond(multiply(i, divide(dateDiff('seconds', parseDateTime64BestEffortOrNull(NULL, 6, 'UTC'), parseDateTime64BestEffortOrNull(NULL, 6, 'UTC')), 10)))), range(0, 10)))) AS volumeRange
  FROM events
  LEFT OUTER JOIN
    (SELECT argMax(error_tracking_issue_fingerprint_overrides.issue_id, error_tracking_issue_fingerprint_overrides.version) AS issue_id,
            error_tracking_issue_fingerprint_overrides.fingerprint AS fingerprint
     FROM error_tracking_issue_fingerprint_overrides
     WHERE equals(error_tracking_issue_fingerprint_overrides.team_id, 99999)
     GROUP BY error_tracking_issue_fingerprint_overrides.fingerprint
     HAVING ifNull(equals(argMax(error_tracking_issue_fingerprint_overrides.is_deleted, error_tracking_issue_fingerprint_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__exception_issue_override ON equals(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$exception_fingerprint'), ''), 'null'), '^"|"$', ''), events__exception_issue_override.fingerprint)
  WHERE and(equals(events.team_id, 99999), equals(events.event, '$exception'), isNotNull(if(not(empty(events__exception_issue_override.issue_id)), events__exception_issue_override.issue_id, accurateCastOrNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$exception_issue_id'), ''), 'null'), '^"|"$', ''), 'UUID'))), 1)
  GROUP BY if(not(empty(events__exception_issue_override.issue_id)), events__exception_issue_override.issue_id, accurateCastOrNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$exception_issue_id'), ''), 'null'), '^"|"$', ''), 'UUID'))
  LIMIT 101
  OFFSET 0 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1,
                    format_csv_allow_double_quotes=0,
                    max_ast_elements=4000000,
                    max_expanded_ast_elements=4000000,
                    max_bytes_before_external_group_by=0
  '''
# ---
# name: TestErrorTrackingQueryRunner.test_user_assignee
  '''
  SELECT if(not(empty(events__exception_issue_override.issue_id)), events__exception_issue_override.issue_id, accurateCastOrNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$exception_issue_id'), ''), 'null'), '^"|"$', ''), 'UUID')) AS id,
         count(DISTINCT events.uuid) AS occurrences,
         count(DISTINCT nullIf(events.`$session_id`, '')) AS sessions,
         count(DISTINCT events.distinct_id) AS users,
         max(toTimeZone(events.timestamp, 'UTC')) AS last_seen,
         min(toTimeZone(events.timestamp, 'UTC')) AS first_seen,
         sumForEach(arrayMap(bin -> if(and(greater(toTimeZone(events.timestamp, 'UTC'), bin), less(dateDiff('seconds', bin, toTimeZone(events.timestamp, 'UTC')), divide(dateDiff('seconds', parseDateTime64BestEffort('2025-03-25T18:06:25.812736', 6, 'UTC'), parseDateTime64BestEffort('2025-03-26T18:06:25.812744', 6, 'UTC')), 10))), 1, 0), arrayMap(i -> dateAdd(parseDateTime64BestEffort('2025-03-25T18:06:25.812736', 6, 'UTC'), toIntervalSecond(multiply(i, divide(dateDiff('seconds', parseDateTime64BestEffort('2025-03-25T18:06:25.812736', 6, 'UTC'), parseDateTime64BestEffort('2025-03-26T18:06:25.812744', 6, 'UTC')), 10)))), range(0, 10)))) AS volumeDay,
         sumForEach(arrayMap(bin -> if(and(greater(toTimeZone(events.timestamp, 'UTC'), bin), less(dateDiff('seconds', bin, toTimeZone(events.timestamp, 'UTC')), divide(dateDiff('seconds', parseDateTime64BestEffortOrNull(NULL, 6, 'UTC'), parseDateTime64BestEffortOrNull(NULL, 6, 'UTC')), 10))), 1, 0), arrayMap(i -> dateAdd(parseDateTime64BestEffortOrNull(NULL, 6, 'UTC'), toIntervalSecond(multiply(i, divide(dateDiff('seconds', parseDateTime64BestEffortOrNull(NULL, 6, 'UTC'), parseDateTime64BestEffortOrNull(NULL, 6, 'UTC')), 10)))), range(0, 10)))) AS volumeRange
  FROM events
  LEFT OUTER JOIN
    (SELECT argMax(error_tracking_issue_fingerprint_overrides.issue_id, error_tracking_issue_fingerprint_overrides.version) AS issue_id,
            error_tracking_issue_fingerprint_overrides.fingerprint AS fingerprint
     FROM error_tracking_issue_fingerprint_overrides
     WHERE equals(error_tracking_issue_fingerprint_overrides.team_id, 99999)
     GROUP BY error_tracking_issue_fingerprint_overrides.fingerprint
     HAVING ifNull(equals(argMax(error_tracking_issue_fingerprint_overrides.is_deleted, error_tracking_issue_fingerprint_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__exception_issue_override ON equals(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$exception_fingerprint'), ''), 'null'), '^"|"$', ''), events__exception_issue_override.fingerprint)
  WHERE and(equals(events.team_id, 99999), equals(events.event, '$exception'), isNotNull(if(not(empty(events__exception_issue_override.issue_id)), events__exception_issue_override.issue_id, accurateCastOrNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$exception_issue_id'), ''), 'null'), '^"|"$', ''), 'UUID'))), 1)
  GROUP BY if(not(empty(events__exception_issue_override.issue_id)), events__exception_issue_override.issue_id, accurateCastOrNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$exception_issue_id'), ''), 'null'), '^"|"$', ''), 'UUID'))
  LIMIT 101
  OFFSET 0 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1,
                    format_csv_allow_double_quotes=0,
                    max_ast_elements=4000000,
                    max_expanded_ast_elements=4000000,
                    max_bytes_before_external_group_by=0
  '''
# ---
# name: TestErrorTrackingQueryRunner.test_user_group_assignee
  '''
  SELECT if(not(empty(events__exception_issue_override.issue_id)), events__exception_issue_override.issue_id, accurateCastOrNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$exception_issue_id'), ''), 'null'), '^"|"$', ''), 'UUID')) AS id,
         count(DISTINCT events.uuid) AS occurrences,
         count(DISTINCT nullIf(events.`$session_id`, '')) AS sessions,
         count(DISTINCT events.distinct_id) AS users,
         max(toTimeZone(events.timestamp, 'UTC')) AS last_seen,
         min(toTimeZone(events.timestamp, 'UTC')) AS first_seen,
         sumForEach(arrayMap(bin -> if(and(greater(toTimeZone(events.timestamp, 'UTC'), bin), less(dateDiff('seconds', bin, toTimeZone(events.timestamp, 'UTC')), divide(dateDiff('seconds', parseDateTime64BestEffort('2025-03-25T18:06:26.313841', 6, 'UTC'), parseDateTime64BestEffort('2025-03-26T18:06:26.313849', 6, 'UTC')), 10))), 1, 0), arrayMap(i -> dateAdd(parseDateTime64BestEffort('2025-03-25T18:06:26.313841', 6, 'UTC'), toIntervalSecond(multiply(i, divide(dateDiff('seconds', parseDateTime64BestEffort('2025-03-25T18:06:26.313841', 6, 'UTC'), parseDateTime64BestEffort('2025-03-26T18:06:26.313849', 6, 'UTC')), 10)))), range(0, 10)))) AS volumeDay,
         sumForEach(arrayMap(bin -> if(and(greater(toTimeZone(events.timestamp, 'UTC'), bin), less(dateDiff('seconds', bin, toTimeZone(events.timestamp, 'UTC')), divide(dateDiff('seconds', parseDateTime64BestEffortOrNull(NULL, 6, 'UTC'), parseDateTime64BestEffortOrNull(NULL, 6, 'UTC')), 10))), 1, 0), arrayMap(i -> dateAdd(parseDateTime64BestEffortOrNull(NULL, 6, 'UTC'), toIntervalSecond(multiply(i, divide(dateDiff('seconds', parseDateTime64BestEffortOrNull(NULL, 6, 'UTC'), parseDateTime64BestEffortOrNull(NULL, 6, 'UTC')), 10)))), range(0, 10)))) AS volumeRange
  FROM events
  LEFT OUTER JOIN
    (SELECT argMax(error_tracking_issue_fingerprint_overrides.issue_id, error_tracking_issue_fingerprint_overrides.version) AS issue_id,
            error_tracking_issue_fingerprint_overrides.fingerprint AS fingerprint
     FROM error_tracking_issue_fingerprint_overrides
     WHERE equals(error_tracking_issue_fingerprint_overrides.team_id, 99999)
     GROUP BY error_tracking_issue_fingerprint_overrides.fingerprint
     HAVING ifNull(equals(argMax(error_tracking_issue_fingerprint_overrides.is_deleted, error_tracking_issue_fingerprint_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__exception_issue_override ON equals(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$exception_fingerprint'), ''), 'null'), '^"|"$', ''), events__exception_issue_override.fingerprint)
  WHERE and(equals(events.team_id, 99999), equals(events.event, '$exception'), isNotNull(if(not(empty(events__exception_issue_override.issue_id)), events__exception_issue_override.issue_id, accurateCastOrNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$exception_issue_id'), ''), 'null'), '^"|"$', ''), 'UUID'))), 1)
  GROUP BY if(not(empty(events__exception_issue_override.issue_id)), events__exception_issue_override.issue_id, accurateCastOrNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$exception_issue_id'), ''), 'null'), '^"|"$', ''), 'UUID'))
  LIMIT 101
  OFFSET 0 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1,
                    format_csv_allow_double_quotes=0,
                    max_ast_elements=4000000,
                    max_expanded_ast_elements=4000000,
                    max_bytes_before_external_group_by=0
  '''
# ---
