# serializer version: 1
# name: TestClickhouseFunnelCorrelation.test_action_events_are_excluded_from_correlations
  '''
  SELECT event.event AS name,
         countIf(funnel_actors.actor_id, ifNull(equals(funnel_actors.steps, 2), 0)) AS success_count,
         countIf(funnel_actors.actor_id, ifNull(notEquals(funnel_actors.steps, 2), 1)) AS failure_count
  FROM events AS event
  INNER JOIN
    (SELECT argMax(person_distinct_id2.person_id, person_distinct_id2.version) AS person_id,
            person_distinct_id2.distinct_id AS distinct_id
     FROM person_distinct_id2
     WHERE equals(person_distinct_id2.team_id, 2)
     GROUP BY person_distinct_id2.distinct_id
     HAVING ifNull(equals(argMax(person_distinct_id2.is_deleted, person_distinct_id2.version), 0), 0)) AS event__pdi ON equals(event.distinct_id, event__pdi.distinct_id)
  JOIN
    (SELECT aggregation_target AS actor_id,
            timestamp AS timestamp,
            steps AS steps,
            final_timestamp AS final_timestamp,
            first_timestamp AS first_timestamp
     FROM
       (SELECT aggregation_target AS aggregation_target,
               steps AS steps,
               avg(step_1_conversion_time) AS step_1_average_conversion_time_inner,
               median(step_1_conversion_time) AS step_1_median_conversion_time_inner,
               argMax(latest_0, steps) AS timestamp,
               argMax(latest_1, steps) AS final_timestamp,
               argMax(latest_0, steps) AS first_timestamp
        FROM
          (SELECT aggregation_target AS aggregation_target,
                  steps AS steps,
                  max(steps) OVER (PARTITION BY aggregation_target) AS max_steps,
                                  step_1_conversion_time AS step_1_conversion_time,
                                  latest_0 AS latest_0,
                                  latest_1 AS latest_1,
                                  latest_0 AS latest_0
           FROM
             (SELECT aggregation_target AS aggregation_target,
                     timestamp AS timestamp,
                     step_0 AS step_0,
                     latest_0 AS latest_0,
                     step_1 AS step_1,
                     latest_1 AS latest_1,
                     if(and(ifNull(lessOrEquals(latest_0, latest_1), 0), ifNull(lessOrEquals(latest_1, plus(latest_0, toIntervalDay(14))), 0)), 2, 1) AS steps,
                     if(and(isNotNull(latest_1), ifNull(lessOrEquals(latest_1, plus(latest_0, toIntervalDay(14))), 0)), dateDiff('second', latest_0, latest_1), NULL) AS step_1_conversion_time
              FROM
                (SELECT aggregation_target AS aggregation_target,
                        timestamp AS timestamp,
                        step_0 AS step_0,
                        latest_0 AS latest_0,
                        step_1 AS step_1,
                        min(latest_1) OVER (PARTITION BY aggregation_target
                                            ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) AS latest_1
                 FROM
                   (SELECT toTimeZone(e.timestamp, 'UTC') AS timestamp,
                           e__pdi.person_id AS aggregation_target,
                           if(and(equals(e.event, 'user signed up'), ifNull(equals(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(e.properties, 'key'), ''), 'null'), '^"|"$', ''), 'val'), 0)), 1, 0) AS step_0,
                           if(ifNull(equals(step_0, 1), 0), timestamp, NULL) AS latest_0,
                           if(and(equals(e.event, 'paid'), ifNull(equals(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(e.properties, 'key'), ''), 'null'), '^"|"$', ''), 'val'), 0)), 1, 0) AS step_1,
                           if(ifNull(equals(step_1, 1), 0), timestamp, NULL) AS latest_1
                    FROM events AS e
                    INNER JOIN
                      (SELECT argMax(person_distinct_id2.person_id, person_distinct_id2.version) AS person_id,
                              person_distinct_id2.distinct_id AS distinct_id
                       FROM person_distinct_id2
                       WHERE equals(person_distinct_id2.team_id, 2)
                       GROUP BY person_distinct_id2.distinct_id
                       HAVING ifNull(equals(argMax(person_distinct_id2.is_deleted, person_distinct_id2.version), 0), 0)) AS e__pdi ON equals(e.distinct_id, e__pdi.distinct_id)
                    WHERE and(equals(e.team_id, 2), and(and(greaterOrEquals(toTimeZone(e.timestamp, 'UTC'), toDateTime64('2020-01-01 00:00:00.000000', 6, 'UTC')), lessOrEquals(toTimeZone(e.timestamp, 'UTC'), toDateTime64('2020-01-14 23:59:59.999999', 6, 'UTC'))), in(e.event, tuple('paid', 'user signed up'))), or(ifNull(equals(step_0, 1), 0), ifNull(equals(step_1, 1), 0)))))
              WHERE ifNull(equals(step_0, 1), 0)))
        GROUP BY aggregation_target,
                 steps
        HAVING ifNull(equals(steps, max_steps), isNull(steps)
                      and isNull(max_steps)))
     WHERE ifNull(in(steps, [1, 2]), 0)
     ORDER BY aggregation_target ASC) AS funnel_actors ON equals(event__pdi.person_id, funnel_actors.actor_id)
  WHERE and(equals(event.team_id, 2), greaterOrEquals(toTimeZone(toDateTime(toTimeZone(event.timestamp, 'UTC'), 'UTC'), 'UTC'), assumeNotNull(parseDateTime64BestEffortOrNull('2020-01-01 00:00:00', 6, 'UTC'))), less(toTimeZone(toDateTime(toTimeZone(event.timestamp, 'UTC'), 'UTC'), 'UTC'), assumeNotNull(parseDateTime64BestEffortOrNull('2020-01-14 23:59:59', 6, 'UTC'))), equals(event.team_id, 2), greater(toTimeZone(toDateTime(toTimeZone(event.timestamp, 'UTC'), 'UTC'), 'UTC'), funnel_actors.first_timestamp), less(toTimeZone(toDateTime(toTimeZone(event.timestamp, 'UTC'), 'UTC'), 'UTC'), coalesce(funnel_actors.final_timestamp, plus(funnel_actors.first_timestamp, toIntervalDay(14)), assumeNotNull(parseDateTime64BestEffortOrNull('2020-01-14 23:59:59', 6, 'UTC')))), notIn(event.event, ['paid', 'user signed up']), notIn(event.event, []))
  GROUP BY name
  LIMIT 100
  UNION ALL
  SELECT 'Total_Values_In_Query' AS name,
         countIf(funnel_actors.actor_id, ifNull(equals(funnel_actors.steps, 2), 0)) AS success_count,
         countIf(funnel_actors.actor_id, ifNull(notEquals(funnel_actors.steps, 2), 1)) AS failure_count
  FROM
    (SELECT aggregation_target AS actor_id,
            timestamp AS timestamp,
            steps AS steps,
            final_timestamp AS final_timestamp,
            first_timestamp AS first_timestamp
     FROM
       (SELECT aggregation_target AS aggregation_target,
               steps AS steps,
               avg(step_1_conversion_time) AS step_1_average_conversion_time_inner,
               median(step_1_conversion_time) AS step_1_median_conversion_time_inner,
               argMax(latest_0, steps) AS timestamp,
               argMax(latest_1, steps) AS final_timestamp,
               argMax(latest_0, steps) AS first_timestamp
        FROM
          (SELECT aggregation_target AS aggregation_target,
                  steps AS steps,
                  max(steps) OVER (PARTITION BY aggregation_target) AS max_steps,
                                  step_1_conversion_time AS step_1_conversion_time,
                                  latest_0 AS latest_0,
                                  latest_1 AS latest_1,
                                  latest_0 AS latest_0
           FROM
             (SELECT aggregation_target AS aggregation_target,
                     timestamp AS timestamp,
                     step_0 AS step_0,
                     latest_0 AS latest_0,
                     step_1 AS step_1,
                     latest_1 AS latest_1,
                     if(and(ifNull(lessOrEquals(latest_0, latest_1), 0), ifNull(lessOrEquals(latest_1, plus(latest_0, toIntervalDay(14))), 0)), 2, 1) AS steps,
                     if(and(isNotNull(latest_1), ifNull(lessOrEquals(latest_1, plus(latest_0, toIntervalDay(14))), 0)), dateDiff('second', latest_0, latest_1), NULL) AS step_1_conversion_time
              FROM
                (SELECT aggregation_target AS aggregation_target,
                        timestamp AS timestamp,
                        step_0 AS step_0,
                        latest_0 AS latest_0,
                        step_1 AS step_1,
                        min(latest_1) OVER (PARTITION BY aggregation_target
                                            ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) AS latest_1
                 FROM
                   (SELECT toTimeZone(e.timestamp, 'UTC') AS timestamp,
                           e__pdi.person_id AS aggregation_target,
                           if(and(equals(e.event, 'user signed up'), ifNull(equals(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(e.properties, 'key'), ''), 'null'), '^"|"$', ''), 'val'), 0)), 1, 0) AS step_0,
                           if(ifNull(equals(step_0, 1), 0), timestamp, NULL) AS latest_0,
                           if(and(equals(e.event, 'paid'), ifNull(equals(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(e.properties, 'key'), ''), 'null'), '^"|"$', ''), 'val'), 0)), 1, 0) AS step_1,
                           if(ifNull(equals(step_1, 1), 0), timestamp, NULL) AS latest_1
                    FROM events AS e
                    INNER JOIN
                      (SELECT argMax(person_distinct_id2.person_id, person_distinct_id2.version) AS person_id,
                              person_distinct_id2.distinct_id AS distinct_id
                       FROM person_distinct_id2
                       WHERE equals(person_distinct_id2.team_id, 2)
                       GROUP BY person_distinct_id2.distinct_id
                       HAVING ifNull(equals(argMax(person_distinct_id2.is_deleted, person_distinct_id2.version), 0), 0)) AS e__pdi ON equals(e.distinct_id, e__pdi.distinct_id)
                    WHERE and(equals(e.team_id, 2), and(and(greaterOrEquals(toTimeZone(e.timestamp, 'UTC'), toDateTime64('2020-01-01 00:00:00.000000', 6, 'UTC')), lessOrEquals(toTimeZone(e.timestamp, 'UTC'), toDateTime64('2020-01-14 23:59:59.999999', 6, 'UTC'))), in(e.event, tuple('paid', 'user signed up'))), or(ifNull(equals(step_0, 1), 0), ifNull(equals(step_1, 1), 0)))))
              WHERE ifNull(equals(step_0, 1), 0)))
        GROUP BY aggregation_target,
                 steps
        HAVING ifNull(equals(steps, max_steps), isNull(steps)
                      and isNull(max_steps)))
     WHERE ifNull(in(steps, [1, 2]), 0)
     ORDER BY aggregation_target ASC) AS funnel_actors
  LIMIT 100 SETTINGS readonly=2,
                     max_execution_time=60,
                     allow_experimental_object_type=1
  '''
# ---
# name: TestClickhouseFunnelCorrelation.test_basic_funnel_correlation_with_properties
  '''
  WITH funnel_actors as
    (SELECT aggregation_target AS actor_id , timestamp, steps,
                                                        final_timestamp,
                                                        first_timestamp
     FROM
       (SELECT aggregation_target,
               steps,
               avg(step_1_conversion_time) step_1_average_conversion_time_inner,
               median(step_1_conversion_time) step_1_median_conversion_time_inner ,
               argMax(latest_0, steps) as timestamp,
               argMax(latest_1, steps) as final_timestamp,
               argMax(latest_0, steps) as first_timestamp
        FROM
          (SELECT aggregation_target,
                  steps,
                  max(steps) over (PARTITION BY aggregation_target) as max_steps,
                                  step_1_conversion_time ,
                                  latest_0,
                                  latest_1,
                                  latest_0
           FROM
             (SELECT *,
                     if(latest_0 <= latest_1
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                     if(isNotNull(latest_1)
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
              FROM
                (SELECT aggregation_target, timestamp, step_0,
                                                       latest_0,
                                                       step_1,
                                                       min(latest_1) over (PARTITION by aggregation_target
                                                                           ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
                 FROM
                   (SELECT e.timestamp as timestamp,
                           pdi.person_id as aggregation_target,
                           pdi.person_id as person_id,
                           if(event = 'user signed up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'paid', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1
                    FROM events e
                    INNER JOIN
                      (SELECT distinct_id,
                              argMax(person_id, version) as person_id
                       FROM person_distinct_id2
                       WHERE team_id = 2
                         AND distinct_id IN
                           (SELECT distinct_id
                            FROM events
                            WHERE team_id = 2
                              AND event IN ['paid', 'user signed up']
                              AND toTimeZone(timestamp, 'UTC') >= toDateTime('2020-01-01 00:00:00', 'UTC')
                              AND toTimeZone(timestamp, 'UTC') <= toDateTime('2020-01-14 23:59:59', 'UTC') )
                       GROUP BY distinct_id
                       HAVING argMax(is_deleted, version) = 0) AS pdi ON e.distinct_id = pdi.distinct_id
                    WHERE team_id = 2
                      AND event IN ['paid', 'user signed up']
                      AND toTimeZone(timestamp, 'UTC') >= toDateTime('2020-01-01 00:00:00', 'UTC')
                      AND toTimeZone(timestamp, 'UTC') <= toDateTime('2020-01-14 23:59:59', 'UTC')
                      AND (step_0 = 1
                           OR step_1 = 1) ))
              WHERE step_0 = 1 ))
        GROUP BY aggregation_target,
                 steps
        HAVING steps = max_steps)
     WHERE steps IN [1, 2]
     ORDER BY aggregation_target SETTINGS max_ast_elements=1000000,
                                          max_expanded_ast_elements=1000000),
       2 AS target_step
  SELECT concat(prop.1, '::', prop.2) as name,
         countDistinctIf(actor_id, steps = target_step) AS success_count,
         countDistinctIf(actor_id, steps <> target_step) AS failure_count
  FROM
    (SELECT actor_id,
            funnel_actors.steps as steps,
            arrayJoin(arrayZip(['$browser'], [replaceRegexpAll(JSONExtractRaw(person_props, '$browser'), '^"|"$', '')])) as prop
     FROM funnel_actors
     JOIN
       (SELECT id,
               argMax(properties, version) as person_props
        FROM person
        WHERE team_id = 2
        GROUP BY id
        HAVING max(is_deleted) = 0 SETTINGS optimize_aggregation_in_order = 1) person ON person.id = funnel_actors.actor_id) aggregation_target_with_props
  GROUP BY prop.1,
               prop.2
  HAVING prop.1 NOT IN []
  UNION ALL
  SELECT 'Total_Values_In_Query' as name,
         countDistinctIf(actor_id, steps = target_step) AS success_count,
         countDistinctIf(actor_id, steps <> target_step) AS failure_count
  FROM funnel_actors
  '''
# ---
# name: TestClickhouseFunnelCorrelation.test_basic_funnel_correlation_with_properties.1
  '''
  WITH funnel_actors AS
    (SELECT aggregation_target AS actor_id , timestamp, steps,
                                                        final_timestamp,
                                                        first_timestamp
     FROM
       (SELECT aggregation_target,
               steps,
               avg(step_1_conversion_time) step_1_average_conversion_time_inner,
               median(step_1_conversion_time) step_1_median_conversion_time_inner ,
               argMax(latest_0, steps) as timestamp,
               argMax(latest_1, steps) as final_timestamp,
               argMax(latest_0, steps) as first_timestamp
        FROM
          (SELECT aggregation_target,
                  steps,
                  max(steps) over (PARTITION BY aggregation_target) as max_steps,
                                  step_1_conversion_time ,
                                  latest_0,
                                  latest_1,
                                  latest_0
           FROM
             (SELECT *,
                     if(latest_0 <= latest_1
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                     if(isNotNull(latest_1)
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
              FROM
                (SELECT aggregation_target, timestamp, step_0,
                                                       latest_0,
                                                       step_1,
                                                       min(latest_1) over (PARTITION by aggregation_target
                                                                           ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
                 FROM
                   (SELECT e.timestamp as timestamp,
                           pdi.person_id as aggregation_target,
                           pdi.person_id as person_id,
                           if(event = 'user signed up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'paid', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1
                    FROM events e
                    INNER JOIN
                      (SELECT distinct_id,
                              argMax(person_id, version) as person_id
                       FROM person_distinct_id2
                       WHERE team_id = 2
                         AND distinct_id IN
                           (SELECT distinct_id
                            FROM events
                            WHERE team_id = 2
                              AND event IN ['paid', 'user signed up']
                              AND toTimeZone(timestamp, 'UTC') >= toDateTime('2020-01-01 00:00:00', 'UTC')
                              AND toTimeZone(timestamp, 'UTC') <= toDateTime('2020-01-14 23:59:59', 'UTC') )
                       GROUP BY distinct_id
                       HAVING argMax(is_deleted, version) = 0) AS pdi ON e.distinct_id = pdi.distinct_id
                    INNER JOIN
                      (SELECT id
                       FROM person
                       WHERE team_id = 2
                         AND id IN
                           (SELECT id
                            FROM person
                            WHERE team_id = 2
                              AND (has(['Positive'], replaceRegexpAll(JSONExtractRaw(properties, '$browser'), '^"|"$', ''))) )
                       GROUP BY id
                       HAVING max(is_deleted) = 0
                       AND (has(['Positive'], replaceRegexpAll(JSONExtractRaw(argMax(person.properties, version), '$browser'), '^"|"$', ''))) SETTINGS optimize_aggregation_in_order = 1) person ON person.id = pdi.person_id
                    WHERE team_id = 2
                      AND event IN ['paid', 'user signed up']
                      AND toTimeZone(timestamp, 'UTC') >= toDateTime('2020-01-01 00:00:00', 'UTC')
                      AND toTimeZone(timestamp, 'UTC') <= toDateTime('2020-01-14 23:59:59', 'UTC')
                      AND (step_0 = 1
                           OR step_1 = 1) ))
              WHERE step_0 = 1 ))
        GROUP BY aggregation_target,
                 steps
        HAVING steps = max_steps)
     WHERE steps IN [1, 2]
     ORDER BY aggregation_target SETTINGS max_ast_elements=1000000,
                                          max_expanded_ast_elements=1000000),
       2 AS target_step
  SELECT funnel_actors.actor_id AS actor_id
  FROM funnel_actors
  WHERE funnel_actors.steps = target_step
  GROUP BY funnel_actors.actor_id
  ORDER BY actor_id
  LIMIT 100
  OFFSET 0
  '''
# ---
# name: TestClickhouseFunnelCorrelation.test_basic_funnel_correlation_with_properties.2
  '''
  WITH funnel_actors AS
    (SELECT aggregation_target AS actor_id , timestamp, steps,
                                                        final_timestamp,
                                                        first_timestamp
     FROM
       (SELECT aggregation_target,
               steps,
               avg(step_1_conversion_time) step_1_average_conversion_time_inner,
               median(step_1_conversion_time) step_1_median_conversion_time_inner ,
               argMax(latest_0, steps) as timestamp,
               argMax(latest_1, steps) as final_timestamp,
               argMax(latest_0, steps) as first_timestamp
        FROM
          (SELECT aggregation_target,
                  steps,
                  max(steps) over (PARTITION BY aggregation_target) as max_steps,
                                  step_1_conversion_time ,
                                  latest_0,
                                  latest_1,
                                  latest_0
           FROM
             (SELECT *,
                     if(latest_0 <= latest_1
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                     if(isNotNull(latest_1)
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
              FROM
                (SELECT aggregation_target, timestamp, step_0,
                                                       latest_0,
                                                       step_1,
                                                       min(latest_1) over (PARTITION by aggregation_target
                                                                           ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
                 FROM
                   (SELECT e.timestamp as timestamp,
                           pdi.person_id as aggregation_target,
                           pdi.person_id as person_id,
                           if(event = 'user signed up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'paid', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1
                    FROM events e
                    INNER JOIN
                      (SELECT distinct_id,
                              argMax(person_id, version) as person_id
                       FROM person_distinct_id2
                       WHERE team_id = 2
                         AND distinct_id IN
                           (SELECT distinct_id
                            FROM events
                            WHERE team_id = 2
                              AND event IN ['paid', 'user signed up']
                              AND toTimeZone(timestamp, 'UTC') >= toDateTime('2020-01-01 00:00:00', 'UTC')
                              AND toTimeZone(timestamp, 'UTC') <= toDateTime('2020-01-14 23:59:59', 'UTC') )
                       GROUP BY distinct_id
                       HAVING argMax(is_deleted, version) = 0) AS pdi ON e.distinct_id = pdi.distinct_id
                    INNER JOIN
                      (SELECT id
                       FROM person
                       WHERE team_id = 2
                         AND id IN
                           (SELECT id
                            FROM person
                            WHERE team_id = 2
                              AND (has(['Positive'], replaceRegexpAll(JSONExtractRaw(properties, '$browser'), '^"|"$', ''))) )
                       GROUP BY id
                       HAVING max(is_deleted) = 0
                       AND (has(['Positive'], replaceRegexpAll(JSONExtractRaw(argMax(person.properties, version), '$browser'), '^"|"$', ''))) SETTINGS optimize_aggregation_in_order = 1) person ON person.id = pdi.person_id
                    WHERE team_id = 2
                      AND event IN ['paid', 'user signed up']
                      AND toTimeZone(timestamp, 'UTC') >= toDateTime('2020-01-01 00:00:00', 'UTC')
                      AND toTimeZone(timestamp, 'UTC') <= toDateTime('2020-01-14 23:59:59', 'UTC')
                      AND (step_0 = 1
                           OR step_1 = 1) ))
              WHERE step_0 = 1 ))
        GROUP BY aggregation_target,
                 steps
        HAVING steps = max_steps)
     WHERE steps IN [1, 2]
     ORDER BY aggregation_target SETTINGS max_ast_elements=1000000,
                                          max_expanded_ast_elements=1000000),
       2 AS target_step
  SELECT funnel_actors.actor_id AS actor_id
  FROM funnel_actors
  WHERE funnel_actors.steps <> target_step
  GROUP BY funnel_actors.actor_id
  ORDER BY actor_id
  LIMIT 100
  OFFSET 0
  '''
# ---
# name: TestClickhouseFunnelCorrelation.test_basic_funnel_correlation_with_properties.3
  '''
  WITH funnel_actors AS
    (SELECT aggregation_target AS actor_id , timestamp, steps,
                                                        final_timestamp,
                                                        first_timestamp
     FROM
       (SELECT aggregation_target,
               steps,
               avg(step_1_conversion_time) step_1_average_conversion_time_inner,
               median(step_1_conversion_time) step_1_median_conversion_time_inner ,
               argMax(latest_0, steps) as timestamp,
               argMax(latest_1, steps) as final_timestamp,
               argMax(latest_0, steps) as first_timestamp
        FROM
          (SELECT aggregation_target,
                  steps,
                  max(steps) over (PARTITION BY aggregation_target) as max_steps,
                                  step_1_conversion_time ,
                                  latest_0,
                                  latest_1,
                                  latest_0
           FROM
             (SELECT *,
                     if(latest_0 <= latest_1
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                     if(isNotNull(latest_1)
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
              FROM
                (SELECT aggregation_target, timestamp, step_0,
                                                       latest_0,
                                                       step_1,
                                                       min(latest_1) over (PARTITION by aggregation_target
                                                                           ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
                 FROM
                   (SELECT e.timestamp as timestamp,
                           pdi.person_id as aggregation_target,
                           pdi.person_id as person_id,
                           if(event = 'user signed up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'paid', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1
                    FROM events e
                    INNER JOIN
                      (SELECT distinct_id,
                              argMax(person_id, version) as person_id
                       FROM person_distinct_id2
                       WHERE team_id = 2
                         AND distinct_id IN
                           (SELECT distinct_id
                            FROM events
                            WHERE team_id = 2
                              AND event IN ['paid', 'user signed up']
                              AND toTimeZone(timestamp, 'UTC') >= toDateTime('2020-01-01 00:00:00', 'UTC')
                              AND toTimeZone(timestamp, 'UTC') <= toDateTime('2020-01-14 23:59:59', 'UTC') )
                       GROUP BY distinct_id
                       HAVING argMax(is_deleted, version) = 0) AS pdi ON e.distinct_id = pdi.distinct_id
                    INNER JOIN
                      (SELECT id
                       FROM person
                       WHERE team_id = 2
                         AND id IN
                           (SELECT id
                            FROM person
                            WHERE team_id = 2
                              AND (has(['Negative'], replaceRegexpAll(JSONExtractRaw(properties, '$browser'), '^"|"$', ''))) )
                       GROUP BY id
                       HAVING max(is_deleted) = 0
                       AND (has(['Negative'], replaceRegexpAll(JSONExtractRaw(argMax(person.properties, version), '$browser'), '^"|"$', ''))) SETTINGS optimize_aggregation_in_order = 1) person ON person.id = pdi.person_id
                    WHERE team_id = 2
                      AND event IN ['paid', 'user signed up']
                      AND toTimeZone(timestamp, 'UTC') >= toDateTime('2020-01-01 00:00:00', 'UTC')
                      AND toTimeZone(timestamp, 'UTC') <= toDateTime('2020-01-14 23:59:59', 'UTC')
                      AND (step_0 = 1
                           OR step_1 = 1) ))
              WHERE step_0 = 1 ))
        GROUP BY aggregation_target,
                 steps
        HAVING steps = max_steps)
     WHERE steps IN [1, 2]
     ORDER BY aggregation_target SETTINGS max_ast_elements=1000000,
                                          max_expanded_ast_elements=1000000),
       2 AS target_step
  SELECT funnel_actors.actor_id AS actor_id
  FROM funnel_actors
  WHERE funnel_actors.steps = target_step
  GROUP BY funnel_actors.actor_id
  ORDER BY actor_id
  LIMIT 100
  OFFSET 0
  '''
# ---
# name: TestClickhouseFunnelCorrelation.test_basic_funnel_correlation_with_properties.4
  '''
  WITH funnel_actors AS
    (SELECT aggregation_target AS actor_id , timestamp, steps,
                                                        final_timestamp,
                                                        first_timestamp
     FROM
       (SELECT aggregation_target,
               steps,
               avg(step_1_conversion_time) step_1_average_conversion_time_inner,
               median(step_1_conversion_time) step_1_median_conversion_time_inner ,
               argMax(latest_0, steps) as timestamp,
               argMax(latest_1, steps) as final_timestamp,
               argMax(latest_0, steps) as first_timestamp
        FROM
          (SELECT aggregation_target,
                  steps,
                  max(steps) over (PARTITION BY aggregation_target) as max_steps,
                                  step_1_conversion_time ,
                                  latest_0,
                                  latest_1,
                                  latest_0
           FROM
             (SELECT *,
                     if(latest_0 <= latest_1
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                     if(isNotNull(latest_1)
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
              FROM
                (SELECT aggregation_target, timestamp, step_0,
                                                       latest_0,
                                                       step_1,
                                                       min(latest_1) over (PARTITION by aggregation_target
                                                                           ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
                 FROM
                   (SELECT e.timestamp as timestamp,
                           pdi.person_id as aggregation_target,
                           pdi.person_id as person_id,
                           if(event = 'user signed up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'paid', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1
                    FROM events e
                    INNER JOIN
                      (SELECT distinct_id,
                              argMax(person_id, version) as person_id
                       FROM person_distinct_id2
                       WHERE team_id = 2
                         AND distinct_id IN
                           (SELECT distinct_id
                            FROM events
                            WHERE team_id = 2
                              AND event IN ['paid', 'user signed up']
                              AND toTimeZone(timestamp, 'UTC') >= toDateTime('2020-01-01 00:00:00', 'UTC')
                              AND toTimeZone(timestamp, 'UTC') <= toDateTime('2020-01-14 23:59:59', 'UTC') )
                       GROUP BY distinct_id
                       HAVING argMax(is_deleted, version) = 0) AS pdi ON e.distinct_id = pdi.distinct_id
                    INNER JOIN
                      (SELECT id
                       FROM person
                       WHERE team_id = 2
                         AND id IN
                           (SELECT id
                            FROM person
                            WHERE team_id = 2
                              AND (has(['Negative'], replaceRegexpAll(JSONExtractRaw(properties, '$browser'), '^"|"$', ''))) )
                       GROUP BY id
                       HAVING max(is_deleted) = 0
                       AND (has(['Negative'], replaceRegexpAll(JSONExtractRaw(argMax(person.properties, version), '$browser'), '^"|"$', ''))) SETTINGS optimize_aggregation_in_order = 1) person ON person.id = pdi.person_id
                    WHERE team_id = 2
                      AND event IN ['paid', 'user signed up']
                      AND toTimeZone(timestamp, 'UTC') >= toDateTime('2020-01-01 00:00:00', 'UTC')
                      AND toTimeZone(timestamp, 'UTC') <= toDateTime('2020-01-14 23:59:59', 'UTC')
                      AND (step_0 = 1
                           OR step_1 = 1) ))
              WHERE step_0 = 1 ))
        GROUP BY aggregation_target,
                 steps
        HAVING steps = max_steps)
     WHERE steps IN [1, 2]
     ORDER BY aggregation_target SETTINGS max_ast_elements=1000000,
                                          max_expanded_ast_elements=1000000),
       2 AS target_step
  SELECT funnel_actors.actor_id AS actor_id
  FROM funnel_actors
  WHERE funnel_actors.steps <> target_step
  GROUP BY funnel_actors.actor_id
  ORDER BY actor_id
  LIMIT 100
  OFFSET 0
  '''
# ---
# name: TestClickhouseFunnelCorrelation.test_basic_funnel_correlation_with_properties_materialized
  '''
  WITH funnel_actors as
    (SELECT aggregation_target AS actor_id , timestamp, steps,
                                                        final_timestamp,
                                                        first_timestamp
     FROM
       (SELECT aggregation_target,
               steps,
               avg(step_1_conversion_time) step_1_average_conversion_time_inner,
               median(step_1_conversion_time) step_1_median_conversion_time_inner ,
               argMax(latest_0, steps) as timestamp,
               argMax(latest_1, steps) as final_timestamp,
               argMax(latest_0, steps) as first_timestamp
        FROM
          (SELECT aggregation_target,
                  steps,
                  max(steps) over (PARTITION BY aggregation_target) as max_steps,
                                  step_1_conversion_time ,
                                  latest_0,
                                  latest_1,
                                  latest_0
           FROM
             (SELECT *,
                     if(latest_0 <= latest_1
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                     if(isNotNull(latest_1)
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
              FROM
                (SELECT aggregation_target, timestamp, step_0,
                                                       latest_0,
                                                       step_1,
                                                       min(latest_1) over (PARTITION by aggregation_target
                                                                           ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
                 FROM
                   (SELECT e.timestamp as timestamp,
                           pdi.person_id as aggregation_target,
                           pdi.person_id as person_id,
                           if(event = 'user signed up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'paid', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1
                    FROM events e
                    INNER JOIN
                      (SELECT distinct_id,
                              argMax(person_id, version) as person_id
                       FROM person_distinct_id2
                       WHERE team_id = 2
                         AND distinct_id IN
                           (SELECT distinct_id
                            FROM events
                            WHERE team_id = 2
                              AND event IN ['paid', 'user signed up']
                              AND toTimeZone(timestamp, 'UTC') >= toDateTime('2020-01-01 00:00:00', 'UTC')
                              AND toTimeZone(timestamp, 'UTC') <= toDateTime('2020-01-14 23:59:59', 'UTC') )
                       GROUP BY distinct_id
                       HAVING argMax(is_deleted, version) = 0) AS pdi ON e.distinct_id = pdi.distinct_id
                    WHERE team_id = 2
                      AND event IN ['paid', 'user signed up']
                      AND toTimeZone(timestamp, 'UTC') >= toDateTime('2020-01-01 00:00:00', 'UTC')
                      AND toTimeZone(timestamp, 'UTC') <= toDateTime('2020-01-14 23:59:59', 'UTC')
                      AND (step_0 = 1
                           OR step_1 = 1) ))
              WHERE step_0 = 1 ))
        GROUP BY aggregation_target,
                 steps
        HAVING steps = max_steps)
     WHERE steps IN [1, 2]
     ORDER BY aggregation_target SETTINGS max_ast_elements=1000000,
                                          max_expanded_ast_elements=1000000),
       2 AS target_step
  SELECT concat(prop.1, '::', prop.2) as name,
         countDistinctIf(actor_id, steps = target_step) AS success_count,
         countDistinctIf(actor_id, steps <> target_step) AS failure_count
  FROM
    (SELECT actor_id,
            funnel_actors.steps as steps,
            arrayJoin(arrayZip(['$browser'], ["pmat_$browser"])) as prop
     FROM funnel_actors
     JOIN
       (SELECT id,
               argMax(pmat_$browser, version) as pmat_$browser
        FROM person
        WHERE team_id = 2
        GROUP BY id
        HAVING max(is_deleted) = 0 SETTINGS optimize_aggregation_in_order = 1) person ON person.id = funnel_actors.actor_id) aggregation_target_with_props
  GROUP BY prop.1,
               prop.2
  HAVING prop.1 NOT IN []
  UNION ALL
  SELECT 'Total_Values_In_Query' as name,
         countDistinctIf(actor_id, steps = target_step) AS success_count,
         countDistinctIf(actor_id, steps <> target_step) AS failure_count
  FROM funnel_actors
  '''
# ---
# name: TestClickhouseFunnelCorrelation.test_basic_funnel_correlation_with_properties_materialized.1
  '''
  WITH funnel_actors AS
    (SELECT aggregation_target AS actor_id , timestamp, steps,
                                                        final_timestamp,
                                                        first_timestamp
     FROM
       (SELECT aggregation_target,
               steps,
               avg(step_1_conversion_time) step_1_average_conversion_time_inner,
               median(step_1_conversion_time) step_1_median_conversion_time_inner ,
               argMax(latest_0, steps) as timestamp,
               argMax(latest_1, steps) as final_timestamp,
               argMax(latest_0, steps) as first_timestamp
        FROM
          (SELECT aggregation_target,
                  steps,
                  max(steps) over (PARTITION BY aggregation_target) as max_steps,
                                  step_1_conversion_time ,
                                  latest_0,
                                  latest_1,
                                  latest_0
           FROM
             (SELECT *,
                     if(latest_0 <= latest_1
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                     if(isNotNull(latest_1)
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
              FROM
                (SELECT aggregation_target, timestamp, step_0,
                                                       latest_0,
                                                       step_1,
                                                       min(latest_1) over (PARTITION by aggregation_target
                                                                           ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
                 FROM
                   (SELECT e.timestamp as timestamp,
                           pdi.person_id as aggregation_target,
                           pdi.person_id as person_id,
                           if(event = 'user signed up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'paid', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1
                    FROM events e
                    INNER JOIN
                      (SELECT distinct_id,
                              argMax(person_id, version) as person_id
                       FROM person_distinct_id2
                       WHERE team_id = 2
                         AND distinct_id IN
                           (SELECT distinct_id
                            FROM events
                            WHERE team_id = 2
                              AND event IN ['paid', 'user signed up']
                              AND toTimeZone(timestamp, 'UTC') >= toDateTime('2020-01-01 00:00:00', 'UTC')
                              AND toTimeZone(timestamp, 'UTC') <= toDateTime('2020-01-14 23:59:59', 'UTC') )
                       GROUP BY distinct_id
                       HAVING argMax(is_deleted, version) = 0) AS pdi ON e.distinct_id = pdi.distinct_id
                    INNER JOIN
                      (SELECT id
                       FROM person
                       WHERE team_id = 2
                         AND id IN
                           (SELECT id
                            FROM person
                            WHERE team_id = 2
                              AND (has(['Positive'], "pmat_$browser")) )
                       GROUP BY id
                       HAVING max(is_deleted) = 0
                       AND (has(['Positive'], argMax(person."pmat_$browser", version))) SETTINGS optimize_aggregation_in_order = 1) person ON person.id = pdi.person_id
                    WHERE team_id = 2
                      AND event IN ['paid', 'user signed up']
                      AND toTimeZone(timestamp, 'UTC') >= toDateTime('2020-01-01 00:00:00', 'UTC')
                      AND toTimeZone(timestamp, 'UTC') <= toDateTime('2020-01-14 23:59:59', 'UTC')
                      AND (step_0 = 1
                           OR step_1 = 1) ))
              WHERE step_0 = 1 ))
        GROUP BY aggregation_target,
                 steps
        HAVING steps = max_steps)
     WHERE steps IN [1, 2]
     ORDER BY aggregation_target SETTINGS max_ast_elements=1000000,
                                          max_expanded_ast_elements=1000000),
       2 AS target_step
  SELECT funnel_actors.actor_id AS actor_id
  FROM funnel_actors
  WHERE funnel_actors.steps = target_step
  GROUP BY funnel_actors.actor_id
  ORDER BY actor_id
  LIMIT 100
  OFFSET 0
  '''
# ---
# name: TestClickhouseFunnelCorrelation.test_basic_funnel_correlation_with_properties_materialized.2
  '''
  WITH funnel_actors AS
    (SELECT aggregation_target AS actor_id , timestamp, steps,
                                                        final_timestamp,
                                                        first_timestamp
     FROM
       (SELECT aggregation_target,
               steps,
               avg(step_1_conversion_time) step_1_average_conversion_time_inner,
               median(step_1_conversion_time) step_1_median_conversion_time_inner ,
               argMax(latest_0, steps) as timestamp,
               argMax(latest_1, steps) as final_timestamp,
               argMax(latest_0, steps) as first_timestamp
        FROM
          (SELECT aggregation_target,
                  steps,
                  max(steps) over (PARTITION BY aggregation_target) as max_steps,
                                  step_1_conversion_time ,
                                  latest_0,
                                  latest_1,
                                  latest_0
           FROM
             (SELECT *,
                     if(latest_0 <= latest_1
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                     if(isNotNull(latest_1)
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
              FROM
                (SELECT aggregation_target, timestamp, step_0,
                                                       latest_0,
                                                       step_1,
                                                       min(latest_1) over (PARTITION by aggregation_target
                                                                           ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
                 FROM
                   (SELECT e.timestamp as timestamp,
                           pdi.person_id as aggregation_target,
                           pdi.person_id as person_id,
                           if(event = 'user signed up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'paid', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1
                    FROM events e
                    INNER JOIN
                      (SELECT distinct_id,
                              argMax(person_id, version) as person_id
                       FROM person_distinct_id2
                       WHERE team_id = 2
                         AND distinct_id IN
                           (SELECT distinct_id
                            FROM events
                            WHERE team_id = 2
                              AND event IN ['paid', 'user signed up']
                              AND toTimeZone(timestamp, 'UTC') >= toDateTime('2020-01-01 00:00:00', 'UTC')
                              AND toTimeZone(timestamp, 'UTC') <= toDateTime('2020-01-14 23:59:59', 'UTC') )
                       GROUP BY distinct_id
                       HAVING argMax(is_deleted, version) = 0) AS pdi ON e.distinct_id = pdi.distinct_id
                    INNER JOIN
                      (SELECT id
                       FROM person
                       WHERE team_id = 2
                         AND id IN
                           (SELECT id
                            FROM person
                            WHERE team_id = 2
                              AND (has(['Positive'], "pmat_$browser")) )
                       GROUP BY id
                       HAVING max(is_deleted) = 0
                       AND (has(['Positive'], argMax(person."pmat_$browser", version))) SETTINGS optimize_aggregation_in_order = 1) person ON person.id = pdi.person_id
                    WHERE team_id = 2
                      AND event IN ['paid', 'user signed up']
                      AND toTimeZone(timestamp, 'UTC') >= toDateTime('2020-01-01 00:00:00', 'UTC')
                      AND toTimeZone(timestamp, 'UTC') <= toDateTime('2020-01-14 23:59:59', 'UTC')
                      AND (step_0 = 1
                           OR step_1 = 1) ))
              WHERE step_0 = 1 ))
        GROUP BY aggregation_target,
                 steps
        HAVING steps = max_steps)
     WHERE steps IN [1, 2]
     ORDER BY aggregation_target SETTINGS max_ast_elements=1000000,
                                          max_expanded_ast_elements=1000000),
       2 AS target_step
  SELECT funnel_actors.actor_id AS actor_id
  FROM funnel_actors
  WHERE funnel_actors.steps <> target_step
  GROUP BY funnel_actors.actor_id
  ORDER BY actor_id
  LIMIT 100
  OFFSET 0
  '''
# ---
# name: TestClickhouseFunnelCorrelation.test_basic_funnel_correlation_with_properties_materialized.3
  '''
  WITH funnel_actors AS
    (SELECT aggregation_target AS actor_id , timestamp, steps,
                                                        final_timestamp,
                                                        first_timestamp
     FROM
       (SELECT aggregation_target,
               steps,
               avg(step_1_conversion_time) step_1_average_conversion_time_inner,
               median(step_1_conversion_time) step_1_median_conversion_time_inner ,
               argMax(latest_0, steps) as timestamp,
               argMax(latest_1, steps) as final_timestamp,
               argMax(latest_0, steps) as first_timestamp
        FROM
          (SELECT aggregation_target,
                  steps,
                  max(steps) over (PARTITION BY aggregation_target) as max_steps,
                                  step_1_conversion_time ,
                                  latest_0,
                                  latest_1,
                                  latest_0
           FROM
             (SELECT *,
                     if(latest_0 <= latest_1
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                     if(isNotNull(latest_1)
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
              FROM
                (SELECT aggregation_target, timestamp, step_0,
                                                       latest_0,
                                                       step_1,
                                                       min(latest_1) over (PARTITION by aggregation_target
                                                                           ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
                 FROM
                   (SELECT e.timestamp as timestamp,
                           pdi.person_id as aggregation_target,
                           pdi.person_id as person_id,
                           if(event = 'user signed up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'paid', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1
                    FROM events e
                    INNER JOIN
                      (SELECT distinct_id,
                              argMax(person_id, version) as person_id
                       FROM person_distinct_id2
                       WHERE team_id = 2
                         AND distinct_id IN
                           (SELECT distinct_id
                            FROM events
                            WHERE team_id = 2
                              AND event IN ['paid', 'user signed up']
                              AND toTimeZone(timestamp, 'UTC') >= toDateTime('2020-01-01 00:00:00', 'UTC')
                              AND toTimeZone(timestamp, 'UTC') <= toDateTime('2020-01-14 23:59:59', 'UTC') )
                       GROUP BY distinct_id
                       HAVING argMax(is_deleted, version) = 0) AS pdi ON e.distinct_id = pdi.distinct_id
                    INNER JOIN
                      (SELECT id
                       FROM person
                       WHERE team_id = 2
                         AND id IN
                           (SELECT id
                            FROM person
                            WHERE team_id = 2
                              AND (has(['Negative'], "pmat_$browser")) )
                       GROUP BY id
                       HAVING max(is_deleted) = 0
                       AND (has(['Negative'], argMax(person."pmat_$browser", version))) SETTINGS optimize_aggregation_in_order = 1) person ON person.id = pdi.person_id
                    WHERE team_id = 2
                      AND event IN ['paid', 'user signed up']
                      AND toTimeZone(timestamp, 'UTC') >= toDateTime('2020-01-01 00:00:00', 'UTC')
                      AND toTimeZone(timestamp, 'UTC') <= toDateTime('2020-01-14 23:59:59', 'UTC')
                      AND (step_0 = 1
                           OR step_1 = 1) ))
              WHERE step_0 = 1 ))
        GROUP BY aggregation_target,
                 steps
        HAVING steps = max_steps)
     WHERE steps IN [1, 2]
     ORDER BY aggregation_target SETTINGS max_ast_elements=1000000,
                                          max_expanded_ast_elements=1000000),
       2 AS target_step
  SELECT funnel_actors.actor_id AS actor_id
  FROM funnel_actors
  WHERE funnel_actors.steps = target_step
  GROUP BY funnel_actors.actor_id
  ORDER BY actor_id
  LIMIT 100
  OFFSET 0
  '''
# ---
# name: TestClickhouseFunnelCorrelation.test_basic_funnel_correlation_with_properties_materialized.4
  '''
  WITH funnel_actors AS
    (SELECT aggregation_target AS actor_id , timestamp, steps,
                                                        final_timestamp,
                                                        first_timestamp
     FROM
       (SELECT aggregation_target,
               steps,
               avg(step_1_conversion_time) step_1_average_conversion_time_inner,
               median(step_1_conversion_time) step_1_median_conversion_time_inner ,
               argMax(latest_0, steps) as timestamp,
               argMax(latest_1, steps) as final_timestamp,
               argMax(latest_0, steps) as first_timestamp
        FROM
          (SELECT aggregation_target,
                  steps,
                  max(steps) over (PARTITION BY aggregation_target) as max_steps,
                                  step_1_conversion_time ,
                                  latest_0,
                                  latest_1,
                                  latest_0
           FROM
             (SELECT *,
                     if(latest_0 <= latest_1
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                     if(isNotNull(latest_1)
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
              FROM
                (SELECT aggregation_target, timestamp, step_0,
                                                       latest_0,
                                                       step_1,
                                                       min(latest_1) over (PARTITION by aggregation_target
                                                                           ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
                 FROM
                   (SELECT e.timestamp as timestamp,
                           pdi.person_id as aggregation_target,
                           pdi.person_id as person_id,
                           if(event = 'user signed up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'paid', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1
                    FROM events e
                    INNER JOIN
                      (SELECT distinct_id,
                              argMax(person_id, version) as person_id
                       FROM person_distinct_id2
                       WHERE team_id = 2
                         AND distinct_id IN
                           (SELECT distinct_id
                            FROM events
                            WHERE team_id = 2
                              AND event IN ['paid', 'user signed up']
                              AND toTimeZone(timestamp, 'UTC') >= toDateTime('2020-01-01 00:00:00', 'UTC')
                              AND toTimeZone(timestamp, 'UTC') <= toDateTime('2020-01-14 23:59:59', 'UTC') )
                       GROUP BY distinct_id
                       HAVING argMax(is_deleted, version) = 0) AS pdi ON e.distinct_id = pdi.distinct_id
                    INNER JOIN
                      (SELECT id
                       FROM person
                       WHERE team_id = 2
                         AND id IN
                           (SELECT id
                            FROM person
                            WHERE team_id = 2
                              AND (has(['Negative'], "pmat_$browser")) )
                       GROUP BY id
                       HAVING max(is_deleted) = 0
                       AND (has(['Negative'], argMax(person."pmat_$browser", version))) SETTINGS optimize_aggregation_in_order = 1) person ON person.id = pdi.person_id
                    WHERE team_id = 2
                      AND event IN ['paid', 'user signed up']
                      AND toTimeZone(timestamp, 'UTC') >= toDateTime('2020-01-01 00:00:00', 'UTC')
                      AND toTimeZone(timestamp, 'UTC') <= toDateTime('2020-01-14 23:59:59', 'UTC')
                      AND (step_0 = 1
                           OR step_1 = 1) ))
              WHERE step_0 = 1 ))
        GROUP BY aggregation_target,
                 steps
        HAVING steps = max_steps)
     WHERE steps IN [1, 2]
     ORDER BY aggregation_target SETTINGS max_ast_elements=1000000,
                                          max_expanded_ast_elements=1000000),
       2 AS target_step
  SELECT funnel_actors.actor_id AS actor_id
  FROM funnel_actors
  WHERE funnel_actors.steps <> target_step
  GROUP BY funnel_actors.actor_id
  ORDER BY actor_id
  LIMIT 100
  OFFSET 0
  '''
# ---
# name: TestClickhouseFunnelCorrelation.test_funnel_correlation_with_event_properties_and_groups
  '''
  WITH funnel_actors as
    (SELECT aggregation_target AS actor_id , timestamp, steps,
                                                        final_timestamp,
                                                        first_timestamp
     FROM
       (SELECT aggregation_target,
               steps,
               avg(step_1_conversion_time) step_1_average_conversion_time_inner,
               median(step_1_conversion_time) step_1_median_conversion_time_inner ,
               argMax(latest_0, steps) as timestamp,
               argMax(latest_1, steps) as final_timestamp,
               argMax(latest_0, steps) as first_timestamp
        FROM
          (SELECT aggregation_target,
                  steps,
                  max(steps) over (PARTITION BY aggregation_target) as max_steps,
                                  step_1_conversion_time ,
                                  latest_0,
                                  latest_1,
                                  latest_0
           FROM
             (SELECT *,
                     if(latest_0 <= latest_1
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                     if(isNotNull(latest_1)
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
              FROM
                (SELECT aggregation_target, timestamp, step_0,
                                                       latest_0,
                                                       step_1,
                                                       min(latest_1) over (PARTITION by aggregation_target
                                                                           ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
                 FROM
                   (SELECT e.timestamp as timestamp,
                           e."$group_1" as aggregation_target,
                           if(event = 'user signed up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'paid', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1
                    FROM events e
                    WHERE team_id = 2
                      AND event IN ['paid', 'user signed up']
                      AND toTimeZone(timestamp, 'UTC') >= toDateTime('2020-01-01 00:00:00', 'UTC')
                      AND toTimeZone(timestamp, 'UTC') <= toDateTime('2020-01-14 23:59:59', 'UTC')
                      AND (step_0 = 1
                           OR step_1 = 1) ))
              WHERE step_0 = 1 ))
        GROUP BY aggregation_target,
                 steps
        HAVING steps = max_steps)
     WHERE steps IN [1, 2]
     ORDER BY aggregation_target SETTINGS max_ast_elements=1000000,
                                          max_expanded_ast_elements=1000000),
       toDateTime('2020-01-14 23:59:59', 'UTC') AS date_to,
       toDateTime('2020-01-01 00:00:00', 'UTC') AS date_from,
       2 AS target_step,
       ['paid', 'user signed up'] as funnel_step_names
  SELECT concat(event_name, '::', prop.1, '::', prop.2) as name,
         countDistinctIf(actor_id, steps = target_step) as success_count,
         countDistinctIf(actor_id, steps <> target_step) as failure_count
  FROM
    (SELECT actors.actor_id as actor_id,
            actors.steps as steps,
            events.event as event_name,
            arrayJoin(JSONExtractKeysAndValues(properties, 'String')) as prop
     FROM events AS event
     JOIN funnel_actors AS actors ON actors.actor_id = events.$group_1
     WHERE toTimeZone(toDateTime(event.timestamp), 'UTC') >= date_from
       AND toTimeZone(toDateTime(event.timestamp), 'UTC') < date_to
       AND event.team_id = 2
       AND toTimeZone(toDateTime(event.timestamp), 'UTC') > actors.first_timestamp
       AND toTimeZone(toDateTime(event.timestamp), 'UTC') < COALESCE(actors.final_timestamp, actors.first_timestamp + INTERVAL 14 DAY, date_to)
       AND event.event NOT IN funnel_step_names
       AND event.event IN ['positively_related', 'negatively_related'] )
  GROUP BY name
  HAVING (success_count + failure_count) > 2
  AND prop.1 NOT IN []
  UNION ALL
  SELECT 'Total_Values_In_Query' as name,
         countDistinctIf(actors.actor_id, actors.steps = target_step) AS success_count,
         countDistinctIf(actors.actor_id, actors.steps <> target_step) AS failure_count
  FROM funnel_actors AS actors
  '''
# ---
# name: TestClickhouseFunnelCorrelation.test_funnel_correlation_with_event_properties_and_groups_materialized
  '''
  WITH funnel_actors as
    (SELECT aggregation_target AS actor_id , timestamp, steps,
                                                        final_timestamp,
                                                        first_timestamp
     FROM
       (SELECT aggregation_target,
               steps,
               avg(step_1_conversion_time) step_1_average_conversion_time_inner,
               median(step_1_conversion_time) step_1_median_conversion_time_inner ,
               argMax(latest_0, steps) as timestamp,
               argMax(latest_1, steps) as final_timestamp,
               argMax(latest_0, steps) as first_timestamp
        FROM
          (SELECT aggregation_target,
                  steps,
                  max(steps) over (PARTITION BY aggregation_target) as max_steps,
                                  step_1_conversion_time ,
                                  latest_0,
                                  latest_1,
                                  latest_0
           FROM
             (SELECT *,
                     if(latest_0 <= latest_1
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                     if(isNotNull(latest_1)
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
              FROM
                (SELECT aggregation_target, timestamp, step_0,
                                                       latest_0,
                                                       step_1,
                                                       min(latest_1) over (PARTITION by aggregation_target
                                                                           ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
                 FROM
                   (SELECT e.timestamp as timestamp,
                           e."$group_1" as aggregation_target,
                           if(event = 'user signed up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'paid', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1
                    FROM events e
                    WHERE team_id = 2
                      AND event IN ['paid', 'user signed up']
                      AND toTimeZone(timestamp, 'UTC') >= toDateTime('2020-01-01 00:00:00', 'UTC')
                      AND toTimeZone(timestamp, 'UTC') <= toDateTime('2020-01-14 23:59:59', 'UTC')
                      AND (step_0 = 1
                           OR step_1 = 1) ))
              WHERE step_0 = 1 ))
        GROUP BY aggregation_target,
                 steps
        HAVING steps = max_steps)
     WHERE steps IN [1, 2]
     ORDER BY aggregation_target SETTINGS max_ast_elements=1000000,
                                          max_expanded_ast_elements=1000000),
       toDateTime('2020-01-14 23:59:59', 'UTC') AS date_to,
       toDateTime('2020-01-01 00:00:00', 'UTC') AS date_from,
       2 AS target_step,
       ['paid', 'user signed up'] as funnel_step_names
  SELECT concat(event_name, '::', prop.1, '::', prop.2) as name,
         countDistinctIf(actor_id, steps = target_step) as success_count,
         countDistinctIf(actor_id, steps <> target_step) as failure_count
  FROM
    (SELECT actors.actor_id as actor_id,
            actors.steps as steps,
            events.event as event_name,
            arrayJoin(JSONExtractKeysAndValues(properties, 'String')) as prop
     FROM events AS event
     JOIN funnel_actors AS actors ON actors.actor_id = events.$group_1
     WHERE toTimeZone(toDateTime(event.timestamp), 'UTC') >= date_from
       AND toTimeZone(toDateTime(event.timestamp), 'UTC') < date_to
       AND event.team_id = 2
       AND toTimeZone(toDateTime(event.timestamp), 'UTC') > actors.first_timestamp
       AND toTimeZone(toDateTime(event.timestamp), 'UTC') < COALESCE(actors.final_timestamp, actors.first_timestamp + INTERVAL 14 DAY, date_to)
       AND event.event NOT IN funnel_step_names
       AND event.event IN ['positively_related', 'negatively_related'] )
  GROUP BY name
  HAVING (success_count + failure_count) > 2
  AND prop.1 NOT IN []
  UNION ALL
  SELECT 'Total_Values_In_Query' as name,
         countDistinctIf(actors.actor_id, actors.steps = target_step) AS success_count,
         countDistinctIf(actors.actor_id, actors.steps <> target_step) AS failure_count
  FROM funnel_actors AS actors
  '''
# ---
# name: TestClickhouseFunnelCorrelation.test_funnel_correlation_with_events_and_groups
  '''
  WITH funnel_actors as
    (SELECT aggregation_target AS actor_id , timestamp, steps,
                                                        final_timestamp,
                                                        first_timestamp
     FROM
       (SELECT aggregation_target,
               steps,
               avg(step_1_conversion_time) step_1_average_conversion_time_inner,
               median(step_1_conversion_time) step_1_median_conversion_time_inner ,
               argMax(latest_0, steps) as timestamp,
               argMax(latest_1, steps) as final_timestamp,
               argMax(latest_0, steps) as first_timestamp
        FROM
          (SELECT aggregation_target,
                  steps,
                  max(steps) over (PARTITION BY aggregation_target) as max_steps,
                                  step_1_conversion_time ,
                                  latest_0,
                                  latest_1,
                                  latest_0
           FROM
             (SELECT *,
                     if(latest_0 <= latest_1
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                     if(isNotNull(latest_1)
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
              FROM
                (SELECT aggregation_target, timestamp, step_0,
                                                       latest_0,
                                                       step_1,
                                                       min(latest_1) over (PARTITION by aggregation_target
                                                                           ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
                 FROM
                   (SELECT e.timestamp as timestamp,
                           e."$group_0" as aggregation_target,
                           if(event = 'user signed up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'paid', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1
                    FROM events e
                    WHERE team_id = 2
                      AND event IN ['paid', 'user signed up']
                      AND toTimeZone(timestamp, 'UTC') >= toDateTime('2020-01-01 00:00:00', 'UTC')
                      AND toTimeZone(timestamp, 'UTC') <= toDateTime('2020-01-14 23:59:59', 'UTC')
                      AND (step_0 = 1
                           OR step_1 = 1) ))
              WHERE step_0 = 1 ))
        GROUP BY aggregation_target,
                 steps
        HAVING steps = max_steps)
     WHERE steps IN [1, 2]
     ORDER BY aggregation_target SETTINGS max_ast_elements=1000000,
                                          max_expanded_ast_elements=1000000),
       toDateTime('2020-01-14 23:59:59', 'UTC') AS date_to,
       toDateTime('2020-01-01 00:00:00', 'UTC') AS date_from,
       2 AS target_step,
       ['paid', 'user signed up'] as funnel_step_names
  SELECT event.event AS name,
         countDistinctIf(actors.actor_id, actors.steps = target_step) AS success_count,
         countDistinctIf(actors.actor_id, actors.steps <> target_step) AS failure_count
  FROM events AS event
  JOIN funnel_actors AS actors ON actors.actor_id = events.$group_0
  WHERE toTimeZone(toDateTime(event.timestamp), 'UTC') >= date_from
    AND toTimeZone(toDateTime(event.timestamp), 'UTC') < date_to
    AND event.team_id = 2
    AND toTimeZone(toDateTime(event.timestamp), 'UTC') > actors.first_timestamp
    AND toTimeZone(toDateTime(event.timestamp), 'UTC') < COALESCE(actors.final_timestamp, actors.first_timestamp + INTERVAL 14 DAY, date_to)
    AND event.event NOT IN funnel_step_names
    AND event.event NOT IN []
  GROUP BY name
  UNION ALL
  SELECT 'Total_Values_In_Query' as name,
         countDistinctIf(actors.actor_id, actors.steps = target_step) AS success_count,
         countDistinctIf(actors.actor_id, actors.steps <> target_step) AS failure_count
  FROM funnel_actors AS actors
  '''
# ---
# name: TestClickhouseFunnelCorrelation.test_funnel_correlation_with_events_and_groups.1
  '''
  WITH funnel_actors as
    (SELECT aggregation_target AS actor_id , timestamp, steps,
                                                        final_timestamp,
                                                        first_timestamp
     FROM
       (SELECT aggregation_target,
               steps,
               avg(step_1_conversion_time) step_1_average_conversion_time_inner,
               median(step_1_conversion_time) step_1_median_conversion_time_inner ,
               argMax(latest_0, steps) as timestamp,
               argMax(latest_1, steps) as final_timestamp,
               argMax(latest_0, steps) as first_timestamp
        FROM
          (SELECT aggregation_target,
                  steps,
                  max(steps) over (PARTITION BY aggregation_target) as max_steps,
                                  step_1_conversion_time ,
                                  latest_0,
                                  latest_1,
                                  latest_0
           FROM
             (SELECT *,
                     if(latest_0 <= latest_1
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                     if(isNotNull(latest_1)
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
              FROM
                (SELECT aggregation_target, timestamp, step_0,
                                                       latest_0,
                                                       step_1,
                                                       min(latest_1) over (PARTITION by aggregation_target
                                                                           ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
                 FROM
                   (SELECT e.timestamp as timestamp,
                           e."$group_0" as aggregation_target,
                           if(event = 'user signed up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'paid', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1
                    FROM events e
                    WHERE team_id = 2
                      AND event IN ['paid', 'user signed up']
                      AND toTimeZone(timestamp, 'UTC') >= toDateTime('2020-01-01 00:00:00', 'UTC')
                      AND toTimeZone(timestamp, 'UTC') <= toDateTime('2020-01-14 23:59:59', 'UTC')
                      AND (step_0 = 1
                           OR step_1 = 1) ))
              WHERE step_0 = 1 ))
        GROUP BY aggregation_target,
                 steps
        HAVING steps = max_steps)
     WHERE steps IN [1, 2]
     ORDER BY aggregation_target SETTINGS max_ast_elements=1000000,
                                          max_expanded_ast_elements=1000000),
       toDateTime('2020-01-14 23:59:59', 'UTC') AS date_to,
       toDateTime('2020-01-01 00:00:00', 'UTC') AS date_from,
       2 AS target_step,
       ['user signed up', 'paid'] as funnel_step_names
  SELECT actors.actor_id AS actor_id
  FROM events AS event
  JOIN funnel_actors AS actors ON actors.actor_id = events.$group_0
  WHERE toTimeZone(toDateTime(event.timestamp), 'UTC') >= date_from
    AND toTimeZone(toDateTime(event.timestamp), 'UTC') < date_to
    AND event.team_id = 2
    AND toTimeZone(toDateTime(event.timestamp), 'UTC') > actors.first_timestamp
    AND toTimeZone(toDateTime(event.timestamp), 'UTC') < COALESCE(actors.final_timestamp, actors.first_timestamp + INTERVAL 14 DAY, date_to)
    AND event.event NOT IN funnel_step_names
    AND event.event = 'positively_related'
    AND actors.steps = target_step
  GROUP BY actor_id
  ORDER BY actor_id
  LIMIT 100
  OFFSET 0
  '''
# ---
# name: TestClickhouseFunnelCorrelation.test_funnel_correlation_with_events_and_groups.2
  '''
  WITH funnel_actors as
    (SELECT aggregation_target AS actor_id , timestamp, steps,
                                                        final_timestamp,
                                                        first_timestamp
     FROM
       (SELECT aggregation_target,
               steps,
               avg(step_1_conversion_time) step_1_average_conversion_time_inner,
               median(step_1_conversion_time) step_1_median_conversion_time_inner ,
               argMax(latest_0, steps) as timestamp,
               argMax(latest_1, steps) as final_timestamp,
               argMax(latest_0, steps) as first_timestamp
        FROM
          (SELECT aggregation_target,
                  steps,
                  max(steps) over (PARTITION BY aggregation_target) as max_steps,
                                  step_1_conversion_time ,
                                  latest_0,
                                  latest_1,
                                  latest_0
           FROM
             (SELECT *,
                     if(latest_0 <= latest_1
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                     if(isNotNull(latest_1)
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
              FROM
                (SELECT aggregation_target, timestamp, step_0,
                                                       latest_0,
                                                       step_1,
                                                       min(latest_1) over (PARTITION by aggregation_target
                                                                           ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
                 FROM
                   (SELECT e.timestamp as timestamp,
                           e."$group_0" as aggregation_target,
                           if(event = 'user signed up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'paid', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1
                    FROM events e
                    WHERE team_id = 2
                      AND event IN ['paid', 'user signed up']
                      AND toTimeZone(timestamp, 'UTC') >= toDateTime('2020-01-01 00:00:00', 'UTC')
                      AND toTimeZone(timestamp, 'UTC') <= toDateTime('2020-01-14 23:59:59', 'UTC')
                      AND (step_0 = 1
                           OR step_1 = 1) ))
              WHERE step_0 = 1 ))
        GROUP BY aggregation_target,
                 steps
        HAVING steps = max_steps)
     WHERE steps IN [1, 2]
     ORDER BY aggregation_target SETTINGS max_ast_elements=1000000,
                                          max_expanded_ast_elements=1000000),
       toDateTime('2020-01-14 23:59:59', 'UTC') AS date_to,
       toDateTime('2020-01-01 00:00:00', 'UTC') AS date_from,
       2 AS target_step,
       ['user signed up', 'paid'] as funnel_step_names
  SELECT actors.actor_id AS actor_id
  FROM events AS event
  JOIN funnel_actors AS actors ON actors.actor_id = events.$group_0
  WHERE toTimeZone(toDateTime(event.timestamp), 'UTC') >= date_from
    AND toTimeZone(toDateTime(event.timestamp), 'UTC') < date_to
    AND event.team_id = 2
    AND toTimeZone(toDateTime(event.timestamp), 'UTC') > actors.first_timestamp
    AND toTimeZone(toDateTime(event.timestamp), 'UTC') < COALESCE(actors.final_timestamp, actors.first_timestamp + INTERVAL 14 DAY, date_to)
    AND event.event NOT IN funnel_step_names
    AND event.event = 'positively_related'
    AND actors.steps <> target_step
  GROUP BY actor_id
  ORDER BY actor_id
  LIMIT 100
  OFFSET 0
  '''
# ---
# name: TestClickhouseFunnelCorrelation.test_funnel_correlation_with_events_and_groups.3
  '''
  WITH funnel_actors as
    (SELECT aggregation_target AS actor_id , timestamp, steps,
                                                        final_timestamp,
                                                        first_timestamp
     FROM
       (SELECT aggregation_target,
               steps,
               avg(step_1_conversion_time) step_1_average_conversion_time_inner,
               median(step_1_conversion_time) step_1_median_conversion_time_inner ,
               argMax(latest_0, steps) as timestamp,
               argMax(latest_1, steps) as final_timestamp,
               argMax(latest_0, steps) as first_timestamp
        FROM
          (SELECT aggregation_target,
                  steps,
                  max(steps) over (PARTITION BY aggregation_target) as max_steps,
                                  step_1_conversion_time ,
                                  latest_0,
                                  latest_1,
                                  latest_0
           FROM
             (SELECT *,
                     if(latest_0 <= latest_1
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                     if(isNotNull(latest_1)
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
              FROM
                (SELECT aggregation_target, timestamp, step_0,
                                                       latest_0,
                                                       step_1,
                                                       min(latest_1) over (PARTITION by aggregation_target
                                                                           ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
                 FROM
                   (SELECT e.timestamp as timestamp,
                           e."$group_0" as aggregation_target,
                           if(event = 'user signed up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'paid', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1
                    FROM events e
                    WHERE team_id = 2
                      AND event IN ['paid', 'user signed up']
                      AND toTimeZone(timestamp, 'UTC') >= toDateTime('2020-01-01 00:00:00', 'UTC')
                      AND toTimeZone(timestamp, 'UTC') <= toDateTime('2020-01-14 23:59:59', 'UTC')
                      AND (step_0 = 1
                           OR step_1 = 1) ))
              WHERE step_0 = 1 ))
        GROUP BY aggregation_target,
                 steps
        HAVING steps = max_steps)
     WHERE steps IN [1, 2]
     ORDER BY aggregation_target SETTINGS max_ast_elements=1000000,
                                          max_expanded_ast_elements=1000000),
       toDateTime('2020-01-14 23:59:59', 'UTC') AS date_to,
       toDateTime('2020-01-01 00:00:00', 'UTC') AS date_from,
       2 AS target_step,
       ['user signed up', 'paid'] as funnel_step_names
  SELECT actors.actor_id AS actor_id
  FROM events AS event
  JOIN funnel_actors AS actors ON actors.actor_id = events.$group_0
  WHERE toTimeZone(toDateTime(event.timestamp), 'UTC') >= date_from
    AND toTimeZone(toDateTime(event.timestamp), 'UTC') < date_to
    AND event.team_id = 2
    AND toTimeZone(toDateTime(event.timestamp), 'UTC') > actors.first_timestamp
    AND toTimeZone(toDateTime(event.timestamp), 'UTC') < COALESCE(actors.final_timestamp, actors.first_timestamp + INTERVAL 14 DAY, date_to)
    AND event.event NOT IN funnel_step_names
    AND event.event = 'negatively_related'
    AND actors.steps = target_step
  GROUP BY actor_id
  ORDER BY actor_id
  LIMIT 100
  OFFSET 0
  '''
# ---
# name: TestClickhouseFunnelCorrelation.test_funnel_correlation_with_events_and_groups.4
  '''
  WITH funnel_actors as
    (SELECT aggregation_target AS actor_id , timestamp, steps,
                                                        final_timestamp,
                                                        first_timestamp
     FROM
       (SELECT aggregation_target,
               steps,
               avg(step_1_conversion_time) step_1_average_conversion_time_inner,
               median(step_1_conversion_time) step_1_median_conversion_time_inner ,
               argMax(latest_0, steps) as timestamp,
               argMax(latest_1, steps) as final_timestamp,
               argMax(latest_0, steps) as first_timestamp
        FROM
          (SELECT aggregation_target,
                  steps,
                  max(steps) over (PARTITION BY aggregation_target) as max_steps,
                                  step_1_conversion_time ,
                                  latest_0,
                                  latest_1,
                                  latest_0
           FROM
             (SELECT *,
                     if(latest_0 <= latest_1
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                     if(isNotNull(latest_1)
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
              FROM
                (SELECT aggregation_target, timestamp, step_0,
                                                       latest_0,
                                                       step_1,
                                                       min(latest_1) over (PARTITION by aggregation_target
                                                                           ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
                 FROM
                   (SELECT e.timestamp as timestamp,
                           e."$group_0" as aggregation_target,
                           if(event = 'user signed up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'paid', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1
                    FROM events e
                    WHERE team_id = 2
                      AND event IN ['paid', 'user signed up']
                      AND toTimeZone(timestamp, 'UTC') >= toDateTime('2020-01-01 00:00:00', 'UTC')
                      AND toTimeZone(timestamp, 'UTC') <= toDateTime('2020-01-14 23:59:59', 'UTC')
                      AND (step_0 = 1
                           OR step_1 = 1) ))
              WHERE step_0 = 1 ))
        GROUP BY aggregation_target,
                 steps
        HAVING steps = max_steps)
     WHERE steps IN [1, 2]
     ORDER BY aggregation_target SETTINGS max_ast_elements=1000000,
                                          max_expanded_ast_elements=1000000),
       toDateTime('2020-01-14 23:59:59', 'UTC') AS date_to,
       toDateTime('2020-01-01 00:00:00', 'UTC') AS date_from,
       2 AS target_step,
       ['user signed up', 'paid'] as funnel_step_names
  SELECT actors.actor_id AS actor_id
  FROM events AS event
  JOIN funnel_actors AS actors ON actors.actor_id = events.$group_0
  WHERE toTimeZone(toDateTime(event.timestamp), 'UTC') >= date_from
    AND toTimeZone(toDateTime(event.timestamp), 'UTC') < date_to
    AND event.team_id = 2
    AND toTimeZone(toDateTime(event.timestamp), 'UTC') > actors.first_timestamp
    AND toTimeZone(toDateTime(event.timestamp), 'UTC') < COALESCE(actors.final_timestamp, actors.first_timestamp + INTERVAL 14 DAY, date_to)
    AND event.event NOT IN funnel_step_names
    AND event.event = 'negatively_related'
    AND actors.steps <> target_step
  GROUP BY actor_id
  ORDER BY actor_id
  LIMIT 100
  OFFSET 0
  '''
# ---
# name: TestClickhouseFunnelCorrelation.test_funnel_correlation_with_events_and_groups.5
  '''
  WITH funnel_actors as
    (SELECT aggregation_target AS actor_id , timestamp, steps,
                                                        final_timestamp,
                                                        first_timestamp
     FROM
       (SELECT aggregation_target,
               steps,
               avg(step_1_conversion_time) step_1_average_conversion_time_inner,
               median(step_1_conversion_time) step_1_median_conversion_time_inner ,
               argMax(latest_0, steps) as timestamp,
               argMax(latest_1, steps) as final_timestamp,
               argMax(latest_0, steps) as first_timestamp
        FROM
          (SELECT aggregation_target,
                  steps,
                  max(steps) over (PARTITION BY aggregation_target) as max_steps,
                                  step_1_conversion_time ,
                                  latest_0,
                                  latest_1,
                                  latest_0
           FROM
             (SELECT *,
                     if(latest_0 <= latest_1
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                     if(isNotNull(latest_1)
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
              FROM
                (SELECT aggregation_target, timestamp, step_0,
                                                       latest_0,
                                                       step_1,
                                                       min(latest_1) over (PARTITION by aggregation_target
                                                                           ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
                 FROM
                   (SELECT e.timestamp as timestamp,
                           e."$group_0" as aggregation_target,
                           if(event = 'user signed up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'paid', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1
                    FROM events e
                    LEFT JOIN
                      (SELECT group_key,
                              argMax(group_properties, _timestamp) AS group_properties_0
                       FROM groups
                       WHERE team_id = 2
                         AND group_type_index = 0
                       GROUP BY group_key) groups_0 ON "$group_0" == groups_0.group_key
                    WHERE team_id = 2
                      AND event IN ['paid', 'user signed up']
                      AND toTimeZone(timestamp, 'UTC') >= toDateTime('2020-01-01 00:00:00', 'UTC')
                      AND toTimeZone(timestamp, 'UTC') <= toDateTime('2020-01-14 23:59:59', 'UTC')
                      AND (has(['finance'], replaceRegexpAll(JSONExtractRaw(group_properties_0, 'industry'), '^"|"$', '')))
                      AND (step_0 = 1
                           OR step_1 = 1) ))
              WHERE step_0 = 1 ))
        GROUP BY aggregation_target,
                 steps
        HAVING steps = max_steps)
     WHERE steps IN [1, 2]
     ORDER BY aggregation_target SETTINGS max_ast_elements=1000000,
                                          max_expanded_ast_elements=1000000),
       toDateTime('2020-01-14 23:59:59', 'UTC') AS date_to,
       toDateTime('2020-01-01 00:00:00', 'UTC') AS date_from,
       2 AS target_step,
       ['paid', 'user signed up'] as funnel_step_names
  SELECT event.event AS name,
         countDistinctIf(actors.actor_id, actors.steps = target_step) AS success_count,
         countDistinctIf(actors.actor_id, actors.steps <> target_step) AS failure_count
  FROM events AS event
  JOIN funnel_actors AS actors ON actors.actor_id = events.$group_0
  WHERE toTimeZone(toDateTime(event.timestamp), 'UTC') >= date_from
    AND toTimeZone(toDateTime(event.timestamp), 'UTC') < date_to
    AND event.team_id = 2
    AND toTimeZone(toDateTime(event.timestamp), 'UTC') > actors.first_timestamp
    AND toTimeZone(toDateTime(event.timestamp), 'UTC') < COALESCE(actors.final_timestamp, actors.first_timestamp + INTERVAL 14 DAY, date_to)
    AND event.event NOT IN funnel_step_names
    AND event.event NOT IN []
  GROUP BY name
  UNION ALL
  SELECT 'Total_Values_In_Query' as name,
         countDistinctIf(actors.actor_id, actors.steps = target_step) AS success_count,
         countDistinctIf(actors.actor_id, actors.steps <> target_step) AS failure_count
  FROM funnel_actors AS actors
  '''
# ---
# name: TestClickhouseFunnelCorrelation.test_funnel_correlation_with_events_and_groups.6
  '''
  WITH funnel_actors as
    (SELECT aggregation_target AS actor_id , timestamp, steps,
                                                        final_timestamp,
                                                        first_timestamp
     FROM
       (SELECT aggregation_target,
               steps,
               avg(step_1_conversion_time) step_1_average_conversion_time_inner,
               median(step_1_conversion_time) step_1_median_conversion_time_inner ,
               argMax(latest_0, steps) as timestamp,
               argMax(latest_1, steps) as final_timestamp,
               argMax(latest_0, steps) as first_timestamp
        FROM
          (SELECT aggregation_target,
                  steps,
                  max(steps) over (PARTITION BY aggregation_target) as max_steps,
                                  step_1_conversion_time ,
                                  latest_0,
                                  latest_1,
                                  latest_0
           FROM
             (SELECT *,
                     if(latest_0 <= latest_1
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                     if(isNotNull(latest_1)
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
              FROM
                (SELECT aggregation_target, timestamp, step_0,
                                                       latest_0,
                                                       step_1,
                                                       min(latest_1) over (PARTITION by aggregation_target
                                                                           ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
                 FROM
                   (SELECT e.timestamp as timestamp,
                           e."$group_0" as aggregation_target,
                           if(event = 'user signed up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'paid', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1
                    FROM events e
                    LEFT JOIN
                      (SELECT group_key,
                              argMax(group_properties, _timestamp) AS group_properties_0
                       FROM groups
                       WHERE team_id = 2
                         AND group_type_index = 0
                       GROUP BY group_key) groups_0 ON "$group_0" == groups_0.group_key
                    WHERE team_id = 2
                      AND event IN ['paid', 'user signed up']
                      AND toTimeZone(timestamp, 'UTC') >= toDateTime('2020-01-01 00:00:00', 'UTC')
                      AND toTimeZone(timestamp, 'UTC') <= toDateTime('2020-01-14 23:59:59', 'UTC')
                      AND (has(['finance'], replaceRegexpAll(JSONExtractRaw(group_properties_0, 'industry'), '^"|"$', '')))
                      AND (step_0 = 1
                           OR step_1 = 1) ))
              WHERE step_0 = 1 ))
        GROUP BY aggregation_target,
                 steps
        HAVING steps = max_steps)
     WHERE steps IN [1, 2]
     ORDER BY aggregation_target SETTINGS max_ast_elements=1000000,
                                          max_expanded_ast_elements=1000000),
       toDateTime('2020-01-14 23:59:59', 'UTC') AS date_to,
       toDateTime('2020-01-01 00:00:00', 'UTC') AS date_from,
       2 AS target_step,
       ['user signed up', 'paid'] as funnel_step_names
  SELECT actors.actor_id AS actor_id
  FROM events AS event
  JOIN funnel_actors AS actors ON actors.actor_id = events.$group_0
  WHERE toTimeZone(toDateTime(event.timestamp), 'UTC') >= date_from
    AND toTimeZone(toDateTime(event.timestamp), 'UTC') < date_to
    AND event.team_id = 2
    AND toTimeZone(toDateTime(event.timestamp), 'UTC') > actors.first_timestamp
    AND toTimeZone(toDateTime(event.timestamp), 'UTC') < COALESCE(actors.final_timestamp, actors.first_timestamp + INTERVAL 14 DAY, date_to)
    AND event.event NOT IN funnel_step_names
    AND event.event = 'negatively_related'
    AND actors.steps = target_step
  GROUP BY actor_id
  ORDER BY actor_id
  LIMIT 100
  OFFSET 0
  '''
# ---
# name: TestClickhouseFunnelCorrelation.test_funnel_correlation_with_events_and_groups.7
  '''
  WITH funnel_actors as
    (SELECT aggregation_target AS actor_id , timestamp, steps,
                                                        final_timestamp,
                                                        first_timestamp
     FROM
       (SELECT aggregation_target,
               steps,
               avg(step_1_conversion_time) step_1_average_conversion_time_inner,
               median(step_1_conversion_time) step_1_median_conversion_time_inner ,
               argMax(latest_0, steps) as timestamp,
               argMax(latest_1, steps) as final_timestamp,
               argMax(latest_0, steps) as first_timestamp
        FROM
          (SELECT aggregation_target,
                  steps,
                  max(steps) over (PARTITION BY aggregation_target) as max_steps,
                                  step_1_conversion_time ,
                                  latest_0,
                                  latest_1,
                                  latest_0
           FROM
             (SELECT *,
                     if(latest_0 <= latest_1
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                     if(isNotNull(latest_1)
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
              FROM
                (SELECT aggregation_target, timestamp, step_0,
                                                       latest_0,
                                                       step_1,
                                                       min(latest_1) over (PARTITION by aggregation_target
                                                                           ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
                 FROM
                   (SELECT e.timestamp as timestamp,
                           e."$group_0" as aggregation_target,
                           if(event = 'user signed up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'paid', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1
                    FROM events e
                    LEFT JOIN
                      (SELECT group_key,
                              argMax(group_properties, _timestamp) AS group_properties_0
                       FROM groups
                       WHERE team_id = 2
                         AND group_type_index = 0
                       GROUP BY group_key) groups_0 ON "$group_0" == groups_0.group_key
                    WHERE team_id = 2
                      AND event IN ['paid', 'user signed up']
                      AND toTimeZone(timestamp, 'UTC') >= toDateTime('2020-01-01 00:00:00', 'UTC')
                      AND toTimeZone(timestamp, 'UTC') <= toDateTime('2020-01-14 23:59:59', 'UTC')
                      AND (has(['finance'], replaceRegexpAll(JSONExtractRaw(group_properties_0, 'industry'), '^"|"$', '')))
                      AND (step_0 = 1
                           OR step_1 = 1) ))
              WHERE step_0 = 1 ))
        GROUP BY aggregation_target,
                 steps
        HAVING steps = max_steps)
     WHERE steps IN [1, 2]
     ORDER BY aggregation_target SETTINGS max_ast_elements=1000000,
                                          max_expanded_ast_elements=1000000),
       toDateTime('2020-01-14 23:59:59', 'UTC') AS date_to,
       toDateTime('2020-01-01 00:00:00', 'UTC') AS date_from,
       2 AS target_step,
       ['user signed up', 'paid'] as funnel_step_names
  SELECT actors.actor_id AS actor_id
  FROM events AS event
  JOIN funnel_actors AS actors ON actors.actor_id = events.$group_0
  WHERE toTimeZone(toDateTime(event.timestamp), 'UTC') >= date_from
    AND toTimeZone(toDateTime(event.timestamp), 'UTC') < date_to
    AND event.team_id = 2
    AND toTimeZone(toDateTime(event.timestamp), 'UTC') > actors.first_timestamp
    AND toTimeZone(toDateTime(event.timestamp), 'UTC') < COALESCE(actors.final_timestamp, actors.first_timestamp + INTERVAL 14 DAY, date_to)
    AND event.event NOT IN funnel_step_names
    AND event.event = 'negatively_related'
    AND actors.steps <> target_step
  GROUP BY actor_id
  ORDER BY actor_id
  LIMIT 100
  OFFSET 0
  '''
# ---
# name: TestClickhouseFunnelCorrelation.test_funnel_correlation_with_events_and_groups_poe_v2
  '''
  WITH funnel_actors as
    (SELECT aggregation_target AS actor_id , timestamp, steps,
                                                        final_timestamp,
                                                        first_timestamp
     FROM
       (SELECT aggregation_target,
               steps,
               avg(step_1_conversion_time) step_1_average_conversion_time_inner,
               median(step_1_conversion_time) step_1_median_conversion_time_inner ,
               argMax(latest_0, steps) as timestamp,
               argMax(latest_1, steps) as final_timestamp,
               argMax(latest_0, steps) as first_timestamp
        FROM
          (SELECT aggregation_target,
                  steps,
                  max(steps) over (PARTITION BY aggregation_target) as max_steps,
                                  step_1_conversion_time ,
                                  latest_0,
                                  latest_1,
                                  latest_0
           FROM
             (SELECT *,
                     if(latest_0 <= latest_1
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                     if(isNotNull(latest_1)
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
              FROM
                (SELECT aggregation_target, timestamp, step_0,
                                                       latest_0,
                                                       step_1,
                                                       min(latest_1) over (PARTITION by aggregation_target
                                                                           ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
                 FROM
                   (SELECT e.timestamp as timestamp,
                           e."$group_0" as aggregation_target,
                           if(notEmpty(overrides.person_id), overrides.person_id, e.person_id) as person_id,
                           if(event = 'user signed up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'paid', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1
                    FROM events e
                    LEFT OUTER JOIN
                      (SELECT argMax(override_person_id, version) as person_id,
                              old_person_id
                       FROM person_overrides
                       WHERE team_id = 2
                       GROUP BY old_person_id) AS overrides ON e.person_id = overrides.old_person_id
                    WHERE team_id = 2
                      AND event IN ['paid', 'user signed up']
                      AND toTimeZone(timestamp, 'UTC') >= toDateTime('2020-01-01 00:00:00', 'UTC')
                      AND toTimeZone(timestamp, 'UTC') <= toDateTime('2020-01-14 23:59:59', 'UTC')
                      AND notEmpty(e.person_id)
                      AND (step_0 = 1
                           OR step_1 = 1) ))
              WHERE step_0 = 1 ))
        GROUP BY aggregation_target,
                 steps
        HAVING steps = max_steps)
     WHERE steps IN [1, 2]
     ORDER BY aggregation_target SETTINGS max_ast_elements=1000000,
                                          max_expanded_ast_elements=1000000),
       toDateTime('2020-01-14 23:59:59', 'UTC') AS date_to,
       toDateTime('2020-01-01 00:00:00', 'UTC') AS date_from,
       2 AS target_step,
       ['paid', 'user signed up'] as funnel_step_names
  SELECT event.event AS name,
         countDistinctIf(actors.actor_id, actors.steps = target_step) AS success_count,
         countDistinctIf(actors.actor_id, actors.steps <> target_step) AS failure_count
  FROM events AS event
  JOIN funnel_actors AS actors ON actors.actor_id = events.$group_0
  WHERE toTimeZone(toDateTime(event.timestamp), 'UTC') >= date_from
    AND toTimeZone(toDateTime(event.timestamp), 'UTC') < date_to
    AND event.team_id = 2
    AND toTimeZone(toDateTime(event.timestamp), 'UTC') > actors.first_timestamp
    AND toTimeZone(toDateTime(event.timestamp), 'UTC') < COALESCE(actors.final_timestamp, actors.first_timestamp + INTERVAL 14 DAY, date_to)
    AND event.event NOT IN funnel_step_names
    AND event.event NOT IN []
  GROUP BY name
  UNION ALL
  SELECT 'Total_Values_In_Query' as name,
         countDistinctIf(actors.actor_id, actors.steps = target_step) AS success_count,
         countDistinctIf(actors.actor_id, actors.steps <> target_step) AS failure_count
  FROM funnel_actors AS actors
  '''
# ---
# name: TestClickhouseFunnelCorrelation.test_funnel_correlation_with_events_and_groups_poe_v2.1
  '''
  WITH funnel_actors as
    (SELECT aggregation_target AS actor_id , timestamp, steps,
                                                        final_timestamp,
                                                        first_timestamp
     FROM
       (SELECT aggregation_target,
               steps,
               avg(step_1_conversion_time) step_1_average_conversion_time_inner,
               median(step_1_conversion_time) step_1_median_conversion_time_inner ,
               argMax(latest_0, steps) as timestamp,
               argMax(latest_1, steps) as final_timestamp,
               argMax(latest_0, steps) as first_timestamp
        FROM
          (SELECT aggregation_target,
                  steps,
                  max(steps) over (PARTITION BY aggregation_target) as max_steps,
                                  step_1_conversion_time ,
                                  latest_0,
                                  latest_1,
                                  latest_0
           FROM
             (SELECT *,
                     if(latest_0 <= latest_1
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                     if(isNotNull(latest_1)
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
              FROM
                (SELECT aggregation_target, timestamp, step_0,
                                                       latest_0,
                                                       step_1,
                                                       min(latest_1) over (PARTITION by aggregation_target
                                                                           ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
                 FROM
                   (SELECT e.timestamp as timestamp,
                           e."$group_0" as aggregation_target,
                           if(notEmpty(overrides.person_id), overrides.person_id, e.person_id) as person_id,
                           if(event = 'user signed up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'paid', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1
                    FROM events e
                    LEFT OUTER JOIN
                      (SELECT argMax(override_person_id, version) as person_id,
                              old_person_id
                       FROM person_overrides
                       WHERE team_id = 2
                       GROUP BY old_person_id) AS overrides ON e.person_id = overrides.old_person_id
                    WHERE team_id = 2
                      AND event IN ['paid', 'user signed up']
                      AND toTimeZone(timestamp, 'UTC') >= toDateTime('2020-01-01 00:00:00', 'UTC')
                      AND toTimeZone(timestamp, 'UTC') <= toDateTime('2020-01-14 23:59:59', 'UTC')
                      AND notEmpty(e.person_id)
                      AND (step_0 = 1
                           OR step_1 = 1) ))
              WHERE step_0 = 1 ))
        GROUP BY aggregation_target,
                 steps
        HAVING steps = max_steps)
     WHERE steps IN [1, 2]
     ORDER BY aggregation_target SETTINGS max_ast_elements=1000000,
                                          max_expanded_ast_elements=1000000),
       toDateTime('2020-01-14 23:59:59', 'UTC') AS date_to,
       toDateTime('2020-01-01 00:00:00', 'UTC') AS date_from,
       2 AS target_step,
       ['user signed up', 'paid'] as funnel_step_names
  SELECT actors.actor_id AS actor_id
  FROM events AS event
  JOIN funnel_actors AS actors ON actors.actor_id = events.$group_0
  WHERE toTimeZone(toDateTime(event.timestamp), 'UTC') >= date_from
    AND toTimeZone(toDateTime(event.timestamp), 'UTC') < date_to
    AND event.team_id = 2
    AND toTimeZone(toDateTime(event.timestamp), 'UTC') > actors.first_timestamp
    AND toTimeZone(toDateTime(event.timestamp), 'UTC') < COALESCE(actors.final_timestamp, actors.first_timestamp + INTERVAL 14 DAY, date_to)
    AND event.event NOT IN funnel_step_names
    AND event.event = 'positively_related'
    AND actors.steps = target_step
  GROUP BY actor_id
  ORDER BY actor_id
  LIMIT 100
  OFFSET 0
  '''
# ---
# name: TestClickhouseFunnelCorrelation.test_funnel_correlation_with_events_and_groups_poe_v2.2
  '''
  WITH funnel_actors as
    (SELECT aggregation_target AS actor_id , timestamp, steps,
                                                        final_timestamp,
                                                        first_timestamp
     FROM
       (SELECT aggregation_target,
               steps,
               avg(step_1_conversion_time) step_1_average_conversion_time_inner,
               median(step_1_conversion_time) step_1_median_conversion_time_inner ,
               argMax(latest_0, steps) as timestamp,
               argMax(latest_1, steps) as final_timestamp,
               argMax(latest_0, steps) as first_timestamp
        FROM
          (SELECT aggregation_target,
                  steps,
                  max(steps) over (PARTITION BY aggregation_target) as max_steps,
                                  step_1_conversion_time ,
                                  latest_0,
                                  latest_1,
                                  latest_0
           FROM
             (SELECT *,
                     if(latest_0 <= latest_1
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                     if(isNotNull(latest_1)
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
              FROM
                (SELECT aggregation_target, timestamp, step_0,
                                                       latest_0,
                                                       step_1,
                                                       min(latest_1) over (PARTITION by aggregation_target
                                                                           ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
                 FROM
                   (SELECT e.timestamp as timestamp,
                           e."$group_0" as aggregation_target,
                           if(notEmpty(overrides.person_id), overrides.person_id, e.person_id) as person_id,
                           if(event = 'user signed up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'paid', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1
                    FROM events e
                    LEFT OUTER JOIN
                      (SELECT argMax(override_person_id, version) as person_id,
                              old_person_id
                       FROM person_overrides
                       WHERE team_id = 2
                       GROUP BY old_person_id) AS overrides ON e.person_id = overrides.old_person_id
                    WHERE team_id = 2
                      AND event IN ['paid', 'user signed up']
                      AND toTimeZone(timestamp, 'UTC') >= toDateTime('2020-01-01 00:00:00', 'UTC')
                      AND toTimeZone(timestamp, 'UTC') <= toDateTime('2020-01-14 23:59:59', 'UTC')
                      AND notEmpty(e.person_id)
                      AND (step_0 = 1
                           OR step_1 = 1) ))
              WHERE step_0 = 1 ))
        GROUP BY aggregation_target,
                 steps
        HAVING steps = max_steps)
     WHERE steps IN [1, 2]
     ORDER BY aggregation_target SETTINGS max_ast_elements=1000000,
                                          max_expanded_ast_elements=1000000),
       toDateTime('2020-01-14 23:59:59', 'UTC') AS date_to,
       toDateTime('2020-01-01 00:00:00', 'UTC') AS date_from,
       2 AS target_step,
       ['user signed up', 'paid'] as funnel_step_names
  SELECT actors.actor_id AS actor_id
  FROM events AS event
  JOIN funnel_actors AS actors ON actors.actor_id = events.$group_0
  WHERE toTimeZone(toDateTime(event.timestamp), 'UTC') >= date_from
    AND toTimeZone(toDateTime(event.timestamp), 'UTC') < date_to
    AND event.team_id = 2
    AND toTimeZone(toDateTime(event.timestamp), 'UTC') > actors.first_timestamp
    AND toTimeZone(toDateTime(event.timestamp), 'UTC') < COALESCE(actors.final_timestamp, actors.first_timestamp + INTERVAL 14 DAY, date_to)
    AND event.event NOT IN funnel_step_names
    AND event.event = 'positively_related'
    AND actors.steps <> target_step
  GROUP BY actor_id
  ORDER BY actor_id
  LIMIT 100
  OFFSET 0
  '''
# ---
# name: TestClickhouseFunnelCorrelation.test_funnel_correlation_with_events_and_groups_poe_v2.3
  '''
  WITH funnel_actors as
    (SELECT aggregation_target AS actor_id , timestamp, steps,
                                                        final_timestamp,
                                                        first_timestamp
     FROM
       (SELECT aggregation_target,
               steps,
               avg(step_1_conversion_time) step_1_average_conversion_time_inner,
               median(step_1_conversion_time) step_1_median_conversion_time_inner ,
               argMax(latest_0, steps) as timestamp,
               argMax(latest_1, steps) as final_timestamp,
               argMax(latest_0, steps) as first_timestamp
        FROM
          (SELECT aggregation_target,
                  steps,
                  max(steps) over (PARTITION BY aggregation_target) as max_steps,
                                  step_1_conversion_time ,
                                  latest_0,
                                  latest_1,
                                  latest_0
           FROM
             (SELECT *,
                     if(latest_0 <= latest_1
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                     if(isNotNull(latest_1)
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
              FROM
                (SELECT aggregation_target, timestamp, step_0,
                                                       latest_0,
                                                       step_1,
                                                       min(latest_1) over (PARTITION by aggregation_target
                                                                           ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
                 FROM
                   (SELECT e.timestamp as timestamp,
                           e."$group_0" as aggregation_target,
                           if(notEmpty(overrides.person_id), overrides.person_id, e.person_id) as person_id,
                           if(event = 'user signed up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'paid', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1
                    FROM events e
                    LEFT OUTER JOIN
                      (SELECT argMax(override_person_id, version) as person_id,
                              old_person_id
                       FROM person_overrides
                       WHERE team_id = 2
                       GROUP BY old_person_id) AS overrides ON e.person_id = overrides.old_person_id
                    WHERE team_id = 2
                      AND event IN ['paid', 'user signed up']
                      AND toTimeZone(timestamp, 'UTC') >= toDateTime('2020-01-01 00:00:00', 'UTC')
                      AND toTimeZone(timestamp, 'UTC') <= toDateTime('2020-01-14 23:59:59', 'UTC')
                      AND notEmpty(e.person_id)
                      AND (step_0 = 1
                           OR step_1 = 1) ))
              WHERE step_0 = 1 ))
        GROUP BY aggregation_target,
                 steps
        HAVING steps = max_steps)
     WHERE steps IN [1, 2]
     ORDER BY aggregation_target SETTINGS max_ast_elements=1000000,
                                          max_expanded_ast_elements=1000000),
       toDateTime('2020-01-14 23:59:59', 'UTC') AS date_to,
       toDateTime('2020-01-01 00:00:00', 'UTC') AS date_from,
       2 AS target_step,
       ['user signed up', 'paid'] as funnel_step_names
  SELECT actors.actor_id AS actor_id
  FROM events AS event
  JOIN funnel_actors AS actors ON actors.actor_id = events.$group_0
  WHERE toTimeZone(toDateTime(event.timestamp), 'UTC') >= date_from
    AND toTimeZone(toDateTime(event.timestamp), 'UTC') < date_to
    AND event.team_id = 2
    AND toTimeZone(toDateTime(event.timestamp), 'UTC') > actors.first_timestamp
    AND toTimeZone(toDateTime(event.timestamp), 'UTC') < COALESCE(actors.final_timestamp, actors.first_timestamp + INTERVAL 14 DAY, date_to)
    AND event.event NOT IN funnel_step_names
    AND event.event = 'negatively_related'
    AND actors.steps = target_step
  GROUP BY actor_id
  ORDER BY actor_id
  LIMIT 100
  OFFSET 0
  '''
# ---
# name: TestClickhouseFunnelCorrelation.test_funnel_correlation_with_events_and_groups_poe_v2.4
  '''
  WITH funnel_actors as
    (SELECT aggregation_target AS actor_id , timestamp, steps,
                                                        final_timestamp,
                                                        first_timestamp
     FROM
       (SELECT aggregation_target,
               steps,
               avg(step_1_conversion_time) step_1_average_conversion_time_inner,
               median(step_1_conversion_time) step_1_median_conversion_time_inner ,
               argMax(latest_0, steps) as timestamp,
               argMax(latest_1, steps) as final_timestamp,
               argMax(latest_0, steps) as first_timestamp
        FROM
          (SELECT aggregation_target,
                  steps,
                  max(steps) over (PARTITION BY aggregation_target) as max_steps,
                                  step_1_conversion_time ,
                                  latest_0,
                                  latest_1,
                                  latest_0
           FROM
             (SELECT *,
                     if(latest_0 <= latest_1
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                     if(isNotNull(latest_1)
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
              FROM
                (SELECT aggregation_target, timestamp, step_0,
                                                       latest_0,
                                                       step_1,
                                                       min(latest_1) over (PARTITION by aggregation_target
                                                                           ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
                 FROM
                   (SELECT e.timestamp as timestamp,
                           e."$group_0" as aggregation_target,
                           if(notEmpty(overrides.person_id), overrides.person_id, e.person_id) as person_id,
                           if(event = 'user signed up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'paid', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1
                    FROM events e
                    LEFT OUTER JOIN
                      (SELECT argMax(override_person_id, version) as person_id,
                              old_person_id
                       FROM person_overrides
                       WHERE team_id = 2
                       GROUP BY old_person_id) AS overrides ON e.person_id = overrides.old_person_id
                    WHERE team_id = 2
                      AND event IN ['paid', 'user signed up']
                      AND toTimeZone(timestamp, 'UTC') >= toDateTime('2020-01-01 00:00:00', 'UTC')
                      AND toTimeZone(timestamp, 'UTC') <= toDateTime('2020-01-14 23:59:59', 'UTC')
                      AND notEmpty(e.person_id)
                      AND (step_0 = 1
                           OR step_1 = 1) ))
              WHERE step_0 = 1 ))
        GROUP BY aggregation_target,
                 steps
        HAVING steps = max_steps)
     WHERE steps IN [1, 2]
     ORDER BY aggregation_target SETTINGS max_ast_elements=1000000,
                                          max_expanded_ast_elements=1000000),
       toDateTime('2020-01-14 23:59:59', 'UTC') AS date_to,
       toDateTime('2020-01-01 00:00:00', 'UTC') AS date_from,
       2 AS target_step,
       ['user signed up', 'paid'] as funnel_step_names
  SELECT actors.actor_id AS actor_id
  FROM events AS event
  JOIN funnel_actors AS actors ON actors.actor_id = events.$group_0
  WHERE toTimeZone(toDateTime(event.timestamp), 'UTC') >= date_from
    AND toTimeZone(toDateTime(event.timestamp), 'UTC') < date_to
    AND event.team_id = 2
    AND toTimeZone(toDateTime(event.timestamp), 'UTC') > actors.first_timestamp
    AND toTimeZone(toDateTime(event.timestamp), 'UTC') < COALESCE(actors.final_timestamp, actors.first_timestamp + INTERVAL 14 DAY, date_to)
    AND event.event NOT IN funnel_step_names
    AND event.event = 'negatively_related'
    AND actors.steps <> target_step
  GROUP BY actor_id
  ORDER BY actor_id
  LIMIT 100
  OFFSET 0
  '''
# ---
# name: TestClickhouseFunnelCorrelation.test_funnel_correlation_with_events_and_groups_poe_v2.5
  '''
  WITH funnel_actors as
    (SELECT aggregation_target AS actor_id , timestamp, steps,
                                                        final_timestamp,
                                                        first_timestamp
     FROM
       (SELECT aggregation_target,
               steps,
               avg(step_1_conversion_time) step_1_average_conversion_time_inner,
               median(step_1_conversion_time) step_1_median_conversion_time_inner ,
               argMax(latest_0, steps) as timestamp,
               argMax(latest_1, steps) as final_timestamp,
               argMax(latest_0, steps) as first_timestamp
        FROM
          (SELECT aggregation_target,
                  steps,
                  max(steps) over (PARTITION BY aggregation_target) as max_steps,
                                  step_1_conversion_time ,
                                  latest_0,
                                  latest_1,
                                  latest_0
           FROM
             (SELECT *,
                     if(latest_0 <= latest_1
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                     if(isNotNull(latest_1)
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
              FROM
                (SELECT aggregation_target, timestamp, step_0,
                                                       latest_0,
                                                       step_1,
                                                       min(latest_1) over (PARTITION by aggregation_target
                                                                           ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
                 FROM
                   (SELECT e.timestamp as timestamp,
                           e."$group_0" as aggregation_target,
                           if(notEmpty(overrides.person_id), overrides.person_id, e.person_id) as person_id,
                           if(event = 'user signed up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'paid', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1
                    FROM events e
                    LEFT OUTER JOIN
                      (SELECT argMax(override_person_id, version) as person_id,
                              old_person_id
                       FROM person_overrides
                       WHERE team_id = 2
                       GROUP BY old_person_id) AS overrides ON e.person_id = overrides.old_person_id
                    LEFT JOIN
                      (SELECT group_key,
                              argMax(group_properties, _timestamp) AS group_properties_0
                       FROM groups
                       WHERE team_id = 2
                         AND group_type_index = 0
                       GROUP BY group_key) groups_0 ON "$group_0" == groups_0.group_key
                    WHERE team_id = 2
                      AND event IN ['paid', 'user signed up']
                      AND toTimeZone(timestamp, 'UTC') >= toDateTime('2020-01-01 00:00:00', 'UTC')
                      AND toTimeZone(timestamp, 'UTC') <= toDateTime('2020-01-14 23:59:59', 'UTC')
                      AND (has(['finance'], replaceRegexpAll(JSONExtractRaw(group_properties_0, 'industry'), '^"|"$', '')))
                      AND notEmpty(e.person_id)
                      AND (step_0 = 1
                           OR step_1 = 1) ))
              WHERE step_0 = 1 ))
        GROUP BY aggregation_target,
                 steps
        HAVING steps = max_steps)
     WHERE steps IN [1, 2]
     ORDER BY aggregation_target SETTINGS max_ast_elements=1000000,
                                          max_expanded_ast_elements=1000000),
       toDateTime('2020-01-14 23:59:59', 'UTC') AS date_to,
       toDateTime('2020-01-01 00:00:00', 'UTC') AS date_from,
       2 AS target_step,
       ['paid', 'user signed up'] as funnel_step_names
  SELECT event.event AS name,
         countDistinctIf(actors.actor_id, actors.steps = target_step) AS success_count,
         countDistinctIf(actors.actor_id, actors.steps <> target_step) AS failure_count
  FROM events AS event
  JOIN funnel_actors AS actors ON actors.actor_id = events.$group_0
  WHERE toTimeZone(toDateTime(event.timestamp), 'UTC') >= date_from
    AND toTimeZone(toDateTime(event.timestamp), 'UTC') < date_to
    AND event.team_id = 2
    AND toTimeZone(toDateTime(event.timestamp), 'UTC') > actors.first_timestamp
    AND toTimeZone(toDateTime(event.timestamp), 'UTC') < COALESCE(actors.final_timestamp, actors.first_timestamp + INTERVAL 14 DAY, date_to)
    AND event.event NOT IN funnel_step_names
    AND event.event NOT IN []
  GROUP BY name
  UNION ALL
  SELECT 'Total_Values_In_Query' as name,
         countDistinctIf(actors.actor_id, actors.steps = target_step) AS success_count,
         countDistinctIf(actors.actor_id, actors.steps <> target_step) AS failure_count
  FROM funnel_actors AS actors
  '''
# ---
# name: TestClickhouseFunnelCorrelation.test_funnel_correlation_with_events_and_groups_poe_v2.6
  '''
  WITH funnel_actors as
    (SELECT aggregation_target AS actor_id , timestamp, steps,
                                                        final_timestamp,
                                                        first_timestamp
     FROM
       (SELECT aggregation_target,
               steps,
               avg(step_1_conversion_time) step_1_average_conversion_time_inner,
               median(step_1_conversion_time) step_1_median_conversion_time_inner ,
               argMax(latest_0, steps) as timestamp,
               argMax(latest_1, steps) as final_timestamp,
               argMax(latest_0, steps) as first_timestamp
        FROM
          (SELECT aggregation_target,
                  steps,
                  max(steps) over (PARTITION BY aggregation_target) as max_steps,
                                  step_1_conversion_time ,
                                  latest_0,
                                  latest_1,
                                  latest_0
           FROM
             (SELECT *,
                     if(latest_0 <= latest_1
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                     if(isNotNull(latest_1)
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
              FROM
                (SELECT aggregation_target, timestamp, step_0,
                                                       latest_0,
                                                       step_1,
                                                       min(latest_1) over (PARTITION by aggregation_target
                                                                           ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
                 FROM
                   (SELECT e.timestamp as timestamp,
                           e."$group_0" as aggregation_target,
                           if(notEmpty(overrides.person_id), overrides.person_id, e.person_id) as person_id,
                           if(event = 'user signed up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'paid', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1
                    FROM events e
                    LEFT OUTER JOIN
                      (SELECT argMax(override_person_id, version) as person_id,
                              old_person_id
                       FROM person_overrides
                       WHERE team_id = 2
                       GROUP BY old_person_id) AS overrides ON e.person_id = overrides.old_person_id
                    LEFT JOIN
                      (SELECT group_key,
                              argMax(group_properties, _timestamp) AS group_properties_0
                       FROM groups
                       WHERE team_id = 2
                         AND group_type_index = 0
                       GROUP BY group_key) groups_0 ON "$group_0" == groups_0.group_key
                    WHERE team_id = 2
                      AND event IN ['paid', 'user signed up']
                      AND toTimeZone(timestamp, 'UTC') >= toDateTime('2020-01-01 00:00:00', 'UTC')
                      AND toTimeZone(timestamp, 'UTC') <= toDateTime('2020-01-14 23:59:59', 'UTC')
                      AND (has(['finance'], replaceRegexpAll(JSONExtractRaw(group_properties_0, 'industry'), '^"|"$', '')))
                      AND notEmpty(e.person_id)
                      AND (step_0 = 1
                           OR step_1 = 1) ))
              WHERE step_0 = 1 ))
        GROUP BY aggregation_target,
                 steps
        HAVING steps = max_steps)
     WHERE steps IN [1, 2]
     ORDER BY aggregation_target SETTINGS max_ast_elements=1000000,
                                          max_expanded_ast_elements=1000000),
       toDateTime('2020-01-14 23:59:59', 'UTC') AS date_to,
       toDateTime('2020-01-01 00:00:00', 'UTC') AS date_from,
       2 AS target_step,
       ['user signed up', 'paid'] as funnel_step_names
  SELECT actors.actor_id AS actor_id
  FROM events AS event
  JOIN funnel_actors AS actors ON actors.actor_id = events.$group_0
  WHERE toTimeZone(toDateTime(event.timestamp), 'UTC') >= date_from
    AND toTimeZone(toDateTime(event.timestamp), 'UTC') < date_to
    AND event.team_id = 2
    AND toTimeZone(toDateTime(event.timestamp), 'UTC') > actors.first_timestamp
    AND toTimeZone(toDateTime(event.timestamp), 'UTC') < COALESCE(actors.final_timestamp, actors.first_timestamp + INTERVAL 14 DAY, date_to)
    AND event.event NOT IN funnel_step_names
    AND event.event = 'negatively_related'
    AND actors.steps = target_step
  GROUP BY actor_id
  ORDER BY actor_id
  LIMIT 100
  OFFSET 0
  '''
# ---
# name: TestClickhouseFunnelCorrelation.test_funnel_correlation_with_events_and_groups_poe_v2.7
  '''
  WITH funnel_actors as
    (SELECT aggregation_target AS actor_id , timestamp, steps,
                                                        final_timestamp,
                                                        first_timestamp
     FROM
       (SELECT aggregation_target,
               steps,
               avg(step_1_conversion_time) step_1_average_conversion_time_inner,
               median(step_1_conversion_time) step_1_median_conversion_time_inner ,
               argMax(latest_0, steps) as timestamp,
               argMax(latest_1, steps) as final_timestamp,
               argMax(latest_0, steps) as first_timestamp
        FROM
          (SELECT aggregation_target,
                  steps,
                  max(steps) over (PARTITION BY aggregation_target) as max_steps,
                                  step_1_conversion_time ,
                                  latest_0,
                                  latest_1,
                                  latest_0
           FROM
             (SELECT *,
                     if(latest_0 <= latest_1
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                     if(isNotNull(latest_1)
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
              FROM
                (SELECT aggregation_target, timestamp, step_0,
                                                       latest_0,
                                                       step_1,
                                                       min(latest_1) over (PARTITION by aggregation_target
                                                                           ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
                 FROM
                   (SELECT e.timestamp as timestamp,
                           e."$group_0" as aggregation_target,
                           if(notEmpty(overrides.person_id), overrides.person_id, e.person_id) as person_id,
                           if(event = 'user signed up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'paid', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1
                    FROM events e
                    LEFT OUTER JOIN
                      (SELECT argMax(override_person_id, version) as person_id,
                              old_person_id
                       FROM person_overrides
                       WHERE team_id = 2
                       GROUP BY old_person_id) AS overrides ON e.person_id = overrides.old_person_id
                    LEFT JOIN
                      (SELECT group_key,
                              argMax(group_properties, _timestamp) AS group_properties_0
                       FROM groups
                       WHERE team_id = 2
                         AND group_type_index = 0
                       GROUP BY group_key) groups_0 ON "$group_0" == groups_0.group_key
                    WHERE team_id = 2
                      AND event IN ['paid', 'user signed up']
                      AND toTimeZone(timestamp, 'UTC') >= toDateTime('2020-01-01 00:00:00', 'UTC')
                      AND toTimeZone(timestamp, 'UTC') <= toDateTime('2020-01-14 23:59:59', 'UTC')
                      AND (has(['finance'], replaceRegexpAll(JSONExtractRaw(group_properties_0, 'industry'), '^"|"$', '')))
                      AND notEmpty(e.person_id)
                      AND (step_0 = 1
                           OR step_1 = 1) ))
              WHERE step_0 = 1 ))
        GROUP BY aggregation_target,
                 steps
        HAVING steps = max_steps)
     WHERE steps IN [1, 2]
     ORDER BY aggregation_target SETTINGS max_ast_elements=1000000,
                                          max_expanded_ast_elements=1000000),
       toDateTime('2020-01-14 23:59:59', 'UTC') AS date_to,
       toDateTime('2020-01-01 00:00:00', 'UTC') AS date_from,
       2 AS target_step,
       ['user signed up', 'paid'] as funnel_step_names
  SELECT actors.actor_id AS actor_id
  FROM events AS event
  JOIN funnel_actors AS actors ON actors.actor_id = events.$group_0
  WHERE toTimeZone(toDateTime(event.timestamp), 'UTC') >= date_from
    AND toTimeZone(toDateTime(event.timestamp), 'UTC') < date_to
    AND event.team_id = 2
    AND toTimeZone(toDateTime(event.timestamp), 'UTC') > actors.first_timestamp
    AND toTimeZone(toDateTime(event.timestamp), 'UTC') < COALESCE(actors.final_timestamp, actors.first_timestamp + INTERVAL 14 DAY, date_to)
    AND event.event NOT IN funnel_step_names
    AND event.event = 'negatively_related'
    AND actors.steps <> target_step
  GROUP BY actor_id
  ORDER BY actor_id
  LIMIT 100
  OFFSET 0
  '''
# ---
# name: TestClickhouseFunnelCorrelation.test_funnel_correlation_with_properties_and_groups
  '''
  WITH funnel_actors as
    (SELECT aggregation_target AS actor_id , timestamp, steps,
                                                        final_timestamp,
                                                        first_timestamp
     FROM
       (SELECT aggregation_target,
               steps,
               avg(step_1_conversion_time) step_1_average_conversion_time_inner,
               median(step_1_conversion_time) step_1_median_conversion_time_inner ,
               argMax(latest_0, steps) as timestamp,
               argMax(latest_1, steps) as final_timestamp,
               argMax(latest_0, steps) as first_timestamp
        FROM
          (SELECT aggregation_target,
                  steps,
                  max(steps) over (PARTITION BY aggregation_target) as max_steps,
                                  step_1_conversion_time ,
                                  latest_0,
                                  latest_1,
                                  latest_0
           FROM
             (SELECT *,
                     if(latest_0 <= latest_1
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                     if(isNotNull(latest_1)
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
              FROM
                (SELECT aggregation_target, timestamp, step_0,
                                                       latest_0,
                                                       step_1,
                                                       min(latest_1) over (PARTITION by aggregation_target
                                                                           ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
                 FROM
                   (SELECT e.timestamp as timestamp,
                           e."$group_0" as aggregation_target,
                           if(event = 'user signed up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'paid', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1
                    FROM events e
                    WHERE team_id = 2
                      AND event IN ['paid', 'user signed up']
                      AND toTimeZone(timestamp, 'UTC') >= toDateTime('2020-01-01 00:00:00', 'UTC')
                      AND toTimeZone(timestamp, 'UTC') <= toDateTime('2020-01-14 23:59:59', 'UTC')
                      AND (step_0 = 1
                           OR step_1 = 1) ))
              WHERE step_0 = 1 ))
        GROUP BY aggregation_target,
                 steps
        HAVING steps = max_steps)
     WHERE steps IN [1, 2]
     ORDER BY aggregation_target SETTINGS max_ast_elements=1000000,
                                          max_expanded_ast_elements=1000000),
       2 AS target_step
  SELECT concat(prop.1, '::', prop.2) as name,
         countDistinctIf(actor_id, steps = target_step) AS success_count,
         countDistinctIf(actor_id, steps <> target_step) AS failure_count
  FROM
    (SELECT actor_id,
            funnel_actors.steps as steps,
            arrayJoin(arrayZip(['industry'], [replaceRegexpAll(JSONExtractRaw(groups_0.group_properties_0, 'industry'), '^"|"$', '')])) as prop
     FROM funnel_actors
     LEFT JOIN
       (SELECT group_key,
               argMax(group_properties, _timestamp) AS group_properties_0
        FROM groups
        WHERE team_id = 2
          AND group_type_index = 0
        GROUP BY group_key) groups_0 ON funnel_actors.actor_id == groups_0.group_key) aggregation_target_with_props
  GROUP BY prop.1,
               prop.2
  HAVING prop.1 NOT IN []
  UNION ALL
  SELECT 'Total_Values_In_Query' as name,
         countDistinctIf(actor_id, steps = target_step) AS success_count,
         countDistinctIf(actor_id, steps <> target_step) AS failure_count
  FROM funnel_actors
  '''
# ---
# name: TestClickhouseFunnelCorrelation.test_funnel_correlation_with_properties_and_groups.1
  '''
  WITH funnel_actors AS
    (SELECT aggregation_target AS actor_id , timestamp, steps,
                                                        final_timestamp,
                                                        first_timestamp
     FROM
       (SELECT aggregation_target,
               steps,
               avg(step_1_conversion_time) step_1_average_conversion_time_inner,
               median(step_1_conversion_time) step_1_median_conversion_time_inner ,
               argMax(latest_0, steps) as timestamp,
               argMax(latest_1, steps) as final_timestamp,
               argMax(latest_0, steps) as first_timestamp
        FROM
          (SELECT aggregation_target,
                  steps,
                  max(steps) over (PARTITION BY aggregation_target) as max_steps,
                                  step_1_conversion_time ,
                                  latest_0,
                                  latest_1,
                                  latest_0
           FROM
             (SELECT *,
                     if(latest_0 <= latest_1
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                     if(isNotNull(latest_1)
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
              FROM
                (SELECT aggregation_target, timestamp, step_0,
                                                       latest_0,
                                                       step_1,
                                                       min(latest_1) over (PARTITION by aggregation_target
                                                                           ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
                 FROM
                   (SELECT e.timestamp as timestamp,
                           e."$group_0" as aggregation_target,
                           if(event = 'user signed up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'paid', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1
                    FROM events e
                    LEFT JOIN
                      (SELECT group_key,
                              argMax(group_properties, _timestamp) AS group_properties_0
                       FROM groups
                       WHERE team_id = 2
                         AND group_type_index = 0
                       GROUP BY group_key) groups_0 ON "$group_0" == groups_0.group_key
                    WHERE team_id = 2
                      AND event IN ['paid', 'user signed up']
                      AND toTimeZone(timestamp, 'UTC') >= toDateTime('2020-01-01 00:00:00', 'UTC')
                      AND toTimeZone(timestamp, 'UTC') <= toDateTime('2020-01-14 23:59:59', 'UTC')
                      AND (has(['positive'], replaceRegexpAll(JSONExtractRaw(group_properties_0, 'industry'), '^"|"$', '')))
                      AND (step_0 = 1
                           OR step_1 = 1) ))
              WHERE step_0 = 1 ))
        GROUP BY aggregation_target,
                 steps
        HAVING steps = max_steps)
     WHERE steps IN [1, 2]
     ORDER BY aggregation_target SETTINGS max_ast_elements=1000000,
                                          max_expanded_ast_elements=1000000),
       2 AS target_step
  SELECT funnel_actors.actor_id AS actor_id
  FROM funnel_actors
  WHERE funnel_actors.steps = target_step
  GROUP BY funnel_actors.actor_id
  ORDER BY actor_id
  LIMIT 100
  OFFSET 0
  '''
# ---
# name: TestClickhouseFunnelCorrelation.test_funnel_correlation_with_properties_and_groups.2
  '''
  WITH funnel_actors AS
    (SELECT aggregation_target AS actor_id , timestamp, steps,
                                                        final_timestamp,
                                                        first_timestamp
     FROM
       (SELECT aggregation_target,
               steps,
               avg(step_1_conversion_time) step_1_average_conversion_time_inner,
               median(step_1_conversion_time) step_1_median_conversion_time_inner ,
               argMax(latest_0, steps) as timestamp,
               argMax(latest_1, steps) as final_timestamp,
               argMax(latest_0, steps) as first_timestamp
        FROM
          (SELECT aggregation_target,
                  steps,
                  max(steps) over (PARTITION BY aggregation_target) as max_steps,
                                  step_1_conversion_time ,
                                  latest_0,
                                  latest_1,
                                  latest_0
           FROM
             (SELECT *,
                     if(latest_0 <= latest_1
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                     if(isNotNull(latest_1)
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
              FROM
                (SELECT aggregation_target, timestamp, step_0,
                                                       latest_0,
                                                       step_1,
                                                       min(latest_1) over (PARTITION by aggregation_target
                                                                           ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
                 FROM
                   (SELECT e.timestamp as timestamp,
                           e."$group_0" as aggregation_target,
                           if(event = 'user signed up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'paid', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1
                    FROM events e
                    LEFT JOIN
                      (SELECT group_key,
                              argMax(group_properties, _timestamp) AS group_properties_0
                       FROM groups
                       WHERE team_id = 2
                         AND group_type_index = 0
                       GROUP BY group_key) groups_0 ON "$group_0" == groups_0.group_key
                    WHERE team_id = 2
                      AND event IN ['paid', 'user signed up']
                      AND toTimeZone(timestamp, 'UTC') >= toDateTime('2020-01-01 00:00:00', 'UTC')
                      AND toTimeZone(timestamp, 'UTC') <= toDateTime('2020-01-14 23:59:59', 'UTC')
                      AND (has(['positive'], replaceRegexpAll(JSONExtractRaw(group_properties_0, 'industry'), '^"|"$', '')))
                      AND (step_0 = 1
                           OR step_1 = 1) ))
              WHERE step_0 = 1 ))
        GROUP BY aggregation_target,
                 steps
        HAVING steps = max_steps)
     WHERE steps IN [1, 2]
     ORDER BY aggregation_target SETTINGS max_ast_elements=1000000,
                                          max_expanded_ast_elements=1000000),
       2 AS target_step
  SELECT funnel_actors.actor_id AS actor_id
  FROM funnel_actors
  WHERE funnel_actors.steps <> target_step
  GROUP BY funnel_actors.actor_id
  ORDER BY actor_id
  LIMIT 100
  OFFSET 0
  '''
# ---
# name: TestClickhouseFunnelCorrelation.test_funnel_correlation_with_properties_and_groups.3
  '''
  WITH funnel_actors AS
    (SELECT aggregation_target AS actor_id , timestamp, steps,
                                                        final_timestamp,
                                                        first_timestamp
     FROM
       (SELECT aggregation_target,
               steps,
               avg(step_1_conversion_time) step_1_average_conversion_time_inner,
               median(step_1_conversion_time) step_1_median_conversion_time_inner ,
               argMax(latest_0, steps) as timestamp,
               argMax(latest_1, steps) as final_timestamp,
               argMax(latest_0, steps) as first_timestamp
        FROM
          (SELECT aggregation_target,
                  steps,
                  max(steps) over (PARTITION BY aggregation_target) as max_steps,
                                  step_1_conversion_time ,
                                  latest_0,
                                  latest_1,
                                  latest_0
           FROM
             (SELECT *,
                     if(latest_0 <= latest_1
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                     if(isNotNull(latest_1)
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
              FROM
                (SELECT aggregation_target, timestamp, step_0,
                                                       latest_0,
                                                       step_1,
                                                       min(latest_1) over (PARTITION by aggregation_target
                                                                           ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
                 FROM
                   (SELECT e.timestamp as timestamp,
                           e."$group_0" as aggregation_target,
                           if(event = 'user signed up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'paid', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1
                    FROM events e
                    LEFT JOIN
                      (SELECT group_key,
                              argMax(group_properties, _timestamp) AS group_properties_0
                       FROM groups
                       WHERE team_id = 2
                         AND group_type_index = 0
                       GROUP BY group_key) groups_0 ON "$group_0" == groups_0.group_key
                    WHERE team_id = 2
                      AND event IN ['paid', 'user signed up']
                      AND toTimeZone(timestamp, 'UTC') >= toDateTime('2020-01-01 00:00:00', 'UTC')
                      AND toTimeZone(timestamp, 'UTC') <= toDateTime('2020-01-14 23:59:59', 'UTC')
                      AND (has(['negative'], replaceRegexpAll(JSONExtractRaw(group_properties_0, 'industry'), '^"|"$', '')))
                      AND (step_0 = 1
                           OR step_1 = 1) ))
              WHERE step_0 = 1 ))
        GROUP BY aggregation_target,
                 steps
        HAVING steps = max_steps)
     WHERE steps IN [1, 2]
     ORDER BY aggregation_target SETTINGS max_ast_elements=1000000,
                                          max_expanded_ast_elements=1000000),
       2 AS target_step
  SELECT funnel_actors.actor_id AS actor_id
  FROM funnel_actors
  WHERE funnel_actors.steps = target_step
  GROUP BY funnel_actors.actor_id
  ORDER BY actor_id
  LIMIT 100
  OFFSET 0
  '''
# ---
# name: TestClickhouseFunnelCorrelation.test_funnel_correlation_with_properties_and_groups.4
  '''
  WITH funnel_actors AS
    (SELECT aggregation_target AS actor_id , timestamp, steps,
                                                        final_timestamp,
                                                        first_timestamp
     FROM
       (SELECT aggregation_target,
               steps,
               avg(step_1_conversion_time) step_1_average_conversion_time_inner,
               median(step_1_conversion_time) step_1_median_conversion_time_inner ,
               argMax(latest_0, steps) as timestamp,
               argMax(latest_1, steps) as final_timestamp,
               argMax(latest_0, steps) as first_timestamp
        FROM
          (SELECT aggregation_target,
                  steps,
                  max(steps) over (PARTITION BY aggregation_target) as max_steps,
                                  step_1_conversion_time ,
                                  latest_0,
                                  latest_1,
                                  latest_0
           FROM
             (SELECT *,
                     if(latest_0 <= latest_1
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                     if(isNotNull(latest_1)
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
              FROM
                (SELECT aggregation_target, timestamp, step_0,
                                                       latest_0,
                                                       step_1,
                                                       min(latest_1) over (PARTITION by aggregation_target
                                                                           ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
                 FROM
                   (SELECT e.timestamp as timestamp,
                           e."$group_0" as aggregation_target,
                           if(event = 'user signed up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'paid', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1
                    FROM events e
                    LEFT JOIN
                      (SELECT group_key,
                              argMax(group_properties, _timestamp) AS group_properties_0
                       FROM groups
                       WHERE team_id = 2
                         AND group_type_index = 0
                       GROUP BY group_key) groups_0 ON "$group_0" == groups_0.group_key
                    WHERE team_id = 2
                      AND event IN ['paid', 'user signed up']
                      AND toTimeZone(timestamp, 'UTC') >= toDateTime('2020-01-01 00:00:00', 'UTC')
                      AND toTimeZone(timestamp, 'UTC') <= toDateTime('2020-01-14 23:59:59', 'UTC')
                      AND (has(['negative'], replaceRegexpAll(JSONExtractRaw(group_properties_0, 'industry'), '^"|"$', '')))
                      AND (step_0 = 1
                           OR step_1 = 1) ))
              WHERE step_0 = 1 ))
        GROUP BY aggregation_target,
                 steps
        HAVING steps = max_steps)
     WHERE steps IN [1, 2]
     ORDER BY aggregation_target SETTINGS max_ast_elements=1000000,
                                          max_expanded_ast_elements=1000000),
       2 AS target_step
  SELECT funnel_actors.actor_id AS actor_id
  FROM funnel_actors
  WHERE funnel_actors.steps <> target_step
  GROUP BY funnel_actors.actor_id
  ORDER BY actor_id
  LIMIT 100
  OFFSET 0
  '''
# ---
# name: TestClickhouseFunnelCorrelation.test_funnel_correlation_with_properties_and_groups.5
  '''
  WITH funnel_actors as
    (SELECT aggregation_target AS actor_id , timestamp, steps,
                                                        final_timestamp,
                                                        first_timestamp
     FROM
       (SELECT aggregation_target,
               steps,
               avg(step_1_conversion_time) step_1_average_conversion_time_inner,
               median(step_1_conversion_time) step_1_median_conversion_time_inner ,
               argMax(latest_0, steps) as timestamp,
               argMax(latest_1, steps) as final_timestamp,
               argMax(latest_0, steps) as first_timestamp
        FROM
          (SELECT aggregation_target,
                  steps,
                  max(steps) over (PARTITION BY aggregation_target) as max_steps,
                                  step_1_conversion_time ,
                                  latest_0,
                                  latest_1,
                                  latest_0
           FROM
             (SELECT *,
                     if(latest_0 <= latest_1
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                     if(isNotNull(latest_1)
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
              FROM
                (SELECT aggregation_target, timestamp, step_0,
                                                       latest_0,
                                                       step_1,
                                                       min(latest_1) over (PARTITION by aggregation_target
                                                                           ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
                 FROM
                   (SELECT e.timestamp as timestamp,
                           e."$group_0" as aggregation_target,
                           if(event = 'user signed up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'paid', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1
                    FROM events e
                    WHERE team_id = 2
                      AND event IN ['paid', 'user signed up']
                      AND toTimeZone(timestamp, 'UTC') >= toDateTime('2020-01-01 00:00:00', 'UTC')
                      AND toTimeZone(timestamp, 'UTC') <= toDateTime('2020-01-14 23:59:59', 'UTC')
                      AND (step_0 = 1
                           OR step_1 = 1) ))
              WHERE step_0 = 1 ))
        GROUP BY aggregation_target,
                 steps
        HAVING steps = max_steps)
     WHERE steps IN [1, 2]
     ORDER BY aggregation_target SETTINGS max_ast_elements=1000000,
                                          max_expanded_ast_elements=1000000),
       2 AS target_step
  SELECT concat(prop.1, '::', prop.2) as name,
         countDistinctIf(actor_id, steps = target_step) AS success_count,
         countDistinctIf(actor_id, steps <> target_step) AS failure_count
  FROM
    (SELECT actor_id,
            funnel_actors.steps as steps,
            arrayJoin(JSONExtractKeysAndValues(groups_0.group_properties_0, 'String')) as prop
     FROM funnel_actors
     LEFT JOIN
       (SELECT group_key,
               argMax(group_properties, _timestamp) AS group_properties_0
        FROM groups
        WHERE team_id = 2
          AND group_type_index = 0
        GROUP BY group_key) groups_0 ON funnel_actors.actor_id == groups_0.group_key) aggregation_target_with_props
  GROUP BY prop.1,
               prop.2
  HAVING prop.1 NOT IN []
  UNION ALL
  SELECT 'Total_Values_In_Query' as name,
         countDistinctIf(actor_id, steps = target_step) AS success_count,
         countDistinctIf(actor_id, steps <> target_step) AS failure_count
  FROM funnel_actors
  '''
# ---
# name: TestClickhouseFunnelCorrelation.test_funnel_correlation_with_properties_and_groups_materialized
  '''
  WITH funnel_actors as
    (SELECT aggregation_target AS actor_id , timestamp, steps,
                                                        final_timestamp,
                                                        first_timestamp
     FROM
       (SELECT aggregation_target,
               steps,
               avg(step_1_conversion_time) step_1_average_conversion_time_inner,
               median(step_1_conversion_time) step_1_median_conversion_time_inner ,
               argMax(latest_0, steps) as timestamp,
               argMax(latest_1, steps) as final_timestamp,
               argMax(latest_0, steps) as first_timestamp
        FROM
          (SELECT aggregation_target,
                  steps,
                  max(steps) over (PARTITION BY aggregation_target) as max_steps,
                                  step_1_conversion_time ,
                                  latest_0,
                                  latest_1,
                                  latest_0
           FROM
             (SELECT *,
                     if(latest_0 <= latest_1
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                     if(isNotNull(latest_1)
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
              FROM
                (SELECT aggregation_target, timestamp, step_0,
                                                       latest_0,
                                                       step_1,
                                                       min(latest_1) over (PARTITION by aggregation_target
                                                                           ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
                 FROM
                   (SELECT e.timestamp as timestamp,
                           e."$group_0" as aggregation_target,
                           if(event = 'user signed up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'paid', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1
                    FROM events e
                    WHERE team_id = 2
                      AND event IN ['paid', 'user signed up']
                      AND toTimeZone(timestamp, 'UTC') >= toDateTime('2020-01-01 00:00:00', 'UTC')
                      AND toTimeZone(timestamp, 'UTC') <= toDateTime('2020-01-14 23:59:59', 'UTC')
                      AND (step_0 = 1
                           OR step_1 = 1) ))
              WHERE step_0 = 1 ))
        GROUP BY aggregation_target,
                 steps
        HAVING steps = max_steps)
     WHERE steps IN [1, 2]
     ORDER BY aggregation_target SETTINGS max_ast_elements=1000000,
                                          max_expanded_ast_elements=1000000),
       2 AS target_step
  SELECT concat(prop.1, '::', prop.2) as name,
         countDistinctIf(actor_id, steps = target_step) AS success_count,
         countDistinctIf(actor_id, steps <> target_step) AS failure_count
  FROM
    (SELECT actor_id,
            funnel_actors.steps as steps,
            arrayJoin(arrayZip(['industry'], [replaceRegexpAll(JSONExtractRaw(groups_0.group_properties_0, 'industry'), '^"|"$', '')])) as prop
     FROM funnel_actors
     LEFT JOIN
       (SELECT group_key,
               argMax(group_properties, _timestamp) AS group_properties_0
        FROM groups
        WHERE team_id = 2
          AND group_type_index = 0
        GROUP BY group_key) groups_0 ON funnel_actors.actor_id == groups_0.group_key) aggregation_target_with_props
  GROUP BY prop.1,
               prop.2
  HAVING prop.1 NOT IN []
  UNION ALL
  SELECT 'Total_Values_In_Query' as name,
         countDistinctIf(actor_id, steps = target_step) AS success_count,
         countDistinctIf(actor_id, steps <> target_step) AS failure_count
  FROM funnel_actors
  '''
# ---
# name: TestClickhouseFunnelCorrelation.test_funnel_correlation_with_properties_and_groups_materialized.1
  '''
  WITH funnel_actors AS
    (SELECT aggregation_target AS actor_id , timestamp, steps,
                                                        final_timestamp,
                                                        first_timestamp
     FROM
       (SELECT aggregation_target,
               steps,
               avg(step_1_conversion_time) step_1_average_conversion_time_inner,
               median(step_1_conversion_time) step_1_median_conversion_time_inner ,
               argMax(latest_0, steps) as timestamp,
               argMax(latest_1, steps) as final_timestamp,
               argMax(latest_0, steps) as first_timestamp
        FROM
          (SELECT aggregation_target,
                  steps,
                  max(steps) over (PARTITION BY aggregation_target) as max_steps,
                                  step_1_conversion_time ,
                                  latest_0,
                                  latest_1,
                                  latest_0
           FROM
             (SELECT *,
                     if(latest_0 <= latest_1
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                     if(isNotNull(latest_1)
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
              FROM
                (SELECT aggregation_target, timestamp, step_0,
                                                       latest_0,
                                                       step_1,
                                                       min(latest_1) over (PARTITION by aggregation_target
                                                                           ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
                 FROM
                   (SELECT e.timestamp as timestamp,
                           e."$group_0" as aggregation_target,
                           if(event = 'user signed up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'paid', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1
                    FROM events e
                    LEFT JOIN
                      (SELECT group_key,
                              argMax(group_properties, _timestamp) AS group_properties_0
                       FROM groups
                       WHERE team_id = 2
                         AND group_type_index = 0
                       GROUP BY group_key) groups_0 ON "$group_0" == groups_0.group_key
                    WHERE team_id = 2
                      AND event IN ['paid', 'user signed up']
                      AND toTimeZone(timestamp, 'UTC') >= toDateTime('2020-01-01 00:00:00', 'UTC')
                      AND toTimeZone(timestamp, 'UTC') <= toDateTime('2020-01-14 23:59:59', 'UTC')
                      AND (has(['positive'], replaceRegexpAll(JSONExtractRaw(group_properties_0, 'industry'), '^"|"$', '')))
                      AND (step_0 = 1
                           OR step_1 = 1) ))
              WHERE step_0 = 1 ))
        GROUP BY aggregation_target,
                 steps
        HAVING steps = max_steps)
     WHERE steps IN [1, 2]
     ORDER BY aggregation_target SETTINGS max_ast_elements=1000000,
                                          max_expanded_ast_elements=1000000),
       2 AS target_step
  SELECT funnel_actors.actor_id AS actor_id
  FROM funnel_actors
  WHERE funnel_actors.steps = target_step
  GROUP BY funnel_actors.actor_id
  ORDER BY actor_id
  LIMIT 100
  OFFSET 0
  '''
# ---
# name: TestClickhouseFunnelCorrelation.test_funnel_correlation_with_properties_and_groups_materialized.2
  '''
  WITH funnel_actors AS
    (SELECT aggregation_target AS actor_id , timestamp, steps,
                                                        final_timestamp,
                                                        first_timestamp
     FROM
       (SELECT aggregation_target,
               steps,
               avg(step_1_conversion_time) step_1_average_conversion_time_inner,
               median(step_1_conversion_time) step_1_median_conversion_time_inner ,
               argMax(latest_0, steps) as timestamp,
               argMax(latest_1, steps) as final_timestamp,
               argMax(latest_0, steps) as first_timestamp
        FROM
          (SELECT aggregation_target,
                  steps,
                  max(steps) over (PARTITION BY aggregation_target) as max_steps,
                                  step_1_conversion_time ,
                                  latest_0,
                                  latest_1,
                                  latest_0
           FROM
             (SELECT *,
                     if(latest_0 <= latest_1
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                     if(isNotNull(latest_1)
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
              FROM
                (SELECT aggregation_target, timestamp, step_0,
                                                       latest_0,
                                                       step_1,
                                                       min(latest_1) over (PARTITION by aggregation_target
                                                                           ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
                 FROM
                   (SELECT e.timestamp as timestamp,
                           e."$group_0" as aggregation_target,
                           if(event = 'user signed up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'paid', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1
                    FROM events e
                    LEFT JOIN
                      (SELECT group_key,
                              argMax(group_properties, _timestamp) AS group_properties_0
                       FROM groups
                       WHERE team_id = 2
                         AND group_type_index = 0
                       GROUP BY group_key) groups_0 ON "$group_0" == groups_0.group_key
                    WHERE team_id = 2
                      AND event IN ['paid', 'user signed up']
                      AND toTimeZone(timestamp, 'UTC') >= toDateTime('2020-01-01 00:00:00', 'UTC')
                      AND toTimeZone(timestamp, 'UTC') <= toDateTime('2020-01-14 23:59:59', 'UTC')
                      AND (has(['positive'], replaceRegexpAll(JSONExtractRaw(group_properties_0, 'industry'), '^"|"$', '')))
                      AND (step_0 = 1
                           OR step_1 = 1) ))
              WHERE step_0 = 1 ))
        GROUP BY aggregation_target,
                 steps
        HAVING steps = max_steps)
     WHERE steps IN [1, 2]
     ORDER BY aggregation_target SETTINGS max_ast_elements=1000000,
                                          max_expanded_ast_elements=1000000),
       2 AS target_step
  SELECT funnel_actors.actor_id AS actor_id
  FROM funnel_actors
  WHERE funnel_actors.steps <> target_step
  GROUP BY funnel_actors.actor_id
  ORDER BY actor_id
  LIMIT 100
  OFFSET 0
  '''
# ---
# name: TestClickhouseFunnelCorrelation.test_funnel_correlation_with_properties_and_groups_materialized.3
  '''
  WITH funnel_actors AS
    (SELECT aggregation_target AS actor_id , timestamp, steps,
                                                        final_timestamp,
                                                        first_timestamp
     FROM
       (SELECT aggregation_target,
               steps,
               avg(step_1_conversion_time) step_1_average_conversion_time_inner,
               median(step_1_conversion_time) step_1_median_conversion_time_inner ,
               argMax(latest_0, steps) as timestamp,
               argMax(latest_1, steps) as final_timestamp,
               argMax(latest_0, steps) as first_timestamp
        FROM
          (SELECT aggregation_target,
                  steps,
                  max(steps) over (PARTITION BY aggregation_target) as max_steps,
                                  step_1_conversion_time ,
                                  latest_0,
                                  latest_1,
                                  latest_0
           FROM
             (SELECT *,
                     if(latest_0 <= latest_1
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                     if(isNotNull(latest_1)
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
              FROM
                (SELECT aggregation_target, timestamp, step_0,
                                                       latest_0,
                                                       step_1,
                                                       min(latest_1) over (PARTITION by aggregation_target
                                                                           ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
                 FROM
                   (SELECT e.timestamp as timestamp,
                           e."$group_0" as aggregation_target,
                           if(event = 'user signed up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'paid', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1
                    FROM events e
                    LEFT JOIN
                      (SELECT group_key,
                              argMax(group_properties, _timestamp) AS group_properties_0
                       FROM groups
                       WHERE team_id = 2
                         AND group_type_index = 0
                       GROUP BY group_key) groups_0 ON "$group_0" == groups_0.group_key
                    WHERE team_id = 2
                      AND event IN ['paid', 'user signed up']
                      AND toTimeZone(timestamp, 'UTC') >= toDateTime('2020-01-01 00:00:00', 'UTC')
                      AND toTimeZone(timestamp, 'UTC') <= toDateTime('2020-01-14 23:59:59', 'UTC')
                      AND (has(['negative'], replaceRegexpAll(JSONExtractRaw(group_properties_0, 'industry'), '^"|"$', '')))
                      AND (step_0 = 1
                           OR step_1 = 1) ))
              WHERE step_0 = 1 ))
        GROUP BY aggregation_target,
                 steps
        HAVING steps = max_steps)
     WHERE steps IN [1, 2]
     ORDER BY aggregation_target SETTINGS max_ast_elements=1000000,
                                          max_expanded_ast_elements=1000000),
       2 AS target_step
  SELECT funnel_actors.actor_id AS actor_id
  FROM funnel_actors
  WHERE funnel_actors.steps = target_step
  GROUP BY funnel_actors.actor_id
  ORDER BY actor_id
  LIMIT 100
  OFFSET 0
  '''
# ---
# name: TestClickhouseFunnelCorrelation.test_funnel_correlation_with_properties_and_groups_materialized.4
  '''
  WITH funnel_actors AS
    (SELECT aggregation_target AS actor_id , timestamp, steps,
                                                        final_timestamp,
                                                        first_timestamp
     FROM
       (SELECT aggregation_target,
               steps,
               avg(step_1_conversion_time) step_1_average_conversion_time_inner,
               median(step_1_conversion_time) step_1_median_conversion_time_inner ,
               argMax(latest_0, steps) as timestamp,
               argMax(latest_1, steps) as final_timestamp,
               argMax(latest_0, steps) as first_timestamp
        FROM
          (SELECT aggregation_target,
                  steps,
                  max(steps) over (PARTITION BY aggregation_target) as max_steps,
                                  step_1_conversion_time ,
                                  latest_0,
                                  latest_1,
                                  latest_0
           FROM
             (SELECT *,
                     if(latest_0 <= latest_1
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                     if(isNotNull(latest_1)
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
              FROM
                (SELECT aggregation_target, timestamp, step_0,
                                                       latest_0,
                                                       step_1,
                                                       min(latest_1) over (PARTITION by aggregation_target
                                                                           ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
                 FROM
                   (SELECT e.timestamp as timestamp,
                           e."$group_0" as aggregation_target,
                           if(event = 'user signed up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'paid', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1
                    FROM events e
                    LEFT JOIN
                      (SELECT group_key,
                              argMax(group_properties, _timestamp) AS group_properties_0
                       FROM groups
                       WHERE team_id = 2
                         AND group_type_index = 0
                       GROUP BY group_key) groups_0 ON "$group_0" == groups_0.group_key
                    WHERE team_id = 2
                      AND event IN ['paid', 'user signed up']
                      AND toTimeZone(timestamp, 'UTC') >= toDateTime('2020-01-01 00:00:00', 'UTC')
                      AND toTimeZone(timestamp, 'UTC') <= toDateTime('2020-01-14 23:59:59', 'UTC')
                      AND (has(['negative'], replaceRegexpAll(JSONExtractRaw(group_properties_0, 'industry'), '^"|"$', '')))
                      AND (step_0 = 1
                           OR step_1 = 1) ))
              WHERE step_0 = 1 ))
        GROUP BY aggregation_target,
                 steps
        HAVING steps = max_steps)
     WHERE steps IN [1, 2]
     ORDER BY aggregation_target SETTINGS max_ast_elements=1000000,
                                          max_expanded_ast_elements=1000000),
       2 AS target_step
  SELECT funnel_actors.actor_id AS actor_id
  FROM funnel_actors
  WHERE funnel_actors.steps <> target_step
  GROUP BY funnel_actors.actor_id
  ORDER BY actor_id
  LIMIT 100
  OFFSET 0
  '''
# ---
# name: TestClickhouseFunnelCorrelation.test_funnel_correlation_with_properties_and_groups_materialized.5
  '''
  WITH funnel_actors as
    (SELECT aggregation_target AS actor_id , timestamp, steps,
                                                        final_timestamp,
                                                        first_timestamp
     FROM
       (SELECT aggregation_target,
               steps,
               avg(step_1_conversion_time) step_1_average_conversion_time_inner,
               median(step_1_conversion_time) step_1_median_conversion_time_inner ,
               argMax(latest_0, steps) as timestamp,
               argMax(latest_1, steps) as final_timestamp,
               argMax(latest_0, steps) as first_timestamp
        FROM
          (SELECT aggregation_target,
                  steps,
                  max(steps) over (PARTITION BY aggregation_target) as max_steps,
                                  step_1_conversion_time ,
                                  latest_0,
                                  latest_1,
                                  latest_0
           FROM
             (SELECT *,
                     if(latest_0 <= latest_1
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                     if(isNotNull(latest_1)
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
              FROM
                (SELECT aggregation_target, timestamp, step_0,
                                                       latest_0,
                                                       step_1,
                                                       min(latest_1) over (PARTITION by aggregation_target
                                                                           ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
                 FROM
                   (SELECT e.timestamp as timestamp,
                           e."$group_0" as aggregation_target,
                           if(event = 'user signed up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'paid', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1
                    FROM events e
                    WHERE team_id = 2
                      AND event IN ['paid', 'user signed up']
                      AND toTimeZone(timestamp, 'UTC') >= toDateTime('2020-01-01 00:00:00', 'UTC')
                      AND toTimeZone(timestamp, 'UTC') <= toDateTime('2020-01-14 23:59:59', 'UTC')
                      AND (step_0 = 1
                           OR step_1 = 1) ))
              WHERE step_0 = 1 ))
        GROUP BY aggregation_target,
                 steps
        HAVING steps = max_steps)
     WHERE steps IN [1, 2]
     ORDER BY aggregation_target SETTINGS max_ast_elements=1000000,
                                          max_expanded_ast_elements=1000000),
       2 AS target_step
  SELECT concat(prop.1, '::', prop.2) as name,
         countDistinctIf(actor_id, steps = target_step) AS success_count,
         countDistinctIf(actor_id, steps <> target_step) AS failure_count
  FROM
    (SELECT actor_id,
            funnel_actors.steps as steps,
            arrayJoin(JSONExtractKeysAndValues(groups_0.group_properties_0, 'String')) as prop
     FROM funnel_actors
     LEFT JOIN
       (SELECT group_key,
               argMax(group_properties, _timestamp) AS group_properties_0
        FROM groups
        WHERE team_id = 2
          AND group_type_index = 0
        GROUP BY group_key) groups_0 ON funnel_actors.actor_id == groups_0.group_key) aggregation_target_with_props
  GROUP BY prop.1,
               prop.2
  HAVING prop.1 NOT IN []
  UNION ALL
  SELECT 'Total_Values_In_Query' as name,
         countDistinctIf(actor_id, steps = target_step) AS success_count,
         countDistinctIf(actor_id, steps <> target_step) AS failure_count
  FROM funnel_actors
  '''
# ---
# name: TestClickhouseFunnelCorrelation.test_funnel_correlation_with_properties_and_groups_person_on_events
  '''
  WITH funnel_actors as
    (SELECT aggregation_target AS actor_id , timestamp, steps,
                                                        final_timestamp,
                                                        first_timestamp
     FROM
       (SELECT aggregation_target,
               steps,
               avg(step_1_conversion_time) step_1_average_conversion_time_inner,
               median(step_1_conversion_time) step_1_median_conversion_time_inner ,
               argMax(latest_0, steps) as timestamp,
               argMax(latest_1, steps) as final_timestamp,
               argMax(latest_0, steps) as first_timestamp
        FROM
          (SELECT aggregation_target,
                  steps,
                  max(steps) over (PARTITION BY aggregation_target) as max_steps,
                                  step_1_conversion_time ,
                                  latest_0,
                                  latest_1,
                                  latest_0
           FROM
             (SELECT *,
                     if(latest_0 <= latest_1
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                     if(isNotNull(latest_1)
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
              FROM
                (SELECT aggregation_target, timestamp, step_0,
                                                       latest_0,
                                                       step_1,
                                                       min(latest_1) over (PARTITION by aggregation_target
                                                                           ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
                 FROM
                   (SELECT e.timestamp as timestamp,
                           e."$group_0" as aggregation_target,
                           e.person_id as person_id,
                           if(event = 'user signed up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'paid', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1
                    FROM events e
                    WHERE team_id = 2
                      AND event IN ['paid', 'user signed up']
                      AND toTimeZone(timestamp, 'UTC') >= toDateTime('2020-01-01 00:00:00', 'UTC')
                      AND toTimeZone(timestamp, 'UTC') <= toDateTime('2020-01-14 23:59:59', 'UTC')
                      AND notEmpty(e.person_id)
                      AND (step_0 = 1
                           OR step_1 = 1) ))
              WHERE step_0 = 1 ))
        GROUP BY aggregation_target,
                 steps
        HAVING steps = max_steps)
     WHERE steps IN [1, 2]
     ORDER BY aggregation_target SETTINGS max_ast_elements=1000000,
                                          max_expanded_ast_elements=1000000),
       2 AS target_step
  SELECT concat(prop.1, '::', prop.2) as name,
         countDistinctIf(actor_id, steps = target_step) AS success_count,
         countDistinctIf(actor_id, steps <> target_step) AS failure_count
  FROM
    (SELECT actor_id,
            funnel_actors.steps as steps,
            arrayJoin(arrayZip(['industry'], [replaceRegexpAll(JSONExtractRaw(groups_0.group_properties_0, 'industry'), '^"|"$', '')])) as prop
     FROM funnel_actors
     LEFT JOIN
       (SELECT group_key,
               argMax(group_properties, _timestamp) AS group_properties_0
        FROM groups
        WHERE team_id = 2
          AND group_type_index = 0
        GROUP BY group_key) groups_0 ON funnel_actors.actor_id == groups_0.group_key) aggregation_target_with_props
  GROUP BY prop.1,
               prop.2
  HAVING prop.1 NOT IN []
  UNION ALL
  SELECT 'Total_Values_In_Query' as name,
         countDistinctIf(actor_id, steps = target_step) AS success_count,
         countDistinctIf(actor_id, steps <> target_step) AS failure_count
  FROM funnel_actors
  '''
# ---
# name: TestClickhouseFunnelCorrelation.test_funnel_correlation_with_properties_and_groups_person_on_events.1
  '''
  WITH funnel_actors AS
    (SELECT aggregation_target AS actor_id , timestamp, steps,
                                                        final_timestamp,
                                                        first_timestamp
     FROM
       (SELECT aggregation_target,
               steps,
               avg(step_1_conversion_time) step_1_average_conversion_time_inner,
               median(step_1_conversion_time) step_1_median_conversion_time_inner ,
               argMax(latest_0, steps) as timestamp,
               argMax(latest_1, steps) as final_timestamp,
               argMax(latest_0, steps) as first_timestamp
        FROM
          (SELECT aggregation_target,
                  steps,
                  max(steps) over (PARTITION BY aggregation_target) as max_steps,
                                  step_1_conversion_time ,
                                  latest_0,
                                  latest_1,
                                  latest_0
           FROM
             (SELECT *,
                     if(latest_0 <= latest_1
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                     if(isNotNull(latest_1)
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
              FROM
                (SELECT aggregation_target, timestamp, step_0,
                                                       latest_0,
                                                       step_1,
                                                       min(latest_1) over (PARTITION by aggregation_target
                                                                           ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
                 FROM
                   (SELECT e.timestamp as timestamp,
                           e."$group_0" as aggregation_target,
                           e.person_id as person_id,
                           if(event = 'user signed up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'paid', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1
                    FROM events e
                    LEFT JOIN
                      (SELECT group_key,
                              argMax(group_properties, _timestamp) AS group_properties_0
                       FROM groups
                       WHERE team_id = 2
                         AND group_type_index = 0
                       GROUP BY group_key) groups_0 ON "$group_0" == groups_0.group_key
                    WHERE team_id = 2
                      AND event IN ['paid', 'user signed up']
                      AND toTimeZone(timestamp, 'UTC') >= toDateTime('2020-01-01 00:00:00', 'UTC')
                      AND toTimeZone(timestamp, 'UTC') <= toDateTime('2020-01-14 23:59:59', 'UTC')
                      AND (has(['positive'], replaceRegexpAll(JSONExtractRaw(group_properties_0, 'industry'), '^"|"$', '')))
                      AND notEmpty(e.person_id)
                      AND (step_0 = 1
                           OR step_1 = 1) ))
              WHERE step_0 = 1 ))
        GROUP BY aggregation_target,
                 steps
        HAVING steps = max_steps)
     WHERE steps IN [1, 2]
     ORDER BY aggregation_target SETTINGS max_ast_elements=1000000,
                                          max_expanded_ast_elements=1000000),
       2 AS target_step
  SELECT funnel_actors.actor_id AS actor_id
  FROM funnel_actors
  WHERE funnel_actors.steps = target_step
  GROUP BY funnel_actors.actor_id
  ORDER BY actor_id
  LIMIT 100
  OFFSET 0
  '''
# ---
# name: TestClickhouseFunnelCorrelation.test_funnel_correlation_with_properties_and_groups_person_on_events.2
  '''
  WITH funnel_actors AS
    (SELECT aggregation_target AS actor_id , timestamp, steps,
                                                        final_timestamp,
                                                        first_timestamp
     FROM
       (SELECT aggregation_target,
               steps,
               avg(step_1_conversion_time) step_1_average_conversion_time_inner,
               median(step_1_conversion_time) step_1_median_conversion_time_inner ,
               argMax(latest_0, steps) as timestamp,
               argMax(latest_1, steps) as final_timestamp,
               argMax(latest_0, steps) as first_timestamp
        FROM
          (SELECT aggregation_target,
                  steps,
                  max(steps) over (PARTITION BY aggregation_target) as max_steps,
                                  step_1_conversion_time ,
                                  latest_0,
                                  latest_1,
                                  latest_0
           FROM
             (SELECT *,
                     if(latest_0 <= latest_1
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                     if(isNotNull(latest_1)
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
              FROM
                (SELECT aggregation_target, timestamp, step_0,
                                                       latest_0,
                                                       step_1,
                                                       min(latest_1) over (PARTITION by aggregation_target
                                                                           ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
                 FROM
                   (SELECT e.timestamp as timestamp,
                           e."$group_0" as aggregation_target,
                           e.person_id as person_id,
                           if(event = 'user signed up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'paid', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1
                    FROM events e
                    LEFT JOIN
                      (SELECT group_key,
                              argMax(group_properties, _timestamp) AS group_properties_0
                       FROM groups
                       WHERE team_id = 2
                         AND group_type_index = 0
                       GROUP BY group_key) groups_0 ON "$group_0" == groups_0.group_key
                    WHERE team_id = 2
                      AND event IN ['paid', 'user signed up']
                      AND toTimeZone(timestamp, 'UTC') >= toDateTime('2020-01-01 00:00:00', 'UTC')
                      AND toTimeZone(timestamp, 'UTC') <= toDateTime('2020-01-14 23:59:59', 'UTC')
                      AND (has(['positive'], replaceRegexpAll(JSONExtractRaw(group_properties_0, 'industry'), '^"|"$', '')))
                      AND notEmpty(e.person_id)
                      AND (step_0 = 1
                           OR step_1 = 1) ))
              WHERE step_0 = 1 ))
        GROUP BY aggregation_target,
                 steps
        HAVING steps = max_steps)
     WHERE steps IN [1, 2]
     ORDER BY aggregation_target SETTINGS max_ast_elements=1000000,
                                          max_expanded_ast_elements=1000000),
       2 AS target_step
  SELECT funnel_actors.actor_id AS actor_id
  FROM funnel_actors
  WHERE funnel_actors.steps <> target_step
  GROUP BY funnel_actors.actor_id
  ORDER BY actor_id
  LIMIT 100
  OFFSET 0
  '''
# ---
# name: TestClickhouseFunnelCorrelation.test_funnel_correlation_with_properties_and_groups_person_on_events.3
  '''
  WITH funnel_actors AS
    (SELECT aggregation_target AS actor_id , timestamp, steps,
                                                        final_timestamp,
                                                        first_timestamp
     FROM
       (SELECT aggregation_target,
               steps,
               avg(step_1_conversion_time) step_1_average_conversion_time_inner,
               median(step_1_conversion_time) step_1_median_conversion_time_inner ,
               argMax(latest_0, steps) as timestamp,
               argMax(latest_1, steps) as final_timestamp,
               argMax(latest_0, steps) as first_timestamp
        FROM
          (SELECT aggregation_target,
                  steps,
                  max(steps) over (PARTITION BY aggregation_target) as max_steps,
                                  step_1_conversion_time ,
                                  latest_0,
                                  latest_1,
                                  latest_0
           FROM
             (SELECT *,
                     if(latest_0 <= latest_1
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                     if(isNotNull(latest_1)
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
              FROM
                (SELECT aggregation_target, timestamp, step_0,
                                                       latest_0,
                                                       step_1,
                                                       min(latest_1) over (PARTITION by aggregation_target
                                                                           ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
                 FROM
                   (SELECT e.timestamp as timestamp,
                           e."$group_0" as aggregation_target,
                           e.person_id as person_id,
                           if(event = 'user signed up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'paid', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1
                    FROM events e
                    LEFT JOIN
                      (SELECT group_key,
                              argMax(group_properties, _timestamp) AS group_properties_0
                       FROM groups
                       WHERE team_id = 2
                         AND group_type_index = 0
                       GROUP BY group_key) groups_0 ON "$group_0" == groups_0.group_key
                    WHERE team_id = 2
                      AND event IN ['paid', 'user signed up']
                      AND toTimeZone(timestamp, 'UTC') >= toDateTime('2020-01-01 00:00:00', 'UTC')
                      AND toTimeZone(timestamp, 'UTC') <= toDateTime('2020-01-14 23:59:59', 'UTC')
                      AND (has(['negative'], replaceRegexpAll(JSONExtractRaw(group_properties_0, 'industry'), '^"|"$', '')))
                      AND notEmpty(e.person_id)
                      AND (step_0 = 1
                           OR step_1 = 1) ))
              WHERE step_0 = 1 ))
        GROUP BY aggregation_target,
                 steps
        HAVING steps = max_steps)
     WHERE steps IN [1, 2]
     ORDER BY aggregation_target SETTINGS max_ast_elements=1000000,
                                          max_expanded_ast_elements=1000000),
       2 AS target_step
  SELECT funnel_actors.actor_id AS actor_id
  FROM funnel_actors
  WHERE funnel_actors.steps = target_step
  GROUP BY funnel_actors.actor_id
  ORDER BY actor_id
  LIMIT 100
  OFFSET 0
  '''
# ---
# name: TestClickhouseFunnelCorrelation.test_funnel_correlation_with_properties_and_groups_person_on_events.4
  '''
  WITH funnel_actors AS
    (SELECT aggregation_target AS actor_id , timestamp, steps,
                                                        final_timestamp,
                                                        first_timestamp
     FROM
       (SELECT aggregation_target,
               steps,
               avg(step_1_conversion_time) step_1_average_conversion_time_inner,
               median(step_1_conversion_time) step_1_median_conversion_time_inner ,
               argMax(latest_0, steps) as timestamp,
               argMax(latest_1, steps) as final_timestamp,
               argMax(latest_0, steps) as first_timestamp
        FROM
          (SELECT aggregation_target,
                  steps,
                  max(steps) over (PARTITION BY aggregation_target) as max_steps,
                                  step_1_conversion_time ,
                                  latest_0,
                                  latest_1,
                                  latest_0
           FROM
             (SELECT *,
                     if(latest_0 <= latest_1
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                     if(isNotNull(latest_1)
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
              FROM
                (SELECT aggregation_target, timestamp, step_0,
                                                       latest_0,
                                                       step_1,
                                                       min(latest_1) over (PARTITION by aggregation_target
                                                                           ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
                 FROM
                   (SELECT e.timestamp as timestamp,
                           e."$group_0" as aggregation_target,
                           e.person_id as person_id,
                           if(event = 'user signed up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'paid', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1
                    FROM events e
                    LEFT JOIN
                      (SELECT group_key,
                              argMax(group_properties, _timestamp) AS group_properties_0
                       FROM groups
                       WHERE team_id = 2
                         AND group_type_index = 0
                       GROUP BY group_key) groups_0 ON "$group_0" == groups_0.group_key
                    WHERE team_id = 2
                      AND event IN ['paid', 'user signed up']
                      AND toTimeZone(timestamp, 'UTC') >= toDateTime('2020-01-01 00:00:00', 'UTC')
                      AND toTimeZone(timestamp, 'UTC') <= toDateTime('2020-01-14 23:59:59', 'UTC')
                      AND (has(['negative'], replaceRegexpAll(JSONExtractRaw(group_properties_0, 'industry'), '^"|"$', '')))
                      AND notEmpty(e.person_id)
                      AND (step_0 = 1
                           OR step_1 = 1) ))
              WHERE step_0 = 1 ))
        GROUP BY aggregation_target,
                 steps
        HAVING steps = max_steps)
     WHERE steps IN [1, 2]
     ORDER BY aggregation_target SETTINGS max_ast_elements=1000000,
                                          max_expanded_ast_elements=1000000),
       2 AS target_step
  SELECT funnel_actors.actor_id AS actor_id
  FROM funnel_actors
  WHERE funnel_actors.steps <> target_step
  GROUP BY funnel_actors.actor_id
  ORDER BY actor_id
  LIMIT 100
  OFFSET 0
  '''
# ---
# name: TestClickhouseFunnelCorrelation.test_funnel_correlation_with_properties_and_groups_person_on_events.5
  '''
  WITH funnel_actors as
    (SELECT aggregation_target AS actor_id , timestamp, steps,
                                                        final_timestamp,
                                                        first_timestamp
     FROM
       (SELECT aggregation_target,
               steps,
               avg(step_1_conversion_time) step_1_average_conversion_time_inner,
               median(step_1_conversion_time) step_1_median_conversion_time_inner ,
               argMax(latest_0, steps) as timestamp,
               argMax(latest_1, steps) as final_timestamp,
               argMax(latest_0, steps) as first_timestamp
        FROM
          (SELECT aggregation_target,
                  steps,
                  max(steps) over (PARTITION BY aggregation_target) as max_steps,
                                  step_1_conversion_time ,
                                  latest_0,
                                  latest_1,
                                  latest_0
           FROM
             (SELECT *,
                     if(latest_0 <= latest_1
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                     if(isNotNull(latest_1)
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
              FROM
                (SELECT aggregation_target, timestamp, step_0,
                                                       latest_0,
                                                       step_1,
                                                       min(latest_1) over (PARTITION by aggregation_target
                                                                           ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
                 FROM
                   (SELECT e.timestamp as timestamp,
                           e."$group_0" as aggregation_target,
                           e.person_id as person_id,
                           if(event = 'user signed up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'paid', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1
                    FROM events e
                    WHERE team_id = 2
                      AND event IN ['paid', 'user signed up']
                      AND toTimeZone(timestamp, 'UTC') >= toDateTime('2020-01-01 00:00:00', 'UTC')
                      AND toTimeZone(timestamp, 'UTC') <= toDateTime('2020-01-14 23:59:59', 'UTC')
                      AND notEmpty(e.person_id)
                      AND (step_0 = 1
                           OR step_1 = 1) ))
              WHERE step_0 = 1 ))
        GROUP BY aggregation_target,
                 steps
        HAVING steps = max_steps)
     WHERE steps IN [1, 2]
     ORDER BY aggregation_target SETTINGS max_ast_elements=1000000,
                                          max_expanded_ast_elements=1000000),
       2 AS target_step
  SELECT concat(prop.1, '::', prop.2) as name,
         countDistinctIf(actor_id, steps = target_step) AS success_count,
         countDistinctIf(actor_id, steps <> target_step) AS failure_count
  FROM
    (SELECT actor_id,
            funnel_actors.steps as steps,
            arrayJoin(JSONExtractKeysAndValues(groups_0.group_properties_0, 'String')) as prop
     FROM funnel_actors
     LEFT JOIN
       (SELECT group_key,
               argMax(group_properties, _timestamp) AS group_properties_0
        FROM groups
        WHERE team_id = 2
          AND group_type_index = 0
        GROUP BY group_key) groups_0 ON funnel_actors.actor_id == groups_0.group_key) aggregation_target_with_props
  GROUP BY prop.1,
               prop.2
  HAVING prop.1 NOT IN []
  UNION ALL
  SELECT 'Total_Values_In_Query' as name,
         countDistinctIf(actor_id, steps = target_step) AS success_count,
         countDistinctIf(actor_id, steps <> target_step) AS failure_count
  FROM funnel_actors
  '''
# ---
# name: TestClickhouseFunnelCorrelation.test_funnel_correlation_with_properties_and_groups_person_on_events_materialized
  '''
  WITH funnel_actors as
    (SELECT aggregation_target AS actor_id , timestamp, steps,
                                                        final_timestamp,
                                                        first_timestamp
     FROM
       (SELECT aggregation_target,
               steps,
               avg(step_1_conversion_time) step_1_average_conversion_time_inner,
               median(step_1_conversion_time) step_1_median_conversion_time_inner ,
               argMax(latest_0, steps) as timestamp,
               argMax(latest_1, steps) as final_timestamp,
               argMax(latest_0, steps) as first_timestamp
        FROM
          (SELECT aggregation_target,
                  steps,
                  max(steps) over (PARTITION BY aggregation_target) as max_steps,
                                  step_1_conversion_time ,
                                  latest_0,
                                  latest_1,
                                  latest_0
           FROM
             (SELECT *,
                     if(latest_0 <= latest_1
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                     if(isNotNull(latest_1)
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
              FROM
                (SELECT aggregation_target, timestamp, step_0,
                                                       latest_0,
                                                       step_1,
                                                       min(latest_1) over (PARTITION by aggregation_target
                                                                           ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
                 FROM
                   (SELECT e.timestamp as timestamp,
                           e."$group_0" as aggregation_target,
                           e.person_id as person_id,
                           if(event = 'user signed up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'paid', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1
                    FROM events e
                    WHERE team_id = 2
                      AND event IN ['paid', 'user signed up']
                      AND toTimeZone(timestamp, 'UTC') >= toDateTime('2020-01-01 00:00:00', 'UTC')
                      AND toTimeZone(timestamp, 'UTC') <= toDateTime('2020-01-14 23:59:59', 'UTC')
                      AND notEmpty(e.person_id)
                      AND (step_0 = 1
                           OR step_1 = 1) ))
              WHERE step_0 = 1 ))
        GROUP BY aggregation_target,
                 steps
        HAVING steps = max_steps)
     WHERE steps IN [1, 2]
     ORDER BY aggregation_target SETTINGS max_ast_elements=1000000,
                                          max_expanded_ast_elements=1000000),
       2 AS target_step
  SELECT concat(prop.1, '::', prop.2) as name,
         countDistinctIf(actor_id, steps = target_step) AS success_count,
         countDistinctIf(actor_id, steps <> target_step) AS failure_count
  FROM
    (SELECT actor_id,
            funnel_actors.steps as steps,
            arrayJoin(arrayZip(['industry'], [replaceRegexpAll(JSONExtractRaw(groups_0.group_properties_0, 'industry'), '^"|"$', '')])) as prop
     FROM funnel_actors
     LEFT JOIN
       (SELECT group_key,
               argMax(group_properties, _timestamp) AS group_properties_0
        FROM groups
        WHERE team_id = 2
          AND group_type_index = 0
        GROUP BY group_key) groups_0 ON funnel_actors.actor_id == groups_0.group_key) aggregation_target_with_props
  GROUP BY prop.1,
               prop.2
  HAVING prop.1 NOT IN []
  UNION ALL
  SELECT 'Total_Values_In_Query' as name,
         countDistinctIf(actor_id, steps = target_step) AS success_count,
         countDistinctIf(actor_id, steps <> target_step) AS failure_count
  FROM funnel_actors
  '''
# ---
# name: TestClickhouseFunnelCorrelation.test_funnel_correlation_with_properties_and_groups_person_on_events_materialized.1
  '''
  WITH funnel_actors AS
    (SELECT aggregation_target AS actor_id , timestamp, steps,
                                                        final_timestamp,
                                                        first_timestamp
     FROM
       (SELECT aggregation_target,
               steps,
               avg(step_1_conversion_time) step_1_average_conversion_time_inner,
               median(step_1_conversion_time) step_1_median_conversion_time_inner ,
               argMax(latest_0, steps) as timestamp,
               argMax(latest_1, steps) as final_timestamp,
               argMax(latest_0, steps) as first_timestamp
        FROM
          (SELECT aggregation_target,
                  steps,
                  max(steps) over (PARTITION BY aggregation_target) as max_steps,
                                  step_1_conversion_time ,
                                  latest_0,
                                  latest_1,
                                  latest_0
           FROM
             (SELECT *,
                     if(latest_0 <= latest_1
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                     if(isNotNull(latest_1)
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
              FROM
                (SELECT aggregation_target, timestamp, step_0,
                                                       latest_0,
                                                       step_1,
                                                       min(latest_1) over (PARTITION by aggregation_target
                                                                           ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
                 FROM
                   (SELECT e.timestamp as timestamp,
                           e."$group_0" as aggregation_target,
                           e.person_id as person_id,
                           if(event = 'user signed up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'paid', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1
                    FROM events e
                    LEFT JOIN
                      (SELECT group_key,
                              argMax(group_properties, _timestamp) AS group_properties_0
                       FROM groups
                       WHERE team_id = 2
                         AND group_type_index = 0
                       GROUP BY group_key) groups_0 ON "$group_0" == groups_0.group_key
                    WHERE team_id = 2
                      AND event IN ['paid', 'user signed up']
                      AND toTimeZone(timestamp, 'UTC') >= toDateTime('2020-01-01 00:00:00', 'UTC')
                      AND toTimeZone(timestamp, 'UTC') <= toDateTime('2020-01-14 23:59:59', 'UTC')
                      AND (has(['positive'], replaceRegexpAll(JSONExtractRaw(group_properties_0, 'industry'), '^"|"$', '')))
                      AND notEmpty(e.person_id)
                      AND (step_0 = 1
                           OR step_1 = 1) ))
              WHERE step_0 = 1 ))
        GROUP BY aggregation_target,
                 steps
        HAVING steps = max_steps)
     WHERE steps IN [1, 2]
     ORDER BY aggregation_target SETTINGS max_ast_elements=1000000,
                                          max_expanded_ast_elements=1000000),
       2 AS target_step
  SELECT funnel_actors.actor_id AS actor_id
  FROM funnel_actors
  WHERE funnel_actors.steps = target_step
  GROUP BY funnel_actors.actor_id
  ORDER BY actor_id
  LIMIT 100
  OFFSET 0
  '''
# ---
# name: TestClickhouseFunnelCorrelation.test_funnel_correlation_with_properties_and_groups_person_on_events_materialized.2
  '''
  WITH funnel_actors AS
    (SELECT aggregation_target AS actor_id , timestamp, steps,
                                                        final_timestamp,
                                                        first_timestamp
     FROM
       (SELECT aggregation_target,
               steps,
               avg(step_1_conversion_time) step_1_average_conversion_time_inner,
               median(step_1_conversion_time) step_1_median_conversion_time_inner ,
               argMax(latest_0, steps) as timestamp,
               argMax(latest_1, steps) as final_timestamp,
               argMax(latest_0, steps) as first_timestamp
        FROM
          (SELECT aggregation_target,
                  steps,
                  max(steps) over (PARTITION BY aggregation_target) as max_steps,
                                  step_1_conversion_time ,
                                  latest_0,
                                  latest_1,
                                  latest_0
           FROM
             (SELECT *,
                     if(latest_0 <= latest_1
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                     if(isNotNull(latest_1)
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
              FROM
                (SELECT aggregation_target, timestamp, step_0,
                                                       latest_0,
                                                       step_1,
                                                       min(latest_1) over (PARTITION by aggregation_target
                                                                           ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
                 FROM
                   (SELECT e.timestamp as timestamp,
                           e."$group_0" as aggregation_target,
                           e.person_id as person_id,
                           if(event = 'user signed up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'paid', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1
                    FROM events e
                    LEFT JOIN
                      (SELECT group_key,
                              argMax(group_properties, _timestamp) AS group_properties_0
                       FROM groups
                       WHERE team_id = 2
                         AND group_type_index = 0
                       GROUP BY group_key) groups_0 ON "$group_0" == groups_0.group_key
                    WHERE team_id = 2
                      AND event IN ['paid', 'user signed up']
                      AND toTimeZone(timestamp, 'UTC') >= toDateTime('2020-01-01 00:00:00', 'UTC')
                      AND toTimeZone(timestamp, 'UTC') <= toDateTime('2020-01-14 23:59:59', 'UTC')
                      AND (has(['positive'], replaceRegexpAll(JSONExtractRaw(group_properties_0, 'industry'), '^"|"$', '')))
                      AND notEmpty(e.person_id)
                      AND (step_0 = 1
                           OR step_1 = 1) ))
              WHERE step_0 = 1 ))
        GROUP BY aggregation_target,
                 steps
        HAVING steps = max_steps)
     WHERE steps IN [1, 2]
     ORDER BY aggregation_target SETTINGS max_ast_elements=1000000,
                                          max_expanded_ast_elements=1000000),
       2 AS target_step
  SELECT funnel_actors.actor_id AS actor_id
  FROM funnel_actors
  WHERE funnel_actors.steps <> target_step
  GROUP BY funnel_actors.actor_id
  ORDER BY actor_id
  LIMIT 100
  OFFSET 0
  '''
# ---
# name: TestClickhouseFunnelCorrelation.test_funnel_correlation_with_properties_and_groups_person_on_events_materialized.3
  '''
  WITH funnel_actors AS
    (SELECT aggregation_target AS actor_id , timestamp, steps,
                                                        final_timestamp,
                                                        first_timestamp
     FROM
       (SELECT aggregation_target,
               steps,
               avg(step_1_conversion_time) step_1_average_conversion_time_inner,
               median(step_1_conversion_time) step_1_median_conversion_time_inner ,
               argMax(latest_0, steps) as timestamp,
               argMax(latest_1, steps) as final_timestamp,
               argMax(latest_0, steps) as first_timestamp
        FROM
          (SELECT aggregation_target,
                  steps,
                  max(steps) over (PARTITION BY aggregation_target) as max_steps,
                                  step_1_conversion_time ,
                                  latest_0,
                                  latest_1,
                                  latest_0
           FROM
             (SELECT *,
                     if(latest_0 <= latest_1
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                     if(isNotNull(latest_1)
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
              FROM
                (SELECT aggregation_target, timestamp, step_0,
                                                       latest_0,
                                                       step_1,
                                                       min(latest_1) over (PARTITION by aggregation_target
                                                                           ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
                 FROM
                   (SELECT e.timestamp as timestamp,
                           e."$group_0" as aggregation_target,
                           e.person_id as person_id,
                           if(event = 'user signed up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'paid', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1
                    FROM events e
                    LEFT JOIN
                      (SELECT group_key,
                              argMax(group_properties, _timestamp) AS group_properties_0
                       FROM groups
                       WHERE team_id = 2
                         AND group_type_index = 0
                       GROUP BY group_key) groups_0 ON "$group_0" == groups_0.group_key
                    WHERE team_id = 2
                      AND event IN ['paid', 'user signed up']
                      AND toTimeZone(timestamp, 'UTC') >= toDateTime('2020-01-01 00:00:00', 'UTC')
                      AND toTimeZone(timestamp, 'UTC') <= toDateTime('2020-01-14 23:59:59', 'UTC')
                      AND (has(['negative'], replaceRegexpAll(JSONExtractRaw(group_properties_0, 'industry'), '^"|"$', '')))
                      AND notEmpty(e.person_id)
                      AND (step_0 = 1
                           OR step_1 = 1) ))
              WHERE step_0 = 1 ))
        GROUP BY aggregation_target,
                 steps
        HAVING steps = max_steps)
     WHERE steps IN [1, 2]
     ORDER BY aggregation_target SETTINGS max_ast_elements=1000000,
                                          max_expanded_ast_elements=1000000),
       2 AS target_step
  SELECT funnel_actors.actor_id AS actor_id
  FROM funnel_actors
  WHERE funnel_actors.steps = target_step
  GROUP BY funnel_actors.actor_id
  ORDER BY actor_id
  LIMIT 100
  OFFSET 0
  '''
# ---
# name: TestClickhouseFunnelCorrelation.test_funnel_correlation_with_properties_and_groups_person_on_events_materialized.4
  '''
  WITH funnel_actors AS
    (SELECT aggregation_target AS actor_id , timestamp, steps,
                                                        final_timestamp,
                                                        first_timestamp
     FROM
       (SELECT aggregation_target,
               steps,
               avg(step_1_conversion_time) step_1_average_conversion_time_inner,
               median(step_1_conversion_time) step_1_median_conversion_time_inner ,
               argMax(latest_0, steps) as timestamp,
               argMax(latest_1, steps) as final_timestamp,
               argMax(latest_0, steps) as first_timestamp
        FROM
          (SELECT aggregation_target,
                  steps,
                  max(steps) over (PARTITION BY aggregation_target) as max_steps,
                                  step_1_conversion_time ,
                                  latest_0,
                                  latest_1,
                                  latest_0
           FROM
             (SELECT *,
                     if(latest_0 <= latest_1
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                     if(isNotNull(latest_1)
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
              FROM
                (SELECT aggregation_target, timestamp, step_0,
                                                       latest_0,
                                                       step_1,
                                                       min(latest_1) over (PARTITION by aggregation_target
                                                                           ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
                 FROM
                   (SELECT e.timestamp as timestamp,
                           e."$group_0" as aggregation_target,
                           e.person_id as person_id,
                           if(event = 'user signed up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'paid', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1
                    FROM events e
                    LEFT JOIN
                      (SELECT group_key,
                              argMax(group_properties, _timestamp) AS group_properties_0
                       FROM groups
                       WHERE team_id = 2
                         AND group_type_index = 0
                       GROUP BY group_key) groups_0 ON "$group_0" == groups_0.group_key
                    WHERE team_id = 2
                      AND event IN ['paid', 'user signed up']
                      AND toTimeZone(timestamp, 'UTC') >= toDateTime('2020-01-01 00:00:00', 'UTC')
                      AND toTimeZone(timestamp, 'UTC') <= toDateTime('2020-01-14 23:59:59', 'UTC')
                      AND (has(['negative'], replaceRegexpAll(JSONExtractRaw(group_properties_0, 'industry'), '^"|"$', '')))
                      AND notEmpty(e.person_id)
                      AND (step_0 = 1
                           OR step_1 = 1) ))
              WHERE step_0 = 1 ))
        GROUP BY aggregation_target,
                 steps
        HAVING steps = max_steps)
     WHERE steps IN [1, 2]
     ORDER BY aggregation_target SETTINGS max_ast_elements=1000000,
                                          max_expanded_ast_elements=1000000),
       2 AS target_step
  SELECT funnel_actors.actor_id AS actor_id
  FROM funnel_actors
  WHERE funnel_actors.steps <> target_step
  GROUP BY funnel_actors.actor_id
  ORDER BY actor_id
  LIMIT 100
  OFFSET 0
  '''
# ---
# name: TestClickhouseFunnelCorrelation.test_funnel_correlation_with_properties_and_groups_person_on_events_materialized.5
  '''
  WITH funnel_actors as
    (SELECT aggregation_target AS actor_id , timestamp, steps,
                                                        final_timestamp,
                                                        first_timestamp
     FROM
       (SELECT aggregation_target,
               steps,
               avg(step_1_conversion_time) step_1_average_conversion_time_inner,
               median(step_1_conversion_time) step_1_median_conversion_time_inner ,
               argMax(latest_0, steps) as timestamp,
               argMax(latest_1, steps) as final_timestamp,
               argMax(latest_0, steps) as first_timestamp
        FROM
          (SELECT aggregation_target,
                  steps,
                  max(steps) over (PARTITION BY aggregation_target) as max_steps,
                                  step_1_conversion_time ,
                                  latest_0,
                                  latest_1,
                                  latest_0
           FROM
             (SELECT *,
                     if(latest_0 <= latest_1
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                     if(isNotNull(latest_1)
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
              FROM
                (SELECT aggregation_target, timestamp, step_0,
                                                       latest_0,
                                                       step_1,
                                                       min(latest_1) over (PARTITION by aggregation_target
                                                                           ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
                 FROM
                   (SELECT e.timestamp as timestamp,
                           e."$group_0" as aggregation_target,
                           e.person_id as person_id,
                           if(event = 'user signed up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'paid', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1
                    FROM events e
                    WHERE team_id = 2
                      AND event IN ['paid', 'user signed up']
                      AND toTimeZone(timestamp, 'UTC') >= toDateTime('2020-01-01 00:00:00', 'UTC')
                      AND toTimeZone(timestamp, 'UTC') <= toDateTime('2020-01-14 23:59:59', 'UTC')
                      AND notEmpty(e.person_id)
                      AND (step_0 = 1
                           OR step_1 = 1) ))
              WHERE step_0 = 1 ))
        GROUP BY aggregation_target,
                 steps
        HAVING steps = max_steps)
     WHERE steps IN [1, 2]
     ORDER BY aggregation_target SETTINGS max_ast_elements=1000000,
                                          max_expanded_ast_elements=1000000),
       2 AS target_step
  SELECT concat(prop.1, '::', prop.2) as name,
         countDistinctIf(actor_id, steps = target_step) AS success_count,
         countDistinctIf(actor_id, steps <> target_step) AS failure_count
  FROM
    (SELECT actor_id,
            funnel_actors.steps as steps,
            arrayJoin(JSONExtractKeysAndValues(groups_0.group_properties_0, 'String')) as prop
     FROM funnel_actors
     LEFT JOIN
       (SELECT group_key,
               argMax(group_properties, _timestamp) AS group_properties_0
        FROM groups
        WHERE team_id = 2
          AND group_type_index = 0
        GROUP BY group_key) groups_0 ON funnel_actors.actor_id == groups_0.group_key) aggregation_target_with_props
  GROUP BY prop.1,
               prop.2
  HAVING prop.1 NOT IN []
  UNION ALL
  SELECT 'Total_Values_In_Query' as name,
         countDistinctIf(actor_id, steps = target_step) AS success_count,
         countDistinctIf(actor_id, steps <> target_step) AS failure_count
  FROM funnel_actors
  '''
# ---
# name: TestClickhouseFunnelCorrelation.test_funnel_correlation_with_properties_and_groups_person_on_events_poe_v2
  '''
  WITH funnel_actors as
    (SELECT aggregation_target AS actor_id , timestamp, steps,
                                                        final_timestamp,
                                                        first_timestamp
     FROM
       (SELECT aggregation_target,
               steps,
               avg(step_1_conversion_time) step_1_average_conversion_time_inner,
               median(step_1_conversion_time) step_1_median_conversion_time_inner ,
               argMax(latest_0, steps) as timestamp,
               argMax(latest_1, steps) as final_timestamp,
               argMax(latest_0, steps) as first_timestamp
        FROM
          (SELECT aggregation_target,
                  steps,
                  max(steps) over (PARTITION BY aggregation_target) as max_steps,
                                  step_1_conversion_time ,
                                  latest_0,
                                  latest_1,
                                  latest_0
           FROM
             (SELECT *,
                     if(latest_0 <= latest_1
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                     if(isNotNull(latest_1)
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
              FROM
                (SELECT aggregation_target, timestamp, step_0,
                                                       latest_0,
                                                       step_1,
                                                       min(latest_1) over (PARTITION by aggregation_target
                                                                           ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
                 FROM
                   (SELECT e.timestamp as timestamp,
                           e."$group_0" as aggregation_target,
                           if(notEmpty(overrides.person_id), overrides.person_id, e.person_id) as person_id,
                           if(event = 'user signed up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'paid', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1
                    FROM events e
                    LEFT OUTER JOIN
                      (SELECT argMax(override_person_id, version) as person_id,
                              old_person_id
                       FROM person_overrides
                       WHERE team_id = 2
                       GROUP BY old_person_id) AS overrides ON e.person_id = overrides.old_person_id
                    WHERE team_id = 2
                      AND event IN ['paid', 'user signed up']
                      AND toTimeZone(timestamp, 'UTC') >= toDateTime('2020-01-01 00:00:00', 'UTC')
                      AND toTimeZone(timestamp, 'UTC') <= toDateTime('2020-01-14 23:59:59', 'UTC')
                      AND notEmpty(e.person_id)
                      AND (step_0 = 1
                           OR step_1 = 1) ))
              WHERE step_0 = 1 ))
        GROUP BY aggregation_target,
                 steps
        HAVING steps = max_steps)
     WHERE steps IN [1, 2]
     ORDER BY aggregation_target SETTINGS max_ast_elements=1000000,
                                          max_expanded_ast_elements=1000000),
       2 AS target_step
  SELECT concat(prop.1, '::', prop.2) as name,
         countDistinctIf(actor_id, steps = target_step) AS success_count,
         countDistinctIf(actor_id, steps <> target_step) AS failure_count
  FROM
    (SELECT actor_id,
            funnel_actors.steps as steps,
            arrayJoin(arrayZip(['industry'], [replaceRegexpAll(JSONExtractRaw(groups_0.group_properties_0, 'industry'), '^"|"$', '')])) as prop
     FROM funnel_actors
     LEFT JOIN
       (SELECT group_key,
               argMax(group_properties, _timestamp) AS group_properties_0
        FROM groups
        WHERE team_id = 2
          AND group_type_index = 0
        GROUP BY group_key) groups_0 ON funnel_actors.actor_id == groups_0.group_key) aggregation_target_with_props
  GROUP BY prop.1,
               prop.2
  HAVING prop.1 NOT IN []
  UNION ALL
  SELECT 'Total_Values_In_Query' as name,
         countDistinctIf(actor_id, steps = target_step) AS success_count,
         countDistinctIf(actor_id, steps <> target_step) AS failure_count
  FROM funnel_actors
  '''
# ---
# name: TestClickhouseFunnelCorrelation.test_funnel_correlation_with_properties_and_groups_person_on_events_poe_v2.1
  '''
  WITH funnel_actors AS
    (SELECT aggregation_target AS actor_id , timestamp, steps,
                                                        final_timestamp,
                                                        first_timestamp
     FROM
       (SELECT aggregation_target,
               steps,
               avg(step_1_conversion_time) step_1_average_conversion_time_inner,
               median(step_1_conversion_time) step_1_median_conversion_time_inner ,
               argMax(latest_0, steps) as timestamp,
               argMax(latest_1, steps) as final_timestamp,
               argMax(latest_0, steps) as first_timestamp
        FROM
          (SELECT aggregation_target,
                  steps,
                  max(steps) over (PARTITION BY aggregation_target) as max_steps,
                                  step_1_conversion_time ,
                                  latest_0,
                                  latest_1,
                                  latest_0
           FROM
             (SELECT *,
                     if(latest_0 <= latest_1
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                     if(isNotNull(latest_1)
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
              FROM
                (SELECT aggregation_target, timestamp, step_0,
                                                       latest_0,
                                                       step_1,
                                                       min(latest_1) over (PARTITION by aggregation_target
                                                                           ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
                 FROM
                   (SELECT e.timestamp as timestamp,
                           e."$group_0" as aggregation_target,
                           if(notEmpty(overrides.person_id), overrides.person_id, e.person_id) as person_id,
                           if(event = 'user signed up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'paid', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1
                    FROM events e
                    LEFT OUTER JOIN
                      (SELECT argMax(override_person_id, version) as person_id,
                              old_person_id
                       FROM person_overrides
                       WHERE team_id = 2
                       GROUP BY old_person_id) AS overrides ON e.person_id = overrides.old_person_id
                    LEFT JOIN
                      (SELECT group_key,
                              argMax(group_properties, _timestamp) AS group_properties_0
                       FROM groups
                       WHERE team_id = 2
                         AND group_type_index = 0
                       GROUP BY group_key) groups_0 ON "$group_0" == groups_0.group_key
                    WHERE team_id = 2
                      AND event IN ['paid', 'user signed up']
                      AND toTimeZone(timestamp, 'UTC') >= toDateTime('2020-01-01 00:00:00', 'UTC')
                      AND toTimeZone(timestamp, 'UTC') <= toDateTime('2020-01-14 23:59:59', 'UTC')
                      AND (has(['positive'], replaceRegexpAll(JSONExtractRaw(group_properties_0, 'industry'), '^"|"$', '')))
                      AND notEmpty(e.person_id)
                      AND (step_0 = 1
                           OR step_1 = 1) ))
              WHERE step_0 = 1 ))
        GROUP BY aggregation_target,
                 steps
        HAVING steps = max_steps)
     WHERE steps IN [1, 2]
     ORDER BY aggregation_target SETTINGS max_ast_elements=1000000,
                                          max_expanded_ast_elements=1000000),
       2 AS target_step
  SELECT funnel_actors.actor_id AS actor_id
  FROM funnel_actors
  WHERE funnel_actors.steps = target_step
  GROUP BY funnel_actors.actor_id
  ORDER BY actor_id
  LIMIT 100
  OFFSET 0
  '''
# ---
# name: TestClickhouseFunnelCorrelation.test_funnel_correlation_with_properties_and_groups_person_on_events_poe_v2.2
  '''
  WITH funnel_actors AS
    (SELECT aggregation_target AS actor_id , timestamp, steps,
                                                        final_timestamp,
                                                        first_timestamp
     FROM
       (SELECT aggregation_target,
               steps,
               avg(step_1_conversion_time) step_1_average_conversion_time_inner,
               median(step_1_conversion_time) step_1_median_conversion_time_inner ,
               argMax(latest_0, steps) as timestamp,
               argMax(latest_1, steps) as final_timestamp,
               argMax(latest_0, steps) as first_timestamp
        FROM
          (SELECT aggregation_target,
                  steps,
                  max(steps) over (PARTITION BY aggregation_target) as max_steps,
                                  step_1_conversion_time ,
                                  latest_0,
                                  latest_1,
                                  latest_0
           FROM
             (SELECT *,
                     if(latest_0 <= latest_1
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                     if(isNotNull(latest_1)
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
              FROM
                (SELECT aggregation_target, timestamp, step_0,
                                                       latest_0,
                                                       step_1,
                                                       min(latest_1) over (PARTITION by aggregation_target
                                                                           ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
                 FROM
                   (SELECT e.timestamp as timestamp,
                           e."$group_0" as aggregation_target,
                           if(notEmpty(overrides.person_id), overrides.person_id, e.person_id) as person_id,
                           if(event = 'user signed up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'paid', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1
                    FROM events e
                    LEFT OUTER JOIN
                      (SELECT argMax(override_person_id, version) as person_id,
                              old_person_id
                       FROM person_overrides
                       WHERE team_id = 2
                       GROUP BY old_person_id) AS overrides ON e.person_id = overrides.old_person_id
                    LEFT JOIN
                      (SELECT group_key,
                              argMax(group_properties, _timestamp) AS group_properties_0
                       FROM groups
                       WHERE team_id = 2
                         AND group_type_index = 0
                       GROUP BY group_key) groups_0 ON "$group_0" == groups_0.group_key
                    WHERE team_id = 2
                      AND event IN ['paid', 'user signed up']
                      AND toTimeZone(timestamp, 'UTC') >= toDateTime('2020-01-01 00:00:00', 'UTC')
                      AND toTimeZone(timestamp, 'UTC') <= toDateTime('2020-01-14 23:59:59', 'UTC')
                      AND (has(['positive'], replaceRegexpAll(JSONExtractRaw(group_properties_0, 'industry'), '^"|"$', '')))
                      AND notEmpty(e.person_id)
                      AND (step_0 = 1
                           OR step_1 = 1) ))
              WHERE step_0 = 1 ))
        GROUP BY aggregation_target,
                 steps
        HAVING steps = max_steps)
     WHERE steps IN [1, 2]
     ORDER BY aggregation_target SETTINGS max_ast_elements=1000000,
                                          max_expanded_ast_elements=1000000),
       2 AS target_step
  SELECT funnel_actors.actor_id AS actor_id
  FROM funnel_actors
  WHERE funnel_actors.steps <> target_step
  GROUP BY funnel_actors.actor_id
  ORDER BY actor_id
  LIMIT 100
  OFFSET 0
  '''
# ---
# name: TestClickhouseFunnelCorrelation.test_funnel_correlation_with_properties_and_groups_person_on_events_poe_v2.3
  '''
  WITH funnel_actors AS
    (SELECT aggregation_target AS actor_id , timestamp, steps,
                                                        final_timestamp,
                                                        first_timestamp
     FROM
       (SELECT aggregation_target,
               steps,
               avg(step_1_conversion_time) step_1_average_conversion_time_inner,
               median(step_1_conversion_time) step_1_median_conversion_time_inner ,
               argMax(latest_0, steps) as timestamp,
               argMax(latest_1, steps) as final_timestamp,
               argMax(latest_0, steps) as first_timestamp
        FROM
          (SELECT aggregation_target,
                  steps,
                  max(steps) over (PARTITION BY aggregation_target) as max_steps,
                                  step_1_conversion_time ,
                                  latest_0,
                                  latest_1,
                                  latest_0
           FROM
             (SELECT *,
                     if(latest_0 <= latest_1
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                     if(isNotNull(latest_1)
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
              FROM
                (SELECT aggregation_target, timestamp, step_0,
                                                       latest_0,
                                                       step_1,
                                                       min(latest_1) over (PARTITION by aggregation_target
                                                                           ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
                 FROM
                   (SELECT e.timestamp as timestamp,
                           e."$group_0" as aggregation_target,
                           if(notEmpty(overrides.person_id), overrides.person_id, e.person_id) as person_id,
                           if(event = 'user signed up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'paid', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1
                    FROM events e
                    LEFT OUTER JOIN
                      (SELECT argMax(override_person_id, version) as person_id,
                              old_person_id
                       FROM person_overrides
                       WHERE team_id = 2
                       GROUP BY old_person_id) AS overrides ON e.person_id = overrides.old_person_id
                    LEFT JOIN
                      (SELECT group_key,
                              argMax(group_properties, _timestamp) AS group_properties_0
                       FROM groups
                       WHERE team_id = 2
                         AND group_type_index = 0
                       GROUP BY group_key) groups_0 ON "$group_0" == groups_0.group_key
                    WHERE team_id = 2
                      AND event IN ['paid', 'user signed up']
                      AND toTimeZone(timestamp, 'UTC') >= toDateTime('2020-01-01 00:00:00', 'UTC')
                      AND toTimeZone(timestamp, 'UTC') <= toDateTime('2020-01-14 23:59:59', 'UTC')
                      AND (has(['negative'], replaceRegexpAll(JSONExtractRaw(group_properties_0, 'industry'), '^"|"$', '')))
                      AND notEmpty(e.person_id)
                      AND (step_0 = 1
                           OR step_1 = 1) ))
              WHERE step_0 = 1 ))
        GROUP BY aggregation_target,
                 steps
        HAVING steps = max_steps)
     WHERE steps IN [1, 2]
     ORDER BY aggregation_target SETTINGS max_ast_elements=1000000,
                                          max_expanded_ast_elements=1000000),
       2 AS target_step
  SELECT funnel_actors.actor_id AS actor_id
  FROM funnel_actors
  WHERE funnel_actors.steps = target_step
  GROUP BY funnel_actors.actor_id
  ORDER BY actor_id
  LIMIT 100
  OFFSET 0
  '''
# ---
# name: TestClickhouseFunnelCorrelation.test_funnel_correlation_with_properties_and_groups_person_on_events_poe_v2.4
  '''
  WITH funnel_actors AS
    (SELECT aggregation_target AS actor_id , timestamp, steps,
                                                        final_timestamp,
                                                        first_timestamp
     FROM
       (SELECT aggregation_target,
               steps,
               avg(step_1_conversion_time) step_1_average_conversion_time_inner,
               median(step_1_conversion_time) step_1_median_conversion_time_inner ,
               argMax(latest_0, steps) as timestamp,
               argMax(latest_1, steps) as final_timestamp,
               argMax(latest_0, steps) as first_timestamp
        FROM
          (SELECT aggregation_target,
                  steps,
                  max(steps) over (PARTITION BY aggregation_target) as max_steps,
                                  step_1_conversion_time ,
                                  latest_0,
                                  latest_1,
                                  latest_0
           FROM
             (SELECT *,
                     if(latest_0 <= latest_1
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                     if(isNotNull(latest_1)
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
              FROM
                (SELECT aggregation_target, timestamp, step_0,
                                                       latest_0,
                                                       step_1,
                                                       min(latest_1) over (PARTITION by aggregation_target
                                                                           ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
                 FROM
                   (SELECT e.timestamp as timestamp,
                           e."$group_0" as aggregation_target,
                           if(notEmpty(overrides.person_id), overrides.person_id, e.person_id) as person_id,
                           if(event = 'user signed up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'paid', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1
                    FROM events e
                    LEFT OUTER JOIN
                      (SELECT argMax(override_person_id, version) as person_id,
                              old_person_id
                       FROM person_overrides
                       WHERE team_id = 2
                       GROUP BY old_person_id) AS overrides ON e.person_id = overrides.old_person_id
                    LEFT JOIN
                      (SELECT group_key,
                              argMax(group_properties, _timestamp) AS group_properties_0
                       FROM groups
                       WHERE team_id = 2
                         AND group_type_index = 0
                       GROUP BY group_key) groups_0 ON "$group_0" == groups_0.group_key
                    WHERE team_id = 2
                      AND event IN ['paid', 'user signed up']
                      AND toTimeZone(timestamp, 'UTC') >= toDateTime('2020-01-01 00:00:00', 'UTC')
                      AND toTimeZone(timestamp, 'UTC') <= toDateTime('2020-01-14 23:59:59', 'UTC')
                      AND (has(['negative'], replaceRegexpAll(JSONExtractRaw(group_properties_0, 'industry'), '^"|"$', '')))
                      AND notEmpty(e.person_id)
                      AND (step_0 = 1
                           OR step_1 = 1) ))
              WHERE step_0 = 1 ))
        GROUP BY aggregation_target,
                 steps
        HAVING steps = max_steps)
     WHERE steps IN [1, 2]
     ORDER BY aggregation_target SETTINGS max_ast_elements=1000000,
                                          max_expanded_ast_elements=1000000),
       2 AS target_step
  SELECT funnel_actors.actor_id AS actor_id
  FROM funnel_actors
  WHERE funnel_actors.steps <> target_step
  GROUP BY funnel_actors.actor_id
  ORDER BY actor_id
  LIMIT 100
  OFFSET 0
  '''
# ---
# name: TestClickhouseFunnelCorrelation.test_funnel_correlation_with_properties_and_groups_person_on_events_poe_v2.5
  '''
  WITH funnel_actors as
    (SELECT aggregation_target AS actor_id , timestamp, steps,
                                                        final_timestamp,
                                                        first_timestamp
     FROM
       (SELECT aggregation_target,
               steps,
               avg(step_1_conversion_time) step_1_average_conversion_time_inner,
               median(step_1_conversion_time) step_1_median_conversion_time_inner ,
               argMax(latest_0, steps) as timestamp,
               argMax(latest_1, steps) as final_timestamp,
               argMax(latest_0, steps) as first_timestamp
        FROM
          (SELECT aggregation_target,
                  steps,
                  max(steps) over (PARTITION BY aggregation_target) as max_steps,
                                  step_1_conversion_time ,
                                  latest_0,
                                  latest_1,
                                  latest_0
           FROM
             (SELECT *,
                     if(latest_0 <= latest_1
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                     if(isNotNull(latest_1)
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
              FROM
                (SELECT aggregation_target, timestamp, step_0,
                                                       latest_0,
                                                       step_1,
                                                       min(latest_1) over (PARTITION by aggregation_target
                                                                           ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
                 FROM
                   (SELECT e.timestamp as timestamp,
                           e."$group_0" as aggregation_target,
                           if(notEmpty(overrides.person_id), overrides.person_id, e.person_id) as person_id,
                           if(event = 'user signed up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'paid', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1
                    FROM events e
                    LEFT OUTER JOIN
                      (SELECT argMax(override_person_id, version) as person_id,
                              old_person_id
                       FROM person_overrides
                       WHERE team_id = 2
                       GROUP BY old_person_id) AS overrides ON e.person_id = overrides.old_person_id
                    WHERE team_id = 2
                      AND event IN ['paid', 'user signed up']
                      AND toTimeZone(timestamp, 'UTC') >= toDateTime('2020-01-01 00:00:00', 'UTC')
                      AND toTimeZone(timestamp, 'UTC') <= toDateTime('2020-01-14 23:59:59', 'UTC')
                      AND notEmpty(e.person_id)
                      AND (step_0 = 1
                           OR step_1 = 1) ))
              WHERE step_0 = 1 ))
        GROUP BY aggregation_target,
                 steps
        HAVING steps = max_steps)
     WHERE steps IN [1, 2]
     ORDER BY aggregation_target SETTINGS max_ast_elements=1000000,
                                          max_expanded_ast_elements=1000000),
       2 AS target_step
  SELECT concat(prop.1, '::', prop.2) as name,
         countDistinctIf(actor_id, steps = target_step) AS success_count,
         countDistinctIf(actor_id, steps <> target_step) AS failure_count
  FROM
    (SELECT actor_id,
            funnel_actors.steps as steps,
            arrayJoin(JSONExtractKeysAndValues(groups_0.group_properties_0, 'String')) as prop
     FROM funnel_actors
     LEFT JOIN
       (SELECT group_key,
               argMax(group_properties, _timestamp) AS group_properties_0
        FROM groups
        WHERE team_id = 2
          AND group_type_index = 0
        GROUP BY group_key) groups_0 ON funnel_actors.actor_id == groups_0.group_key) aggregation_target_with_props
  GROUP BY prop.1,
               prop.2
  HAVING prop.1 NOT IN []
  UNION ALL
  SELECT 'Total_Values_In_Query' as name,
         countDistinctIf(actor_id, steps = target_step) AS success_count,
         countDistinctIf(actor_id, steps <> target_step) AS failure_count
  FROM funnel_actors
  '''
# ---
