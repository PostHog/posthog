# serializer version: 1
# name: TestClickhousePaths.test_end
  '''
  SELECT last_path_key AS source_event,
         path_key AS target_event,
         count(*) AS event_count,
         avg(conversion_time) AS average_conversion_time
  FROM
    (SELECT person_id AS person_id,
            path AS path,
                    conversion_time AS conversion_time,
                    event_in_session_index AS event_in_session_index,
                    concat(ifNull(toString(event_in_session_index), ''), '_', ifNull(toString(path), '')) AS path_key,
                    if(ifNull(greater(event_in_session_index, 1), 0), concat(ifNull(toString(minus(event_in_session_index, 1)), ''), '_', ifNull(toString(prev_path), '')), NULL) AS last_path_key,
                    path_dropoff_key AS path_dropoff_key
     FROM
       (SELECT person_id AS person_id,
               joined_path_tuple.1 AS path,
               joined_path_tuple.2 AS conversion_time,
               joined_path_tuple.3 AS prev_path,
               event_in_session_index,
               session_index AS session_index,
               arrayPopFront(arrayPushBack(path_basic, '')) AS path_basic_0,
               arrayMap((x, y) -> if(ifNull(equals(x, y), isNull(x)
                                            and isNull(y)), 0, 1), path_basic, path_basic_0) AS mapping,
               arrayFilter((x, y) -> y, time, mapping) AS timings,
               arrayFilter((x, y) -> y, path_basic, mapping) AS compact_path,
               indexOf(compact_path, '/about') AS target_index,
               if(ifNull(greater(target_index, 0), 0), arrayResize(compact_path, target_index), compact_path) AS filtered_path,
               arraySlice(filtered_path, -5) AS limited_path,
               if(ifNull(greater(target_index, 0), 0), arrayResize(timings, target_index), timings) AS filtered_timings,
               arraySlice(filtered_timings, -5) AS limited_timings,
               arrayDifference(limited_timings) AS timings_diff,
               concat(ifNull(toString(length(limited_path)), ''), '_', ifNull(toString(limited_path[-1]), '')) AS path_dropoff_key,
               arrayZip(limited_path, timings_diff, arrayPopBack(arrayPushFront(limited_path, ''))) AS limited_path_timings
        FROM
          (SELECT person_id AS person_id,
                  path_time_tuple.1 AS path_basic,
                  path_time_tuple.2 AS time,
                  session_index,
                  arrayZip(path_list, timing_list, arrayDifference(timing_list)) AS paths_tuple,
                  arraySplit(x -> if(ifNull(less(x.3, 1800), 0), 0, 1), paths_tuple) AS session_paths
           FROM
             (SELECT person_id AS person_id,
                     groupArray(timestamp) AS timing_list,
                     groupArray(path_item) AS path_list
              FROM
                (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
                        events__pdi.person_id AS person_id,
                        ifNull(if(equals(events.event, '$screen'), replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$screen_name'), ''), 'null'), '^"|"$', ''), if(equals(events.event, '$pageview'), replaceRegexpAll(ifNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$current_url'), ''), 'null'), '^"|"$', ''), ''), '(.)/$', '\\1'), events.event)), '') AS path_item_ungrouped,
                        NULL AS groupings,
                        multiMatchAnyIndex(path_item_ungrouped, NULL) AS group_index,
                        (if(ifNull(greater(group_index, 0), 0), groupings[group_index], path_item_ungrouped) AS path_item) AS path_item
                 FROM events
                 INNER JOIN
                   (SELECT argMax(person_distinct_id2.person_id, person_distinct_id2.version) AS person_id,
                           person_distinct_id2.distinct_id AS distinct_id
                    FROM person_distinct_id2
                    WHERE equals(person_distinct_id2.team_id, 2)
                    GROUP BY person_distinct_id2.distinct_id
                    HAVING ifNull(equals(argMax(person_distinct_id2.is_deleted, person_distinct_id2.version), 0), 0)) AS events__pdi ON equals(events.distinct_id, events__pdi.distinct_id)
                 WHERE and(equals(events.team_id, 2), and(greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2021-05-01 00:00:00', 6, 'UTC')))), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), assumeNotNull(parseDateTime64BestEffortOrNull('2021-05-07 23:59:59', 6, 'UTC')))))
                 ORDER BY events__pdi.person_id ASC, toTimeZone(events.timestamp, 'UTC') ASC)
              GROUP BY person_id) ARRAY
           JOIN session_paths AS path_time_tuple,
                arrayEnumerate(session_paths) AS session_index) ARRAY
        JOIN limited_path_timings AS joined_path_tuple,
             arrayEnumerate(limited_path_timings) AS event_in_session_index
        WHERE ifNull(greater(target_index, 0), 0)))
  WHERE isNotNull(source_event)
  GROUP BY source_event,
           target_event
  ORDER BY event_count DESC,
           source_event ASC,
           target_event ASC
  LIMIT 50 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1
  '''
# ---
# name: TestClickhousePaths.test_end.1
  '''
  SELECT last_path_key AS source_event,
         path_key AS target_event,
         count(*) AS event_count,
         avg(conversion_time) AS average_conversion_time
  FROM
    (SELECT person_id AS person_id,
            path AS path,
                    conversion_time AS conversion_time,
                    event_in_session_index AS event_in_session_index,
                    concat(ifNull(toString(event_in_session_index), ''), '_', ifNull(toString(path), '')) AS path_key,
                    if(ifNull(greater(event_in_session_index, 1), 0), concat(ifNull(toString(minus(event_in_session_index, 1)), ''), '_', ifNull(toString(prev_path), '')), NULL) AS last_path_key,
                    path_dropoff_key AS path_dropoff_key
     FROM
       (SELECT person_id AS person_id,
               joined_path_tuple.1 AS path,
               joined_path_tuple.2 AS conversion_time,
               joined_path_tuple.3 AS prev_path,
               event_in_session_index,
               session_index AS session_index,
               arrayPopFront(arrayPushBack(path_basic, '')) AS path_basic_0,
               arrayMap((x, y) -> if(ifNull(equals(x, y), isNull(x)
                                            and isNull(y)), 0, 1), path_basic, path_basic_0) AS mapping,
               arrayFilter((x, y) -> y, time, mapping) AS timings,
               arrayFilter((x, y) -> y, path_basic, mapping) AS compact_path,
               indexOf(compact_path, '/about') AS target_index,
               if(ifNull(greater(target_index, 0), 0), arrayResize(compact_path, target_index), compact_path) AS filtered_path,
               arraySlice(filtered_path, -5) AS limited_path,
               if(ifNull(greater(target_index, 0), 0), arrayResize(timings, target_index), timings) AS filtered_timings,
               arraySlice(filtered_timings, -5) AS limited_timings,
               arrayDifference(limited_timings) AS timings_diff,
               concat(ifNull(toString(length(limited_path)), ''), '_', ifNull(toString(limited_path[-1]), '')) AS path_dropoff_key,
               arrayZip(limited_path, timings_diff, arrayPopBack(arrayPushFront(limited_path, ''))) AS limited_path_timings
        FROM
          (SELECT person_id AS person_id,
                  path_time_tuple.1 AS path_basic,
                  path_time_tuple.2 AS time,
                  session_index,
                  arrayZip(path_list, timing_list, arrayDifference(timing_list)) AS paths_tuple,
                  arraySplit(x -> if(ifNull(less(x.3, 1800), 0), 0, 1), paths_tuple) AS session_paths
           FROM
             (SELECT person_id AS person_id,
                     groupArray(timestamp) AS timing_list,
                     groupArray(path_item) AS path_list
              FROM
                (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
                        events__pdi.person_id AS person_id,
                        ifNull(if(equals(events.event, '$screen'), replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$screen_name'), ''), 'null'), '^"|"$', ''), if(equals(events.event, '$pageview'), replaceRegexpAll(ifNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$current_url'), ''), 'null'), '^"|"$', ''), ''), '(.)/$', '\\1'), events.event)), '') AS path_item_ungrouped,
                        NULL AS groupings,
                        multiMatchAnyIndex(path_item_ungrouped, NULL) AS group_index,
                        (if(ifNull(greater(group_index, 0), 0), groupings[group_index], path_item_ungrouped) AS path_item) AS path_item
                 FROM events
                 INNER JOIN
                   (SELECT argMax(person_distinct_id2.person_id, person_distinct_id2.version) AS person_id,
                           person_distinct_id2.distinct_id AS distinct_id
                    FROM person_distinct_id2
                    WHERE equals(person_distinct_id2.team_id, 2)
                    GROUP BY person_distinct_id2.distinct_id
                    HAVING ifNull(equals(argMax(person_distinct_id2.is_deleted, person_distinct_id2.version), 0), 0)) AS events__pdi ON equals(events.distinct_id, events__pdi.distinct_id)
                 WHERE and(equals(events.team_id, 2), and(greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2021-05-01 00:00:00', 6, 'UTC')))), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), assumeNotNull(parseDateTime64BestEffortOrNull('2021-05-07 23:59:59', 6, 'UTC')))))
                 ORDER BY events__pdi.person_id ASC, toTimeZone(events.timestamp, 'UTC') ASC)
              GROUP BY person_id) ARRAY
           JOIN session_paths AS path_time_tuple,
                arrayEnumerate(session_paths) AS session_index) ARRAY
        JOIN limited_path_timings AS joined_path_tuple,
             arrayEnumerate(limited_path_timings) AS event_in_session_index
        WHERE ifNull(greater(target_index, 0), 0)))
  WHERE isNotNull(source_event)
  GROUP BY source_event,
           target_event
  ORDER BY event_count DESC,
           source_event ASC,
           target_event ASC
  LIMIT 50 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1
  '''
# ---
# name: TestClickhousePaths.test_end_materialized
  '''
  SELECT last_path_key AS source_event,
         path_key AS target_event,
         count(*) AS event_count,
         avg(conversion_time) AS average_conversion_time
  FROM
    (SELECT person_id AS person_id,
            path AS path,
                    conversion_time AS conversion_time,
                    event_in_session_index AS event_in_session_index,
                    concat(ifNull(toString(event_in_session_index), ''), '_', ifNull(toString(path), '')) AS path_key,
                    if(ifNull(greater(event_in_session_index, 1), 0), concat(ifNull(toString(minus(event_in_session_index, 1)), ''), '_', ifNull(toString(prev_path), '')), NULL) AS last_path_key,
                    path_dropoff_key AS path_dropoff_key
     FROM
       (SELECT person_id AS person_id,
               joined_path_tuple.1 AS path,
               joined_path_tuple.2 AS conversion_time,
               joined_path_tuple.3 AS prev_path,
               event_in_session_index,
               session_index AS session_index,
               arrayPopFront(arrayPushBack(path_basic, '')) AS path_basic_0,
               arrayMap((x, y) -> if(ifNull(equals(x, y), isNull(x)
                                            and isNull(y)), 0, 1), path_basic, path_basic_0) AS mapping,
               arrayFilter((x, y) -> y, time, mapping) AS timings,
               arrayFilter((x, y) -> y, path_basic, mapping) AS compact_path,
               indexOf(compact_path, '/about') AS target_index,
               if(ifNull(greater(target_index, 0), 0), arrayResize(compact_path, target_index), compact_path) AS filtered_path,
               arraySlice(filtered_path, -5) AS limited_path,
               if(ifNull(greater(target_index, 0), 0), arrayResize(timings, target_index), timings) AS filtered_timings,
               arraySlice(filtered_timings, -5) AS limited_timings,
               arrayDifference(limited_timings) AS timings_diff,
               concat(ifNull(toString(length(limited_path)), ''), '_', ifNull(toString(limited_path[-1]), '')) AS path_dropoff_key,
               arrayZip(limited_path, timings_diff, arrayPopBack(arrayPushFront(limited_path, ''))) AS limited_path_timings
        FROM
          (SELECT person_id AS person_id,
                  path_time_tuple.1 AS path_basic,
                  path_time_tuple.2 AS time,
                  session_index,
                  arrayZip(path_list, timing_list, arrayDifference(timing_list)) AS paths_tuple,
                  arraySplit(x -> if(ifNull(less(x.3, 1800), 0), 0, 1), paths_tuple) AS session_paths
           FROM
             (SELECT person_id AS person_id,
                     groupArray(timestamp) AS timing_list,
                     groupArray(path_item) AS path_list
              FROM
                (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
                        events__pdi.person_id AS person_id,
                        ifNull(if(equals(events.event, '$screen'), nullIf(nullIf(events.`mat_$screen_name`, ''), 'null'), if(equals(events.event, '$pageview'), replaceRegexpAll(ifNull(nullIf(nullIf(events.`mat_$current_url`, ''), 'null'), ''), '(.)/$', '\\1'), events.event)), '') AS path_item_ungrouped,
                        NULL AS groupings,
                        multiMatchAnyIndex(path_item_ungrouped, NULL) AS group_index,
                        (if(ifNull(greater(group_index, 0), 0), groupings[group_index], path_item_ungrouped) AS path_item) AS path_item
                 FROM events
                 INNER JOIN
                   (SELECT argMax(person_distinct_id2.person_id, person_distinct_id2.version) AS person_id,
                           person_distinct_id2.distinct_id AS distinct_id
                    FROM person_distinct_id2
                    WHERE equals(person_distinct_id2.team_id, 2)
                    GROUP BY person_distinct_id2.distinct_id
                    HAVING ifNull(equals(argMax(person_distinct_id2.is_deleted, person_distinct_id2.version), 0), 0)) AS events__pdi ON equals(events.distinct_id, events__pdi.distinct_id)
                 WHERE and(equals(events.team_id, 2), and(greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2021-05-01 00:00:00', 6, 'UTC')))), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), assumeNotNull(parseDateTime64BestEffortOrNull('2021-05-07 23:59:59', 6, 'UTC')))))
                 ORDER BY events__pdi.person_id ASC, toTimeZone(events.timestamp, 'UTC') ASC)
              GROUP BY person_id) ARRAY
           JOIN session_paths AS path_time_tuple,
                arrayEnumerate(session_paths) AS session_index) ARRAY
        JOIN limited_path_timings AS joined_path_tuple,
             arrayEnumerate(limited_path_timings) AS event_in_session_index
        WHERE ifNull(greater(target_index, 0), 0)))
  WHERE isNotNull(source_event)
  GROUP BY source_event,
           target_event
  ORDER BY event_count DESC,
           source_event ASC,
           target_event ASC
  LIMIT 50 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1
  '''
# ---
# name: TestClickhousePaths.test_end_materialized.1
  '''
  SELECT last_path_key AS source_event,
         path_key AS target_event,
         count(*) AS event_count,
         avg(conversion_time) AS average_conversion_time
  FROM
    (SELECT person_id AS person_id,
            path AS path,
                    conversion_time AS conversion_time,
                    event_in_session_index AS event_in_session_index,
                    concat(ifNull(toString(event_in_session_index), ''), '_', ifNull(toString(path), '')) AS path_key,
                    if(ifNull(greater(event_in_session_index, 1), 0), concat(ifNull(toString(minus(event_in_session_index, 1)), ''), '_', ifNull(toString(prev_path), '')), NULL) AS last_path_key,
                    path_dropoff_key AS path_dropoff_key
     FROM
       (SELECT person_id AS person_id,
               joined_path_tuple.1 AS path,
               joined_path_tuple.2 AS conversion_time,
               joined_path_tuple.3 AS prev_path,
               event_in_session_index,
               session_index AS session_index,
               arrayPopFront(arrayPushBack(path_basic, '')) AS path_basic_0,
               arrayMap((x, y) -> if(ifNull(equals(x, y), isNull(x)
                                            and isNull(y)), 0, 1), path_basic, path_basic_0) AS mapping,
               arrayFilter((x, y) -> y, time, mapping) AS timings,
               arrayFilter((x, y) -> y, path_basic, mapping) AS compact_path,
               indexOf(compact_path, '/about') AS target_index,
               if(ifNull(greater(target_index, 0), 0), arrayResize(compact_path, target_index), compact_path) AS filtered_path,
               arraySlice(filtered_path, -5) AS limited_path,
               if(ifNull(greater(target_index, 0), 0), arrayResize(timings, target_index), timings) AS filtered_timings,
               arraySlice(filtered_timings, -5) AS limited_timings,
               arrayDifference(limited_timings) AS timings_diff,
               concat(ifNull(toString(length(limited_path)), ''), '_', ifNull(toString(limited_path[-1]), '')) AS path_dropoff_key,
               arrayZip(limited_path, timings_diff, arrayPopBack(arrayPushFront(limited_path, ''))) AS limited_path_timings
        FROM
          (SELECT person_id AS person_id,
                  path_time_tuple.1 AS path_basic,
                  path_time_tuple.2 AS time,
                  session_index,
                  arrayZip(path_list, timing_list, arrayDifference(timing_list)) AS paths_tuple,
                  arraySplit(x -> if(ifNull(less(x.3, 1800), 0), 0, 1), paths_tuple) AS session_paths
           FROM
             (SELECT person_id AS person_id,
                     groupArray(timestamp) AS timing_list,
                     groupArray(path_item) AS path_list
              FROM
                (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
                        events__pdi.person_id AS person_id,
                        ifNull(if(equals(events.event, '$screen'), nullIf(nullIf(events.`mat_$screen_name`, ''), 'null'), if(equals(events.event, '$pageview'), replaceRegexpAll(ifNull(nullIf(nullIf(events.`mat_$current_url`, ''), 'null'), ''), '(.)/$', '\\1'), events.event)), '') AS path_item_ungrouped,
                        NULL AS groupings,
                        multiMatchAnyIndex(path_item_ungrouped, NULL) AS group_index,
                        (if(ifNull(greater(group_index, 0), 0), groupings[group_index], path_item_ungrouped) AS path_item) AS path_item
                 FROM events
                 INNER JOIN
                   (SELECT argMax(person_distinct_id2.person_id, person_distinct_id2.version) AS person_id,
                           person_distinct_id2.distinct_id AS distinct_id
                    FROM person_distinct_id2
                    WHERE equals(person_distinct_id2.team_id, 2)
                    GROUP BY person_distinct_id2.distinct_id
                    HAVING ifNull(equals(argMax(person_distinct_id2.is_deleted, person_distinct_id2.version), 0), 0)) AS events__pdi ON equals(events.distinct_id, events__pdi.distinct_id)
                 WHERE and(equals(events.team_id, 2), and(greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2021-05-01 00:00:00', 6, 'UTC')))), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), assumeNotNull(parseDateTime64BestEffortOrNull('2021-05-07 23:59:59', 6, 'UTC')))))
                 ORDER BY events__pdi.person_id ASC, toTimeZone(events.timestamp, 'UTC') ASC)
              GROUP BY person_id) ARRAY
           JOIN session_paths AS path_time_tuple,
                arrayEnumerate(session_paths) AS session_index) ARRAY
        JOIN limited_path_timings AS joined_path_tuple,
             arrayEnumerate(limited_path_timings) AS event_in_session_index
        WHERE ifNull(greater(target_index, 0), 0)))
  WHERE isNotNull(source_event)
  GROUP BY source_event,
           target_event
  ORDER BY event_count DESC,
           source_event ASC,
           target_event ASC
  LIMIT 50 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1
  '''
# ---
# name: TestClickhousePaths.test_event_exclusion_filters_with_wildcard_groups
  '''
  SELECT last_path_key AS source_event,
         path_key AS target_event,
         count(*) AS event_count,
         avg(conversion_time) AS average_conversion_time
  FROM
    (SELECT person_id AS person_id,
            path AS path,
                    conversion_time AS conversion_time,
                    event_in_session_index AS event_in_session_index,
                    concat(ifNull(toString(event_in_session_index), ''), '_', ifNull(toString(path), '')) AS path_key,
                    if(ifNull(greater(event_in_session_index, 1), 0), concat(ifNull(toString(minus(event_in_session_index, 1)), ''), '_', ifNull(toString(prev_path), '')), NULL) AS last_path_key,
                    path_dropoff_key AS path_dropoff_key
     FROM
       (SELECT person_id AS person_id,
               joined_path_tuple.1 AS path,
               joined_path_tuple.2 AS conversion_time,
               joined_path_tuple.3 AS prev_path,
               event_in_session_index,
               session_index AS session_index,
               arrayPopFront(arrayPushBack(path_basic, '')) AS path_basic_0,
               arrayMap((x, y) -> if(ifNull(equals(x, y), isNull(x)
                                            and isNull(y)), 0, 1), path_basic, path_basic_0) AS mapping,
               arrayFilter((x, y) -> y, time, mapping) AS timings,
               arrayFilter((x, y) -> y, path_basic, mapping) AS compact_path,
               indexOf(compact_path, NULL) AS target_index,
               if(ifNull(greater(target_index, 0), 0), arraySlice(compact_path, target_index), compact_path) AS filtered_path,
               arraySlice(filtered_path, 1, 4) AS limited_path,
               if(ifNull(greater(target_index, 0), 0), arraySlice(timings, target_index), timings) AS filtered_timings,
               arraySlice(filtered_timings, 1, 4) AS limited_timings,
               arrayDifference(limited_timings) AS timings_diff,
               concat(ifNull(toString(length(limited_path)), ''), '_', ifNull(toString(limited_path[-1]), '')) AS path_dropoff_key,
               arrayZip(limited_path, timings_diff, arrayPopBack(arrayPushFront(limited_path, ''))) AS limited_path_timings
        FROM
          (SELECT person_id AS person_id,
                  path_time_tuple.1 AS path_basic,
                  path_time_tuple.2 AS time,
                  session_index,
                  arrayZip(path_list, timing_list, arrayDifference(timing_list)) AS paths_tuple,
                  arraySplit(x -> if(ifNull(less(x.3, 1800), 0), 0, 1), paths_tuple) AS session_paths
           FROM
             (SELECT person_id AS person_id,
                     groupArray(timestamp) AS timing_list,
                     groupArray(path_item) AS path_list
              FROM
                (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
                        events__pdi.person_id AS person_id,
                        ifNull(if(equals(events.event, '$pageview'), replaceRegexpAll(ifNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$current_url'), ''), 'null'), '^"|"$', ''), ''), '(.)/$', '\\1'), events.event), '') AS path_item_ungrouped,
                        ['/bar/*/foo'] AS groupings,
                        multiMatchAnyIndex(path_item_ungrouped, ['/bar/.*/foo']) AS group_index,
                        (if(ifNull(greater(group_index, 0), 0), groupings[group_index], path_item_ungrouped) AS path_item) AS path_item
                 FROM events
                 INNER JOIN
                   (SELECT argMax(person_distinct_id2.person_id, person_distinct_id2.version) AS person_id,
                           person_distinct_id2.distinct_id AS distinct_id
                    FROM person_distinct_id2
                    WHERE equals(person_distinct_id2.team_id, 2)
                    GROUP BY person_distinct_id2.distinct_id
                    HAVING ifNull(equals(argMax(person_distinct_id2.is_deleted, person_distinct_id2.version), 0), 0)) AS events__pdi ON equals(events.distinct_id, events__pdi.distinct_id)
                 WHERE and(equals(events.team_id, 2), and(greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2012-01-01 00:00:00', 6, 'UTC')))), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), assumeNotNull(parseDateTime64BestEffortOrNull('2023-05-23 23:59:59', 6, 'UTC')))), and(equals(events.event, '$pageview'), ifNull(notIn(path_item, ['/bar/*/foo']), 0)))
                 ORDER BY events__pdi.person_id ASC, toTimeZone(events.timestamp, 'UTC') ASC)
              GROUP BY person_id) ARRAY
           JOIN session_paths AS path_time_tuple,
                arrayEnumerate(session_paths) AS session_index) ARRAY
        JOIN limited_path_timings AS joined_path_tuple,
             arrayEnumerate(limited_path_timings) AS event_in_session_index))
  WHERE isNotNull(source_event)
  GROUP BY source_event,
           target_event
  ORDER BY event_count DESC,
           source_event ASC,
           target_event ASC
  LIMIT 50 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1
  '''
# ---
# name: TestClickhousePaths.test_event_exclusion_filters_with_wildcard_groups.1
  '''
  SELECT last_path_key AS source_event,
         path_key AS target_event,
         count(*) AS event_count,
         avg(conversion_time) AS average_conversion_time
  FROM
    (SELECT person_id AS person_id,
            path AS path,
                    conversion_time AS conversion_time,
                    event_in_session_index AS event_in_session_index,
                    concat(ifNull(toString(event_in_session_index), ''), '_', ifNull(toString(path), '')) AS path_key,
                    if(ifNull(greater(event_in_session_index, 1), 0), concat(ifNull(toString(minus(event_in_session_index, 1)), ''), '_', ifNull(toString(prev_path), '')), NULL) AS last_path_key,
                    path_dropoff_key AS path_dropoff_key
     FROM
       (SELECT person_id AS person_id,
               joined_path_tuple.1 AS path,
               joined_path_tuple.2 AS conversion_time,
               joined_path_tuple.3 AS prev_path,
               event_in_session_index,
               session_index AS session_index,
               arrayPopFront(arrayPushBack(path_basic, '')) AS path_basic_0,
               arrayMap((x, y) -> if(ifNull(equals(x, y), isNull(x)
                                            and isNull(y)), 0, 1), path_basic, path_basic_0) AS mapping,
               arrayFilter((x, y) -> y, time, mapping) AS timings,
               arrayFilter((x, y) -> y, path_basic, mapping) AS compact_path,
               indexOf(compact_path, NULL) AS target_index,
               if(ifNull(greater(target_index, 0), 0), arraySlice(compact_path, target_index), compact_path) AS filtered_path,
               arraySlice(filtered_path, 1, 4) AS limited_path,
               if(ifNull(greater(target_index, 0), 0), arraySlice(timings, target_index), timings) AS filtered_timings,
               arraySlice(filtered_timings, 1, 4) AS limited_timings,
               arrayDifference(limited_timings) AS timings_diff,
               concat(ifNull(toString(length(limited_path)), ''), '_', ifNull(toString(limited_path[-1]), '')) AS path_dropoff_key,
               arrayZip(limited_path, timings_diff, arrayPopBack(arrayPushFront(limited_path, ''))) AS limited_path_timings
        FROM
          (SELECT person_id AS person_id,
                  path_time_tuple.1 AS path_basic,
                  path_time_tuple.2 AS time,
                  session_index,
                  arrayZip(path_list, timing_list, arrayDifference(timing_list)) AS paths_tuple,
                  arraySplit(x -> if(ifNull(less(x.3, 1800), 0), 0, 1), paths_tuple) AS session_paths
           FROM
             (SELECT person_id AS person_id,
                     groupArray(timestamp) AS timing_list,
                     groupArray(path_item) AS path_list
              FROM
                (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
                        events__pdi.person_id AS person_id,
                        ifNull(if(equals(events.event, '$pageview'), replaceRegexpAll(ifNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$current_url'), ''), 'null'), '^"|"$', ''), ''), '(.)/$', '\\1'), events.event), '') AS path_item_ungrouped,
                        ['/xxx/invalid/*'] AS groupings,
                        multiMatchAnyIndex(path_item_ungrouped, ['/xxx/invalid/.*']) AS group_index,
                        (if(ifNull(greater(group_index, 0), 0), groupings[group_index], path_item_ungrouped) AS path_item) AS path_item
                 FROM events
                 INNER JOIN
                   (SELECT argMax(person_distinct_id2.person_id, person_distinct_id2.version) AS person_id,
                           person_distinct_id2.distinct_id AS distinct_id
                    FROM person_distinct_id2
                    WHERE equals(person_distinct_id2.team_id, 2)
                    GROUP BY person_distinct_id2.distinct_id
                    HAVING ifNull(equals(argMax(person_distinct_id2.is_deleted, person_distinct_id2.version), 0), 0)) AS events__pdi ON equals(events.distinct_id, events__pdi.distinct_id)
                 WHERE and(equals(events.team_id, 2), and(greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2012-01-01 00:00:00', 6, 'UTC')))), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), assumeNotNull(parseDateTime64BestEffortOrNull('2023-05-23 23:59:59', 6, 'UTC')))), and(equals(events.event, '$pageview'), ifNull(notIn(path_item, ['/bar/*/foo']), 0)))
                 ORDER BY events__pdi.person_id ASC, toTimeZone(events.timestamp, 'UTC') ASC)
              GROUP BY person_id) ARRAY
           JOIN session_paths AS path_time_tuple,
                arrayEnumerate(session_paths) AS session_index) ARRAY
        JOIN limited_path_timings AS joined_path_tuple,
             arrayEnumerate(limited_path_timings) AS event_in_session_index))
  WHERE isNotNull(source_event)
  GROUP BY source_event,
           target_event
  ORDER BY event_count DESC,
           source_event ASC,
           target_event ASC
  LIMIT 50 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1
  '''
# ---
# name: TestClickhousePaths.test_event_inclusion_exclusion_filters
  '''
  SELECT last_path_key AS source_event,
         path_key AS target_event,
         count(*) AS event_count,
         avg(conversion_time) AS average_conversion_time
  FROM
    (SELECT person_id AS person_id,
            path AS path,
                    conversion_time AS conversion_time,
                    event_in_session_index AS event_in_session_index,
                    concat(ifNull(toString(event_in_session_index), ''), '_', ifNull(toString(path), '')) AS path_key,
                    if(ifNull(greater(event_in_session_index, 1), 0), concat(ifNull(toString(minus(event_in_session_index, 1)), ''), '_', ifNull(toString(prev_path), '')), NULL) AS last_path_key,
                    path_dropoff_key AS path_dropoff_key
     FROM
       (SELECT person_id AS person_id,
               joined_path_tuple.1 AS path,
               joined_path_tuple.2 AS conversion_time,
               joined_path_tuple.3 AS prev_path,
               event_in_session_index,
               session_index AS session_index,
               arrayPopFront(arrayPushBack(path_basic, '')) AS path_basic_0,
               arrayMap((x, y) -> if(ifNull(equals(x, y), isNull(x)
                                            and isNull(y)), 0, 1), path_basic, path_basic_0) AS mapping,
               arrayFilter((x, y) -> y, time, mapping) AS timings,
               arrayFilter((x, y) -> y, path_basic, mapping) AS compact_path,
               indexOf(compact_path, NULL) AS target_index,
               if(ifNull(greater(target_index, 0), 0), arraySlice(compact_path, target_index), compact_path) AS filtered_path,
               arraySlice(filtered_path, 1, 4) AS limited_path,
               if(ifNull(greater(target_index, 0), 0), arraySlice(timings, target_index), timings) AS filtered_timings,
               arraySlice(filtered_timings, 1, 4) AS limited_timings,
               arrayDifference(limited_timings) AS timings_diff,
               concat(ifNull(toString(length(limited_path)), ''), '_', ifNull(toString(limited_path[-1]), '')) AS path_dropoff_key,
               arrayZip(limited_path, timings_diff, arrayPopBack(arrayPushFront(limited_path, ''))) AS limited_path_timings
        FROM
          (SELECT person_id AS person_id,
                  path_time_tuple.1 AS path_basic,
                  path_time_tuple.2 AS time,
                  session_index,
                  arrayZip(path_list, timing_list, arrayDifference(timing_list)) AS paths_tuple,
                  arraySplit(x -> if(ifNull(less(x.3, 1800), 0), 0, 1), paths_tuple) AS session_paths
           FROM
             (SELECT person_id AS person_id,
                     groupArray(timestamp) AS timing_list,
                     groupArray(path_item) AS path_list
              FROM
                (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
                        events__pdi.person_id AS person_id,
                        ifNull(if(equals(events.event, '$pageview'), replaceRegexpAll(ifNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$current_url'), ''), 'null'), '^"|"$', ''), ''), '(.)/$', '\\1'), events.event), '') AS path_item_ungrouped,
                        NULL AS groupings,
                        multiMatchAnyIndex(path_item_ungrouped, NULL) AS group_index,
                        (if(ifNull(greater(group_index, 0), 0), groupings[group_index], path_item_ungrouped) AS path_item) AS path_item
                 FROM events
                 INNER JOIN
                   (SELECT argMax(person_distinct_id2.person_id, person_distinct_id2.version) AS person_id,
                           person_distinct_id2.distinct_id AS distinct_id
                    FROM person_distinct_id2
                    WHERE equals(person_distinct_id2.team_id, 2)
                    GROUP BY person_distinct_id2.distinct_id
                    HAVING ifNull(equals(argMax(person_distinct_id2.is_deleted, person_distinct_id2.version), 0), 0)) AS events__pdi ON equals(events.distinct_id, events__pdi.distinct_id)
                 WHERE and(equals(events.team_id, 2), and(greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2012-01-01 00:00:00', 6, 'UTC')))), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), assumeNotNull(parseDateTime64BestEffortOrNull('2023-05-23 23:59:59', 6, 'UTC')))), equals(events.event, '$pageview'))
                 ORDER BY events__pdi.person_id ASC, toTimeZone(events.timestamp, 'UTC') ASC)
              GROUP BY person_id) ARRAY
           JOIN session_paths AS path_time_tuple,
                arrayEnumerate(session_paths) AS session_index) ARRAY
        JOIN limited_path_timings AS joined_path_tuple,
             arrayEnumerate(limited_path_timings) AS event_in_session_index))
  WHERE isNotNull(source_event)
  GROUP BY source_event,
           target_event
  ORDER BY event_count DESC,
           source_event ASC,
           target_event ASC
  LIMIT 50 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1
  '''
# ---
# name: TestClickhousePaths.test_event_inclusion_exclusion_filters.1
  '''
  SELECT last_path_key AS source_event,
         path_key AS target_event,
         count(*) AS event_count,
         avg(conversion_time) AS average_conversion_time
  FROM
    (SELECT person_id AS person_id,
            path AS path,
                    conversion_time AS conversion_time,
                    event_in_session_index AS event_in_session_index,
                    concat(ifNull(toString(event_in_session_index), ''), '_', ifNull(toString(path), '')) AS path_key,
                    if(ifNull(greater(event_in_session_index, 1), 0), concat(ifNull(toString(minus(event_in_session_index, 1)), ''), '_', ifNull(toString(prev_path), '')), NULL) AS last_path_key,
                    path_dropoff_key AS path_dropoff_key
     FROM
       (SELECT person_id AS person_id,
               joined_path_tuple.1 AS path,
               joined_path_tuple.2 AS conversion_time,
               joined_path_tuple.3 AS prev_path,
               event_in_session_index,
               session_index AS session_index,
               arrayPopFront(arrayPushBack(path_basic, '')) AS path_basic_0,
               arrayMap((x, y) -> if(ifNull(equals(x, y), isNull(x)
                                            and isNull(y)), 0, 1), path_basic, path_basic_0) AS mapping,
               arrayFilter((x, y) -> y, time, mapping) AS timings,
               arrayFilter((x, y) -> y, path_basic, mapping) AS compact_path,
               indexOf(compact_path, NULL) AS target_index,
               if(ifNull(greater(target_index, 0), 0), arraySlice(compact_path, target_index), compact_path) AS filtered_path,
               arraySlice(filtered_path, 1, 4) AS limited_path,
               if(ifNull(greater(target_index, 0), 0), arraySlice(timings, target_index), timings) AS filtered_timings,
               arraySlice(filtered_timings, 1, 4) AS limited_timings,
               arrayDifference(limited_timings) AS timings_diff,
               concat(ifNull(toString(length(limited_path)), ''), '_', ifNull(toString(limited_path[-1]), '')) AS path_dropoff_key,
               arrayZip(limited_path, timings_diff, arrayPopBack(arrayPushFront(limited_path, ''))) AS limited_path_timings
        FROM
          (SELECT person_id AS person_id,
                  path_time_tuple.1 AS path_basic,
                  path_time_tuple.2 AS time,
                  session_index,
                  arrayZip(path_list, timing_list, arrayDifference(timing_list)) AS paths_tuple,
                  arraySplit(x -> if(ifNull(less(x.3, 1800), 0), 0, 1), paths_tuple) AS session_paths
           FROM
             (SELECT person_id AS person_id,
                     groupArray(timestamp) AS timing_list,
                     groupArray(path_item) AS path_list
              FROM
                (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
                        events__pdi.person_id AS person_id,
                        ifNull(if(equals(events.event, '$screen'), replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$screen_name'), ''), 'null'), '^"|"$', ''), events.event), '') AS path_item_ungrouped,
                        NULL AS groupings,
                        multiMatchAnyIndex(path_item_ungrouped, NULL) AS group_index,
                        (if(ifNull(greater(group_index, 0), 0), groupings[group_index], path_item_ungrouped) AS path_item) AS path_item
                 FROM events
                 INNER JOIN
                   (SELECT argMax(person_distinct_id2.person_id, person_distinct_id2.version) AS person_id,
                           person_distinct_id2.distinct_id AS distinct_id
                    FROM person_distinct_id2
                    WHERE equals(person_distinct_id2.team_id, 2)
                    GROUP BY person_distinct_id2.distinct_id
                    HAVING ifNull(equals(argMax(person_distinct_id2.is_deleted, person_distinct_id2.version), 0), 0)) AS events__pdi ON equals(events.distinct_id, events__pdi.distinct_id)
                 WHERE and(equals(events.team_id, 2), and(greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2012-01-01 00:00:00', 6, 'UTC')))), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), assumeNotNull(parseDateTime64BestEffortOrNull('2023-05-23 23:59:59', 6, 'UTC')))), equals(events.event, '$screen'))
                 ORDER BY events__pdi.person_id ASC, toTimeZone(events.timestamp, 'UTC') ASC)
              GROUP BY person_id) ARRAY
           JOIN session_paths AS path_time_tuple,
                arrayEnumerate(session_paths) AS session_index) ARRAY
        JOIN limited_path_timings AS joined_path_tuple,
             arrayEnumerate(limited_path_timings) AS event_in_session_index))
  WHERE isNotNull(source_event)
  GROUP BY source_event,
           target_event
  ORDER BY event_count DESC,
           source_event ASC,
           target_event ASC
  LIMIT 50 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1
  '''
# ---
# name: TestClickhousePaths.test_event_inclusion_exclusion_filters.2
  '''
  SELECT last_path_key AS source_event,
         path_key AS target_event,
         count(*) AS event_count,
         avg(conversion_time) AS average_conversion_time
  FROM
    (SELECT person_id AS person_id,
            path AS path,
                    conversion_time AS conversion_time,
                    event_in_session_index AS event_in_session_index,
                    concat(ifNull(toString(event_in_session_index), ''), '_', ifNull(toString(path), '')) AS path_key,
                    if(ifNull(greater(event_in_session_index, 1), 0), concat(ifNull(toString(minus(event_in_session_index, 1)), ''), '_', ifNull(toString(prev_path), '')), NULL) AS last_path_key,
                    path_dropoff_key AS path_dropoff_key
     FROM
       (SELECT person_id AS person_id,
               joined_path_tuple.1 AS path,
               joined_path_tuple.2 AS conversion_time,
               joined_path_tuple.3 AS prev_path,
               event_in_session_index,
               session_index AS session_index,
               arrayPopFront(arrayPushBack(path_basic, '')) AS path_basic_0,
               arrayMap((x, y) -> if(ifNull(equals(x, y), isNull(x)
                                            and isNull(y)), 0, 1), path_basic, path_basic_0) AS mapping,
               arrayFilter((x, y) -> y, time, mapping) AS timings,
               arrayFilter((x, y) -> y, path_basic, mapping) AS compact_path,
               indexOf(compact_path, NULL) AS target_index,
               if(ifNull(greater(target_index, 0), 0), arraySlice(compact_path, target_index), compact_path) AS filtered_path,
               arraySlice(filtered_path, 1, 4) AS limited_path,
               if(ifNull(greater(target_index, 0), 0), arraySlice(timings, target_index), timings) AS filtered_timings,
               arraySlice(filtered_timings, 1, 4) AS limited_timings,
               arrayDifference(limited_timings) AS timings_diff,
               concat(ifNull(toString(length(limited_path)), ''), '_', ifNull(toString(limited_path[-1]), '')) AS path_dropoff_key,
               arrayZip(limited_path, timings_diff, arrayPopBack(arrayPushFront(limited_path, ''))) AS limited_path_timings
        FROM
          (SELECT person_id AS person_id,
                  path_time_tuple.1 AS path_basic,
                  path_time_tuple.2 AS time,
                  session_index,
                  arrayZip(path_list, timing_list, arrayDifference(timing_list)) AS paths_tuple,
                  arraySplit(x -> if(ifNull(less(x.3, 1800), 0), 0, 1), paths_tuple) AS session_paths
           FROM
             (SELECT person_id AS person_id,
                     groupArray(timestamp) AS timing_list,
                     groupArray(path_item) AS path_list
              FROM
                (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
                        events__pdi.person_id AS person_id,
                        ifNull(events.event, '') AS path_item_ungrouped,
                        NULL AS groupings,
                        multiMatchAnyIndex(path_item_ungrouped, NULL) AS group_index,
                        (if(ifNull(greater(group_index, 0), 0), groupings[group_index], path_item_ungrouped) AS path_item) AS path_item
                 FROM events
                 INNER JOIN
                   (SELECT argMax(person_distinct_id2.person_id, person_distinct_id2.version) AS person_id,
                           person_distinct_id2.distinct_id AS distinct_id
                    FROM person_distinct_id2
                    WHERE equals(person_distinct_id2.team_id, 2)
                    GROUP BY person_distinct_id2.distinct_id
                    HAVING ifNull(equals(argMax(person_distinct_id2.is_deleted, person_distinct_id2.version), 0), 0)) AS events__pdi ON equals(events.distinct_id, events__pdi.distinct_id)
                 WHERE and(equals(events.team_id, 2), and(greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2012-01-01 00:00:00', 6, 'UTC')))), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), assumeNotNull(parseDateTime64BestEffortOrNull('2023-05-23 23:59:59', 6, 'UTC')))), not(startsWith(events.event, '$')))
                 ORDER BY events__pdi.person_id ASC, toTimeZone(events.timestamp, 'UTC') ASC)
              GROUP BY person_id) ARRAY
           JOIN session_paths AS path_time_tuple,
                arrayEnumerate(session_paths) AS session_index) ARRAY
        JOIN limited_path_timings AS joined_path_tuple,
             arrayEnumerate(limited_path_timings) AS event_in_session_index))
  WHERE isNotNull(source_event)
  GROUP BY source_event,
           target_event
  ORDER BY event_count DESC,
           source_event ASC,
           target_event ASC
  LIMIT 50 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1
  '''
# ---
# name: TestClickhousePaths.test_event_inclusion_exclusion_filters.3
  '''
  SELECT last_path_key AS source_event,
         path_key AS target_event,
         count(*) AS event_count,
         avg(conversion_time) AS average_conversion_time
  FROM
    (SELECT person_id AS person_id,
            path AS path,
                    conversion_time AS conversion_time,
                    event_in_session_index AS event_in_session_index,
                    concat(ifNull(toString(event_in_session_index), ''), '_', ifNull(toString(path), '')) AS path_key,
                    if(ifNull(greater(event_in_session_index, 1), 0), concat(ifNull(toString(minus(event_in_session_index, 1)), ''), '_', ifNull(toString(prev_path), '')), NULL) AS last_path_key,
                    path_dropoff_key AS path_dropoff_key
     FROM
       (SELECT person_id AS person_id,
               joined_path_tuple.1 AS path,
               joined_path_tuple.2 AS conversion_time,
               joined_path_tuple.3 AS prev_path,
               event_in_session_index,
               session_index AS session_index,
               arrayPopFront(arrayPushBack(path_basic, '')) AS path_basic_0,
               arrayMap((x, y) -> if(ifNull(equals(x, y), isNull(x)
                                            and isNull(y)), 0, 1), path_basic, path_basic_0) AS mapping,
               arrayFilter((x, y) -> y, time, mapping) AS timings,
               arrayFilter((x, y) -> y, path_basic, mapping) AS compact_path,
               indexOf(compact_path, NULL) AS target_index,
               if(ifNull(greater(target_index, 0), 0), arraySlice(compact_path, target_index), compact_path) AS filtered_path,
               arraySlice(filtered_path, 1, 4) AS limited_path,
               if(ifNull(greater(target_index, 0), 0), arraySlice(timings, target_index), timings) AS filtered_timings,
               arraySlice(filtered_timings, 1, 4) AS limited_timings,
               arrayDifference(limited_timings) AS timings_diff,
               concat(ifNull(toString(length(limited_path)), ''), '_', ifNull(toString(limited_path[-1]), '')) AS path_dropoff_key,
               arrayZip(limited_path, timings_diff, arrayPopBack(arrayPushFront(limited_path, ''))) AS limited_path_timings
        FROM
          (SELECT person_id AS person_id,
                  path_time_tuple.1 AS path_basic,
                  path_time_tuple.2 AS time,
                  session_index,
                  arrayZip(path_list, timing_list, arrayDifference(timing_list)) AS paths_tuple,
                  arraySplit(x -> if(ifNull(less(x.3, 1800), 0), 0, 1), paths_tuple) AS session_paths
           FROM
             (SELECT person_id AS person_id,
                     groupArray(timestamp) AS timing_list,
                     groupArray(path_item) AS path_list
              FROM
                (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
                        events__pdi.person_id AS person_id,
                        ifNull(if(equals(events.event, '$screen'), replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$screen_name'), ''), 'null'), '^"|"$', ''), if(equals(events.event, '$pageview'), replaceRegexpAll(ifNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$current_url'), ''), 'null'), '^"|"$', ''), ''), '(.)/$', '\\1'), events.event)), '') AS path_item_ungrouped,
                        NULL AS groupings,
                        multiMatchAnyIndex(path_item_ungrouped, NULL) AS group_index,
                        (if(ifNull(greater(group_index, 0), 0), groupings[group_index], path_item_ungrouped) AS path_item) AS path_item
                 FROM events
                 INNER JOIN
                   (SELECT argMax(person_distinct_id2.person_id, person_distinct_id2.version) AS person_id,
                           person_distinct_id2.distinct_id AS distinct_id
                    FROM person_distinct_id2
                    WHERE equals(person_distinct_id2.team_id, 2)
                    GROUP BY person_distinct_id2.distinct_id
                    HAVING ifNull(equals(argMax(person_distinct_id2.is_deleted, person_distinct_id2.version), 0), 0)) AS events__pdi ON equals(events.distinct_id, events__pdi.distinct_id)
                 WHERE and(equals(events.team_id, 2), and(greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2012-01-01 00:00:00', 6, 'UTC')))), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), assumeNotNull(parseDateTime64BestEffortOrNull('2023-05-23 23:59:59', 6, 'UTC')))), and(or(equals(events.event, '$pageview'), equals(events.event, '$screen'), not(startsWith(events.event, '$'))), ifNull(notIn(path_item, ['/custom1', '/1', '/2', '/3']), 0)))
                 ORDER BY events__pdi.person_id ASC, toTimeZone(events.timestamp, 'UTC') ASC)
              GROUP BY person_id) ARRAY
           JOIN session_paths AS path_time_tuple,
                arrayEnumerate(session_paths) AS session_index) ARRAY
        JOIN limited_path_timings AS joined_path_tuple,
             arrayEnumerate(limited_path_timings) AS event_in_session_index))
  WHERE isNotNull(source_event)
  GROUP BY source_event,
           target_event
  ORDER BY event_count DESC,
           source_event ASC,
           target_event ASC
  LIMIT 50 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1
  '''
# ---
# name: TestClickhousePaths.test_event_ordering
  '''
  SELECT last_path_key AS source_event,
         path_key AS target_event,
         count(*) AS event_count,
         avg(conversion_time) AS average_conversion_time
  FROM
    (SELECT person_id AS person_id,
            path AS path,
                    conversion_time AS conversion_time,
                    event_in_session_index AS event_in_session_index,
                    concat(ifNull(toString(event_in_session_index), ''), '_', ifNull(toString(path), '')) AS path_key,
                    if(ifNull(greater(event_in_session_index, 1), 0), concat(ifNull(toString(minus(event_in_session_index, 1)), ''), '_', ifNull(toString(prev_path), '')), NULL) AS last_path_key,
                    path_dropoff_key AS path_dropoff_key
     FROM
       (SELECT person_id AS person_id,
               joined_path_tuple.1 AS path,
               joined_path_tuple.2 AS conversion_time,
               joined_path_tuple.3 AS prev_path,
               event_in_session_index,
               session_index AS session_index,
               arrayPopFront(arrayPushBack(path_basic, '')) AS path_basic_0,
               arrayMap((x, y) -> if(ifNull(equals(x, y), isNull(x)
                                            and isNull(y)), 0, 1), path_basic, path_basic_0) AS mapping,
               arrayFilter((x, y) -> y, time, mapping) AS timings,
               arrayFilter((x, y) -> y, path_basic, mapping) AS compact_path,
               indexOf(compact_path, NULL) AS target_index,
               if(ifNull(greater(target_index, 0), 0), arraySlice(compact_path, target_index), compact_path) AS filtered_path,
               arraySlice(filtered_path, 1, 5) AS limited_path,
               if(ifNull(greater(target_index, 0), 0), arraySlice(timings, target_index), timings) AS filtered_timings,
               arraySlice(filtered_timings, 1, 5) AS limited_timings,
               arrayDifference(limited_timings) AS timings_diff,
               concat(ifNull(toString(length(limited_path)), ''), '_', ifNull(toString(limited_path[-1]), '')) AS path_dropoff_key,
               arrayZip(limited_path, timings_diff, arrayPopBack(arrayPushFront(limited_path, ''))) AS limited_path_timings
        FROM
          (SELECT person_id AS person_id,
                  path_time_tuple.1 AS path_basic,
                  path_time_tuple.2 AS time,
                  session_index,
                  arrayZip(path_list, timing_list, arrayDifference(timing_list)) AS paths_tuple,
                  arraySplit(x -> if(ifNull(less(x.3, 1800), 0), 0, 1), paths_tuple) AS session_paths
           FROM
             (SELECT person_id AS person_id,
                     groupArray(timestamp) AS timing_list,
                     groupArray(path_item) AS path_list
              FROM
                (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
                        events__pdi.person_id AS person_id,
                        ifNull(events.event, '') AS path_item_ungrouped,
                        NULL AS groupings,
                        multiMatchAnyIndex(path_item_ungrouped, NULL) AS group_index,
                        (if(ifNull(greater(group_index, 0), 0), groupings[group_index], path_item_ungrouped) AS path_item) AS path_item
                 FROM events
                 INNER JOIN
                   (SELECT argMax(person_distinct_id2.person_id, person_distinct_id2.version) AS person_id,
                           person_distinct_id2.distinct_id AS distinct_id
                    FROM person_distinct_id2
                    WHERE equals(person_distinct_id2.team_id, 2)
                    GROUP BY person_distinct_id2.distinct_id
                    HAVING ifNull(equals(argMax(person_distinct_id2.is_deleted, person_distinct_id2.version), 0), 0)) AS events__pdi ON equals(events.distinct_id, events__pdi.distinct_id)
                 WHERE and(equals(events.team_id, 2), and(greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2021-05-01 00:00:00', 6, 'UTC')))), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), assumeNotNull(parseDateTime64BestEffortOrNull('2021-05-03 23:59:59', 6, 'UTC')))), not(startsWith(events.event, '$')))
                 ORDER BY events__pdi.person_id ASC, toTimeZone(events.timestamp, 'UTC') ASC)
              GROUP BY person_id) ARRAY
           JOIN session_paths AS path_time_tuple,
                arrayEnumerate(session_paths) AS session_index) ARRAY
        JOIN limited_path_timings AS joined_path_tuple,
             arrayEnumerate(limited_path_timings) AS event_in_session_index))
  WHERE isNotNull(source_event)
  GROUP BY source_event,
           target_event
  ORDER BY event_count DESC,
           source_event ASC,
           target_event ASC
  LIMIT 50 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1
  '''
# ---
# name: TestClickhousePaths.test_groups_filtering_person_on_events
  '''
  SELECT last_path_key AS source_event,
         path_key AS target_event,
         count(*) AS event_count,
         avg(conversion_time) AS average_conversion_time
  FROM
    (SELECT person_id AS person_id,
            path AS path,
                    conversion_time AS conversion_time,
                    event_in_session_index AS event_in_session_index,
                    concat(ifNull(toString(event_in_session_index), ''), '_', ifNull(toString(path), '')) AS path_key,
                    if(ifNull(greater(event_in_session_index, 1), 0), concat(ifNull(toString(minus(event_in_session_index, 1)), ''), '_', ifNull(toString(prev_path), '')), NULL) AS last_path_key,
                    path_dropoff_key AS path_dropoff_key
     FROM
       (SELECT person_id AS person_id,
               joined_path_tuple.1 AS path,
               joined_path_tuple.2 AS conversion_time,
               joined_path_tuple.3 AS prev_path,
               event_in_session_index,
               session_index AS session_index,
               arrayPopFront(arrayPushBack(path_basic, '')) AS path_basic_0,
               arrayMap((x, y) -> if(ifNull(equals(x, y), isNull(x)
                                            and isNull(y)), 0, 1), path_basic, path_basic_0) AS mapping,
               arrayFilter((x, y) -> y, time, mapping) AS timings,
               arrayFilter((x, y) -> y, path_basic, mapping) AS compact_path,
               indexOf(compact_path, NULL) AS target_index,
               if(ifNull(greater(target_index, 0), 0), arraySlice(compact_path, target_index), compact_path) AS filtered_path,
               arraySlice(filtered_path, 1, 4) AS limited_path,
               if(ifNull(greater(target_index, 0), 0), arraySlice(timings, target_index), timings) AS filtered_timings,
               arraySlice(filtered_timings, 1, 4) AS limited_timings,
               arrayDifference(limited_timings) AS timings_diff,
               concat(ifNull(toString(length(limited_path)), ''), '_', ifNull(toString(limited_path[-1]), '')) AS path_dropoff_key,
               arrayZip(limited_path, timings_diff, arrayPopBack(arrayPushFront(limited_path, ''))) AS limited_path_timings
        FROM
          (SELECT person_id AS person_id,
                  path_time_tuple.1 AS path_basic,
                  path_time_tuple.2 AS time,
                  session_index,
                  arrayZip(path_list, timing_list, arrayDifference(timing_list)) AS paths_tuple,
                  arraySplit(x -> if(ifNull(less(x.3, 1800), 0), 0, 1), paths_tuple) AS session_paths
           FROM
             (SELECT person_id AS person_id,
                     groupArray(timestamp) AS timing_list,
                     groupArray(path_item) AS path_list
              FROM
                (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
                        events__pdi.person_id AS person_id,
                        ifNull(if(equals(events.event, '$screen'), replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$screen_name'), ''), 'null'), '^"|"$', ''), if(equals(events.event, '$pageview'), replaceRegexpAll(ifNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$current_url'), ''), 'null'), '^"|"$', ''), ''), '(.)/$', '\\1'), events.event)), '') AS path_item_ungrouped,
                        NULL AS groupings,
                        multiMatchAnyIndex(path_item_ungrouped, NULL) AS group_index,
                        (if(ifNull(greater(group_index, 0), 0), groupings[group_index], path_item_ungrouped) AS path_item) AS path_item
                 FROM events
                 INNER JOIN
                   (SELECT argMax(person_distinct_id2.person_id, person_distinct_id2.version) AS person_id,
                           person_distinct_id2.distinct_id AS distinct_id
                    FROM person_distinct_id2
                    WHERE equals(person_distinct_id2.team_id, 2)
                    GROUP BY person_distinct_id2.distinct_id
                    HAVING ifNull(equals(argMax(person_distinct_id2.is_deleted, person_distinct_id2.version), 0), 0)) AS events__pdi ON equals(events.distinct_id, events__pdi.distinct_id)
                 LEFT JOIN
                   (SELECT argMax(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(groups.group_properties, 'industry'), ''), 'null'), '^"|"$', ''), groups._timestamp) AS properties___industry,
                           groups.group_type_index AS index,
                           groups.group_key AS key
                    FROM groups
                    WHERE and(equals(groups.team_id, 2), ifNull(equals(index, 0), 0))
                    GROUP BY groups.group_type_index,
                             groups.group_key) AS events__group_0 ON equals(events.`$group_0`, events__group_0.key)
                 WHERE and(equals(events.team_id, 2), ifNull(equals(events__group_0.properties___industry, 'finance'), 0), and(greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2012-01-01 00:00:00', 6, 'UTC')))), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), assumeNotNull(parseDateTime64BestEffortOrNull('2012-02-01 23:59:59', 6, 'UTC')))), or(equals(events.event, '$pageview'), equals(events.event, '$screen'), not(startsWith(events.event, '$'))))
                 ORDER BY events__pdi.person_id ASC, toTimeZone(events.timestamp, 'UTC') ASC)
              GROUP BY person_id) ARRAY
           JOIN session_paths AS path_time_tuple,
                arrayEnumerate(session_paths) AS session_index) ARRAY
        JOIN limited_path_timings AS joined_path_tuple,
             arrayEnumerate(limited_path_timings) AS event_in_session_index))
  WHERE isNotNull(source_event)
  GROUP BY source_event,
           target_event
  ORDER BY event_count DESC,
           source_event ASC,
           target_event ASC
  LIMIT 50 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1
  '''
# ---
# name: TestClickhousePaths.test_groups_filtering_person_on_events.1
  '''
  SELECT last_path_key AS source_event,
         path_key AS target_event,
         count(*) AS event_count,
         avg(conversion_time) AS average_conversion_time
  FROM
    (SELECT person_id AS person_id,
            path AS path,
                    conversion_time AS conversion_time,
                    event_in_session_index AS event_in_session_index,
                    concat(ifNull(toString(event_in_session_index), ''), '_', ifNull(toString(path), '')) AS path_key,
                    if(ifNull(greater(event_in_session_index, 1), 0), concat(ifNull(toString(minus(event_in_session_index, 1)), ''), '_', ifNull(toString(prev_path), '')), NULL) AS last_path_key,
                    path_dropoff_key AS path_dropoff_key
     FROM
       (SELECT person_id AS person_id,
               joined_path_tuple.1 AS path,
               joined_path_tuple.2 AS conversion_time,
               joined_path_tuple.3 AS prev_path,
               event_in_session_index,
               session_index AS session_index,
               arrayPopFront(arrayPushBack(path_basic, '')) AS path_basic_0,
               arrayMap((x, y) -> if(ifNull(equals(x, y), isNull(x)
                                            and isNull(y)), 0, 1), path_basic, path_basic_0) AS mapping,
               arrayFilter((x, y) -> y, time, mapping) AS timings,
               arrayFilter((x, y) -> y, path_basic, mapping) AS compact_path,
               indexOf(compact_path, NULL) AS target_index,
               if(ifNull(greater(target_index, 0), 0), arraySlice(compact_path, target_index), compact_path) AS filtered_path,
               arraySlice(filtered_path, 1, 4) AS limited_path,
               if(ifNull(greater(target_index, 0), 0), arraySlice(timings, target_index), timings) AS filtered_timings,
               arraySlice(filtered_timings, 1, 4) AS limited_timings,
               arrayDifference(limited_timings) AS timings_diff,
               concat(ifNull(toString(length(limited_path)), ''), '_', ifNull(toString(limited_path[-1]), '')) AS path_dropoff_key,
               arrayZip(limited_path, timings_diff, arrayPopBack(arrayPushFront(limited_path, ''))) AS limited_path_timings
        FROM
          (SELECT person_id AS person_id,
                  path_time_tuple.1 AS path_basic,
                  path_time_tuple.2 AS time,
                  session_index,
                  arrayZip(path_list, timing_list, arrayDifference(timing_list)) AS paths_tuple,
                  arraySplit(x -> if(ifNull(less(x.3, 1800), 0), 0, 1), paths_tuple) AS session_paths
           FROM
             (SELECT person_id AS person_id,
                     groupArray(timestamp) AS timing_list,
                     groupArray(path_item) AS path_list
              FROM
                (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
                        events.person_id AS person_id,
                        ifNull(if(equals(events.event, '$screen'), replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$screen_name'), ''), 'null'), '^"|"$', ''), if(equals(events.event, '$pageview'), replaceRegexpAll(ifNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$current_url'), ''), 'null'), '^"|"$', ''), ''), '(.)/$', '\\1'), events.event)), '') AS path_item_ungrouped,
                        NULL AS groupings,
                        multiMatchAnyIndex(path_item_ungrouped, NULL) AS group_index,
                        (if(ifNull(greater(group_index, 0), 0), groupings[group_index], path_item_ungrouped) AS path_item) AS path_item
                 FROM events
                 LEFT JOIN
                   (SELECT argMax(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(groups.group_properties, 'industry'), ''), 'null'), '^"|"$', ''), groups._timestamp) AS properties___industry,
                           groups.group_type_index AS index,
                           groups.group_key AS key
                    FROM groups
                    WHERE and(equals(groups.team_id, 2), ifNull(equals(index, 0), 0))
                    GROUP BY groups.group_type_index,
                             groups.group_key) AS events__group_0 ON equals(events.`$group_0`, events__group_0.key)
                 WHERE and(equals(events.team_id, 2), ifNull(equals(events__group_0.properties___industry, 'technology'), 0), and(greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2012-01-01 00:00:00', 6, 'UTC')))), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), assumeNotNull(parseDateTime64BestEffortOrNull('2012-02-01 23:59:59', 6, 'UTC')))), or(equals(events.event, '$pageview'), equals(events.event, '$screen'), not(startsWith(events.event, '$'))))
                 ORDER BY events.person_id ASC, toTimeZone(events.timestamp, 'UTC') ASC)
              GROUP BY person_id) ARRAY
           JOIN session_paths AS path_time_tuple,
                arrayEnumerate(session_paths) AS session_index) ARRAY
        JOIN limited_path_timings AS joined_path_tuple,
             arrayEnumerate(limited_path_timings) AS event_in_session_index))
  WHERE isNotNull(source_event)
  GROUP BY source_event,
           target_event
  ORDER BY event_count DESC,
           source_event ASC,
           target_event ASC
  LIMIT 50 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1
  '''
# ---
# name: TestClickhousePaths.test_groups_filtering_person_on_events.2
  '''
  SELECT last_path_key AS source_event,
         path_key AS target_event,
         count(*) AS event_count,
         avg(conversion_time) AS average_conversion_time
  FROM
    (SELECT person_id AS person_id,
            path AS path,
                    conversion_time AS conversion_time,
                    event_in_session_index AS event_in_session_index,
                    concat(ifNull(toString(event_in_session_index), ''), '_', ifNull(toString(path), '')) AS path_key,
                    if(ifNull(greater(event_in_session_index, 1), 0), concat(ifNull(toString(minus(event_in_session_index, 1)), ''), '_', ifNull(toString(prev_path), '')), NULL) AS last_path_key,
                    path_dropoff_key AS path_dropoff_key
     FROM
       (SELECT person_id AS person_id,
               joined_path_tuple.1 AS path,
               joined_path_tuple.2 AS conversion_time,
               joined_path_tuple.3 AS prev_path,
               event_in_session_index,
               session_index AS session_index,
               arrayPopFront(arrayPushBack(path_basic, '')) AS path_basic_0,
               arrayMap((x, y) -> if(ifNull(equals(x, y), isNull(x)
                                            and isNull(y)), 0, 1), path_basic, path_basic_0) AS mapping,
               arrayFilter((x, y) -> y, time, mapping) AS timings,
               arrayFilter((x, y) -> y, path_basic, mapping) AS compact_path,
               indexOf(compact_path, NULL) AS target_index,
               if(ifNull(greater(target_index, 0), 0), arraySlice(compact_path, target_index), compact_path) AS filtered_path,
               arraySlice(filtered_path, 1, 4) AS limited_path,
               if(ifNull(greater(target_index, 0), 0), arraySlice(timings, target_index), timings) AS filtered_timings,
               arraySlice(filtered_timings, 1, 4) AS limited_timings,
               arrayDifference(limited_timings) AS timings_diff,
               concat(ifNull(toString(length(limited_path)), ''), '_', ifNull(toString(limited_path[-1]), '')) AS path_dropoff_key,
               arrayZip(limited_path, timings_diff, arrayPopBack(arrayPushFront(limited_path, ''))) AS limited_path_timings
        FROM
          (SELECT person_id AS person_id,
                  path_time_tuple.1 AS path_basic,
                  path_time_tuple.2 AS time,
                  session_index,
                  arrayZip(path_list, timing_list, arrayDifference(timing_list)) AS paths_tuple,
                  arraySplit(x -> if(ifNull(less(x.3, 1800), 0), 0, 1), paths_tuple) AS session_paths
           FROM
             (SELECT person_id AS person_id,
                     groupArray(timestamp) AS timing_list,
                     groupArray(path_item) AS path_list
              FROM
                (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
                        events.person_id AS person_id,
                        ifNull(if(equals(events.event, '$screen'), replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$screen_name'), ''), 'null'), '^"|"$', ''), if(equals(events.event, '$pageview'), replaceRegexpAll(ifNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$current_url'), ''), 'null'), '^"|"$', ''), ''), '(.)/$', '\\1'), events.event)), '') AS path_item_ungrouped,
                        NULL AS groupings,
                        multiMatchAnyIndex(path_item_ungrouped, NULL) AS group_index,
                        (if(ifNull(greater(group_index, 0), 0), groupings[group_index], path_item_ungrouped) AS path_item) AS path_item
                 FROM events
                 LEFT JOIN
                   (SELECT argMax(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(groups.group_properties, 'industry'), ''), 'null'), '^"|"$', ''), groups._timestamp) AS properties___industry,
                           groups.group_type_index AS index,
                           groups.group_key AS key
                    FROM groups
                    WHERE and(equals(groups.team_id, 2), ifNull(equals(index, 1), 0))
                    GROUP BY groups.group_type_index,
                             groups.group_key) AS events__group_1 ON equals(events.`$group_1`, events__group_1.key)
                 WHERE and(equals(events.team_id, 2), ifNull(equals(events__group_1.properties___industry, 'technology'), 0), and(greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2012-01-01 00:00:00', 6, 'UTC')))), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), assumeNotNull(parseDateTime64BestEffortOrNull('2012-02-01 23:59:59', 6, 'UTC')))), or(equals(events.event, '$pageview'), equals(events.event, '$screen'), not(startsWith(events.event, '$'))))
                 ORDER BY events.person_id ASC, toTimeZone(events.timestamp, 'UTC') ASC)
              GROUP BY person_id) ARRAY
           JOIN session_paths AS path_time_tuple,
                arrayEnumerate(session_paths) AS session_index) ARRAY
        JOIN limited_path_timings AS joined_path_tuple,
             arrayEnumerate(limited_path_timings) AS event_in_session_index))
  WHERE isNotNull(source_event)
  GROUP BY source_event,
           target_event
  ORDER BY event_count DESC,
           source_event ASC,
           target_event ASC
  LIMIT 50 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1
  '''
# ---
# name: TestClickhousePaths.test_person_dropoffs
  '''
  SELECT persons.id AS id
  FROM
    (SELECT person.id AS id
     FROM person
     WHERE equals(person.team_id, 2)
     GROUP BY person.id
     HAVING ifNull(equals(argMax(person.is_deleted, person.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS persons
  INNER JOIN
    (SELECT person_id AS actor_id,
            groupUniqArray(100)(tuple(timestamp, uuid, session_id, window_id)) AS matching_events,
            count(*) AS event_count
     FROM
       (SELECT person_id AS person_id,
               path AS path,
                       conversion_time AS conversion_time,
                       event_in_session_index AS event_in_session_index,
                       concat(ifNull(toString(event_in_session_index), ''), '_', ifNull(toString(path), '')) AS path_key,
                       if(ifNull(greater(event_in_session_index, 1), 0), concat(ifNull(toString(minus(event_in_session_index, 1)), ''), '_', ifNull(toString(prev_path), '')), NULL) AS last_path_key,
                       path_dropoff_key AS path_dropoff_key,
                       final_uuid AS uuid,
                       final_timestamp AS timestamp,
                       final_session_id AS session_id,
                       final_window_id AS window_id
        FROM
          (SELECT person_id AS person_id,
                  joined_path_tuple.1 AS path,
                  joined_path_tuple.2 AS conversion_time,
                  joined_path_tuple.3 AS prev_path,
                  event_in_session_index,
                  session_index AS session_index,
                  arrayPopFront(arrayPushBack(path_basic, '')) AS path_basic_0,
                  arrayMap((x, y) -> if(ifNull(equals(x, y), isNull(x)
                                               and isNull(y)), 0, 1), path_basic, path_basic_0) AS mapping,
                  arrayFilter((x, y) -> y, time, mapping) AS timings,
                  arrayFilter((x, y) -> y, path_basic, mapping) AS compact_path,
                  indexOf(compact_path, NULL) AS target_index,
                  joined_path_tuple.4 AS final_uuid,
                  joined_path_tuple.5 AS final_timestamp,
                  joined_path_tuple.6 AS final_session_id,
                  joined_path_tuple.7 AS final_window_id,
                  arrayFilter((x, y) -> y, uuid_items, mapping) AS uuid,
                  arrayFilter((x, y) -> y, timestamp_items, mapping) AS timestamp,
                  arrayFilter((x, y) -> y, session_id_items, mapping) AS session_id,
                  arrayFilter((x, y) -> y, window_id_items, mapping) AS window_id,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(compact_path, target_index), compact_path) AS filtered_path,
                  arraySlice(filtered_path, 1, 5) AS limited_path,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(timings, target_index), timings) AS filtered_timings,
                  arraySlice(filtered_timings, 1, 5) AS limited_timings,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(uuid, target_index), uuid) AS filtered_uuid,
                  arraySlice(filtered_uuid, 1, 5) AS limited_uuid,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(timestamp, target_index), timestamp) AS filtered_timestamp,
                  arraySlice(filtered_timestamp, 1, 5) AS limited_timestamp,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(session_id, target_index), session_id) AS filtered_session_id,
                  arraySlice(filtered_session_id, 1, 5) AS limited_session_id,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(window_id, target_index), window_id) AS filtered_window_id,
                  arraySlice(filtered_window_id, 1, 5) AS limited_window_id,
                  arrayDifference(limited_timings) AS timings_diff,
                  concat(ifNull(toString(length(limited_path)), ''), '_', ifNull(toString(limited_path[-1]), '')) AS path_dropoff_key,
                  arrayZip(limited_path, timings_diff, arrayPopBack(arrayPushFront(limited_path, '')), limited_uuid, limited_timestamp, limited_session_id, limited_window_id) AS limited_path_timings
           FROM
             (SELECT person_id AS person_id,
                     path_time_tuple.1 AS path_basic,
                     path_time_tuple.2 AS time,
                     session_index,
                     arrayZip(path_list, timing_list, arrayDifference(timing_list), uuid_list, timestamp_list, session_id_list, window_id_list) AS paths_tuple,
                     arraySplit(x -> if(ifNull(less(x.3, 1800), 0), 0, 1), paths_tuple) AS session_paths,
                     path_time_tuple.4 AS uuid_items,
                     path_time_tuple.5 AS timestamp_items,
                     path_time_tuple.6 AS session_id_items,
                     path_time_tuple.7 AS window_id_items
              FROM
                (SELECT person_id AS person_id,
                        groupArray(timestamp) AS timing_list,
                        groupArray(path_item) AS path_list,
                        groupArray(uuid) AS uuid_list,
                        groupArray(timestamp) AS timestamp_list,
                        groupArray(session_id) AS session_id_list,
                        groupArray(window_id) AS window_id_list
                 FROM
                   (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
                           events__pdi.person_id AS person_id,
                           ifNull(events.event, '') AS path_item_ungrouped,
                           events.uuid AS uuid,
                           toTimeZone(events.timestamp, 'UTC') AS timestamp,
                           ifNull(nullIf(nullIf(events.`$session_id`, ''), 'null'), '') AS session_id,
                           ifNull(nullIf(nullIf(events.`$window_id`, ''), 'null'), '') AS window_id,
                           NULL AS groupings,
                           multiMatchAnyIndex(path_item_ungrouped, NULL) AS group_index,
                           (if(ifNull(greater(group_index, 0), 0), groupings[group_index], path_item_ungrouped) AS path_item) AS path_item
                    FROM events
                    INNER JOIN
                      (SELECT argMax(person_distinct_id2.person_id, person_distinct_id2.version) AS person_id,
                              person_distinct_id2.distinct_id AS distinct_id
                       FROM person_distinct_id2
                       WHERE equals(person_distinct_id2.team_id, 2)
                       GROUP BY person_distinct_id2.distinct_id
                       HAVING ifNull(equals(argMax(person_distinct_id2.is_deleted, person_distinct_id2.version), 0), 0)) AS events__pdi ON equals(events.distinct_id, events__pdi.distinct_id)
                    WHERE and(equals(events.team_id, 2), and(greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2021-05-01 00:00:00', 6, 'UTC')))), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), assumeNotNull(parseDateTime64BestEffortOrNull('2021-05-07 23:59:59', 6, 'UTC')))), not(startsWith(events.event, '$')))
                    ORDER BY events__pdi.person_id ASC, toTimeZone(events.timestamp, 'UTC') ASC)
                 GROUP BY person_id) ARRAY
              JOIN session_paths AS path_time_tuple,
                   arrayEnumerate(session_paths) AS session_index) ARRAY
           JOIN limited_path_timings AS joined_path_tuple,
                arrayEnumerate(limited_path_timings) AS event_in_session_index))
     WHERE and(ifNull(equals(path_dropoff_key, '2_step two'), 0), ifNull(equals(path_dropoff_key, path_key), isNull(path_dropoff_key)
                                                                         and isNull(path_key)))
     GROUP BY person_id) AS source ON equals(persons.id, source.actor_id)
  ORDER BY persons.id ASC
  LIMIT 101
  OFFSET 0 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1
  '''
# ---
# name: TestClickhousePaths.test_person_dropoffs.1
  '''
  SELECT persons.id AS id
  FROM
    (SELECT person.id AS id
     FROM person
     WHERE equals(person.team_id, 2)
     GROUP BY person.id
     HAVING ifNull(equals(argMax(person.is_deleted, person.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS persons
  INNER JOIN
    (SELECT person_id AS actor_id,
            groupUniqArray(100)(tuple(timestamp, uuid, session_id, window_id)) AS matching_events,
            count(*) AS event_count
     FROM
       (SELECT person_id AS person_id,
               path AS path,
                       conversion_time AS conversion_time,
                       event_in_session_index AS event_in_session_index,
                       concat(ifNull(toString(event_in_session_index), ''), '_', ifNull(toString(path), '')) AS path_key,
                       if(ifNull(greater(event_in_session_index, 1), 0), concat(ifNull(toString(minus(event_in_session_index, 1)), ''), '_', ifNull(toString(prev_path), '')), NULL) AS last_path_key,
                       path_dropoff_key AS path_dropoff_key,
                       final_uuid AS uuid,
                       final_timestamp AS timestamp,
                       final_session_id AS session_id,
                       final_window_id AS window_id
        FROM
          (SELECT person_id AS person_id,
                  joined_path_tuple.1 AS path,
                  joined_path_tuple.2 AS conversion_time,
                  joined_path_tuple.3 AS prev_path,
                  event_in_session_index,
                  session_index AS session_index,
                  arrayPopFront(arrayPushBack(path_basic, '')) AS path_basic_0,
                  arrayMap((x, y) -> if(ifNull(equals(x, y), isNull(x)
                                               and isNull(y)), 0, 1), path_basic, path_basic_0) AS mapping,
                  arrayFilter((x, y) -> y, time, mapping) AS timings,
                  arrayFilter((x, y) -> y, path_basic, mapping) AS compact_path,
                  indexOf(compact_path, NULL) AS target_index,
                  joined_path_tuple.4 AS final_uuid,
                  joined_path_tuple.5 AS final_timestamp,
                  joined_path_tuple.6 AS final_session_id,
                  joined_path_tuple.7 AS final_window_id,
                  arrayFilter((x, y) -> y, uuid_items, mapping) AS uuid,
                  arrayFilter((x, y) -> y, timestamp_items, mapping) AS timestamp,
                  arrayFilter((x, y) -> y, session_id_items, mapping) AS session_id,
                  arrayFilter((x, y) -> y, window_id_items, mapping) AS window_id,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(compact_path, target_index), compact_path) AS filtered_path,
                  arraySlice(filtered_path, 1, 5) AS limited_path,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(timings, target_index), timings) AS filtered_timings,
                  arraySlice(filtered_timings, 1, 5) AS limited_timings,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(uuid, target_index), uuid) AS filtered_uuid,
                  arraySlice(filtered_uuid, 1, 5) AS limited_uuid,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(timestamp, target_index), timestamp) AS filtered_timestamp,
                  arraySlice(filtered_timestamp, 1, 5) AS limited_timestamp,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(session_id, target_index), session_id) AS filtered_session_id,
                  arraySlice(filtered_session_id, 1, 5) AS limited_session_id,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(window_id, target_index), window_id) AS filtered_window_id,
                  arraySlice(filtered_window_id, 1, 5) AS limited_window_id,
                  arrayDifference(limited_timings) AS timings_diff,
                  concat(ifNull(toString(length(limited_path)), ''), '_', ifNull(toString(limited_path[-1]), '')) AS path_dropoff_key,
                  arrayZip(limited_path, timings_diff, arrayPopBack(arrayPushFront(limited_path, '')), limited_uuid, limited_timestamp, limited_session_id, limited_window_id) AS limited_path_timings
           FROM
             (SELECT person_id AS person_id,
                     path_time_tuple.1 AS path_basic,
                     path_time_tuple.2 AS time,
                     session_index,
                     arrayZip(path_list, timing_list, arrayDifference(timing_list), uuid_list, timestamp_list, session_id_list, window_id_list) AS paths_tuple,
                     arraySplit(x -> if(ifNull(less(x.3, 1800), 0), 0, 1), paths_tuple) AS session_paths,
                     path_time_tuple.4 AS uuid_items,
                     path_time_tuple.5 AS timestamp_items,
                     path_time_tuple.6 AS session_id_items,
                     path_time_tuple.7 AS window_id_items
              FROM
                (SELECT person_id AS person_id,
                        groupArray(timestamp) AS timing_list,
                        groupArray(path_item) AS path_list,
                        groupArray(uuid) AS uuid_list,
                        groupArray(timestamp) AS timestamp_list,
                        groupArray(session_id) AS session_id_list,
                        groupArray(window_id) AS window_id_list
                 FROM
                   (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
                           events__pdi.person_id AS person_id,
                           ifNull(events.event, '') AS path_item_ungrouped,
                           events.uuid AS uuid,
                           toTimeZone(events.timestamp, 'UTC') AS timestamp,
                           ifNull(nullIf(nullIf(events.`$session_id`, ''), 'null'), '') AS session_id,
                           ifNull(nullIf(nullIf(events.`$window_id`, ''), 'null'), '') AS window_id,
                           NULL AS groupings,
                           multiMatchAnyIndex(path_item_ungrouped, NULL) AS group_index,
                           (if(ifNull(greater(group_index, 0), 0), groupings[group_index], path_item_ungrouped) AS path_item) AS path_item
                    FROM events
                    INNER JOIN
                      (SELECT argMax(person_distinct_id2.person_id, person_distinct_id2.version) AS person_id,
                              person_distinct_id2.distinct_id AS distinct_id
                       FROM person_distinct_id2
                       WHERE equals(person_distinct_id2.team_id, 2)
                       GROUP BY person_distinct_id2.distinct_id
                       HAVING ifNull(equals(argMax(person_distinct_id2.is_deleted, person_distinct_id2.version), 0), 0)) AS events__pdi ON equals(events.distinct_id, events__pdi.distinct_id)
                    WHERE and(equals(events.team_id, 2), and(greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2021-05-01 00:00:00', 6, 'UTC')))), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), assumeNotNull(parseDateTime64BestEffortOrNull('2021-05-07 23:59:59', 6, 'UTC')))), not(startsWith(events.event, '$')))
                    ORDER BY events__pdi.person_id ASC, toTimeZone(events.timestamp, 'UTC') ASC)
                 GROUP BY person_id) ARRAY
              JOIN session_paths AS path_time_tuple,
                   arrayEnumerate(session_paths) AS session_index) ARRAY
           JOIN limited_path_timings AS joined_path_tuple,
                arrayEnumerate(limited_path_timings) AS event_in_session_index))
     WHERE ifNull(equals(path_key, '2_step two'), 0)
     GROUP BY person_id) AS source ON equals(persons.id, source.actor_id)
  ORDER BY persons.id ASC
  LIMIT 101
  OFFSET 0 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1
  '''
# ---
# name: TestClickhousePaths.test_person_dropoffs.2
  '''
  SELECT persons.id AS id
  FROM
    (SELECT person.id AS id
     FROM person
     WHERE equals(person.team_id, 2)
     GROUP BY person.id
     HAVING ifNull(equals(argMax(person.is_deleted, person.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS persons
  INNER JOIN
    (SELECT person_id AS actor_id,
            groupUniqArray(100)(tuple(timestamp, uuid, session_id, window_id)) AS matching_events,
            count(*) AS event_count
     FROM
       (SELECT person_id AS person_id,
               path AS path,
                       conversion_time AS conversion_time,
                       event_in_session_index AS event_in_session_index,
                       concat(ifNull(toString(event_in_session_index), ''), '_', ifNull(toString(path), '')) AS path_key,
                       if(ifNull(greater(event_in_session_index, 1), 0), concat(ifNull(toString(minus(event_in_session_index, 1)), ''), '_', ifNull(toString(prev_path), '')), NULL) AS last_path_key,
                       path_dropoff_key AS path_dropoff_key,
                       final_uuid AS uuid,
                       final_timestamp AS timestamp,
                       final_session_id AS session_id,
                       final_window_id AS window_id
        FROM
          (SELECT person_id AS person_id,
                  joined_path_tuple.1 AS path,
                  joined_path_tuple.2 AS conversion_time,
                  joined_path_tuple.3 AS prev_path,
                  event_in_session_index,
                  session_index AS session_index,
                  arrayPopFront(arrayPushBack(path_basic, '')) AS path_basic_0,
                  arrayMap((x, y) -> if(ifNull(equals(x, y), isNull(x)
                                               and isNull(y)), 0, 1), path_basic, path_basic_0) AS mapping,
                  arrayFilter((x, y) -> y, time, mapping) AS timings,
                  arrayFilter((x, y) -> y, path_basic, mapping) AS compact_path,
                  indexOf(compact_path, NULL) AS target_index,
                  joined_path_tuple.4 AS final_uuid,
                  joined_path_tuple.5 AS final_timestamp,
                  joined_path_tuple.6 AS final_session_id,
                  joined_path_tuple.7 AS final_window_id,
                  arrayFilter((x, y) -> y, uuid_items, mapping) AS uuid,
                  arrayFilter((x, y) -> y, timestamp_items, mapping) AS timestamp,
                  arrayFilter((x, y) -> y, session_id_items, mapping) AS session_id,
                  arrayFilter((x, y) -> y, window_id_items, mapping) AS window_id,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(compact_path, target_index), compact_path) AS filtered_path,
                  arraySlice(filtered_path, 1, 5) AS limited_path,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(timings, target_index), timings) AS filtered_timings,
                  arraySlice(filtered_timings, 1, 5) AS limited_timings,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(uuid, target_index), uuid) AS filtered_uuid,
                  arraySlice(filtered_uuid, 1, 5) AS limited_uuid,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(timestamp, target_index), timestamp) AS filtered_timestamp,
                  arraySlice(filtered_timestamp, 1, 5) AS limited_timestamp,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(session_id, target_index), session_id) AS filtered_session_id,
                  arraySlice(filtered_session_id, 1, 5) AS limited_session_id,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(window_id, target_index), window_id) AS filtered_window_id,
                  arraySlice(filtered_window_id, 1, 5) AS limited_window_id,
                  arrayDifference(limited_timings) AS timings_diff,
                  concat(ifNull(toString(length(limited_path)), ''), '_', ifNull(toString(limited_path[-1]), '')) AS path_dropoff_key,
                  arrayZip(limited_path, timings_diff, arrayPopBack(arrayPushFront(limited_path, '')), limited_uuid, limited_timestamp, limited_session_id, limited_window_id) AS limited_path_timings
           FROM
             (SELECT person_id AS person_id,
                     path_time_tuple.1 AS path_basic,
                     path_time_tuple.2 AS time,
                     session_index,
                     arrayZip(path_list, timing_list, arrayDifference(timing_list), uuid_list, timestamp_list, session_id_list, window_id_list) AS paths_tuple,
                     arraySplit(x -> if(ifNull(less(x.3, 1800), 0), 0, 1), paths_tuple) AS session_paths,
                     path_time_tuple.4 AS uuid_items,
                     path_time_tuple.5 AS timestamp_items,
                     path_time_tuple.6 AS session_id_items,
                     path_time_tuple.7 AS window_id_items
              FROM
                (SELECT person_id AS person_id,
                        groupArray(timestamp) AS timing_list,
                        groupArray(path_item) AS path_list,
                        groupArray(uuid) AS uuid_list,
                        groupArray(timestamp) AS timestamp_list,
                        groupArray(session_id) AS session_id_list,
                        groupArray(window_id) AS window_id_list
                 FROM
                   (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
                           events__pdi.person_id AS person_id,
                           ifNull(events.event, '') AS path_item_ungrouped,
                           events.uuid AS uuid,
                           toTimeZone(events.timestamp, 'UTC') AS timestamp,
                           ifNull(nullIf(nullIf(events.`$session_id`, ''), 'null'), '') AS session_id,
                           ifNull(nullIf(nullIf(events.`$window_id`, ''), 'null'), '') AS window_id,
                           NULL AS groupings,
                           multiMatchAnyIndex(path_item_ungrouped, NULL) AS group_index,
                           (if(ifNull(greater(group_index, 0), 0), groupings[group_index], path_item_ungrouped) AS path_item) AS path_item
                    FROM events
                    INNER JOIN
                      (SELECT argMax(person_distinct_id2.person_id, person_distinct_id2.version) AS person_id,
                              person_distinct_id2.distinct_id AS distinct_id
                       FROM person_distinct_id2
                       WHERE equals(person_distinct_id2.team_id, 2)
                       GROUP BY person_distinct_id2.distinct_id
                       HAVING ifNull(equals(argMax(person_distinct_id2.is_deleted, person_distinct_id2.version), 0), 0)) AS events__pdi ON equals(events.distinct_id, events__pdi.distinct_id)
                    WHERE and(equals(events.team_id, 2), and(greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2021-05-01 00:00:00', 6, 'UTC')))), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), assumeNotNull(parseDateTime64BestEffortOrNull('2021-05-07 23:59:59', 6, 'UTC')))), not(startsWith(events.event, '$')))
                    ORDER BY events__pdi.person_id ASC, toTimeZone(events.timestamp, 'UTC') ASC)
                 GROUP BY person_id) ARRAY
              JOIN session_paths AS path_time_tuple,
                   arrayEnumerate(session_paths) AS session_index) ARRAY
           JOIN limited_path_timings AS joined_path_tuple,
                arrayEnumerate(limited_path_timings) AS event_in_session_index))
     WHERE and(ifNull(equals(last_path_key, '2_step two'), 0), 1)
     GROUP BY person_id) AS source ON equals(persons.id, source.actor_id)
  ORDER BY persons.id ASC
  LIMIT 101
  OFFSET 0 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1
  '''
# ---
# name: TestClickhousePaths.test_person_dropoffs.3
  '''
  SELECT persons.id AS id
  FROM
    (SELECT person.id AS id
     FROM person
     WHERE equals(person.team_id, 2)
     GROUP BY person.id
     HAVING ifNull(equals(argMax(person.is_deleted, person.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS persons
  INNER JOIN
    (SELECT person_id AS actor_id,
            groupUniqArray(100)(tuple(timestamp, uuid, session_id, window_id)) AS matching_events,
            count(*) AS event_count
     FROM
       (SELECT person_id AS person_id,
               path AS path,
                       conversion_time AS conversion_time,
                       event_in_session_index AS event_in_session_index,
                       concat(ifNull(toString(event_in_session_index), ''), '_', ifNull(toString(path), '')) AS path_key,
                       if(ifNull(greater(event_in_session_index, 1), 0), concat(ifNull(toString(minus(event_in_session_index, 1)), ''), '_', ifNull(toString(prev_path), '')), NULL) AS last_path_key,
                       path_dropoff_key AS path_dropoff_key,
                       final_uuid AS uuid,
                       final_timestamp AS timestamp,
                       final_session_id AS session_id,
                       final_window_id AS window_id
        FROM
          (SELECT person_id AS person_id,
                  joined_path_tuple.1 AS path,
                  joined_path_tuple.2 AS conversion_time,
                  joined_path_tuple.3 AS prev_path,
                  event_in_session_index,
                  session_index AS session_index,
                  arrayPopFront(arrayPushBack(path_basic, '')) AS path_basic_0,
                  arrayMap((x, y) -> if(ifNull(equals(x, y), isNull(x)
                                               and isNull(y)), 0, 1), path_basic, path_basic_0) AS mapping,
                  arrayFilter((x, y) -> y, time, mapping) AS timings,
                  arrayFilter((x, y) -> y, path_basic, mapping) AS compact_path,
                  indexOf(compact_path, NULL) AS target_index,
                  joined_path_tuple.4 AS final_uuid,
                  joined_path_tuple.5 AS final_timestamp,
                  joined_path_tuple.6 AS final_session_id,
                  joined_path_tuple.7 AS final_window_id,
                  arrayFilter((x, y) -> y, uuid_items, mapping) AS uuid,
                  arrayFilter((x, y) -> y, timestamp_items, mapping) AS timestamp,
                  arrayFilter((x, y) -> y, session_id_items, mapping) AS session_id,
                  arrayFilter((x, y) -> y, window_id_items, mapping) AS window_id,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(compact_path, target_index), compact_path) AS filtered_path,
                  arraySlice(filtered_path, 1, 5) AS limited_path,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(timings, target_index), timings) AS filtered_timings,
                  arraySlice(filtered_timings, 1, 5) AS limited_timings,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(uuid, target_index), uuid) AS filtered_uuid,
                  arraySlice(filtered_uuid, 1, 5) AS limited_uuid,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(timestamp, target_index), timestamp) AS filtered_timestamp,
                  arraySlice(filtered_timestamp, 1, 5) AS limited_timestamp,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(session_id, target_index), session_id) AS filtered_session_id,
                  arraySlice(filtered_session_id, 1, 5) AS limited_session_id,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(window_id, target_index), window_id) AS filtered_window_id,
                  arraySlice(filtered_window_id, 1, 5) AS limited_window_id,
                  arrayDifference(limited_timings) AS timings_diff,
                  concat(ifNull(toString(length(limited_path)), ''), '_', ifNull(toString(limited_path[-1]), '')) AS path_dropoff_key,
                  arrayZip(limited_path, timings_diff, arrayPopBack(arrayPushFront(limited_path, '')), limited_uuid, limited_timestamp, limited_session_id, limited_window_id) AS limited_path_timings
           FROM
             (SELECT person_id AS person_id,
                     path_time_tuple.1 AS path_basic,
                     path_time_tuple.2 AS time,
                     session_index,
                     arrayZip(path_list, timing_list, arrayDifference(timing_list), uuid_list, timestamp_list, session_id_list, window_id_list) AS paths_tuple,
                     arraySplit(x -> if(ifNull(less(x.3, 1800), 0), 0, 1), paths_tuple) AS session_paths,
                     path_time_tuple.4 AS uuid_items,
                     path_time_tuple.5 AS timestamp_items,
                     path_time_tuple.6 AS session_id_items,
                     path_time_tuple.7 AS window_id_items
              FROM
                (SELECT person_id AS person_id,
                        groupArray(timestamp) AS timing_list,
                        groupArray(path_item) AS path_list,
                        groupArray(uuid) AS uuid_list,
                        groupArray(timestamp) AS timestamp_list,
                        groupArray(session_id) AS session_id_list,
                        groupArray(window_id) AS window_id_list
                 FROM
                   (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
                           events__pdi.person_id AS person_id,
                           ifNull(events.event, '') AS path_item_ungrouped,
                           events.uuid AS uuid,
                           toTimeZone(events.timestamp, 'UTC') AS timestamp,
                           ifNull(nullIf(nullIf(events.`$session_id`, ''), 'null'), '') AS session_id,
                           ifNull(nullIf(nullIf(events.`$window_id`, ''), 'null'), '') AS window_id,
                           NULL AS groupings,
                           multiMatchAnyIndex(path_item_ungrouped, NULL) AS group_index,
                           (if(ifNull(greater(group_index, 0), 0), groupings[group_index], path_item_ungrouped) AS path_item) AS path_item
                    FROM events
                    INNER JOIN
                      (SELECT argMax(person_distinct_id2.person_id, person_distinct_id2.version) AS person_id,
                              person_distinct_id2.distinct_id AS distinct_id
                       FROM person_distinct_id2
                       WHERE equals(person_distinct_id2.team_id, 2)
                       GROUP BY person_distinct_id2.distinct_id
                       HAVING ifNull(equals(argMax(person_distinct_id2.is_deleted, person_distinct_id2.version), 0), 0)) AS events__pdi ON equals(events.distinct_id, events__pdi.distinct_id)
                    WHERE and(equals(events.team_id, 2), and(greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2021-05-01 00:00:00', 6, 'UTC')))), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), assumeNotNull(parseDateTime64BestEffortOrNull('2021-05-07 23:59:59', 6, 'UTC')))), not(startsWith(events.event, '$')))
                    ORDER BY events__pdi.person_id ASC, toTimeZone(events.timestamp, 'UTC') ASC)
                 GROUP BY person_id) ARRAY
              JOIN session_paths AS path_time_tuple,
                   arrayEnumerate(session_paths) AS session_index) ARRAY
           JOIN limited_path_timings AS joined_path_tuple,
                arrayEnumerate(limited_path_timings) AS event_in_session_index))
     WHERE and(ifNull(equals(path_dropoff_key, '3_step three'), 0), ifNull(equals(path_dropoff_key, path_key), isNull(path_dropoff_key)
                                                                           and isNull(path_key)))
     GROUP BY person_id) AS source ON equals(persons.id, source.actor_id)
  ORDER BY persons.id ASC
  LIMIT 101
  OFFSET 0 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1
  '''
# ---
# name: TestClickhousePaths.test_person_dropoffs.4
  '''
  SELECT persons.id AS id
  FROM
    (SELECT person.id AS id
     FROM person
     WHERE equals(person.team_id, 2)
     GROUP BY person.id
     HAVING ifNull(equals(argMax(person.is_deleted, person.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS persons
  INNER JOIN
    (SELECT person_id AS actor_id,
            groupUniqArray(100)(tuple(timestamp, uuid, session_id, window_id)) AS matching_events,
            count(*) AS event_count
     FROM
       (SELECT person_id AS person_id,
               path AS path,
                       conversion_time AS conversion_time,
                       event_in_session_index AS event_in_session_index,
                       concat(ifNull(toString(event_in_session_index), ''), '_', ifNull(toString(path), '')) AS path_key,
                       if(ifNull(greater(event_in_session_index, 1), 0), concat(ifNull(toString(minus(event_in_session_index, 1)), ''), '_', ifNull(toString(prev_path), '')), NULL) AS last_path_key,
                       path_dropoff_key AS path_dropoff_key,
                       final_uuid AS uuid,
                       final_timestamp AS timestamp,
                       final_session_id AS session_id,
                       final_window_id AS window_id
        FROM
          (SELECT person_id AS person_id,
                  joined_path_tuple.1 AS path,
                  joined_path_tuple.2 AS conversion_time,
                  joined_path_tuple.3 AS prev_path,
                  event_in_session_index,
                  session_index AS session_index,
                  arrayPopFront(arrayPushBack(path_basic, '')) AS path_basic_0,
                  arrayMap((x, y) -> if(ifNull(equals(x, y), isNull(x)
                                               and isNull(y)), 0, 1), path_basic, path_basic_0) AS mapping,
                  arrayFilter((x, y) -> y, time, mapping) AS timings,
                  arrayFilter((x, y) -> y, path_basic, mapping) AS compact_path,
                  indexOf(compact_path, NULL) AS target_index,
                  joined_path_tuple.4 AS final_uuid,
                  joined_path_tuple.5 AS final_timestamp,
                  joined_path_tuple.6 AS final_session_id,
                  joined_path_tuple.7 AS final_window_id,
                  arrayFilter((x, y) -> y, uuid_items, mapping) AS uuid,
                  arrayFilter((x, y) -> y, timestamp_items, mapping) AS timestamp,
                  arrayFilter((x, y) -> y, session_id_items, mapping) AS session_id,
                  arrayFilter((x, y) -> y, window_id_items, mapping) AS window_id,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(compact_path, target_index), compact_path) AS filtered_path,
                  arraySlice(filtered_path, 1, 5) AS limited_path,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(timings, target_index), timings) AS filtered_timings,
                  arraySlice(filtered_timings, 1, 5) AS limited_timings,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(uuid, target_index), uuid) AS filtered_uuid,
                  arraySlice(filtered_uuid, 1, 5) AS limited_uuid,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(timestamp, target_index), timestamp) AS filtered_timestamp,
                  arraySlice(filtered_timestamp, 1, 5) AS limited_timestamp,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(session_id, target_index), session_id) AS filtered_session_id,
                  arraySlice(filtered_session_id, 1, 5) AS limited_session_id,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(window_id, target_index), window_id) AS filtered_window_id,
                  arraySlice(filtered_window_id, 1, 5) AS limited_window_id,
                  arrayDifference(limited_timings) AS timings_diff,
                  concat(ifNull(toString(length(limited_path)), ''), '_', ifNull(toString(limited_path[-1]), '')) AS path_dropoff_key,
                  arrayZip(limited_path, timings_diff, arrayPopBack(arrayPushFront(limited_path, '')), limited_uuid, limited_timestamp, limited_session_id, limited_window_id) AS limited_path_timings
           FROM
             (SELECT person_id AS person_id,
                     path_time_tuple.1 AS path_basic,
                     path_time_tuple.2 AS time,
                     session_index,
                     arrayZip(path_list, timing_list, arrayDifference(timing_list), uuid_list, timestamp_list, session_id_list, window_id_list) AS paths_tuple,
                     arraySplit(x -> if(ifNull(less(x.3, 1800), 0), 0, 1), paths_tuple) AS session_paths,
                     path_time_tuple.4 AS uuid_items,
                     path_time_tuple.5 AS timestamp_items,
                     path_time_tuple.6 AS session_id_items,
                     path_time_tuple.7 AS window_id_items
              FROM
                (SELECT person_id AS person_id,
                        groupArray(timestamp) AS timing_list,
                        groupArray(path_item) AS path_list,
                        groupArray(uuid) AS uuid_list,
                        groupArray(timestamp) AS timestamp_list,
                        groupArray(session_id) AS session_id_list,
                        groupArray(window_id) AS window_id_list
                 FROM
                   (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
                           events__pdi.person_id AS person_id,
                           ifNull(events.event, '') AS path_item_ungrouped,
                           events.uuid AS uuid,
                           toTimeZone(events.timestamp, 'UTC') AS timestamp,
                           ifNull(nullIf(nullIf(events.`$session_id`, ''), 'null'), '') AS session_id,
                           ifNull(nullIf(nullIf(events.`$window_id`, ''), 'null'), '') AS window_id,
                           NULL AS groupings,
                           multiMatchAnyIndex(path_item_ungrouped, NULL) AS group_index,
                           (if(ifNull(greater(group_index, 0), 0), groupings[group_index], path_item_ungrouped) AS path_item) AS path_item
                    FROM events
                    INNER JOIN
                      (SELECT argMax(person_distinct_id2.person_id, person_distinct_id2.version) AS person_id,
                              person_distinct_id2.distinct_id AS distinct_id
                       FROM person_distinct_id2
                       WHERE equals(person_distinct_id2.team_id, 2)
                       GROUP BY person_distinct_id2.distinct_id
                       HAVING ifNull(equals(argMax(person_distinct_id2.is_deleted, person_distinct_id2.version), 0), 0)) AS events__pdi ON equals(events.distinct_id, events__pdi.distinct_id)
                    WHERE and(equals(events.team_id, 2), and(greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2021-05-01 00:00:00', 6, 'UTC')))), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), assumeNotNull(parseDateTime64BestEffortOrNull('2021-05-07 23:59:59', 6, 'UTC')))), not(startsWith(events.event, '$')))
                    ORDER BY events__pdi.person_id ASC, toTimeZone(events.timestamp, 'UTC') ASC)
                 GROUP BY person_id) ARRAY
              JOIN session_paths AS path_time_tuple,
                   arrayEnumerate(session_paths) AS session_index) ARRAY
           JOIN limited_path_timings AS joined_path_tuple,
                arrayEnumerate(limited_path_timings) AS event_in_session_index))
     WHERE ifNull(equals(path_key, '3_step three'), 0)
     GROUP BY person_id) AS source ON equals(persons.id, source.actor_id)
  ORDER BY persons.id ASC
  LIMIT 101
  OFFSET 0 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1
  '''
# ---
# name: TestClickhousePaths.test_person_dropoffs.5
  '''
  SELECT persons.id AS id
  FROM
    (SELECT person.id AS id
     FROM person
     WHERE equals(person.team_id, 2)
     GROUP BY person.id
     HAVING ifNull(equals(argMax(person.is_deleted, person.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS persons
  INNER JOIN
    (SELECT person_id AS actor_id,
            groupUniqArray(100)(tuple(timestamp, uuid, session_id, window_id)) AS matching_events,
            count(*) AS event_count
     FROM
       (SELECT person_id AS person_id,
               path AS path,
                       conversion_time AS conversion_time,
                       event_in_session_index AS event_in_session_index,
                       concat(ifNull(toString(event_in_session_index), ''), '_', ifNull(toString(path), '')) AS path_key,
                       if(ifNull(greater(event_in_session_index, 1), 0), concat(ifNull(toString(minus(event_in_session_index, 1)), ''), '_', ifNull(toString(prev_path), '')), NULL) AS last_path_key,
                       path_dropoff_key AS path_dropoff_key,
                       final_uuid AS uuid,
                       final_timestamp AS timestamp,
                       final_session_id AS session_id,
                       final_window_id AS window_id
        FROM
          (SELECT person_id AS person_id,
                  joined_path_tuple.1 AS path,
                  joined_path_tuple.2 AS conversion_time,
                  joined_path_tuple.3 AS prev_path,
                  event_in_session_index,
                  session_index AS session_index,
                  arrayPopFront(arrayPushBack(path_basic, '')) AS path_basic_0,
                  arrayMap((x, y) -> if(ifNull(equals(x, y), isNull(x)
                                               and isNull(y)), 0, 1), path_basic, path_basic_0) AS mapping,
                  arrayFilter((x, y) -> y, time, mapping) AS timings,
                  arrayFilter((x, y) -> y, path_basic, mapping) AS compact_path,
                  indexOf(compact_path, NULL) AS target_index,
                  joined_path_tuple.4 AS final_uuid,
                  joined_path_tuple.5 AS final_timestamp,
                  joined_path_tuple.6 AS final_session_id,
                  joined_path_tuple.7 AS final_window_id,
                  arrayFilter((x, y) -> y, uuid_items, mapping) AS uuid,
                  arrayFilter((x, y) -> y, timestamp_items, mapping) AS timestamp,
                  arrayFilter((x, y) -> y, session_id_items, mapping) AS session_id,
                  arrayFilter((x, y) -> y, window_id_items, mapping) AS window_id,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(compact_path, target_index), compact_path) AS filtered_path,
                  arraySlice(filtered_path, 1, 5) AS limited_path,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(timings, target_index), timings) AS filtered_timings,
                  arraySlice(filtered_timings, 1, 5) AS limited_timings,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(uuid, target_index), uuid) AS filtered_uuid,
                  arraySlice(filtered_uuid, 1, 5) AS limited_uuid,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(timestamp, target_index), timestamp) AS filtered_timestamp,
                  arraySlice(filtered_timestamp, 1, 5) AS limited_timestamp,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(session_id, target_index), session_id) AS filtered_session_id,
                  arraySlice(filtered_session_id, 1, 5) AS limited_session_id,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(window_id, target_index), window_id) AS filtered_window_id,
                  arraySlice(filtered_window_id, 1, 5) AS limited_window_id,
                  arrayDifference(limited_timings) AS timings_diff,
                  concat(ifNull(toString(length(limited_path)), ''), '_', ifNull(toString(limited_path[-1]), '')) AS path_dropoff_key,
                  arrayZip(limited_path, timings_diff, arrayPopBack(arrayPushFront(limited_path, '')), limited_uuid, limited_timestamp, limited_session_id, limited_window_id) AS limited_path_timings
           FROM
             (SELECT person_id AS person_id,
                     path_time_tuple.1 AS path_basic,
                     path_time_tuple.2 AS time,
                     session_index,
                     arrayZip(path_list, timing_list, arrayDifference(timing_list), uuid_list, timestamp_list, session_id_list, window_id_list) AS paths_tuple,
                     arraySplit(x -> if(ifNull(less(x.3, 1800), 0), 0, 1), paths_tuple) AS session_paths,
                     path_time_tuple.4 AS uuid_items,
                     path_time_tuple.5 AS timestamp_items,
                     path_time_tuple.6 AS session_id_items,
                     path_time_tuple.7 AS window_id_items
              FROM
                (SELECT person_id AS person_id,
                        groupArray(timestamp) AS timing_list,
                        groupArray(path_item) AS path_list,
                        groupArray(uuid) AS uuid_list,
                        groupArray(timestamp) AS timestamp_list,
                        groupArray(session_id) AS session_id_list,
                        groupArray(window_id) AS window_id_list
                 FROM
                   (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
                           events__pdi.person_id AS person_id,
                           ifNull(events.event, '') AS path_item_ungrouped,
                           events.uuid AS uuid,
                           toTimeZone(events.timestamp, 'UTC') AS timestamp,
                           ifNull(nullIf(nullIf(events.`$session_id`, ''), 'null'), '') AS session_id,
                           ifNull(nullIf(nullIf(events.`$window_id`, ''), 'null'), '') AS window_id,
                           NULL AS groupings,
                           multiMatchAnyIndex(path_item_ungrouped, NULL) AS group_index,
                           (if(ifNull(greater(group_index, 0), 0), groupings[group_index], path_item_ungrouped) AS path_item) AS path_item
                    FROM events
                    INNER JOIN
                      (SELECT argMax(person_distinct_id2.person_id, person_distinct_id2.version) AS person_id,
                              person_distinct_id2.distinct_id AS distinct_id
                       FROM person_distinct_id2
                       WHERE equals(person_distinct_id2.team_id, 2)
                       GROUP BY person_distinct_id2.distinct_id
                       HAVING ifNull(equals(argMax(person_distinct_id2.is_deleted, person_distinct_id2.version), 0), 0)) AS events__pdi ON equals(events.distinct_id, events__pdi.distinct_id)
                    WHERE and(equals(events.team_id, 2), and(greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2021-05-01 00:00:00', 6, 'UTC')))), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), assumeNotNull(parseDateTime64BestEffortOrNull('2021-05-07 23:59:59', 6, 'UTC')))), not(startsWith(events.event, '$')))
                    ORDER BY events__pdi.person_id ASC, toTimeZone(events.timestamp, 'UTC') ASC)
                 GROUP BY person_id) ARRAY
              JOIN session_paths AS path_time_tuple,
                   arrayEnumerate(session_paths) AS session_index) ARRAY
           JOIN limited_path_timings AS joined_path_tuple,
                arrayEnumerate(limited_path_timings) AS event_in_session_index))
     WHERE and(ifNull(equals(last_path_key, '3_step three'), 0), 1)
     GROUP BY person_id) AS source ON equals(persons.id, source.actor_id)
  ORDER BY persons.id ASC
  LIMIT 101
  OFFSET 0 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1
  '''
# ---
# name: TestClickhousePaths.test_person_dropoffs.6
  '''
  SELECT persons.id AS id
  FROM
    (SELECT person.id AS id
     FROM person
     WHERE equals(person.team_id, 2)
     GROUP BY person.id
     HAVING ifNull(equals(argMax(person.is_deleted, person.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS persons
  INNER JOIN
    (SELECT person_id AS actor_id,
            groupUniqArray(100)(tuple(timestamp, uuid, session_id, window_id)) AS matching_events,
            count(*) AS event_count
     FROM
       (SELECT person_id AS person_id,
               path AS path,
                       conversion_time AS conversion_time,
                       event_in_session_index AS event_in_session_index,
                       concat(ifNull(toString(event_in_session_index), ''), '_', ifNull(toString(path), '')) AS path_key,
                       if(ifNull(greater(event_in_session_index, 1), 0), concat(ifNull(toString(minus(event_in_session_index, 1)), ''), '_', ifNull(toString(prev_path), '')), NULL) AS last_path_key,
                       path_dropoff_key AS path_dropoff_key,
                       final_uuid AS uuid,
                       final_timestamp AS timestamp,
                       final_session_id AS session_id,
                       final_window_id AS window_id
        FROM
          (SELECT person_id AS person_id,
                  joined_path_tuple.1 AS path,
                  joined_path_tuple.2 AS conversion_time,
                  joined_path_tuple.3 AS prev_path,
                  event_in_session_index,
                  session_index AS session_index,
                  arrayPopFront(arrayPushBack(path_basic, '')) AS path_basic_0,
                  arrayMap((x, y) -> if(ifNull(equals(x, y), isNull(x)
                                               and isNull(y)), 0, 1), path_basic, path_basic_0) AS mapping,
                  arrayFilter((x, y) -> y, time, mapping) AS timings,
                  arrayFilter((x, y) -> y, path_basic, mapping) AS compact_path,
                  indexOf(compact_path, NULL) AS target_index,
                  joined_path_tuple.4 AS final_uuid,
                  joined_path_tuple.5 AS final_timestamp,
                  joined_path_tuple.6 AS final_session_id,
                  joined_path_tuple.7 AS final_window_id,
                  arrayFilter((x, y) -> y, uuid_items, mapping) AS uuid,
                  arrayFilter((x, y) -> y, timestamp_items, mapping) AS timestamp,
                  arrayFilter((x, y) -> y, session_id_items, mapping) AS session_id,
                  arrayFilter((x, y) -> y, window_id_items, mapping) AS window_id,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(compact_path, target_index), compact_path) AS filtered_path,
                  arraySlice(filtered_path, 1, 5) AS limited_path,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(timings, target_index), timings) AS filtered_timings,
                  arraySlice(filtered_timings, 1, 5) AS limited_timings,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(uuid, target_index), uuid) AS filtered_uuid,
                  arraySlice(filtered_uuid, 1, 5) AS limited_uuid,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(timestamp, target_index), timestamp) AS filtered_timestamp,
                  arraySlice(filtered_timestamp, 1, 5) AS limited_timestamp,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(session_id, target_index), session_id) AS filtered_session_id,
                  arraySlice(filtered_session_id, 1, 5) AS limited_session_id,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(window_id, target_index), window_id) AS filtered_window_id,
                  arraySlice(filtered_window_id, 1, 5) AS limited_window_id,
                  arrayDifference(limited_timings) AS timings_diff,
                  concat(ifNull(toString(length(limited_path)), ''), '_', ifNull(toString(limited_path[-1]), '')) AS path_dropoff_key,
                  arrayZip(limited_path, timings_diff, arrayPopBack(arrayPushFront(limited_path, '')), limited_uuid, limited_timestamp, limited_session_id, limited_window_id) AS limited_path_timings
           FROM
             (SELECT person_id AS person_id,
                     path_time_tuple.1 AS path_basic,
                     path_time_tuple.2 AS time,
                     session_index,
                     arrayZip(path_list, timing_list, arrayDifference(timing_list), uuid_list, timestamp_list, session_id_list, window_id_list) AS paths_tuple,
                     arraySplit(x -> if(ifNull(less(x.3, 1800), 0), 0, 1), paths_tuple) AS session_paths,
                     path_time_tuple.4 AS uuid_items,
                     path_time_tuple.5 AS timestamp_items,
                     path_time_tuple.6 AS session_id_items,
                     path_time_tuple.7 AS window_id_items
              FROM
                (SELECT person_id AS person_id,
                        groupArray(timestamp) AS timing_list,
                        groupArray(path_item) AS path_list,
                        groupArray(uuid) AS uuid_list,
                        groupArray(timestamp) AS timestamp_list,
                        groupArray(session_id) AS session_id_list,
                        groupArray(window_id) AS window_id_list
                 FROM
                   (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
                           events__pdi.person_id AS person_id,
                           ifNull(events.event, '') AS path_item_ungrouped,
                           events.uuid AS uuid,
                           toTimeZone(events.timestamp, 'UTC') AS timestamp,
                           ifNull(nullIf(nullIf(events.`$session_id`, ''), 'null'), '') AS session_id,
                           ifNull(nullIf(nullIf(events.`$window_id`, ''), 'null'), '') AS window_id,
                           NULL AS groupings,
                           multiMatchAnyIndex(path_item_ungrouped, NULL) AS group_index,
                           (if(ifNull(greater(group_index, 0), 0), groupings[group_index], path_item_ungrouped) AS path_item) AS path_item
                    FROM events
                    INNER JOIN
                      (SELECT argMax(person_distinct_id2.person_id, person_distinct_id2.version) AS person_id,
                              person_distinct_id2.distinct_id AS distinct_id
                       FROM person_distinct_id2
                       WHERE equals(person_distinct_id2.team_id, 2)
                       GROUP BY person_distinct_id2.distinct_id
                       HAVING ifNull(equals(argMax(person_distinct_id2.is_deleted, person_distinct_id2.version), 0), 0)) AS events__pdi ON equals(events.distinct_id, events__pdi.distinct_id)
                    WHERE and(equals(events.team_id, 2), and(greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2021-05-01 00:00:00', 6, 'UTC')))), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), assumeNotNull(parseDateTime64BestEffortOrNull('2021-05-07 23:59:59', 6, 'UTC')))), not(startsWith(events.event, '$')))
                    ORDER BY events__pdi.person_id ASC, toTimeZone(events.timestamp, 'UTC') ASC)
                 GROUP BY person_id) ARRAY
              JOIN session_paths AS path_time_tuple,
                   arrayEnumerate(session_paths) AS session_index) ARRAY
           JOIN limited_path_timings AS joined_path_tuple,
                arrayEnumerate(limited_path_timings) AS event_in_session_index))
     WHERE and(ifNull(equals(path_dropoff_key, '4_step four'), 0), ifNull(equals(path_dropoff_key, path_key), isNull(path_dropoff_key)
                                                                          and isNull(path_key)))
     GROUP BY person_id) AS source ON equals(persons.id, source.actor_id)
  ORDER BY persons.id ASC
  LIMIT 101
  OFFSET 0 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1
  '''
# ---
# name: TestClickhousePaths.test_person_dropoffs.7
  '''
  SELECT persons.id AS id
  FROM
    (SELECT person.id AS id
     FROM person
     WHERE equals(person.team_id, 2)
     GROUP BY person.id
     HAVING ifNull(equals(argMax(person.is_deleted, person.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS persons
  INNER JOIN
    (SELECT person_id AS actor_id,
            groupUniqArray(100)(tuple(timestamp, uuid, session_id, window_id)) AS matching_events,
            count(*) AS event_count
     FROM
       (SELECT person_id AS person_id,
               path AS path,
                       conversion_time AS conversion_time,
                       event_in_session_index AS event_in_session_index,
                       concat(ifNull(toString(event_in_session_index), ''), '_', ifNull(toString(path), '')) AS path_key,
                       if(ifNull(greater(event_in_session_index, 1), 0), concat(ifNull(toString(minus(event_in_session_index, 1)), ''), '_', ifNull(toString(prev_path), '')), NULL) AS last_path_key,
                       path_dropoff_key AS path_dropoff_key,
                       final_uuid AS uuid,
                       final_timestamp AS timestamp,
                       final_session_id AS session_id,
                       final_window_id AS window_id
        FROM
          (SELECT person_id AS person_id,
                  joined_path_tuple.1 AS path,
                  joined_path_tuple.2 AS conversion_time,
                  joined_path_tuple.3 AS prev_path,
                  event_in_session_index,
                  session_index AS session_index,
                  arrayPopFront(arrayPushBack(path_basic, '')) AS path_basic_0,
                  arrayMap((x, y) -> if(ifNull(equals(x, y), isNull(x)
                                               and isNull(y)), 0, 1), path_basic, path_basic_0) AS mapping,
                  arrayFilter((x, y) -> y, time, mapping) AS timings,
                  arrayFilter((x, y) -> y, path_basic, mapping) AS compact_path,
                  indexOf(compact_path, NULL) AS target_index,
                  joined_path_tuple.4 AS final_uuid,
                  joined_path_tuple.5 AS final_timestamp,
                  joined_path_tuple.6 AS final_session_id,
                  joined_path_tuple.7 AS final_window_id,
                  arrayFilter((x, y) -> y, uuid_items, mapping) AS uuid,
                  arrayFilter((x, y) -> y, timestamp_items, mapping) AS timestamp,
                  arrayFilter((x, y) -> y, session_id_items, mapping) AS session_id,
                  arrayFilter((x, y) -> y, window_id_items, mapping) AS window_id,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(compact_path, target_index), compact_path) AS filtered_path,
                  arraySlice(filtered_path, 1, 5) AS limited_path,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(timings, target_index), timings) AS filtered_timings,
                  arraySlice(filtered_timings, 1, 5) AS limited_timings,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(uuid, target_index), uuid) AS filtered_uuid,
                  arraySlice(filtered_uuid, 1, 5) AS limited_uuid,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(timestamp, target_index), timestamp) AS filtered_timestamp,
                  arraySlice(filtered_timestamp, 1, 5) AS limited_timestamp,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(session_id, target_index), session_id) AS filtered_session_id,
                  arraySlice(filtered_session_id, 1, 5) AS limited_session_id,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(window_id, target_index), window_id) AS filtered_window_id,
                  arraySlice(filtered_window_id, 1, 5) AS limited_window_id,
                  arrayDifference(limited_timings) AS timings_diff,
                  concat(ifNull(toString(length(limited_path)), ''), '_', ifNull(toString(limited_path[-1]), '')) AS path_dropoff_key,
                  arrayZip(limited_path, timings_diff, arrayPopBack(arrayPushFront(limited_path, '')), limited_uuid, limited_timestamp, limited_session_id, limited_window_id) AS limited_path_timings
           FROM
             (SELECT person_id AS person_id,
                     path_time_tuple.1 AS path_basic,
                     path_time_tuple.2 AS time,
                     session_index,
                     arrayZip(path_list, timing_list, arrayDifference(timing_list), uuid_list, timestamp_list, session_id_list, window_id_list) AS paths_tuple,
                     arraySplit(x -> if(ifNull(less(x.3, 1800), 0), 0, 1), paths_tuple) AS session_paths,
                     path_time_tuple.4 AS uuid_items,
                     path_time_tuple.5 AS timestamp_items,
                     path_time_tuple.6 AS session_id_items,
                     path_time_tuple.7 AS window_id_items
              FROM
                (SELECT person_id AS person_id,
                        groupArray(timestamp) AS timing_list,
                        groupArray(path_item) AS path_list,
                        groupArray(uuid) AS uuid_list,
                        groupArray(timestamp) AS timestamp_list,
                        groupArray(session_id) AS session_id_list,
                        groupArray(window_id) AS window_id_list
                 FROM
                   (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
                           events__pdi.person_id AS person_id,
                           ifNull(events.event, '') AS path_item_ungrouped,
                           events.uuid AS uuid,
                           toTimeZone(events.timestamp, 'UTC') AS timestamp,
                           ifNull(nullIf(nullIf(events.`$session_id`, ''), 'null'), '') AS session_id,
                           ifNull(nullIf(nullIf(events.`$window_id`, ''), 'null'), '') AS window_id,
                           NULL AS groupings,
                           multiMatchAnyIndex(path_item_ungrouped, NULL) AS group_index,
                           (if(ifNull(greater(group_index, 0), 0), groupings[group_index], path_item_ungrouped) AS path_item) AS path_item
                    FROM events
                    INNER JOIN
                      (SELECT argMax(person_distinct_id2.person_id, person_distinct_id2.version) AS person_id,
                              person_distinct_id2.distinct_id AS distinct_id
                       FROM person_distinct_id2
                       WHERE equals(person_distinct_id2.team_id, 2)
                       GROUP BY person_distinct_id2.distinct_id
                       HAVING ifNull(equals(argMax(person_distinct_id2.is_deleted, person_distinct_id2.version), 0), 0)) AS events__pdi ON equals(events.distinct_id, events__pdi.distinct_id)
                    WHERE and(equals(events.team_id, 2), and(greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2021-05-01 00:00:00', 6, 'UTC')))), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), assumeNotNull(parseDateTime64BestEffortOrNull('2021-05-07 23:59:59', 6, 'UTC')))), not(startsWith(events.event, '$')))
                    ORDER BY events__pdi.person_id ASC, toTimeZone(events.timestamp, 'UTC') ASC)
                 GROUP BY person_id) ARRAY
              JOIN session_paths AS path_time_tuple,
                   arrayEnumerate(session_paths) AS session_index) ARRAY
           JOIN limited_path_timings AS joined_path_tuple,
                arrayEnumerate(limited_path_timings) AS event_in_session_index))
     WHERE ifNull(equals(path_key, '4_step four'), 0)
     GROUP BY person_id) AS source ON equals(persons.id, source.actor_id)
  ORDER BY persons.id ASC
  LIMIT 101
  OFFSET 0 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1
  '''
# ---
# name: TestClickhousePaths.test_person_dropoffs.8
  '''
  SELECT persons.id AS id
  FROM
    (SELECT person.id AS id
     FROM person
     WHERE equals(person.team_id, 2)
     GROUP BY person.id
     HAVING ifNull(equals(argMax(person.is_deleted, person.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS persons
  INNER JOIN
    (SELECT person_id AS actor_id,
            groupUniqArray(100)(tuple(timestamp, uuid, session_id, window_id)) AS matching_events,
            count(*) AS event_count
     FROM
       (SELECT person_id AS person_id,
               path AS path,
                       conversion_time AS conversion_time,
                       event_in_session_index AS event_in_session_index,
                       concat(ifNull(toString(event_in_session_index), ''), '_', ifNull(toString(path), '')) AS path_key,
                       if(ifNull(greater(event_in_session_index, 1), 0), concat(ifNull(toString(minus(event_in_session_index, 1)), ''), '_', ifNull(toString(prev_path), '')), NULL) AS last_path_key,
                       path_dropoff_key AS path_dropoff_key,
                       final_uuid AS uuid,
                       final_timestamp AS timestamp,
                       final_session_id AS session_id,
                       final_window_id AS window_id
        FROM
          (SELECT person_id AS person_id,
                  joined_path_tuple.1 AS path,
                  joined_path_tuple.2 AS conversion_time,
                  joined_path_tuple.3 AS prev_path,
                  event_in_session_index,
                  session_index AS session_index,
                  arrayPopFront(arrayPushBack(path_basic, '')) AS path_basic_0,
                  arrayMap((x, y) -> if(ifNull(equals(x, y), isNull(x)
                                               and isNull(y)), 0, 1), path_basic, path_basic_0) AS mapping,
                  arrayFilter((x, y) -> y, time, mapping) AS timings,
                  arrayFilter((x, y) -> y, path_basic, mapping) AS compact_path,
                  indexOf(compact_path, NULL) AS target_index,
                  joined_path_tuple.4 AS final_uuid,
                  joined_path_tuple.5 AS final_timestamp,
                  joined_path_tuple.6 AS final_session_id,
                  joined_path_tuple.7 AS final_window_id,
                  arrayFilter((x, y) -> y, uuid_items, mapping) AS uuid,
                  arrayFilter((x, y) -> y, timestamp_items, mapping) AS timestamp,
                  arrayFilter((x, y) -> y, session_id_items, mapping) AS session_id,
                  arrayFilter((x, y) -> y, window_id_items, mapping) AS window_id,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(compact_path, target_index), compact_path) AS filtered_path,
                  arraySlice(filtered_path, 1, 5) AS limited_path,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(timings, target_index), timings) AS filtered_timings,
                  arraySlice(filtered_timings, 1, 5) AS limited_timings,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(uuid, target_index), uuid) AS filtered_uuid,
                  arraySlice(filtered_uuid, 1, 5) AS limited_uuid,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(timestamp, target_index), timestamp) AS filtered_timestamp,
                  arraySlice(filtered_timestamp, 1, 5) AS limited_timestamp,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(session_id, target_index), session_id) AS filtered_session_id,
                  arraySlice(filtered_session_id, 1, 5) AS limited_session_id,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(window_id, target_index), window_id) AS filtered_window_id,
                  arraySlice(filtered_window_id, 1, 5) AS limited_window_id,
                  arrayDifference(limited_timings) AS timings_diff,
                  concat(ifNull(toString(length(limited_path)), ''), '_', ifNull(toString(limited_path[-1]), '')) AS path_dropoff_key,
                  arrayZip(limited_path, timings_diff, arrayPopBack(arrayPushFront(limited_path, '')), limited_uuid, limited_timestamp, limited_session_id, limited_window_id) AS limited_path_timings
           FROM
             (SELECT person_id AS person_id,
                     path_time_tuple.1 AS path_basic,
                     path_time_tuple.2 AS time,
                     session_index,
                     arrayZip(path_list, timing_list, arrayDifference(timing_list), uuid_list, timestamp_list, session_id_list, window_id_list) AS paths_tuple,
                     arraySplit(x -> if(ifNull(less(x.3, 1800), 0), 0, 1), paths_tuple) AS session_paths,
                     path_time_tuple.4 AS uuid_items,
                     path_time_tuple.5 AS timestamp_items,
                     path_time_tuple.6 AS session_id_items,
                     path_time_tuple.7 AS window_id_items
              FROM
                (SELECT person_id AS person_id,
                        groupArray(timestamp) AS timing_list,
                        groupArray(path_item) AS path_list,
                        groupArray(uuid) AS uuid_list,
                        groupArray(timestamp) AS timestamp_list,
                        groupArray(session_id) AS session_id_list,
                        groupArray(window_id) AS window_id_list
                 FROM
                   (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
                           events__pdi.person_id AS person_id,
                           ifNull(events.event, '') AS path_item_ungrouped,
                           events.uuid AS uuid,
                           toTimeZone(events.timestamp, 'UTC') AS timestamp,
                           ifNull(nullIf(nullIf(events.`$session_id`, ''), 'null'), '') AS session_id,
                           ifNull(nullIf(nullIf(events.`$window_id`, ''), 'null'), '') AS window_id,
                           NULL AS groupings,
                           multiMatchAnyIndex(path_item_ungrouped, NULL) AS group_index,
                           (if(ifNull(greater(group_index, 0), 0), groupings[group_index], path_item_ungrouped) AS path_item) AS path_item
                    FROM events
                    INNER JOIN
                      (SELECT argMax(person_distinct_id2.person_id, person_distinct_id2.version) AS person_id,
                              person_distinct_id2.distinct_id AS distinct_id
                       FROM person_distinct_id2
                       WHERE equals(person_distinct_id2.team_id, 2)
                       GROUP BY person_distinct_id2.distinct_id
                       HAVING ifNull(equals(argMax(person_distinct_id2.is_deleted, person_distinct_id2.version), 0), 0)) AS events__pdi ON equals(events.distinct_id, events__pdi.distinct_id)
                    WHERE and(equals(events.team_id, 2), and(greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2021-05-01 00:00:00', 6, 'UTC')))), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), assumeNotNull(parseDateTime64BestEffortOrNull('2021-05-07 23:59:59', 6, 'UTC')))), not(startsWith(events.event, '$')))
                    ORDER BY events__pdi.person_id ASC, toTimeZone(events.timestamp, 'UTC') ASC)
                 GROUP BY person_id) ARRAY
              JOIN session_paths AS path_time_tuple,
                   arrayEnumerate(session_paths) AS session_index) ARRAY
           JOIN limited_path_timings AS joined_path_tuple,
                arrayEnumerate(limited_path_timings) AS event_in_session_index))
     WHERE and(ifNull(equals(last_path_key, '4_step four'), 0), 1)
     GROUP BY person_id) AS source ON equals(persons.id, source.actor_id)
  ORDER BY persons.id ASC
  LIMIT 101
  OFFSET 0 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1
  '''
# ---
# name: TestClickhousePaths.test_person_on_events_v2
  '''
  
  SELECT distinct_id,
         person_id
  FROM events
  WHERE team_id = 2
    AND distinct_id IN ('poev2_p1',
                        'poev2_p2')
  GROUP BY distinct_id,
           person_id
  ORDER BY if(distinct_id = 'poev2_p1', -1, 0)
  '''
# ---
# name: TestClickhousePaths.test_person_on_events_v2.1
  '''
  SELECT last_path_key AS source_event,
         path_key AS target_event,
         count(*) AS event_count,
         avg(conversion_time) AS average_conversion_time
  FROM
    (SELECT person_id AS person_id,
            path AS path,
                    conversion_time AS conversion_time,
                    event_in_session_index AS event_in_session_index,
                    concat(ifNull(toString(event_in_session_index), ''), '_', ifNull(toString(path), '')) AS path_key,
                    if(ifNull(greater(event_in_session_index, 1), 0), concat(ifNull(toString(minus(event_in_session_index, 1)), ''), '_', ifNull(toString(prev_path), '')), NULL) AS last_path_key,
                    path_dropoff_key AS path_dropoff_key
     FROM
       (SELECT person_id AS person_id,
               joined_path_tuple.1 AS path,
               joined_path_tuple.2 AS conversion_time,
               joined_path_tuple.3 AS prev_path,
               event_in_session_index,
               session_index AS session_index,
               arrayPopFront(arrayPushBack(path_basic, '')) AS path_basic_0,
               arrayMap((x, y) -> if(ifNull(equals(x, y), isNull(x)
                                            and isNull(y)), 0, 1), path_basic, path_basic_0) AS mapping,
               arrayFilter((x, y) -> y, time, mapping) AS timings,
               arrayFilter((x, y) -> y, path_basic, mapping) AS compact_path,
               indexOf(compact_path, NULL) AS target_index,
               if(ifNull(greater(target_index, 0), 0), arraySlice(compact_path, target_index), compact_path) AS filtered_path,
               arraySlice(filtered_path, 1, 4) AS limited_path,
               if(ifNull(greater(target_index, 0), 0), arraySlice(timings, target_index), timings) AS filtered_timings,
               arraySlice(filtered_timings, 1, 4) AS limited_timings,
               arrayDifference(limited_timings) AS timings_diff,
               concat(ifNull(toString(length(limited_path)), ''), '_', ifNull(toString(limited_path[-1]), '')) AS path_dropoff_key,
               arrayZip(limited_path, timings_diff, arrayPopBack(arrayPushFront(limited_path, ''))) AS limited_path_timings
        FROM
          (SELECT person_id AS person_id,
                  path_time_tuple.1 AS path_basic,
                  path_time_tuple.2 AS time,
                  session_index,
                  arrayZip(path_list, timing_list, arrayDifference(timing_list)) AS paths_tuple,
                  arraySplit(x -> if(ifNull(less(x.3, 1800), 0), 0, 1), paths_tuple) AS session_paths
           FROM
             (SELECT person_id AS person_id,
                     groupArray(timestamp) AS timing_list,
                     groupArray(path_item) AS path_list
              FROM
                (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
                        ifNull(nullIf(events__override.override_person_id, '00000000-0000-0000-0000-000000000000'), events.person_id) AS person_id,
                        ifNull(if(equals(events.event, '$screen'), replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$screen_name'), ''), 'null'), '^"|"$', ''), if(equals(events.event, '$pageview'), replaceRegexpAll(ifNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$current_url'), ''), 'null'), '^"|"$', ''), ''), '(.)/$', '\\1'), events.event)), '') AS path_item_ungrouped,
                        NULL AS groupings,
                        multiMatchAnyIndex(path_item_ungrouped, NULL) AS group_index,
                        (if(ifNull(greater(group_index, 0), 0), groupings[group_index], path_item_ungrouped) AS path_item) AS path_item
                 FROM events
                 LEFT OUTER JOIN
                   (SELECT argMax(person_overrides.override_person_id, person_overrides.version) AS override_person_id,
                           person_overrides.old_person_id AS old_person_id
                    FROM person_overrides
                    WHERE equals(person_overrides.team_id, 2)
                    GROUP BY person_overrides.old_person_id) AS events__override ON equals(events.person_id, events__override.old_person_id)
                 WHERE and(equals(events.team_id, 2), and(greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2012-01-01 00:00:00', 6, 'UTC')))), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), assumeNotNull(parseDateTime64BestEffortOrNull('2012-02-01 23:59:59', 6, 'UTC')))), or(equals(events.event, '$pageview'), equals(events.event, '$screen'), not(startsWith(events.event, '$'))))
                 ORDER BY ifNull(nullIf(events__override.override_person_id, '00000000-0000-0000-0000-000000000000'), events.person_id) ASC, toTimeZone(events.timestamp, 'UTC') ASC)
              GROUP BY person_id) ARRAY
           JOIN session_paths AS path_time_tuple,
                arrayEnumerate(session_paths) AS session_index) ARRAY
        JOIN limited_path_timings AS joined_path_tuple,
             arrayEnumerate(limited_path_timings) AS event_in_session_index))
  WHERE isNotNull(source_event)
  GROUP BY source_event,
           target_event
  ORDER BY event_count DESC,
           source_event ASC,
           target_event ASC
  LIMIT 50 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1
  '''
# ---
# name: TestClickhousePaths.test_recording
  '''
  SELECT persons.id AS id,
         toTimeZone(persons.created_at, 'UTC') AS created_at,
         source.event_count AS event_count,
         source.matching_events AS matching_events
  FROM
    (SELECT argMax(person.created_at, person.version) AS created_at,
            person.id AS id
     FROM person
     WHERE equals(person.team_id, 2)
     GROUP BY person.id
     HAVING ifNull(equals(argMax(person.is_deleted, person.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS persons
  INNER JOIN
    (SELECT person_id AS actor_id,
            groupUniqArray(100)(tuple(timestamp, uuid, session_id, window_id)) AS matching_events,
            count(*) AS event_count
     FROM
       (SELECT person_id AS person_id,
               path AS path,
                       conversion_time AS conversion_time,
                       event_in_session_index AS event_in_session_index,
                       concat(ifNull(toString(event_in_session_index), ''), '_', ifNull(toString(path), '')) AS path_key,
                       if(ifNull(greater(event_in_session_index, 1), 0), concat(ifNull(toString(minus(event_in_session_index, 1)), ''), '_', ifNull(toString(prev_path), '')), NULL) AS last_path_key,
                       path_dropoff_key AS path_dropoff_key,
                       final_uuid AS uuid,
                       final_timestamp AS timestamp,
                       final_session_id AS session_id,
                       final_window_id AS window_id
        FROM
          (SELECT person_id AS person_id,
                  joined_path_tuple.1 AS path,
                  joined_path_tuple.2 AS conversion_time,
                  joined_path_tuple.3 AS prev_path,
                  event_in_session_index,
                  session_index AS session_index,
                  arrayPopFront(arrayPushBack(path_basic, '')) AS path_basic_0,
                  arrayMap((x, y) -> if(ifNull(equals(x, y), isNull(x)
                                               and isNull(y)), 0, 1), path_basic, path_basic_0) AS mapping,
                  arrayFilter((x, y) -> y, time, mapping) AS timings,
                  arrayFilter((x, y) -> y, path_basic, mapping) AS compact_path,
                  indexOf(compact_path, NULL) AS target_index,
                  joined_path_tuple.4 AS final_uuid,
                  joined_path_tuple.5 AS final_timestamp,
                  joined_path_tuple.6 AS final_session_id,
                  joined_path_tuple.7 AS final_window_id,
                  arrayFilter((x, y) -> y, uuid_items, mapping) AS uuid,
                  arrayFilter((x, y) -> y, timestamp_items, mapping) AS timestamp,
                  arrayFilter((x, y) -> y, session_id_items, mapping) AS session_id,
                  arrayFilter((x, y) -> y, window_id_items, mapping) AS window_id,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(compact_path, target_index), compact_path) AS filtered_path,
                  arraySlice(filtered_path, 1, 5) AS limited_path,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(timings, target_index), timings) AS filtered_timings,
                  arraySlice(filtered_timings, 1, 5) AS limited_timings,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(uuid, target_index), uuid) AS filtered_uuid,
                  arraySlice(filtered_uuid, 1, 5) AS limited_uuid,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(timestamp, target_index), timestamp) AS filtered_timestamp,
                  arraySlice(filtered_timestamp, 1, 5) AS limited_timestamp,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(session_id, target_index), session_id) AS filtered_session_id,
                  arraySlice(filtered_session_id, 1, 5) AS limited_session_id,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(window_id, target_index), window_id) AS filtered_window_id,
                  arraySlice(filtered_window_id, 1, 5) AS limited_window_id,
                  arrayDifference(limited_timings) AS timings_diff,
                  concat(ifNull(toString(length(limited_path)), ''), '_', ifNull(toString(limited_path[-1]), '')) AS path_dropoff_key,
                  arrayZip(limited_path, timings_diff, arrayPopBack(arrayPushFront(limited_path, '')), limited_uuid, limited_timestamp, limited_session_id, limited_window_id) AS limited_path_timings
           FROM
             (SELECT person_id AS person_id,
                     path_time_tuple.1 AS path_basic,
                     path_time_tuple.2 AS time,
                     session_index,
                     arrayZip(path_list, timing_list, arrayDifference(timing_list), uuid_list, timestamp_list, session_id_list, window_id_list) AS paths_tuple,
                     arraySplit(x -> if(ifNull(less(x.3, 1800), 0), 0, 1), paths_tuple) AS session_paths,
                     path_time_tuple.4 AS uuid_items,
                     path_time_tuple.5 AS timestamp_items,
                     path_time_tuple.6 AS session_id_items,
                     path_time_tuple.7 AS window_id_items
              FROM
                (SELECT person_id AS person_id,
                        groupArray(timestamp) AS timing_list,
                        groupArray(path_item) AS path_list,
                        groupArray(uuid) AS uuid_list,
                        groupArray(timestamp) AS timestamp_list,
                        groupArray(session_id) AS session_id_list,
                        groupArray(window_id) AS window_id_list
                 FROM
                   (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
                           events__pdi.person_id AS person_id,
                           ifNull(if(equals(events.event, '$pageview'), replaceRegexpAll(ifNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$current_url'), ''), 'null'), '^"|"$', ''), ''), '(.)/$', '\\1'), events.event), '') AS path_item_ungrouped,
                           events.uuid AS uuid,
                           toTimeZone(events.timestamp, 'UTC') AS timestamp,
                           ifNull(nullIf(nullIf(events.`$session_id`, ''), 'null'), '') AS session_id,
                           ifNull(nullIf(nullIf(events.`$window_id`, ''), 'null'), '') AS window_id,
                           NULL AS groupings,
                           multiMatchAnyIndex(path_item_ungrouped, NULL) AS group_index,
                           (if(ifNull(greater(group_index, 0), 0), groupings[group_index], path_item_ungrouped) AS path_item) AS path_item
                    FROM events
                    INNER JOIN
                      (SELECT argMax(person_distinct_id2.person_id, person_distinct_id2.version) AS person_id,
                              person_distinct_id2.distinct_id AS distinct_id
                       FROM person_distinct_id2
                       WHERE equals(person_distinct_id2.team_id, 2)
                       GROUP BY person_distinct_id2.distinct_id
                       HAVING ifNull(equals(argMax(person_distinct_id2.is_deleted, person_distinct_id2.version), 0), 0)) AS events__pdi ON equals(events.distinct_id, events__pdi.distinct_id)
                    WHERE and(equals(events.team_id, 2), and(greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2012-01-01 00:00:00', 6, 'UTC')))), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), assumeNotNull(parseDateTime64BestEffortOrNull('2012-01-02 23:59:59', 6, 'UTC')))), equals(events.event, '$pageview'))
                    ORDER BY events__pdi.person_id ASC, toTimeZone(events.timestamp, 'UTC') ASC)
                 GROUP BY person_id) ARRAY
              JOIN session_paths AS path_time_tuple,
                   arrayEnumerate(session_paths) AS session_index) ARRAY
           JOIN limited_path_timings AS joined_path_tuple,
                arrayEnumerate(limited_path_timings) AS event_in_session_index))
     WHERE ifNull(equals(path_key, '2_/2'), 0)
     GROUP BY person_id) AS source ON equals(persons.id, source.actor_id)
  ORDER BY persons.id ASC
  LIMIT 101
  OFFSET 0 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1
  '''
# ---
# name: TestClickhousePaths.test_recording.1
  '''
  SELECT DISTINCT session_replay_events.session_id AS session_id
  FROM
    (SELECT session_replay_events.session_id AS session_id
     FROM session_replay_events
     WHERE equals(session_replay_events.team_id, 2)
     GROUP BY session_replay_events.session_id) AS session_replay_events
  WHERE ifNull(in(session_replay_events.session_id, ['s3', 's1', 's5']), 0)
  LIMIT 100 SETTINGS readonly=2,
                     max_execution_time=60,
                     allow_experimental_object_type=1
  '''
# ---
# name: TestClickhousePaths.test_recording_for_dropoff
  '''
  SELECT persons.id AS id,
         toTimeZone(persons.created_at, 'UTC') AS created_at,
         source.event_count AS event_count,
         source.matching_events AS matching_events
  FROM
    (SELECT argMax(person.created_at, person.version) AS created_at,
            person.id AS id
     FROM person
     WHERE equals(person.team_id, 2)
     GROUP BY person.id
     HAVING ifNull(equals(argMax(person.is_deleted, person.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS persons
  INNER JOIN
    (SELECT person_id AS actor_id,
            groupUniqArray(100)(tuple(timestamp, uuid, session_id, window_id)) AS matching_events,
            count(*) AS event_count
     FROM
       (SELECT person_id AS person_id,
               path AS path,
                       conversion_time AS conversion_time,
                       event_in_session_index AS event_in_session_index,
                       concat(ifNull(toString(event_in_session_index), ''), '_', ifNull(toString(path), '')) AS path_key,
                       if(ifNull(greater(event_in_session_index, 1), 0), concat(ifNull(toString(minus(event_in_session_index, 1)), ''), '_', ifNull(toString(prev_path), '')), NULL) AS last_path_key,
                       path_dropoff_key AS path_dropoff_key,
                       final_uuid AS uuid,
                       final_timestamp AS timestamp,
                       final_session_id AS session_id,
                       final_window_id AS window_id
        FROM
          (SELECT person_id AS person_id,
                  joined_path_tuple.1 AS path,
                  joined_path_tuple.2 AS conversion_time,
                  joined_path_tuple.3 AS prev_path,
                  event_in_session_index,
                  session_index AS session_index,
                  arrayPopFront(arrayPushBack(path_basic, '')) AS path_basic_0,
                  arrayMap((x, y) -> if(ifNull(equals(x, y), isNull(x)
                                               and isNull(y)), 0, 1), path_basic, path_basic_0) AS mapping,
                  arrayFilter((x, y) -> y, time, mapping) AS timings,
                  arrayFilter((x, y) -> y, path_basic, mapping) AS compact_path,
                  indexOf(compact_path, NULL) AS target_index,
                  joined_path_tuple.4 AS final_uuid,
                  joined_path_tuple.5 AS final_timestamp,
                  joined_path_tuple.6 AS final_session_id,
                  joined_path_tuple.7 AS final_window_id,
                  arrayFilter((x, y) -> y, uuid_items, mapping) AS uuid,
                  arrayFilter((x, y) -> y, timestamp_items, mapping) AS timestamp,
                  arrayFilter((x, y) -> y, session_id_items, mapping) AS session_id,
                  arrayFilter((x, y) -> y, window_id_items, mapping) AS window_id,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(compact_path, target_index), compact_path) AS filtered_path,
                  arraySlice(filtered_path, 1, 5) AS limited_path,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(timings, target_index), timings) AS filtered_timings,
                  arraySlice(filtered_timings, 1, 5) AS limited_timings,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(uuid, target_index), uuid) AS filtered_uuid,
                  arraySlice(filtered_uuid, 1, 5) AS limited_uuid,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(timestamp, target_index), timestamp) AS filtered_timestamp,
                  arraySlice(filtered_timestamp, 1, 5) AS limited_timestamp,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(session_id, target_index), session_id) AS filtered_session_id,
                  arraySlice(filtered_session_id, 1, 5) AS limited_session_id,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(window_id, target_index), window_id) AS filtered_window_id,
                  arraySlice(filtered_window_id, 1, 5) AS limited_window_id,
                  arrayDifference(limited_timings) AS timings_diff,
                  concat(ifNull(toString(length(limited_path)), ''), '_', ifNull(toString(limited_path[-1]), '')) AS path_dropoff_key,
                  arrayZip(limited_path, timings_diff, arrayPopBack(arrayPushFront(limited_path, '')), limited_uuid, limited_timestamp, limited_session_id, limited_window_id) AS limited_path_timings
           FROM
             (SELECT person_id AS person_id,
                     path_time_tuple.1 AS path_basic,
                     path_time_tuple.2 AS time,
                     session_index,
                     arrayZip(path_list, timing_list, arrayDifference(timing_list), uuid_list, timestamp_list, session_id_list, window_id_list) AS paths_tuple,
                     arraySplit(x -> if(ifNull(less(x.3, 1800), 0), 0, 1), paths_tuple) AS session_paths,
                     path_time_tuple.4 AS uuid_items,
                     path_time_tuple.5 AS timestamp_items,
                     path_time_tuple.6 AS session_id_items,
                     path_time_tuple.7 AS window_id_items
              FROM
                (SELECT person_id AS person_id,
                        groupArray(timestamp) AS timing_list,
                        groupArray(path_item) AS path_list,
                        groupArray(uuid) AS uuid_list,
                        groupArray(timestamp) AS timestamp_list,
                        groupArray(session_id) AS session_id_list,
                        groupArray(window_id) AS window_id_list
                 FROM
                   (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
                           events__pdi.person_id AS person_id,
                           ifNull(if(equals(events.event, '$pageview'), replaceRegexpAll(ifNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$current_url'), ''), 'null'), '^"|"$', ''), ''), '(.)/$', '\\1'), events.event), '') AS path_item_ungrouped,
                           events.uuid AS uuid,
                           toTimeZone(events.timestamp, 'UTC') AS timestamp,
                           ifNull(nullIf(nullIf(events.`$session_id`, ''), 'null'), '') AS session_id,
                           ifNull(nullIf(nullIf(events.`$window_id`, ''), 'null'), '') AS window_id,
                           NULL AS groupings,
                           multiMatchAnyIndex(path_item_ungrouped, NULL) AS group_index,
                           (if(ifNull(greater(group_index, 0), 0), groupings[group_index], path_item_ungrouped) AS path_item) AS path_item
                    FROM events
                    INNER JOIN
                      (SELECT argMax(person_distinct_id2.person_id, person_distinct_id2.version) AS person_id,
                              person_distinct_id2.distinct_id AS distinct_id
                       FROM person_distinct_id2
                       WHERE equals(person_distinct_id2.team_id, 2)
                       GROUP BY person_distinct_id2.distinct_id
                       HAVING ifNull(equals(argMax(person_distinct_id2.is_deleted, person_distinct_id2.version), 0), 0)) AS events__pdi ON equals(events.distinct_id, events__pdi.distinct_id)
                    WHERE and(equals(events.team_id, 2), and(greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2012-01-01 00:00:00', 6, 'UTC')))), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), assumeNotNull(parseDateTime64BestEffortOrNull('2012-01-02 23:59:59', 6, 'UTC')))), equals(events.event, '$pageview'))
                    ORDER BY events__pdi.person_id ASC, toTimeZone(events.timestamp, 'UTC') ASC)
                 GROUP BY person_id) ARRAY
              JOIN session_paths AS path_time_tuple,
                   arrayEnumerate(session_paths) AS session_index) ARRAY
           JOIN limited_path_timings AS joined_path_tuple,
                arrayEnumerate(limited_path_timings) AS event_in_session_index))
     WHERE and(ifNull(equals(path_dropoff_key, '2_/2'), 0), ifNull(equals(path_dropoff_key, path_key), isNull(path_dropoff_key)
                                                                   and isNull(path_key)))
     GROUP BY person_id) AS source ON equals(persons.id, source.actor_id)
  ORDER BY persons.id ASC
  LIMIT 101
  OFFSET 0 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1
  '''
# ---
# name: TestClickhousePaths.test_recording_for_dropoff.1
  '''
  SELECT DISTINCT session_replay_events.session_id AS session_id
  FROM
    (SELECT session_replay_events.session_id AS session_id
     FROM session_replay_events
     WHERE equals(session_replay_events.team_id, 2)
     GROUP BY session_replay_events.session_id) AS session_replay_events
  WHERE ifNull(in(session_replay_events.session_id, []), 0)
  LIMIT 100 SETTINGS readonly=2,
                     max_execution_time=60,
                     allow_experimental_object_type=1
  '''
# ---
# name: TestClickhousePaths.test_recording_for_dropoff.2
  '''
  SELECT persons.id AS id,
         toTimeZone(persons.created_at, 'UTC') AS created_at,
         source.event_count AS event_count,
         source.matching_events AS matching_events
  FROM
    (SELECT argMax(person.created_at, person.version) AS created_at,
            person.id AS id
     FROM person
     WHERE equals(person.team_id, 2)
     GROUP BY person.id
     HAVING ifNull(equals(argMax(person.is_deleted, person.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS persons
  INNER JOIN
    (SELECT person_id AS actor_id,
            groupUniqArray(100)(tuple(timestamp, uuid, session_id, window_id)) AS matching_events,
            count(*) AS event_count
     FROM
       (SELECT person_id AS person_id,
               path AS path,
                       conversion_time AS conversion_time,
                       event_in_session_index AS event_in_session_index,
                       concat(ifNull(toString(event_in_session_index), ''), '_', ifNull(toString(path), '')) AS path_key,
                       if(ifNull(greater(event_in_session_index, 1), 0), concat(ifNull(toString(minus(event_in_session_index, 1)), ''), '_', ifNull(toString(prev_path), '')), NULL) AS last_path_key,
                       path_dropoff_key AS path_dropoff_key,
                       final_uuid AS uuid,
                       final_timestamp AS timestamp,
                       final_session_id AS session_id,
                       final_window_id AS window_id
        FROM
          (SELECT person_id AS person_id,
                  joined_path_tuple.1 AS path,
                  joined_path_tuple.2 AS conversion_time,
                  joined_path_tuple.3 AS prev_path,
                  event_in_session_index,
                  session_index AS session_index,
                  arrayPopFront(arrayPushBack(path_basic, '')) AS path_basic_0,
                  arrayMap((x, y) -> if(ifNull(equals(x, y), isNull(x)
                                               and isNull(y)), 0, 1), path_basic, path_basic_0) AS mapping,
                  arrayFilter((x, y) -> y, time, mapping) AS timings,
                  arrayFilter((x, y) -> y, path_basic, mapping) AS compact_path,
                  indexOf(compact_path, NULL) AS target_index,
                  joined_path_tuple.4 AS final_uuid,
                  joined_path_tuple.5 AS final_timestamp,
                  joined_path_tuple.6 AS final_session_id,
                  joined_path_tuple.7 AS final_window_id,
                  arrayFilter((x, y) -> y, uuid_items, mapping) AS uuid,
                  arrayFilter((x, y) -> y, timestamp_items, mapping) AS timestamp,
                  arrayFilter((x, y) -> y, session_id_items, mapping) AS session_id,
                  arrayFilter((x, y) -> y, window_id_items, mapping) AS window_id,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(compact_path, target_index), compact_path) AS filtered_path,
                  arraySlice(filtered_path, 1, 5) AS limited_path,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(timings, target_index), timings) AS filtered_timings,
                  arraySlice(filtered_timings, 1, 5) AS limited_timings,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(uuid, target_index), uuid) AS filtered_uuid,
                  arraySlice(filtered_uuid, 1, 5) AS limited_uuid,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(timestamp, target_index), timestamp) AS filtered_timestamp,
                  arraySlice(filtered_timestamp, 1, 5) AS limited_timestamp,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(session_id, target_index), session_id) AS filtered_session_id,
                  arraySlice(filtered_session_id, 1, 5) AS limited_session_id,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(window_id, target_index), window_id) AS filtered_window_id,
                  arraySlice(filtered_window_id, 1, 5) AS limited_window_id,
                  arrayDifference(limited_timings) AS timings_diff,
                  concat(ifNull(toString(length(limited_path)), ''), '_', ifNull(toString(limited_path[-1]), '')) AS path_dropoff_key,
                  arrayZip(limited_path, timings_diff, arrayPopBack(arrayPushFront(limited_path, '')), limited_uuid, limited_timestamp, limited_session_id, limited_window_id) AS limited_path_timings
           FROM
             (SELECT person_id AS person_id,
                     path_time_tuple.1 AS path_basic,
                     path_time_tuple.2 AS time,
                     session_index,
                     arrayZip(path_list, timing_list, arrayDifference(timing_list), uuid_list, timestamp_list, session_id_list, window_id_list) AS paths_tuple,
                     arraySplit(x -> if(ifNull(less(x.3, 1800), 0), 0, 1), paths_tuple) AS session_paths,
                     path_time_tuple.4 AS uuid_items,
                     path_time_tuple.5 AS timestamp_items,
                     path_time_tuple.6 AS session_id_items,
                     path_time_tuple.7 AS window_id_items
              FROM
                (SELECT person_id AS person_id,
                        groupArray(timestamp) AS timing_list,
                        groupArray(path_item) AS path_list,
                        groupArray(uuid) AS uuid_list,
                        groupArray(timestamp) AS timestamp_list,
                        groupArray(session_id) AS session_id_list,
                        groupArray(window_id) AS window_id_list
                 FROM
                   (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
                           events__pdi.person_id AS person_id,
                           ifNull(if(equals(events.event, '$pageview'), replaceRegexpAll(ifNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$current_url'), ''), 'null'), '^"|"$', ''), ''), '(.)/$', '\\1'), events.event), '') AS path_item_ungrouped,
                           events.uuid AS uuid,
                           toTimeZone(events.timestamp, 'UTC') AS timestamp,
                           ifNull(nullIf(nullIf(events.`$session_id`, ''), 'null'), '') AS session_id,
                           ifNull(nullIf(nullIf(events.`$window_id`, ''), 'null'), '') AS window_id,
                           NULL AS groupings,
                           multiMatchAnyIndex(path_item_ungrouped, NULL) AS group_index,
                           (if(ifNull(greater(group_index, 0), 0), groupings[group_index], path_item_ungrouped) AS path_item) AS path_item
                    FROM events
                    INNER JOIN
                      (SELECT argMax(person_distinct_id2.person_id, person_distinct_id2.version) AS person_id,
                              person_distinct_id2.distinct_id AS distinct_id
                       FROM person_distinct_id2
                       WHERE equals(person_distinct_id2.team_id, 2)
                       GROUP BY person_distinct_id2.distinct_id
                       HAVING ifNull(equals(argMax(person_distinct_id2.is_deleted, person_distinct_id2.version), 0), 0)) AS events__pdi ON equals(events.distinct_id, events__pdi.distinct_id)
                    WHERE and(equals(events.team_id, 2), and(greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2012-01-01 00:00:00', 6, 'UTC')))), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), assumeNotNull(parseDateTime64BestEffortOrNull('2012-01-02 23:59:59', 6, 'UTC')))), equals(events.event, '$pageview'))
                    ORDER BY events__pdi.person_id ASC, toTimeZone(events.timestamp, 'UTC') ASC)
                 GROUP BY person_id) ARRAY
              JOIN session_paths AS path_time_tuple,
                   arrayEnumerate(session_paths) AS session_index) ARRAY
           JOIN limited_path_timings AS joined_path_tuple,
                arrayEnumerate(limited_path_timings) AS event_in_session_index))
     WHERE and(ifNull(equals(path_dropoff_key, '3_/3'), 0), ifNull(equals(path_dropoff_key, path_key), isNull(path_dropoff_key)
                                                                   and isNull(path_key)))
     GROUP BY person_id) AS source ON equals(persons.id, source.actor_id)
  ORDER BY persons.id ASC
  LIMIT 101
  OFFSET 0 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1
  '''
# ---
# name: TestClickhousePaths.test_recording_for_dropoff.3
  '''
  SELECT DISTINCT session_replay_events.session_id AS session_id
  FROM
    (SELECT session_replay_events.session_id AS session_id
     FROM session_replay_events
     WHERE equals(session_replay_events.team_id, 2)
     GROUP BY session_replay_events.session_id) AS session_replay_events
  WHERE ifNull(in(session_replay_events.session_id, ['s1']), 0)
  LIMIT 100 SETTINGS readonly=2,
                     max_execution_time=60,
                     allow_experimental_object_type=1
  '''
# ---
# name: TestClickhousePaths.test_recording_with_no_window_or_session_id
  '''
  SELECT persons.id AS id,
         toTimeZone(persons.created_at, 'UTC') AS created_at,
         source.event_count AS event_count,
         source.matching_events AS matching_events
  FROM
    (SELECT argMax(person.created_at, person.version) AS created_at,
            person.id AS id
     FROM person
     WHERE equals(person.team_id, 2)
     GROUP BY person.id
     HAVING ifNull(equals(argMax(person.is_deleted, person.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS persons
  INNER JOIN
    (SELECT person_id AS actor_id,
            groupUniqArray(100)(tuple(timestamp, uuid, session_id, window_id)) AS matching_events,
            count(*) AS event_count
     FROM
       (SELECT person_id AS person_id,
               path AS path,
                       conversion_time AS conversion_time,
                       event_in_session_index AS event_in_session_index,
                       concat(ifNull(toString(event_in_session_index), ''), '_', ifNull(toString(path), '')) AS path_key,
                       if(ifNull(greater(event_in_session_index, 1), 0), concat(ifNull(toString(minus(event_in_session_index, 1)), ''), '_', ifNull(toString(prev_path), '')), NULL) AS last_path_key,
                       path_dropoff_key AS path_dropoff_key,
                       final_uuid AS uuid,
                       final_timestamp AS timestamp,
                       final_session_id AS session_id,
                       final_window_id AS window_id
        FROM
          (SELECT person_id AS person_id,
                  joined_path_tuple.1 AS path,
                  joined_path_tuple.2 AS conversion_time,
                  joined_path_tuple.3 AS prev_path,
                  event_in_session_index,
                  session_index AS session_index,
                  arrayPopFront(arrayPushBack(path_basic, '')) AS path_basic_0,
                  arrayMap((x, y) -> if(ifNull(equals(x, y), isNull(x)
                                               and isNull(y)), 0, 1), path_basic, path_basic_0) AS mapping,
                  arrayFilter((x, y) -> y, time, mapping) AS timings,
                  arrayFilter((x, y) -> y, path_basic, mapping) AS compact_path,
                  indexOf(compact_path, NULL) AS target_index,
                  joined_path_tuple.4 AS final_uuid,
                  joined_path_tuple.5 AS final_timestamp,
                  joined_path_tuple.6 AS final_session_id,
                  joined_path_tuple.7 AS final_window_id,
                  arrayFilter((x, y) -> y, uuid_items, mapping) AS uuid,
                  arrayFilter((x, y) -> y, timestamp_items, mapping) AS timestamp,
                  arrayFilter((x, y) -> y, session_id_items, mapping) AS session_id,
                  arrayFilter((x, y) -> y, window_id_items, mapping) AS window_id,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(compact_path, target_index), compact_path) AS filtered_path,
                  arraySlice(filtered_path, 1, 5) AS limited_path,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(timings, target_index), timings) AS filtered_timings,
                  arraySlice(filtered_timings, 1, 5) AS limited_timings,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(uuid, target_index), uuid) AS filtered_uuid,
                  arraySlice(filtered_uuid, 1, 5) AS limited_uuid,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(timestamp, target_index), timestamp) AS filtered_timestamp,
                  arraySlice(filtered_timestamp, 1, 5) AS limited_timestamp,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(session_id, target_index), session_id) AS filtered_session_id,
                  arraySlice(filtered_session_id, 1, 5) AS limited_session_id,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(window_id, target_index), window_id) AS filtered_window_id,
                  arraySlice(filtered_window_id, 1, 5) AS limited_window_id,
                  arrayDifference(limited_timings) AS timings_diff,
                  concat(ifNull(toString(length(limited_path)), ''), '_', ifNull(toString(limited_path[-1]), '')) AS path_dropoff_key,
                  arrayZip(limited_path, timings_diff, arrayPopBack(arrayPushFront(limited_path, '')), limited_uuid, limited_timestamp, limited_session_id, limited_window_id) AS limited_path_timings
           FROM
             (SELECT person_id AS person_id,
                     path_time_tuple.1 AS path_basic,
                     path_time_tuple.2 AS time,
                     session_index,
                     arrayZip(path_list, timing_list, arrayDifference(timing_list), uuid_list, timestamp_list, session_id_list, window_id_list) AS paths_tuple,
                     arraySplit(x -> if(ifNull(less(x.3, 1800), 0), 0, 1), paths_tuple) AS session_paths,
                     path_time_tuple.4 AS uuid_items,
                     path_time_tuple.5 AS timestamp_items,
                     path_time_tuple.6 AS session_id_items,
                     path_time_tuple.7 AS window_id_items
              FROM
                (SELECT person_id AS person_id,
                        groupArray(timestamp) AS timing_list,
                        groupArray(path_item) AS path_list,
                        groupArray(uuid) AS uuid_list,
                        groupArray(timestamp) AS timestamp_list,
                        groupArray(session_id) AS session_id_list,
                        groupArray(window_id) AS window_id_list
                 FROM
                   (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
                           events__pdi.person_id AS person_id,
                           ifNull(if(equals(events.event, '$pageview'), replaceRegexpAll(ifNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$current_url'), ''), 'null'), '^"|"$', ''), ''), '(.)/$', '\\1'), events.event), '') AS path_item_ungrouped,
                           events.uuid AS uuid,
                           toTimeZone(events.timestamp, 'UTC') AS timestamp,
                           ifNull(nullIf(nullIf(events.`$session_id`, ''), 'null'), '') AS session_id,
                           ifNull(nullIf(nullIf(events.`$window_id`, ''), 'null'), '') AS window_id,
                           NULL AS groupings,
                           multiMatchAnyIndex(path_item_ungrouped, NULL) AS group_index,
                           (if(ifNull(greater(group_index, 0), 0), groupings[group_index], path_item_ungrouped) AS path_item) AS path_item
                    FROM events
                    INNER JOIN
                      (SELECT argMax(person_distinct_id2.person_id, person_distinct_id2.version) AS person_id,
                              person_distinct_id2.distinct_id AS distinct_id
                       FROM person_distinct_id2
                       WHERE equals(person_distinct_id2.team_id, 2)
                       GROUP BY person_distinct_id2.distinct_id
                       HAVING ifNull(equals(argMax(person_distinct_id2.is_deleted, person_distinct_id2.version), 0), 0)) AS events__pdi ON equals(events.distinct_id, events__pdi.distinct_id)
                    WHERE and(equals(events.team_id, 2), and(greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2012-01-01 00:00:00', 6, 'UTC')))), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), assumeNotNull(parseDateTime64BestEffortOrNull('2012-01-02 23:59:59', 6, 'UTC')))), equals(events.event, '$pageview'))
                    ORDER BY events__pdi.person_id ASC, toTimeZone(events.timestamp, 'UTC') ASC)
                 GROUP BY person_id) ARRAY
              JOIN session_paths AS path_time_tuple,
                   arrayEnumerate(session_paths) AS session_index) ARRAY
           JOIN limited_path_timings AS joined_path_tuple,
                arrayEnumerate(limited_path_timings) AS event_in_session_index))
     WHERE ifNull(equals(path_key, '2_/2'), 0)
     GROUP BY person_id) AS source ON equals(persons.id, source.actor_id)
  ORDER BY persons.id ASC
  LIMIT 101
  OFFSET 0 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1
  '''
# ---
# name: TestClickhousePaths.test_recording_with_no_window_or_session_id.1
  '''
  SELECT DISTINCT session_replay_events.session_id AS session_id
  FROM
    (SELECT session_replay_events.session_id AS session_id
     FROM session_replay_events
     WHERE equals(session_replay_events.team_id, 2)
     GROUP BY session_replay_events.session_id) AS session_replay_events
  WHERE ifNull(in(session_replay_events.session_id, ['']), 0)
  LIMIT 100 SETTINGS readonly=2,
                     max_execution_time=60,
                     allow_experimental_object_type=1
  '''
# ---
# name: TestClickhousePaths.test_recording_with_start_and_end
  '''
  SELECT persons.id AS id,
         toTimeZone(persons.created_at, 'UTC') AS created_at,
         source.event_count AS event_count,
         source.matching_events AS matching_events
  FROM
    (SELECT argMax(person.created_at, person.version) AS created_at,
            person.id AS id
     FROM person
     WHERE equals(person.team_id, 2)
     GROUP BY person.id
     HAVING ifNull(equals(argMax(person.is_deleted, person.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS persons
  INNER JOIN
    (SELECT person_id AS actor_id,
            groupUniqArray(100)(tuple(timestamp, uuid, session_id, window_id)) AS matching_events,
            count(*) AS event_count
     FROM
       (SELECT person_id AS person_id,
               path AS path,
                       conversion_time AS conversion_time,
                       event_in_session_index AS event_in_session_index,
                       concat(ifNull(toString(event_in_session_index), ''), '_', ifNull(toString(path), '')) AS path_key,
                       if(ifNull(greater(event_in_session_index, 1), 0), concat(ifNull(toString(minus(event_in_session_index, 1)), ''), '_', ifNull(toString(prev_path), '')), NULL) AS last_path_key,
                       path_dropoff_key AS path_dropoff_key,
                       final_uuid AS uuid,
                       final_timestamp AS timestamp,
                       final_session_id AS session_id,
                       final_window_id AS window_id
        FROM
          (SELECT person_id AS person_id,
                  joined_path_tuple.1 AS path,
                  joined_path_tuple.2 AS conversion_time,
                  joined_path_tuple.3 AS prev_path,
                  event_in_session_index,
                  session_index AS session_index,
                  arrayPopFront(arrayPushBack(path_basic, '')) AS path_basic_0,
                  arrayMap((x, y) -> if(ifNull(equals(x, y), isNull(x)
                                               and isNull(y)), 0, 1), path_basic, path_basic_0) AS mapping,
                  arrayFilter((x, y) -> y, time, mapping) AS timings,
                  arrayFilter((x, y) -> y, path_basic, mapping) AS compact_path,
                  indexOf(compact_path, '/3') AS target_index,
                  joined_path_tuple.4 AS final_uuid,
                  joined_path_tuple.5 AS final_timestamp,
                  joined_path_tuple.6 AS final_session_id,
                  joined_path_tuple.7 AS final_window_id,
                  arrayFilter((x, y) -> y, uuid_items, mapping) AS uuid,
                  arrayFilter((x, y) -> y, timestamp_items, mapping) AS timestamp,
                  arrayFilter((x, y) -> y, session_id_items, mapping) AS session_id,
                  arrayFilter((x, y) -> y, window_id_items, mapping) AS window_id,
                  indexOf(compact_path, '/1') AS start_target_index,
                  if(ifNull(greater(start_target_index, 0), 0), arraySlice(compact_path, start_target_index), compact_path) AS start_filtered_path,
                  indexOf(start_filtered_path, '/3') AS end_target_index,
                  if(ifNull(greater(end_target_index, 0), 0), arrayResize(start_filtered_path, end_target_index), start_filtered_path) AS filtered_path,
                  if(ifNull(greater(length(filtered_path), 5), 0), arrayConcat(arraySlice(filtered_path, 1, intDiv(5, 2)), ['...'], arraySlice(filtered_path, multiply(-1, intDiv(5, 2)), intDiv(5, 2))), filtered_path) AS limited_path,
                  if(ifNull(greater(start_target_index, 0), 0), arraySlice(timings, start_target_index), timings) AS start_filtered_timings,
                  if(ifNull(greater(end_target_index, 0), 0), arrayResize(start_filtered_timings, end_target_index), start_filtered_timings) AS filtered_timings,
                  if(ifNull(greater(length(filtered_timings), 5), 0), arrayConcat(arraySlice(filtered_timings, 1, intDiv(5, 2)), [filtered_timings[plus(1, intDiv(5, 2))]], arraySlice(filtered_timings, multiply(-1, intDiv(5, 2)), intDiv(5, 2))), filtered_timings) AS limited_timings,
                  if(ifNull(greater(start_target_index, 0), 0), arraySlice(uuid, start_target_index), uuid) AS start_filtered_uuid,
                  if(ifNull(greater(end_target_index, 0), 0), arrayResize(start_filtered_uuid, end_target_index), start_filtered_uuid) AS filtered_uuid,
                  if(ifNull(greater(length(filtered_uuid), 5), 0), arrayConcat(arraySlice(filtered_uuid, 1, intDiv(5, 2)), [filtered_uuid[plus(1, intDiv(5, 2))]], arraySlice(filtered_uuid, multiply(-1, intDiv(5, 2)), intDiv(5, 2))), filtered_uuid) AS limited_uuid,
                  if(ifNull(greater(start_target_index, 0), 0), arraySlice(timestamp, start_target_index), timestamp) AS start_filtered_timestamp,
                  if(ifNull(greater(end_target_index, 0), 0), arrayResize(start_filtered_timestamp, end_target_index), start_filtered_timestamp) AS filtered_timestamp,
                  if(ifNull(greater(length(filtered_timestamp), 5), 0), arrayConcat(arraySlice(filtered_timestamp, 1, intDiv(5, 2)), [filtered_timestamp[plus(1, intDiv(5, 2))]], arraySlice(filtered_timestamp, multiply(-1, intDiv(5, 2)), intDiv(5, 2))), filtered_timestamp) AS limited_timestamp,
                  if(ifNull(greater(start_target_index, 0), 0), arraySlice(session_id, start_target_index), session_id) AS start_filtered_session_id,
                  if(ifNull(greater(end_target_index, 0), 0), arrayResize(start_filtered_session_id, end_target_index), start_filtered_session_id) AS filtered_session_id,
                  if(ifNull(greater(length(filtered_session_id), 5), 0), arrayConcat(arraySlice(filtered_session_id, 1, intDiv(5, 2)), [filtered_session_id[plus(1, intDiv(5, 2))]], arraySlice(filtered_session_id, multiply(-1, intDiv(5, 2)), intDiv(5, 2))), filtered_session_id) AS limited_session_id,
                  if(ifNull(greater(start_target_index, 0), 0), arraySlice(window_id, start_target_index), window_id) AS start_filtered_window_id,
                  if(ifNull(greater(end_target_index, 0), 0), arrayResize(start_filtered_window_id, end_target_index), start_filtered_window_id) AS filtered_window_id,
                  if(ifNull(greater(length(filtered_window_id), 5), 0), arrayConcat(arraySlice(filtered_window_id, 1, intDiv(5, 2)), [filtered_window_id[plus(1, intDiv(5, 2))]], arraySlice(filtered_window_id, multiply(-1, intDiv(5, 2)), intDiv(5, 2))), filtered_window_id) AS limited_window_id,
                  arrayDifference(limited_timings) AS timings_diff,
                  concat(ifNull(toString(length(limited_path)), ''), '_', ifNull(toString(limited_path[-1]), '')) AS path_dropoff_key,
                  arrayZip(limited_path, timings_diff, arrayPopBack(arrayPushFront(limited_path, '')), limited_uuid, limited_timestamp, limited_session_id, limited_window_id) AS limited_path_timings
           FROM
             (SELECT person_id AS person_id,
                     path_time_tuple.1 AS path_basic,
                     path_time_tuple.2 AS time,
                     session_index,
                     arrayZip(path_list, timing_list, arrayDifference(timing_list), uuid_list, timestamp_list, session_id_list, window_id_list) AS paths_tuple,
                     arraySplit(x -> if(ifNull(less(x.3, 1800), 0), 0, 1), paths_tuple) AS session_paths,
                     path_time_tuple.4 AS uuid_items,
                     path_time_tuple.5 AS timestamp_items,
                     path_time_tuple.6 AS session_id_items,
                     path_time_tuple.7 AS window_id_items
              FROM
                (SELECT person_id AS person_id,
                        groupArray(timestamp) AS timing_list,
                        groupArray(path_item) AS path_list,
                        groupArray(uuid) AS uuid_list,
                        groupArray(timestamp) AS timestamp_list,
                        groupArray(session_id) AS session_id_list,
                        groupArray(window_id) AS window_id_list
                 FROM
                   (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
                           events__pdi.person_id AS person_id,
                           ifNull(if(equals(events.event, '$pageview'), replaceRegexpAll(ifNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$current_url'), ''), 'null'), '^"|"$', ''), ''), '(.)/$', '\\1'), events.event), '') AS path_item_ungrouped,
                           events.uuid AS uuid,
                           toTimeZone(events.timestamp, 'UTC') AS timestamp,
                           ifNull(nullIf(nullIf(events.`$session_id`, ''), 'null'), '') AS session_id,
                           ifNull(nullIf(nullIf(events.`$window_id`, ''), 'null'), '') AS window_id,
                           NULL AS groupings,
                           multiMatchAnyIndex(path_item_ungrouped, NULL) AS group_index,
                           (if(ifNull(greater(group_index, 0), 0), groupings[group_index], path_item_ungrouped) AS path_item) AS path_item
                    FROM events
                    INNER JOIN
                      (SELECT argMax(person_distinct_id2.person_id, person_distinct_id2.version) AS person_id,
                              person_distinct_id2.distinct_id AS distinct_id
                       FROM person_distinct_id2
                       WHERE equals(person_distinct_id2.team_id, 2)
                       GROUP BY person_distinct_id2.distinct_id
                       HAVING ifNull(equals(argMax(person_distinct_id2.is_deleted, person_distinct_id2.version), 0), 0)) AS events__pdi ON equals(events.distinct_id, events__pdi.distinct_id)
                    WHERE and(equals(events.team_id, 2), and(greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2012-01-01 00:00:00', 6, 'UTC')))), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), assumeNotNull(parseDateTime64BestEffortOrNull('2012-01-02 23:59:59', 6, 'UTC')))), equals(events.event, '$pageview'))
                    ORDER BY events__pdi.person_id ASC, toTimeZone(events.timestamp, 'UTC') ASC)
                 GROUP BY person_id) ARRAY
              JOIN session_paths AS path_time_tuple,
                   arrayEnumerate(session_paths) AS session_index) ARRAY
           JOIN limited_path_timings AS joined_path_tuple,
                arrayEnumerate(limited_path_timings) AS event_in_session_index
           WHERE and(ifNull(greater(start_target_index, 0), 0), ifNull(greater(end_target_index, 0), 0))))
     WHERE ifNull(equals(path_key, '2_/2'), 0)
     GROUP BY person_id) AS source ON equals(persons.id, source.actor_id)
  ORDER BY persons.id ASC
  LIMIT 101
  OFFSET 0 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1
  '''
# ---
# name: TestClickhousePaths.test_recording_with_start_and_end.1
  '''
  SELECT DISTINCT session_replay_events.session_id AS session_id
  FROM
    (SELECT session_replay_events.session_id AS session_id
     FROM session_replay_events
     WHERE equals(session_replay_events.team_id, 2)
     GROUP BY session_replay_events.session_id) AS session_replay_events
  WHERE ifNull(in(session_replay_events.session_id, ['s1']), 0)
  LIMIT 100 SETTINGS readonly=2,
                     max_execution_time=60,
                     allow_experimental_object_type=1
  '''
# ---
# name: TestClickhousePaths.test_respect_session_limits
  '''
  SELECT last_path_key AS source_event,
         path_key AS target_event,
         count(*) AS event_count,
         avg(conversion_time) AS average_conversion_time
  FROM
    (SELECT person_id AS person_id,
            path AS path,
                    conversion_time AS conversion_time,
                    event_in_session_index AS event_in_session_index,
                    concat(ifNull(toString(event_in_session_index), ''), '_', ifNull(toString(path), '')) AS path_key,
                    if(ifNull(greater(event_in_session_index, 1), 0), concat(ifNull(toString(minus(event_in_session_index, 1)), ''), '_', ifNull(toString(prev_path), '')), NULL) AS last_path_key,
                    path_dropoff_key AS path_dropoff_key
     FROM
       (SELECT person_id AS person_id,
               joined_path_tuple.1 AS path,
               joined_path_tuple.2 AS conversion_time,
               joined_path_tuple.3 AS prev_path,
               event_in_session_index,
               session_index AS session_index,
               arrayPopFront(arrayPushBack(path_basic, '')) AS path_basic_0,
               arrayMap((x, y) -> if(ifNull(equals(x, y), isNull(x)
                                            and isNull(y)), 0, 1), path_basic, path_basic_0) AS mapping,
               arrayFilter((x, y) -> y, time, mapping) AS timings,
               arrayFilter((x, y) -> y, path_basic, mapping) AS compact_path,
               indexOf(compact_path, NULL) AS target_index,
               if(ifNull(greater(target_index, 0), 0), arraySlice(compact_path, target_index), compact_path) AS filtered_path,
               arraySlice(filtered_path, 1, 5) AS limited_path,
               if(ifNull(greater(target_index, 0), 0), arraySlice(timings, target_index), timings) AS filtered_timings,
               arraySlice(filtered_timings, 1, 5) AS limited_timings,
               arrayDifference(limited_timings) AS timings_diff,
               concat(ifNull(toString(length(limited_path)), ''), '_', ifNull(toString(limited_path[-1]), '')) AS path_dropoff_key,
               arrayZip(limited_path, timings_diff, arrayPopBack(arrayPushFront(limited_path, ''))) AS limited_path_timings
        FROM
          (SELECT person_id AS person_id,
                  path_time_tuple.1 AS path_basic,
                  path_time_tuple.2 AS time,
                  session_index,
                  arrayZip(path_list, timing_list, arrayDifference(timing_list)) AS paths_tuple,
                  arraySplit(x -> if(ifNull(less(x.3, 1800), 0), 0, 1), paths_tuple) AS session_paths
           FROM
             (SELECT person_id AS person_id,
                     groupArray(timestamp) AS timing_list,
                     groupArray(path_item) AS path_list
              FROM
                (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
                        events__pdi.person_id AS person_id,
                        ifNull(if(equals(events.event, '$screen'), replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$screen_name'), ''), 'null'), '^"|"$', ''), if(equals(events.event, '$pageview'), replaceRegexpAll(ifNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$current_url'), ''), 'null'), '^"|"$', ''), ''), '(.)/$', '\\1'), events.event)), '') AS path_item_ungrouped,
                        NULL AS groupings,
                        multiMatchAnyIndex(path_item_ungrouped, NULL) AS group_index,
                        (if(ifNull(greater(group_index, 0), 0), groupings[group_index], path_item_ungrouped) AS path_item) AS path_item
                 FROM events
                 INNER JOIN
                   (SELECT argMax(person_distinct_id2.person_id, person_distinct_id2.version) AS person_id,
                           person_distinct_id2.distinct_id AS distinct_id
                    FROM person_distinct_id2
                    WHERE equals(person_distinct_id2.team_id, 2)
                    GROUP BY person_distinct_id2.distinct_id
                    HAVING ifNull(equals(argMax(person_distinct_id2.is_deleted, person_distinct_id2.version), 0), 0)) AS events__pdi ON equals(events.distinct_id, events__pdi.distinct_id)
                 WHERE and(equals(events.team_id, 2), and(greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2012-01-01 00:00:00', 6, 'UTC')))), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), assumeNotNull(parseDateTime64BestEffortOrNull('2023-05-23 23:59:59', 6, 'UTC')))))
                 ORDER BY events__pdi.person_id ASC, toTimeZone(events.timestamp, 'UTC') ASC)
              GROUP BY person_id) ARRAY
           JOIN session_paths AS path_time_tuple,
                arrayEnumerate(session_paths) AS session_index) ARRAY
        JOIN limited_path_timings AS joined_path_tuple,
             arrayEnumerate(limited_path_timings) AS event_in_session_index))
  WHERE isNotNull(source_event)
  GROUP BY source_event,
           target_event
  ORDER BY event_count DESC,
           source_event ASC,
           target_event ASC
  LIMIT 50 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1
  '''
# ---
# name: TestClickhousePaths.test_start_and_end
  '''
  SELECT last_path_key AS source_event,
         path_key AS target_event,
         count(*) AS event_count,
         avg(conversion_time) AS average_conversion_time
  FROM
    (SELECT person_id AS person_id,
            path AS path,
                    conversion_time AS conversion_time,
                    event_in_session_index AS event_in_session_index,
                    concat(ifNull(toString(event_in_session_index), ''), '_', ifNull(toString(path), '')) AS path_key,
                    if(ifNull(greater(event_in_session_index, 1), 0), concat(ifNull(toString(minus(event_in_session_index, 1)), ''), '_', ifNull(toString(prev_path), '')), NULL) AS last_path_key,
                    path_dropoff_key AS path_dropoff_key
     FROM
       (SELECT person_id AS person_id,
               joined_path_tuple.1 AS path,
               joined_path_tuple.2 AS conversion_time,
               joined_path_tuple.3 AS prev_path,
               event_in_session_index,
               session_index AS session_index,
               arrayPopFront(arrayPushBack(path_basic, '')) AS path_basic_0,
               arrayMap((x, y) -> if(ifNull(equals(x, y), isNull(x)
                                            and isNull(y)), 0, 1), path_basic, path_basic_0) AS mapping,
               arrayFilter((x, y) -> y, time, mapping) AS timings,
               arrayFilter((x, y) -> y, path_basic, mapping) AS compact_path,
               indexOf(compact_path, '/about') AS target_index,
               indexOf(compact_path, '/5') AS start_target_index,
               if(ifNull(greater(start_target_index, 0), 0), arraySlice(compact_path, start_target_index), compact_path) AS start_filtered_path,
               indexOf(start_filtered_path, '/about') AS end_target_index,
               if(ifNull(greater(end_target_index, 0), 0), arrayResize(start_filtered_path, end_target_index), start_filtered_path) AS filtered_path,
               if(ifNull(greater(length(filtered_path), 5), 0), arrayConcat(arraySlice(filtered_path, 1, intDiv(5, 2)), ['...'], arraySlice(filtered_path, multiply(-1, intDiv(5, 2)), intDiv(5, 2))), filtered_path) AS limited_path,
               if(ifNull(greater(start_target_index, 0), 0), arraySlice(timings, start_target_index), timings) AS start_filtered_timings,
               if(ifNull(greater(end_target_index, 0), 0), arrayResize(start_filtered_timings, end_target_index), start_filtered_timings) AS filtered_timings,
               if(ifNull(greater(length(filtered_timings), 5), 0), arrayConcat(arraySlice(filtered_timings, 1, intDiv(5, 2)), [filtered_timings[plus(1, intDiv(5, 2))]], arraySlice(filtered_timings, multiply(-1, intDiv(5, 2)), intDiv(5, 2))), filtered_timings) AS limited_timings,
               arrayDifference(limited_timings) AS timings_diff,
               concat(ifNull(toString(length(limited_path)), ''), '_', ifNull(toString(limited_path[-1]), '')) AS path_dropoff_key,
               arrayZip(limited_path, timings_diff, arrayPopBack(arrayPushFront(limited_path, ''))) AS limited_path_timings
        FROM
          (SELECT person_id AS person_id,
                  path_time_tuple.1 AS path_basic,
                  path_time_tuple.2 AS time,
                  session_index,
                  arrayZip(path_list, timing_list, arrayDifference(timing_list)) AS paths_tuple,
                  arraySplit(x -> if(ifNull(less(x.3, 1800), 0), 0, 1), paths_tuple) AS session_paths
           FROM
             (SELECT person_id AS person_id,
                     groupArray(timestamp) AS timing_list,
                     groupArray(path_item) AS path_list
              FROM
                (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
                        events__pdi.person_id AS person_id,
                        ifNull(if(equals(events.event, '$pageview'), replaceRegexpAll(ifNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$current_url'), ''), 'null'), '^"|"$', ''), ''), '(.)/$', '\\1'), events.event), '') AS path_item_ungrouped,
                        NULL AS groupings,
                        multiMatchAnyIndex(path_item_ungrouped, NULL) AS group_index,
                        (if(ifNull(greater(group_index, 0), 0), groupings[group_index], path_item_ungrouped) AS path_item) AS path_item
                 FROM events
                 INNER JOIN
                   (SELECT argMax(person_distinct_id2.person_id, person_distinct_id2.version) AS person_id,
                           person_distinct_id2.distinct_id AS distinct_id
                    FROM person_distinct_id2
                    WHERE equals(person_distinct_id2.team_id, 2)
                    GROUP BY person_distinct_id2.distinct_id
                    HAVING ifNull(equals(argMax(person_distinct_id2.is_deleted, person_distinct_id2.version), 0), 0)) AS events__pdi ON equals(events.distinct_id, events__pdi.distinct_id)
                 WHERE and(equals(events.team_id, 2), and(greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2012-05-01 00:00:00', 6, 'UTC')))), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), assumeNotNull(parseDateTime64BestEffortOrNull('2021-05-07 23:59:59', 6, 'UTC')))), equals(events.event, '$pageview'))
                 ORDER BY events__pdi.person_id ASC, toTimeZone(events.timestamp, 'UTC') ASC)
              GROUP BY person_id) ARRAY
           JOIN session_paths AS path_time_tuple,
                arrayEnumerate(session_paths) AS session_index) ARRAY
        JOIN limited_path_timings AS joined_path_tuple,
             arrayEnumerate(limited_path_timings) AS event_in_session_index
        WHERE and(ifNull(greater(start_target_index, 0), 0), ifNull(greater(end_target_index, 0), 0))))
  WHERE isNotNull(source_event)
  GROUP BY source_event,
           target_event
  ORDER BY event_count DESC,
           source_event ASC,
           target_event ASC
  LIMIT 50 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1
  '''
# ---
# name: TestClickhousePaths.test_start_and_end.1
  '''
  SELECT persons.id AS id
  FROM
    (SELECT person.id AS id
     FROM person
     WHERE equals(person.team_id, 2)
     GROUP BY person.id
     HAVING ifNull(equals(argMax(person.is_deleted, person.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS persons
  INNER JOIN
    (SELECT person_id AS actor_id,
            groupUniqArray(100)(tuple(timestamp, uuid, session_id, window_id)) AS matching_events,
            count(*) AS event_count
     FROM
       (SELECT person_id AS person_id,
               path AS path,
                       conversion_time AS conversion_time,
                       event_in_session_index AS event_in_session_index,
                       concat(ifNull(toString(event_in_session_index), ''), '_', ifNull(toString(path), '')) AS path_key,
                       if(ifNull(greater(event_in_session_index, 1), 0), concat(ifNull(toString(minus(event_in_session_index, 1)), ''), '_', ifNull(toString(prev_path), '')), NULL) AS last_path_key,
                       path_dropoff_key AS path_dropoff_key,
                       final_uuid AS uuid,
                       final_timestamp AS timestamp,
                       final_session_id AS session_id,
                       final_window_id AS window_id
        FROM
          (SELECT person_id AS person_id,
                  joined_path_tuple.1 AS path,
                  joined_path_tuple.2 AS conversion_time,
                  joined_path_tuple.3 AS prev_path,
                  event_in_session_index,
                  session_index AS session_index,
                  arrayPopFront(arrayPushBack(path_basic, '')) AS path_basic_0,
                  arrayMap((x, y) -> if(ifNull(equals(x, y), isNull(x)
                                               and isNull(y)), 0, 1), path_basic, path_basic_0) AS mapping,
                  arrayFilter((x, y) -> y, time, mapping) AS timings,
                  arrayFilter((x, y) -> y, path_basic, mapping) AS compact_path,
                  indexOf(compact_path, '/about') AS target_index,
                  joined_path_tuple.4 AS final_uuid,
                  joined_path_tuple.5 AS final_timestamp,
                  joined_path_tuple.6 AS final_session_id,
                  joined_path_tuple.7 AS final_window_id,
                  arrayFilter((x, y) -> y, uuid_items, mapping) AS uuid,
                  arrayFilter((x, y) -> y, timestamp_items, mapping) AS timestamp,
                  arrayFilter((x, y) -> y, session_id_items, mapping) AS session_id,
                  arrayFilter((x, y) -> y, window_id_items, mapping) AS window_id,
                  indexOf(compact_path, '/5') AS start_target_index,
                  if(ifNull(greater(start_target_index, 0), 0), arraySlice(compact_path, start_target_index), compact_path) AS start_filtered_path,
                  indexOf(start_filtered_path, '/about') AS end_target_index,
                  if(ifNull(greater(end_target_index, 0), 0), arrayResize(start_filtered_path, end_target_index), start_filtered_path) AS filtered_path,
                  if(ifNull(greater(length(filtered_path), 5), 0), arrayConcat(arraySlice(filtered_path, 1, intDiv(5, 2)), ['...'], arraySlice(filtered_path, multiply(-1, intDiv(5, 2)), intDiv(5, 2))), filtered_path) AS limited_path,
                  if(ifNull(greater(start_target_index, 0), 0), arraySlice(timings, start_target_index), timings) AS start_filtered_timings,
                  if(ifNull(greater(end_target_index, 0), 0), arrayResize(start_filtered_timings, end_target_index), start_filtered_timings) AS filtered_timings,
                  if(ifNull(greater(length(filtered_timings), 5), 0), arrayConcat(arraySlice(filtered_timings, 1, intDiv(5, 2)), [filtered_timings[plus(1, intDiv(5, 2))]], arraySlice(filtered_timings, multiply(-1, intDiv(5, 2)), intDiv(5, 2))), filtered_timings) AS limited_timings,
                  if(ifNull(greater(start_target_index, 0), 0), arraySlice(uuid, start_target_index), uuid) AS start_filtered_uuid,
                  if(ifNull(greater(end_target_index, 0), 0), arrayResize(start_filtered_uuid, end_target_index), start_filtered_uuid) AS filtered_uuid,
                  if(ifNull(greater(length(filtered_uuid), 5), 0), arrayConcat(arraySlice(filtered_uuid, 1, intDiv(5, 2)), [filtered_uuid[plus(1, intDiv(5, 2))]], arraySlice(filtered_uuid, multiply(-1, intDiv(5, 2)), intDiv(5, 2))), filtered_uuid) AS limited_uuid,
                  if(ifNull(greater(start_target_index, 0), 0), arraySlice(timestamp, start_target_index), timestamp) AS start_filtered_timestamp,
                  if(ifNull(greater(end_target_index, 0), 0), arrayResize(start_filtered_timestamp, end_target_index), start_filtered_timestamp) AS filtered_timestamp,
                  if(ifNull(greater(length(filtered_timestamp), 5), 0), arrayConcat(arraySlice(filtered_timestamp, 1, intDiv(5, 2)), [filtered_timestamp[plus(1, intDiv(5, 2))]], arraySlice(filtered_timestamp, multiply(-1, intDiv(5, 2)), intDiv(5, 2))), filtered_timestamp) AS limited_timestamp,
                  if(ifNull(greater(start_target_index, 0), 0), arraySlice(session_id, start_target_index), session_id) AS start_filtered_session_id,
                  if(ifNull(greater(end_target_index, 0), 0), arrayResize(start_filtered_session_id, end_target_index), start_filtered_session_id) AS filtered_session_id,
                  if(ifNull(greater(length(filtered_session_id), 5), 0), arrayConcat(arraySlice(filtered_session_id, 1, intDiv(5, 2)), [filtered_session_id[plus(1, intDiv(5, 2))]], arraySlice(filtered_session_id, multiply(-1, intDiv(5, 2)), intDiv(5, 2))), filtered_session_id) AS limited_session_id,
                  if(ifNull(greater(start_target_index, 0), 0), arraySlice(window_id, start_target_index), window_id) AS start_filtered_window_id,
                  if(ifNull(greater(end_target_index, 0), 0), arrayResize(start_filtered_window_id, end_target_index), start_filtered_window_id) AS filtered_window_id,
                  if(ifNull(greater(length(filtered_window_id), 5), 0), arrayConcat(arraySlice(filtered_window_id, 1, intDiv(5, 2)), [filtered_window_id[plus(1, intDiv(5, 2))]], arraySlice(filtered_window_id, multiply(-1, intDiv(5, 2)), intDiv(5, 2))), filtered_window_id) AS limited_window_id,
                  arrayDifference(limited_timings) AS timings_diff,
                  concat(ifNull(toString(length(limited_path)), ''), '_', ifNull(toString(limited_path[-1]), '')) AS path_dropoff_key,
                  arrayZip(limited_path, timings_diff, arrayPopBack(arrayPushFront(limited_path, '')), limited_uuid, limited_timestamp, limited_session_id, limited_window_id) AS limited_path_timings
           FROM
             (SELECT person_id AS person_id,
                     path_time_tuple.1 AS path_basic,
                     path_time_tuple.2 AS time,
                     session_index,
                     arrayZip(path_list, timing_list, arrayDifference(timing_list), uuid_list, timestamp_list, session_id_list, window_id_list) AS paths_tuple,
                     arraySplit(x -> if(ifNull(less(x.3, 1800), 0), 0, 1), paths_tuple) AS session_paths,
                     path_time_tuple.4 AS uuid_items,
                     path_time_tuple.5 AS timestamp_items,
                     path_time_tuple.6 AS session_id_items,
                     path_time_tuple.7 AS window_id_items
              FROM
                (SELECT person_id AS person_id,
                        groupArray(timestamp) AS timing_list,
                        groupArray(path_item) AS path_list,
                        groupArray(uuid) AS uuid_list,
                        groupArray(timestamp) AS timestamp_list,
                        groupArray(session_id) AS session_id_list,
                        groupArray(window_id) AS window_id_list
                 FROM
                   (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
                           events__pdi.person_id AS person_id,
                           ifNull(if(equals(events.event, '$pageview'), replaceRegexpAll(ifNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$current_url'), ''), 'null'), '^"|"$', ''), ''), '(.)/$', '\\1'), events.event), '') AS path_item_ungrouped,
                           events.uuid AS uuid,
                           toTimeZone(events.timestamp, 'UTC') AS timestamp,
                           ifNull(nullIf(nullIf(events.`$session_id`, ''), 'null'), '') AS session_id,
                           ifNull(nullIf(nullIf(events.`$window_id`, ''), 'null'), '') AS window_id,
                           NULL AS groupings,
                           multiMatchAnyIndex(path_item_ungrouped, NULL) AS group_index,
                           (if(ifNull(greater(group_index, 0), 0), groupings[group_index], path_item_ungrouped) AS path_item) AS path_item
                    FROM events
                    INNER JOIN
                      (SELECT argMax(person_distinct_id2.person_id, person_distinct_id2.version) AS person_id,
                              person_distinct_id2.distinct_id AS distinct_id
                       FROM person_distinct_id2
                       WHERE equals(person_distinct_id2.team_id, 2)
                       GROUP BY person_distinct_id2.distinct_id
                       HAVING ifNull(equals(argMax(person_distinct_id2.is_deleted, person_distinct_id2.version), 0), 0)) AS events__pdi ON equals(events.distinct_id, events__pdi.distinct_id)
                    WHERE and(equals(events.team_id, 2), and(greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2012-05-01 00:00:00', 6, 'UTC')))), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), assumeNotNull(parseDateTime64BestEffortOrNull('2021-05-07 23:59:59', 6, 'UTC')))), equals(events.event, '$pageview'))
                    ORDER BY events__pdi.person_id ASC, toTimeZone(events.timestamp, 'UTC') ASC)
                 GROUP BY person_id) ARRAY
              JOIN session_paths AS path_time_tuple,
                   arrayEnumerate(session_paths) AS session_index) ARRAY
           JOIN limited_path_timings AS joined_path_tuple,
                arrayEnumerate(limited_path_timings) AS event_in_session_index
           WHERE and(ifNull(greater(start_target_index, 0), 0), ifNull(greater(end_target_index, 0), 0))))
     WHERE and(ifNull(equals(last_path_key, '1_/5'), 0), ifNull(equals(path_key, '2_/about'), 0))
     GROUP BY person_id) AS source ON equals(persons.id, source.actor_id)
  ORDER BY persons.id ASC
  LIMIT 101
  OFFSET 0 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1
  '''
# ---
# name: TestClickhousePaths.test_start_and_end.2
  '''
  SELECT last_path_key AS source_event,
         path_key AS target_event,
         count(*) AS event_count,
         avg(conversion_time) AS average_conversion_time
  FROM
    (SELECT person_id AS person_id,
            path AS path,
                    conversion_time AS conversion_time,
                    event_in_session_index AS event_in_session_index,
                    concat(ifNull(toString(event_in_session_index), ''), '_', ifNull(toString(path), '')) AS path_key,
                    if(ifNull(greater(event_in_session_index, 1), 0), concat(ifNull(toString(minus(event_in_session_index, 1)), ''), '_', ifNull(toString(prev_path), '')), NULL) AS last_path_key,
                    path_dropoff_key AS path_dropoff_key
     FROM
       (SELECT person_id AS person_id,
               joined_path_tuple.1 AS path,
               joined_path_tuple.2 AS conversion_time,
               joined_path_tuple.3 AS prev_path,
               event_in_session_index,
               session_index AS session_index,
               arrayPopFront(arrayPushBack(path_basic, '')) AS path_basic_0,
               arrayMap((x, y) -> if(ifNull(equals(x, y), isNull(x)
                                            and isNull(y)), 0, 1), path_basic, path_basic_0) AS mapping,
               arrayFilter((x, y) -> y, time, mapping) AS timings,
               arrayFilter((x, y) -> y, path_basic, mapping) AS compact_path,
               indexOf(compact_path, '/about') AS target_index,
               indexOf(compact_path, '/2') AS start_target_index,
               if(ifNull(greater(start_target_index, 0), 0), arraySlice(compact_path, start_target_index), compact_path) AS start_filtered_path,
               indexOf(start_filtered_path, '/about') AS end_target_index,
               if(ifNull(greater(end_target_index, 0), 0), arrayResize(start_filtered_path, end_target_index), start_filtered_path) AS filtered_path,
               if(ifNull(greater(length(filtered_path), 4), 0), arrayConcat(arraySlice(filtered_path, 1, intDiv(4, 2)), ['...'], arraySlice(filtered_path, multiply(-1, intDiv(4, 2)), intDiv(4, 2))), filtered_path) AS limited_path,
               if(ifNull(greater(start_target_index, 0), 0), arraySlice(timings, start_target_index), timings) AS start_filtered_timings,
               if(ifNull(greater(end_target_index, 0), 0), arrayResize(start_filtered_timings, end_target_index), start_filtered_timings) AS filtered_timings,
               if(ifNull(greater(length(filtered_timings), 4), 0), arrayConcat(arraySlice(filtered_timings, 1, intDiv(4, 2)), [filtered_timings[plus(1, intDiv(4, 2))]], arraySlice(filtered_timings, multiply(-1, intDiv(4, 2)), intDiv(4, 2))), filtered_timings) AS limited_timings,
               arrayDifference(limited_timings) AS timings_diff,
               concat(ifNull(toString(length(limited_path)), ''), '_', ifNull(toString(limited_path[-1]), '')) AS path_dropoff_key,
               arrayZip(limited_path, timings_diff, arrayPopBack(arrayPushFront(limited_path, ''))) AS limited_path_timings
        FROM
          (SELECT person_id AS person_id,
                  path_time_tuple.1 AS path_basic,
                  path_time_tuple.2 AS time,
                  session_index,
                  arrayZip(path_list, timing_list, arrayDifference(timing_list)) AS paths_tuple,
                  arraySplit(x -> if(ifNull(less(x.3, 1800), 0), 0, 1), paths_tuple) AS session_paths
           FROM
             (SELECT person_id AS person_id,
                     groupArray(timestamp) AS timing_list,
                     groupArray(path_item) AS path_list
              FROM
                (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
                        events__pdi.person_id AS person_id,
                        ifNull(if(equals(events.event, '$pageview'), replaceRegexpAll(ifNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$current_url'), ''), 'null'), '^"|"$', ''), ''), '(.)/$', '\\1'), events.event), '') AS path_item_ungrouped,
                        NULL AS groupings,
                        multiMatchAnyIndex(path_item_ungrouped, NULL) AS group_index,
                        (if(ifNull(greater(group_index, 0), 0), groupings[group_index], path_item_ungrouped) AS path_item) AS path_item
                 FROM events
                 INNER JOIN
                   (SELECT argMax(person_distinct_id2.person_id, person_distinct_id2.version) AS person_id,
                           person_distinct_id2.distinct_id AS distinct_id
                    FROM person_distinct_id2
                    WHERE equals(person_distinct_id2.team_id, 2)
                    GROUP BY person_distinct_id2.distinct_id
                    HAVING ifNull(equals(argMax(person_distinct_id2.is_deleted, person_distinct_id2.version), 0), 0)) AS events__pdi ON equals(events.distinct_id, events__pdi.distinct_id)
                 WHERE and(equals(events.team_id, 2), and(greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2012-05-01 00:00:00', 6, 'UTC')))), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), assumeNotNull(parseDateTime64BestEffortOrNull('2021-05-07 23:59:59', 6, 'UTC')))), equals(events.event, '$pageview'))
                 ORDER BY events__pdi.person_id ASC, toTimeZone(events.timestamp, 'UTC') ASC)
              GROUP BY person_id) ARRAY
           JOIN session_paths AS path_time_tuple,
                arrayEnumerate(session_paths) AS session_index) ARRAY
        JOIN limited_path_timings AS joined_path_tuple,
             arrayEnumerate(limited_path_timings) AS event_in_session_index
        WHERE and(ifNull(greater(start_target_index, 0), 0), ifNull(greater(end_target_index, 0), 0))))
  WHERE isNotNull(source_event)
  GROUP BY source_event,
           target_event
  ORDER BY event_count DESC,
           source_event ASC,
           target_event ASC
  LIMIT 50 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1
  '''
# ---
# name: TestClickhousePaths.test_start_and_end.3
  '''
  SELECT persons.id AS id
  FROM
    (SELECT person.id AS id
     FROM person
     WHERE equals(person.team_id, 2)
     GROUP BY person.id
     HAVING ifNull(equals(argMax(person.is_deleted, person.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS persons
  INNER JOIN
    (SELECT person_id AS actor_id,
            groupUniqArray(100)(tuple(timestamp, uuid, session_id, window_id)) AS matching_events,
            count(*) AS event_count
     FROM
       (SELECT person_id AS person_id,
               path AS path,
                       conversion_time AS conversion_time,
                       event_in_session_index AS event_in_session_index,
                       concat(ifNull(toString(event_in_session_index), ''), '_', ifNull(toString(path), '')) AS path_key,
                       if(ifNull(greater(event_in_session_index, 1), 0), concat(ifNull(toString(minus(event_in_session_index, 1)), ''), '_', ifNull(toString(prev_path), '')), NULL) AS last_path_key,
                       path_dropoff_key AS path_dropoff_key,
                       final_uuid AS uuid,
                       final_timestamp AS timestamp,
                       final_session_id AS session_id,
                       final_window_id AS window_id
        FROM
          (SELECT person_id AS person_id,
                  joined_path_tuple.1 AS path,
                  joined_path_tuple.2 AS conversion_time,
                  joined_path_tuple.3 AS prev_path,
                  event_in_session_index,
                  session_index AS session_index,
                  arrayPopFront(arrayPushBack(path_basic, '')) AS path_basic_0,
                  arrayMap((x, y) -> if(ifNull(equals(x, y), isNull(x)
                                               and isNull(y)), 0, 1), path_basic, path_basic_0) AS mapping,
                  arrayFilter((x, y) -> y, time, mapping) AS timings,
                  arrayFilter((x, y) -> y, path_basic, mapping) AS compact_path,
                  indexOf(compact_path, '/about') AS target_index,
                  joined_path_tuple.4 AS final_uuid,
                  joined_path_tuple.5 AS final_timestamp,
                  joined_path_tuple.6 AS final_session_id,
                  joined_path_tuple.7 AS final_window_id,
                  arrayFilter((x, y) -> y, uuid_items, mapping) AS uuid,
                  arrayFilter((x, y) -> y, timestamp_items, mapping) AS timestamp,
                  arrayFilter((x, y) -> y, session_id_items, mapping) AS session_id,
                  arrayFilter((x, y) -> y, window_id_items, mapping) AS window_id,
                  indexOf(compact_path, '/2') AS start_target_index,
                  if(ifNull(greater(start_target_index, 0), 0), arraySlice(compact_path, start_target_index), compact_path) AS start_filtered_path,
                  indexOf(start_filtered_path, '/about') AS end_target_index,
                  if(ifNull(greater(end_target_index, 0), 0), arrayResize(start_filtered_path, end_target_index), start_filtered_path) AS filtered_path,
                  if(ifNull(greater(length(filtered_path), 4), 0), arrayConcat(arraySlice(filtered_path, 1, intDiv(4, 2)), ['...'], arraySlice(filtered_path, multiply(-1, intDiv(4, 2)), intDiv(4, 2))), filtered_path) AS limited_path,
                  if(ifNull(greater(start_target_index, 0), 0), arraySlice(timings, start_target_index), timings) AS start_filtered_timings,
                  if(ifNull(greater(end_target_index, 0), 0), arrayResize(start_filtered_timings, end_target_index), start_filtered_timings) AS filtered_timings,
                  if(ifNull(greater(length(filtered_timings), 4), 0), arrayConcat(arraySlice(filtered_timings, 1, intDiv(4, 2)), [filtered_timings[plus(1, intDiv(4, 2))]], arraySlice(filtered_timings, multiply(-1, intDiv(4, 2)), intDiv(4, 2))), filtered_timings) AS limited_timings,
                  if(ifNull(greater(start_target_index, 0), 0), arraySlice(uuid, start_target_index), uuid) AS start_filtered_uuid,
                  if(ifNull(greater(end_target_index, 0), 0), arrayResize(start_filtered_uuid, end_target_index), start_filtered_uuid) AS filtered_uuid,
                  if(ifNull(greater(length(filtered_uuid), 4), 0), arrayConcat(arraySlice(filtered_uuid, 1, intDiv(4, 2)), [filtered_uuid[plus(1, intDiv(4, 2))]], arraySlice(filtered_uuid, multiply(-1, intDiv(4, 2)), intDiv(4, 2))), filtered_uuid) AS limited_uuid,
                  if(ifNull(greater(start_target_index, 0), 0), arraySlice(timestamp, start_target_index), timestamp) AS start_filtered_timestamp,
                  if(ifNull(greater(end_target_index, 0), 0), arrayResize(start_filtered_timestamp, end_target_index), start_filtered_timestamp) AS filtered_timestamp,
                  if(ifNull(greater(length(filtered_timestamp), 4), 0), arrayConcat(arraySlice(filtered_timestamp, 1, intDiv(4, 2)), [filtered_timestamp[plus(1, intDiv(4, 2))]], arraySlice(filtered_timestamp, multiply(-1, intDiv(4, 2)), intDiv(4, 2))), filtered_timestamp) AS limited_timestamp,
                  if(ifNull(greater(start_target_index, 0), 0), arraySlice(session_id, start_target_index), session_id) AS start_filtered_session_id,
                  if(ifNull(greater(end_target_index, 0), 0), arrayResize(start_filtered_session_id, end_target_index), start_filtered_session_id) AS filtered_session_id,
                  if(ifNull(greater(length(filtered_session_id), 4), 0), arrayConcat(arraySlice(filtered_session_id, 1, intDiv(4, 2)), [filtered_session_id[plus(1, intDiv(4, 2))]], arraySlice(filtered_session_id, multiply(-1, intDiv(4, 2)), intDiv(4, 2))), filtered_session_id) AS limited_session_id,
                  if(ifNull(greater(start_target_index, 0), 0), arraySlice(window_id, start_target_index), window_id) AS start_filtered_window_id,
                  if(ifNull(greater(end_target_index, 0), 0), arrayResize(start_filtered_window_id, end_target_index), start_filtered_window_id) AS filtered_window_id,
                  if(ifNull(greater(length(filtered_window_id), 4), 0), arrayConcat(arraySlice(filtered_window_id, 1, intDiv(4, 2)), [filtered_window_id[plus(1, intDiv(4, 2))]], arraySlice(filtered_window_id, multiply(-1, intDiv(4, 2)), intDiv(4, 2))), filtered_window_id) AS limited_window_id,
                  arrayDifference(limited_timings) AS timings_diff,
                  concat(ifNull(toString(length(limited_path)), ''), '_', ifNull(toString(limited_path[-1]), '')) AS path_dropoff_key,
                  arrayZip(limited_path, timings_diff, arrayPopBack(arrayPushFront(limited_path, '')), limited_uuid, limited_timestamp, limited_session_id, limited_window_id) AS limited_path_timings
           FROM
             (SELECT person_id AS person_id,
                     path_time_tuple.1 AS path_basic,
                     path_time_tuple.2 AS time,
                     session_index,
                     arrayZip(path_list, timing_list, arrayDifference(timing_list), uuid_list, timestamp_list, session_id_list, window_id_list) AS paths_tuple,
                     arraySplit(x -> if(ifNull(less(x.3, 1800), 0), 0, 1), paths_tuple) AS session_paths,
                     path_time_tuple.4 AS uuid_items,
                     path_time_tuple.5 AS timestamp_items,
                     path_time_tuple.6 AS session_id_items,
                     path_time_tuple.7 AS window_id_items
              FROM
                (SELECT person_id AS person_id,
                        groupArray(timestamp) AS timing_list,
                        groupArray(path_item) AS path_list,
                        groupArray(uuid) AS uuid_list,
                        groupArray(timestamp) AS timestamp_list,
                        groupArray(session_id) AS session_id_list,
                        groupArray(window_id) AS window_id_list
                 FROM
                   (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
                           events__pdi.person_id AS person_id,
                           ifNull(if(equals(events.event, '$pageview'), replaceRegexpAll(ifNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$current_url'), ''), 'null'), '^"|"$', ''), ''), '(.)/$', '\\1'), events.event), '') AS path_item_ungrouped,
                           events.uuid AS uuid,
                           toTimeZone(events.timestamp, 'UTC') AS timestamp,
                           ifNull(nullIf(nullIf(events.`$session_id`, ''), 'null'), '') AS session_id,
                           ifNull(nullIf(nullIf(events.`$window_id`, ''), 'null'), '') AS window_id,
                           NULL AS groupings,
                           multiMatchAnyIndex(path_item_ungrouped, NULL) AS group_index,
                           (if(ifNull(greater(group_index, 0), 0), groupings[group_index], path_item_ungrouped) AS path_item) AS path_item
                    FROM events
                    INNER JOIN
                      (SELECT argMax(person_distinct_id2.person_id, person_distinct_id2.version) AS person_id,
                              person_distinct_id2.distinct_id AS distinct_id
                       FROM person_distinct_id2
                       WHERE equals(person_distinct_id2.team_id, 2)
                       GROUP BY person_distinct_id2.distinct_id
                       HAVING ifNull(equals(argMax(person_distinct_id2.is_deleted, person_distinct_id2.version), 0), 0)) AS events__pdi ON equals(events.distinct_id, events__pdi.distinct_id)
                    WHERE and(equals(events.team_id, 2), and(greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2012-05-01 00:00:00', 6, 'UTC')))), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), assumeNotNull(parseDateTime64BestEffortOrNull('2021-05-07 23:59:59', 6, 'UTC')))), equals(events.event, '$pageview'))
                    ORDER BY events__pdi.person_id ASC, toTimeZone(events.timestamp, 'UTC') ASC)
                 GROUP BY person_id) ARRAY
              JOIN session_paths AS path_time_tuple,
                   arrayEnumerate(session_paths) AS session_index) ARRAY
           JOIN limited_path_timings AS joined_path_tuple,
                arrayEnumerate(limited_path_timings) AS event_in_session_index
           WHERE and(ifNull(greater(start_target_index, 0), 0), ifNull(greater(end_target_index, 0), 0))))
     WHERE and(ifNull(equals(last_path_key, '3_...'), 0), ifNull(equals(path_key, '4_/5'), 0))
     GROUP BY person_id) AS source ON equals(persons.id, source.actor_id)
  ORDER BY persons.id ASC
  LIMIT 101
  OFFSET 0 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1
  '''
# ---
# name: TestClickhousePaths.test_start_and_end_materialized
  '''
  SELECT last_path_key AS source_event,
         path_key AS target_event,
         count(*) AS event_count,
         avg(conversion_time) AS average_conversion_time
  FROM
    (SELECT person_id AS person_id,
            path AS path,
                    conversion_time AS conversion_time,
                    event_in_session_index AS event_in_session_index,
                    concat(ifNull(toString(event_in_session_index), ''), '_', ifNull(toString(path), '')) AS path_key,
                    if(ifNull(greater(event_in_session_index, 1), 0), concat(ifNull(toString(minus(event_in_session_index, 1)), ''), '_', ifNull(toString(prev_path), '')), NULL) AS last_path_key,
                    path_dropoff_key AS path_dropoff_key
     FROM
       (SELECT person_id AS person_id,
               joined_path_tuple.1 AS path,
               joined_path_tuple.2 AS conversion_time,
               joined_path_tuple.3 AS prev_path,
               event_in_session_index,
               session_index AS session_index,
               arrayPopFront(arrayPushBack(path_basic, '')) AS path_basic_0,
               arrayMap((x, y) -> if(ifNull(equals(x, y), isNull(x)
                                            and isNull(y)), 0, 1), path_basic, path_basic_0) AS mapping,
               arrayFilter((x, y) -> y, time, mapping) AS timings,
               arrayFilter((x, y) -> y, path_basic, mapping) AS compact_path,
               indexOf(compact_path, '/about') AS target_index,
               indexOf(compact_path, '/5') AS start_target_index,
               if(ifNull(greater(start_target_index, 0), 0), arraySlice(compact_path, start_target_index), compact_path) AS start_filtered_path,
               indexOf(start_filtered_path, '/about') AS end_target_index,
               if(ifNull(greater(end_target_index, 0), 0), arrayResize(start_filtered_path, end_target_index), start_filtered_path) AS filtered_path,
               if(ifNull(greater(length(filtered_path), 5), 0), arrayConcat(arraySlice(filtered_path, 1, intDiv(5, 2)), ['...'], arraySlice(filtered_path, multiply(-1, intDiv(5, 2)), intDiv(5, 2))), filtered_path) AS limited_path,
               if(ifNull(greater(start_target_index, 0), 0), arraySlice(timings, start_target_index), timings) AS start_filtered_timings,
               if(ifNull(greater(end_target_index, 0), 0), arrayResize(start_filtered_timings, end_target_index), start_filtered_timings) AS filtered_timings,
               if(ifNull(greater(length(filtered_timings), 5), 0), arrayConcat(arraySlice(filtered_timings, 1, intDiv(5, 2)), [filtered_timings[plus(1, intDiv(5, 2))]], arraySlice(filtered_timings, multiply(-1, intDiv(5, 2)), intDiv(5, 2))), filtered_timings) AS limited_timings,
               arrayDifference(limited_timings) AS timings_diff,
               concat(ifNull(toString(length(limited_path)), ''), '_', ifNull(toString(limited_path[-1]), '')) AS path_dropoff_key,
               arrayZip(limited_path, timings_diff, arrayPopBack(arrayPushFront(limited_path, ''))) AS limited_path_timings
        FROM
          (SELECT person_id AS person_id,
                  path_time_tuple.1 AS path_basic,
                  path_time_tuple.2 AS time,
                  session_index,
                  arrayZip(path_list, timing_list, arrayDifference(timing_list)) AS paths_tuple,
                  arraySplit(x -> if(ifNull(less(x.3, 1800), 0), 0, 1), paths_tuple) AS session_paths
           FROM
             (SELECT person_id AS person_id,
                     groupArray(timestamp) AS timing_list,
                     groupArray(path_item) AS path_list
              FROM
                (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
                        events__pdi.person_id AS person_id,
                        ifNull(if(equals(events.event, '$pageview'), replaceRegexpAll(ifNull(nullIf(nullIf(events.`mat_$current_url`, ''), 'null'), ''), '(.)/$', '\\1'), events.event), '') AS path_item_ungrouped,
                        NULL AS groupings,
                        multiMatchAnyIndex(path_item_ungrouped, NULL) AS group_index,
                        (if(ifNull(greater(group_index, 0), 0), groupings[group_index], path_item_ungrouped) AS path_item) AS path_item
                 FROM events
                 INNER JOIN
                   (SELECT argMax(person_distinct_id2.person_id, person_distinct_id2.version) AS person_id,
                           person_distinct_id2.distinct_id AS distinct_id
                    FROM person_distinct_id2
                    WHERE equals(person_distinct_id2.team_id, 2)
                    GROUP BY person_distinct_id2.distinct_id
                    HAVING ifNull(equals(argMax(person_distinct_id2.is_deleted, person_distinct_id2.version), 0), 0)) AS events__pdi ON equals(events.distinct_id, events__pdi.distinct_id)
                 WHERE and(equals(events.team_id, 2), and(greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2012-05-01 00:00:00', 6, 'UTC')))), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), assumeNotNull(parseDateTime64BestEffortOrNull('2021-05-07 23:59:59', 6, 'UTC')))), equals(events.event, '$pageview'))
                 ORDER BY events__pdi.person_id ASC, toTimeZone(events.timestamp, 'UTC') ASC)
              GROUP BY person_id) ARRAY
           JOIN session_paths AS path_time_tuple,
                arrayEnumerate(session_paths) AS session_index) ARRAY
        JOIN limited_path_timings AS joined_path_tuple,
             arrayEnumerate(limited_path_timings) AS event_in_session_index
        WHERE and(ifNull(greater(start_target_index, 0), 0), ifNull(greater(end_target_index, 0), 0))))
  WHERE isNotNull(source_event)
  GROUP BY source_event,
           target_event
  ORDER BY event_count DESC,
           source_event ASC,
           target_event ASC
  LIMIT 50 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1
  '''
# ---
# name: TestClickhousePaths.test_start_and_end_materialized.1
  '''
  SELECT persons.id AS id
  FROM
    (SELECT person.id AS id
     FROM person
     WHERE equals(person.team_id, 2)
     GROUP BY person.id
     HAVING ifNull(equals(argMax(person.is_deleted, person.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS persons
  INNER JOIN
    (SELECT person_id AS actor_id,
            groupUniqArray(100)(tuple(timestamp, uuid, session_id, window_id)) AS matching_events,
            count(*) AS event_count
     FROM
       (SELECT person_id AS person_id,
               path AS path,
                       conversion_time AS conversion_time,
                       event_in_session_index AS event_in_session_index,
                       concat(ifNull(toString(event_in_session_index), ''), '_', ifNull(toString(path), '')) AS path_key,
                       if(ifNull(greater(event_in_session_index, 1), 0), concat(ifNull(toString(minus(event_in_session_index, 1)), ''), '_', ifNull(toString(prev_path), '')), NULL) AS last_path_key,
                       path_dropoff_key AS path_dropoff_key,
                       final_uuid AS uuid,
                       final_timestamp AS timestamp,
                       final_session_id AS session_id,
                       final_window_id AS window_id
        FROM
          (SELECT person_id AS person_id,
                  joined_path_tuple.1 AS path,
                  joined_path_tuple.2 AS conversion_time,
                  joined_path_tuple.3 AS prev_path,
                  event_in_session_index,
                  session_index AS session_index,
                  arrayPopFront(arrayPushBack(path_basic, '')) AS path_basic_0,
                  arrayMap((x, y) -> if(ifNull(equals(x, y), isNull(x)
                                               and isNull(y)), 0, 1), path_basic, path_basic_0) AS mapping,
                  arrayFilter((x, y) -> y, time, mapping) AS timings,
                  arrayFilter((x, y) -> y, path_basic, mapping) AS compact_path,
                  indexOf(compact_path, '/about') AS target_index,
                  joined_path_tuple.4 AS final_uuid,
                  joined_path_tuple.5 AS final_timestamp,
                  joined_path_tuple.6 AS final_session_id,
                  joined_path_tuple.7 AS final_window_id,
                  arrayFilter((x, y) -> y, uuid_items, mapping) AS uuid,
                  arrayFilter((x, y) -> y, timestamp_items, mapping) AS timestamp,
                  arrayFilter((x, y) -> y, session_id_items, mapping) AS session_id,
                  arrayFilter((x, y) -> y, window_id_items, mapping) AS window_id,
                  indexOf(compact_path, '/5') AS start_target_index,
                  if(ifNull(greater(start_target_index, 0), 0), arraySlice(compact_path, start_target_index), compact_path) AS start_filtered_path,
                  indexOf(start_filtered_path, '/about') AS end_target_index,
                  if(ifNull(greater(end_target_index, 0), 0), arrayResize(start_filtered_path, end_target_index), start_filtered_path) AS filtered_path,
                  if(ifNull(greater(length(filtered_path), 5), 0), arrayConcat(arraySlice(filtered_path, 1, intDiv(5, 2)), ['...'], arraySlice(filtered_path, multiply(-1, intDiv(5, 2)), intDiv(5, 2))), filtered_path) AS limited_path,
                  if(ifNull(greater(start_target_index, 0), 0), arraySlice(timings, start_target_index), timings) AS start_filtered_timings,
                  if(ifNull(greater(end_target_index, 0), 0), arrayResize(start_filtered_timings, end_target_index), start_filtered_timings) AS filtered_timings,
                  if(ifNull(greater(length(filtered_timings), 5), 0), arrayConcat(arraySlice(filtered_timings, 1, intDiv(5, 2)), [filtered_timings[plus(1, intDiv(5, 2))]], arraySlice(filtered_timings, multiply(-1, intDiv(5, 2)), intDiv(5, 2))), filtered_timings) AS limited_timings,
                  if(ifNull(greater(start_target_index, 0), 0), arraySlice(uuid, start_target_index), uuid) AS start_filtered_uuid,
                  if(ifNull(greater(end_target_index, 0), 0), arrayResize(start_filtered_uuid, end_target_index), start_filtered_uuid) AS filtered_uuid,
                  if(ifNull(greater(length(filtered_uuid), 5), 0), arrayConcat(arraySlice(filtered_uuid, 1, intDiv(5, 2)), [filtered_uuid[plus(1, intDiv(5, 2))]], arraySlice(filtered_uuid, multiply(-1, intDiv(5, 2)), intDiv(5, 2))), filtered_uuid) AS limited_uuid,
                  if(ifNull(greater(start_target_index, 0), 0), arraySlice(timestamp, start_target_index), timestamp) AS start_filtered_timestamp,
                  if(ifNull(greater(end_target_index, 0), 0), arrayResize(start_filtered_timestamp, end_target_index), start_filtered_timestamp) AS filtered_timestamp,
                  if(ifNull(greater(length(filtered_timestamp), 5), 0), arrayConcat(arraySlice(filtered_timestamp, 1, intDiv(5, 2)), [filtered_timestamp[plus(1, intDiv(5, 2))]], arraySlice(filtered_timestamp, multiply(-1, intDiv(5, 2)), intDiv(5, 2))), filtered_timestamp) AS limited_timestamp,
                  if(ifNull(greater(start_target_index, 0), 0), arraySlice(session_id, start_target_index), session_id) AS start_filtered_session_id,
                  if(ifNull(greater(end_target_index, 0), 0), arrayResize(start_filtered_session_id, end_target_index), start_filtered_session_id) AS filtered_session_id,
                  if(ifNull(greater(length(filtered_session_id), 5), 0), arrayConcat(arraySlice(filtered_session_id, 1, intDiv(5, 2)), [filtered_session_id[plus(1, intDiv(5, 2))]], arraySlice(filtered_session_id, multiply(-1, intDiv(5, 2)), intDiv(5, 2))), filtered_session_id) AS limited_session_id,
                  if(ifNull(greater(start_target_index, 0), 0), arraySlice(window_id, start_target_index), window_id) AS start_filtered_window_id,
                  if(ifNull(greater(end_target_index, 0), 0), arrayResize(start_filtered_window_id, end_target_index), start_filtered_window_id) AS filtered_window_id,
                  if(ifNull(greater(length(filtered_window_id), 5), 0), arrayConcat(arraySlice(filtered_window_id, 1, intDiv(5, 2)), [filtered_window_id[plus(1, intDiv(5, 2))]], arraySlice(filtered_window_id, multiply(-1, intDiv(5, 2)), intDiv(5, 2))), filtered_window_id) AS limited_window_id,
                  arrayDifference(limited_timings) AS timings_diff,
                  concat(ifNull(toString(length(limited_path)), ''), '_', ifNull(toString(limited_path[-1]), '')) AS path_dropoff_key,
                  arrayZip(limited_path, timings_diff, arrayPopBack(arrayPushFront(limited_path, '')), limited_uuid, limited_timestamp, limited_session_id, limited_window_id) AS limited_path_timings
           FROM
             (SELECT person_id AS person_id,
                     path_time_tuple.1 AS path_basic,
                     path_time_tuple.2 AS time,
                     session_index,
                     arrayZip(path_list, timing_list, arrayDifference(timing_list), uuid_list, timestamp_list, session_id_list, window_id_list) AS paths_tuple,
                     arraySplit(x -> if(ifNull(less(x.3, 1800), 0), 0, 1), paths_tuple) AS session_paths,
                     path_time_tuple.4 AS uuid_items,
                     path_time_tuple.5 AS timestamp_items,
                     path_time_tuple.6 AS session_id_items,
                     path_time_tuple.7 AS window_id_items
              FROM
                (SELECT person_id AS person_id,
                        groupArray(timestamp) AS timing_list,
                        groupArray(path_item) AS path_list,
                        groupArray(uuid) AS uuid_list,
                        groupArray(timestamp) AS timestamp_list,
                        groupArray(session_id) AS session_id_list,
                        groupArray(window_id) AS window_id_list
                 FROM
                   (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
                           events__pdi.person_id AS person_id,
                           ifNull(if(equals(events.event, '$pageview'), replaceRegexpAll(ifNull(nullIf(nullIf(events.`mat_$current_url`, ''), 'null'), ''), '(.)/$', '\\1'), events.event), '') AS path_item_ungrouped,
                           events.uuid AS uuid,
                           toTimeZone(events.timestamp, 'UTC') AS timestamp,
                           ifNull(nullIf(nullIf(events.`$session_id`, ''), 'null'), '') AS session_id,
                           ifNull(nullIf(nullIf(events.`$window_id`, ''), 'null'), '') AS window_id,
                           NULL AS groupings,
                           multiMatchAnyIndex(path_item_ungrouped, NULL) AS group_index,
                           (if(ifNull(greater(group_index, 0), 0), groupings[group_index], path_item_ungrouped) AS path_item) AS path_item
                    FROM events
                    INNER JOIN
                      (SELECT argMax(person_distinct_id2.person_id, person_distinct_id2.version) AS person_id,
                              person_distinct_id2.distinct_id AS distinct_id
                       FROM person_distinct_id2
                       WHERE equals(person_distinct_id2.team_id, 2)
                       GROUP BY person_distinct_id2.distinct_id
                       HAVING ifNull(equals(argMax(person_distinct_id2.is_deleted, person_distinct_id2.version), 0), 0)) AS events__pdi ON equals(events.distinct_id, events__pdi.distinct_id)
                    WHERE and(equals(events.team_id, 2), and(greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2012-05-01 00:00:00', 6, 'UTC')))), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), assumeNotNull(parseDateTime64BestEffortOrNull('2021-05-07 23:59:59', 6, 'UTC')))), equals(events.event, '$pageview'))
                    ORDER BY events__pdi.person_id ASC, toTimeZone(events.timestamp, 'UTC') ASC)
                 GROUP BY person_id) ARRAY
              JOIN session_paths AS path_time_tuple,
                   arrayEnumerate(session_paths) AS session_index) ARRAY
           JOIN limited_path_timings AS joined_path_tuple,
                arrayEnumerate(limited_path_timings) AS event_in_session_index
           WHERE and(ifNull(greater(start_target_index, 0), 0), ifNull(greater(end_target_index, 0), 0))))
     WHERE and(ifNull(equals(last_path_key, '1_/5'), 0), ifNull(equals(path_key, '2_/about'), 0))
     GROUP BY person_id) AS source ON equals(persons.id, source.actor_id)
  ORDER BY persons.id ASC
  LIMIT 101
  OFFSET 0 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1
  '''
# ---
# name: TestClickhousePaths.test_start_and_end_materialized.2
  '''
  SELECT last_path_key AS source_event,
         path_key AS target_event,
         count(*) AS event_count,
         avg(conversion_time) AS average_conversion_time
  FROM
    (SELECT person_id AS person_id,
            path AS path,
                    conversion_time AS conversion_time,
                    event_in_session_index AS event_in_session_index,
                    concat(ifNull(toString(event_in_session_index), ''), '_', ifNull(toString(path), '')) AS path_key,
                    if(ifNull(greater(event_in_session_index, 1), 0), concat(ifNull(toString(minus(event_in_session_index, 1)), ''), '_', ifNull(toString(prev_path), '')), NULL) AS last_path_key,
                    path_dropoff_key AS path_dropoff_key
     FROM
       (SELECT person_id AS person_id,
               joined_path_tuple.1 AS path,
               joined_path_tuple.2 AS conversion_time,
               joined_path_tuple.3 AS prev_path,
               event_in_session_index,
               session_index AS session_index,
               arrayPopFront(arrayPushBack(path_basic, '')) AS path_basic_0,
               arrayMap((x, y) -> if(ifNull(equals(x, y), isNull(x)
                                            and isNull(y)), 0, 1), path_basic, path_basic_0) AS mapping,
               arrayFilter((x, y) -> y, time, mapping) AS timings,
               arrayFilter((x, y) -> y, path_basic, mapping) AS compact_path,
               indexOf(compact_path, '/about') AS target_index,
               indexOf(compact_path, '/2') AS start_target_index,
               if(ifNull(greater(start_target_index, 0), 0), arraySlice(compact_path, start_target_index), compact_path) AS start_filtered_path,
               indexOf(start_filtered_path, '/about') AS end_target_index,
               if(ifNull(greater(end_target_index, 0), 0), arrayResize(start_filtered_path, end_target_index), start_filtered_path) AS filtered_path,
               if(ifNull(greater(length(filtered_path), 4), 0), arrayConcat(arraySlice(filtered_path, 1, intDiv(4, 2)), ['...'], arraySlice(filtered_path, multiply(-1, intDiv(4, 2)), intDiv(4, 2))), filtered_path) AS limited_path,
               if(ifNull(greater(start_target_index, 0), 0), arraySlice(timings, start_target_index), timings) AS start_filtered_timings,
               if(ifNull(greater(end_target_index, 0), 0), arrayResize(start_filtered_timings, end_target_index), start_filtered_timings) AS filtered_timings,
               if(ifNull(greater(length(filtered_timings), 4), 0), arrayConcat(arraySlice(filtered_timings, 1, intDiv(4, 2)), [filtered_timings[plus(1, intDiv(4, 2))]], arraySlice(filtered_timings, multiply(-1, intDiv(4, 2)), intDiv(4, 2))), filtered_timings) AS limited_timings,
               arrayDifference(limited_timings) AS timings_diff,
               concat(ifNull(toString(length(limited_path)), ''), '_', ifNull(toString(limited_path[-1]), '')) AS path_dropoff_key,
               arrayZip(limited_path, timings_diff, arrayPopBack(arrayPushFront(limited_path, ''))) AS limited_path_timings
        FROM
          (SELECT person_id AS person_id,
                  path_time_tuple.1 AS path_basic,
                  path_time_tuple.2 AS time,
                  session_index,
                  arrayZip(path_list, timing_list, arrayDifference(timing_list)) AS paths_tuple,
                  arraySplit(x -> if(ifNull(less(x.3, 1800), 0), 0, 1), paths_tuple) AS session_paths
           FROM
             (SELECT person_id AS person_id,
                     groupArray(timestamp) AS timing_list,
                     groupArray(path_item) AS path_list
              FROM
                (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
                        events__pdi.person_id AS person_id,
                        ifNull(if(equals(events.event, '$pageview'), replaceRegexpAll(ifNull(nullIf(nullIf(events.`mat_$current_url`, ''), 'null'), ''), '(.)/$', '\\1'), events.event), '') AS path_item_ungrouped,
                        NULL AS groupings,
                        multiMatchAnyIndex(path_item_ungrouped, NULL) AS group_index,
                        (if(ifNull(greater(group_index, 0), 0), groupings[group_index], path_item_ungrouped) AS path_item) AS path_item
                 FROM events
                 INNER JOIN
                   (SELECT argMax(person_distinct_id2.person_id, person_distinct_id2.version) AS person_id,
                           person_distinct_id2.distinct_id AS distinct_id
                    FROM person_distinct_id2
                    WHERE equals(person_distinct_id2.team_id, 2)
                    GROUP BY person_distinct_id2.distinct_id
                    HAVING ifNull(equals(argMax(person_distinct_id2.is_deleted, person_distinct_id2.version), 0), 0)) AS events__pdi ON equals(events.distinct_id, events__pdi.distinct_id)
                 WHERE and(equals(events.team_id, 2), and(greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2012-05-01 00:00:00', 6, 'UTC')))), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), assumeNotNull(parseDateTime64BestEffortOrNull('2021-05-07 23:59:59', 6, 'UTC')))), equals(events.event, '$pageview'))
                 ORDER BY events__pdi.person_id ASC, toTimeZone(events.timestamp, 'UTC') ASC)
              GROUP BY person_id) ARRAY
           JOIN session_paths AS path_time_tuple,
                arrayEnumerate(session_paths) AS session_index) ARRAY
        JOIN limited_path_timings AS joined_path_tuple,
             arrayEnumerate(limited_path_timings) AS event_in_session_index
        WHERE and(ifNull(greater(start_target_index, 0), 0), ifNull(greater(end_target_index, 0), 0))))
  WHERE isNotNull(source_event)
  GROUP BY source_event,
           target_event
  ORDER BY event_count DESC,
           source_event ASC,
           target_event ASC
  LIMIT 50 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1
  '''
# ---
# name: TestClickhousePaths.test_start_and_end_materialized.3
  '''
  SELECT persons.id AS id
  FROM
    (SELECT person.id AS id
     FROM person
     WHERE equals(person.team_id, 2)
     GROUP BY person.id
     HAVING ifNull(equals(argMax(person.is_deleted, person.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS persons
  INNER JOIN
    (SELECT person_id AS actor_id,
            groupUniqArray(100)(tuple(timestamp, uuid, session_id, window_id)) AS matching_events,
            count(*) AS event_count
     FROM
       (SELECT person_id AS person_id,
               path AS path,
                       conversion_time AS conversion_time,
                       event_in_session_index AS event_in_session_index,
                       concat(ifNull(toString(event_in_session_index), ''), '_', ifNull(toString(path), '')) AS path_key,
                       if(ifNull(greater(event_in_session_index, 1), 0), concat(ifNull(toString(minus(event_in_session_index, 1)), ''), '_', ifNull(toString(prev_path), '')), NULL) AS last_path_key,
                       path_dropoff_key AS path_dropoff_key,
                       final_uuid AS uuid,
                       final_timestamp AS timestamp,
                       final_session_id AS session_id,
                       final_window_id AS window_id
        FROM
          (SELECT person_id AS person_id,
                  joined_path_tuple.1 AS path,
                  joined_path_tuple.2 AS conversion_time,
                  joined_path_tuple.3 AS prev_path,
                  event_in_session_index,
                  session_index AS session_index,
                  arrayPopFront(arrayPushBack(path_basic, '')) AS path_basic_0,
                  arrayMap((x, y) -> if(ifNull(equals(x, y), isNull(x)
                                               and isNull(y)), 0, 1), path_basic, path_basic_0) AS mapping,
                  arrayFilter((x, y) -> y, time, mapping) AS timings,
                  arrayFilter((x, y) -> y, path_basic, mapping) AS compact_path,
                  indexOf(compact_path, '/about') AS target_index,
                  joined_path_tuple.4 AS final_uuid,
                  joined_path_tuple.5 AS final_timestamp,
                  joined_path_tuple.6 AS final_session_id,
                  joined_path_tuple.7 AS final_window_id,
                  arrayFilter((x, y) -> y, uuid_items, mapping) AS uuid,
                  arrayFilter((x, y) -> y, timestamp_items, mapping) AS timestamp,
                  arrayFilter((x, y) -> y, session_id_items, mapping) AS session_id,
                  arrayFilter((x, y) -> y, window_id_items, mapping) AS window_id,
                  indexOf(compact_path, '/2') AS start_target_index,
                  if(ifNull(greater(start_target_index, 0), 0), arraySlice(compact_path, start_target_index), compact_path) AS start_filtered_path,
                  indexOf(start_filtered_path, '/about') AS end_target_index,
                  if(ifNull(greater(end_target_index, 0), 0), arrayResize(start_filtered_path, end_target_index), start_filtered_path) AS filtered_path,
                  if(ifNull(greater(length(filtered_path), 4), 0), arrayConcat(arraySlice(filtered_path, 1, intDiv(4, 2)), ['...'], arraySlice(filtered_path, multiply(-1, intDiv(4, 2)), intDiv(4, 2))), filtered_path) AS limited_path,
                  if(ifNull(greater(start_target_index, 0), 0), arraySlice(timings, start_target_index), timings) AS start_filtered_timings,
                  if(ifNull(greater(end_target_index, 0), 0), arrayResize(start_filtered_timings, end_target_index), start_filtered_timings) AS filtered_timings,
                  if(ifNull(greater(length(filtered_timings), 4), 0), arrayConcat(arraySlice(filtered_timings, 1, intDiv(4, 2)), [filtered_timings[plus(1, intDiv(4, 2))]], arraySlice(filtered_timings, multiply(-1, intDiv(4, 2)), intDiv(4, 2))), filtered_timings) AS limited_timings,
                  if(ifNull(greater(start_target_index, 0), 0), arraySlice(uuid, start_target_index), uuid) AS start_filtered_uuid,
                  if(ifNull(greater(end_target_index, 0), 0), arrayResize(start_filtered_uuid, end_target_index), start_filtered_uuid) AS filtered_uuid,
                  if(ifNull(greater(length(filtered_uuid), 4), 0), arrayConcat(arraySlice(filtered_uuid, 1, intDiv(4, 2)), [filtered_uuid[plus(1, intDiv(4, 2))]], arraySlice(filtered_uuid, multiply(-1, intDiv(4, 2)), intDiv(4, 2))), filtered_uuid) AS limited_uuid,
                  if(ifNull(greater(start_target_index, 0), 0), arraySlice(timestamp, start_target_index), timestamp) AS start_filtered_timestamp,
                  if(ifNull(greater(end_target_index, 0), 0), arrayResize(start_filtered_timestamp, end_target_index), start_filtered_timestamp) AS filtered_timestamp,
                  if(ifNull(greater(length(filtered_timestamp), 4), 0), arrayConcat(arraySlice(filtered_timestamp, 1, intDiv(4, 2)), [filtered_timestamp[plus(1, intDiv(4, 2))]], arraySlice(filtered_timestamp, multiply(-1, intDiv(4, 2)), intDiv(4, 2))), filtered_timestamp) AS limited_timestamp,
                  if(ifNull(greater(start_target_index, 0), 0), arraySlice(session_id, start_target_index), session_id) AS start_filtered_session_id,
                  if(ifNull(greater(end_target_index, 0), 0), arrayResize(start_filtered_session_id, end_target_index), start_filtered_session_id) AS filtered_session_id,
                  if(ifNull(greater(length(filtered_session_id), 4), 0), arrayConcat(arraySlice(filtered_session_id, 1, intDiv(4, 2)), [filtered_session_id[plus(1, intDiv(4, 2))]], arraySlice(filtered_session_id, multiply(-1, intDiv(4, 2)), intDiv(4, 2))), filtered_session_id) AS limited_session_id,
                  if(ifNull(greater(start_target_index, 0), 0), arraySlice(window_id, start_target_index), window_id) AS start_filtered_window_id,
                  if(ifNull(greater(end_target_index, 0), 0), arrayResize(start_filtered_window_id, end_target_index), start_filtered_window_id) AS filtered_window_id,
                  if(ifNull(greater(length(filtered_window_id), 4), 0), arrayConcat(arraySlice(filtered_window_id, 1, intDiv(4, 2)), [filtered_window_id[plus(1, intDiv(4, 2))]], arraySlice(filtered_window_id, multiply(-1, intDiv(4, 2)), intDiv(4, 2))), filtered_window_id) AS limited_window_id,
                  arrayDifference(limited_timings) AS timings_diff,
                  concat(ifNull(toString(length(limited_path)), ''), '_', ifNull(toString(limited_path[-1]), '')) AS path_dropoff_key,
                  arrayZip(limited_path, timings_diff, arrayPopBack(arrayPushFront(limited_path, '')), limited_uuid, limited_timestamp, limited_session_id, limited_window_id) AS limited_path_timings
           FROM
             (SELECT person_id AS person_id,
                     path_time_tuple.1 AS path_basic,
                     path_time_tuple.2 AS time,
                     session_index,
                     arrayZip(path_list, timing_list, arrayDifference(timing_list), uuid_list, timestamp_list, session_id_list, window_id_list) AS paths_tuple,
                     arraySplit(x -> if(ifNull(less(x.3, 1800), 0), 0, 1), paths_tuple) AS session_paths,
                     path_time_tuple.4 AS uuid_items,
                     path_time_tuple.5 AS timestamp_items,
                     path_time_tuple.6 AS session_id_items,
                     path_time_tuple.7 AS window_id_items
              FROM
                (SELECT person_id AS person_id,
                        groupArray(timestamp) AS timing_list,
                        groupArray(path_item) AS path_list,
                        groupArray(uuid) AS uuid_list,
                        groupArray(timestamp) AS timestamp_list,
                        groupArray(session_id) AS session_id_list,
                        groupArray(window_id) AS window_id_list
                 FROM
                   (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
                           events__pdi.person_id AS person_id,
                           ifNull(if(equals(events.event, '$pageview'), replaceRegexpAll(ifNull(nullIf(nullIf(events.`mat_$current_url`, ''), 'null'), ''), '(.)/$', '\\1'), events.event), '') AS path_item_ungrouped,
                           events.uuid AS uuid,
                           toTimeZone(events.timestamp, 'UTC') AS timestamp,
                           ifNull(nullIf(nullIf(events.`$session_id`, ''), 'null'), '') AS session_id,
                           ifNull(nullIf(nullIf(events.`$window_id`, ''), 'null'), '') AS window_id,
                           NULL AS groupings,
                           multiMatchAnyIndex(path_item_ungrouped, NULL) AS group_index,
                           (if(ifNull(greater(group_index, 0), 0), groupings[group_index], path_item_ungrouped) AS path_item) AS path_item
                    FROM events
                    INNER JOIN
                      (SELECT argMax(person_distinct_id2.person_id, person_distinct_id2.version) AS person_id,
                              person_distinct_id2.distinct_id AS distinct_id
                       FROM person_distinct_id2
                       WHERE equals(person_distinct_id2.team_id, 2)
                       GROUP BY person_distinct_id2.distinct_id
                       HAVING ifNull(equals(argMax(person_distinct_id2.is_deleted, person_distinct_id2.version), 0), 0)) AS events__pdi ON equals(events.distinct_id, events__pdi.distinct_id)
                    WHERE and(equals(events.team_id, 2), and(greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2012-05-01 00:00:00', 6, 'UTC')))), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), assumeNotNull(parseDateTime64BestEffortOrNull('2021-05-07 23:59:59', 6, 'UTC')))), equals(events.event, '$pageview'))
                    ORDER BY events__pdi.person_id ASC, toTimeZone(events.timestamp, 'UTC') ASC)
                 GROUP BY person_id) ARRAY
              JOIN session_paths AS path_time_tuple,
                   arrayEnumerate(session_paths) AS session_index) ARRAY
           JOIN limited_path_timings AS joined_path_tuple,
                arrayEnumerate(limited_path_timings) AS event_in_session_index
           WHERE and(ifNull(greater(start_target_index, 0), 0), ifNull(greater(end_target_index, 0), 0))))
     WHERE and(ifNull(equals(last_path_key, '3_...'), 0), ifNull(equals(path_key, '4_/5'), 0))
     GROUP BY person_id) AS source ON equals(persons.id, source.actor_id)
  ORDER BY persons.id ASC
  LIMIT 101
  OFFSET 0 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1
  '''
# ---
# name: TestClickhousePaths.test_start_dropping_orphaned_edges
  '''
  SELECT last_path_key AS source_event,
         path_key AS target_event,
         count(*) AS event_count,
         avg(conversion_time) AS average_conversion_time
  FROM
    (SELECT person_id AS person_id,
            path AS path,
                    conversion_time AS conversion_time,
                    event_in_session_index AS event_in_session_index,
                    concat(ifNull(toString(event_in_session_index), ''), '_', ifNull(toString(path), '')) AS path_key,
                    if(ifNull(greater(event_in_session_index, 1), 0), concat(ifNull(toString(minus(event_in_session_index, 1)), ''), '_', ifNull(toString(prev_path), '')), NULL) AS last_path_key,
                    path_dropoff_key AS path_dropoff_key
     FROM
       (SELECT person_id AS person_id,
               joined_path_tuple.1 AS path,
               joined_path_tuple.2 AS conversion_time,
               joined_path_tuple.3 AS prev_path,
               event_in_session_index,
               session_index AS session_index,
               arrayPopFront(arrayPushBack(path_basic, '')) AS path_basic_0,
               arrayMap((x, y) -> if(ifNull(equals(x, y), isNull(x)
                                            and isNull(y)), 0, 1), path_basic, path_basic_0) AS mapping,
               arrayFilter((x, y) -> y, time, mapping) AS timings,
               arrayFilter((x, y) -> y, path_basic, mapping) AS compact_path,
               indexOf(compact_path, '/2') AS target_index,
               if(ifNull(greater(target_index, 0), 0), arraySlice(compact_path, target_index), compact_path) AS filtered_path,
               arraySlice(filtered_path, 1, 5) AS limited_path,
               if(ifNull(greater(target_index, 0), 0), arraySlice(timings, target_index), timings) AS filtered_timings,
               arraySlice(filtered_timings, 1, 5) AS limited_timings,
               arrayDifference(limited_timings) AS timings_diff,
               concat(ifNull(toString(length(limited_path)), ''), '_', ifNull(toString(limited_path[-1]), '')) AS path_dropoff_key,
               arrayZip(limited_path, timings_diff, arrayPopBack(arrayPushFront(limited_path, ''))) AS limited_path_timings
        FROM
          (SELECT person_id AS person_id,
                  path_time_tuple.1 AS path_basic,
                  path_time_tuple.2 AS time,
                  session_index,
                  arrayZip(path_list, timing_list, arrayDifference(timing_list)) AS paths_tuple,
                  arraySplit(x -> if(ifNull(less(x.3, 1800), 0), 0, 1), paths_tuple) AS session_paths
           FROM
             (SELECT person_id AS person_id,
                     groupArray(timestamp) AS timing_list,
                     groupArray(path_item) AS path_list
              FROM
                (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
                        events__pdi.person_id AS person_id,
                        ifNull(if(equals(events.event, '$screen'), replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$screen_name'), ''), 'null'), '^"|"$', ''), if(equals(events.event, '$pageview'), replaceRegexpAll(ifNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$current_url'), ''), 'null'), '^"|"$', ''), ''), '(.)/$', '\\1'), events.event)), '') AS path_item_ungrouped,
                        NULL AS groupings,
                        multiMatchAnyIndex(path_item_ungrouped, NULL) AS group_index,
                        (if(ifNull(greater(group_index, 0), 0), groupings[group_index], path_item_ungrouped) AS path_item) AS path_item
                 FROM events
                 INNER JOIN
                   (SELECT argMax(person_distinct_id2.person_id, person_distinct_id2.version) AS person_id,
                           person_distinct_id2.distinct_id AS distinct_id
                    FROM person_distinct_id2
                    WHERE equals(person_distinct_id2.team_id, 2)
                    GROUP BY person_distinct_id2.distinct_id
                    HAVING ifNull(equals(argMax(person_distinct_id2.is_deleted, person_distinct_id2.version), 0), 0)) AS events__pdi ON equals(events.distinct_id, events__pdi.distinct_id)
                 WHERE and(equals(events.team_id, 2), and(greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2021-05-01 00:00:00', 6, 'UTC')))), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), assumeNotNull(parseDateTime64BestEffortOrNull('2021-05-07 23:59:59', 6, 'UTC')))))
                 ORDER BY events__pdi.person_id ASC, toTimeZone(events.timestamp, 'UTC') ASC)
              GROUP BY person_id) ARRAY
           JOIN session_paths AS path_time_tuple,
                arrayEnumerate(session_paths) AS session_index) ARRAY
        JOIN limited_path_timings AS joined_path_tuple,
             arrayEnumerate(limited_path_timings) AS event_in_session_index
        WHERE ifNull(greater(target_index, 0), 0)))
  WHERE isNotNull(source_event)
  GROUP BY source_event,
           target_event
  ORDER BY event_count DESC,
           source_event ASC,
           target_event ASC
  LIMIT 6 SETTINGS readonly=2,
                   max_execution_time=60,
                   allow_experimental_object_type=1
  '''
# ---
# name: TestClickhousePaths.test_step_conversion_times
  '''
  SELECT last_path_key AS source_event,
         path_key AS target_event,
         count(*) AS event_count,
         avg(conversion_time) AS average_conversion_time
  FROM
    (SELECT person_id AS person_id,
            path AS path,
                    conversion_time AS conversion_time,
                    event_in_session_index AS event_in_session_index,
                    concat(ifNull(toString(event_in_session_index), ''), '_', ifNull(toString(path), '')) AS path_key,
                    if(ifNull(greater(event_in_session_index, 1), 0), concat(ifNull(toString(minus(event_in_session_index, 1)), ''), '_', ifNull(toString(prev_path), '')), NULL) AS last_path_key,
                    path_dropoff_key AS path_dropoff_key
     FROM
       (SELECT person_id AS person_id,
               joined_path_tuple.1 AS path,
               joined_path_tuple.2 AS conversion_time,
               joined_path_tuple.3 AS prev_path,
               event_in_session_index,
               session_index AS session_index,
               arrayPopFront(arrayPushBack(path_basic, '')) AS path_basic_0,
               arrayMap((x, y) -> if(ifNull(equals(x, y), isNull(x)
                                            and isNull(y)), 0, 1), path_basic, path_basic_0) AS mapping,
               arrayFilter((x, y) -> y, time, mapping) AS timings,
               arrayFilter((x, y) -> y, path_basic, mapping) AS compact_path,
               indexOf(compact_path, NULL) AS target_index,
               if(ifNull(greater(target_index, 0), 0), arraySlice(compact_path, target_index), compact_path) AS filtered_path,
               arraySlice(filtered_path, 1, 4) AS limited_path,
               if(ifNull(greater(target_index, 0), 0), arraySlice(timings, target_index), timings) AS filtered_timings,
               arraySlice(filtered_timings, 1, 4) AS limited_timings,
               arrayDifference(limited_timings) AS timings_diff,
               concat(ifNull(toString(length(limited_path)), ''), '_', ifNull(toString(limited_path[-1]), '')) AS path_dropoff_key,
               arrayZip(limited_path, timings_diff, arrayPopBack(arrayPushFront(limited_path, ''))) AS limited_path_timings
        FROM
          (SELECT person_id AS person_id,
                  path_time_tuple.1 AS path_basic,
                  path_time_tuple.2 AS time,
                  session_index,
                  arrayZip(path_list, timing_list, arrayDifference(timing_list)) AS paths_tuple,
                  arraySplit(x -> if(ifNull(less(x.3, 1800), 0), 0, 1), paths_tuple) AS session_paths
           FROM
             (SELECT person_id AS person_id,
                     groupArray(timestamp) AS timing_list,
                     groupArray(path_item) AS path_list
              FROM
                (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
                        events__pdi.person_id AS person_id,
                        ifNull(if(equals(events.event, '$pageview'), replaceRegexpAll(ifNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$current_url'), ''), 'null'), '^"|"$', ''), ''), '(.)/$', '\\1'), events.event), '') AS path_item_ungrouped,
                        NULL AS groupings,
                        multiMatchAnyIndex(path_item_ungrouped, NULL) AS group_index,
                        (if(ifNull(greater(group_index, 0), 0), groupings[group_index], path_item_ungrouped) AS path_item) AS path_item
                 FROM events
                 INNER JOIN
                   (SELECT argMax(person_distinct_id2.person_id, person_distinct_id2.version) AS person_id,
                           person_distinct_id2.distinct_id AS distinct_id
                    FROM person_distinct_id2
                    WHERE equals(person_distinct_id2.team_id, 2)
                    GROUP BY person_distinct_id2.distinct_id
                    HAVING ifNull(equals(argMax(person_distinct_id2.is_deleted, person_distinct_id2.version), 0), 0)) AS events__pdi ON equals(events.distinct_id, events__pdi.distinct_id)
                 WHERE and(equals(events.team_id, 2), and(greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2012-01-01 00:00:00', 6, 'UTC')))), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), assumeNotNull(parseDateTime64BestEffortOrNull('2023-05-23 23:59:59', 6, 'UTC')))), equals(events.event, '$pageview'))
                 ORDER BY events__pdi.person_id ASC, toTimeZone(events.timestamp, 'UTC') ASC)
              GROUP BY person_id) ARRAY
           JOIN session_paths AS path_time_tuple,
                arrayEnumerate(session_paths) AS session_index) ARRAY
        JOIN limited_path_timings AS joined_path_tuple,
             arrayEnumerate(limited_path_timings) AS event_in_session_index))
  WHERE isNotNull(source_event)
  GROUP BY source_event,
           target_event
  ORDER BY event_count DESC,
           source_event ASC,
           target_event ASC
  LIMIT 50 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1
  '''
# ---
# name: TestClickhousePaths.test_step_limit
  '''
  SELECT last_path_key AS source_event,
         path_key AS target_event,
         count(*) AS event_count,
         avg(conversion_time) AS average_conversion_time
  FROM
    (SELECT person_id AS person_id,
            path AS path,
                    conversion_time AS conversion_time,
                    event_in_session_index AS event_in_session_index,
                    concat(ifNull(toString(event_in_session_index), ''), '_', ifNull(toString(path), '')) AS path_key,
                    if(ifNull(greater(event_in_session_index, 1), 0), concat(ifNull(toString(minus(event_in_session_index, 1)), ''), '_', ifNull(toString(prev_path), '')), NULL) AS last_path_key,
                    path_dropoff_key AS path_dropoff_key
     FROM
       (SELECT person_id AS person_id,
               joined_path_tuple.1 AS path,
               joined_path_tuple.2 AS conversion_time,
               joined_path_tuple.3 AS prev_path,
               event_in_session_index,
               session_index AS session_index,
               arrayPopFront(arrayPushBack(path_basic, '')) AS path_basic_0,
               arrayMap((x, y) -> if(ifNull(equals(x, y), isNull(x)
                                            and isNull(y)), 0, 1), path_basic, path_basic_0) AS mapping,
               arrayFilter((x, y) -> y, time, mapping) AS timings,
               arrayFilter((x, y) -> y, path_basic, mapping) AS compact_path,
               indexOf(compact_path, NULL) AS target_index,
               if(ifNull(greater(target_index, 0), 0), arraySlice(compact_path, target_index), compact_path) AS filtered_path,
               arraySlice(filtered_path, 1, 2) AS limited_path,
               if(ifNull(greater(target_index, 0), 0), arraySlice(timings, target_index), timings) AS filtered_timings,
               arraySlice(filtered_timings, 1, 2) AS limited_timings,
               arrayDifference(limited_timings) AS timings_diff,
               concat(ifNull(toString(length(limited_path)), ''), '_', ifNull(toString(limited_path[-1]), '')) AS path_dropoff_key,
               arrayZip(limited_path, timings_diff, arrayPopBack(arrayPushFront(limited_path, ''))) AS limited_path_timings
        FROM
          (SELECT person_id AS person_id,
                  path_time_tuple.1 AS path_basic,
                  path_time_tuple.2 AS time,
                  session_index,
                  arrayZip(path_list, timing_list, arrayDifference(timing_list)) AS paths_tuple,
                  arraySplit(x -> if(ifNull(less(x.3, 1800), 0), 0, 1), paths_tuple) AS session_paths
           FROM
             (SELECT person_id AS person_id,
                     groupArray(timestamp) AS timing_list,
                     groupArray(path_item) AS path_list
              FROM
                (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
                        events__pdi.person_id AS person_id,
                        ifNull(if(equals(events.event, '$screen'), replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$screen_name'), ''), 'null'), '^"|"$', ''), if(equals(events.event, '$pageview'), replaceRegexpAll(ifNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$current_url'), ''), 'null'), '^"|"$', ''), ''), '(.)/$', '\\1'), events.event)), '') AS path_item_ungrouped,
                        NULL AS groupings,
                        multiMatchAnyIndex(path_item_ungrouped, NULL) AS group_index,
                        (if(ifNull(greater(group_index, 0), 0), groupings[group_index], path_item_ungrouped) AS path_item) AS path_item
                 FROM events
                 INNER JOIN
                   (SELECT argMax(person_distinct_id2.person_id, person_distinct_id2.version) AS person_id,
                           person_distinct_id2.distinct_id AS distinct_id
                    FROM person_distinct_id2
                    WHERE equals(person_distinct_id2.team_id, 2)
                    GROUP BY person_distinct_id2.distinct_id
                    HAVING ifNull(equals(argMax(person_distinct_id2.is_deleted, person_distinct_id2.version), 0), 0)) AS events__pdi ON equals(events.distinct_id, events__pdi.distinct_id)
                 WHERE and(equals(events.team_id, 2), and(greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2011-12-31 00:00:00', 6, 'UTC')))), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), assumeNotNull(parseDateTime64BestEffortOrNull('2012-01-07 23:59:59', 6, 'UTC')))))
                 ORDER BY events__pdi.person_id ASC, toTimeZone(events.timestamp, 'UTC') ASC)
              GROUP BY person_id) ARRAY
           JOIN session_paths AS path_time_tuple,
                arrayEnumerate(session_paths) AS session_index) ARRAY
        JOIN limited_path_timings AS joined_path_tuple,
             arrayEnumerate(limited_path_timings) AS event_in_session_index))
  WHERE isNotNull(source_event)
  GROUP BY source_event,
           target_event
  ORDER BY event_count DESC,
           source_event ASC,
           target_event ASC
  LIMIT 50 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1
  '''
# ---
# name: TestClickhousePaths.test_step_limit.1
  '''
  SELECT persons.id AS id
  FROM
    (SELECT person.id AS id
     FROM person
     WHERE equals(person.team_id, 2)
     GROUP BY person.id
     HAVING ifNull(equals(argMax(person.is_deleted, person.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS persons
  INNER JOIN
    (SELECT person_id AS actor_id,
            groupUniqArray(100)(tuple(timestamp, uuid, session_id, window_id)) AS matching_events,
            count(*) AS event_count
     FROM
       (SELECT person_id AS person_id,
               path AS path,
                       conversion_time AS conversion_time,
                       event_in_session_index AS event_in_session_index,
                       concat(ifNull(toString(event_in_session_index), ''), '_', ifNull(toString(path), '')) AS path_key,
                       if(ifNull(greater(event_in_session_index, 1), 0), concat(ifNull(toString(minus(event_in_session_index, 1)), ''), '_', ifNull(toString(prev_path), '')), NULL) AS last_path_key,
                       path_dropoff_key AS path_dropoff_key,
                       final_uuid AS uuid,
                       final_timestamp AS timestamp,
                       final_session_id AS session_id,
                       final_window_id AS window_id
        FROM
          (SELECT person_id AS person_id,
                  joined_path_tuple.1 AS path,
                  joined_path_tuple.2 AS conversion_time,
                  joined_path_tuple.3 AS prev_path,
                  event_in_session_index,
                  session_index AS session_index,
                  arrayPopFront(arrayPushBack(path_basic, '')) AS path_basic_0,
                  arrayMap((x, y) -> if(ifNull(equals(x, y), isNull(x)
                                               and isNull(y)), 0, 1), path_basic, path_basic_0) AS mapping,
                  arrayFilter((x, y) -> y, time, mapping) AS timings,
                  arrayFilter((x, y) -> y, path_basic, mapping) AS compact_path,
                  indexOf(compact_path, NULL) AS target_index,
                  joined_path_tuple.4 AS final_uuid,
                  joined_path_tuple.5 AS final_timestamp,
                  joined_path_tuple.6 AS final_session_id,
                  joined_path_tuple.7 AS final_window_id,
                  arrayFilter((x, y) -> y, uuid_items, mapping) AS uuid,
                  arrayFilter((x, y) -> y, timestamp_items, mapping) AS timestamp,
                  arrayFilter((x, y) -> y, session_id_items, mapping) AS session_id,
                  arrayFilter((x, y) -> y, window_id_items, mapping) AS window_id,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(compact_path, target_index), compact_path) AS filtered_path,
                  arraySlice(filtered_path, 1, 2) AS limited_path,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(timings, target_index), timings) AS filtered_timings,
                  arraySlice(filtered_timings, 1, 2) AS limited_timings,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(uuid, target_index), uuid) AS filtered_uuid,
                  arraySlice(filtered_uuid, 1, 2) AS limited_uuid,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(timestamp, target_index), timestamp) AS filtered_timestamp,
                  arraySlice(filtered_timestamp, 1, 2) AS limited_timestamp,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(session_id, target_index), session_id) AS filtered_session_id,
                  arraySlice(filtered_session_id, 1, 2) AS limited_session_id,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(window_id, target_index), window_id) AS filtered_window_id,
                  arraySlice(filtered_window_id, 1, 2) AS limited_window_id,
                  arrayDifference(limited_timings) AS timings_diff,
                  concat(ifNull(toString(length(limited_path)), ''), '_', ifNull(toString(limited_path[-1]), '')) AS path_dropoff_key,
                  arrayZip(limited_path, timings_diff, arrayPopBack(arrayPushFront(limited_path, '')), limited_uuid, limited_timestamp, limited_session_id, limited_window_id) AS limited_path_timings
           FROM
             (SELECT person_id AS person_id,
                     path_time_tuple.1 AS path_basic,
                     path_time_tuple.2 AS time,
                     session_index,
                     arrayZip(path_list, timing_list, arrayDifference(timing_list), uuid_list, timestamp_list, session_id_list, window_id_list) AS paths_tuple,
                     arraySplit(x -> if(ifNull(less(x.3, 1800), 0), 0, 1), paths_tuple) AS session_paths,
                     path_time_tuple.4 AS uuid_items,
                     path_time_tuple.5 AS timestamp_items,
                     path_time_tuple.6 AS session_id_items,
                     path_time_tuple.7 AS window_id_items
              FROM
                (SELECT person_id AS person_id,
                        groupArray(timestamp) AS timing_list,
                        groupArray(path_item) AS path_list,
                        groupArray(uuid) AS uuid_list,
                        groupArray(timestamp) AS timestamp_list,
                        groupArray(session_id) AS session_id_list,
                        groupArray(window_id) AS window_id_list
                 FROM
                   (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
                           events__pdi.person_id AS person_id,
                           ifNull(if(equals(events.event, '$screen'), replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$screen_name'), ''), 'null'), '^"|"$', ''), if(equals(events.event, '$pageview'), replaceRegexpAll(ifNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$current_url'), ''), 'null'), '^"|"$', ''), ''), '(.)/$', '\\1'), events.event)), '') AS path_item_ungrouped,
                           events.uuid AS uuid,
                           toTimeZone(events.timestamp, 'UTC') AS timestamp,
                           ifNull(nullIf(nullIf(events.`$session_id`, ''), 'null'), '') AS session_id,
                           ifNull(nullIf(nullIf(events.`$window_id`, ''), 'null'), '') AS window_id,
                           NULL AS groupings,
                           multiMatchAnyIndex(path_item_ungrouped, NULL) AS group_index,
                           (if(ifNull(greater(group_index, 0), 0), groupings[group_index], path_item_ungrouped) AS path_item) AS path_item
                    FROM events
                    INNER JOIN
                      (SELECT argMax(person_distinct_id2.person_id, person_distinct_id2.version) AS person_id,
                              person_distinct_id2.distinct_id AS distinct_id
                       FROM person_distinct_id2
                       WHERE equals(person_distinct_id2.team_id, 2)
                       GROUP BY person_distinct_id2.distinct_id
                       HAVING ifNull(equals(argMax(person_distinct_id2.is_deleted, person_distinct_id2.version), 0), 0)) AS events__pdi ON equals(events.distinct_id, events__pdi.distinct_id)
                    WHERE and(equals(events.team_id, 2), and(greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2011-12-31 00:00:00', 6, 'UTC')))), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), assumeNotNull(parseDateTime64BestEffortOrNull('2012-01-07 23:59:59', 6, 'UTC')))))
                    ORDER BY events__pdi.person_id ASC, toTimeZone(events.timestamp, 'UTC') ASC)
                 GROUP BY person_id) ARRAY
              JOIN session_paths AS path_time_tuple,
                   arrayEnumerate(session_paths) AS session_index) ARRAY
           JOIN limited_path_timings AS joined_path_tuple,
                arrayEnumerate(limited_path_timings) AS event_in_session_index))
     WHERE and(ifNull(equals(last_path_key, '1_/1'), 0), ifNull(equals(path_key, '2_/2'), 0))
     GROUP BY person_id) AS source ON equals(persons.id, source.actor_id)
  ORDER BY persons.id ASC
  LIMIT 101
  OFFSET 0 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1
  '''
# ---
# name: TestClickhousePaths.test_step_limit.2
  '''
  SELECT persons.id AS id
  FROM
    (SELECT person.id AS id
     FROM person
     WHERE equals(person.team_id, 2)
     GROUP BY person.id
     HAVING ifNull(equals(argMax(person.is_deleted, person.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS persons
  INNER JOIN
    (SELECT person_id AS actor_id,
            groupUniqArray(100)(tuple(timestamp, uuid, session_id, window_id)) AS matching_events,
            count(*) AS event_count
     FROM
       (SELECT person_id AS person_id,
               path AS path,
                       conversion_time AS conversion_time,
                       event_in_session_index AS event_in_session_index,
                       concat(ifNull(toString(event_in_session_index), ''), '_', ifNull(toString(path), '')) AS path_key,
                       if(ifNull(greater(event_in_session_index, 1), 0), concat(ifNull(toString(minus(event_in_session_index, 1)), ''), '_', ifNull(toString(prev_path), '')), NULL) AS last_path_key,
                       path_dropoff_key AS path_dropoff_key,
                       final_uuid AS uuid,
                       final_timestamp AS timestamp,
                       final_session_id AS session_id,
                       final_window_id AS window_id
        FROM
          (SELECT person_id AS person_id,
                  joined_path_tuple.1 AS path,
                  joined_path_tuple.2 AS conversion_time,
                  joined_path_tuple.3 AS prev_path,
                  event_in_session_index,
                  session_index AS session_index,
                  arrayPopFront(arrayPushBack(path_basic, '')) AS path_basic_0,
                  arrayMap((x, y) -> if(ifNull(equals(x, y), isNull(x)
                                               and isNull(y)), 0, 1), path_basic, path_basic_0) AS mapping,
                  arrayFilter((x, y) -> y, time, mapping) AS timings,
                  arrayFilter((x, y) -> y, path_basic, mapping) AS compact_path,
                  indexOf(compact_path, NULL) AS target_index,
                  joined_path_tuple.4 AS final_uuid,
                  joined_path_tuple.5 AS final_timestamp,
                  joined_path_tuple.6 AS final_session_id,
                  joined_path_tuple.7 AS final_window_id,
                  arrayFilter((x, y) -> y, uuid_items, mapping) AS uuid,
                  arrayFilter((x, y) -> y, timestamp_items, mapping) AS timestamp,
                  arrayFilter((x, y) -> y, session_id_items, mapping) AS session_id,
                  arrayFilter((x, y) -> y, window_id_items, mapping) AS window_id,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(compact_path, target_index), compact_path) AS filtered_path,
                  arraySlice(filtered_path, 1, 2) AS limited_path,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(timings, target_index), timings) AS filtered_timings,
                  arraySlice(filtered_timings, 1, 2) AS limited_timings,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(uuid, target_index), uuid) AS filtered_uuid,
                  arraySlice(filtered_uuid, 1, 2) AS limited_uuid,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(timestamp, target_index), timestamp) AS filtered_timestamp,
                  arraySlice(filtered_timestamp, 1, 2) AS limited_timestamp,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(session_id, target_index), session_id) AS filtered_session_id,
                  arraySlice(filtered_session_id, 1, 2) AS limited_session_id,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(window_id, target_index), window_id) AS filtered_window_id,
                  arraySlice(filtered_window_id, 1, 2) AS limited_window_id,
                  arrayDifference(limited_timings) AS timings_diff,
                  concat(ifNull(toString(length(limited_path)), ''), '_', ifNull(toString(limited_path[-1]), '')) AS path_dropoff_key,
                  arrayZip(limited_path, timings_diff, arrayPopBack(arrayPushFront(limited_path, '')), limited_uuid, limited_timestamp, limited_session_id, limited_window_id) AS limited_path_timings
           FROM
             (SELECT person_id AS person_id,
                     path_time_tuple.1 AS path_basic,
                     path_time_tuple.2 AS time,
                     session_index,
                     arrayZip(path_list, timing_list, arrayDifference(timing_list), uuid_list, timestamp_list, session_id_list, window_id_list) AS paths_tuple,
                     arraySplit(x -> if(ifNull(less(x.3, 1800), 0), 0, 1), paths_tuple) AS session_paths,
                     path_time_tuple.4 AS uuid_items,
                     path_time_tuple.5 AS timestamp_items,
                     path_time_tuple.6 AS session_id_items,
                     path_time_tuple.7 AS window_id_items
              FROM
                (SELECT person_id AS person_id,
                        groupArray(timestamp) AS timing_list,
                        groupArray(path_item) AS path_list,
                        groupArray(uuid) AS uuid_list,
                        groupArray(timestamp) AS timestamp_list,
                        groupArray(session_id) AS session_id_list,
                        groupArray(window_id) AS window_id_list
                 FROM
                   (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
                           events__pdi.person_id AS person_id,
                           ifNull(if(equals(events.event, '$screen'), replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$screen_name'), ''), 'null'), '^"|"$', ''), if(equals(events.event, '$pageview'), replaceRegexpAll(ifNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$current_url'), ''), 'null'), '^"|"$', ''), ''), '(.)/$', '\\1'), events.event)), '') AS path_item_ungrouped,
                           events.uuid AS uuid,
                           toTimeZone(events.timestamp, 'UTC') AS timestamp,
                           ifNull(nullIf(nullIf(events.`$session_id`, ''), 'null'), '') AS session_id,
                           ifNull(nullIf(nullIf(events.`$window_id`, ''), 'null'), '') AS window_id,
                           NULL AS groupings,
                           multiMatchAnyIndex(path_item_ungrouped, NULL) AS group_index,
                           (if(ifNull(greater(group_index, 0), 0), groupings[group_index], path_item_ungrouped) AS path_item) AS path_item
                    FROM events
                    INNER JOIN
                      (SELECT argMax(person_distinct_id2.person_id, person_distinct_id2.version) AS person_id,
                              person_distinct_id2.distinct_id AS distinct_id
                       FROM person_distinct_id2
                       WHERE equals(person_distinct_id2.team_id, 2)
                       GROUP BY person_distinct_id2.distinct_id
                       HAVING ifNull(equals(argMax(person_distinct_id2.is_deleted, person_distinct_id2.version), 0), 0)) AS events__pdi ON equals(events.distinct_id, events__pdi.distinct_id)
                    WHERE and(equals(events.team_id, 2), and(greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2011-12-31 00:00:00', 6, 'UTC')))), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), assumeNotNull(parseDateTime64BestEffortOrNull('2012-01-07 23:59:59', 6, 'UTC')))))
                    ORDER BY events__pdi.person_id ASC, toTimeZone(events.timestamp, 'UTC') ASC)
                 GROUP BY person_id) ARRAY
              JOIN session_paths AS path_time_tuple,
                   arrayEnumerate(session_paths) AS session_index) ARRAY
           JOIN limited_path_timings AS joined_path_tuple,
                arrayEnumerate(limited_path_timings) AS event_in_session_index))
     WHERE and(ifNull(equals(last_path_key, '2_/2'), 0), ifNull(equals(path_key, '3_/3'), 0))
     GROUP BY person_id) AS source ON equals(persons.id, source.actor_id)
  ORDER BY persons.id ASC
  LIMIT 101
  OFFSET 0 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1
  '''
# ---
# name: TestClickhousePaths.test_step_limit.3
  '''
  SELECT last_path_key AS source_event,
         path_key AS target_event,
         count(*) AS event_count,
         avg(conversion_time) AS average_conversion_time
  FROM
    (SELECT person_id AS person_id,
            path AS path,
                    conversion_time AS conversion_time,
                    event_in_session_index AS event_in_session_index,
                    concat(ifNull(toString(event_in_session_index), ''), '_', ifNull(toString(path), '')) AS path_key,
                    if(ifNull(greater(event_in_session_index, 1), 0), concat(ifNull(toString(minus(event_in_session_index, 1)), ''), '_', ifNull(toString(prev_path), '')), NULL) AS last_path_key,
                    path_dropoff_key AS path_dropoff_key
     FROM
       (SELECT person_id AS person_id,
               joined_path_tuple.1 AS path,
               joined_path_tuple.2 AS conversion_time,
               joined_path_tuple.3 AS prev_path,
               event_in_session_index,
               session_index AS session_index,
               arrayPopFront(arrayPushBack(path_basic, '')) AS path_basic_0,
               arrayMap((x, y) -> if(ifNull(equals(x, y), isNull(x)
                                            and isNull(y)), 0, 1), path_basic, path_basic_0) AS mapping,
               arrayFilter((x, y) -> y, time, mapping) AS timings,
               arrayFilter((x, y) -> y, path_basic, mapping) AS compact_path,
               indexOf(compact_path, NULL) AS target_index,
               if(ifNull(greater(target_index, 0), 0), arraySlice(compact_path, target_index), compact_path) AS filtered_path,
               arraySlice(filtered_path, 1, 3) AS limited_path,
               if(ifNull(greater(target_index, 0), 0), arraySlice(timings, target_index), timings) AS filtered_timings,
               arraySlice(filtered_timings, 1, 3) AS limited_timings,
               arrayDifference(limited_timings) AS timings_diff,
               concat(ifNull(toString(length(limited_path)), ''), '_', ifNull(toString(limited_path[-1]), '')) AS path_dropoff_key,
               arrayZip(limited_path, timings_diff, arrayPopBack(arrayPushFront(limited_path, ''))) AS limited_path_timings
        FROM
          (SELECT person_id AS person_id,
                  path_time_tuple.1 AS path_basic,
                  path_time_tuple.2 AS time,
                  session_index,
                  arrayZip(path_list, timing_list, arrayDifference(timing_list)) AS paths_tuple,
                  arraySplit(x -> if(ifNull(less(x.3, 1800), 0), 0, 1), paths_tuple) AS session_paths
           FROM
             (SELECT person_id AS person_id,
                     groupArray(timestamp) AS timing_list,
                     groupArray(path_item) AS path_list
              FROM
                (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
                        events__pdi.person_id AS person_id,
                        ifNull(if(equals(events.event, '$screen'), replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$screen_name'), ''), 'null'), '^"|"$', ''), if(equals(events.event, '$pageview'), replaceRegexpAll(ifNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$current_url'), ''), 'null'), '^"|"$', ''), ''), '(.)/$', '\\1'), events.event)), '') AS path_item_ungrouped,
                        NULL AS groupings,
                        multiMatchAnyIndex(path_item_ungrouped, NULL) AS group_index,
                        (if(ifNull(greater(group_index, 0), 0), groupings[group_index], path_item_ungrouped) AS path_item) AS path_item
                 FROM events
                 INNER JOIN
                   (SELECT argMax(person_distinct_id2.person_id, person_distinct_id2.version) AS person_id,
                           person_distinct_id2.distinct_id AS distinct_id
                    FROM person_distinct_id2
                    WHERE equals(person_distinct_id2.team_id, 2)
                    GROUP BY person_distinct_id2.distinct_id
                    HAVING ifNull(equals(argMax(person_distinct_id2.is_deleted, person_distinct_id2.version), 0), 0)) AS events__pdi ON equals(events.distinct_id, events__pdi.distinct_id)
                 WHERE and(equals(events.team_id, 2), and(greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2011-12-31 00:00:00', 6, 'UTC')))), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), assumeNotNull(parseDateTime64BestEffortOrNull('2012-01-07 23:59:59', 6, 'UTC')))))
                 ORDER BY events__pdi.person_id ASC, toTimeZone(events.timestamp, 'UTC') ASC)
              GROUP BY person_id) ARRAY
           JOIN session_paths AS path_time_tuple,
                arrayEnumerate(session_paths) AS session_index) ARRAY
        JOIN limited_path_timings AS joined_path_tuple,
             arrayEnumerate(limited_path_timings) AS event_in_session_index))
  WHERE isNotNull(source_event)
  GROUP BY source_event,
           target_event
  ORDER BY event_count DESC,
           source_event ASC,
           target_event ASC
  LIMIT 50 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1
  '''
# ---
# name: TestClickhousePaths.test_step_limit.4
  '''
  SELECT persons.id AS id
  FROM
    (SELECT person.id AS id
     FROM person
     WHERE equals(person.team_id, 2)
     GROUP BY person.id
     HAVING ifNull(equals(argMax(person.is_deleted, person.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS persons
  INNER JOIN
    (SELECT person_id AS actor_id,
            groupUniqArray(100)(tuple(timestamp, uuid, session_id, window_id)) AS matching_events,
            count(*) AS event_count
     FROM
       (SELECT person_id AS person_id,
               path AS path,
                       conversion_time AS conversion_time,
                       event_in_session_index AS event_in_session_index,
                       concat(ifNull(toString(event_in_session_index), ''), '_', ifNull(toString(path), '')) AS path_key,
                       if(ifNull(greater(event_in_session_index, 1), 0), concat(ifNull(toString(minus(event_in_session_index, 1)), ''), '_', ifNull(toString(prev_path), '')), NULL) AS last_path_key,
                       path_dropoff_key AS path_dropoff_key,
                       final_uuid AS uuid,
                       final_timestamp AS timestamp,
                       final_session_id AS session_id,
                       final_window_id AS window_id
        FROM
          (SELECT person_id AS person_id,
                  joined_path_tuple.1 AS path,
                  joined_path_tuple.2 AS conversion_time,
                  joined_path_tuple.3 AS prev_path,
                  event_in_session_index,
                  session_index AS session_index,
                  arrayPopFront(arrayPushBack(path_basic, '')) AS path_basic_0,
                  arrayMap((x, y) -> if(ifNull(equals(x, y), isNull(x)
                                               and isNull(y)), 0, 1), path_basic, path_basic_0) AS mapping,
                  arrayFilter((x, y) -> y, time, mapping) AS timings,
                  arrayFilter((x, y) -> y, path_basic, mapping) AS compact_path,
                  indexOf(compact_path, NULL) AS target_index,
                  joined_path_tuple.4 AS final_uuid,
                  joined_path_tuple.5 AS final_timestamp,
                  joined_path_tuple.6 AS final_session_id,
                  joined_path_tuple.7 AS final_window_id,
                  arrayFilter((x, y) -> y, uuid_items, mapping) AS uuid,
                  arrayFilter((x, y) -> y, timestamp_items, mapping) AS timestamp,
                  arrayFilter((x, y) -> y, session_id_items, mapping) AS session_id,
                  arrayFilter((x, y) -> y, window_id_items, mapping) AS window_id,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(compact_path, target_index), compact_path) AS filtered_path,
                  arraySlice(filtered_path, 1, 3) AS limited_path,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(timings, target_index), timings) AS filtered_timings,
                  arraySlice(filtered_timings, 1, 3) AS limited_timings,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(uuid, target_index), uuid) AS filtered_uuid,
                  arraySlice(filtered_uuid, 1, 3) AS limited_uuid,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(timestamp, target_index), timestamp) AS filtered_timestamp,
                  arraySlice(filtered_timestamp, 1, 3) AS limited_timestamp,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(session_id, target_index), session_id) AS filtered_session_id,
                  arraySlice(filtered_session_id, 1, 3) AS limited_session_id,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(window_id, target_index), window_id) AS filtered_window_id,
                  arraySlice(filtered_window_id, 1, 3) AS limited_window_id,
                  arrayDifference(limited_timings) AS timings_diff,
                  concat(ifNull(toString(length(limited_path)), ''), '_', ifNull(toString(limited_path[-1]), '')) AS path_dropoff_key,
                  arrayZip(limited_path, timings_diff, arrayPopBack(arrayPushFront(limited_path, '')), limited_uuid, limited_timestamp, limited_session_id, limited_window_id) AS limited_path_timings
           FROM
             (SELECT person_id AS person_id,
                     path_time_tuple.1 AS path_basic,
                     path_time_tuple.2 AS time,
                     session_index,
                     arrayZip(path_list, timing_list, arrayDifference(timing_list), uuid_list, timestamp_list, session_id_list, window_id_list) AS paths_tuple,
                     arraySplit(x -> if(ifNull(less(x.3, 1800), 0), 0, 1), paths_tuple) AS session_paths,
                     path_time_tuple.4 AS uuid_items,
                     path_time_tuple.5 AS timestamp_items,
                     path_time_tuple.6 AS session_id_items,
                     path_time_tuple.7 AS window_id_items
              FROM
                (SELECT person_id AS person_id,
                        groupArray(timestamp) AS timing_list,
                        groupArray(path_item) AS path_list,
                        groupArray(uuid) AS uuid_list,
                        groupArray(timestamp) AS timestamp_list,
                        groupArray(session_id) AS session_id_list,
                        groupArray(window_id) AS window_id_list
                 FROM
                   (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
                           events__pdi.person_id AS person_id,
                           ifNull(if(equals(events.event, '$screen'), replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$screen_name'), ''), 'null'), '^"|"$', ''), if(equals(events.event, '$pageview'), replaceRegexpAll(ifNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$current_url'), ''), 'null'), '^"|"$', ''), ''), '(.)/$', '\\1'), events.event)), '') AS path_item_ungrouped,
                           events.uuid AS uuid,
                           toTimeZone(events.timestamp, 'UTC') AS timestamp,
                           ifNull(nullIf(nullIf(events.`$session_id`, ''), 'null'), '') AS session_id,
                           ifNull(nullIf(nullIf(events.`$window_id`, ''), 'null'), '') AS window_id,
                           NULL AS groupings,
                           multiMatchAnyIndex(path_item_ungrouped, NULL) AS group_index,
                           (if(ifNull(greater(group_index, 0), 0), groupings[group_index], path_item_ungrouped) AS path_item) AS path_item
                    FROM events
                    INNER JOIN
                      (SELECT argMax(person_distinct_id2.person_id, person_distinct_id2.version) AS person_id,
                              person_distinct_id2.distinct_id AS distinct_id
                       FROM person_distinct_id2
                       WHERE equals(person_distinct_id2.team_id, 2)
                       GROUP BY person_distinct_id2.distinct_id
                       HAVING ifNull(equals(argMax(person_distinct_id2.is_deleted, person_distinct_id2.version), 0), 0)) AS events__pdi ON equals(events.distinct_id, events__pdi.distinct_id)
                    WHERE and(equals(events.team_id, 2), and(greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2011-12-31 00:00:00', 6, 'UTC')))), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), assumeNotNull(parseDateTime64BestEffortOrNull('2012-01-07 23:59:59', 6, 'UTC')))))
                    ORDER BY events__pdi.person_id ASC, toTimeZone(events.timestamp, 'UTC') ASC)
                 GROUP BY person_id) ARRAY
              JOIN session_paths AS path_time_tuple,
                   arrayEnumerate(session_paths) AS session_index) ARRAY
           JOIN limited_path_timings AS joined_path_tuple,
                arrayEnumerate(limited_path_timings) AS event_in_session_index))
     WHERE and(ifNull(equals(last_path_key, '2_/2'), 0), ifNull(equals(path_key, '3_/3'), 0))
     GROUP BY person_id) AS source ON equals(persons.id, source.actor_id)
  ORDER BY persons.id ASC
  LIMIT 101
  OFFSET 0 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1
  '''
# ---
# name: TestClickhousePaths.test_step_limit.5
  '''
  SELECT last_path_key AS source_event,
         path_key AS target_event,
         count(*) AS event_count,
         avg(conversion_time) AS average_conversion_time
  FROM
    (SELECT person_id AS person_id,
            path AS path,
                    conversion_time AS conversion_time,
                    event_in_session_index AS event_in_session_index,
                    concat(ifNull(toString(event_in_session_index), ''), '_', ifNull(toString(path), '')) AS path_key,
                    if(ifNull(greater(event_in_session_index, 1), 0), concat(ifNull(toString(minus(event_in_session_index, 1)), ''), '_', ifNull(toString(prev_path), '')), NULL) AS last_path_key,
                    path_dropoff_key AS path_dropoff_key
     FROM
       (SELECT person_id AS person_id,
               joined_path_tuple.1 AS path,
               joined_path_tuple.2 AS conversion_time,
               joined_path_tuple.3 AS prev_path,
               event_in_session_index,
               session_index AS session_index,
               arrayPopFront(arrayPushBack(path_basic, '')) AS path_basic_0,
               arrayMap((x, y) -> if(ifNull(equals(x, y), isNull(x)
                                            and isNull(y)), 0, 1), path_basic, path_basic_0) AS mapping,
               arrayFilter((x, y) -> y, time, mapping) AS timings,
               arrayFilter((x, y) -> y, path_basic, mapping) AS compact_path,
               indexOf(compact_path, NULL) AS target_index,
               if(ifNull(greater(target_index, 0), 0), arraySlice(compact_path, target_index), compact_path) AS filtered_path,
               arraySlice(filtered_path, 1, 4) AS limited_path,
               if(ifNull(greater(target_index, 0), 0), arraySlice(timings, target_index), timings) AS filtered_timings,
               arraySlice(filtered_timings, 1, 4) AS limited_timings,
               arrayDifference(limited_timings) AS timings_diff,
               concat(ifNull(toString(length(limited_path)), ''), '_', ifNull(toString(limited_path[-1]), '')) AS path_dropoff_key,
               arrayZip(limited_path, timings_diff, arrayPopBack(arrayPushFront(limited_path, ''))) AS limited_path_timings
        FROM
          (SELECT person_id AS person_id,
                  path_time_tuple.1 AS path_basic,
                  path_time_tuple.2 AS time,
                  session_index,
                  arrayZip(path_list, timing_list, arrayDifference(timing_list)) AS paths_tuple,
                  arraySplit(x -> if(ifNull(less(x.3, 1800), 0), 0, 1), paths_tuple) AS session_paths
           FROM
             (SELECT person_id AS person_id,
                     groupArray(timestamp) AS timing_list,
                     groupArray(path_item) AS path_list
              FROM
                (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
                        events__pdi.person_id AS person_id,
                        ifNull(if(equals(events.event, '$screen'), replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$screen_name'), ''), 'null'), '^"|"$', ''), if(equals(events.event, '$pageview'), replaceRegexpAll(ifNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$current_url'), ''), 'null'), '^"|"$', ''), ''), '(.)/$', '\\1'), events.event)), '') AS path_item_ungrouped,
                        NULL AS groupings,
                        multiMatchAnyIndex(path_item_ungrouped, NULL) AS group_index,
                        (if(ifNull(greater(group_index, 0), 0), groupings[group_index], path_item_ungrouped) AS path_item) AS path_item
                 FROM events
                 INNER JOIN
                   (SELECT argMax(person_distinct_id2.person_id, person_distinct_id2.version) AS person_id,
                           person_distinct_id2.distinct_id AS distinct_id
                    FROM person_distinct_id2
                    WHERE equals(person_distinct_id2.team_id, 2)
                    GROUP BY person_distinct_id2.distinct_id
                    HAVING ifNull(equals(argMax(person_distinct_id2.is_deleted, person_distinct_id2.version), 0), 0)) AS events__pdi ON equals(events.distinct_id, events__pdi.distinct_id)
                 WHERE and(equals(events.team_id, 2), and(greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2011-12-31 00:00:00', 6, 'UTC')))), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), assumeNotNull(parseDateTime64BestEffortOrNull('2012-01-07 23:59:59', 6, 'UTC')))))
                 ORDER BY events__pdi.person_id ASC, toTimeZone(events.timestamp, 'UTC') ASC)
              GROUP BY person_id) ARRAY
           JOIN session_paths AS path_time_tuple,
                arrayEnumerate(session_paths) AS session_index) ARRAY
        JOIN limited_path_timings AS joined_path_tuple,
             arrayEnumerate(limited_path_timings) AS event_in_session_index))
  WHERE isNotNull(source_event)
  GROUP BY source_event,
           target_event
  ORDER BY event_count DESC,
           source_event ASC,
           target_event ASC
  LIMIT 50 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1
  '''
# ---
# name: TestClickhousePaths.test_step_limit.6
  '''
  SELECT persons.id AS id
  FROM
    (SELECT person.id AS id
     FROM person
     WHERE equals(person.team_id, 2)
     GROUP BY person.id
     HAVING ifNull(equals(argMax(person.is_deleted, person.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS persons
  INNER JOIN
    (SELECT person_id AS actor_id,
            groupUniqArray(100)(tuple(timestamp, uuid, session_id, window_id)) AS matching_events,
            count(*) AS event_count
     FROM
       (SELECT person_id AS person_id,
               path AS path,
                       conversion_time AS conversion_time,
                       event_in_session_index AS event_in_session_index,
                       concat(ifNull(toString(event_in_session_index), ''), '_', ifNull(toString(path), '')) AS path_key,
                       if(ifNull(greater(event_in_session_index, 1), 0), concat(ifNull(toString(minus(event_in_session_index, 1)), ''), '_', ifNull(toString(prev_path), '')), NULL) AS last_path_key,
                       path_dropoff_key AS path_dropoff_key,
                       final_uuid AS uuid,
                       final_timestamp AS timestamp,
                       final_session_id AS session_id,
                       final_window_id AS window_id
        FROM
          (SELECT person_id AS person_id,
                  joined_path_tuple.1 AS path,
                  joined_path_tuple.2 AS conversion_time,
                  joined_path_tuple.3 AS prev_path,
                  event_in_session_index,
                  session_index AS session_index,
                  arrayPopFront(arrayPushBack(path_basic, '')) AS path_basic_0,
                  arrayMap((x, y) -> if(ifNull(equals(x, y), isNull(x)
                                               and isNull(y)), 0, 1), path_basic, path_basic_0) AS mapping,
                  arrayFilter((x, y) -> y, time, mapping) AS timings,
                  arrayFilter((x, y) -> y, path_basic, mapping) AS compact_path,
                  indexOf(compact_path, NULL) AS target_index,
                  joined_path_tuple.4 AS final_uuid,
                  joined_path_tuple.5 AS final_timestamp,
                  joined_path_tuple.6 AS final_session_id,
                  joined_path_tuple.7 AS final_window_id,
                  arrayFilter((x, y) -> y, uuid_items, mapping) AS uuid,
                  arrayFilter((x, y) -> y, timestamp_items, mapping) AS timestamp,
                  arrayFilter((x, y) -> y, session_id_items, mapping) AS session_id,
                  arrayFilter((x, y) -> y, window_id_items, mapping) AS window_id,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(compact_path, target_index), compact_path) AS filtered_path,
                  arraySlice(filtered_path, 1, 4) AS limited_path,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(timings, target_index), timings) AS filtered_timings,
                  arraySlice(filtered_timings, 1, 4) AS limited_timings,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(uuid, target_index), uuid) AS filtered_uuid,
                  arraySlice(filtered_uuid, 1, 4) AS limited_uuid,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(timestamp, target_index), timestamp) AS filtered_timestamp,
                  arraySlice(filtered_timestamp, 1, 4) AS limited_timestamp,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(session_id, target_index), session_id) AS filtered_session_id,
                  arraySlice(filtered_session_id, 1, 4) AS limited_session_id,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(window_id, target_index), window_id) AS filtered_window_id,
                  arraySlice(filtered_window_id, 1, 4) AS limited_window_id,
                  arrayDifference(limited_timings) AS timings_diff,
                  concat(ifNull(toString(length(limited_path)), ''), '_', ifNull(toString(limited_path[-1]), '')) AS path_dropoff_key,
                  arrayZip(limited_path, timings_diff, arrayPopBack(arrayPushFront(limited_path, '')), limited_uuid, limited_timestamp, limited_session_id, limited_window_id) AS limited_path_timings
           FROM
             (SELECT person_id AS person_id,
                     path_time_tuple.1 AS path_basic,
                     path_time_tuple.2 AS time,
                     session_index,
                     arrayZip(path_list, timing_list, arrayDifference(timing_list), uuid_list, timestamp_list, session_id_list, window_id_list) AS paths_tuple,
                     arraySplit(x -> if(ifNull(less(x.3, 1800), 0), 0, 1), paths_tuple) AS session_paths,
                     path_time_tuple.4 AS uuid_items,
                     path_time_tuple.5 AS timestamp_items,
                     path_time_tuple.6 AS session_id_items,
                     path_time_tuple.7 AS window_id_items
              FROM
                (SELECT person_id AS person_id,
                        groupArray(timestamp) AS timing_list,
                        groupArray(path_item) AS path_list,
                        groupArray(uuid) AS uuid_list,
                        groupArray(timestamp) AS timestamp_list,
                        groupArray(session_id) AS session_id_list,
                        groupArray(window_id) AS window_id_list
                 FROM
                   (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
                           events__pdi.person_id AS person_id,
                           ifNull(if(equals(events.event, '$screen'), replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$screen_name'), ''), 'null'), '^"|"$', ''), if(equals(events.event, '$pageview'), replaceRegexpAll(ifNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$current_url'), ''), 'null'), '^"|"$', ''), ''), '(.)/$', '\\1'), events.event)), '') AS path_item_ungrouped,
                           events.uuid AS uuid,
                           toTimeZone(events.timestamp, 'UTC') AS timestamp,
                           ifNull(nullIf(nullIf(events.`$session_id`, ''), 'null'), '') AS session_id,
                           ifNull(nullIf(nullIf(events.`$window_id`, ''), 'null'), '') AS window_id,
                           NULL AS groupings,
                           multiMatchAnyIndex(path_item_ungrouped, NULL) AS group_index,
                           (if(ifNull(greater(group_index, 0), 0), groupings[group_index], path_item_ungrouped) AS path_item) AS path_item
                    FROM events
                    INNER JOIN
                      (SELECT argMax(person_distinct_id2.person_id, person_distinct_id2.version) AS person_id,
                              person_distinct_id2.distinct_id AS distinct_id
                       FROM person_distinct_id2
                       WHERE equals(person_distinct_id2.team_id, 2)
                       GROUP BY person_distinct_id2.distinct_id
                       HAVING ifNull(equals(argMax(person_distinct_id2.is_deleted, person_distinct_id2.version), 0), 0)) AS events__pdi ON equals(events.distinct_id, events__pdi.distinct_id)
                    WHERE and(equals(events.team_id, 2), and(greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2011-12-31 00:00:00', 6, 'UTC')))), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), assumeNotNull(parseDateTime64BestEffortOrNull('2012-01-07 23:59:59', 6, 'UTC')))))
                    ORDER BY events__pdi.person_id ASC, toTimeZone(events.timestamp, 'UTC') ASC)
                 GROUP BY person_id) ARRAY
              JOIN session_paths AS path_time_tuple,
                   arrayEnumerate(session_paths) AS session_index) ARRAY
           JOIN limited_path_timings AS joined_path_tuple,
                arrayEnumerate(limited_path_timings) AS event_in_session_index))
     WHERE and(ifNull(equals(last_path_key, '1_/1'), 0), ifNull(equals(path_key, '2_/2'), 0))
     GROUP BY person_id) AS source ON equals(persons.id, source.actor_id)
  ORDER BY persons.id ASC
  LIMIT 101
  OFFSET 0 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1
  '''
# ---
# name: TestClickhousePaths.test_step_limit.7
  '''
  SELECT persons.id AS id
  FROM
    (SELECT person.id AS id
     FROM person
     WHERE equals(person.team_id, 2)
     GROUP BY person.id
     HAVING ifNull(equals(argMax(person.is_deleted, person.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS persons
  INNER JOIN
    (SELECT person_id AS actor_id,
            groupUniqArray(100)(tuple(timestamp, uuid, session_id, window_id)) AS matching_events,
            count(*) AS event_count
     FROM
       (SELECT person_id AS person_id,
               path AS path,
                       conversion_time AS conversion_time,
                       event_in_session_index AS event_in_session_index,
                       concat(ifNull(toString(event_in_session_index), ''), '_', ifNull(toString(path), '')) AS path_key,
                       if(ifNull(greater(event_in_session_index, 1), 0), concat(ifNull(toString(minus(event_in_session_index, 1)), ''), '_', ifNull(toString(prev_path), '')), NULL) AS last_path_key,
                       path_dropoff_key AS path_dropoff_key,
                       final_uuid AS uuid,
                       final_timestamp AS timestamp,
                       final_session_id AS session_id,
                       final_window_id AS window_id
        FROM
          (SELECT person_id AS person_id,
                  joined_path_tuple.1 AS path,
                  joined_path_tuple.2 AS conversion_time,
                  joined_path_tuple.3 AS prev_path,
                  event_in_session_index,
                  session_index AS session_index,
                  arrayPopFront(arrayPushBack(path_basic, '')) AS path_basic_0,
                  arrayMap((x, y) -> if(ifNull(equals(x, y), isNull(x)
                                               and isNull(y)), 0, 1), path_basic, path_basic_0) AS mapping,
                  arrayFilter((x, y) -> y, time, mapping) AS timings,
                  arrayFilter((x, y) -> y, path_basic, mapping) AS compact_path,
                  indexOf(compact_path, NULL) AS target_index,
                  joined_path_tuple.4 AS final_uuid,
                  joined_path_tuple.5 AS final_timestamp,
                  joined_path_tuple.6 AS final_session_id,
                  joined_path_tuple.7 AS final_window_id,
                  arrayFilter((x, y) -> y, uuid_items, mapping) AS uuid,
                  arrayFilter((x, y) -> y, timestamp_items, mapping) AS timestamp,
                  arrayFilter((x, y) -> y, session_id_items, mapping) AS session_id,
                  arrayFilter((x, y) -> y, window_id_items, mapping) AS window_id,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(compact_path, target_index), compact_path) AS filtered_path,
                  arraySlice(filtered_path, 1, 4) AS limited_path,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(timings, target_index), timings) AS filtered_timings,
                  arraySlice(filtered_timings, 1, 4) AS limited_timings,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(uuid, target_index), uuid) AS filtered_uuid,
                  arraySlice(filtered_uuid, 1, 4) AS limited_uuid,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(timestamp, target_index), timestamp) AS filtered_timestamp,
                  arraySlice(filtered_timestamp, 1, 4) AS limited_timestamp,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(session_id, target_index), session_id) AS filtered_session_id,
                  arraySlice(filtered_session_id, 1, 4) AS limited_session_id,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(window_id, target_index), window_id) AS filtered_window_id,
                  arraySlice(filtered_window_id, 1, 4) AS limited_window_id,
                  arrayDifference(limited_timings) AS timings_diff,
                  concat(ifNull(toString(length(limited_path)), ''), '_', ifNull(toString(limited_path[-1]), '')) AS path_dropoff_key,
                  arrayZip(limited_path, timings_diff, arrayPopBack(arrayPushFront(limited_path, '')), limited_uuid, limited_timestamp, limited_session_id, limited_window_id) AS limited_path_timings
           FROM
             (SELECT person_id AS person_id,
                     path_time_tuple.1 AS path_basic,
                     path_time_tuple.2 AS time,
                     session_index,
                     arrayZip(path_list, timing_list, arrayDifference(timing_list), uuid_list, timestamp_list, session_id_list, window_id_list) AS paths_tuple,
                     arraySplit(x -> if(ifNull(less(x.3, 1800), 0), 0, 1), paths_tuple) AS session_paths,
                     path_time_tuple.4 AS uuid_items,
                     path_time_tuple.5 AS timestamp_items,
                     path_time_tuple.6 AS session_id_items,
                     path_time_tuple.7 AS window_id_items
              FROM
                (SELECT person_id AS person_id,
                        groupArray(timestamp) AS timing_list,
                        groupArray(path_item) AS path_list,
                        groupArray(uuid) AS uuid_list,
                        groupArray(timestamp) AS timestamp_list,
                        groupArray(session_id) AS session_id_list,
                        groupArray(window_id) AS window_id_list
                 FROM
                   (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
                           events__pdi.person_id AS person_id,
                           ifNull(if(equals(events.event, '$screen'), replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$screen_name'), ''), 'null'), '^"|"$', ''), if(equals(events.event, '$pageview'), replaceRegexpAll(ifNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$current_url'), ''), 'null'), '^"|"$', ''), ''), '(.)/$', '\\1'), events.event)), '') AS path_item_ungrouped,
                           events.uuid AS uuid,
                           toTimeZone(events.timestamp, 'UTC') AS timestamp,
                           ifNull(nullIf(nullIf(events.`$session_id`, ''), 'null'), '') AS session_id,
                           ifNull(nullIf(nullIf(events.`$window_id`, ''), 'null'), '') AS window_id,
                           NULL AS groupings,
                           multiMatchAnyIndex(path_item_ungrouped, NULL) AS group_index,
                           (if(ifNull(greater(group_index, 0), 0), groupings[group_index], path_item_ungrouped) AS path_item) AS path_item
                    FROM events
                    INNER JOIN
                      (SELECT argMax(person_distinct_id2.person_id, person_distinct_id2.version) AS person_id,
                              person_distinct_id2.distinct_id AS distinct_id
                       FROM person_distinct_id2
                       WHERE equals(person_distinct_id2.team_id, 2)
                       GROUP BY person_distinct_id2.distinct_id
                       HAVING ifNull(equals(argMax(person_distinct_id2.is_deleted, person_distinct_id2.version), 0), 0)) AS events__pdi ON equals(events.distinct_id, events__pdi.distinct_id)
                    WHERE and(equals(events.team_id, 2), and(greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2011-12-31 00:00:00', 6, 'UTC')))), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), assumeNotNull(parseDateTime64BestEffortOrNull('2012-01-07 23:59:59', 6, 'UTC')))))
                    ORDER BY events__pdi.person_id ASC, toTimeZone(events.timestamp, 'UTC') ASC)
                 GROUP BY person_id) ARRAY
              JOIN session_paths AS path_time_tuple,
                   arrayEnumerate(session_paths) AS session_index) ARRAY
           JOIN limited_path_timings AS joined_path_tuple,
                arrayEnumerate(limited_path_timings) AS event_in_session_index))
     WHERE and(ifNull(equals(last_path_key, '2_/2'), 0), ifNull(equals(path_key, '3_/3'), 0))
     GROUP BY person_id) AS source ON equals(persons.id, source.actor_id)
  ORDER BY persons.id ASC
  LIMIT 101
  OFFSET 0 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1
  '''
# ---
# name: TestClickhousePaths.test_step_limit.8
  '''
  SELECT persons.id AS id
  FROM
    (SELECT person.id AS id
     FROM person
     WHERE equals(person.team_id, 2)
     GROUP BY person.id
     HAVING ifNull(equals(argMax(person.is_deleted, person.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS persons
  INNER JOIN
    (SELECT person_id AS actor_id,
            groupUniqArray(100)(tuple(timestamp, uuid, session_id, window_id)) AS matching_events,
            count(*) AS event_count
     FROM
       (SELECT person_id AS person_id,
               path AS path,
                       conversion_time AS conversion_time,
                       event_in_session_index AS event_in_session_index,
                       concat(ifNull(toString(event_in_session_index), ''), '_', ifNull(toString(path), '')) AS path_key,
                       if(ifNull(greater(event_in_session_index, 1), 0), concat(ifNull(toString(minus(event_in_session_index, 1)), ''), '_', ifNull(toString(prev_path), '')), NULL) AS last_path_key,
                       path_dropoff_key AS path_dropoff_key,
                       final_uuid AS uuid,
                       final_timestamp AS timestamp,
                       final_session_id AS session_id,
                       final_window_id AS window_id
        FROM
          (SELECT person_id AS person_id,
                  joined_path_tuple.1 AS path,
                  joined_path_tuple.2 AS conversion_time,
                  joined_path_tuple.3 AS prev_path,
                  event_in_session_index,
                  session_index AS session_index,
                  arrayPopFront(arrayPushBack(path_basic, '')) AS path_basic_0,
                  arrayMap((x, y) -> if(ifNull(equals(x, y), isNull(x)
                                               and isNull(y)), 0, 1), path_basic, path_basic_0) AS mapping,
                  arrayFilter((x, y) -> y, time, mapping) AS timings,
                  arrayFilter((x, y) -> y, path_basic, mapping) AS compact_path,
                  indexOf(compact_path, NULL) AS target_index,
                  joined_path_tuple.4 AS final_uuid,
                  joined_path_tuple.5 AS final_timestamp,
                  joined_path_tuple.6 AS final_session_id,
                  joined_path_tuple.7 AS final_window_id,
                  arrayFilter((x, y) -> y, uuid_items, mapping) AS uuid,
                  arrayFilter((x, y) -> y, timestamp_items, mapping) AS timestamp,
                  arrayFilter((x, y) -> y, session_id_items, mapping) AS session_id,
                  arrayFilter((x, y) -> y, window_id_items, mapping) AS window_id,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(compact_path, target_index), compact_path) AS filtered_path,
                  arraySlice(filtered_path, 1, 4) AS limited_path,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(timings, target_index), timings) AS filtered_timings,
                  arraySlice(filtered_timings, 1, 4) AS limited_timings,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(uuid, target_index), uuid) AS filtered_uuid,
                  arraySlice(filtered_uuid, 1, 4) AS limited_uuid,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(timestamp, target_index), timestamp) AS filtered_timestamp,
                  arraySlice(filtered_timestamp, 1, 4) AS limited_timestamp,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(session_id, target_index), session_id) AS filtered_session_id,
                  arraySlice(filtered_session_id, 1, 4) AS limited_session_id,
                  if(ifNull(greater(target_index, 0), 0), arraySlice(window_id, target_index), window_id) AS filtered_window_id,
                  arraySlice(filtered_window_id, 1, 4) AS limited_window_id,
                  arrayDifference(limited_timings) AS timings_diff,
                  concat(ifNull(toString(length(limited_path)), ''), '_', ifNull(toString(limited_path[-1]), '')) AS path_dropoff_key,
                  arrayZip(limited_path, timings_diff, arrayPopBack(arrayPushFront(limited_path, '')), limited_uuid, limited_timestamp, limited_session_id, limited_window_id) AS limited_path_timings
           FROM
             (SELECT person_id AS person_id,
                     path_time_tuple.1 AS path_basic,
                     path_time_tuple.2 AS time,
                     session_index,
                     arrayZip(path_list, timing_list, arrayDifference(timing_list), uuid_list, timestamp_list, session_id_list, window_id_list) AS paths_tuple,
                     arraySplit(x -> if(ifNull(less(x.3, 1800), 0), 0, 1), paths_tuple) AS session_paths,
                     path_time_tuple.4 AS uuid_items,
                     path_time_tuple.5 AS timestamp_items,
                     path_time_tuple.6 AS session_id_items,
                     path_time_tuple.7 AS window_id_items
              FROM
                (SELECT person_id AS person_id,
                        groupArray(timestamp) AS timing_list,
                        groupArray(path_item) AS path_list,
                        groupArray(uuid) AS uuid_list,
                        groupArray(timestamp) AS timestamp_list,
                        groupArray(session_id) AS session_id_list,
                        groupArray(window_id) AS window_id_list
                 FROM
                   (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
                           events__pdi.person_id AS person_id,
                           ifNull(if(equals(events.event, '$screen'), replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$screen_name'), ''), 'null'), '^"|"$', ''), if(equals(events.event, '$pageview'), replaceRegexpAll(ifNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$current_url'), ''), 'null'), '^"|"$', ''), ''), '(.)/$', '\\1'), events.event)), '') AS path_item_ungrouped,
                           events.uuid AS uuid,
                           toTimeZone(events.timestamp, 'UTC') AS timestamp,
                           ifNull(nullIf(nullIf(events.`$session_id`, ''), 'null'), '') AS session_id,
                           ifNull(nullIf(nullIf(events.`$window_id`, ''), 'null'), '') AS window_id,
                           NULL AS groupings,
                           multiMatchAnyIndex(path_item_ungrouped, NULL) AS group_index,
                           (if(ifNull(greater(group_index, 0), 0), groupings[group_index], path_item_ungrouped) AS path_item) AS path_item
                    FROM events
                    INNER JOIN
                      (SELECT argMax(person_distinct_id2.person_id, person_distinct_id2.version) AS person_id,
                              person_distinct_id2.distinct_id AS distinct_id
                       FROM person_distinct_id2
                       WHERE equals(person_distinct_id2.team_id, 2)
                       GROUP BY person_distinct_id2.distinct_id
                       HAVING ifNull(equals(argMax(person_distinct_id2.is_deleted, person_distinct_id2.version), 0), 0)) AS events__pdi ON equals(events.distinct_id, events__pdi.distinct_id)
                    WHERE and(equals(events.team_id, 2), and(greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2011-12-31 00:00:00', 6, 'UTC')))), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), assumeNotNull(parseDateTime64BestEffortOrNull('2012-01-07 23:59:59', 6, 'UTC')))))
                    ORDER BY events__pdi.person_id ASC, toTimeZone(events.timestamp, 'UTC') ASC)
                 GROUP BY person_id) ARRAY
              JOIN session_paths AS path_time_tuple,
                   arrayEnumerate(session_paths) AS session_index) ARRAY
           JOIN limited_path_timings AS joined_path_tuple,
                arrayEnumerate(limited_path_timings) AS event_in_session_index))
     WHERE and(ifNull(equals(last_path_key, '3_/3'), 0), ifNull(equals(path_key, '4_/4'), 0))
     GROUP BY person_id) AS source ON equals(persons.id, source.actor_id)
  ORDER BY persons.id ASC
  LIMIT 101
  OFFSET 0 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1
  '''
# ---
# name: TestClickhousePaths.test_wildcard_groups_across_people
  '''
  SELECT last_path_key AS source_event,
         path_key AS target_event,
         count(*) AS event_count,
         avg(conversion_time) AS average_conversion_time
  FROM
    (SELECT person_id AS person_id,
            path AS path,
                    conversion_time AS conversion_time,
                    event_in_session_index AS event_in_session_index,
                    concat(ifNull(toString(event_in_session_index), ''), '_', ifNull(toString(path), '')) AS path_key,
                    if(ifNull(greater(event_in_session_index, 1), 0), concat(ifNull(toString(minus(event_in_session_index, 1)), ''), '_', ifNull(toString(prev_path), '')), NULL) AS last_path_key,
                    path_dropoff_key AS path_dropoff_key
     FROM
       (SELECT person_id AS person_id,
               joined_path_tuple.1 AS path,
               joined_path_tuple.2 AS conversion_time,
               joined_path_tuple.3 AS prev_path,
               event_in_session_index,
               session_index AS session_index,
               arrayPopFront(arrayPushBack(path_basic, '')) AS path_basic_0,
               arrayMap((x, y) -> if(ifNull(equals(x, y), isNull(x)
                                            and isNull(y)), 0, 1), path_basic, path_basic_0) AS mapping,
               arrayFilter((x, y) -> y, time, mapping) AS timings,
               arrayFilter((x, y) -> y, path_basic, mapping) AS compact_path,
               indexOf(compact_path, NULL) AS target_index,
               if(ifNull(greater(target_index, 0), 0), arraySlice(compact_path, target_index), compact_path) AS filtered_path,
               arraySlice(filtered_path, 1, 4) AS limited_path,
               if(ifNull(greater(target_index, 0), 0), arraySlice(timings, target_index), timings) AS filtered_timings,
               arraySlice(filtered_timings, 1, 4) AS limited_timings,
               arrayDifference(limited_timings) AS timings_diff,
               concat(ifNull(toString(length(limited_path)), ''), '_', ifNull(toString(limited_path[-1]), '')) AS path_dropoff_key,
               arrayZip(limited_path, timings_diff, arrayPopBack(arrayPushFront(limited_path, ''))) AS limited_path_timings
        FROM
          (SELECT person_id AS person_id,
                  path_time_tuple.1 AS path_basic,
                  path_time_tuple.2 AS time,
                  session_index,
                  arrayZip(path_list, timing_list, arrayDifference(timing_list)) AS paths_tuple,
                  arraySplit(x -> if(ifNull(less(x.3, 1800), 0), 0, 1), paths_tuple) AS session_paths
           FROM
             (SELECT person_id AS person_id,
                     groupArray(timestamp) AS timing_list,
                     groupArray(path_item) AS path_list
              FROM
                (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
                        events__pdi.person_id AS person_id,
                        ifNull(if(equals(events.event, '$pageview'), replaceRegexpAll(ifNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$current_url'), ''), 'null'), '^"|"$', ''), ''), '(.)/$', '\\1'), events.event), '') AS path_item_ungrouped,
                        ['/bar/*/foo'] AS groupings,
                        multiMatchAnyIndex(path_item_ungrouped, ['/bar/.*/foo']) AS group_index,
                        (if(ifNull(greater(group_index, 0), 0), groupings[group_index], path_item_ungrouped) AS path_item) AS path_item
                 FROM events
                 INNER JOIN
                   (SELECT argMax(person_distinct_id2.person_id, person_distinct_id2.version) AS person_id,
                           person_distinct_id2.distinct_id AS distinct_id
                    FROM person_distinct_id2
                    WHERE equals(person_distinct_id2.team_id, 2)
                    GROUP BY person_distinct_id2.distinct_id
                    HAVING ifNull(equals(argMax(person_distinct_id2.is_deleted, person_distinct_id2.version), 0), 0)) AS events__pdi ON equals(events.distinct_id, events__pdi.distinct_id)
                 WHERE and(equals(events.team_id, 2), and(greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2012-01-01 00:00:00', 6, 'UTC')))), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), assumeNotNull(parseDateTime64BestEffortOrNull('2023-05-23 23:59:59', 6, 'UTC')))), equals(events.event, '$pageview'))
                 ORDER BY events__pdi.person_id ASC, toTimeZone(events.timestamp, 'UTC') ASC)
              GROUP BY person_id) ARRAY
           JOIN session_paths AS path_time_tuple,
                arrayEnumerate(session_paths) AS session_index) ARRAY
        JOIN limited_path_timings AS joined_path_tuple,
             arrayEnumerate(limited_path_timings) AS event_in_session_index))
  WHERE isNotNull(source_event)
  GROUP BY source_event,
           target_event
  ORDER BY event_count DESC,
           source_event ASC,
           target_event ASC
  LIMIT 50 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1
  '''
# ---
# name: TestClickhousePaths.test_wildcard_groups_evil_input
  '''
  SELECT last_path_key AS source_event,
         path_key AS target_event,
         count(*) AS event_count,
         avg(conversion_time) AS average_conversion_time
  FROM
    (SELECT person_id AS person_id,
            path AS path,
                    conversion_time AS conversion_time,
                    event_in_session_index AS event_in_session_index,
                    concat(ifNull(toString(event_in_session_index), ''), '_', ifNull(toString(path), '')) AS path_key,
                    if(ifNull(greater(event_in_session_index, 1), 0), concat(ifNull(toString(minus(event_in_session_index, 1)), ''), '_', ifNull(toString(prev_path), '')), NULL) AS last_path_key,
                    path_dropoff_key AS path_dropoff_key
     FROM
       (SELECT person_id AS person_id,
               joined_path_tuple.1 AS path,
               joined_path_tuple.2 AS conversion_time,
               joined_path_tuple.3 AS prev_path,
               event_in_session_index,
               session_index AS session_index,
               arrayPopFront(arrayPushBack(path_basic, '')) AS path_basic_0,
               arrayMap((x, y) -> if(ifNull(equals(x, y), isNull(x)
                                            and isNull(y)), 0, 1), path_basic, path_basic_0) AS mapping,
               arrayFilter((x, y) -> y, time, mapping) AS timings,
               arrayFilter((x, y) -> y, path_basic, mapping) AS compact_path,
               indexOf(compact_path, NULL) AS target_index,
               if(ifNull(greater(target_index, 0), 0), arraySlice(compact_path, target_index), compact_path) AS filtered_path,
               arraySlice(filtered_path, 1, 5) AS limited_path,
               if(ifNull(greater(target_index, 0), 0), arraySlice(timings, target_index), timings) AS filtered_timings,
               arraySlice(filtered_timings, 1, 5) AS limited_timings,
               arrayDifference(limited_timings) AS timings_diff,
               concat(ifNull(toString(length(limited_path)), ''), '_', ifNull(toString(limited_path[-1]), '')) AS path_dropoff_key,
               arrayZip(limited_path, timings_diff, arrayPopBack(arrayPushFront(limited_path, ''))) AS limited_path_timings
        FROM
          (SELECT person_id AS person_id,
                  path_time_tuple.1 AS path_basic,
                  path_time_tuple.2 AS time,
                  session_index,
                  arrayZip(path_list, timing_list, arrayDifference(timing_list)) AS paths_tuple,
                  arraySplit(x -> if(ifNull(less(x.3, 1800), 0), 0, 1), paths_tuple) AS session_paths
           FROM
             (SELECT person_id AS person_id,
                     groupArray(timestamp) AS timing_list,
                     groupArray(path_item) AS path_list
              FROM
                (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
                        events__pdi.person_id AS person_id,
                        ifNull(if(equals(events.event, '$pageview'), replaceRegexpAll(ifNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$current_url'), ''), 'null'), '^"|"$', ''), ''), '(.)/$', '\\1'), events.event), '') AS path_item_ungrouped,
                        ['(a+)+',
                         '[aaa|aaaa]+',
                         '1.*',
                         '.*',
                         '/3?q=1',
                         '/3*'] AS groupings,
                        multiMatchAnyIndex(path_item_ungrouped, ['\\(a\\+\\)\\+', '\\[aaa\\|aaaa\\]\\+', '1\\..*', '\\..*', '/3\\?q=1', '/3.*']) AS group_index,
                        (if(ifNull(greater(group_index, 0), 0), groupings[group_index], path_item_ungrouped) AS path_item) AS path_item
                 FROM events
                 INNER JOIN
                   (SELECT argMax(person_distinct_id2.person_id, person_distinct_id2.version) AS person_id,
                           person_distinct_id2.distinct_id AS distinct_id
                    FROM person_distinct_id2
                    WHERE equals(person_distinct_id2.team_id, 2)
                    GROUP BY person_distinct_id2.distinct_id
                    HAVING ifNull(equals(argMax(person_distinct_id2.is_deleted, person_distinct_id2.version), 0), 0)) AS events__pdi ON equals(events.distinct_id, events__pdi.distinct_id)
                 WHERE and(equals(events.team_id, 2), and(greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2012-01-01 00:00:00', 6, 'UTC')))), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), assumeNotNull(parseDateTime64BestEffortOrNull('2023-05-23 23:59:59', 6, 'UTC')))), equals(events.event, '$pageview'))
                 ORDER BY events__pdi.person_id ASC, toTimeZone(events.timestamp, 'UTC') ASC)
              GROUP BY person_id) ARRAY
           JOIN session_paths AS path_time_tuple,
                arrayEnumerate(session_paths) AS session_index) ARRAY
        JOIN limited_path_timings AS joined_path_tuple,
             arrayEnumerate(limited_path_timings) AS event_in_session_index))
  WHERE isNotNull(source_event)
  GROUP BY source_event,
           target_event
  ORDER BY event_count DESC,
           source_event ASC,
           target_event ASC
  LIMIT 50 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1
  '''
# ---
