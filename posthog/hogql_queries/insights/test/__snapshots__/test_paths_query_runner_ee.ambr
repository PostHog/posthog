# serializer version: 1
# name: TestClickhousePaths.test_end
  '''
  SELECT last_path_key AS source_event,
         path_key AS target_event,
         count(*) AS event_count,
         avg(conversion_time) AS average_conversion_time
  FROM
    (SELECT person_id AS person_id,
            path AS path,
                    conversion_time AS conversion_time,
                    event_in_session_index AS event_in_session_index,
                    concat(ifNull(toString(event_in_session_index), ''), '_', ifNull(toString(path), '')) AS path_key,
                    if(ifNull(greater(event_in_session_index, 1), 0), concat(ifNull(toString(minus(event_in_session_index, 1)), ''), '_', ifNull(toString(prev_path), '')), NULL) AS last_path_key,
                    path_dropoff_key AS path_dropoff_key
     FROM
       (SELECT person_id AS person_id,
               joined_path_tuple.1 AS path,
               joined_path_tuple.2 AS conversion_time,
               joined_path_tuple.3 AS prev_path,
               event_in_session_index,
               session_index AS session_index,
               arrayPopFront(arrayPushBack(path_basic, '')) AS path_basic_0,
               arrayMap((x, y) -> if(ifNull(equals(x, y), isNull(x)
                                            and isNull(y)), 0, 1), path_basic, path_basic_0) AS mapping,
               arrayFilter((x, y) -> y, time, mapping) AS timings,
               arrayFilter((x, y) -> y, path_basic, mapping) AS compact_path,
               indexOf(compact_path, '/about') AS target_index,
               if(ifNull(greater(target_index, 0), 0), arrayResize(compact_path, target_index), compact_path) AS filtered_path,
               arraySlice(filtered_path, -5) AS limited_path,
               if(ifNull(greater(target_index, 0), 0), arrayResize(timings, target_index), timings) AS filtered_timings,
               arraySlice(filtered_timings, -5) AS limited_timings,
               arrayDifference(limited_timings) AS timings_diff,
               concat(ifNull(toString(length(limited_path)), ''), '_', ifNull(toString(limited_path[-1]), '')) AS path_dropoff_key,
               arrayZip(limited_path, timings_diff, arrayPopBack(arrayPushFront(limited_path, ''))) AS limited_path_timings
        FROM
          (SELECT person_id AS person_id,
                  path_time_tuple.1 AS path_basic,
                  path_time_tuple.2 AS time,
                  session_index,
                  arrayZip(path_list, timing_list, arrayDifference(timing_list)) AS paths_tuple,
                  arraySplit(x -> if(ifNull(less(x.3, 1800), 0), 0, 1), paths_tuple) AS session_paths
           FROM
             (SELECT person_id AS person_id,
                     groupArray(timestamp) AS timing_list,
                     groupArray(path_item) AS path_list
              FROM
                (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
                        events__pdi.person_id AS person_id,
                        ifNull(if(equals(events.event, '$screen'), replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$screen_name'), ''), 'null'), '^"|"$', ''), if(equals(events.event, '$pageview'), replaceRegexpAll(ifNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$current_url'), ''), 'null'), '^"|"$', ''), ''), '(.)/$', '\\1'), events.event)), '') AS path_item_ungrouped,
                        NULL AS groupings,
                        multiMatchAnyIndex(path_item_ungrouped, NULL) AS group_index,
                        (if(ifNull(greater(group_index, 0), 0), groupings[group_index], path_item_ungrouped) AS path_item) AS path_item
                 FROM events
                 INNER JOIN
                   (SELECT argMax(person_distinct_id2.person_id, person_distinct_id2.version) AS person_id,
                           person_distinct_id2.distinct_id AS distinct_id
                    FROM person_distinct_id2
                    WHERE equals(person_distinct_id2.team_id, 2)
                    GROUP BY person_distinct_id2.distinct_id
                    HAVING ifNull(equals(argMax(person_distinct_id2.is_deleted, person_distinct_id2.version), 0), 0)) AS events__pdi ON equals(events.distinct_id, events__pdi.distinct_id)
                 WHERE and(equals(events.team_id, 2), and(greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2021-05-01 00:00:00', 6, 'UTC')))), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), assumeNotNull(parseDateTime64BestEffortOrNull('2021-05-07 23:59:59', 6, 'UTC')))))
                 ORDER BY events__pdi.person_id ASC, toTimeZone(events.timestamp, 'UTC') ASC)
              GROUP BY person_id) ARRAY
           JOIN session_paths AS path_time_tuple,
                arrayEnumerate(session_paths) AS session_index) ARRAY
        JOIN limited_path_timings AS joined_path_tuple,
             arrayEnumerate(limited_path_timings) AS event_in_session_index
        WHERE ifNull(greater(target_index, 0), 0)))
  WHERE isNotNull(source_event)
  GROUP BY source_event,
           target_event
  ORDER BY event_count DESC,
           source_event ASC,
           target_event ASC
  LIMIT 50 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1,
                    format_csv_allow_double_quotes=0,
                    max_ast_elements=1000000,
                    max_expanded_ast_elements=1000000,
                    max_query_size=524288
  '''
# ---
# name: TestClickhousePaths.test_end.1
  '''
  SELECT last_path_key AS source_event,
         path_key AS target_event,
         count(*) AS event_count,
         avg(conversion_time) AS average_conversion_time
  FROM
    (SELECT person_id AS person_id,
            path AS path,
                    conversion_time AS conversion_time,
                    event_in_session_index AS event_in_session_index,
                    concat(ifNull(toString(event_in_session_index), ''), '_', ifNull(toString(path), '')) AS path_key,
                    if(ifNull(greater(event_in_session_index, 1), 0), concat(ifNull(toString(minus(event_in_session_index, 1)), ''), '_', ifNull(toString(prev_path), '')), NULL) AS last_path_key,
                    path_dropoff_key AS path_dropoff_key
     FROM
       (SELECT person_id AS person_id,
               joined_path_tuple.1 AS path,
               joined_path_tuple.2 AS conversion_time,
               joined_path_tuple.3 AS prev_path,
               event_in_session_index,
               session_index AS session_index,
               arrayPopFront(arrayPushBack(path_basic, '')) AS path_basic_0,
               arrayMap((x, y) -> if(ifNull(equals(x, y), isNull(x)
                                            and isNull(y)), 0, 1), path_basic, path_basic_0) AS mapping,
               arrayFilter((x, y) -> y, time, mapping) AS timings,
               arrayFilter((x, y) -> y, path_basic, mapping) AS compact_path,
               indexOf(compact_path, '/about') AS target_index,
               if(ifNull(greater(target_index, 0), 0), arrayResize(compact_path, target_index), compact_path) AS filtered_path,
               arraySlice(filtered_path, -5) AS limited_path,
               if(ifNull(greater(target_index, 0), 0), arrayResize(timings, target_index), timings) AS filtered_timings,
               arraySlice(filtered_timings, -5) AS limited_timings,
               arrayDifference(limited_timings) AS timings_diff,
               concat(ifNull(toString(length(limited_path)), ''), '_', ifNull(toString(limited_path[-1]), '')) AS path_dropoff_key,
               arrayZip(limited_path, timings_diff, arrayPopBack(arrayPushFront(limited_path, ''))) AS limited_path_timings
        FROM
          (SELECT person_id AS person_id,
                  path_time_tuple.1 AS path_basic,
                  path_time_tuple.2 AS time,
                  session_index,
                  arrayZip(path_list, timing_list, arrayDifference(timing_list)) AS paths_tuple,
                  arraySplit(x -> if(ifNull(less(x.3, 1800), 0), 0, 1), paths_tuple) AS session_paths
           FROM
             (SELECT person_id AS person_id,
                     groupArray(timestamp) AS timing_list,
                     groupArray(path_item) AS path_list
              FROM
                (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
                        events__pdi.person_id AS person_id,
                        ifNull(if(equals(events.event, '$screen'), replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$screen_name'), ''), 'null'), '^"|"$', ''), if(equals(events.event, '$pageview'), replaceRegexpAll(ifNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$current_url'), ''), 'null'), '^"|"$', ''), ''), '(.)/$', '\\1'), events.event)), '') AS path_item_ungrouped,
                        NULL AS groupings,
                        multiMatchAnyIndex(path_item_ungrouped, NULL) AS group_index,
                        (if(ifNull(greater(group_index, 0), 0), groupings[group_index], path_item_ungrouped) AS path_item) AS path_item
                 FROM events
                 INNER JOIN
                   (SELECT argMax(person_distinct_id2.person_id, person_distinct_id2.version) AS person_id,
                           person_distinct_id2.distinct_id AS distinct_id
                    FROM person_distinct_id2
                    WHERE equals(person_distinct_id2.team_id, 2)
                    GROUP BY person_distinct_id2.distinct_id
                    HAVING ifNull(equals(argMax(person_distinct_id2.is_deleted, person_distinct_id2.version), 0), 0)) AS events__pdi ON equals(events.distinct_id, events__pdi.distinct_id)
                 WHERE and(equals(events.team_id, 2), and(greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2021-05-01 00:00:00', 6, 'UTC')))), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), assumeNotNull(parseDateTime64BestEffortOrNull('2021-05-07 23:59:59', 6, 'UTC')))))
                 ORDER BY events__pdi.person_id ASC, toTimeZone(events.timestamp, 'UTC') ASC)
              GROUP BY person_id) ARRAY
           JOIN session_paths AS path_time_tuple,
                arrayEnumerate(session_paths) AS session_index) ARRAY
        JOIN limited_path_timings AS joined_path_tuple,
             arrayEnumerate(limited_path_timings) AS event_in_session_index
        WHERE ifNull(greater(target_index, 0), 0)))
  WHERE isNotNull(source_event)
  GROUP BY source_event,
           target_event
  ORDER BY event_count DESC,
           source_event ASC,
           target_event ASC
  LIMIT 50 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1,
                    format_csv_allow_double_quotes=0,
                    max_ast_elements=1000000,
                    max_expanded_ast_elements=1000000,
                    max_query_size=524288
  '''
# ---
# name: TestClickhousePaths.test_end_materialized
  '''
  SELECT last_path_key AS source_event,
         path_key AS target_event,
         count(*) AS event_count,
         avg(conversion_time) AS average_conversion_time
  FROM
    (SELECT person_id AS person_id,
            path AS path,
                    conversion_time AS conversion_time,
                    event_in_session_index AS event_in_session_index,
                    concat(ifNull(toString(event_in_session_index), ''), '_', ifNull(toString(path), '')) AS path_key,
                    if(ifNull(greater(event_in_session_index, 1), 0), concat(ifNull(toString(minus(event_in_session_index, 1)), ''), '_', ifNull(toString(prev_path), '')), NULL) AS last_path_key,
                    path_dropoff_key AS path_dropoff_key
     FROM
       (SELECT person_id AS person_id,
               joined_path_tuple.1 AS path,
               joined_path_tuple.2 AS conversion_time,
               joined_path_tuple.3 AS prev_path,
               event_in_session_index,
               session_index AS session_index,
               arrayPopFront(arrayPushBack(path_basic, '')) AS path_basic_0,
               arrayMap((x, y) -> if(ifNull(equals(x, y), isNull(x)
                                            and isNull(y)), 0, 1), path_basic, path_basic_0) AS mapping,
               arrayFilter((x, y) -> y, time, mapping) AS timings,
               arrayFilter((x, y) -> y, path_basic, mapping) AS compact_path,
               indexOf(compact_path, '/about') AS target_index,
               if(ifNull(greater(target_index, 0), 0), arrayResize(compact_path, target_index), compact_path) AS filtered_path,
               arraySlice(filtered_path, -5) AS limited_path,
               if(ifNull(greater(target_index, 0), 0), arrayResize(timings, target_index), timings) AS filtered_timings,
               arraySlice(filtered_timings, -5) AS limited_timings,
               arrayDifference(limited_timings) AS timings_diff,
               concat(ifNull(toString(length(limited_path)), ''), '_', ifNull(toString(limited_path[-1]), '')) AS path_dropoff_key,
               arrayZip(limited_path, timings_diff, arrayPopBack(arrayPushFront(limited_path, ''))) AS limited_path_timings
        FROM
          (SELECT person_id AS person_id,
                  path_time_tuple.1 AS path_basic,
                  path_time_tuple.2 AS time,
                  session_index,
                  arrayZip(path_list, timing_list, arrayDifference(timing_list)) AS paths_tuple,
                  arraySplit(x -> if(ifNull(less(x.3, 1800), 0), 0, 1), paths_tuple) AS session_paths
           FROM
             (SELECT person_id AS person_id,
                     groupArray(timestamp) AS timing_list,
                     groupArray(path_item) AS path_list
              FROM
                (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
                        events__pdi.person_id AS person_id,
                        ifNull(if(equals(events.event, '$screen'), nullIf(nullIf(events.`mat_$screen_name`, ''), 'null'), if(equals(events.event, '$pageview'), replaceRegexpAll(ifNull(nullIf(nullIf(events.`mat_$current_url`, ''), 'null'), ''), '(.)/$', '\\1'), events.event)), '') AS path_item_ungrouped,
                        NULL AS groupings,
                        multiMatchAnyIndex(path_item_ungrouped, NULL) AS group_index,
                        (if(ifNull(greater(group_index, 0), 0), groupings[group_index], path_item_ungrouped) AS path_item) AS path_item
                 FROM events
                 INNER JOIN
                   (SELECT argMax(person_distinct_id2.person_id, person_distinct_id2.version) AS person_id,
                           person_distinct_id2.distinct_id AS distinct_id
                    FROM person_distinct_id2
                    WHERE equals(person_distinct_id2.team_id, 2)
                    GROUP BY person_distinct_id2.distinct_id
                    HAVING ifNull(equals(argMax(person_distinct_id2.is_deleted, person_distinct_id2.version), 0), 0)) AS events__pdi ON equals(events.distinct_id, events__pdi.distinct_id)
                 WHERE and(equals(events.team_id, 2), and(greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2021-05-01 00:00:00', 6, 'UTC')))), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), assumeNotNull(parseDateTime64BestEffortOrNull('2021-05-07 23:59:59', 6, 'UTC')))))
                 ORDER BY events__pdi.person_id ASC, toTimeZone(events.timestamp, 'UTC') ASC)
              GROUP BY person_id) ARRAY
           JOIN session_paths AS path_time_tuple,
                arrayEnumerate(session_paths) AS session_index) ARRAY
        JOIN limited_path_timings AS joined_path_tuple,
             arrayEnumerate(limited_path_timings) AS event_in_session_index
        WHERE ifNull(greater(target_index, 0), 0)))
  WHERE isNotNull(source_event)
  GROUP BY source_event,
           target_event
  ORDER BY event_count DESC,
           source_event ASC,
           target_event ASC
  LIMIT 50 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1,
                    format_csv_allow_double_quotes=0,
                    max_ast_elements=1000000,
                    max_expanded_ast_elements=1000000,
                    max_query_size=524288
  '''
# ---
# name: TestClickhousePaths.test_end_materialized.1
  '''
  SELECT last_path_key AS source_event,
         path_key AS target_event,
         count(*) AS event_count,
         avg(conversion_time) AS average_conversion_time
  FROM
    (SELECT person_id AS person_id,
            path AS path,
                    conversion_time AS conversion_time,
                    event_in_session_index AS event_in_session_index,
                    concat(ifNull(toString(event_in_session_index), ''), '_', ifNull(toString(path), '')) AS path_key,
                    if(ifNull(greater(event_in_session_index, 1), 0), concat(ifNull(toString(minus(event_in_session_index, 1)), ''), '_', ifNull(toString(prev_path), '')), NULL) AS last_path_key,
                    path_dropoff_key AS path_dropoff_key
     FROM
       (SELECT person_id AS person_id,
               joined_path_tuple.1 AS path,
               joined_path_tuple.2 AS conversion_time,
               joined_path_tuple.3 AS prev_path,
               event_in_session_index,
               session_index AS session_index,
               arrayPopFront(arrayPushBack(path_basic, '')) AS path_basic_0,
               arrayMap((x, y) -> if(ifNull(equals(x, y), isNull(x)
                                            and isNull(y)), 0, 1), path_basic, path_basic_0) AS mapping,
               arrayFilter((x, y) -> y, time, mapping) AS timings,
               arrayFilter((x, y) -> y, path_basic, mapping) AS compact_path,
               indexOf(compact_path, '/about') AS target_index,
               if(ifNull(greater(target_index, 0), 0), arrayResize(compact_path, target_index), compact_path) AS filtered_path,
               arraySlice(filtered_path, -5) AS limited_path,
               if(ifNull(greater(target_index, 0), 0), arrayResize(timings, target_index), timings) AS filtered_timings,
               arraySlice(filtered_timings, -5) AS limited_timings,
               arrayDifference(limited_timings) AS timings_diff,
               concat(ifNull(toString(length(limited_path)), ''), '_', ifNull(toString(limited_path[-1]), '')) AS path_dropoff_key,
               arrayZip(limited_path, timings_diff, arrayPopBack(arrayPushFront(limited_path, ''))) AS limited_path_timings
        FROM
          (SELECT person_id AS person_id,
                  path_time_tuple.1 AS path_basic,
                  path_time_tuple.2 AS time,
                  session_index,
                  arrayZip(path_list, timing_list, arrayDifference(timing_list)) AS paths_tuple,
                  arraySplit(x -> if(ifNull(less(x.3, 1800), 0), 0, 1), paths_tuple) AS session_paths
           FROM
             (SELECT person_id AS person_id,
                     groupArray(timestamp) AS timing_list,
                     groupArray(path_item) AS path_list
              FROM
                (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
                        events__pdi.person_id AS person_id,
                        ifNull(if(equals(events.event, '$screen'), nullIf(nullIf(events.`mat_$screen_name`, ''), 'null'), if(equals(events.event, '$pageview'), replaceRegexpAll(ifNull(nullIf(nullIf(events.`mat_$current_url`, ''), 'null'), ''), '(.)/$', '\\1'), events.event)), '') AS path_item_ungrouped,
                        NULL AS groupings,
                        multiMatchAnyIndex(path_item_ungrouped, NULL) AS group_index,
                        (if(ifNull(greater(group_index, 0), 0), groupings[group_index], path_item_ungrouped) AS path_item) AS path_item
                 FROM events
                 INNER JOIN
                   (SELECT argMax(person_distinct_id2.person_id, person_distinct_id2.version) AS person_id,
                           person_distinct_id2.distinct_id AS distinct_id
                    FROM person_distinct_id2
                    WHERE equals(person_distinct_id2.team_id, 2)
                    GROUP BY person_distinct_id2.distinct_id
                    HAVING ifNull(equals(argMax(person_distinct_id2.is_deleted, person_distinct_id2.version), 0), 0)) AS events__pdi ON equals(events.distinct_id, events__pdi.distinct_id)
                 WHERE and(equals(events.team_id, 2), and(greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2021-05-01 00:00:00', 6, 'UTC')))), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), assumeNotNull(parseDateTime64BestEffortOrNull('2021-05-07 23:59:59', 6, 'UTC')))))
                 ORDER BY events__pdi.person_id ASC, toTimeZone(events.timestamp, 'UTC') ASC)
              GROUP BY person_id) ARRAY
           JOIN session_paths AS path_time_tuple,
                arrayEnumerate(session_paths) AS session_index) ARRAY
        JOIN limited_path_timings AS joined_path_tuple,
             arrayEnumerate(limited_path_timings) AS event_in_session_index
        WHERE ifNull(greater(target_index, 0), 0)))
  WHERE isNotNull(source_event)
  GROUP BY source_event,
           target_event
  ORDER BY event_count DESC,
           source_event ASC,
           target_event ASC
  LIMIT 50 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1,
                    format_csv_allow_double_quotes=0,
                    max_ast_elements=1000000,
                    max_expanded_ast_elements=1000000,
                    max_query_size=524288
  '''
# ---
# name: TestClickhousePaths.test_event_exclusion_filters_with_wildcard_groups
  '''
  SELECT last_path_key AS source_event,
         path_key AS target_event,
         count(*) AS event_count,
         avg(conversion_time) AS average_conversion_time
  FROM
    (SELECT person_id AS person_id,
            path AS path,
                    conversion_time AS conversion_time,
                    event_in_session_index AS event_in_session_index,
                    concat(ifNull(toString(event_in_session_index), ''), '_', ifNull(toString(path), '')) AS path_key,
                    if(ifNull(greater(event_in_session_index, 1), 0), concat(ifNull(toString(minus(event_in_session_index, 1)), ''), '_', ifNull(toString(prev_path), '')), NULL) AS last_path_key,
                    path_dropoff_key AS path_dropoff_key
     FROM
       (SELECT person_id AS person_id,
               joined_path_tuple.1 AS path,
               joined_path_tuple.2 AS conversion_time,
               joined_path_tuple.3 AS prev_path,
               event_in_session_index,
               session_index AS session_index,
               arrayPopFront(arrayPushBack(path_basic, '')) AS path_basic_0,
               arrayMap((x, y) -> if(ifNull(equals(x, y), isNull(x)
                                            and isNull(y)), 0, 1), path_basic, path_basic_0) AS mapping,
               arrayFilter((x, y) -> y, time, mapping) AS timings,
               arrayFilter((x, y) -> y, path_basic, mapping) AS compact_path,
               indexOf(compact_path, NULL) AS target_index,
               if(ifNull(greater(target_index, 0), 0), arraySlice(compact_path, target_index), compact_path) AS filtered_path,
               arraySlice(filtered_path, 1, 4) AS limited_path,
               if(ifNull(greater(target_index, 0), 0), arraySlice(timings, target_index), timings) AS filtered_timings,
               arraySlice(filtered_timings, 1, 4) AS limited_timings,
               arrayDifference(limited_timings) AS timings_diff,
               concat(ifNull(toString(length(limited_path)), ''), '_', ifNull(toString(limited_path[-1]), '')) AS path_dropoff_key,
               arrayZip(limited_path, timings_diff, arrayPopBack(arrayPushFront(limited_path, ''))) AS limited_path_timings
        FROM
          (SELECT person_id AS person_id,
                  path_time_tuple.1 AS path_basic,
                  path_time_tuple.2 AS time,
                  session_index,
                  arrayZip(path_list, timing_list, arrayDifference(timing_list)) AS paths_tuple,
                  arraySplit(x -> if(ifNull(less(x.3, 1800), 0), 0, 1), paths_tuple) AS session_paths
           FROM
             (SELECT person_id AS person_id,
                     groupArray(timestamp) AS timing_list,
                     groupArray(path_item) AS path_list
              FROM
                (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
                        events__pdi.person_id AS person_id,
                        ifNull(if(equals(events.event, '$pageview'), replaceRegexpAll(ifNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$current_url'), ''), 'null'), '^"|"$', ''), ''), '(.)/$', '\\1'), events.event), '') AS path_item_ungrouped,
                        ['/bar/*/foo'] AS groupings,
                        multiMatchAnyIndex(path_item_ungrouped, ['/bar/.*/foo']) AS group_index,
                        (if(ifNull(greater(group_index, 0), 0), groupings[group_index], path_item_ungrouped) AS path_item) AS path_item
                 FROM events
                 INNER JOIN
                   (SELECT argMax(person_distinct_id2.person_id, person_distinct_id2.version) AS person_id,
                           person_distinct_id2.distinct_id AS distinct_id
                    FROM person_distinct_id2
                    WHERE equals(person_distinct_id2.team_id, 2)
                    GROUP BY person_distinct_id2.distinct_id
                    HAVING ifNull(equals(argMax(person_distinct_id2.is_deleted, person_distinct_id2.version), 0), 0)) AS events__pdi ON equals(events.distinct_id, events__pdi.distinct_id)
                 WHERE and(equals(events.team_id, 2), and(greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2012-01-01 00:00:00', 6, 'UTC')))), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), assumeNotNull(parseDateTime64BestEffortOrNull('2023-05-23 23:59:59', 6, 'UTC')))), and(equals(events.event, '$pageview'), ifNull(notIn(path_item, ['/bar/*/foo']), 0)))
                 ORDER BY events__pdi.person_id ASC, toTimeZone(events.timestamp, 'UTC') ASC)
              GROUP BY person_id) ARRAY
           JOIN session_paths AS path_time_tuple,
                arrayEnumerate(session_paths) AS session_index) ARRAY
        JOIN limited_path_timings AS joined_path_tuple,
             arrayEnumerate(limited_path_timings) AS event_in_session_index))
  WHERE isNotNull(source_event)
  GROUP BY source_event,
           target_event
  ORDER BY event_count DESC,
           source_event ASC,
           target_event ASC
  LIMIT 50 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1,
                    format_csv_allow_double_quotes=0,
                    max_ast_elements=1000000,
                    max_expanded_ast_elements=1000000,
                    max_query_size=524288
  '''
# ---
# name: TestClickhousePaths.test_event_exclusion_filters_with_wildcard_groups.1
  '''
  SELECT last_path_key AS source_event,
         path_key AS target_event,
         count(*) AS event_count,
         avg(conversion_time) AS average_conversion_time
  FROM
    (SELECT person_id AS person_id,
            path AS path,
                    conversion_time AS conversion_time,
                    event_in_session_index AS event_in_session_index,
                    concat(ifNull(toString(event_in_session_index), ''), '_', ifNull(toString(path), '')) AS path_key,
                    if(ifNull(greater(event_in_session_index, 1), 0), concat(ifNull(toString(minus(event_in_session_index, 1)), ''), '_', ifNull(toString(prev_path), '')), NULL) AS last_path_key,
                    path_dropoff_key AS path_dropoff_key
     FROM
       (SELECT person_id AS person_id,
               joined_path_tuple.1 AS path,
               joined_path_tuple.2 AS conversion_time,
               joined_path_tuple.3 AS prev_path,
               event_in_session_index,
               session_index AS session_index,
               arrayPopFront(arrayPushBack(path_basic, '')) AS path_basic_0,
               arrayMap((x, y) -> if(ifNull(equals(x, y), isNull(x)
                                            and isNull(y)), 0, 1), path_basic, path_basic_0) AS mapping,
               arrayFilter((x, y) -> y, time, mapping) AS timings,
               arrayFilter((x, y) -> y, path_basic, mapping) AS compact_path,
               indexOf(compact_path, NULL) AS target_index,
               if(ifNull(greater(target_index, 0), 0), arraySlice(compact_path, target_index), compact_path) AS filtered_path,
               arraySlice(filtered_path, 1, 4) AS limited_path,
               if(ifNull(greater(target_index, 0), 0), arraySlice(timings, target_index), timings) AS filtered_timings,
               arraySlice(filtered_timings, 1, 4) AS limited_timings,
               arrayDifference(limited_timings) AS timings_diff,
               concat(ifNull(toString(length(limited_path)), ''), '_', ifNull(toString(limited_path[-1]), '')) AS path_dropoff_key,
               arrayZip(limited_path, timings_diff, arrayPopBack(arrayPushFront(limited_path, ''))) AS limited_path_timings
        FROM
          (SELECT person_id AS person_id,
                  path_time_tuple.1 AS path_basic,
                  path_time_tuple.2 AS time,
                  session_index,
                  arrayZip(path_list, timing_list, arrayDifference(timing_list)) AS paths_tuple,
                  arraySplit(x -> if(ifNull(less(x.3, 1800), 0), 0, 1), paths_tuple) AS session_paths
           FROM
             (SELECT person_id AS person_id,
                     groupArray(timestamp) AS timing_list,
                     groupArray(path_item) AS path_list
              FROM
                (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
                        events__pdi.person_id AS person_id,
                        ifNull(if(equals(events.event, '$pageview'), replaceRegexpAll(ifNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$current_url'), ''), 'null'), '^"|"$', ''), ''), '(.)/$', '\\1'), events.event), '') AS path_item_ungrouped,
                        ['/xxx/invalid/*'] AS groupings,
                        multiMatchAnyIndex(path_item_ungrouped, ['/xxx/invalid/.*']) AS group_index,
                        (if(ifNull(greater(group_index, 0), 0), groupings[group_index], path_item_ungrouped) AS path_item) AS path_item
                 FROM events
                 INNER JOIN
                   (SELECT argMax(person_distinct_id2.person_id, person_distinct_id2.version) AS person_id,
                           person_distinct_id2.distinct_id AS distinct_id
                    FROM person_distinct_id2
                    WHERE equals(person_distinct_id2.team_id, 2)
                    GROUP BY person_distinct_id2.distinct_id
                    HAVING ifNull(equals(argMax(person_distinct_id2.is_deleted, person_distinct_id2.version), 0), 0)) AS events__pdi ON equals(events.distinct_id, events__pdi.distinct_id)
                 WHERE and(equals(events.team_id, 2), and(greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2012-01-01 00:00:00', 6, 'UTC')))), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), assumeNotNull(parseDateTime64BestEffortOrNull('2023-05-23 23:59:59', 6, 'UTC')))), and(equals(events.event, '$pageview'), ifNull(notIn(path_item, ['/bar/*/foo']), 0)))
                 ORDER BY events__pdi.person_id ASC, toTimeZone(events.timestamp, 'UTC') ASC)
              GROUP BY person_id) ARRAY
           JOIN session_paths AS path_time_tuple,
                arrayEnumerate(session_paths) AS session_index) ARRAY
        JOIN limited_path_timings AS joined_path_tuple,
             arrayEnumerate(limited_path_timings) AS event_in_session_index))
  WHERE isNotNull(source_event)
  GROUP BY source_event,
           target_event
  ORDER BY event_count DESC,
           source_event ASC,
           target_event ASC
  LIMIT 50 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1,
                    format_csv_allow_double_quotes=0,
                    max_ast_elements=1000000,
                    max_expanded_ast_elements=1000000,
                    max_query_size=524288
  '''
# ---
# name: TestClickhousePaths.test_event_inclusion_exclusion_filters
  '''
  SELECT last_path_key AS source_event,
         path_key AS target_event,
         count(*) AS event_count,
         avg(conversion_time) AS average_conversion_time
  FROM
    (SELECT person_id AS person_id,
            path AS path,
                    conversion_time AS conversion_time,
                    event_in_session_index AS event_in_session_index,
                    concat(ifNull(toString(event_in_session_index), ''), '_', ifNull(toString(path), '')) AS path_key,
                    if(ifNull(greater(event_in_session_index, 1), 0), concat(ifNull(toString(minus(event_in_session_index, 1)), ''), '_', ifNull(toString(prev_path), '')), NULL) AS last_path_key,
                    path_dropoff_key AS path_dropoff_key
     FROM
       (SELECT person_id AS person_id,
               joined_path_tuple.1 AS path,
               joined_path_tuple.2 AS conversion_time,
               joined_path_tuple.3 AS prev_path,
               event_in_session_index,
               session_index AS session_index,
               arrayPopFront(arrayPushBack(path_basic, '')) AS path_basic_0,
               arrayMap((x, y) -> if(ifNull(equals(x, y), isNull(x)
                                            and isNull(y)), 0, 1), path_basic, path_basic_0) AS mapping,
               arrayFilter((x, y) -> y, time, mapping) AS timings,
               arrayFilter((x, y) -> y, path_basic, mapping) AS compact_path,
               indexOf(compact_path, NULL) AS target_index,
               if(ifNull(greater(target_index, 0), 0), arraySlice(compact_path, target_index), compact_path) AS filtered_path,
               arraySlice(filtered_path, 1, 4) AS limited_path,
               if(ifNull(greater(target_index, 0), 0), arraySlice(timings, target_index), timings) AS filtered_timings,
               arraySlice(filtered_timings, 1, 4) AS limited_timings,
               arrayDifference(limited_timings) AS timings_diff,
               concat(ifNull(toString(length(limited_path)), ''), '_', ifNull(toString(limited_path[-1]), '')) AS path_dropoff_key,
               arrayZip(limited_path, timings_diff, arrayPopBack(arrayPushFront(limited_path, ''))) AS limited_path_timings
        FROM
          (SELECT person_id AS person_id,
                  path_time_tuple.1 AS path_basic,
                  path_time_tuple.2 AS time,
                  session_index,
                  arrayZip(path_list, timing_list, arrayDifference(timing_list)) AS paths_tuple,
                  arraySplit(x -> if(ifNull(less(x.3, 1800), 0), 0, 1), paths_tuple) AS session_paths
           FROM
             (SELECT person_id AS person_id,
                     groupArray(timestamp) AS timing_list,
                     groupArray(path_item) AS path_list
              FROM
                (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
                        events__pdi.person_id AS person_id,
                        ifNull(if(equals(events.event, '$pageview'), replaceRegexpAll(ifNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$current_url'), ''), 'null'), '^"|"$', ''), ''), '(.)/$', '\\1'), events.event), '') AS path_item_ungrouped,
                        NULL AS groupings,
                        multiMatchAnyIndex(path_item_ungrouped, NULL) AS group_index,
                        (if(ifNull(greater(group_index, 0), 0), groupings[group_index], path_item_ungrouped) AS path_item) AS path_item
                 FROM events
                 INNER JOIN
                   (SELECT argMax(person_distinct_id2.person_id, person_distinct_id2.version) AS person_id,
                           person_distinct_id2.distinct_id AS distinct_id
                    FROM person_distinct_id2
                    WHERE equals(person_distinct_id2.team_id, 2)
                    GROUP BY person_distinct_id2.distinct_id
                    HAVING ifNull(equals(argMax(person_distinct_id2.is_deleted, person_distinct_id2.version), 0), 0)) AS events__pdi ON equals(events.distinct_id, events__pdi.distinct_id)
                 WHERE and(equals(events.team_id, 2), and(greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2012-01-01 00:00:00', 6, 'UTC')))), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), assumeNotNull(parseDateTime64BestEffortOrNull('2023-05-23 23:59:59', 6, 'UTC')))), equals(events.event, '$pageview'))
                 ORDER BY events__pdi.person_id ASC, toTimeZone(events.timestamp, 'UTC') ASC)
              GROUP BY person_id) ARRAY
           JOIN session_paths AS path_time_tuple,
                arrayEnumerate(session_paths) AS session_index) ARRAY
        JOIN limited_path_timings AS joined_path_tuple,
             arrayEnumerate(limited_path_timings) AS event_in_session_index))
  WHERE isNotNull(source_event)
  GROUP BY source_event,
           target_event
  ORDER BY event_count DESC,
           source_event ASC,
           target_event ASC
  LIMIT 50 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1,
                    format_csv_allow_double_quotes=0,
                    max_ast_elements=1000000,
                    max_expanded_ast_elements=1000000,
                    max_query_size=524288
  '''
# ---
# name: TestClickhousePaths.test_event_inclusion_exclusion_filters.1
  '''
  SELECT last_path_key AS source_event,
         path_key AS target_event,
         count(*) AS event_count,
         avg(conversion_time) AS average_conversion_time
  FROM
    (SELECT person_id AS person_id,
            path AS path,
                    conversion_time AS conversion_time,
                    event_in_session_index AS event_in_session_index,
                    concat(ifNull(toString(event_in_session_index), ''), '_', ifNull(toString(path), '')) AS path_key,
                    if(ifNull(greater(event_in_session_index, 1), 0), concat(ifNull(toString(minus(event_in_session_index, 1)), ''), '_', ifNull(toString(prev_path), '')), NULL) AS last_path_key,
                    path_dropoff_key AS path_dropoff_key
     FROM
       (SELECT person_id AS person_id,
               joined_path_tuple.1 AS path,
               joined_path_tuple.2 AS conversion_time,
               joined_path_tuple.3 AS prev_path,
               event_in_session_index,
               session_index AS session_index,
               arrayPopFront(arrayPushBack(path_basic, '')) AS path_basic_0,
               arrayMap((x, y) -> if(ifNull(equals(x, y), isNull(x)
                                            and isNull(y)), 0, 1), path_basic, path_basic_0) AS mapping,
               arrayFilter((x, y) -> y, time, mapping) AS timings,
               arrayFilter((x, y) -> y, path_basic, mapping) AS compact_path,
               indexOf(compact_path, NULL) AS target_index,
               if(ifNull(greater(target_index, 0), 0), arraySlice(compact_path, target_index), compact_path) AS filtered_path,
               arraySlice(filtered_path, 1, 4) AS limited_path,
               if(ifNull(greater(target_index, 0), 0), arraySlice(timings, target_index), timings) AS filtered_timings,
               arraySlice(filtered_timings, 1, 4) AS limited_timings,
               arrayDifference(limited_timings) AS timings_diff,
               concat(ifNull(toString(length(limited_path)), ''), '_', ifNull(toString(limited_path[-1]), '')) AS path_dropoff_key,
               arrayZip(limited_path, timings_diff, arrayPopBack(arrayPushFront(limited_path, ''))) AS limited_path_timings
        FROM
          (SELECT person_id AS person_id,
                  path_time_tuple.1 AS path_basic,
                  path_time_tuple.2 AS time,
                  session_index,
                  arrayZip(path_list, timing_list, arrayDifference(timing_list)) AS paths_tuple,
                  arraySplit(x -> if(ifNull(less(x.3, 1800), 0), 0, 1), paths_tuple) AS session_paths
           FROM
             (SELECT person_id AS person_id,
                     groupArray(timestamp) AS timing_list,
                     groupArray(path_item) AS path_list
              FROM
                (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
                        events__pdi.person_id AS person_id,
                        ifNull(if(equals(events.event, '$screen'), replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$screen_name'), ''), 'null'), '^"|"$', ''), events.event), '') AS path_item_ungrouped,
                        NULL AS groupings,
                        multiMatchAnyIndex(path_item_ungrouped, NULL) AS group_index,
                        (if(ifNull(greater(group_index, 0), 0), groupings[group_index], path_item_ungrouped) AS path_item) AS path_item
                 FROM events
                 INNER JOIN
                   (SELECT argMax(person_distinct_id2.person_id, person_distinct_id2.version) AS person_id,
                           person_distinct_id2.distinct_id AS distinct_id
                    FROM person_distinct_id2
                    WHERE equals(person_distinct_id2.team_id, 2)
                    GROUP BY person_distinct_id2.distinct_id
                    HAVING ifNull(equals(argMax(person_distinct_id2.is_deleted, person_distinct_id2.version), 0), 0)) AS events__pdi ON equals(events.distinct_id, events__pdi.distinct_id)
                 WHERE and(equals(events.team_id, 2), and(greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2012-01-01 00:00:00', 6, 'UTC')))), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), assumeNotNull(parseDateTime64BestEffortOrNull('2023-05-23 23:59:59', 6, 'UTC')))), equals(events.event, '$screen'))
                 ORDER BY events__pdi.person_id ASC, toTimeZone(events.timestamp, 'UTC') ASC)
              GROUP BY person_id) ARRAY
           JOIN session_paths AS path_time_tuple,
                arrayEnumerate(session_paths) AS session_index) ARRAY
        JOIN limited_path_timings AS joined_path_tuple,
             arrayEnumerate(limited_path_timings) AS event_in_session_index))
  WHERE isNotNull(source_event)
  GROUP BY source_event,
           target_event
  ORDER BY event_count DESC,
           source_event ASC,
           target_event ASC
  LIMIT 50 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1,
                    format_csv_allow_double_quotes=0,
                    max_ast_elements=1000000,
                    max_expanded_ast_elements=1000000,
                    max_query_size=524288
  '''
# ---
# name: TestClickhousePaths.test_event_inclusion_exclusion_filters.2
  '''
  SELECT last_path_key AS source_event,
         path_key AS target_event,
         count(*) AS event_count,
         avg(conversion_time) AS average_conversion_time
  FROM
    (SELECT person_id AS person_id,
            path AS path,
                    conversion_time AS conversion_time,
                    event_in_session_index AS event_in_session_index,
                    concat(ifNull(toString(event_in_session_index), ''), '_', ifNull(toString(path), '')) AS path_key,
                    if(ifNull(greater(event_in_session_index, 1), 0), concat(ifNull(toString(minus(event_in_session_index, 1)), ''), '_', ifNull(toString(prev_path), '')), NULL) AS last_path_key,
                    path_dropoff_key AS path_dropoff_key
     FROM
       (SELECT person_id AS person_id,
               joined_path_tuple.1 AS path,
               joined_path_tuple.2 AS conversion_time,
               joined_path_tuple.3 AS prev_path,
               event_in_session_index,
               session_index AS session_index,
               arrayPopFront(arrayPushBack(path_basic, '')) AS path_basic_0,
               arrayMap((x, y) -> if(ifNull(equals(x, y), isNull(x)
                                            and isNull(y)), 0, 1), path_basic, path_basic_0) AS mapping,
               arrayFilter((x, y) -> y, time, mapping) AS timings,
               arrayFilter((x, y) -> y, path_basic, mapping) AS compact_path,
               indexOf(compact_path, NULL) AS target_index,
               if(ifNull(greater(target_index, 0), 0), arraySlice(compact_path, target_index), compact_path) AS filtered_path,
               arraySlice(filtered_path, 1, 4) AS limited_path,
               if(ifNull(greater(target_index, 0), 0), arraySlice(timings, target_index), timings) AS filtered_timings,
               arraySlice(filtered_timings, 1, 4) AS limited_timings,
               arrayDifference(limited_timings) AS timings_diff,
               concat(ifNull(toString(length(limited_path)), ''), '_', ifNull(toString(limited_path[-1]), '')) AS path_dropoff_key,
               arrayZip(limited_path, timings_diff, arrayPopBack(arrayPushFront(limited_path, ''))) AS limited_path_timings
        FROM
          (SELECT person_id AS person_id,
                  path_time_tuple.1 AS path_basic,
                  path_time_tuple.2 AS time,
                  session_index,
                  arrayZip(path_list, timing_list, arrayDifference(timing_list)) AS paths_tuple,
                  arraySplit(x -> if(ifNull(less(x.3, 1800), 0), 0, 1), paths_tuple) AS session_paths
           FROM
             (SELECT person_id AS person_id,
                     groupArray(timestamp) AS timing_list,
                     groupArray(path_item) AS path_list
              FROM
                (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
                        events__pdi.person_id AS person_id,
                        ifNull(events.event, '') AS path_item_ungrouped,
                        NULL AS groupings,
                        multiMatchAnyIndex(path_item_ungrouped, NULL) AS group_index,
                        (if(ifNull(greater(group_index, 0), 0), groupings[group_index], path_item_ungrouped) AS path_item) AS path_item
                 FROM events
                 INNER JOIN
                   (SELECT argMax(person_distinct_id2.person_id, person_distinct_id2.version) AS person_id,
                           person_distinct_id2.distinct_id AS distinct_id
                    FROM person_distinct_id2
                    WHERE equals(person_distinct_id2.team_id, 2)
                    GROUP BY person_distinct_id2.distinct_id
                    HAVING ifNull(equals(argMax(person_distinct_id2.is_deleted, person_distinct_id2.version), 0), 0)) AS events__pdi ON equals(events.distinct_id, events__pdi.distinct_id)
                 WHERE and(equals(events.team_id, 2), and(greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2012-01-01 00:00:00', 6, 'UTC')))), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), assumeNotNull(parseDateTime64BestEffortOrNull('2023-05-23 23:59:59', 6, 'UTC')))), not(startsWith(events.event, '$')))
                 ORDER BY events__pdi.person_id ASC, toTimeZone(events.timestamp, 'UTC') ASC)
              GROUP BY person_id) ARRAY
           JOIN session_paths AS path_time_tuple,
                arrayEnumerate(session_paths) AS session_index) ARRAY
        JOIN limited_path_timings AS joined_path_tuple,
             arrayEnumerate(limited_path_timings) AS event_in_session_index))
  WHERE isNotNull(source_event)
  GROUP BY source_event,
           target_event
  ORDER BY event_count DESC,
           source_event ASC,
           target_event ASC
  LIMIT 50 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1,
                    format_csv_allow_double_quotes=0,
                    max_ast_elements=1000000,
                    max_expanded_ast_elements=1000000,
                    max_query_size=524288
  '''
# ---
# name: TestClickhousePaths.test_event_inclusion_exclusion_filters.3
  '''
  SELECT last_path_key AS source_event,
         path_key AS target_event,
         count(*) AS event_count,
         avg(conversion_time) AS average_conversion_time
  FROM
    (SELECT person_id AS person_id,
            path AS path,
                    conversion_time AS conversion_time,
                    event_in_session_index AS event_in_session_index,
                    concat(ifNull(toString(event_in_session_index), ''), '_', ifNull(toString(path), '')) AS path_key,
                    if(ifNull(greater(event_in_session_index, 1), 0), concat(ifNull(toString(minus(event_in_session_index, 1)), ''), '_', ifNull(toString(prev_path), '')), NULL) AS last_path_key,
                    path_dropoff_key AS path_dropoff_key
     FROM
       (SELECT person_id AS person_id,
               joined_path_tuple.1 AS path,
               joined_path_tuple.2 AS conversion_time,
               joined_path_tuple.3 AS prev_path,
               event_in_session_index,
               session_index AS session_index,
               arrayPopFront(arrayPushBack(path_basic, '')) AS path_basic_0,
               arrayMap((x, y) -> if(ifNull(equals(x, y), isNull(x)
                                            and isNull(y)), 0, 1), path_basic, path_basic_0) AS mapping,
               arrayFilter((x, y) -> y, time, mapping) AS timings,
               arrayFilter((x, y) -> y, path_basic, mapping) AS compact_path,
               indexOf(compact_path, NULL) AS target_index,
               if(ifNull(greater(target_index, 0), 0), arraySlice(compact_path, target_index), compact_path) AS filtered_path,
               arraySlice(filtered_path, 1, 4) AS limited_path,
               if(ifNull(greater(target_index, 0), 0), arraySlice(timings, target_index), timings) AS filtered_timings,
               arraySlice(filtered_timings, 1, 4) AS limited_timings,
               arrayDifference(limited_timings) AS timings_diff,
               concat(ifNull(toString(length(limited_path)), ''), '_', ifNull(toString(limited_path[-1]), '')) AS path_dropoff_key,
               arrayZip(limited_path, timings_diff, arrayPopBack(arrayPushFront(limited_path, ''))) AS limited_path_timings
        FROM
          (SELECT person_id AS person_id,
                  path_time_tuple.1 AS path_basic,
                  path_time_tuple.2 AS time,
                  session_index,
                  arrayZip(path_list, timing_list, arrayDifference(timing_list)) AS paths_tuple,
                  arraySplit(x -> if(ifNull(less(x.3, 1800), 0), 0, 1), paths_tuple) AS session_paths
           FROM
             (SELECT person_id AS person_id,
                     groupArray(timestamp) AS timing_list,
                     groupArray(path_item) AS path_list
              FROM
                (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
                        events__pdi.person_id AS person_id,
                        ifNull(if(equals(events.event, '$screen'), replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$screen_name'), ''), 'null'), '^"|"$', ''), if(equals(events.event, '$pageview'), replaceRegexpAll(ifNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$current_url'), ''), 'null'), '^"|"$', ''), ''), '(.)/$', '\\1'), events.event)), '') AS path_item_ungrouped,
                        NULL AS groupings,
                        multiMatchAnyIndex(path_item_ungrouped, NULL) AS group_index,
                        (if(ifNull(greater(group_index, 0), 0), groupings[group_index], path_item_ungrouped) AS path_item) AS path_item
                 FROM events
                 INNER JOIN
                   (SELECT argMax(person_distinct_id2.person_id, person_distinct_id2.version) AS person_id,
                           person_distinct_id2.distinct_id AS distinct_id
                    FROM person_distinct_id2
                    WHERE equals(person_distinct_id2.team_id, 2)
                    GROUP BY person_distinct_id2.distinct_id
                    HAVING ifNull(equals(argMax(person_distinct_id2.is_deleted, person_distinct_id2.version), 0), 0)) AS events__pdi ON equals(events.distinct_id, events__pdi.distinct_id)
                 WHERE and(equals(events.team_id, 2), and(greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2012-01-01 00:00:00', 6, 'UTC')))), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), assumeNotNull(parseDateTime64BestEffortOrNull('2023-05-23 23:59:59', 6, 'UTC')))), and(or(equals(events.event, '$pageview'), equals(events.event, '$screen'), not(startsWith(events.event, '$'))), ifNull(notIn(path_item, ['/custom1', '/1', '/2', '/3']), 0)))
                 ORDER BY events__pdi.person_id ASC, toTimeZone(events.timestamp, 'UTC') ASC)
              GROUP BY person_id) ARRAY
           JOIN session_paths AS path_time_tuple,
                arrayEnumerate(session_paths) AS session_index) ARRAY
        JOIN limited_path_timings AS joined_path_tuple,
             arrayEnumerate(limited_path_timings) AS event_in_session_index))
  WHERE isNotNull(source_event)
  GROUP BY source_event,
           target_event
  ORDER BY event_count DESC,
           source_event ASC,
           target_event ASC
  LIMIT 50 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1,
                    format_csv_allow_double_quotes=0,
                    max_ast_elements=1000000,
                    max_expanded_ast_elements=1000000,
                    max_query_size=524288
  '''
# ---
# name: TestClickhousePaths.test_event_ordering
  '''
  SELECT last_path_key AS source_event,
         path_key AS target_event,
         count(*) AS event_count,
         avg(conversion_time) AS average_conversion_time
  FROM
    (SELECT person_id AS person_id,
            path AS path,
                    conversion_time AS conversion_time,
                    event_in_session_index AS event_in_session_index,
                    concat(ifNull(toString(event_in_session_index), ''), '_', ifNull(toString(path), '')) AS path_key,
                    if(ifNull(greater(event_in_session_index, 1), 0), concat(ifNull(toString(minus(event_in_session_index, 1)), ''), '_', ifNull(toString(prev_path), '')), NULL) AS last_path_key,
                    path_dropoff_key AS path_dropoff_key
     FROM
       (SELECT person_id AS person_id,
               joined_path_tuple.1 AS path,
               joined_path_tuple.2 AS conversion_time,
               joined_path_tuple.3 AS prev_path,
               event_in_session_index,
               session_index AS session_index,
               arrayPopFront(arrayPushBack(path_basic, '')) AS path_basic_0,
               arrayMap((x, y) -> if(ifNull(equals(x, y), isNull(x)
                                            and isNull(y)), 0, 1), path_basic, path_basic_0) AS mapping,
               arrayFilter((x, y) -> y, time, mapping) AS timings,
               arrayFilter((x, y) -> y, path_basic, mapping) AS compact_path,
               indexOf(compact_path, NULL) AS target_index,
               if(ifNull(greater(target_index, 0), 0), arraySlice(compact_path, target_index), compact_path) AS filtered_path,
               arraySlice(filtered_path, 1, 5) AS limited_path,
               if(ifNull(greater(target_index, 0), 0), arraySlice(timings, target_index), timings) AS filtered_timings,
               arraySlice(filtered_timings, 1, 5) AS limited_timings,
               arrayDifference(limited_timings) AS timings_diff,
               concat(ifNull(toString(length(limited_path)), ''), '_', ifNull(toString(limited_path[-1]), '')) AS path_dropoff_key,
               arrayZip(limited_path, timings_diff, arrayPopBack(arrayPushFront(limited_path, ''))) AS limited_path_timings
        FROM
          (SELECT person_id AS person_id,
                  path_time_tuple.1 AS path_basic,
                  path_time_tuple.2 AS time,
                  session_index,
                  arrayZip(path_list, timing_list, arrayDifference(timing_list)) AS paths_tuple,
                  arraySplit(x -> if(ifNull(less(x.3, 1800), 0), 0, 1), paths_tuple) AS session_paths
           FROM
             (SELECT person_id AS person_id,
                     groupArray(timestamp) AS timing_list,
                     groupArray(path_item) AS path_list
              FROM
                (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
                        events__pdi.person_id AS person_id,
                        ifNull(events.event, '') AS path_item_ungrouped,
                        NULL AS groupings,
                        multiMatchAnyIndex(path_item_ungrouped, NULL) AS group_index,
                        (if(ifNull(greater(group_index, 0), 0), groupings[group_index], path_item_ungrouped) AS path_item) AS path_item
                 FROM events
                 INNER JOIN
                   (SELECT argMax(person_distinct_id2.person_id, person_distinct_id2.version) AS person_id,
                           person_distinct_id2.distinct_id AS distinct_id
                    FROM person_distinct_id2
                    WHERE equals(person_distinct_id2.team_id, 2)
                    GROUP BY person_distinct_id2.distinct_id
                    HAVING ifNull(equals(argMax(person_distinct_id2.is_deleted, person_distinct_id2.version), 0), 0)) AS events__pdi ON equals(events.distinct_id, events__pdi.distinct_id)
                 WHERE and(equals(events.team_id, 2), and(greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2021-05-01 00:00:00', 6, 'UTC')))), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), assumeNotNull(parseDateTime64BestEffortOrNull('2021-05-03 23:59:59', 6, 'UTC')))), not(startsWith(events.event, '$')))
                 ORDER BY events__pdi.person_id ASC, toTimeZone(events.timestamp, 'UTC') ASC)
              GROUP BY person_id) ARRAY
           JOIN session_paths AS path_time_tuple,
                arrayEnumerate(session_paths) AS session_index) ARRAY
        JOIN limited_path_timings AS joined_path_tuple,
             arrayEnumerate(limited_path_timings) AS event_in_session_index))
  WHERE isNotNull(source_event)
  GROUP BY source_event,
           target_event
  ORDER BY event_count DESC,
           source_event ASC,
           target_event ASC
  LIMIT 50 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1,
                    format_csv_allow_double_quotes=0,
                    max_ast_elements=1000000,
                    max_expanded_ast_elements=1000000,
                    max_query_size=524288
  '''
# ---
# name: TestClickhousePaths.test_groups_filtering_person_on_events
  '''
  SELECT last_path_key AS source_event,
         path_key AS target_event,
         count(*) AS event_count,
         avg(conversion_time) AS average_conversion_time
  FROM
    (SELECT person_id AS person_id,
            path AS path,
                    conversion_time AS conversion_time,
                    event_in_session_index AS event_in_session_index,
                    concat(ifNull(toString(event_in_session_index), ''), '_', ifNull(toString(path), '')) AS path_key,
                    if(ifNull(greater(event_in_session_index, 1), 0), concat(ifNull(toString(minus(event_in_session_index, 1)), ''), '_', ifNull(toString(prev_path), '')), NULL) AS last_path_key,
                    path_dropoff_key AS path_dropoff_key
     FROM
       (SELECT person_id AS person_id,
               joined_path_tuple.1 AS path,
               joined_path_tuple.2 AS conversion_time,
               joined_path_tuple.3 AS prev_path,
               event_in_session_index,
               session_index AS session_index,
               arrayPopFront(arrayPushBack(path_basic, '')) AS path_basic_0,
               arrayMap((x, y) -> if(ifNull(equals(x, y), isNull(x)
                                            and isNull(y)), 0, 1), path_basic, path_basic_0) AS mapping,
               arrayFilter((x, y) -> y, time, mapping) AS timings,
               arrayFilter((x, y) -> y, path_basic, mapping) AS compact_path,
               indexOf(compact_path, NULL) AS target_index,
               if(ifNull(greater(target_index, 0), 0), arraySlice(compact_path, target_index), compact_path) AS filtered_path,
               arraySlice(filtered_path, 1, 4) AS limited_path,
               if(ifNull(greater(target_index, 0), 0), arraySlice(timings, target_index), timings) AS filtered_timings,
               arraySlice(filtered_timings, 1, 4) AS limited_timings,
               arrayDifference(limited_timings) AS timings_diff,
               concat(ifNull(toString(length(limited_path)), ''), '_', ifNull(toString(limited_path[-1]), '')) AS path_dropoff_key,
               arrayZip(limited_path, timings_diff, arrayPopBack(arrayPushFront(limited_path, ''))) AS limited_path_timings
        FROM
          (SELECT person_id AS person_id,
                  path_time_tuple.1 AS path_basic,
                  path_time_tuple.2 AS time,
                  session_index,
                  arrayZip(path_list, timing_list, arrayDifference(timing_list)) AS paths_tuple,
                  arraySplit(x -> if(ifNull(less(x.3, 1800), 0), 0, 1), paths_tuple) AS session_paths
           FROM
             (SELECT person_id AS person_id,
                     groupArray(timestamp) AS timing_list,
                     groupArray(path_item) AS path_list
              FROM
                (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
                        events__pdi.person_id AS person_id,
                        ifNull(if(equals(events.event, '$screen'), replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$screen_name'), ''), 'null'), '^"|"$', ''), if(equals(events.event, '$pageview'), replaceRegexpAll(ifNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$current_url'), ''), 'null'), '^"|"$', ''), ''), '(.)/$', '\\1'), events.event)), '') AS path_item_ungrouped,
                        NULL AS groupings,
                        multiMatchAnyIndex(path_item_ungrouped, NULL) AS group_index,
                        (if(ifNull(greater(group_index, 0), 0), groupings[group_index], path_item_ungrouped) AS path_item) AS path_item
                 FROM events
                 INNER JOIN
                   (SELECT argMax(person_distinct_id2.person_id, person_distinct_id2.version) AS person_id,
                           person_distinct_id2.distinct_id AS distinct_id
                    FROM person_distinct_id2
                    WHERE equals(person_distinct_id2.team_id, 2)
                    GROUP BY person_distinct_id2.distinct_id
                    HAVING ifNull(equals(argMax(person_distinct_id2.is_deleted, person_distinct_id2.version), 0), 0)) AS events__pdi ON equals(events.distinct_id, events__pdi.distinct_id)
                 LEFT JOIN
                   (SELECT argMax(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(groups.group_properties, 'industry'), ''), 'null'), '^"|"$', ''), groups._timestamp) AS properties___industry,
                           groups.group_type_index AS index,
                           groups.group_key AS key
                    FROM groups
                    WHERE and(equals(groups.team_id, 2), ifNull(equals(index, 0), 0))
                    GROUP BY groups.group_type_index,
                             groups.group_key) AS events__group_0 ON equals(events.`$group_0`, events__group_0.key)
                 WHERE and(equals(events.team_id, 2), ifNull(equals(events__group_0.properties___industry, 'finance'), 0), and(greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2012-01-01 00:00:00', 6, 'UTC')))), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), assumeNotNull(parseDateTime64BestEffortOrNull('2012-02-01 23:59:59', 6, 'UTC')))), or(equals(events.event, '$pageview'), equals(events.event, '$screen'), not(startsWith(events.event, '$'))))
                 ORDER BY events__pdi.person_id ASC, toTimeZone(events.timestamp, 'UTC') ASC)
              GROUP BY person_id) ARRAY
           JOIN session_paths AS path_time_tuple,
                arrayEnumerate(session_paths) AS session_index) ARRAY
        JOIN limited_path_timings AS joined_path_tuple,
             arrayEnumerate(limited_path_timings) AS event_in_session_index))
  WHERE isNotNull(source_event)
  GROUP BY source_event,
           target_event
  ORDER BY event_count DESC,
           source_event ASC,
           target_event ASC
  LIMIT 50 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1,
                    format_csv_allow_double_quotes=0,
                    max_ast_elements=1000000,
                    max_expanded_ast_elements=1000000,
                    max_query_size=524288
  '''
# ---
# name: TestClickhousePaths.test_groups_filtering_person_on_events.1
  '''
  SELECT last_path_key AS source_event,
         path_key AS target_event,
         count(*) AS event_count,
         avg(conversion_time) AS average_conversion_time
  FROM
    (SELECT person_id AS person_id,
            path AS path,
                    conversion_time AS conversion_time,
                    event_in_session_index AS event_in_session_index,
                    concat(ifNull(toString(event_in_session_index), ''), '_', ifNull(toString(path), '')) AS path_key,
                    if(ifNull(greater(event_in_session_index, 1), 0), concat(ifNull(toString(minus(event_in_session_index, 1)), ''), '_', ifNull(toString(prev_path), '')), NULL) AS last_path_key,
                    path_dropoff_key AS path_dropoff_key
     FROM
       (SELECT person_id AS person_id,
               joined_path_tuple.1 AS path,
               joined_path_tuple.2 AS conversion_time,
               joined_path_tuple.3 AS prev_path,
               event_in_session_index,
               session_index AS session_index,
               arrayPopFront(arrayPushBack(path_basic, '')) AS path_basic_0,
               arrayMap((x, y) -> if(ifNull(equals(x, y), isNull(x)
                                            and isNull(y)), 0, 1), path_basic, path_basic_0) AS mapping,
               arrayFilter((x, y) -> y, time, mapping) AS timings,
               arrayFilter((x, y) -> y, path_basic, mapping) AS compact_path,
               indexOf(compact_path, NULL) AS target_index,
               if(ifNull(greater(target_index, 0), 0), arraySlice(compact_path, target_index), compact_path) AS filtered_path,
               arraySlice(filtered_path, 1, 4) AS limited_path,
               if(ifNull(greater(target_index, 0), 0), arraySlice(timings, target_index), timings) AS filtered_timings,
               arraySlice(filtered_timings, 1, 4) AS limited_timings,
               arrayDifference(limited_timings) AS timings_diff,
               concat(ifNull(toString(length(limited_path)), ''), '_', ifNull(toString(limited_path[-1]), '')) AS path_dropoff_key,
               arrayZip(limited_path, timings_diff, arrayPopBack(arrayPushFront(limited_path, ''))) AS limited_path_timings
        FROM
          (SELECT person_id AS person_id,
                  path_time_tuple.1 AS path_basic,
                  path_time_tuple.2 AS time,
                  session_index,
                  arrayZip(path_list, timing_list, arrayDifference(timing_list)) AS paths_tuple,
                  arraySplit(x -> if(ifNull(less(x.3, 1800), 0), 0, 1), paths_tuple) AS session_paths
           FROM
             (SELECT person_id AS person_id,
                     groupArray(timestamp) AS timing_list,
                     groupArray(path_item) AS path_list
              FROM
                (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
                        events.person_id AS person_id,
                        ifNull(if(equals(events.event, '$screen'), replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$screen_name'), ''), 'null'), '^"|"$', ''), if(equals(events.event, '$pageview'), replaceRegexpAll(ifNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$current_url'), ''), 'null'), '^"|"$', ''), ''), '(.)/$', '\\1'), events.event)), '') AS path_item_ungrouped,
                        NULL AS groupings,
                        multiMatchAnyIndex(path_item_ungrouped, NULL) AS group_index,
                        (if(ifNull(greater(group_index, 0), 0), groupings[group_index], path_item_ungrouped) AS path_item) AS path_item
                 FROM events
                 LEFT JOIN
                   (SELECT argMax(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(groups.group_properties, 'industry'), ''), 'null'), '^"|"$', ''), groups._timestamp) AS properties___industry,
                           groups.group_type_index AS index,
                           groups.group_key AS key
                    FROM groups
                    WHERE and(equals(groups.team_id, 2), ifNull(equals(index, 0), 0))
                    GROUP BY groups.group_type_index,
                             groups.group_key) AS events__group_0 ON equals(events.`$group_0`, events__group_0.key)
                 WHERE and(equals(events.team_id, 2), ifNull(equals(events__group_0.properties___industry, 'technology'), 0), and(greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2012-01-01 00:00:00', 6, 'UTC')))), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), assumeNotNull(parseDateTime64BestEffortOrNull('2012-02-01 23:59:59', 6, 'UTC')))), or(equals(events.event, '$pageview'), equals(events.event, '$screen'), not(startsWith(events.event, '$'))))
                 ORDER BY events.person_id ASC, toTimeZone(events.timestamp, 'UTC') ASC)
              GROUP BY person_id) ARRAY
           JOIN session_paths AS path_time_tuple,
                arrayEnumerate(session_paths) AS session_index) ARRAY
        JOIN limited_path_timings AS joined_path_tuple,
             arrayEnumerate(limited_path_timings) AS event_in_session_index))
  WHERE isNotNull(source_event)
  GROUP BY source_event,
           target_event
  ORDER BY event_count DESC,
           source_event ASC,
           target_event ASC
  LIMIT 50 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1,
                    format_csv_allow_double_quotes=0,
                    max_ast_elements=1000000,
                    max_expanded_ast_elements=1000000,
                    max_query_size=524288
  '''
# ---
# name: TestClickhousePaths.test_groups_filtering_person_on_events.2
  '''
  SELECT last_path_key AS source_event,
         path_key AS target_event,
         count(*) AS event_count,
         avg(conversion_time) AS average_conversion_time
  FROM
    (SELECT person_id AS person_id,
            path AS path,
                    conversion_time AS conversion_time,
                    event_in_session_index AS event_in_session_index,
                    concat(ifNull(toString(event_in_session_index), ''), '_', ifNull(toString(path), '')) AS path_key,
                    if(ifNull(greater(event_in_session_index, 1), 0), concat(ifNull(toString(minus(event_in_session_index, 1)), ''), '_', ifNull(toString(prev_path), '')), NULL) AS last_path_key,
                    path_dropoff_key AS path_dropoff_key
     FROM
       (SELECT person_id AS person_id,
               joined_path_tuple.1 AS path,
               joined_path_tuple.2 AS conversion_time,
               joined_path_tuple.3 AS prev_path,
               event_in_session_index,
               session_index AS session_index,
               arrayPopFront(arrayPushBack(path_basic, '')) AS path_basic_0,
               arrayMap((x, y) -> if(ifNull(equals(x, y), isNull(x)
                                            and isNull(y)), 0, 1), path_basic, path_basic_0) AS mapping,
               arrayFilter((x, y) -> y, time, mapping) AS timings,
               arrayFilter((x, y) -> y, path_basic, mapping) AS compact_path,
               indexOf(compact_path, NULL) AS target_index,
               if(ifNull(greater(target_index, 0), 0), arraySlice(compact_path, target_index), compact_path) AS filtered_path,
               arraySlice(filtered_path, 1, 4) AS limited_path,
               if(ifNull(greater(target_index, 0), 0), arraySlice(timings, target_index), timings) AS filtered_timings,
               arraySlice(filtered_timings, 1, 4) AS limited_timings,
               arrayDifference(limited_timings) AS timings_diff,
               concat(ifNull(toString(length(limited_path)), ''), '_', ifNull(toString(limited_path[-1]), '')) AS path_dropoff_key,
               arrayZip(limited_path, timings_diff, arrayPopBack(arrayPushFront(limited_path, ''))) AS limited_path_timings
        FROM
          (SELECT person_id AS person_id,
                  path_time_tuple.1 AS path_basic,
                  path_time_tuple.2 AS time,
                  session_index,
                  arrayZip(path_list, timing_list, arrayDifference(timing_list)) AS paths_tuple,
                  arraySplit(x -> if(ifNull(less(x.3, 1800), 0), 0, 1), paths_tuple) AS session_paths
           FROM
             (SELECT person_id AS person_id,
                     groupArray(timestamp) AS timing_list,
                     groupArray(path_item) AS path_list
              FROM
                (SELECT toTimeZone(events.timestamp, 'UTC') AS timestamp,
                        events.person_id AS person_id,
                        ifNull(if(equals(events.event, '$screen'), replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$screen_name'), ''), 'null'), '^"|"$', ''), if(equals(events.event, '$pageview'), replaceRegexpAll(ifNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$current_url'), ''), 'null'), '^"|"$', ''), ''), '(.)/$', '\\1'), events.event)), '') AS path_item_ungrouped,
                        NULL AS groupings,
                        multiMatchAnyIndex(path_item_ungrouped, NULL) AS group_index,
                        (if(ifNull(greater(group_index, 0), 0), groupings[group_index], path_item_ungrouped) AS path_item) AS path_item
                 FROM events
                 LEFT JOIN
                   (SELECT argMax(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(groups.group_properties, 'industry'), ''), 'null'), '^"|"$', ''), groups._timestamp) AS properties___industry,
                           groups.group_type_index AS index,
                           groups.group_key AS key
                    FROM groups
                    WHERE and(equals(groups.team_id, 2), ifNull(equals(index, 1), 0))
                    GROUP BY groups.group_type_index,
                             groups.group_key) AS events__group_1 ON equals(events.`$group_1`, events__group_1.key)
                 WHERE and(equals(events.team_id, 2), ifNull(equals(events__group_1.properties___industry, 'technology'), 0), and(greaterOrEquals(toTimeZone(events.timestamp, 'UTC'), toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2012-01-01 00:00:00', 6, 'UTC')))), lessOrEquals(toTimeZone(events.timestamp, 'UTC'), assumeNotNull(parseDateTime64BestEffortOrNull('2012-02-01 23:59:59', 6, 'UTC')))), or(equals(events.event, '$pageview'), equals(events.event, '$screen'), not(startsWith(events.event, '$'))))
                 ORDER BY events.person_id ASC, toTimeZone(events.timestamp, 'UTC') ASC)
              GROUP BY person_id) ARRAY
           JOIN session_paths AS path_time_tuple,
                arrayEnumerate(session_paths) AS session_index) ARRAY
        JOIN limited_path_timings AS joined_path_tuple,
             arrayEnumerate(limited_path_timings) AS event_in_session_index))
  WHERE isNotNull(source_event)
  GROUP BY source_event,
           target_event
  ORDER BY event_count DESC,
           source_event ASC,
           target_event ASC
  LIMIT 50 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1,
                    format_csv_allow_double_quotes=0,
                    max_ast_elements=1000000,
                    max_expanded_ast_elements=1000000,
                    max_query_size=524288
  '''
# ---
