# serializer version: 1
# name: TestTracesQueryRunner.test_traces_query_runner
  '''
  SELECT replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$ai_trace_id'), ''), 'null'), '^"|"$', '') AS id,
         min(toTimeZone(events.timestamp, 'UTC')) AS trace_timestamp,
         max(events__person.properties) AS person,
         sum(accurateCastOrNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$ai_latency'), ''), 'null'), '^"|"$', ''), 'Float64')) AS total_latency,
         sum(accurateCastOrNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$ai_input_tokens'), ''), 'null'), '^"|"$', ''), 'Float64')) AS input_tokens,
         sum(accurateCastOrNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$ai_output_tokens'), ''), 'null'), '^"|"$', ''), 'Float64')) AS output_tokens,
         sum(accurateCastOrNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$ai_input_cost_usd'), ''), 'null'), '^"|"$', ''), 'Float64')) AS input_cost,
         sum(accurateCastOrNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$ai_output_cost_usd'), ''), 'null'), '^"|"$', ''), 'Float64')) AS output_cost,
         sum(accurateCastOrNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$ai_total_cost_usd'), ''), 'null'), '^"|"$', ''), 'Float64')) AS total_cost,
         arraySort(x -> tupleElement(x, 1), groupArray(tuple(events.uuid, toTimeZone(events.timestamp, 'UTC'), events.properties))) AS spans
  FROM events
  LEFT OUTER JOIN
    (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
            person_distinct_id_overrides.distinct_id AS distinct_id
     FROM person_distinct_id_overrides
     WHERE equals(person_distinct_id_overrides.team_id, 99999)
     GROUP BY person_distinct_id_overrides.distinct_id
     HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS events__override ON equals(events.distinct_id, events__override.distinct_id)
  LEFT JOIN
    (SELECT person.id AS id,
            person.properties AS properties
     FROM person
     WHERE and(equals(person.team_id, 99999), ifNull(in(tuple(person.id, person.version),
                                                          (SELECT person.id AS id, max(person.version) AS version
                                                           FROM person
                                                           WHERE equals(person.team_id, 99999)
                                                           GROUP BY person.id
                                                           HAVING and(ifNull(equals(argMax(person.is_deleted, person.version), 0), 0), ifNull(less(argMax(toTimeZone(person.created_at, 'UTC'), person.version), plus(now64(6, 'UTC'), toIntervalDay(1))), 0)))), 0)) SETTINGS optimize_aggregation_in_order=1) AS events__person ON equals(if(not(empty(events__override.distinct_id)), events__override.person_id, events.person_id), events__person.id)
  WHERE and(equals(events.team_id, 99999), equals(events.event, '$ai_generation'))
  GROUP BY id
  ORDER BY trace_timestamp DESC
  LIMIT 101
  OFFSET 0 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1,
                    format_csv_allow_double_quotes=0,
                    max_ast_elements=4000000,
                    max_expanded_ast_elements=4000000,
                    max_bytes_before_external_group_by=0
  '''
# ---
