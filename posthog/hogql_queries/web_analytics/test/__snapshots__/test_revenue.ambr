# serializer version: 1
# name: TestWebAnalyticsRevenue.test_revenue_currency_property
  '''
  SELECT arrayMap(number -> plus(toStartOfDay(assumeNotNull(toDateTime('2024-01-01 00:00:00', 'UTC'))), toIntervalDay(number)), range(0, plus(coalesce(dateDiff('day', toStartOfDay(assumeNotNull(toDateTime('2024-01-01 00:00:00', 'UTC'))), toStartOfDay(assumeNotNull(toDateTime('2024-01-02 23:59:59', 'UTC'))))), 1))) AS date,
         arrayMap(_match_date -> arraySum(arraySlice(groupArray(ifNull(count, 0)), indexOf(groupArray(day_start) AS _days_for_count, _match_date) AS _index, plus(minus(arrayLastIndex(x -> ifNull(equals(x, _match_date), isNull(x)
                                                                                                                                                                                                   and isNull(_match_date)), _days_for_count), _index), 1))), date) AS total
  FROM
    (SELECT sum(total) AS count,
            day_start AS day_start
     FROM
       (SELECT sum(if(dictGetOrDefault(`posthog_test`.`exchange_rate_dict`, 'rate', replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(e.properties, 'currency'), ''), 'null'), '^"|"$', ''), toDate(toTimeZone(e.timestamp, 'UTC')), toDecimal64(0, 10)) = 0, toDecimal64(0, 10), multiplyDecimal(divideDecimal(toDecimal64(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(e.properties, 'revenue'), ''), 'null'), '^"|"$', ''), 10), dictGetOrDefault(`posthog_test`.`exchange_rate_dict`, 'rate', replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(e.properties, 'currency'), ''), 'null'), '^"|"$', ''), toDate(toTimeZone(e.timestamp, 'UTC')), toDecimal64(0, 10))), dictGetOrDefault(`posthog_test`.`exchange_rate_dict`, 'rate', 'USD', toDate(toTimeZone(e.timestamp, 'UTC')), toDecimal64(0, 10))))) AS total,
               toStartOfDay(toTimeZone(e.timestamp, 'UTC')) AS day_start
        FROM events AS e SAMPLE 1
        WHERE and(equals(e.team_id, 99999), greaterOrEquals(toTimeZone(e.timestamp, 'UTC'), toStartOfDay(assumeNotNull(toDateTime('2024-01-01 00:00:00', 'UTC')))), lessOrEquals(toTimeZone(e.timestamp, 'UTC'), assumeNotNull(toDateTime('2024-01-02 23:59:59', 'UTC'))), equals(e.event, 'product_sold'))
        GROUP BY day_start)
     GROUP BY day_start
     ORDER BY day_start ASC)
  ORDER BY arraySum(total) DESC
  LIMIT 50000 SETTINGS readonly=2,
                       max_execution_time=60,
                       allow_experimental_object_type=1,
                       format_csv_allow_double_quotes=0,
                       max_ast_elements=4000000,
                       max_expanded_ast_elements=4000000,
                       max_bytes_before_external_group_by=0
  '''
# ---
# name: TestWebAnalyticsRevenue.test_revenue_currency_static
  '''
  SELECT arrayMap(number -> plus(toStartOfDay(assumeNotNull(toDateTime('2024-01-01 00:00:00', 'UTC'))), toIntervalDay(number)), range(0, plus(coalesce(dateDiff('day', toStartOfDay(assumeNotNull(toDateTime('2024-01-01 00:00:00', 'UTC'))), toStartOfDay(assumeNotNull(toDateTime('2024-01-02 23:59:59', 'UTC'))))), 1))) AS date,
         arrayMap(_match_date -> arraySum(arraySlice(groupArray(ifNull(count, 0)), indexOf(groupArray(day_start) AS _days_for_count, _match_date) AS _index, plus(minus(arrayLastIndex(x -> ifNull(equals(x, _match_date), isNull(x)
                                                                                                                                                                                                   and isNull(_match_date)), _days_for_count), _index), 1))), date) AS total
  FROM
    (SELECT sum(total) AS count,
            day_start AS day_start
     FROM
       (SELECT sum(if(dictGetOrDefault(`posthog_test`.`exchange_rate_dict`, 'rate', 'GBP', toDate(toTimeZone(e.timestamp, 'UTC')), toDecimal64(0, 10)) = 0, toDecimal64(0, 10), multiplyDecimal(divideDecimal(toDecimal64(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(e.properties, 'revenue'), ''), 'null'), '^"|"$', ''), 10), dictGetOrDefault(`posthog_test`.`exchange_rate_dict`, 'rate', 'GBP', toDate(toTimeZone(e.timestamp, 'UTC')), toDecimal64(0, 10))), dictGetOrDefault(`posthog_test`.`exchange_rate_dict`, 'rate', 'USD', toDate(toTimeZone(e.timestamp, 'UTC')), toDecimal64(0, 10))))) AS total,
               toStartOfDay(toTimeZone(e.timestamp, 'UTC')) AS day_start
        FROM events AS e SAMPLE 1
        WHERE and(equals(e.team_id, 99999), greaterOrEquals(toTimeZone(e.timestamp, 'UTC'), toStartOfDay(assumeNotNull(toDateTime('2024-01-01 00:00:00', 'UTC')))), lessOrEquals(toTimeZone(e.timestamp, 'UTC'), assumeNotNull(toDateTime('2024-01-02 23:59:59', 'UTC'))), equals(e.event, 'product_sold'))
        GROUP BY day_start)
     GROUP BY day_start
     ORDER BY day_start ASC)
  ORDER BY arraySum(total) DESC
  LIMIT 50000 SETTINGS readonly=2,
                       max_execution_time=60,
                       allow_experimental_object_type=1,
                       format_csv_allow_double_quotes=0,
                       max_ast_elements=4000000,
                       max_expanded_ast_elements=4000000,
                       max_bytes_before_external_group_by=0
  '''
# ---
