# serializer version: 1
# name: TestFilterSessionReplaysByConsoleLogs.test_select_by_console_log_text
  '''
  SELECT DISTINCT session_replay_events.session_id AS session_id
  FROM session_replay_events
  LEFT JOIN
    (SELECT console_logs_log_entries.message AS message,
            console_logs_log_entries.log_source_id AS log_source_id
     FROM
       (SELECT log_entries.message AS message,
               log_entries.log_source_id AS log_source_id
        FROM log_entries
        WHERE and(equals(log_entries.team_id, 2), equals(log_entries.log_source, 'session_replay'))) AS console_logs_log_entries) AS raw_session_replay_events__console_logs ON equals(session_replay_events.session_id, raw_session_replay_events__console_logs.log_source_id)
  WHERE and(equals(session_replay_events.team_id, 2), ifNull(equals(raw_session_replay_events__console_logs.message, 'This is a generic message'), 0))
  ORDER BY session_replay_events.session_id ASC
  LIMIT 100 SETTINGS readonly=2,
                     max_execution_time=60,
                     allow_experimental_object_type=1,
                     format_csv_allow_double_quotes=0,
                     max_ast_elements=1000000,
                     max_expanded_ast_elements=1000000,
                     max_query_size=524288
  '''
# ---
# name: TestFilterSessionReplaysByConsoleLogs.test_select_by_console_log_text_and_level
  '''
  SELECT DISTINCT session_replay_events.session_id AS session_id
  FROM session_replay_events
  LEFT JOIN
    (SELECT console_logs_log_entries.message AS message,
            console_logs_log_entries.level AS level,
            console_logs_log_entries.log_source_id AS log_source_id
     FROM
       (SELECT log_entries.message AS message,
               log_entries.level AS level,
               log_entries.log_source_id AS log_source_id
        FROM log_entries
        WHERE and(equals(log_entries.team_id, 2), equals(log_entries.log_source, 'session_replay'))) AS console_logs_log_entries) AS raw_session_replay_events__console_logs ON equals(session_replay_events.session_id, raw_session_replay_events__console_logs.log_source_id)
  WHERE and(equals(session_replay_events.team_id, 2), ifNull(equals(raw_session_replay_events__console_logs.message, 'This is a generic message'), 0), ifNull(equals(raw_session_replay_events__console_logs.level, 'error'), 0))
  ORDER BY session_replay_events.session_id ASC
  LIMIT 100 SETTINGS readonly=2,
                     max_execution_time=60,
                     allow_experimental_object_type=1,
                     format_csv_allow_double_quotes=0,
                     max_ast_elements=1000000,
                     max_expanded_ast_elements=1000000,
                     max_query_size=524288
  '''
# ---
# name: TestFilterSessionReplaysByConsoleLogs.test_select_log_text
  '''
  SELECT DISTINCT raw_session_replay_events__console_logs.message AS message
  FROM session_replay_events
  LEFT JOIN
    (SELECT console_logs_log_entries.message AS message,
            console_logs_log_entries.level AS level,
            console_logs_log_entries.log_source_id AS log_source_id
     FROM
       (SELECT log_entries.message AS message,
               log_entries.level AS level,
               log_entries.log_source_id AS log_source_id
        FROM log_entries
        WHERE and(equals(log_entries.team_id, 2), equals(log_entries.log_source, 'session_replay'))) AS console_logs_log_entries) AS raw_session_replay_events__console_logs ON equals(session_replay_events.session_id, raw_session_replay_events__console_logs.log_source_id)
  WHERE and(equals(session_replay_events.team_id, 2), ifNull(equals(raw_session_replay_events__console_logs.level, 'info'), 0))
  ORDER BY session_replay_events.session_id ASC
  LIMIT 100 SETTINGS readonly=2,
                     max_execution_time=60,
                     allow_experimental_object_type=1,
                     format_csv_allow_double_quotes=0,
                     max_ast_elements=1000000,
                     max_expanded_ast_elements=1000000,
                     max_query_size=524288
  '''
# ---
# name: TestFilterSessionReplaysByEvents.test_select_by_event
  '''
  SELECT DISTINCT session_replay_events.session_id AS session_id
  FROM session_replay_events
  JOIN
    (SELECT events.event AS event,
            events.`$session_id` AS `$session_id`
     FROM events PREWHERE ifNull(greaterOrEquals(events.timestamp, minus(toDateTime64('2021-01-01 13:46:23.000000', 6, 'UTC'), toIntervalDay(90))), 0)
     WHERE equals(events.team_id, 2)) AS raw_session_replay_events__events ON equals(session_replay_events.session_id, raw_session_replay_events__events.`$session_id`)
  WHERE and(equals(session_replay_events.team_id, 2), ifNull(equals(raw_session_replay_events__events.event, '$pageview'), 0))
  ORDER BY session_replay_events.session_id ASC
  LIMIT 100 SETTINGS readonly=2,
                     max_execution_time=60,
                     allow_experimental_object_type=1,
                     format_csv_allow_double_quotes=0,
                     max_ast_elements=1000000,
                     max_expanded_ast_elements=1000000,
                     max_query_size=524288
  '''
# ---
# name: TestFilterSessionReplaysByEvents.test_select_by_event_property
  '''
  SELECT DISTINCT session_replay_events.session_id AS session_id
  FROM session_replay_events
  JOIN
    (SELECT replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$current_url'), ''), 'null'), '^"|"$', '') AS `properties___$current_url`,
            events.`$session_id` AS `$session_id`
     FROM events PREWHERE ifNull(greaterOrEquals(events.timestamp, minus(toDateTime64('2021-01-01 13:46:23.000000', 6, 'UTC'), toIntervalDay(90))), 0)
     WHERE equals(events.team_id, 2)) AS raw_session_replay_events__events ON equals(session_replay_events.session_id, raw_session_replay_events__events.`$session_id`)
  WHERE and(equals(session_replay_events.team_id, 2), ifNull(like(raw_session_replay_events__events.`properties___$current_url`, '%example.com%'), 0))
  ORDER BY session_replay_events.session_id ASC
  LIMIT 100 SETTINGS readonly=2,
                     max_execution_time=60,
                     allow_experimental_object_type=1,
                     format_csv_allow_double_quotes=0,
                     max_ast_elements=1000000,
                     max_expanded_ast_elements=1000000,
                     max_query_size=524288
  '''
# ---
# name: TestFilterSessionReplaysByEvents.test_select_event_property
  '''
  SELECT session_replay_events.session_id AS session_id,
         any(raw_session_replay_events__events.`properties___$current_url`)
  FROM session_replay_events
  JOIN
    (SELECT replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(events.properties, '$current_url'), ''), 'null'), '^"|"$', '') AS `properties___$current_url`,
            events.`$session_id` AS `$session_id`
     FROM events PREWHERE ifNull(greaterOrEquals(events.timestamp, minus(toDateTime64('2021-01-01 13:46:23.000000', 6, 'UTC'), toIntervalDay(90))), 0)
     WHERE equals(events.team_id, 2)) AS raw_session_replay_events__events ON equals(session_replay_events.session_id, raw_session_replay_events__events.`$session_id`)
  WHERE equals(session_replay_events.team_id, 2)
  GROUP BY session_replay_events.session_id
  ORDER BY session_replay_events.session_id ASC
  LIMIT 100 SETTINGS readonly=2,
                     max_execution_time=60,
                     allow_experimental_object_type=1,
                     format_csv_allow_double_quotes=0,
                     max_ast_elements=1000000,
                     max_expanded_ast_elements=1000000,
                     max_query_size=524288
  '''
# ---
# name: TestFilterSessionReplaysByPerson.test_select_by_event_person
  '''
  SELECT DISTINCT session_replay_events.session_id AS session_id
  FROM session_replay_events
  JOIN
    (SELECT events.distinct_id AS raw_session_replay_events__events___distinct_id,
            events.`$session_id` AS `$session_id`
     FROM events PREWHERE ifNull(greaterOrEquals(events.timestamp, minus(toDateTime64('2021-01-01 13:46:23.000000', 6, 'UTC'), toIntervalDay(90))), 0)
     WHERE equals(events.team_id, 2)) AS raw_session_replay_events__events ON equals(session_replay_events.session_id, raw_session_replay_events__events.`$session_id`)
  INNER JOIN
    (SELECT argMax(person_distinct_id2.person_id, person_distinct_id2.version) AS raw_session_replay_events__events__pdi___person_id,
            argMax(person_distinct_id2.person_id, person_distinct_id2.version) AS person_id,
            person_distinct_id2.distinct_id AS distinct_id
     FROM person_distinct_id2
     WHERE equals(person_distinct_id2.team_id, 2)
     GROUP BY person_distinct_id2.distinct_id
     HAVING ifNull(equals(argMax(person_distinct_id2.is_deleted, person_distinct_id2.version), 0), 0)) AS raw_session_replay_events__events__pdi ON equals(raw_session_replay_events__events.raw_session_replay_events__events___distinct_id, raw_session_replay_events__events__pdi.distinct_id)
  INNER JOIN
    (SELECT person.id AS id,
            replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(person.properties, 'person_property'), ''), 'null'), '^"|"$', '') AS properties___person_property
     FROM person
     WHERE and(equals(person.team_id, 2), ifNull(in(tuple(person.id, person.version),
                                                      (SELECT person.id AS id, max(person.version) AS version
                                                       FROM person
                                                       WHERE equals(person.team_id, 2)
                                                       GROUP BY person.id
                                                       HAVING ifNull(equals(argMax(person.is_deleted, person.version), 0), 0))), 0)) SETTINGS optimize_aggregation_in_order=1) AS raw_session_replay_events__events__pdi__person ON equals(raw_session_replay_events__events__pdi.raw_session_replay_events__events__pdi___person_id, raw_session_replay_events__events__pdi__person.id)
  WHERE and(equals(session_replay_events.team_id, 2), ifNull(equals(ifNull(raw_session_replay_events__events__pdi__person.properties___person_property, 'false'), 'true'), 0))
  ORDER BY session_replay_events.session_id ASC
  LIMIT 100 SETTINGS readonly=2,
                     max_execution_time=60,
                     allow_experimental_object_type=1,
                     format_csv_allow_double_quotes=0,
                     max_ast_elements=1000000,
                     max_expanded_ast_elements=1000000,
                     max_query_size=524288
  '''
# ---
# name: TestFilterSessionReplaysByPerson.test_select_by_person_distinct_id
  '''
  SELECT DISTINCT session_replay_events.session_id AS session_id
  FROM session_replay_events
  INNER JOIN
    (SELECT argMax(person_distinct_id2.person_id, person_distinct_id2.version) AS person_id,
            person_distinct_id2.distinct_id AS distinct_id
     FROM person_distinct_id2
     WHERE equals(person_distinct_id2.team_id, 2)
     GROUP BY person_distinct_id2.distinct_id
     HAVING ifNull(equals(argMax(person_distinct_id2.is_deleted, person_distinct_id2.version), 0), 0)) AS raw_session_replay_events__pdi ON equals(session_replay_events.distinct_id, raw_session_replay_events__pdi.distinct_id)
  WHERE and(equals(session_replay_events.team_id, 2), ifNull(equals(raw_session_replay_events__pdi.distinct_id, 'd1'), 0))
  ORDER BY session_replay_events.session_id ASC
  LIMIT 100 SETTINGS readonly=2,
                     max_execution_time=60,
                     allow_experimental_object_type=1,
                     format_csv_allow_double_quotes=0,
                     max_ast_elements=1000000,
                     max_expanded_ast_elements=1000000,
                     max_query_size=524288
  '''
# ---
# name: TestFilterSessionReplaysByPerson.test_select_by_replay_person
  '''
  SELECT DISTINCT session_replay_events.session_id AS session_id
  FROM session_replay_events
  INNER JOIN
    (SELECT argMax(person_distinct_id2.person_id, person_distinct_id2.version) AS raw_session_replay_events__pdi___person_id,
            argMax(person_distinct_id2.person_id, person_distinct_id2.version) AS person_id,
            person_distinct_id2.distinct_id AS distinct_id
     FROM person_distinct_id2
     WHERE equals(person_distinct_id2.team_id, 2)
     GROUP BY person_distinct_id2.distinct_id
     HAVING ifNull(equals(argMax(person_distinct_id2.is_deleted, person_distinct_id2.version), 0), 0)) AS raw_session_replay_events__pdi ON equals(session_replay_events.distinct_id, raw_session_replay_events__pdi.distinct_id)
  INNER JOIN
    (SELECT person.id AS id
     FROM person
     WHERE equals(person.team_id, 2)
     GROUP BY person.id
     HAVING ifNull(equals(argMax(person.is_deleted, person.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS raw_session_replay_events__pdi__person ON equals(raw_session_replay_events__pdi.raw_session_replay_events__pdi___person_id, raw_session_replay_events__pdi__person.id)
  WHERE and(equals(session_replay_events.team_id, 2), ifNull(equals(raw_session_replay_events__pdi__person.id, toUUIDOrNull('00000000-0000-4000-8000-000000000000')), 0))
  ORDER BY session_replay_events.session_id ASC
  LIMIT 100 SETTINGS readonly=2,
                     max_execution_time=60,
                     allow_experimental_object_type=1,
                     format_csv_allow_double_quotes=0,
                     max_ast_elements=1000000,
                     max_expanded_ast_elements=1000000,
                     max_query_size=524288
  '''
# ---
# name: TestFilterSessionReplaysByPerson.test_select_person_property
  '''
  SELECT session_replay_events.session_id AS session_id,
         any(raw_session_replay_events__pdi__person.properties___person_property)
  FROM session_replay_events
  INNER JOIN
    (SELECT argMax(person_distinct_id2.person_id, person_distinct_id2.version) AS raw_session_replay_events__pdi___person_id,
            argMax(person_distinct_id2.person_id, person_distinct_id2.version) AS person_id,
            person_distinct_id2.distinct_id AS distinct_id
     FROM person_distinct_id2
     WHERE equals(person_distinct_id2.team_id, 2)
     GROUP BY person_distinct_id2.distinct_id
     HAVING ifNull(equals(argMax(person_distinct_id2.is_deleted, person_distinct_id2.version), 0), 0)) AS raw_session_replay_events__pdi ON equals(session_replay_events.distinct_id, raw_session_replay_events__pdi.distinct_id)
  INNER JOIN
    (SELECT person.id AS id,
            replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(person.properties, 'person_property'), ''), 'null'), '^"|"$', '') AS properties___person_property
     FROM person
     WHERE and(equals(person.team_id, 2), ifNull(in(tuple(person.id, person.version),
                                                      (SELECT person.id AS id, max(person.version) AS version
                                                       FROM person
                                                       WHERE equals(person.team_id, 2)
                                                       GROUP BY person.id
                                                       HAVING ifNull(equals(argMax(person.is_deleted, person.version), 0), 0))), 0)) SETTINGS optimize_aggregation_in_order=1) AS raw_session_replay_events__pdi__person ON equals(raw_session_replay_events__pdi.raw_session_replay_events__pdi___person_id, raw_session_replay_events__pdi__person.id)
  WHERE equals(session_replay_events.team_id, 2)
  GROUP BY session_replay_events.session_id
  ORDER BY session_replay_events.session_id ASC
  LIMIT 100 SETTINGS readonly=2,
                     max_execution_time=60,
                     allow_experimental_object_type=1,
                     format_csv_allow_double_quotes=0,
                     max_ast_elements=1000000,
                     max_expanded_ast_elements=1000000,
                     max_query_size=524288
  '''
# ---
# name: TestFilterSessionReplaysBySessions.test_select_by_duration_with_session_duration_filter
  '''
  SELECT DISTINCT session_replay_events.session_id AS session_id
  FROM session_replay_events
  LEFT JOIN
    (SELECT dateDiff('second', min(sessions.min_timestamp), max(sessions.max_timestamp)) AS duration,
            sessions.session_id AS session_id
     FROM sessions
     WHERE equals(sessions.team_id, 2)
     GROUP BY sessions.session_id,
              sessions.session_id) AS raw_session_replay_events__session ON equals(session_replay_events.session_id, raw_session_replay_events__session.session_id)
  WHERE and(equals(session_replay_events.team_id, 2), ifNull(greater(raw_session_replay_events__session.duration, 3600), 0))
  GROUP BY session_replay_events.session_id
  HAVING ifNull(equals(dateDiff('second', min(toTimeZone(session_replay_events.min_first_timestamp, 'UTC')), max(toTimeZone(session_replay_events.max_last_timestamp, 'UTC'))), 3600), 0)
  ORDER BY session_replay_events.session_id ASC
  LIMIT 100 SETTINGS readonly=2,
                     max_execution_time=60,
                     allow_experimental_object_type=1,
                     format_csv_allow_double_quotes=0,
                     max_ast_elements=1000000,
                     max_expanded_ast_elements=1000000,
                     max_query_size=524288
  '''
# ---
# name: TestFilterSessionReplaysBySessions.test_select_by_duration_without_session_filter
  '''
  SELECT DISTINCT session_replay_events.session_id AS session_id
  FROM session_replay_events
  WHERE equals(session_replay_events.team_id, 2)
  GROUP BY session_replay_events.session_id
  HAVING ifNull(equals(dateDiff('second', min(toTimeZone(session_replay_events.min_first_timestamp, 'UTC')), max(toTimeZone(session_replay_events.max_last_timestamp, 'UTC'))), 3600), 0)
  ORDER BY session_replay_events.session_id ASC
  LIMIT 100 SETTINGS readonly=2,
                     max_execution_time=60,
                     allow_experimental_object_type=1,
                     format_csv_allow_double_quotes=0,
                     max_ast_elements=1000000,
                     max_expanded_ast_elements=1000000,
                     max_query_size=524288
  '''
# ---
