# name: TestResolver.test_asterisk_expander_from_subquery_table
  '
  {
    select: [
      {
        alias: "uuid"
        expr: {
          chain: [
            "uuid"
          ]
          type: {
            name: "uuid"
            table_type: {
              aliases: {}
              anonymous_tables: []
              columns: {
                $group_0: {
                  alias: "$group_0"
                  type: {
                    name: "$group_0"
                    table_type: {
                      table: fields={'uuid': StringDatabaseField(name='uuid', array=None, nullable=None), 'event': StringDatabaseField(name='event', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='properties', array=None, nullable=None), 'timestamp': DateTimeDatabaseField(name='timestamp', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'distinct_id': StringDatabaseField(name='distinct_id', array=None, nullable=None), 'elements_chain': StringDatabaseField(name='elements_chain', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), '$session_id': StringDatabaseField(name='$session_id', array=None, nullable=None), 'pdi': LazyJoin(join_function=<function join_with_person_distinct_ids_table at 0x1088f4550>, join_table=PersonDistinctIdsTable(fields={'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'distinct_id': StringDatabaseField(name='distinct_id', array=None, nullable=None), 'person_id': StringDatabaseField(name='person_id', array=None, nullable=None), 'person': LazyJoin(join_function=<function join_with_persons_table at 0x10849d2d0>, join_table=PersonsTable(fields={'id': StringDatabaseField(name='id', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='properties', array=None, nullable=None), 'is_identified': BooleanDatabaseField(name='is_identified', array=None, nullable=None), 'pdi': LazyJoin(join_function=<function persons_pdi_join at 0x10849d3f0>, join_table=PersonsPDITable(fields={'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'distinct_id': StringDatabaseField(name='distinct_id', array=None, nullable=None), 'person_id': StringDatabaseField(name='person_id', array=None, nullable=None)}), from_field='id')}), from_field='person_id')}), from_field='distinct_id'), 'override': LazyJoin(join_function=<function join_with_person_overrides_table at 0x1088f41f0>, join_table=PersonOverridesTable(fields={'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'old_person_id': StringDatabaseField(name='old_person_id', array=None, nullable=None), 'override_person_id': StringDatabaseField(name='override_person_id', array=None, nullable=None), 'oldest_event': DateTimeDatabaseField(name='oldest_event', array=None, nullable=None), 'merged_at': DateTimeDatabaseField(name='merged_at', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None)}), from_field='person_id'), 'override_person_id': FieldTraverser(chain=['override', 'override_person_id']), 'poe': EventsPersonSubTable(fields={'id': StringDatabaseField(name='person_id', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='person_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='person_properties', array=None, nullable=None)}), 'goe_0': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_0', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group0_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group0_properties', array=None, nullable=None)}), 'goe_1': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_1', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group1_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group1_properties', array=None, nullable=None)}), 'goe_2': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_2', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group2_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group2_properties', array=None, nullable=None)}), 'goe_3': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_3', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group3_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group3_properties', array=None, nullable=None)}), 'goe_4': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_4', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group4_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group4_properties', array=None, nullable=None)}), 'person': FieldTraverser(chain=['pdi', 'person']), 'person_id': FieldTraverser(chain=['pdi', 'person_id']), '$group_0': StringDatabaseField(name='$group_0', array=None, nullable=None), 'group_0': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f5120>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_0'), '$group_1': StringDatabaseField(name='$group_1', array=None, nullable=None), 'group_1': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f45e0>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_1'), '$group_2': StringDatabaseField(name='$group_2', array=None, nullable=None), 'group_2': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f48b0>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_2'), '$group_3': StringDatabaseField(name='$group_3', array=None, nullable=None), 'group_3': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f4820>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_3'), '$group_4': StringDatabaseField(name='$group_4', array=None, nullable=None), 'group_4': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f5ab0>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_4'), 'session': LazyJoin(join_function=<function join_with_events_table_session_duration at 0x10849e950>, join_table=EventsSessionSubTable(fields={'id': StringDatabaseField(name='$session_id', array=None, nullable=None), 'duration': IntegerDatabaseField(name='session_duration', array=None, nullable=None)}), from_field='$session_id')}
                    }
                  }
                },
                $group_1: {
                  alias: "$group_1"
                  type: {
                    name: "$group_1"
                    table_type: <recursion ...>
                  }
                },
                $group_2: {
                  alias: "$group_2"
                  type: {
                    name: "$group_2"
                    table_type: <recursion ...>
                  }
                },
                $group_3: {
                  alias: "$group_3"
                  type: {
                    name: "$group_3"
                    table_type: <recursion ...>
                  }
                },
                $group_4: {
                  alias: "$group_4"
                  type: {
                    name: "$group_4"
                    table_type: <recursion ...>
                  }
                },
                $session_id: {
                  alias: "$session_id"
                  type: {
                    name: "$session_id"
                    table_type: <recursion ...>
                  }
                },
                created_at: {
                  alias: "created_at"
                  type: {
                    name: "created_at"
                    table_type: <recursion ...>
                  }
                },
                distinct_id: {
                  alias: "distinct_id"
                  type: {
                    name: "distinct_id"
                    table_type: <recursion ...>
                  }
                },
                elements_chain: {
                  alias: "elements_chain"
                  type: {
                    name: "elements_chain"
                    table_type: <recursion ...>
                  }
                },
                event: {
                  alias: "event"
                  type: {
                    name: "event"
                    table_type: <recursion ...>
                  }
                },
                properties: {
                  alias: "properties"
                  type: {
                    name: "properties"
                    table_type: <recursion ...>
                  }
                },
                timestamp: {
                  alias: "timestamp"
                  type: {
                    name: "timestamp"
                    table_type: <recursion ...>
                  }
                },
                uuid: {
                  alias: "uuid"
                  type: {
                    name: "uuid"
                    table_type: <recursion ...>
                  }
                }
              }
              ctes: {}
              tables: {
                events: <recursion ...>
              }
            }
          }
        }
        hidden: True
        type: {
          alias: "uuid"
          type: <recursion ...>
        }
      },
      {
        alias: "event"
        expr: {
          chain: [
            "event"
          ]
          type: {
            name: "event"
            table_type: <recursion ...>
          }
        }
        hidden: True
        type: {
          alias: "event"
          type: <recursion ...>
        }
      },
      {
        alias: "properties"
        expr: {
          chain: [
            "properties"
          ]
          type: {
            name: "properties"
            table_type: <recursion ...>
          }
        }
        hidden: True
        type: {
          alias: "properties"
          type: <recursion ...>
        }
      },
      {
        alias: "timestamp"
        expr: {
          chain: [
            "timestamp"
          ]
          type: {
            name: "timestamp"
            table_type: <recursion ...>
          }
        }
        hidden: True
        type: {
          alias: "timestamp"
          type: <recursion ...>
        }
      },
      {
        alias: "distinct_id"
        expr: {
          chain: [
            "distinct_id"
          ]
          type: {
            name: "distinct_id"
            table_type: <recursion ...>
          }
        }
        hidden: True
        type: {
          alias: "distinct_id"
          type: <recursion ...>
        }
      },
      {
        alias: "elements_chain"
        expr: {
          chain: [
            "elements_chain"
          ]
          type: {
            name: "elements_chain"
            table_type: <recursion ...>
          }
        }
        hidden: True
        type: {
          alias: "elements_chain"
          type: <recursion ...>
        }
      },
      {
        alias: "created_at"
        expr: {
          chain: [
            "created_at"
          ]
          type: {
            name: "created_at"
            table_type: <recursion ...>
          }
        }
        hidden: True
        type: {
          alias: "created_at"
          type: <recursion ...>
        }
      },
      {
        alias: "$session_id"
        expr: {
          chain: [
            "$session_id"
          ]
          type: {
            name: "$session_id"
            table_type: <recursion ...>
          }
        }
        hidden: True
        type: {
          alias: "$session_id"
          type: <recursion ...>
        }
      },
      {
        alias: "$group_0"
        expr: {
          chain: [
            "$group_0"
          ]
          type: {
            name: "$group_0"
            table_type: <recursion ...>
          }
        }
        hidden: True
        type: {
          alias: "$group_0"
          type: <recursion ...>
        }
      },
      {
        alias: "$group_1"
        expr: {
          chain: [
            "$group_1"
          ]
          type: {
            name: "$group_1"
            table_type: <recursion ...>
          }
        }
        hidden: True
        type: {
          alias: "$group_1"
          type: <recursion ...>
        }
      },
      {
        alias: "$group_2"
        expr: {
          chain: [
            "$group_2"
          ]
          type: {
            name: "$group_2"
            table_type: <recursion ...>
          }
        }
        hidden: True
        type: {
          alias: "$group_2"
          type: <recursion ...>
        }
      },
      {
        alias: "$group_3"
        expr: {
          chain: [
            "$group_3"
          ]
          type: {
            name: "$group_3"
            table_type: <recursion ...>
          }
        }
        hidden: True
        type: {
          alias: "$group_3"
          type: <recursion ...>
        }
      },
      {
        alias: "$group_4"
        expr: {
          chain: [
            "$group_4"
          ]
          type: {
            name: "$group_4"
            table_type: <recursion ...>
          }
        }
        hidden: True
        type: {
          alias: "$group_4"
          type: <recursion ...>
        }
      }
    ]
    select_from: {
      table: {
        select: [
          {
            alias: "uuid"
            expr: {
              chain: [
                "uuid"
              ]
              type: <recursion ...>
            }
            hidden: True
            type: <recursion ...>
          },
          {
            alias: "event"
            expr: {
              chain: [
                "event"
              ]
              type: <recursion ...>
            }
            hidden: True
            type: <recursion ...>
          },
          {
            alias: "properties"
            expr: {
              chain: [
                "properties"
              ]
              type: <recursion ...>
            }
            hidden: True
            type: <recursion ...>
          },
          {
            alias: "timestamp"
            expr: {
              chain: [
                "timestamp"
              ]
              type: <recursion ...>
            }
            hidden: True
            type: <recursion ...>
          },
          {
            alias: "distinct_id"
            expr: {
              chain: [
                "distinct_id"
              ]
              type: <recursion ...>
            }
            hidden: True
            type: <recursion ...>
          },
          {
            alias: "elements_chain"
            expr: {
              chain: [
                "elements_chain"
              ]
              type: <recursion ...>
            }
            hidden: True
            type: <recursion ...>
          },
          {
            alias: "created_at"
            expr: {
              chain: [
                "created_at"
              ]
              type: <recursion ...>
            }
            hidden: True
            type: <recursion ...>
          },
          {
            alias: "$session_id"
            expr: {
              chain: [
                "$session_id"
              ]
              type: <recursion ...>
            }
            hidden: True
            type: <recursion ...>
          },
          {
            alias: "$group_0"
            expr: {
              chain: [
                "$group_0"
              ]
              type: <recursion ...>
            }
            hidden: True
            type: <recursion ...>
          },
          {
            alias: "$group_1"
            expr: {
              chain: [
                "$group_1"
              ]
              type: <recursion ...>
            }
            hidden: True
            type: <recursion ...>
          },
          {
            alias: "$group_2"
            expr: {
              chain: [
                "$group_2"
              ]
              type: <recursion ...>
            }
            hidden: True
            type: <recursion ...>
          },
          {
            alias: "$group_3"
            expr: {
              chain: [
                "$group_3"
              ]
              type: <recursion ...>
            }
            hidden: True
            type: <recursion ...>
          },
          {
            alias: "$group_4"
            expr: {
              chain: [
                "$group_4"
              ]
              type: <recursion ...>
            }
            hidden: True
            type: <recursion ...>
          }
        ]
        select_from: {
          table: {
            chain: [
              "events"
            ]
            type: <recursion ...>
          }
          type: <recursion ...>
        }
        type: <recursion ...>
      }
      type: <recursion ...>
    }
    type: {
      aliases: {}
      anonymous_tables: [
        <recursion ...>
      ]
      columns: {
        $group_0: <recursion ...>,
        $group_1: <recursion ...>,
        $group_2: <recursion ...>,
        $group_3: <recursion ...>,
        $group_4: <recursion ...>,
        $session_id: <recursion ...>,
        created_at: <recursion ...>,
        distinct_id: <recursion ...>,
        elements_chain: <recursion ...>,
        event: <recursion ...>,
        properties: <recursion ...>,
        timestamp: <recursion ...>,
        uuid: <recursion ...>
      }
      ctes: {}
      tables: {}
    }
  }
  '
---
# name: TestResolver.test_asterisk_expander_select_union
  '
  {
    select: [
      {
        alias: "uuid"
        expr: {
          chain: [
            "uuid"
          ]
          type: {
            name: "uuid"
            table_type: {
              aliases: {}
              anonymous_tables: []
              columns: {
                $group_0: {
                  alias: "$group_0"
                  type: {
                    name: "$group_0"
                    table_type: {
                      table: fields={'uuid': StringDatabaseField(name='uuid', array=None, nullable=None), 'event': StringDatabaseField(name='event', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='properties', array=None, nullable=None), 'timestamp': DateTimeDatabaseField(name='timestamp', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'distinct_id': StringDatabaseField(name='distinct_id', array=None, nullable=None), 'elements_chain': StringDatabaseField(name='elements_chain', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), '$session_id': StringDatabaseField(name='$session_id', array=None, nullable=None), 'pdi': LazyJoin(join_function=<function join_with_person_distinct_ids_table at 0x1088f4550>, join_table=PersonDistinctIdsTable(fields={'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'distinct_id': StringDatabaseField(name='distinct_id', array=None, nullable=None), 'person_id': StringDatabaseField(name='person_id', array=None, nullable=None), 'person': LazyJoin(join_function=<function join_with_persons_table at 0x10849d2d0>, join_table=PersonsTable(fields={'id': StringDatabaseField(name='id', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='properties', array=None, nullable=None), 'is_identified': BooleanDatabaseField(name='is_identified', array=None, nullable=None), 'pdi': LazyJoin(join_function=<function persons_pdi_join at 0x10849d3f0>, join_table=PersonsPDITable(fields={'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'distinct_id': StringDatabaseField(name='distinct_id', array=None, nullable=None), 'person_id': StringDatabaseField(name='person_id', array=None, nullable=None)}), from_field='id')}), from_field='person_id')}), from_field='distinct_id'), 'override': LazyJoin(join_function=<function join_with_person_overrides_table at 0x1088f41f0>, join_table=PersonOverridesTable(fields={'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'old_person_id': StringDatabaseField(name='old_person_id', array=None, nullable=None), 'override_person_id': StringDatabaseField(name='override_person_id', array=None, nullable=None), 'oldest_event': DateTimeDatabaseField(name='oldest_event', array=None, nullable=None), 'merged_at': DateTimeDatabaseField(name='merged_at', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None)}), from_field='person_id'), 'override_person_id': FieldTraverser(chain=['override', 'override_person_id']), 'poe': EventsPersonSubTable(fields={'id': StringDatabaseField(name='person_id', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='person_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='person_properties', array=None, nullable=None)}), 'goe_0': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_0', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group0_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group0_properties', array=None, nullable=None)}), 'goe_1': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_1', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group1_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group1_properties', array=None, nullable=None)}), 'goe_2': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_2', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group2_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group2_properties', array=None, nullable=None)}), 'goe_3': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_3', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group3_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group3_properties', array=None, nullable=None)}), 'goe_4': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_4', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group4_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group4_properties', array=None, nullable=None)}), 'person': FieldTraverser(chain=['pdi', 'person']), 'person_id': FieldTraverser(chain=['pdi', 'person_id']), '$group_0': StringDatabaseField(name='$group_0', array=None, nullable=None), 'group_0': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f5120>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_0'), '$group_1': StringDatabaseField(name='$group_1', array=None, nullable=None), 'group_1': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f45e0>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_1'), '$group_2': StringDatabaseField(name='$group_2', array=None, nullable=None), 'group_2': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f48b0>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_2'), '$group_3': StringDatabaseField(name='$group_3', array=None, nullable=None), 'group_3': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f4820>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_3'), '$group_4': StringDatabaseField(name='$group_4', array=None, nullable=None), 'group_4': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f5ab0>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_4'), 'session': LazyJoin(join_function=<function join_with_events_table_session_duration at 0x10849e950>, join_table=EventsSessionSubTable(fields={'id': StringDatabaseField(name='$session_id', array=None, nullable=None), 'duration': IntegerDatabaseField(name='session_duration', array=None, nullable=None)}), from_field='$session_id')}
                    }
                  }
                },
                $group_1: {
                  alias: "$group_1"
                  type: {
                    name: "$group_1"
                    table_type: <recursion ...>
                  }
                },
                $group_2: {
                  alias: "$group_2"
                  type: {
                    name: "$group_2"
                    table_type: <recursion ...>
                  }
                },
                $group_3: {
                  alias: "$group_3"
                  type: {
                    name: "$group_3"
                    table_type: <recursion ...>
                  }
                },
                $group_4: {
                  alias: "$group_4"
                  type: {
                    name: "$group_4"
                    table_type: <recursion ...>
                  }
                },
                $session_id: {
                  alias: "$session_id"
                  type: {
                    name: "$session_id"
                    table_type: <recursion ...>
                  }
                },
                created_at: {
                  alias: "created_at"
                  type: {
                    name: "created_at"
                    table_type: <recursion ...>
                  }
                },
                distinct_id: {
                  alias: "distinct_id"
                  type: {
                    name: "distinct_id"
                    table_type: <recursion ...>
                  }
                },
                elements_chain: {
                  alias: "elements_chain"
                  type: {
                    name: "elements_chain"
                    table_type: <recursion ...>
                  }
                },
                event: {
                  alias: "event"
                  type: {
                    name: "event"
                    table_type: <recursion ...>
                  }
                },
                properties: {
                  alias: "properties"
                  type: {
                    name: "properties"
                    table_type: <recursion ...>
                  }
                },
                timestamp: {
                  alias: "timestamp"
                  type: {
                    name: "timestamp"
                    table_type: <recursion ...>
                  }
                },
                uuid: {
                  alias: "uuid"
                  type: {
                    name: "uuid"
                    table_type: <recursion ...>
                  }
                }
              }
              ctes: {}
              tables: {
                events: <recursion ...>
              }
            }
          }
        }
        hidden: True
        type: {
          alias: "uuid"
          type: <recursion ...>
        }
      },
      {
        alias: "event"
        expr: {
          chain: [
            "event"
          ]
          type: {
            name: "event"
            table_type: <recursion ...>
          }
        }
        hidden: True
        type: {
          alias: "event"
          type: <recursion ...>
        }
      },
      {
        alias: "properties"
        expr: {
          chain: [
            "properties"
          ]
          type: {
            name: "properties"
            table_type: <recursion ...>
          }
        }
        hidden: True
        type: {
          alias: "properties"
          type: <recursion ...>
        }
      },
      {
        alias: "timestamp"
        expr: {
          chain: [
            "timestamp"
          ]
          type: {
            name: "timestamp"
            table_type: <recursion ...>
          }
        }
        hidden: True
        type: {
          alias: "timestamp"
          type: <recursion ...>
        }
      },
      {
        alias: "distinct_id"
        expr: {
          chain: [
            "distinct_id"
          ]
          type: {
            name: "distinct_id"
            table_type: <recursion ...>
          }
        }
        hidden: True
        type: {
          alias: "distinct_id"
          type: <recursion ...>
        }
      },
      {
        alias: "elements_chain"
        expr: {
          chain: [
            "elements_chain"
          ]
          type: {
            name: "elements_chain"
            table_type: <recursion ...>
          }
        }
        hidden: True
        type: {
          alias: "elements_chain"
          type: <recursion ...>
        }
      },
      {
        alias: "created_at"
        expr: {
          chain: [
            "created_at"
          ]
          type: {
            name: "created_at"
            table_type: <recursion ...>
          }
        }
        hidden: True
        type: {
          alias: "created_at"
          type: <recursion ...>
        }
      },
      {
        alias: "$session_id"
        expr: {
          chain: [
            "$session_id"
          ]
          type: {
            name: "$session_id"
            table_type: <recursion ...>
          }
        }
        hidden: True
        type: {
          alias: "$session_id"
          type: <recursion ...>
        }
      },
      {
        alias: "$group_0"
        expr: {
          chain: [
            "$group_0"
          ]
          type: {
            name: "$group_0"
            table_type: <recursion ...>
          }
        }
        hidden: True
        type: {
          alias: "$group_0"
          type: <recursion ...>
        }
      },
      {
        alias: "$group_1"
        expr: {
          chain: [
            "$group_1"
          ]
          type: {
            name: "$group_1"
            table_type: <recursion ...>
          }
        }
        hidden: True
        type: {
          alias: "$group_1"
          type: <recursion ...>
        }
      },
      {
        alias: "$group_2"
        expr: {
          chain: [
            "$group_2"
          ]
          type: {
            name: "$group_2"
            table_type: <recursion ...>
          }
        }
        hidden: True
        type: {
          alias: "$group_2"
          type: <recursion ...>
        }
      },
      {
        alias: "$group_3"
        expr: {
          chain: [
            "$group_3"
          ]
          type: {
            name: "$group_3"
            table_type: <recursion ...>
          }
        }
        hidden: True
        type: {
          alias: "$group_3"
          type: <recursion ...>
        }
      },
      {
        alias: "$group_4"
        expr: {
          chain: [
            "$group_4"
          ]
          type: {
            name: "$group_4"
            table_type: <recursion ...>
          }
        }
        hidden: True
        type: {
          alias: "$group_4"
          type: <recursion ...>
        }
      }
    ]
    select_from: {
      table: {
        select_queries: [
          {
            select: [
              {
                alias: "uuid"
                expr: {
                  chain: [
                    "uuid"
                  ]
                  type: <recursion ...>
                }
                hidden: True
                type: <recursion ...>
              },
              {
                alias: "event"
                expr: {
                  chain: [
                    "event"
                  ]
                  type: <recursion ...>
                }
                hidden: True
                type: <recursion ...>
              },
              {
                alias: "properties"
                expr: {
                  chain: [
                    "properties"
                  ]
                  type: <recursion ...>
                }
                hidden: True
                type: <recursion ...>
              },
              {
                alias: "timestamp"
                expr: {
                  chain: [
                    "timestamp"
                  ]
                  type: <recursion ...>
                }
                hidden: True
                type: <recursion ...>
              },
              {
                alias: "distinct_id"
                expr: {
                  chain: [
                    "distinct_id"
                  ]
                  type: <recursion ...>
                }
                hidden: True
                type: <recursion ...>
              },
              {
                alias: "elements_chain"
                expr: {
                  chain: [
                    "elements_chain"
                  ]
                  type: <recursion ...>
                }
                hidden: True
                type: <recursion ...>
              },
              {
                alias: "created_at"
                expr: {
                  chain: [
                    "created_at"
                  ]
                  type: <recursion ...>
                }
                hidden: True
                type: <recursion ...>
              },
              {
                alias: "$session_id"
                expr: {
                  chain: [
                    "$session_id"
                  ]
                  type: <recursion ...>
                }
                hidden: True
                type: <recursion ...>
              },
              {
                alias: "$group_0"
                expr: {
                  chain: [
                    "$group_0"
                  ]
                  type: <recursion ...>
                }
                hidden: True
                type: <recursion ...>
              },
              {
                alias: "$group_1"
                expr: {
                  chain: [
                    "$group_1"
                  ]
                  type: <recursion ...>
                }
                hidden: True
                type: <recursion ...>
              },
              {
                alias: "$group_2"
                expr: {
                  chain: [
                    "$group_2"
                  ]
                  type: <recursion ...>
                }
                hidden: True
                type: <recursion ...>
              },
              {
                alias: "$group_3"
                expr: {
                  chain: [
                    "$group_3"
                  ]
                  type: <recursion ...>
                }
                hidden: True
                type: <recursion ...>
              },
              {
                alias: "$group_4"
                expr: {
                  chain: [
                    "$group_4"
                  ]
                  type: <recursion ...>
                }
                hidden: True
                type: <recursion ...>
              }
            ]
            select_from: {
              table: {
                chain: [
                  "events"
                ]
                type: <recursion ...>
              }
              type: <recursion ...>
            }
            type: <recursion ...>
          },
          {
            select: [
              {
                alias: "uuid"
                expr: {
                  chain: [
                    "uuid"
                  ]
                  type: {
                    name: "uuid"
                    table_type: {
                      table: fields={'uuid': StringDatabaseField(name='uuid', array=None, nullable=None), 'event': StringDatabaseField(name='event', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='properties', array=None, nullable=None), 'timestamp': DateTimeDatabaseField(name='timestamp', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'distinct_id': StringDatabaseField(name='distinct_id', array=None, nullable=None), 'elements_chain': StringDatabaseField(name='elements_chain', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), '$session_id': StringDatabaseField(name='$session_id', array=None, nullable=None), 'pdi': LazyJoin(join_function=<function join_with_person_distinct_ids_table at 0x1088f4550>, join_table=PersonDistinctIdsTable(fields={'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'distinct_id': StringDatabaseField(name='distinct_id', array=None, nullable=None), 'person_id': StringDatabaseField(name='person_id', array=None, nullable=None), 'person': LazyJoin(join_function=<function join_with_persons_table at 0x10849d2d0>, join_table=PersonsTable(fields={'id': StringDatabaseField(name='id', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='properties', array=None, nullable=None), 'is_identified': BooleanDatabaseField(name='is_identified', array=None, nullable=None), 'pdi': LazyJoin(join_function=<function persons_pdi_join at 0x10849d3f0>, join_table=PersonsPDITable(fields={'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'distinct_id': StringDatabaseField(name='distinct_id', array=None, nullable=None), 'person_id': StringDatabaseField(name='person_id', array=None, nullable=None)}), from_field='id')}), from_field='person_id')}), from_field='distinct_id'), 'override': LazyJoin(join_function=<function join_with_person_overrides_table at 0x1088f41f0>, join_table=PersonOverridesTable(fields={'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'old_person_id': StringDatabaseField(name='old_person_id', array=None, nullable=None), 'override_person_id': StringDatabaseField(name='override_person_id', array=None, nullable=None), 'oldest_event': DateTimeDatabaseField(name='oldest_event', array=None, nullable=None), 'merged_at': DateTimeDatabaseField(name='merged_at', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None)}), from_field='person_id'), 'override_person_id': FieldTraverser(chain=['override', 'override_person_id']), 'poe': EventsPersonSubTable(fields={'id': StringDatabaseField(name='person_id', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='person_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='person_properties', array=None, nullable=None)}), 'goe_0': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_0', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group0_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group0_properties', array=None, nullable=None)}), 'goe_1': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_1', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group1_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group1_properties', array=None, nullable=None)}), 'goe_2': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_2', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group2_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group2_properties', array=None, nullable=None)}), 'goe_3': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_3', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group3_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group3_properties', array=None, nullable=None)}), 'goe_4': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_4', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group4_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group4_properties', array=None, nullable=None)}), 'person': FieldTraverser(chain=['pdi', 'person']), 'person_id': FieldTraverser(chain=['pdi', 'person_id']), '$group_0': StringDatabaseField(name='$group_0', array=None, nullable=None), 'group_0': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f5120>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_0'), '$group_1': StringDatabaseField(name='$group_1', array=None, nullable=None), 'group_1': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f45e0>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_1'), '$group_2': StringDatabaseField(name='$group_2', array=None, nullable=None), 'group_2': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f48b0>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_2'), '$group_3': StringDatabaseField(name='$group_3', array=None, nullable=None), 'group_3': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f4820>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_3'), '$group_4': StringDatabaseField(name='$group_4', array=None, nullable=None), 'group_4': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f5ab0>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_4'), 'session': LazyJoin(join_function=<function join_with_events_table_session_duration at 0x10849e950>, join_table=EventsSessionSubTable(fields={'id': StringDatabaseField(name='$session_id', array=None, nullable=None), 'duration': IntegerDatabaseField(name='session_duration', array=None, nullable=None)}), from_field='$session_id')}
                    }
                  }
                }
                hidden: True
                type: {
                  alias: "uuid"
                  type: <recursion ...>
                }
              },
              {
                alias: "event"
                expr: {
                  chain: [
                    "event"
                  ]
                  type: {
                    name: "event"
                    table_type: <recursion ...>
                  }
                }
                hidden: True
                type: {
                  alias: "event"
                  type: <recursion ...>
                }
              },
              {
                alias: "properties"
                expr: {
                  chain: [
                    "properties"
                  ]
                  type: {
                    name: "properties"
                    table_type: <recursion ...>
                  }
                }
                hidden: True
                type: {
                  alias: "properties"
                  type: <recursion ...>
                }
              },
              {
                alias: "timestamp"
                expr: {
                  chain: [
                    "timestamp"
                  ]
                  type: {
                    name: "timestamp"
                    table_type: <recursion ...>
                  }
                }
                hidden: True
                type: {
                  alias: "timestamp"
                  type: <recursion ...>
                }
              },
              {
                alias: "distinct_id"
                expr: {
                  chain: [
                    "distinct_id"
                  ]
                  type: {
                    name: "distinct_id"
                    table_type: <recursion ...>
                  }
                }
                hidden: True
                type: {
                  alias: "distinct_id"
                  type: <recursion ...>
                }
              },
              {
                alias: "elements_chain"
                expr: {
                  chain: [
                    "elements_chain"
                  ]
                  type: {
                    name: "elements_chain"
                    table_type: <recursion ...>
                  }
                }
                hidden: True
                type: {
                  alias: "elements_chain"
                  type: <recursion ...>
                }
              },
              {
                alias: "created_at"
                expr: {
                  chain: [
                    "created_at"
                  ]
                  type: {
                    name: "created_at"
                    table_type: <recursion ...>
                  }
                }
                hidden: True
                type: {
                  alias: "created_at"
                  type: <recursion ...>
                }
              },
              {
                alias: "$session_id"
                expr: {
                  chain: [
                    "$session_id"
                  ]
                  type: {
                    name: "$session_id"
                    table_type: <recursion ...>
                  }
                }
                hidden: True
                type: {
                  alias: "$session_id"
                  type: <recursion ...>
                }
              },
              {
                alias: "$group_0"
                expr: {
                  chain: [
                    "$group_0"
                  ]
                  type: {
                    name: "$group_0"
                    table_type: <recursion ...>
                  }
                }
                hidden: True
                type: {
                  alias: "$group_0"
                  type: <recursion ...>
                }
              },
              {
                alias: "$group_1"
                expr: {
                  chain: [
                    "$group_1"
                  ]
                  type: {
                    name: "$group_1"
                    table_type: <recursion ...>
                  }
                }
                hidden: True
                type: {
                  alias: "$group_1"
                  type: <recursion ...>
                }
              },
              {
                alias: "$group_2"
                expr: {
                  chain: [
                    "$group_2"
                  ]
                  type: {
                    name: "$group_2"
                    table_type: <recursion ...>
                  }
                }
                hidden: True
                type: {
                  alias: "$group_2"
                  type: <recursion ...>
                }
              },
              {
                alias: "$group_3"
                expr: {
                  chain: [
                    "$group_3"
                  ]
                  type: {
                    name: "$group_3"
                    table_type: <recursion ...>
                  }
                }
                hidden: True
                type: {
                  alias: "$group_3"
                  type: <recursion ...>
                }
              },
              {
                alias: "$group_4"
                expr: {
                  chain: [
                    "$group_4"
                  ]
                  type: {
                    name: "$group_4"
                    table_type: <recursion ...>
                  }
                }
                hidden: True
                type: {
                  alias: "$group_4"
                  type: <recursion ...>
                }
              }
            ]
            select_from: {
              table: {
                chain: [
                  "events"
                ]
                type: <recursion ...>
              }
              type: <recursion ...>
            }
            type: {
              aliases: {}
              anonymous_tables: []
              columns: {
                $group_0: <recursion ...>,
                $group_1: <recursion ...>,
                $group_2: <recursion ...>,
                $group_3: <recursion ...>,
                $group_4: <recursion ...>,
                $session_id: <recursion ...>,
                created_at: <recursion ...>,
                distinct_id: <recursion ...>,
                elements_chain: <recursion ...>,
                event: <recursion ...>,
                properties: <recursion ...>,
                timestamp: <recursion ...>,
                uuid: <recursion ...>
              }
              ctes: {}
              tables: {
                events: <recursion ...>
              }
            }
          }
        ]
        type: {
          types: [
            <recursion ...>,
            <recursion ...>
          ]
        }
      }
      type: <recursion ...>
    }
    type: {
      aliases: {}
      anonymous_tables: [
        <recursion ...>
      ]
      columns: {
        $group_0: <recursion ...>,
        $group_1: <recursion ...>,
        $group_2: <recursion ...>,
        $group_3: <recursion ...>,
        $group_4: <recursion ...>,
        $session_id: <recursion ...>,
        created_at: <recursion ...>,
        distinct_id: <recursion ...>,
        elements_chain: <recursion ...>,
        event: <recursion ...>,
        properties: <recursion ...>,
        timestamp: <recursion ...>,
        uuid: <recursion ...>
      }
      ctes: {}
      tables: {}
    }
  }
  '
---
# name: TestResolver.test_asterisk_expander_subquery
  '
  {
    select: [
      {
        alias: "a"
        expr: {
          chain: [
            "a"
          ]
          type: {
            name: "a"
            table_type: {
              aliases: {
                a: {
                  alias: "a"
                  type: {
                    data_type: "int"
                  }
                },
                b: {
                  alias: "b"
                  type: {
                    data_type: "int"
                  }
                }
              }
              anonymous_tables: []
              columns: {
                a: <recursion ...>,
                b: <recursion ...>
              }
              ctes: {}
              tables: {}
            }
          }
        }
        hidden: True
        type: {
          alias: "a"
          type: <recursion ...>
        }
      },
      {
        alias: "b"
        expr: {
          chain: [
            "b"
          ]
          type: {
            name: "b"
            table_type: <recursion ...>
          }
        }
        hidden: True
        type: {
          alias: "b"
          type: <recursion ...>
        }
      }
    ]
    select_from: {
      table: {
        select: [
          {
            alias: "a"
            expr: {
              type: <recursion ...>
              value: 1
            }
            hidden: False
            type: <recursion ...>
          },
          {
            alias: "b"
            expr: {
              type: <recursion ...>
              value: 2
            }
            hidden: False
            type: <recursion ...>
          }
        ]
        type: <recursion ...>
      }
      type: <recursion ...>
    }
    type: {
      aliases: {}
      anonymous_tables: [
        <recursion ...>
      ]
      columns: {
        a: <recursion ...>,
        b: <recursion ...>
      }
      ctes: {}
      tables: {}
    }
  }
  '
---
# name: TestResolver.test_asterisk_expander_subquery_alias
  '
  {
    select: [
      {
        alias: "a"
        expr: {
          chain: [
            "a"
          ]
          type: {
            name: "a"
            table_type: {
              alias: "x"
              select_query_type: {
                aliases: {
                  a: {
                    alias: "a"
                    type: {
                      data_type: "int"
                    }
                  },
                  b: {
                    alias: "b"
                    type: {
                      data_type: "int"
                    }
                  }
                }
                anonymous_tables: []
                columns: {
                  a: <recursion ...>,
                  b: <recursion ...>
                }
                ctes: {}
                tables: {}
              }
            }
          }
        }
        hidden: True
        type: {
          alias: "a"
          type: <recursion ...>
        }
      },
      {
        alias: "b"
        expr: {
          chain: [
            "b"
          ]
          type: {
            name: "b"
            table_type: <recursion ...>
          }
        }
        hidden: True
        type: {
          alias: "b"
          type: <recursion ...>
        }
      }
    ]
    select_from: {
      alias: "x"
      table: {
        select: [
          {
            alias: "a"
            expr: {
              type: <recursion ...>
              value: 1
            }
            hidden: False
            type: <recursion ...>
          },
          {
            alias: "b"
            expr: {
              type: <recursion ...>
              value: 2
            }
            hidden: False
            type: <recursion ...>
          }
        ]
        type: <recursion ...>
      }
      type: <recursion ...>
    }
    type: {
      aliases: {}
      anonymous_tables: []
      columns: {
        a: <recursion ...>,
        b: <recursion ...>
      }
      ctes: {}
      tables: {
        x: <recursion ...>
      }
    }
  }
  '
---
# name: TestResolver.test_asterisk_expander_table
  '
  {
    select: [
      {
        alias: "uuid"
        expr: {
          chain: [
            "uuid"
          ]
          type: {
            name: "uuid"
            table_type: {
              table: fields={'uuid': StringDatabaseField(name='uuid', array=None, nullable=None), 'event': StringDatabaseField(name='event', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='properties', array=None, nullable=None), 'timestamp': DateTimeDatabaseField(name='timestamp', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'distinct_id': StringDatabaseField(name='distinct_id', array=None, nullable=None), 'elements_chain': StringDatabaseField(name='elements_chain', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), '$session_id': StringDatabaseField(name='$session_id', array=None, nullable=None), 'pdi': LazyJoin(join_function=<function join_with_person_distinct_ids_table at 0x1088f4550>, join_table=PersonDistinctIdsTable(fields={'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'distinct_id': StringDatabaseField(name='distinct_id', array=None, nullable=None), 'person_id': StringDatabaseField(name='person_id', array=None, nullable=None), 'person': LazyJoin(join_function=<function join_with_persons_table at 0x10849d2d0>, join_table=PersonsTable(fields={'id': StringDatabaseField(name='id', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='properties', array=None, nullable=None), 'is_identified': BooleanDatabaseField(name='is_identified', array=None, nullable=None), 'pdi': LazyJoin(join_function=<function persons_pdi_join at 0x10849d3f0>, join_table=PersonsPDITable(fields={'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'distinct_id': StringDatabaseField(name='distinct_id', array=None, nullable=None), 'person_id': StringDatabaseField(name='person_id', array=None, nullable=None)}), from_field='id')}), from_field='person_id')}), from_field='distinct_id'), 'override': LazyJoin(join_function=<function join_with_person_overrides_table at 0x1088f41f0>, join_table=PersonOverridesTable(fields={'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'old_person_id': StringDatabaseField(name='old_person_id', array=None, nullable=None), 'override_person_id': StringDatabaseField(name='override_person_id', array=None, nullable=None), 'oldest_event': DateTimeDatabaseField(name='oldest_event', array=None, nullable=None), 'merged_at': DateTimeDatabaseField(name='merged_at', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None)}), from_field='person_id'), 'override_person_id': FieldTraverser(chain=['override', 'override_person_id']), 'poe': EventsPersonSubTable(fields={'id': StringDatabaseField(name='person_id', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='person_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='person_properties', array=None, nullable=None)}), 'goe_0': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_0', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group0_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group0_properties', array=None, nullable=None)}), 'goe_1': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_1', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group1_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group1_properties', array=None, nullable=None)}), 'goe_2': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_2', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group2_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group2_properties', array=None, nullable=None)}), 'goe_3': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_3', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group3_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group3_properties', array=None, nullable=None)}), 'goe_4': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_4', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group4_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group4_properties', array=None, nullable=None)}), 'person': FieldTraverser(chain=['pdi', 'person']), 'person_id': FieldTraverser(chain=['pdi', 'person_id']), '$group_0': StringDatabaseField(name='$group_0', array=None, nullable=None), 'group_0': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f5120>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_0'), '$group_1': StringDatabaseField(name='$group_1', array=None, nullable=None), 'group_1': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f45e0>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_1'), '$group_2': StringDatabaseField(name='$group_2', array=None, nullable=None), 'group_2': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f48b0>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_2'), '$group_3': StringDatabaseField(name='$group_3', array=None, nullable=None), 'group_3': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f4820>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_3'), '$group_4': StringDatabaseField(name='$group_4', array=None, nullable=None), 'group_4': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f5ab0>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_4'), 'session': LazyJoin(join_function=<function join_with_events_table_session_duration at 0x10849e950>, join_table=EventsSessionSubTable(fields={'id': StringDatabaseField(name='$session_id', array=None, nullable=None), 'duration': IntegerDatabaseField(name='session_duration', array=None, nullable=None)}), from_field='$session_id')}
            }
          }
        }
        hidden: True
        type: {
          alias: "uuid"
          type: <recursion ...>
        }
      },
      {
        alias: "event"
        expr: {
          chain: [
            "event"
          ]
          type: {
            name: "event"
            table_type: <recursion ...>
          }
        }
        hidden: True
        type: {
          alias: "event"
          type: <recursion ...>
        }
      },
      {
        alias: "properties"
        expr: {
          chain: [
            "properties"
          ]
          type: {
            name: "properties"
            table_type: <recursion ...>
          }
        }
        hidden: True
        type: {
          alias: "properties"
          type: <recursion ...>
        }
      },
      {
        alias: "timestamp"
        expr: {
          chain: [
            "timestamp"
          ]
          type: {
            name: "timestamp"
            table_type: <recursion ...>
          }
        }
        hidden: True
        type: {
          alias: "timestamp"
          type: <recursion ...>
        }
      },
      {
        alias: "distinct_id"
        expr: {
          chain: [
            "distinct_id"
          ]
          type: {
            name: "distinct_id"
            table_type: <recursion ...>
          }
        }
        hidden: True
        type: {
          alias: "distinct_id"
          type: <recursion ...>
        }
      },
      {
        alias: "elements_chain"
        expr: {
          chain: [
            "elements_chain"
          ]
          type: {
            name: "elements_chain"
            table_type: <recursion ...>
          }
        }
        hidden: True
        type: {
          alias: "elements_chain"
          type: <recursion ...>
        }
      },
      {
        alias: "created_at"
        expr: {
          chain: [
            "created_at"
          ]
          type: {
            name: "created_at"
            table_type: <recursion ...>
          }
        }
        hidden: True
        type: {
          alias: "created_at"
          type: <recursion ...>
        }
      },
      {
        alias: "$session_id"
        expr: {
          chain: [
            "$session_id"
          ]
          type: {
            name: "$session_id"
            table_type: <recursion ...>
          }
        }
        hidden: True
        type: {
          alias: "$session_id"
          type: <recursion ...>
        }
      },
      {
        alias: "$group_0"
        expr: {
          chain: [
            "$group_0"
          ]
          type: {
            name: "$group_0"
            table_type: <recursion ...>
          }
        }
        hidden: True
        type: {
          alias: "$group_0"
          type: <recursion ...>
        }
      },
      {
        alias: "$group_1"
        expr: {
          chain: [
            "$group_1"
          ]
          type: {
            name: "$group_1"
            table_type: <recursion ...>
          }
        }
        hidden: True
        type: {
          alias: "$group_1"
          type: <recursion ...>
        }
      },
      {
        alias: "$group_2"
        expr: {
          chain: [
            "$group_2"
          ]
          type: {
            name: "$group_2"
            table_type: <recursion ...>
          }
        }
        hidden: True
        type: {
          alias: "$group_2"
          type: <recursion ...>
        }
      },
      {
        alias: "$group_3"
        expr: {
          chain: [
            "$group_3"
          ]
          type: {
            name: "$group_3"
            table_type: <recursion ...>
          }
        }
        hidden: True
        type: {
          alias: "$group_3"
          type: <recursion ...>
        }
      },
      {
        alias: "$group_4"
        expr: {
          chain: [
            "$group_4"
          ]
          type: {
            name: "$group_4"
            table_type: <recursion ...>
          }
        }
        hidden: True
        type: {
          alias: "$group_4"
          type: <recursion ...>
        }
      }
    ]
    select_from: {
      table: {
        chain: [
          "events"
        ]
        type: <recursion ...>
      }
      type: <recursion ...>
    }
    type: {
      aliases: {}
      anonymous_tables: []
      columns: {
        $group_0: <recursion ...>,
        $group_1: <recursion ...>,
        $group_2: <recursion ...>,
        $group_3: <recursion ...>,
        $group_4: <recursion ...>,
        $session_id: <recursion ...>,
        created_at: <recursion ...>,
        distinct_id: <recursion ...>,
        elements_chain: <recursion ...>,
        event: <recursion ...>,
        properties: <recursion ...>,
        timestamp: <recursion ...>,
        uuid: <recursion ...>
      }
      ctes: {}
      tables: {
        events: <recursion ...>
      }
    }
  }
  '
---
# name: TestResolver.test_asterisk_expander_table_alias
  '
  {
    select: [
      {
        alias: "uuid"
        expr: {
          chain: [
            "uuid"
          ]
          type: {
            name: "uuid"
            table_type: {
              alias: "e"
              table_type: {
                table: fields={'uuid': StringDatabaseField(name='uuid', array=None, nullable=None), 'event': StringDatabaseField(name='event', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='properties', array=None, nullable=None), 'timestamp': DateTimeDatabaseField(name='timestamp', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'distinct_id': StringDatabaseField(name='distinct_id', array=None, nullable=None), 'elements_chain': StringDatabaseField(name='elements_chain', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), '$session_id': StringDatabaseField(name='$session_id', array=None, nullable=None), 'pdi': LazyJoin(join_function=<function join_with_person_distinct_ids_table at 0x1088f4550>, join_table=PersonDistinctIdsTable(fields={'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'distinct_id': StringDatabaseField(name='distinct_id', array=None, nullable=None), 'person_id': StringDatabaseField(name='person_id', array=None, nullable=None), 'person': LazyJoin(join_function=<function join_with_persons_table at 0x10849d2d0>, join_table=PersonsTable(fields={'id': StringDatabaseField(name='id', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='properties', array=None, nullable=None), 'is_identified': BooleanDatabaseField(name='is_identified', array=None, nullable=None), 'pdi': LazyJoin(join_function=<function persons_pdi_join at 0x10849d3f0>, join_table=PersonsPDITable(fields={'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'distinct_id': StringDatabaseField(name='distinct_id', array=None, nullable=None), 'person_id': StringDatabaseField(name='person_id', array=None, nullable=None)}), from_field='id')}), from_field='person_id')}), from_field='distinct_id'), 'override': LazyJoin(join_function=<function join_with_person_overrides_table at 0x1088f41f0>, join_table=PersonOverridesTable(fields={'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'old_person_id': StringDatabaseField(name='old_person_id', array=None, nullable=None), 'override_person_id': StringDatabaseField(name='override_person_id', array=None, nullable=None), 'oldest_event': DateTimeDatabaseField(name='oldest_event', array=None, nullable=None), 'merged_at': DateTimeDatabaseField(name='merged_at', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None)}), from_field='person_id'), 'override_person_id': FieldTraverser(chain=['override', 'override_person_id']), 'poe': EventsPersonSubTable(fields={'id': StringDatabaseField(name='person_id', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='person_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='person_properties', array=None, nullable=None)}), 'goe_0': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_0', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group0_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group0_properties', array=None, nullable=None)}), 'goe_1': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_1', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group1_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group1_properties', array=None, nullable=None)}), 'goe_2': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_2', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group2_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group2_properties', array=None, nullable=None)}), 'goe_3': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_3', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group3_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group3_properties', array=None, nullable=None)}), 'goe_4': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_4', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group4_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group4_properties', array=None, nullable=None)}), 'person': FieldTraverser(chain=['pdi', 'person']), 'person_id': FieldTraverser(chain=['pdi', 'person_id']), '$group_0': StringDatabaseField(name='$group_0', array=None, nullable=None), 'group_0': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f5120>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_0'), '$group_1': StringDatabaseField(name='$group_1', array=None, nullable=None), 'group_1': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f45e0>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_1'), '$group_2': StringDatabaseField(name='$group_2', array=None, nullable=None), 'group_2': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f48b0>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_2'), '$group_3': StringDatabaseField(name='$group_3', array=None, nullable=None), 'group_3': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f4820>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_3'), '$group_4': StringDatabaseField(name='$group_4', array=None, nullable=None), 'group_4': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f5ab0>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_4'), 'session': LazyJoin(join_function=<function join_with_events_table_session_duration at 0x10849e950>, join_table=EventsSessionSubTable(fields={'id': StringDatabaseField(name='$session_id', array=None, nullable=None), 'duration': IntegerDatabaseField(name='session_duration', array=None, nullable=None)}), from_field='$session_id')}
              }
            }
          }
        }
        hidden: True
        type: {
          alias: "uuid"
          type: <recursion ...>
        }
      },
      {
        alias: "event"
        expr: {
          chain: [
            "event"
          ]
          type: {
            name: "event"
            table_type: <recursion ...>
          }
        }
        hidden: True
        type: {
          alias: "event"
          type: <recursion ...>
        }
      },
      {
        alias: "properties"
        expr: {
          chain: [
            "properties"
          ]
          type: {
            name: "properties"
            table_type: <recursion ...>
          }
        }
        hidden: True
        type: {
          alias: "properties"
          type: <recursion ...>
        }
      },
      {
        alias: "timestamp"
        expr: {
          chain: [
            "timestamp"
          ]
          type: {
            name: "timestamp"
            table_type: <recursion ...>
          }
        }
        hidden: True
        type: {
          alias: "timestamp"
          type: <recursion ...>
        }
      },
      {
        alias: "distinct_id"
        expr: {
          chain: [
            "distinct_id"
          ]
          type: {
            name: "distinct_id"
            table_type: <recursion ...>
          }
        }
        hidden: True
        type: {
          alias: "distinct_id"
          type: <recursion ...>
        }
      },
      {
        alias: "elements_chain"
        expr: {
          chain: [
            "elements_chain"
          ]
          type: {
            name: "elements_chain"
            table_type: <recursion ...>
          }
        }
        hidden: True
        type: {
          alias: "elements_chain"
          type: <recursion ...>
        }
      },
      {
        alias: "created_at"
        expr: {
          chain: [
            "created_at"
          ]
          type: {
            name: "created_at"
            table_type: <recursion ...>
          }
        }
        hidden: True
        type: {
          alias: "created_at"
          type: <recursion ...>
        }
      },
      {
        alias: "$session_id"
        expr: {
          chain: [
            "$session_id"
          ]
          type: {
            name: "$session_id"
            table_type: <recursion ...>
          }
        }
        hidden: True
        type: {
          alias: "$session_id"
          type: <recursion ...>
        }
      },
      {
        alias: "$group_0"
        expr: {
          chain: [
            "$group_0"
          ]
          type: {
            name: "$group_0"
            table_type: <recursion ...>
          }
        }
        hidden: True
        type: {
          alias: "$group_0"
          type: <recursion ...>
        }
      },
      {
        alias: "$group_1"
        expr: {
          chain: [
            "$group_1"
          ]
          type: {
            name: "$group_1"
            table_type: <recursion ...>
          }
        }
        hidden: True
        type: {
          alias: "$group_1"
          type: <recursion ...>
        }
      },
      {
        alias: "$group_2"
        expr: {
          chain: [
            "$group_2"
          ]
          type: {
            name: "$group_2"
            table_type: <recursion ...>
          }
        }
        hidden: True
        type: {
          alias: "$group_2"
          type: <recursion ...>
        }
      },
      {
        alias: "$group_3"
        expr: {
          chain: [
            "$group_3"
          ]
          type: {
            name: "$group_3"
            table_type: <recursion ...>
          }
        }
        hidden: True
        type: {
          alias: "$group_3"
          type: <recursion ...>
        }
      },
      {
        alias: "$group_4"
        expr: {
          chain: [
            "$group_4"
          ]
          type: {
            name: "$group_4"
            table_type: <recursion ...>
          }
        }
        hidden: True
        type: {
          alias: "$group_4"
          type: <recursion ...>
        }
      }
    ]
    select_from: {
      alias: "e"
      table: {
        chain: [
          "events"
        ]
        type: <recursion ...>
      }
      type: <recursion ...>
    }
    type: {
      aliases: {}
      anonymous_tables: []
      columns: {
        $group_0: <recursion ...>,
        $group_1: <recursion ...>,
        $group_2: <recursion ...>,
        $group_3: <recursion ...>,
        $group_4: <recursion ...>,
        $session_id: <recursion ...>,
        created_at: <recursion ...>,
        distinct_id: <recursion ...>,
        elements_chain: <recursion ...>,
        event: <recursion ...>,
        properties: <recursion ...>,
        timestamp: <recursion ...>,
        uuid: <recursion ...>
      }
      ctes: {}
      tables: {
        e: <recursion ...>
      }
    }
  }
  '
---
# name: TestResolver.test_call_type
  '
  {
    select: [
      {
        args: [
          {
            alias: "timestamp"
            expr: {
              chain: [
                "timestamp"
              ]
              type: {
                name: "timestamp"
                table_type: {
                  table: fields={'uuid': StringDatabaseField(name='uuid', array=None, nullable=None), 'event': StringDatabaseField(name='event', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='properties', array=None, nullable=None), 'timestamp': DateTimeDatabaseField(name='timestamp', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'distinct_id': StringDatabaseField(name='distinct_id', array=None, nullable=None), 'elements_chain': StringDatabaseField(name='elements_chain', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), '$session_id': StringDatabaseField(name='$session_id', array=None, nullable=None), 'pdi': LazyJoin(join_function=<function join_with_person_distinct_ids_table at 0x1088f4550>, join_table=PersonDistinctIdsTable(fields={'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'distinct_id': StringDatabaseField(name='distinct_id', array=None, nullable=None), 'person_id': StringDatabaseField(name='person_id', array=None, nullable=None), 'person': LazyJoin(join_function=<function join_with_persons_table at 0x10849d2d0>, join_table=PersonsTable(fields={'id': StringDatabaseField(name='id', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='properties', array=None, nullable=None), 'is_identified': BooleanDatabaseField(name='is_identified', array=None, nullable=None), 'pdi': LazyJoin(join_function=<function persons_pdi_join at 0x10849d3f0>, join_table=PersonsPDITable(fields={'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'distinct_id': StringDatabaseField(name='distinct_id', array=None, nullable=None), 'person_id': StringDatabaseField(name='person_id', array=None, nullable=None)}), from_field='id')}), from_field='person_id')}), from_field='distinct_id'), 'override': LazyJoin(join_function=<function join_with_person_overrides_table at 0x1088f41f0>, join_table=PersonOverridesTable(fields={'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'old_person_id': StringDatabaseField(name='old_person_id', array=None, nullable=None), 'override_person_id': StringDatabaseField(name='override_person_id', array=None, nullable=None), 'oldest_event': DateTimeDatabaseField(name='oldest_event', array=None, nullable=None), 'merged_at': DateTimeDatabaseField(name='merged_at', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None)}), from_field='person_id'), 'override_person_id': FieldTraverser(chain=['override', 'override_person_id']), 'poe': EventsPersonSubTable(fields={'id': StringDatabaseField(name='person_id', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='person_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='person_properties', array=None, nullable=None)}), 'goe_0': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_0', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group0_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group0_properties', array=None, nullable=None)}), 'goe_1': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_1', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group1_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group1_properties', array=None, nullable=None)}), 'goe_2': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_2', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group2_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group2_properties', array=None, nullable=None)}), 'goe_3': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_3', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group3_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group3_properties', array=None, nullable=None)}), 'goe_4': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_4', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group4_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group4_properties', array=None, nullable=None)}), 'person': FieldTraverser(chain=['pdi', 'person']), 'person_id': FieldTraverser(chain=['pdi', 'person_id']), '$group_0': StringDatabaseField(name='$group_0', array=None, nullable=None), 'group_0': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f5120>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_0'), '$group_1': StringDatabaseField(name='$group_1', array=None, nullable=None), 'group_1': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f45e0>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_1'), '$group_2': StringDatabaseField(name='$group_2', array=None, nullable=None), 'group_2': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f48b0>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_2'), '$group_3': StringDatabaseField(name='$group_3', array=None, nullable=None), 'group_3': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f4820>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_3'), '$group_4': StringDatabaseField(name='$group_4', array=None, nullable=None), 'group_4': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f5ab0>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_4'), 'session': LazyJoin(join_function=<function join_with_events_table_session_duration at 0x10849e950>, join_table=EventsSessionSubTable(fields={'id': StringDatabaseField(name='$session_id', array=None, nullable=None), 'duration': IntegerDatabaseField(name='session_duration', array=None, nullable=None)}), from_field='$session_id')}
                }
              }
            }
            hidden: True
            type: {
              alias: "timestamp"
              type: <recursion ...>
            }
          }
        ]
        distinct: False
        name: "max"
        type: {
          arg_types: [
            {
              data_type: "datetime"
            }
          ]
          name: "max"
          return_type: {
            data_type: "unknown"
          }
        }
      }
    ]
    select_from: {
      table: {
        chain: [
          "events"
        ]
        type: <recursion ...>
      }
      type: <recursion ...>
    }
    type: {
      aliases: {}
      anonymous_tables: []
      columns: {}
      ctes: {}
      tables: {
        events: <recursion ...>
      }
    }
  }
  '
---
# name: TestResolver.test_resolve_boolean_operation_types
  '
  {
    select: [
      {
        exprs: [
          {
            type: {
              data_type: "int"
            }
            value: 1
          },
          {
            type: {
              data_type: "int"
            }
            value: 1
          }
        ]
        type: {
          data_type: "bool"
        }
      },
      {
        exprs: [
          {
            type: {
              data_type: "int"
            }
            value: 1
          },
          {
            type: {
              data_type: "int"
            }
            value: 1
          }
        ]
        type: {
          data_type: "bool"
        }
      },
      {
        expr: {
          type: {
            data_type: "bool"
          }
          value: True
        }
        type: {
          data_type: "bool"
        }
      }
    ]
    type: {
      aliases: {}
      anonymous_tables: []
      columns: {}
      ctes: {}
      tables: {}
    }
  }
  '
---
# name: TestResolver.test_resolve_constant_type
  '
  {
    select: [
      {
        type: {
          data_type: "int"
        }
        value: 1
      },
      {
        type: {
          data_type: "str"
        }
        value: "boo"
      },
      {
        type: {
          data_type: "bool"
        }
        value: True
      },
      {
        type: {
          data_type: "float"
        }
        value: 1.1232
      },
      {
        type: {
          data_type: "unknown"
        }
      },
      {
        type: {
          data_type: "date"
        }
        value: 2020-01-10
      },
      {
        type: {
          data_type: "datetime"
        }
        value: 2020-01-10 00:00:00+00:00
      },
      {
        type: {
          data_type: "uuid"
        }
        value: 00000000-0000-4000-8000-000000000000
      },
      {
        type: {
          data_type: "array"
          item_type: {
            data_type: "unknown"
          }
        }
        value: []
      },
      {
        type: {
          data_type: "array"
          item_type: {
            data_type: "int"
          }
        }
        value: [
          1,
          2
        ]
      },
      {
        type: {
          data_type: "tuple"
          item_types: [
            {
              data_type: "int"
            },
            {
              data_type: "int"
            },
            {
              data_type: "int"
            }
          ]
        }
        value: (1, 2, 3)
      }
    ]
    type: {
      aliases: {}
      anonymous_tables: []
      columns: {}
      ctes: {}
      tables: {}
    }
  }
  '
---
# name: TestResolver.test_resolve_events_table
  '
  {
    select: [
      {
        alias: "event"
        expr: {
          chain: [
            "event"
          ]
          type: {
            name: "event"
            table_type: {
              table: fields={'uuid': StringDatabaseField(name='uuid', array=None, nullable=None), 'event': StringDatabaseField(name='event', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='properties', array=None, nullable=None), 'timestamp': DateTimeDatabaseField(name='timestamp', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'distinct_id': StringDatabaseField(name='distinct_id', array=None, nullable=None), 'elements_chain': StringDatabaseField(name='elements_chain', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), '$session_id': StringDatabaseField(name='$session_id', array=None, nullable=None), 'pdi': LazyJoin(join_function=<function join_with_person_distinct_ids_table at 0x1088f4550>, join_table=PersonDistinctIdsTable(fields={'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'distinct_id': StringDatabaseField(name='distinct_id', array=None, nullable=None), 'person_id': StringDatabaseField(name='person_id', array=None, nullable=None), 'person': LazyJoin(join_function=<function join_with_persons_table at 0x10849d2d0>, join_table=PersonsTable(fields={'id': StringDatabaseField(name='id', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='properties', array=None, nullable=None), 'is_identified': BooleanDatabaseField(name='is_identified', array=None, nullable=None), 'pdi': LazyJoin(join_function=<function persons_pdi_join at 0x10849d3f0>, join_table=PersonsPDITable(fields={'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'distinct_id': StringDatabaseField(name='distinct_id', array=None, nullable=None), 'person_id': StringDatabaseField(name='person_id', array=None, nullable=None)}), from_field='id')}), from_field='person_id')}), from_field='distinct_id'), 'override': LazyJoin(join_function=<function join_with_person_overrides_table at 0x1088f41f0>, join_table=PersonOverridesTable(fields={'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'old_person_id': StringDatabaseField(name='old_person_id', array=None, nullable=None), 'override_person_id': StringDatabaseField(name='override_person_id', array=None, nullable=None), 'oldest_event': DateTimeDatabaseField(name='oldest_event', array=None, nullable=None), 'merged_at': DateTimeDatabaseField(name='merged_at', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None)}), from_field='person_id'), 'override_person_id': FieldTraverser(chain=['override', 'override_person_id']), 'poe': EventsPersonSubTable(fields={'id': StringDatabaseField(name='person_id', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='person_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='person_properties', array=None, nullable=None)}), 'goe_0': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_0', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group0_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group0_properties', array=None, nullable=None)}), 'goe_1': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_1', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group1_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group1_properties', array=None, nullable=None)}), 'goe_2': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_2', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group2_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group2_properties', array=None, nullable=None)}), 'goe_3': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_3', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group3_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group3_properties', array=None, nullable=None)}), 'goe_4': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_4', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group4_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group4_properties', array=None, nullable=None)}), 'person': FieldTraverser(chain=['pdi', 'person']), 'person_id': FieldTraverser(chain=['pdi', 'person_id']), '$group_0': StringDatabaseField(name='$group_0', array=None, nullable=None), 'group_0': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f5120>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_0'), '$group_1': StringDatabaseField(name='$group_1', array=None, nullable=None), 'group_1': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f45e0>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_1'), '$group_2': StringDatabaseField(name='$group_2', array=None, nullable=None), 'group_2': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f48b0>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_2'), '$group_3': StringDatabaseField(name='$group_3', array=None, nullable=None), 'group_3': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f4820>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_3'), '$group_4': StringDatabaseField(name='$group_4', array=None, nullable=None), 'group_4': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f5ab0>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_4'), 'session': LazyJoin(join_function=<function join_with_events_table_session_duration at 0x10849e950>, join_table=EventsSessionSubTable(fields={'id': StringDatabaseField(name='$session_id', array=None, nullable=None), 'duration': IntegerDatabaseField(name='session_duration', array=None, nullable=None)}), from_field='$session_id')}
            }
          }
        }
        hidden: True
        type: {
          alias: "event"
          type: <recursion ...>
        }
      },
      {
        alias: "timestamp"
        expr: {
          chain: [
            "events",
            "timestamp"
          ]
          type: {
            name: "timestamp"
            table_type: <recursion ...>
          }
        }
        hidden: True
        type: {
          alias: "timestamp"
          type: <recursion ...>
        }
      }
    ]
    select_from: {
      table: {
        chain: [
          "events"
        ]
        type: <recursion ...>
      }
      type: <recursion ...>
    }
    type: {
      aliases: {}
      anonymous_tables: []
      columns: {
        event: <recursion ...>,
        timestamp: <recursion ...>
      }
      ctes: {}
      tables: {
        events: <recursion ...>
      }
    }
    where: {
      left: {
        alias: "event"
        expr: {
          chain: [
            "events",
            "event"
          ]
          type: {
            name: "event"
            table_type: <recursion ...>
          }
        }
        hidden: True
        type: {
          alias: "event"
          type: <recursion ...>
        }
      }
      op: "=="
      right: {
        type: {
          data_type: "str"
        }
        value: "test"
      }
      type: {
        data_type: "bool"
      }
    }
  }
  '
---
# name: TestResolver.test_resolve_events_table_alias
  '
  {
    select: [
      {
        alias: "event"
        expr: {
          chain: [
            "event"
          ]
          type: {
            name: "event"
            table_type: {
              alias: "e"
              table_type: {
                table: fields={'uuid': StringDatabaseField(name='uuid', array=None, nullable=None), 'event': StringDatabaseField(name='event', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='properties', array=None, nullable=None), 'timestamp': DateTimeDatabaseField(name='timestamp', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'distinct_id': StringDatabaseField(name='distinct_id', array=None, nullable=None), 'elements_chain': StringDatabaseField(name='elements_chain', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), '$session_id': StringDatabaseField(name='$session_id', array=None, nullable=None), 'pdi': LazyJoin(join_function=<function join_with_person_distinct_ids_table at 0x1088f4550>, join_table=PersonDistinctIdsTable(fields={'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'distinct_id': StringDatabaseField(name='distinct_id', array=None, nullable=None), 'person_id': StringDatabaseField(name='person_id', array=None, nullable=None), 'person': LazyJoin(join_function=<function join_with_persons_table at 0x10849d2d0>, join_table=PersonsTable(fields={'id': StringDatabaseField(name='id', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='properties', array=None, nullable=None), 'is_identified': BooleanDatabaseField(name='is_identified', array=None, nullable=None), 'pdi': LazyJoin(join_function=<function persons_pdi_join at 0x10849d3f0>, join_table=PersonsPDITable(fields={'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'distinct_id': StringDatabaseField(name='distinct_id', array=None, nullable=None), 'person_id': StringDatabaseField(name='person_id', array=None, nullable=None)}), from_field='id')}), from_field='person_id')}), from_field='distinct_id'), 'override': LazyJoin(join_function=<function join_with_person_overrides_table at 0x1088f41f0>, join_table=PersonOverridesTable(fields={'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'old_person_id': StringDatabaseField(name='old_person_id', array=None, nullable=None), 'override_person_id': StringDatabaseField(name='override_person_id', array=None, nullable=None), 'oldest_event': DateTimeDatabaseField(name='oldest_event', array=None, nullable=None), 'merged_at': DateTimeDatabaseField(name='merged_at', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None)}), from_field='person_id'), 'override_person_id': FieldTraverser(chain=['override', 'override_person_id']), 'poe': EventsPersonSubTable(fields={'id': StringDatabaseField(name='person_id', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='person_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='person_properties', array=None, nullable=None)}), 'goe_0': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_0', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group0_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group0_properties', array=None, nullable=None)}), 'goe_1': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_1', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group1_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group1_properties', array=None, nullable=None)}), 'goe_2': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_2', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group2_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group2_properties', array=None, nullable=None)}), 'goe_3': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_3', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group3_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group3_properties', array=None, nullable=None)}), 'goe_4': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_4', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group4_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group4_properties', array=None, nullable=None)}), 'person': FieldTraverser(chain=['pdi', 'person']), 'person_id': FieldTraverser(chain=['pdi', 'person_id']), '$group_0': StringDatabaseField(name='$group_0', array=None, nullable=None), 'group_0': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f5120>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_0'), '$group_1': StringDatabaseField(name='$group_1', array=None, nullable=None), 'group_1': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f45e0>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_1'), '$group_2': StringDatabaseField(name='$group_2', array=None, nullable=None), 'group_2': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f48b0>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_2'), '$group_3': StringDatabaseField(name='$group_3', array=None, nullable=None), 'group_3': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f4820>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_3'), '$group_4': StringDatabaseField(name='$group_4', array=None, nullable=None), 'group_4': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f5ab0>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_4'), 'session': LazyJoin(join_function=<function join_with_events_table_session_duration at 0x10849e950>, join_table=EventsSessionSubTable(fields={'id': StringDatabaseField(name='$session_id', array=None, nullable=None), 'duration': IntegerDatabaseField(name='session_duration', array=None, nullable=None)}), from_field='$session_id')}
              }
            }
          }
        }
        hidden: True
        type: {
          alias: "event"
          type: <recursion ...>
        }
      },
      {
        alias: "timestamp"
        expr: {
          chain: [
            "e",
            "timestamp"
          ]
          type: {
            name: "timestamp"
            table_type: <recursion ...>
          }
        }
        hidden: True
        type: {
          alias: "timestamp"
          type: <recursion ...>
        }
      }
    ]
    select_from: {
      alias: "e"
      table: {
        chain: [
          "events"
        ]
        type: <recursion ...>
      }
      type: <recursion ...>
    }
    type: {
      aliases: {}
      anonymous_tables: []
      columns: {
        event: <recursion ...>,
        timestamp: <recursion ...>
      }
      ctes: {}
      tables: {
        e: <recursion ...>
      }
    }
    where: {
      left: {
        alias: "event"
        expr: {
          chain: [
            "e",
            "event"
          ]
          type: {
            name: "event"
            table_type: <recursion ...>
          }
        }
        hidden: True
        type: {
          alias: "event"
          type: <recursion ...>
        }
      }
      op: "=="
      right: {
        type: {
          data_type: "str"
        }
        value: "test"
      }
      type: {
        data_type: "bool"
      }
    }
  }
  '
---
# name: TestResolver.test_resolve_events_table_column_alias
  '
  {
    select: [
      {
        alias: "ee"
        expr: {
          alias: "event"
          expr: {
            chain: [
              "event"
            ]
            type: {
              name: "event"
              table_type: {
                alias: "e"
                table_type: {
                  table: fields={'uuid': StringDatabaseField(name='uuid', array=None, nullable=None), 'event': StringDatabaseField(name='event', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='properties', array=None, nullable=None), 'timestamp': DateTimeDatabaseField(name='timestamp', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'distinct_id': StringDatabaseField(name='distinct_id', array=None, nullable=None), 'elements_chain': StringDatabaseField(name='elements_chain', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), '$session_id': StringDatabaseField(name='$session_id', array=None, nullable=None), 'pdi': LazyJoin(join_function=<function join_with_person_distinct_ids_table at 0x1088f4550>, join_table=PersonDistinctIdsTable(fields={'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'distinct_id': StringDatabaseField(name='distinct_id', array=None, nullable=None), 'person_id': StringDatabaseField(name='person_id', array=None, nullable=None), 'person': LazyJoin(join_function=<function join_with_persons_table at 0x10849d2d0>, join_table=PersonsTable(fields={'id': StringDatabaseField(name='id', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='properties', array=None, nullable=None), 'is_identified': BooleanDatabaseField(name='is_identified', array=None, nullable=None), 'pdi': LazyJoin(join_function=<function persons_pdi_join at 0x10849d3f0>, join_table=PersonsPDITable(fields={'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'distinct_id': StringDatabaseField(name='distinct_id', array=None, nullable=None), 'person_id': StringDatabaseField(name='person_id', array=None, nullable=None)}), from_field='id')}), from_field='person_id')}), from_field='distinct_id'), 'override': LazyJoin(join_function=<function join_with_person_overrides_table at 0x1088f41f0>, join_table=PersonOverridesTable(fields={'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'old_person_id': StringDatabaseField(name='old_person_id', array=None, nullable=None), 'override_person_id': StringDatabaseField(name='override_person_id', array=None, nullable=None), 'oldest_event': DateTimeDatabaseField(name='oldest_event', array=None, nullable=None), 'merged_at': DateTimeDatabaseField(name='merged_at', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None)}), from_field='person_id'), 'override_person_id': FieldTraverser(chain=['override', 'override_person_id']), 'poe': EventsPersonSubTable(fields={'id': StringDatabaseField(name='person_id', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='person_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='person_properties', array=None, nullable=None)}), 'goe_0': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_0', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group0_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group0_properties', array=None, nullable=None)}), 'goe_1': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_1', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group1_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group1_properties', array=None, nullable=None)}), 'goe_2': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_2', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group2_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group2_properties', array=None, nullable=None)}), 'goe_3': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_3', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group3_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group3_properties', array=None, nullable=None)}), 'goe_4': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_4', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group4_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group4_properties', array=None, nullable=None)}), 'person': FieldTraverser(chain=['pdi', 'person']), 'person_id': FieldTraverser(chain=['pdi', 'person_id']), '$group_0': StringDatabaseField(name='$group_0', array=None, nullable=None), 'group_0': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f5120>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_0'), '$group_1': StringDatabaseField(name='$group_1', array=None, nullable=None), 'group_1': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f45e0>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_1'), '$group_2': StringDatabaseField(name='$group_2', array=None, nullable=None), 'group_2': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f48b0>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_2'), '$group_3': StringDatabaseField(name='$group_3', array=None, nullable=None), 'group_3': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f4820>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_3'), '$group_4': StringDatabaseField(name='$group_4', array=None, nullable=None), 'group_4': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f5ab0>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_4'), 'session': LazyJoin(join_function=<function join_with_events_table_session_duration at 0x10849e950>, join_table=EventsSessionSubTable(fields={'id': StringDatabaseField(name='$session_id', array=None, nullable=None), 'duration': IntegerDatabaseField(name='session_duration', array=None, nullable=None)}), from_field='$session_id')}
                }
              }
            }
          }
          hidden: True
          type: {
            alias: "event"
            type: <recursion ...>
          }
        }
        hidden: False
        type: {
          alias: "ee"
          type: <recursion ...>
        }
      },
      {
        chain: [
          "ee"
        ]
        type: <recursion ...>
      },
      {
        alias: "e"
        expr: {
          chain: [
            "ee"
          ]
          type: <recursion ...>
        }
        hidden: False
        type: {
          alias: "e"
          type: <recursion ...>
        }
      },
      {
        alias: "timestamp"
        expr: {
          chain: [
            "e",
            "timestamp"
          ]
          type: {
            name: "timestamp"
            table_type: <recursion ...>
          }
        }
        hidden: True
        type: {
          alias: "timestamp"
          type: <recursion ...>
        }
      }
    ]
    select_from: {
      alias: "e"
      table: {
        chain: [
          "events"
        ]
        type: <recursion ...>
      }
      type: <recursion ...>
    }
    type: {
      aliases: {
        e: <recursion ...>,
        ee: <recursion ...>
      }
      anonymous_tables: []
      columns: {
        e: <recursion ...>,
        ee: <recursion ...>,
        timestamp: <recursion ...>
      }
      ctes: {}
      tables: {
        e: <recursion ...>
      }
    }
    where: {
      left: {
        alias: "event"
        expr: {
          chain: [
            "e",
            "event"
          ]
          type: {
            name: "event"
            table_type: <recursion ...>
          }
        }
        hidden: True
        type: {
          alias: "event"
          type: <recursion ...>
        }
      }
      op: "=="
      right: {
        type: {
          data_type: "str"
        }
        value: "test"
      }
      type: {
        data_type: "bool"
      }
    }
  }
  '
---
# name: TestResolver.test_resolve_events_table_column_alias_inside_subquery
  '
  {
    select: [
      {
        alias: "b"
        expr: {
          chain: [
            "b"
          ]
          type: {
            name: "b"
            table_type: {
              alias: "e"
              select_query_type: {
                aliases: {
                  b: {
                    alias: "b"
                    type: {
                      alias: "event"
                      type: {
                        name: "event"
                        table_type: {
                          table: fields={'uuid': StringDatabaseField(name='uuid', array=None, nullable=None), 'event': StringDatabaseField(name='event', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='properties', array=None, nullable=None), 'timestamp': DateTimeDatabaseField(name='timestamp', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'distinct_id': StringDatabaseField(name='distinct_id', array=None, nullable=None), 'elements_chain': StringDatabaseField(name='elements_chain', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), '$session_id': StringDatabaseField(name='$session_id', array=None, nullable=None), 'pdi': LazyJoin(join_function=<function join_with_person_distinct_ids_table at 0x1088f4550>, join_table=PersonDistinctIdsTable(fields={'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'distinct_id': StringDatabaseField(name='distinct_id', array=None, nullable=None), 'person_id': StringDatabaseField(name='person_id', array=None, nullable=None), 'person': LazyJoin(join_function=<function join_with_persons_table at 0x10849d2d0>, join_table=PersonsTable(fields={'id': StringDatabaseField(name='id', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='properties', array=None, nullable=None), 'is_identified': BooleanDatabaseField(name='is_identified', array=None, nullable=None), 'pdi': LazyJoin(join_function=<function persons_pdi_join at 0x10849d3f0>, join_table=PersonsPDITable(fields={'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'distinct_id': StringDatabaseField(name='distinct_id', array=None, nullable=None), 'person_id': StringDatabaseField(name='person_id', array=None, nullable=None)}), from_field='id')}), from_field='person_id')}), from_field='distinct_id'), 'override': LazyJoin(join_function=<function join_with_person_overrides_table at 0x1088f41f0>, join_table=PersonOverridesTable(fields={'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'old_person_id': StringDatabaseField(name='old_person_id', array=None, nullable=None), 'override_person_id': StringDatabaseField(name='override_person_id', array=None, nullable=None), 'oldest_event': DateTimeDatabaseField(name='oldest_event', array=None, nullable=None), 'merged_at': DateTimeDatabaseField(name='merged_at', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None)}), from_field='person_id'), 'override_person_id': FieldTraverser(chain=['override', 'override_person_id']), 'poe': EventsPersonSubTable(fields={'id': StringDatabaseField(name='person_id', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='person_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='person_properties', array=None, nullable=None)}), 'goe_0': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_0', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group0_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group0_properties', array=None, nullable=None)}), 'goe_1': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_1', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group1_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group1_properties', array=None, nullable=None)}), 'goe_2': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_2', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group2_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group2_properties', array=None, nullable=None)}), 'goe_3': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_3', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group3_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group3_properties', array=None, nullable=None)}), 'goe_4': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_4', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group4_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group4_properties', array=None, nullable=None)}), 'person': FieldTraverser(chain=['pdi', 'person']), 'person_id': FieldTraverser(chain=['pdi', 'person_id']), '$group_0': StringDatabaseField(name='$group_0', array=None, nullable=None), 'group_0': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f5120>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_0'), '$group_1': StringDatabaseField(name='$group_1', array=None, nullable=None), 'group_1': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f45e0>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_1'), '$group_2': StringDatabaseField(name='$group_2', array=None, nullable=None), 'group_2': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f48b0>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_2'), '$group_3': StringDatabaseField(name='$group_3', array=None, nullable=None), 'group_3': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f4820>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_3'), '$group_4': StringDatabaseField(name='$group_4', array=None, nullable=None), 'group_4': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f5ab0>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_4'), 'session': LazyJoin(join_function=<function join_with_events_table_session_duration at 0x10849e950>, join_table=EventsSessionSubTable(fields={'id': StringDatabaseField(name='$session_id', array=None, nullable=None), 'duration': IntegerDatabaseField(name='session_duration', array=None, nullable=None)}), from_field='$session_id')}
                        }
                      }
                    }
                  },
                  c: {
                    alias: "c"
                    type: {
                      alias: "timestamp"
                      type: {
                        name: "timestamp"
                        table_type: <recursion ...>
                      }
                    }
                  }
                }
                anonymous_tables: []
                columns: {
                  b: <recursion ...>,
                  c: <recursion ...>
                }
                ctes: {}
                tables: {
                  events: <recursion ...>
                }
              }
            }
          }
        }
        hidden: True
        type: {
          alias: "b"
          type: <recursion ...>
        }
      }
    ]
    select_from: {
      alias: "e"
      table: {
        select: [
          {
            alias: "b"
            expr: {
              alias: "event"
              expr: {
                chain: [
                  "event"
                ]
                type: <recursion ...>
              }
              hidden: True
              type: <recursion ...>
            }
            hidden: False
            type: <recursion ...>
          },
          {
            alias: "c"
            expr: {
              alias: "timestamp"
              expr: {
                chain: [
                  "timestamp"
                ]
                type: <recursion ...>
              }
              hidden: True
              type: <recursion ...>
            }
            hidden: False
            type: <recursion ...>
          }
        ]
        select_from: {
          table: {
            chain: [
              "events"
            ]
            type: <recursion ...>
          }
          type: <recursion ...>
        }
        type: <recursion ...>
      }
      type: <recursion ...>
    }
    type: {
      aliases: {}
      anonymous_tables: []
      columns: {
        b: <recursion ...>
      }
      ctes: {}
      tables: {
        e: <recursion ...>
      }
    }
    where: {
      left: {
        alias: "b"
        expr: {
          chain: [
            "e",
            "b"
          ]
          type: {
            name: "b"
            table_type: <recursion ...>
          }
        }
        hidden: True
        type: {
          alias: "b"
          type: <recursion ...>
        }
      }
      op: "=="
      right: {
        type: {
          data_type: "str"
        }
        value: "test"
      }
      type: {
        data_type: "bool"
      }
    }
  }
  '
---
# name: TestResolver.test_resolve_lazy_events_pdi_person_table
  '
  {
    select: [
      {
        alias: "event"
        expr: {
          chain: [
            "event"
          ]
          type: {
            name: "event"
            table_type: {
              table: fields={'uuid': StringDatabaseField(name='uuid', array=None, nullable=None), 'event': StringDatabaseField(name='event', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='properties', array=None, nullable=None), 'timestamp': DateTimeDatabaseField(name='timestamp', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'distinct_id': StringDatabaseField(name='distinct_id', array=None, nullable=None), 'elements_chain': StringDatabaseField(name='elements_chain', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), '$session_id': StringDatabaseField(name='$session_id', array=None, nullable=None), 'pdi': LazyJoin(join_function=<function join_with_person_distinct_ids_table at 0x1088f4550>, join_table=PersonDistinctIdsTable(fields={'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'distinct_id': StringDatabaseField(name='distinct_id', array=None, nullable=None), 'person_id': StringDatabaseField(name='person_id', array=None, nullable=None), 'person': LazyJoin(join_function=<function join_with_persons_table at 0x10849d2d0>, join_table=PersonsTable(fields={'id': StringDatabaseField(name='id', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='properties', array=None, nullable=None), 'is_identified': BooleanDatabaseField(name='is_identified', array=None, nullable=None), 'pdi': LazyJoin(join_function=<function persons_pdi_join at 0x10849d3f0>, join_table=PersonsPDITable(fields={'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'distinct_id': StringDatabaseField(name='distinct_id', array=None, nullable=None), 'person_id': StringDatabaseField(name='person_id', array=None, nullable=None)}), from_field='id')}), from_field='person_id')}), from_field='distinct_id'), 'override': LazyJoin(join_function=<function join_with_person_overrides_table at 0x1088f41f0>, join_table=PersonOverridesTable(fields={'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'old_person_id': StringDatabaseField(name='old_person_id', array=None, nullable=None), 'override_person_id': StringDatabaseField(name='override_person_id', array=None, nullable=None), 'oldest_event': DateTimeDatabaseField(name='oldest_event', array=None, nullable=None), 'merged_at': DateTimeDatabaseField(name='merged_at', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None)}), from_field='person_id'), 'override_person_id': FieldTraverser(chain=['override', 'override_person_id']), 'poe': EventsPersonSubTable(fields={'id': StringDatabaseField(name='person_id', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='person_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='person_properties', array=None, nullable=None)}), 'goe_0': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_0', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group0_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group0_properties', array=None, nullable=None)}), 'goe_1': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_1', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group1_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group1_properties', array=None, nullable=None)}), 'goe_2': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_2', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group2_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group2_properties', array=None, nullable=None)}), 'goe_3': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_3', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group3_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group3_properties', array=None, nullable=None)}), 'goe_4': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_4', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group4_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group4_properties', array=None, nullable=None)}), 'person': FieldTraverser(chain=['pdi', 'person']), 'person_id': FieldTraverser(chain=['pdi', 'person_id']), '$group_0': StringDatabaseField(name='$group_0', array=None, nullable=None), 'group_0': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f5120>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_0'), '$group_1': StringDatabaseField(name='$group_1', array=None, nullable=None), 'group_1': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f45e0>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_1'), '$group_2': StringDatabaseField(name='$group_2', array=None, nullable=None), 'group_2': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f48b0>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_2'), '$group_3': StringDatabaseField(name='$group_3', array=None, nullable=None), 'group_3': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f4820>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_3'), '$group_4': StringDatabaseField(name='$group_4', array=None, nullable=None), 'group_4': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f5ab0>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_4'), 'session': LazyJoin(join_function=<function join_with_events_table_session_duration at 0x10849e950>, join_table=EventsSessionSubTable(fields={'id': StringDatabaseField(name='$session_id', array=None, nullable=None), 'duration': IntegerDatabaseField(name='session_duration', array=None, nullable=None)}), from_field='$session_id')}
            }
          }
        }
        hidden: True
        type: {
          alias: "event"
          type: <recursion ...>
        }
      },
      {
        alias: "id"
        expr: {
          chain: [
            "pdi",
            "person",
            "id"
          ]
          type: {
            name: "id"
            table_type: {
              field: "person"
              lazy_join: join_function=<function join_with_persons_table at 0x10849d2d0> join_table=PersonsTable(fields={'id': StringDatabaseField(name='id', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='properties', array=None, nullable=None), 'is_identified': BooleanDatabaseField(name='is_identified', array=None, nullable=None), 'pdi': LazyJoin(join_function=<function persons_pdi_join at 0x10849d3f0>, join_table=PersonsPDITable(fields={'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'distinct_id': StringDatabaseField(name='distinct_id', array=None, nullable=None), 'person_id': StringDatabaseField(name='person_id', array=None, nullable=None)}), from_field='id')}) from_field='person_id'
              table_type: {
                field: "pdi"
                lazy_join: join_function=<function join_with_person_distinct_ids_table at 0x1088f4550> join_table=PersonDistinctIdsTable(fields={'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'distinct_id': StringDatabaseField(name='distinct_id', array=None, nullable=None), 'person_id': StringDatabaseField(name='person_id', array=None, nullable=None), 'person': LazyJoin(join_function=<function join_with_persons_table at 0x10849d2d0>, join_table=PersonsTable(fields={'id': StringDatabaseField(name='id', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='properties', array=None, nullable=None), 'is_identified': BooleanDatabaseField(name='is_identified', array=None, nullable=None), 'pdi': LazyJoin(join_function=<function persons_pdi_join at 0x10849d3f0>, join_table=PersonsPDITable(fields={'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'distinct_id': StringDatabaseField(name='distinct_id', array=None, nullable=None), 'person_id': StringDatabaseField(name='person_id', array=None, nullable=None)}), from_field='id')}), from_field='person_id')}) from_field='distinct_id'
                table_type: <recursion ...>
              }
            }
          }
        }
        hidden: True
        type: {
          alias: "id"
          type: <recursion ...>
        }
      }
    ]
    select_from: {
      table: {
        chain: [
          "events"
        ]
        type: <recursion ...>
      }
      type: <recursion ...>
    }
    type: {
      aliases: {}
      anonymous_tables: []
      columns: {
        event: <recursion ...>,
        id: <recursion ...>
      }
      ctes: {}
      tables: {
        events: <recursion ...>
      }
    }
  }
  '
---
# name: TestResolver.test_resolve_lazy_events_pdi_person_table_aliased
  '
  {
    select: [
      {
        alias: "event"
        expr: {
          chain: [
            "event"
          ]
          type: {
            name: "event"
            table_type: {
              alias: "e"
              table_type: {
                table: fields={'uuid': StringDatabaseField(name='uuid', array=None, nullable=None), 'event': StringDatabaseField(name='event', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='properties', array=None, nullable=None), 'timestamp': DateTimeDatabaseField(name='timestamp', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'distinct_id': StringDatabaseField(name='distinct_id', array=None, nullable=None), 'elements_chain': StringDatabaseField(name='elements_chain', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), '$session_id': StringDatabaseField(name='$session_id', array=None, nullable=None), 'pdi': LazyJoin(join_function=<function join_with_person_distinct_ids_table at 0x1088f4550>, join_table=PersonDistinctIdsTable(fields={'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'distinct_id': StringDatabaseField(name='distinct_id', array=None, nullable=None), 'person_id': StringDatabaseField(name='person_id', array=None, nullable=None), 'person': LazyJoin(join_function=<function join_with_persons_table at 0x10849d2d0>, join_table=PersonsTable(fields={'id': StringDatabaseField(name='id', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='properties', array=None, nullable=None), 'is_identified': BooleanDatabaseField(name='is_identified', array=None, nullable=None), 'pdi': LazyJoin(join_function=<function persons_pdi_join at 0x10849d3f0>, join_table=PersonsPDITable(fields={'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'distinct_id': StringDatabaseField(name='distinct_id', array=None, nullable=None), 'person_id': StringDatabaseField(name='person_id', array=None, nullable=None)}), from_field='id')}), from_field='person_id')}), from_field='distinct_id'), 'override': LazyJoin(join_function=<function join_with_person_overrides_table at 0x1088f41f0>, join_table=PersonOverridesTable(fields={'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'old_person_id': StringDatabaseField(name='old_person_id', array=None, nullable=None), 'override_person_id': StringDatabaseField(name='override_person_id', array=None, nullable=None), 'oldest_event': DateTimeDatabaseField(name='oldest_event', array=None, nullable=None), 'merged_at': DateTimeDatabaseField(name='merged_at', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None)}), from_field='person_id'), 'override_person_id': FieldTraverser(chain=['override', 'override_person_id']), 'poe': EventsPersonSubTable(fields={'id': StringDatabaseField(name='person_id', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='person_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='person_properties', array=None, nullable=None)}), 'goe_0': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_0', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group0_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group0_properties', array=None, nullable=None)}), 'goe_1': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_1', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group1_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group1_properties', array=None, nullable=None)}), 'goe_2': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_2', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group2_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group2_properties', array=None, nullable=None)}), 'goe_3': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_3', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group3_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group3_properties', array=None, nullable=None)}), 'goe_4': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_4', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group4_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group4_properties', array=None, nullable=None)}), 'person': FieldTraverser(chain=['pdi', 'person']), 'person_id': FieldTraverser(chain=['pdi', 'person_id']), '$group_0': StringDatabaseField(name='$group_0', array=None, nullable=None), 'group_0': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f5120>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_0'), '$group_1': StringDatabaseField(name='$group_1', array=None, nullable=None), 'group_1': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f45e0>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_1'), '$group_2': StringDatabaseField(name='$group_2', array=None, nullable=None), 'group_2': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f48b0>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_2'), '$group_3': StringDatabaseField(name='$group_3', array=None, nullable=None), 'group_3': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f4820>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_3'), '$group_4': StringDatabaseField(name='$group_4', array=None, nullable=None), 'group_4': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f5ab0>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_4'), 'session': LazyJoin(join_function=<function join_with_events_table_session_duration at 0x10849e950>, join_table=EventsSessionSubTable(fields={'id': StringDatabaseField(name='$session_id', array=None, nullable=None), 'duration': IntegerDatabaseField(name='session_duration', array=None, nullable=None)}), from_field='$session_id')}
              }
            }
          }
        }
        hidden: True
        type: {
          alias: "event"
          type: <recursion ...>
        }
      },
      {
        alias: "id"
        expr: {
          chain: [
            "e",
            "pdi",
            "person",
            "id"
          ]
          type: {
            name: "id"
            table_type: {
              field: "person"
              lazy_join: join_function=<function join_with_persons_table at 0x10849d2d0> join_table=PersonsTable(fields={'id': StringDatabaseField(name='id', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='properties', array=None, nullable=None), 'is_identified': BooleanDatabaseField(name='is_identified', array=None, nullable=None), 'pdi': LazyJoin(join_function=<function persons_pdi_join at 0x10849d3f0>, join_table=PersonsPDITable(fields={'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'distinct_id': StringDatabaseField(name='distinct_id', array=None, nullable=None), 'person_id': StringDatabaseField(name='person_id', array=None, nullable=None)}), from_field='id')}) from_field='person_id'
              table_type: {
                field: "pdi"
                lazy_join: join_function=<function join_with_person_distinct_ids_table at 0x1088f4550> join_table=PersonDistinctIdsTable(fields={'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'distinct_id': StringDatabaseField(name='distinct_id', array=None, nullable=None), 'person_id': StringDatabaseField(name='person_id', array=None, nullable=None), 'person': LazyJoin(join_function=<function join_with_persons_table at 0x10849d2d0>, join_table=PersonsTable(fields={'id': StringDatabaseField(name='id', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='properties', array=None, nullable=None), 'is_identified': BooleanDatabaseField(name='is_identified', array=None, nullable=None), 'pdi': LazyJoin(join_function=<function persons_pdi_join at 0x10849d3f0>, join_table=PersonsPDITable(fields={'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'distinct_id': StringDatabaseField(name='distinct_id', array=None, nullable=None), 'person_id': StringDatabaseField(name='person_id', array=None, nullable=None)}), from_field='id')}), from_field='person_id')}) from_field='distinct_id'
                table_type: <recursion ...>
              }
            }
          }
        }
        hidden: True
        type: {
          alias: "id"
          type: <recursion ...>
        }
      }
    ]
    select_from: {
      alias: "e"
      table: {
        chain: [
          "events"
        ]
        type: <recursion ...>
      }
      type: <recursion ...>
    }
    type: {
      aliases: {}
      anonymous_tables: []
      columns: {
        event: <recursion ...>,
        id: <recursion ...>
      }
      ctes: {}
      tables: {
        e: <recursion ...>
      }
    }
  }
  '
---
# name: TestResolver.test_resolve_lazy_events_pdi_table
  '
  {
    select: [
      {
        alias: "event"
        expr: {
          chain: [
            "event"
          ]
          type: {
            name: "event"
            table_type: {
              table: fields={'uuid': StringDatabaseField(name='uuid', array=None, nullable=None), 'event': StringDatabaseField(name='event', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='properties', array=None, nullable=None), 'timestamp': DateTimeDatabaseField(name='timestamp', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'distinct_id': StringDatabaseField(name='distinct_id', array=None, nullable=None), 'elements_chain': StringDatabaseField(name='elements_chain', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), '$session_id': StringDatabaseField(name='$session_id', array=None, nullable=None), 'pdi': LazyJoin(join_function=<function join_with_person_distinct_ids_table at 0x1088f4550>, join_table=PersonDistinctIdsTable(fields={'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'distinct_id': StringDatabaseField(name='distinct_id', array=None, nullable=None), 'person_id': StringDatabaseField(name='person_id', array=None, nullable=None), 'person': LazyJoin(join_function=<function join_with_persons_table at 0x10849d2d0>, join_table=PersonsTable(fields={'id': StringDatabaseField(name='id', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='properties', array=None, nullable=None), 'is_identified': BooleanDatabaseField(name='is_identified', array=None, nullable=None), 'pdi': LazyJoin(join_function=<function persons_pdi_join at 0x10849d3f0>, join_table=PersonsPDITable(fields={'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'distinct_id': StringDatabaseField(name='distinct_id', array=None, nullable=None), 'person_id': StringDatabaseField(name='person_id', array=None, nullable=None)}), from_field='id')}), from_field='person_id')}), from_field='distinct_id'), 'override': LazyJoin(join_function=<function join_with_person_overrides_table at 0x1088f41f0>, join_table=PersonOverridesTable(fields={'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'old_person_id': StringDatabaseField(name='old_person_id', array=None, nullable=None), 'override_person_id': StringDatabaseField(name='override_person_id', array=None, nullable=None), 'oldest_event': DateTimeDatabaseField(name='oldest_event', array=None, nullable=None), 'merged_at': DateTimeDatabaseField(name='merged_at', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None)}), from_field='person_id'), 'override_person_id': FieldTraverser(chain=['override', 'override_person_id']), 'poe': EventsPersonSubTable(fields={'id': StringDatabaseField(name='person_id', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='person_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='person_properties', array=None, nullable=None)}), 'goe_0': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_0', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group0_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group0_properties', array=None, nullable=None)}), 'goe_1': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_1', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group1_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group1_properties', array=None, nullable=None)}), 'goe_2': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_2', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group2_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group2_properties', array=None, nullable=None)}), 'goe_3': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_3', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group3_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group3_properties', array=None, nullable=None)}), 'goe_4': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_4', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group4_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group4_properties', array=None, nullable=None)}), 'person': FieldTraverser(chain=['pdi', 'person']), 'person_id': FieldTraverser(chain=['pdi', 'person_id']), '$group_0': StringDatabaseField(name='$group_0', array=None, nullable=None), 'group_0': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f5120>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_0'), '$group_1': StringDatabaseField(name='$group_1', array=None, nullable=None), 'group_1': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f45e0>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_1'), '$group_2': StringDatabaseField(name='$group_2', array=None, nullable=None), 'group_2': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f48b0>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_2'), '$group_3': StringDatabaseField(name='$group_3', array=None, nullable=None), 'group_3': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f4820>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_3'), '$group_4': StringDatabaseField(name='$group_4', array=None, nullable=None), 'group_4': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f5ab0>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_4'), 'session': LazyJoin(join_function=<function join_with_events_table_session_duration at 0x10849e950>, join_table=EventsSessionSubTable(fields={'id': StringDatabaseField(name='$session_id', array=None, nullable=None), 'duration': IntegerDatabaseField(name='session_duration', array=None, nullable=None)}), from_field='$session_id')}
            }
          }
        }
        hidden: True
        type: {
          alias: "event"
          type: <recursion ...>
        }
      },
      {
        alias: "person_id"
        expr: {
          chain: [
            "pdi",
            "person_id"
          ]
          type: {
            name: "person_id"
            table_type: {
              field: "pdi"
              lazy_join: join_function=<function join_with_person_distinct_ids_table at 0x1088f4550> join_table=PersonDistinctIdsTable(fields={'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'distinct_id': StringDatabaseField(name='distinct_id', array=None, nullable=None), 'person_id': StringDatabaseField(name='person_id', array=None, nullable=None), 'person': LazyJoin(join_function=<function join_with_persons_table at 0x10849d2d0>, join_table=PersonsTable(fields={'id': StringDatabaseField(name='id', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='properties', array=None, nullable=None), 'is_identified': BooleanDatabaseField(name='is_identified', array=None, nullable=None), 'pdi': LazyJoin(join_function=<function persons_pdi_join at 0x10849d3f0>, join_table=PersonsPDITable(fields={'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'distinct_id': StringDatabaseField(name='distinct_id', array=None, nullable=None), 'person_id': StringDatabaseField(name='person_id', array=None, nullable=None)}), from_field='id')}), from_field='person_id')}) from_field='distinct_id'
              table_type: <recursion ...>
            }
          }
        }
        hidden: True
        type: {
          alias: "person_id"
          type: <recursion ...>
        }
      }
    ]
    select_from: {
      table: {
        chain: [
          "events"
        ]
        type: <recursion ...>
      }
      type: <recursion ...>
    }
    type: {
      aliases: {}
      anonymous_tables: []
      columns: {
        event: <recursion ...>,
        person_id: <recursion ...>
      }
      ctes: {}
      tables: {
        events: <recursion ...>
      }
    }
  }
  '
---
# name: TestResolver.test_resolve_lazy_events_pdi_table_aliased
  '
  {
    select: [
      {
        alias: "event"
        expr: {
          chain: [
            "event"
          ]
          type: {
            name: "event"
            table_type: {
              alias: "e"
              table_type: {
                table: fields={'uuid': StringDatabaseField(name='uuid', array=None, nullable=None), 'event': StringDatabaseField(name='event', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='properties', array=None, nullable=None), 'timestamp': DateTimeDatabaseField(name='timestamp', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'distinct_id': StringDatabaseField(name='distinct_id', array=None, nullable=None), 'elements_chain': StringDatabaseField(name='elements_chain', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), '$session_id': StringDatabaseField(name='$session_id', array=None, nullable=None), 'pdi': LazyJoin(join_function=<function join_with_person_distinct_ids_table at 0x1088f4550>, join_table=PersonDistinctIdsTable(fields={'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'distinct_id': StringDatabaseField(name='distinct_id', array=None, nullable=None), 'person_id': StringDatabaseField(name='person_id', array=None, nullable=None), 'person': LazyJoin(join_function=<function join_with_persons_table at 0x10849d2d0>, join_table=PersonsTable(fields={'id': StringDatabaseField(name='id', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='properties', array=None, nullable=None), 'is_identified': BooleanDatabaseField(name='is_identified', array=None, nullable=None), 'pdi': LazyJoin(join_function=<function persons_pdi_join at 0x10849d3f0>, join_table=PersonsPDITable(fields={'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'distinct_id': StringDatabaseField(name='distinct_id', array=None, nullable=None), 'person_id': StringDatabaseField(name='person_id', array=None, nullable=None)}), from_field='id')}), from_field='person_id')}), from_field='distinct_id'), 'override': LazyJoin(join_function=<function join_with_person_overrides_table at 0x1088f41f0>, join_table=PersonOverridesTable(fields={'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'old_person_id': StringDatabaseField(name='old_person_id', array=None, nullable=None), 'override_person_id': StringDatabaseField(name='override_person_id', array=None, nullable=None), 'oldest_event': DateTimeDatabaseField(name='oldest_event', array=None, nullable=None), 'merged_at': DateTimeDatabaseField(name='merged_at', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None)}), from_field='person_id'), 'override_person_id': FieldTraverser(chain=['override', 'override_person_id']), 'poe': EventsPersonSubTable(fields={'id': StringDatabaseField(name='person_id', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='person_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='person_properties', array=None, nullable=None)}), 'goe_0': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_0', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group0_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group0_properties', array=None, nullable=None)}), 'goe_1': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_1', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group1_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group1_properties', array=None, nullable=None)}), 'goe_2': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_2', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group2_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group2_properties', array=None, nullable=None)}), 'goe_3': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_3', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group3_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group3_properties', array=None, nullable=None)}), 'goe_4': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_4', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group4_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group4_properties', array=None, nullable=None)}), 'person': FieldTraverser(chain=['pdi', 'person']), 'person_id': FieldTraverser(chain=['pdi', 'person_id']), '$group_0': StringDatabaseField(name='$group_0', array=None, nullable=None), 'group_0': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f5120>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_0'), '$group_1': StringDatabaseField(name='$group_1', array=None, nullable=None), 'group_1': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f45e0>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_1'), '$group_2': StringDatabaseField(name='$group_2', array=None, nullable=None), 'group_2': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f48b0>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_2'), '$group_3': StringDatabaseField(name='$group_3', array=None, nullable=None), 'group_3': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f4820>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_3'), '$group_4': StringDatabaseField(name='$group_4', array=None, nullable=None), 'group_4': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f5ab0>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_4'), 'session': LazyJoin(join_function=<function join_with_events_table_session_duration at 0x10849e950>, join_table=EventsSessionSubTable(fields={'id': StringDatabaseField(name='$session_id', array=None, nullable=None), 'duration': IntegerDatabaseField(name='session_duration', array=None, nullable=None)}), from_field='$session_id')}
              }
            }
          }
        }
        hidden: True
        type: {
          alias: "event"
          type: <recursion ...>
        }
      },
      {
        alias: "person_id"
        expr: {
          chain: [
            "e",
            "pdi",
            "person_id"
          ]
          type: {
            name: "person_id"
            table_type: {
              field: "pdi"
              lazy_join: join_function=<function join_with_person_distinct_ids_table at 0x1088f4550> join_table=PersonDistinctIdsTable(fields={'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'distinct_id': StringDatabaseField(name='distinct_id', array=None, nullable=None), 'person_id': StringDatabaseField(name='person_id', array=None, nullable=None), 'person': LazyJoin(join_function=<function join_with_persons_table at 0x10849d2d0>, join_table=PersonsTable(fields={'id': StringDatabaseField(name='id', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='properties', array=None, nullable=None), 'is_identified': BooleanDatabaseField(name='is_identified', array=None, nullable=None), 'pdi': LazyJoin(join_function=<function persons_pdi_join at 0x10849d3f0>, join_table=PersonsPDITable(fields={'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'distinct_id': StringDatabaseField(name='distinct_id', array=None, nullable=None), 'person_id': StringDatabaseField(name='person_id', array=None, nullable=None)}), from_field='id')}), from_field='person_id')}) from_field='distinct_id'
              table_type: <recursion ...>
            }
          }
        }
        hidden: True
        type: {
          alias: "person_id"
          type: <recursion ...>
        }
      }
    ]
    select_from: {
      alias: "e"
      table: {
        chain: [
          "events"
        ]
        type: <recursion ...>
      }
      type: <recursion ...>
    }
    type: {
      aliases: {}
      anonymous_tables: []
      columns: {
        event: <recursion ...>,
        person_id: <recursion ...>
      }
      ctes: {}
      tables: {
        e: <recursion ...>
      }
    }
  }
  '
---
# name: TestResolver.test_resolve_lazy_pdi_person_table
  '
  {
    select: [
      {
        alias: "distinct_id"
        expr: {
          chain: [
            "distinct_id"
          ]
          type: {
            name: "distinct_id"
            table_type: {
              table: fields={'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'distinct_id': StringDatabaseField(name='distinct_id', array=None, nullable=None), 'person_id': StringDatabaseField(name='person_id', array=None, nullable=None), 'person': LazyJoin(join_function=<function join_with_persons_table at 0x10849d2d0>, join_table=PersonsTable(fields={'id': StringDatabaseField(name='id', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='properties', array=None, nullable=None), 'is_identified': BooleanDatabaseField(name='is_identified', array=None, nullable=None), 'pdi': LazyJoin(join_function=<function persons_pdi_join at 0x10849d3f0>, join_table=PersonsPDITable(fields={'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'distinct_id': StringDatabaseField(name='distinct_id', array=None, nullable=None), 'person_id': StringDatabaseField(name='person_id', array=None, nullable=None)}), from_field='id')}), from_field='person_id')}
            }
          }
        }
        hidden: True
        type: {
          alias: "distinct_id"
          type: <recursion ...>
        }
      },
      {
        alias: "id"
        expr: {
          chain: [
            "person",
            "id"
          ]
          type: {
            name: "id"
            table_type: {
              field: "person"
              lazy_join: join_function=<function join_with_persons_table at 0x10849d2d0> join_table=PersonsTable(fields={'id': StringDatabaseField(name='id', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='properties', array=None, nullable=None), 'is_identified': BooleanDatabaseField(name='is_identified', array=None, nullable=None), 'pdi': LazyJoin(join_function=<function persons_pdi_join at 0x10849d3f0>, join_table=PersonsPDITable(fields={'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'distinct_id': StringDatabaseField(name='distinct_id', array=None, nullable=None), 'person_id': StringDatabaseField(name='person_id', array=None, nullable=None)}), from_field='id')}) from_field='person_id'
              table_type: <recursion ...>
            }
          }
        }
        hidden: True
        type: {
          alias: "id"
          type: <recursion ...>
        }
      }
    ]
    select_from: {
      table: {
        chain: [
          "person_distinct_ids"
        ]
        type: <recursion ...>
      }
      type: <recursion ...>
    }
    type: {
      aliases: {}
      anonymous_tables: []
      columns: {
        distinct_id: <recursion ...>,
        id: <recursion ...>
      }
      ctes: {}
      tables: {
        person_distinct_ids: <recursion ...>
      }
    }
  }
  '
---
# name: TestResolver.test_resolve_union_all
  '
  {
    select_queries: [
      {
        select: [
          {
            alias: "event"
            expr: {
              chain: [
                "event"
              ]
              type: {
                name: "event"
                table_type: {
                  table: fields={'uuid': StringDatabaseField(name='uuid', array=None, nullable=None), 'event': StringDatabaseField(name='event', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='properties', array=None, nullable=None), 'timestamp': DateTimeDatabaseField(name='timestamp', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'distinct_id': StringDatabaseField(name='distinct_id', array=None, nullable=None), 'elements_chain': StringDatabaseField(name='elements_chain', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), '$session_id': StringDatabaseField(name='$session_id', array=None, nullable=None), 'pdi': LazyJoin(join_function=<function join_with_person_distinct_ids_table at 0x1088f4550>, join_table=PersonDistinctIdsTable(fields={'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'distinct_id': StringDatabaseField(name='distinct_id', array=None, nullable=None), 'person_id': StringDatabaseField(name='person_id', array=None, nullable=None), 'person': LazyJoin(join_function=<function join_with_persons_table at 0x10849d2d0>, join_table=PersonsTable(fields={'id': StringDatabaseField(name='id', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='properties', array=None, nullable=None), 'is_identified': BooleanDatabaseField(name='is_identified', array=None, nullable=None), 'pdi': LazyJoin(join_function=<function persons_pdi_join at 0x10849d3f0>, join_table=PersonsPDITable(fields={'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'distinct_id': StringDatabaseField(name='distinct_id', array=None, nullable=None), 'person_id': StringDatabaseField(name='person_id', array=None, nullable=None)}), from_field='id')}), from_field='person_id')}), from_field='distinct_id'), 'override': LazyJoin(join_function=<function join_with_person_overrides_table at 0x1088f41f0>, join_table=PersonOverridesTable(fields={'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'old_person_id': StringDatabaseField(name='old_person_id', array=None, nullable=None), 'override_person_id': StringDatabaseField(name='override_person_id', array=None, nullable=None), 'oldest_event': DateTimeDatabaseField(name='oldest_event', array=None, nullable=None), 'merged_at': DateTimeDatabaseField(name='merged_at', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None)}), from_field='person_id'), 'override_person_id': FieldTraverser(chain=['override', 'override_person_id']), 'poe': EventsPersonSubTable(fields={'id': StringDatabaseField(name='person_id', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='person_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='person_properties', array=None, nullable=None)}), 'goe_0': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_0', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group0_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group0_properties', array=None, nullable=None)}), 'goe_1': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_1', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group1_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group1_properties', array=None, nullable=None)}), 'goe_2': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_2', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group2_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group2_properties', array=None, nullable=None)}), 'goe_3': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_3', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group3_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group3_properties', array=None, nullable=None)}), 'goe_4': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_4', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group4_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group4_properties', array=None, nullable=None)}), 'person': FieldTraverser(chain=['pdi', 'person']), 'person_id': FieldTraverser(chain=['pdi', 'person_id']), '$group_0': StringDatabaseField(name='$group_0', array=None, nullable=None), 'group_0': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f5120>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_0'), '$group_1': StringDatabaseField(name='$group_1', array=None, nullable=None), 'group_1': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f45e0>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_1'), '$group_2': StringDatabaseField(name='$group_2', array=None, nullable=None), 'group_2': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f48b0>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_2'), '$group_3': StringDatabaseField(name='$group_3', array=None, nullable=None), 'group_3': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f4820>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_3'), '$group_4': StringDatabaseField(name='$group_4', array=None, nullable=None), 'group_4': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f5ab0>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_4'), 'session': LazyJoin(join_function=<function join_with_events_table_session_duration at 0x10849e950>, join_table=EventsSessionSubTable(fields={'id': StringDatabaseField(name='$session_id', array=None, nullable=None), 'duration': IntegerDatabaseField(name='session_duration', array=None, nullable=None)}), from_field='$session_id')}
                }
              }
            }
            hidden: True
            type: {
              alias: "event"
              type: <recursion ...>
            }
          },
          {
            alias: "timestamp"
            expr: {
              chain: [
                "timestamp"
              ]
              type: {
                name: "timestamp"
                table_type: <recursion ...>
              }
            }
            hidden: True
            type: {
              alias: "timestamp"
              type: <recursion ...>
            }
          }
        ]
        select_from: {
          table: {
            chain: [
              "events"
            ]
            type: <recursion ...>
          }
          type: <recursion ...>
        }
        type: {
          aliases: {}
          anonymous_tables: []
          columns: {
            event: <recursion ...>,
            timestamp: <recursion ...>
          }
          ctes: {}
          tables: {
            events: <recursion ...>
          }
        }
      },
      {
        select: [
          {
            alias: "event"
            expr: {
              chain: [
                "event"
              ]
              type: {
                name: "event"
                table_type: {
                  table: fields={'uuid': StringDatabaseField(name='uuid', array=None, nullable=None), 'event': StringDatabaseField(name='event', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='properties', array=None, nullable=None), 'timestamp': DateTimeDatabaseField(name='timestamp', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'distinct_id': StringDatabaseField(name='distinct_id', array=None, nullable=None), 'elements_chain': StringDatabaseField(name='elements_chain', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), '$session_id': StringDatabaseField(name='$session_id', array=None, nullable=None), 'pdi': LazyJoin(join_function=<function join_with_person_distinct_ids_table at 0x1088f4550>, join_table=PersonDistinctIdsTable(fields={'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'distinct_id': StringDatabaseField(name='distinct_id', array=None, nullable=None), 'person_id': StringDatabaseField(name='person_id', array=None, nullable=None), 'person': LazyJoin(join_function=<function join_with_persons_table at 0x10849d2d0>, join_table=PersonsTable(fields={'id': StringDatabaseField(name='id', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='properties', array=None, nullable=None), 'is_identified': BooleanDatabaseField(name='is_identified', array=None, nullable=None), 'pdi': LazyJoin(join_function=<function persons_pdi_join at 0x10849d3f0>, join_table=PersonsPDITable(fields={'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'distinct_id': StringDatabaseField(name='distinct_id', array=None, nullable=None), 'person_id': StringDatabaseField(name='person_id', array=None, nullable=None)}), from_field='id')}), from_field='person_id')}), from_field='distinct_id'), 'override': LazyJoin(join_function=<function join_with_person_overrides_table at 0x1088f41f0>, join_table=PersonOverridesTable(fields={'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'old_person_id': StringDatabaseField(name='old_person_id', array=None, nullable=None), 'override_person_id': StringDatabaseField(name='override_person_id', array=None, nullable=None), 'oldest_event': DateTimeDatabaseField(name='oldest_event', array=None, nullable=None), 'merged_at': DateTimeDatabaseField(name='merged_at', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None)}), from_field='person_id'), 'override_person_id': FieldTraverser(chain=['override', 'override_person_id']), 'poe': EventsPersonSubTable(fields={'id': StringDatabaseField(name='person_id', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='person_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='person_properties', array=None, nullable=None)}), 'goe_0': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_0', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group0_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group0_properties', array=None, nullable=None)}), 'goe_1': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_1', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group1_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group1_properties', array=None, nullable=None)}), 'goe_2': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_2', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group2_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group2_properties', array=None, nullable=None)}), 'goe_3': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_3', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group3_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group3_properties', array=None, nullable=None)}), 'goe_4': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_4', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group4_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group4_properties', array=None, nullable=None)}), 'person': FieldTraverser(chain=['pdi', 'person']), 'person_id': FieldTraverser(chain=['pdi', 'person_id']), '$group_0': StringDatabaseField(name='$group_0', array=None, nullable=None), 'group_0': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f5120>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_0'), '$group_1': StringDatabaseField(name='$group_1', array=None, nullable=None), 'group_1': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f45e0>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_1'), '$group_2': StringDatabaseField(name='$group_2', array=None, nullable=None), 'group_2': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f48b0>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_2'), '$group_3': StringDatabaseField(name='$group_3', array=None, nullable=None), 'group_3': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f4820>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_3'), '$group_4': StringDatabaseField(name='$group_4', array=None, nullable=None), 'group_4': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f5ab0>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_4'), 'session': LazyJoin(join_function=<function join_with_events_table_session_duration at 0x10849e950>, join_table=EventsSessionSubTable(fields={'id': StringDatabaseField(name='$session_id', array=None, nullable=None), 'duration': IntegerDatabaseField(name='session_duration', array=None, nullable=None)}), from_field='$session_id')}
                }
              }
            }
            hidden: True
            type: {
              alias: "event"
              type: <recursion ...>
            }
          },
          {
            alias: "timestamp"
            expr: {
              chain: [
                "timestamp"
              ]
              type: {
                name: "timestamp"
                table_type: <recursion ...>
              }
            }
            hidden: True
            type: {
              alias: "timestamp"
              type: <recursion ...>
            }
          }
        ]
        select_from: {
          table: {
            chain: [
              "events"
            ]
            type: <recursion ...>
          }
          type: <recursion ...>
        }
        type: {
          aliases: {}
          anonymous_tables: []
          columns: {
            event: <recursion ...>,
            timestamp: <recursion ...>
          }
          ctes: {}
          tables: {
            events: <recursion ...>
          }
        }
      }
    ]
    type: {
      types: [
        <recursion ...>,
        <recursion ...>
      ]
    }
  }
  '
---
# name: TestResolver.test_resolve_virtual_events_poe
  '
  {
    select: [
      {
        alias: "event"
        expr: {
          chain: [
            "event"
          ]
          type: {
            name: "event"
            table_type: {
              table: fields={'uuid': StringDatabaseField(name='uuid', array=None, nullable=None), 'event': StringDatabaseField(name='event', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='properties', array=None, nullable=None), 'timestamp': DateTimeDatabaseField(name='timestamp', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'distinct_id': StringDatabaseField(name='distinct_id', array=None, nullable=None), 'elements_chain': StringDatabaseField(name='elements_chain', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), '$session_id': StringDatabaseField(name='$session_id', array=None, nullable=None), 'pdi': LazyJoin(join_function=<function join_with_person_distinct_ids_table at 0x1088f4550>, join_table=PersonDistinctIdsTable(fields={'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'distinct_id': StringDatabaseField(name='distinct_id', array=None, nullable=None), 'person_id': StringDatabaseField(name='person_id', array=None, nullable=None), 'person': LazyJoin(join_function=<function join_with_persons_table at 0x10849d2d0>, join_table=PersonsTable(fields={'id': StringDatabaseField(name='id', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='properties', array=None, nullable=None), 'is_identified': BooleanDatabaseField(name='is_identified', array=None, nullable=None), 'pdi': LazyJoin(join_function=<function persons_pdi_join at 0x10849d3f0>, join_table=PersonsPDITable(fields={'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'distinct_id': StringDatabaseField(name='distinct_id', array=None, nullable=None), 'person_id': StringDatabaseField(name='person_id', array=None, nullable=None)}), from_field='id')}), from_field='person_id')}), from_field='distinct_id'), 'override': LazyJoin(join_function=<function join_with_person_overrides_table at 0x1088f41f0>, join_table=PersonOverridesTable(fields={'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'old_person_id': StringDatabaseField(name='old_person_id', array=None, nullable=None), 'override_person_id': StringDatabaseField(name='override_person_id', array=None, nullable=None), 'oldest_event': DateTimeDatabaseField(name='oldest_event', array=None, nullable=None), 'merged_at': DateTimeDatabaseField(name='merged_at', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None)}), from_field='person_id'), 'override_person_id': FieldTraverser(chain=['override', 'override_person_id']), 'poe': EventsPersonSubTable(fields={'id': StringDatabaseField(name='person_id', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='person_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='person_properties', array=None, nullable=None)}), 'goe_0': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_0', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group0_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group0_properties', array=None, nullable=None)}), 'goe_1': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_1', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group1_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group1_properties', array=None, nullable=None)}), 'goe_2': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_2', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group2_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group2_properties', array=None, nullable=None)}), 'goe_3': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_3', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group3_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group3_properties', array=None, nullable=None)}), 'goe_4': EventsGroupSubTable(fields={'key': StringDatabaseField(name='$group_4', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='group4_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group4_properties', array=None, nullable=None)}), 'person': FieldTraverser(chain=['pdi', 'person']), 'person_id': FieldTraverser(chain=['pdi', 'person_id']), '$group_0': StringDatabaseField(name='$group_0', array=None, nullable=None), 'group_0': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f5120>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_0'), '$group_1': StringDatabaseField(name='$group_1', array=None, nullable=None), 'group_1': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f45e0>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_1'), '$group_2': StringDatabaseField(name='$group_2', array=None, nullable=None), 'group_2': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f48b0>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_2'), '$group_3': StringDatabaseField(name='$group_3', array=None, nullable=None), 'group_3': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f4820>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_3'), '$group_4': StringDatabaseField(name='$group_4', array=None, nullable=None), 'group_4': LazyJoin(join_function=<function join_with_group_n_table.<locals>.join_with_group_table at 0x1088f5ab0>, join_table=GroupsTable(fields={'index': IntegerDatabaseField(name='group_type_index', array=None, nullable=None), 'team_id': IntegerDatabaseField(name='team_id', array=None, nullable=None), 'key': StringDatabaseField(name='group_key', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='created_at', array=None, nullable=None), 'updated_at': DateTimeDatabaseField(name='_timestamp', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='group_properties', array=None, nullable=None)}), from_field='$group_4'), 'session': LazyJoin(join_function=<function join_with_events_table_session_duration at 0x10849e950>, join_table=EventsSessionSubTable(fields={'id': StringDatabaseField(name='$session_id', array=None, nullable=None), 'duration': IntegerDatabaseField(name='session_duration', array=None, nullable=None)}), from_field='$session_id')}
            }
          }
        }
        hidden: True
        type: {
          alias: "event"
          type: <recursion ...>
        }
      },
      {
        alias: "id"
        expr: {
          chain: [
            "poe",
            "id"
          ]
          type: {
            name: "id"
            table_type: {
              field: "poe"
              table_type: <recursion ...>
              virtual_table: fields={'id': StringDatabaseField(name='person_id', array=None, nullable=None), 'created_at': DateTimeDatabaseField(name='person_created_at', array=None, nullable=None), 'properties': StringJSONDatabaseField(name='person_properties', array=None, nullable=None)}
            }
          }
        }
        hidden: True
        type: {
          alias: "id"
          type: <recursion ...>
        }
      }
    ]
    select_from: {
      table: {
        chain: [
          "events"
        ]
        type: <recursion ...>
      }
      type: <recursion ...>
    }
    type: {
      aliases: {}
      anonymous_tables: []
      columns: {
        event: <recursion ...>,
        id: <recursion ...>
      }
      ctes: {}
      tables: {
        events: <recursion ...>
      }
    }
  }
  '
---
