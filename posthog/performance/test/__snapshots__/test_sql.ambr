# name: test_snapshot_distributed_performance_events_table
  '
  
  CREATE TABLE IF NOT EXISTS performance_events ON CLUSTER 'posthog'
  (
      uuid UUID,
  session_id String,
  window_id String,
  pageview_id String,
  distinct_id String,
  time_origin DateTime64(3, 'UTC'),
  entry_type LowCardinality(String),
  name String,
  team_id Int64,
  current_url String,
  start_time Int64,
  redirect_start Int64,
  redirect_end Int64,
  worker_start Int64,
  fetch_start Int64,
  domain_lookup_start Int64,
  domain_lookup_end Int64,
  connect_start Int64,
  secure_connection_start Int64,
  connect_end Int64,
  request_start Int64,
  response_start Int64,
  response_end Int64,
  decoded_body_size Int64,
  encoded_body_size Int64,
  initiator_type LowCardinality(String),
  next_hop_protocol LowCardinality(String),
  render_blocking_status LowCardinality(String),
  response_status Int64,
  transfer_size Int64,
  largest_contentful_paint_element String,
  largest_contentful_paint_render_time Int64,
  largest_contentful_paint_load_time Int64,
  largest_contentful_paint_size Int64,
  largest_contentful_paint_id String,
  largest_contentful_paint_url String,
  dom_complete Int64,
  dom_content_loaded_event Int64,
  dom_interactive Int64,
  load_event_end Int64,
  load_event_start Int64,
  redirect_count Int64,
  navigation_type LowCardinality(String),
  unload_event_end Int64,
  unload_event_start Int64
      
  , _timestamp DateTime
  , _offset UInt64
  , _partition UInt64
  
  ) ENGINE = Distributed('posthog', 'posthog_test', 'sharded_performance_events', sipHash64(session_id))
  
  '
---
# name: test_snapshot_kafka_performance_events_table
  '
  
  CREATE TABLE IF NOT EXISTS kafka_performance_events ON CLUSTER 'posthog'
  (
      uuid UUID,
  session_id String,
  window_id String,
  pageview_id String,
  distinct_id String,
  time_origin DateTime64(3, 'UTC'),
  entry_type LowCardinality(String),
  name String,
  team_id Int64,
  current_url String,
  start_time Int64,
  redirect_start Int64,
  redirect_end Int64,
  worker_start Int64,
  fetch_start Int64,
  domain_lookup_start Int64,
  domain_lookup_end Int64,
  connect_start Int64,
  secure_connection_start Int64,
  connect_end Int64,
  request_start Int64,
  response_start Int64,
  response_end Int64,
  decoded_body_size Int64,
  encoded_body_size Int64,
  initiator_type LowCardinality(String),
  next_hop_protocol LowCardinality(String),
  render_blocking_status LowCardinality(String),
  response_status Int64,
  transfer_size Int64,
  largest_contentful_paint_element String,
  largest_contentful_paint_render_time Int64,
  largest_contentful_paint_load_time Int64,
  largest_contentful_paint_size Int64,
  largest_contentful_paint_id String,
  largest_contentful_paint_url String,
  dom_complete Int64,
  dom_content_loaded_event Int64,
  dom_interactive Int64,
  load_event_end Int64,
  load_event_start Int64,
  redirect_count Int64,
  navigation_type LowCardinality(String),
  unload_event_end Int64,
  unload_event_start Int64
      
  , _timestamp DateTime
  , _offset UInt64
  , _partition UInt64
  
  ) ENGINE = Kafka('kafka:9092', 'clickhouse_performance_events_test', 'group1', 'JSONEachRow')
  
  '
---
# name: test_snapshot_performance_events__mv_table
  '
  
  CREATE MATERIALIZED VIEW performance_events_mv ON CLUSTER 'posthog'
  TO posthog_test.sharded_performance_events
  AS SELECT
  uuid,session_id,window_id,pageview_id,distinct_id,time_origin,entry_type,name,team_id,current_url,start_time,redirect_start,redirect_end,worker_start,fetch_start,domain_lookup_start,domain_lookup_end,connect_start,secure_connection_start,connect_end,request_start,response_start,response_end,decoded_body_size,encoded_body_size,initiator_type,next_hop_protocol,render_blocking_status,response_status,transfer_size,largest_contentful_paint_element,largest_contentful_paint_render_time,largest_contentful_paint_load_time,largest_contentful_paint_size,largest_contentful_paint_id,largest_contentful_paint_url,dom_complete,dom_content_loaded_event,dom_interactive,load_event_end,load_event_start,redirect_count,navigation_type,unload_event_end,unload_event_start
  _timestamp,_offset,_partition
  FROM posthog_test.kafka_performance_events
  
  '
---
# name: test_snapshot_performance_events_table
  '
  
  CREATE TABLE IF NOT EXISTS sharded_performance_events ON CLUSTER 'posthog'
  (
      uuid UUID,
  session_id String,
  window_id String,
  pageview_id String,
  distinct_id String,
  time_origin DateTime64(3, 'UTC'),
  entry_type LowCardinality(String),
  name String,
  team_id Int64,
  current_url String,
  start_time Int64,
  redirect_start Int64,
  redirect_end Int64,
  worker_start Int64,
  fetch_start Int64,
  domain_lookup_start Int64,
  domain_lookup_end Int64,
  connect_start Int64,
  secure_connection_start Int64,
  connect_end Int64,
  request_start Int64,
  response_start Int64,
  response_end Int64,
  decoded_body_size Int64,
  encoded_body_size Int64,
  initiator_type LowCardinality(String),
  next_hop_protocol LowCardinality(String),
  render_blocking_status LowCardinality(String),
  response_status Int64,
  transfer_size Int64,
  largest_contentful_paint_element String,
  largest_contentful_paint_render_time Int64,
  largest_contentful_paint_load_time Int64,
  largest_contentful_paint_size Int64,
  largest_contentful_paint_id String,
  largest_contentful_paint_url String,
  dom_complete Int64,
  dom_content_loaded_event Int64,
  dom_interactive Int64,
  load_event_end Int64,
  load_event_start Int64,
  redirect_count Int64,
  navigation_type LowCardinality(String),
  unload_event_end Int64,
  unload_event_start Int64
      
  , _timestamp DateTime
  , _offset UInt64
  , _partition UInt64
  
  ) ENGINE = ReplicatedMergeTree('/clickhouse/tables/ee45bc2f-bf7a-4017-8421-693f38ffe78a_{shard}/posthog.performance_events', '{replica}')
  PARTITION BY toYYYYMM(time_origin)
  ORDER BY (team_id, session_id, pageview_id)
  
  
  '
---
