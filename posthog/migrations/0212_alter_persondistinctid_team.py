# Generated by Django 3.2.5 on 2022-02-17 10:03

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    atomic = False  # DROP INDEX CONCURRENTLY cannot be run in a transaction

    dependencies = [
        ("posthog", "0211_async_migrations_errors_length"),
    ]

    operations = [
        # Below is the original migration generated by running `./manage.py
        # makemigrations posthog`. We replace this migration which performs a
        # blocking DROP INDEX with one that does so using the postgresql
        # [CONCURRENTLY
        # keyword](https://www.postgresql.org/docs/9.3/sql-dropindex.html)
        #
        # To do so we need to make sure that Djangos state is update such that
        # it doesn't think that there is an index on the field (otherwise on
        # next run or ./manage.py makemigrations we'd end up generating another
        # migration), and also actually perform the database mutations.
        #
        # migrations.AlterField(
        #     model_name='persondistinctid',
        #     name='team',
        #     field=models.ForeignKey(db_index=False, on_delete=django.db.models.deletion.CASCADE, to='posthog.team'),
        # ),
        #
        # Which generates the sql, as seen by `./manage.py sqlmigrate posthog
        # 0212`
        #
        # BEGIN;
        # --
        # -- Alter field team on persondistinctid
        # --
        # SET CONSTRAINTS "posthog_persondistinctid_team_id_46330ec9_fk_posthog_team_id" IMMEDIATE; ALTER TABLE "posthog_persondistinctid" DROP CONSTRAINT "posthog_persondistinctid_team_id_46330ec9_fk_posthog_team_id";
        # DROP INDEX IF EXISTS "posthog_persondistinctid_team_id_46330ec9";
        # ALTER TABLE "posthog_persondistinctid" ADD CONSTRAINT "posthog_persondistinctid_team_id_46330ec9_fk_posthog_team_id" FOREIGN KEY ("team_id") REFERENCES "posthog_team" ("id") DEFERRABLE INITIALLY DEFERRED;
        # COMMIT;
        #
        #
        migrations.SeparateDatabaseAndState(
            state_operations=[
                migrations.AlterField(
                    model_name="persondistinctid",
                    name="team",
                    field=models.ForeignKey(
                        db_index=False, on_delete=django.db.models.deletion.CASCADE, to="posthog.team"
                    ),
                )
            ],
            database_operations=[
                # NOTE: there is a
                # `django.contrib.postgres.operations.RemoveIndexConcurrently`
                # but this appears to only work with explicit indices rather
                # than indicies from `ForeignKey` as far as I can tell.
                migrations.RunSQL(
                    sql='DROP INDEX CONCURRENTLY IF EXISTS "posthog_persondistinctid_team_id_46330ec9";',
                    reverse_sql="CREATE INDEX posthog_persondistinctid_team_id_46330ec9 ON public.posthog_persondistinctid USING btree (team_id);",
                )
            ],
        )
    ]
