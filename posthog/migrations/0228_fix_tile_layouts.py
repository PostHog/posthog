# Generated by Django 3.2.12 on 2022-04-22 09:10
import json

import structlog
from django.core.paginator import Paginator
from django.db import migrations


def migrate_dashboard_insight_relations(apps, _) -> None:
    logger = structlog.get_logger(__name__)
    logger.info("starting_0228_fix_tile_layouts")

    DashboardTile = apps.get_model("posthog", "DashboardTile")

    tiles = DashboardTile.objects.order_by("id").all()
    paginator = Paginator(tiles, 500)

    conversion_count = 0

    for page_number in paginator.page_range:
        page = paginator.page(page_number)
        updated_tiles = []

        for tile in page.object_list:
            if isinstance(tile.layouts, str):
                # from migration 0227
                # the layout was a json serialized string that has again been serialized as string
                # normally we could load it from string to dict once
                tile.layouts = json.loads(tile.layouts)
                if isinstance(tile.layouts, str):
                    # but if it is still in the state after 0227
                    # where it was not `json.loads`ed before being saved
                    # it must be loaded from json twice, since saving it will stringify again
                    tile.layouts = json.loads(tile.layouts)

                updated_tiles.append(tile)

        DashboardTile.objects.bulk_update(updated_tiles, ["layouts"])
        conversion_count += len(updated_tiles)

    logger.info("finished_0228_fix_tile_layouts", conversion_count=conversion_count)


class Migration(migrations.Migration):

    dependencies = [
        ("posthog", "0227_add_dashboard_tiles"),
    ]

    def reverse(apps, _) -> None:
        pass
        # no-op, it's already wrong... it can't get wronger

    operations = [
        migrations.RunPython(migrate_dashboard_insight_relations, reverse),
    ]
