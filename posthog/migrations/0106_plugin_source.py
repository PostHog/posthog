# Generated by Django 3.0.11 on 2020-12-10 22:18

import django.contrib.postgres.fields.jsonb
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


def add_plugin_types(apps, schema_editor):
    Plugin = apps.get_model("posthog", "Plugin")
    for plugin in Plugin.objects.filter(plugin_type__isnull=True):
        plugin.plugin_type = "local" if plugin.url and plugin.url.startswith("file:") else "custom"
        plugin.save()


def backwards(apps, schema_editor):
    pass


class Migration(migrations.Migration):

    dependencies = [
        ("posthog", "0105_cohort_errors_calculating"),
    ]

    operations = [
        migrations.AddField(
            model_name="plugin",
            name="plugin_type",
            field=models.CharField(
                blank=True,
                choices=[("local", "local"), ("custom", "custom"), ("repository", "repository"), ("source", "source")],
                default=None,
                max_length=200,
                null=True,
            ),
        ),
        migrations.AddField(model_name="plugin", name="source", field=models.TextField(blank=True, null=True),),
        migrations.CreateModel(
            name="PluginSourceVersion",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(blank=True, max_length=200, null=True)),
                ("config_schema", django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
                ("source", models.TextField(blank=True, null=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL
                    ),
                ),
                ("plugin", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="posthog.Plugin")),
            ],
        ),
        migrations.RunPython(add_plugin_types, backwards),
    ]
