# Generated by Django 4.2.22 on 2025-09-04 19:49

from django.db import migrations, models
from django.utils.timezone import now


class Migration(migrations.Migration):
    dependencies = [
        ("posthog", "0844_alter_externaldatasource_source_type"),
    ]

    operations = [
        migrations.CreateModel(
            name="IntermediateResultsCatalog",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "results_key",
                    models.TextField(
                        help_text="Hash of normalized query, hogql modifiers, path cleaning rules, etc (excluding date range)"
                    ),
                ),
                ("start_bucket", models.DateTimeField(help_text="Start of the time bucket (inclusive)")),
                ("end_bucket", models.DateTimeField(help_text="End of the time bucket (exclusive)")),
                (
                    "computed_at",
                    models.DateTimeField(
                        blank=True, help_text="When the computation completed successfully", null=True
                    ),
                ),
                ("generation_id", models.BigIntegerField(help_text="Generation ID for this computation attempt")),
                (
                    "status",
                    models.CharField(
                        choices=[("computing", "Computing"), ("ready", "Ready"), ("failed", "Failed")],
                        default="computing",
                        help_text="Current status of this computation",
                        max_length=20,
                    ),
                ),
                ("locked_by", models.TextField(help_text="Identifier of the process/worker that acquired the lock")),
                ("locked_at", models.DateTimeField(default=now, help_text="When the lock was acquired")),
                (
                    "clickhouse_query_id",
                    models.TextField(
                        blank=True, help_text="ClickHouse query ID for tracking the computation query", null=True
                    ),
                ),
            ],
            options={
                "db_table": "intermediate_results_catalog",
            },
        ),
        migrations.AlterUniqueTogether(
            name="intermediateresultscatalog",
            unique_together={("results_key", "start_bucket", "end_bucket")},
        ),
        migrations.AddIndex(
            model_name="intermediateresultscatalog",
            index=models.Index(
                fields=["results_key", "start_bucket", "end_bucket"],
                name="intermediate_results_catalog_results_key_start_bucket_end_bucket_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="intermediateresultscatalog",
            index=models.Index(
                fields=["status", "locked_at"], name="intermediate_results_catalog_status_locked_at_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="intermediateresultscatalog",
            index=models.Index(
                fields=["results_key", "status"], name="intermediate_results_catalog_results_key_status_idx"
            ),
        ),
        migrations.RunSQL(
            "ALTER TABLE intermediate_results_catalog ADD CONSTRAINT valid_time_range CHECK (start_bucket < end_bucket);",
            reverse_sql="ALTER TABLE intermediate_results_catalog DROP CONSTRAINT IF EXISTS valid_time_range;",
        ),
    ]
