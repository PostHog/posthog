# Generated by Django 4.2.22 on 2025-06-06 20:50

from django.db import migrations, models
import structlog

logger = structlog.get_logger(__name__)


def backfill_feature_flag_updated_at(apps, schema_editor):
    logger.info("0764_featureflag_updated_at backfill_started")

    FeatureFlag = apps.get_model("posthog", "FeatureFlag")
    ActivityLog = apps.get_model("posthog", "ActivityLog")

    total_processed = 0
    total_updated = 0

    for feature_flag in FeatureFlag.objects.iterator():
        total_processed += 1
        if feature_flag.updated_at:
            continue
        try:
            last_activity_log = (
                ActivityLog.objects.filter(team_id=feature_flag.team_id, scope="FeatureFlag", item_id=feature_flag.id)
                .order_by("-created_at")
                .first()
            )

            if last_activity_log:
                feature_flag.updated_at = last_activity_log.created_at
            else:
                feature_flag.updated_at = feature_flag.created_at

            feature_flag.save(update_fields=["updated_at"])
            total_updated += 1
        except Exception as e:
            logger.error(
                "Failed to backfill FeatureFlag.updated_at value",
                feature_flag_id=feature_flag.id,
                error=str(e),
                exc_info=True,
            )
            continue

    logger.info("0764_featureflag_updated_at backfill_completed", processed=total_processed, updated=total_updated)


class Migration(migrations.Migration):
    dependencies = [
        ("posthog", "0763_migrate_team_base_currency"),
    ]

    operations = [
        migrations.AddField(
            model_name="featureflag",
            name="updated_at",
            field=models.DateTimeField(null=True),  # I manually removed auto_now=True to avoid table locks.
        ),
        migrations.RunPython(backfill_feature_flag_updated_at, reverse_code=migrations.RunPython.noop),
    ]
