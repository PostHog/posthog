# name: TestPerson.test_filter_person_email
  '
  /* user_id:0 request:_snapshot_ */
  SELECT id
  FROM person
  WHERE team_id = 2
  GROUP BY id
  HAVING max(is_deleted) = 0
  AND argMax(person.created_at, version) < now() + INTERVAL 1 DAY
  AND has(['another@gmail.com'], replaceRegexpAll(JSONExtractRaw(properties, 'email'), '^"|"$', ''))
  ORDER BY argMax(person.created_at, version) DESC, id DESC
  LIMIT 100 SETTINGS optimize_aggregation_in_order = 1
  '
---
# name: TestPerson.test_filter_person_email_materialized
  '
  /* user_id:0 request:_snapshot_ */
  SELECT id
  FROM person
  WHERE team_id = 2
  GROUP BY id
  HAVING max(is_deleted) = 0
  AND argMax(person.created_at, version) < now() + INTERVAL 1 DAY
  AND has(['another@gmail.com'], "pmat_email")
  ORDER BY argMax(person.created_at, version) DESC, id DESC
  LIMIT 100 SETTINGS optimize_aggregation_in_order = 1
  '
---
# name: TestPerson.test_filter_person_list
  '
  /* user_id:0 request:_snapshot_ */
  SELECT id
  FROM person
  WHERE team_id = 2
  GROUP BY id
  HAVING max(is_deleted) = 0
  AND argMax(person.created_at, version) < now() + INTERVAL 1 DAY
  AND id IN
    (SELECT person_id
     FROM
       (SELECT distinct_id,
               argMax(person_id, version) as person_id
        FROM person_distinct_id2
        WHERE team_id = 2
        GROUP BY distinct_id
        HAVING argMax(is_deleted, version) = 0)
     where distinct_id = 'distinct_id' )
  ORDER BY argMax(person.created_at, version) DESC, id DESC
  LIMIT 100 SETTINGS optimize_aggregation_in_order = 1
  '
---
# name: TestPerson.test_filter_person_list.1
  '
  /* user_id:0 request:_snapshot_ */
  SELECT id
  FROM person
  WHERE team_id = 2
  GROUP BY id
  HAVING max(is_deleted) = 0
  AND argMax(person.created_at, version) < now() + INTERVAL 1 DAY
  AND id IN
    (SELECT person_id
     FROM
       (SELECT distinct_id,
               argMax(person_id, version) as person_id
        FROM person_distinct_id2
        WHERE team_id = 2
        GROUP BY distinct_id
        HAVING argMax(is_deleted, version) = 0)
     where distinct_id = 'another_one' )
  ORDER BY argMax(person.created_at, version) DESC, id DESC
  LIMIT 100 SETTINGS optimize_aggregation_in_order = 1
  '
---
# name: TestPerson.test_filter_person_list.2
  '
  /* user_id:0 request:_snapshot_ */
  SELECT id
  FROM person
  WHERE team_id = 2
  GROUP BY id
  HAVING max(is_deleted) = 0
  AND argMax(person.created_at, version) < now() + INTERVAL 1 DAY
  AND has(['another@gmail.com'], replaceRegexpAll(JSONExtractRaw(properties, 'email'), '^"|"$', ''))
  ORDER BY argMax(person.created_at, version) DESC, id DESC
  LIMIT 100 SETTINGS optimize_aggregation_in_order = 1
  '
---
# name: TestPerson.test_filter_person_list.3
  '
  /* user_id:0 request:_snapshot_ */
  SELECT id
  FROM person
  WHERE team_id = 2
  GROUP BY id
  HAVING max(is_deleted) = 0
  AND argMax(person.created_at, version) < now() + INTERVAL 1 DAY
  AND has(['inexistent'], replaceRegexpAll(JSONExtractRaw(properties, 'email'), '^"|"$', ''))
  ORDER BY argMax(person.created_at, version) DESC, id DESC
  LIMIT 100 SETTINGS optimize_aggregation_in_order = 1
  '
---
# name: TestPerson.test_filter_person_list.4
  '
  /* user_id:0 request:_snapshot_ */
  SELECT id
  FROM person
  WHERE team_id = 2
  GROUP BY id
  HAVING max(is_deleted) = 0
  AND argMax(person.created_at, version) < now() + INTERVAL 1 DAY
  AND id IN
    (SELECT person_id
     FROM
       (SELECT distinct_id,
               argMax(person_id, version) as person_id
        FROM person_distinct_id2
        WHERE team_id = 2
        GROUP BY distinct_id
        HAVING argMax(is_deleted, version) = 0)
     where distinct_id = 'inexistent' )
  ORDER BY argMax(person.created_at, version) DESC, id DESC
  LIMIT 100 SETTINGS optimize_aggregation_in_order = 1
  '
---
# name: TestPerson.test_filter_person_prop
  '
  /* user_id:0 request:_snapshot_ */
  SELECT id
  FROM person
  WHERE team_id = 2
    AND id IN
      (SELECT id
       FROM person
       WHERE team_id = 2
         AND (has(['some_value'], replaceRegexpAll(JSONExtractRaw(properties, 'some_prop'), '^"|"$', ''))) )
  GROUP BY id
  HAVING max(is_deleted) = 0
  AND argMax(person.created_at, version) < now() + INTERVAL 1 DAY
  AND (has(['some_value'], replaceRegexpAll(JSONExtractRaw(argMax(person.properties, version), 'some_prop'), '^"|"$', '')))
  ORDER BY argMax(person.created_at, version) DESC, id DESC
  LIMIT 100 SETTINGS optimize_aggregation_in_order = 1
  '
---
# name: TestPerson.test_person_property_values
  '
  /* user_id:0 request:_snapshot_ */
  SELECT value,
         count(value)
  FROM
    (SELECT replaceRegexpAll(JSONExtractRaw(properties, 'random_prop'), '^"|"$', '') as value
     FROM person
     WHERE team_id = 2
       AND is_deleted = 0
       AND replaceRegexpAll(JSONExtractRaw(properties, 'random_prop'), '^"|"$', '') IS NOT NULL
       AND replaceRegexpAll(JSONExtractRaw(properties, 'random_prop'), '^"|"$', '') != ''
     ORDER BY id DESC
     LIMIT 100000)
  GROUP BY value
  ORDER BY count(value) DESC
  LIMIT 20
  '
---
# name: TestPerson.test_person_property_values.1
  '
  /* user_id:0 request:_snapshot_ */
  SELECT value,
         count(value)
  FROM
    (SELECT replaceRegexpAll(JSONExtractRaw(properties, 'random_prop'), '^"|"$', '') as value
     FROM person
     WHERE team_id = 2
       AND is_deleted = 0
       AND replaceRegexpAll(JSONExtractRaw(properties, 'random_prop'), '^"|"$', '') ILIKE '%qw%'
     ORDER BY id DESC
     LIMIT 100000)
  GROUP BY value
  ORDER BY count(value) DESC
  LIMIT 20
  '
---
# name: TestPerson.test_person_property_values_materialized
  '
  /* user_id:0 request:_snapshot_ */
  SELECT value,
         count(value)
  FROM
    (SELECT "pmat_random_prop" as value
     FROM person
     WHERE team_id = 2
       AND is_deleted = 0
       AND "pmat_random_prop" IS NOT NULL
       AND "pmat_random_prop" != ''
     ORDER BY id DESC
     LIMIT 100000)
  GROUP BY value
  ORDER BY count(value) DESC
  LIMIT 20
  '
---
# name: TestPerson.test_person_property_values_materialized.1
  '
  /* user_id:0 request:_snapshot_ */
  SELECT value,
         count(value)
  FROM
    (SELECT "pmat_random_prop" as value
     FROM person
     WHERE team_id = 2
       AND is_deleted = 0
       AND "pmat_random_prop" ILIKE '%qw%'
     ORDER BY id DESC
     LIMIT 100000)
  GROUP BY value
  ORDER BY count(value) DESC
  LIMIT 20
  '
---
# name: TestPerson.test_properties
  '
  /* user_id:0 request:_snapshot_ */
  SELECT id
  FROM person
  WHERE team_id = 2
    AND id IN
      (SELECT id
       FROM person
       WHERE team_id = 2
         AND (JSONHas(properties, 'email')) )
  GROUP BY id
  HAVING max(is_deleted) = 0
  AND argMax(person.created_at, version) < now() + INTERVAL 1 DAY
  AND (JSONHas(argMax(person.properties, version), 'email'))
  ORDER BY argMax(person.created_at, version) DESC, id DESC
  LIMIT 100 SETTINGS optimize_aggregation_in_order = 1
  '
---
# name: TestPerson.test_properties.1
  '
  /* user_id:0 request:_snapshot_ */
  SELECT id
  FROM person
  WHERE team_id = 2
    AND id IN
      (SELECT id
       FROM person
       WHERE team_id = 2
         AND (replaceRegexpAll(JSONExtractRaw(properties, 'email'), '^"|"$', '') ILIKE '%another@gm%') )
  GROUP BY id
  HAVING max(is_deleted) = 0
  AND argMax(person.created_at, version) < now() + INTERVAL 1 DAY
  AND (replaceRegexpAll(JSONExtractRaw(argMax(person.properties, version), 'email'), '^"|"$', '') ILIKE '%another@gm%')
  ORDER BY argMax(person.created_at, version) DESC, id DESC
  LIMIT 100 SETTINGS optimize_aggregation_in_order = 1
  '
---
# name: TestPerson.test_properties_materialized
  '
  /* user_id:0 request:_snapshot_ */
  SELECT id
  FROM person
  WHERE team_id = 2
    AND id IN
      (SELECT id
       FROM person
       WHERE team_id = 2
         AND (notEmpty("pmat_email")) )
  GROUP BY id
  HAVING max(is_deleted) = 0
  AND argMax(person.created_at, version) < now() + INTERVAL 1 DAY
  AND (notEmpty(argMax(person."pmat_email", version)))
  ORDER BY argMax(person.created_at, version) DESC, id DESC
  LIMIT 100 SETTINGS optimize_aggregation_in_order = 1
  '
---
# name: TestPerson.test_properties_materialized.1
  '
  /* user_id:0 request:_snapshot_ */
  SELECT id
  FROM person
  WHERE team_id = 2
    AND id IN
      (SELECT id
       FROM person
       WHERE team_id = 2
         AND ("pmat_email" ILIKE '%another@gm%') )
  GROUP BY id
  HAVING max(is_deleted) = 0
  AND argMax(person.created_at, version) < now() + INTERVAL 1 DAY
  AND (argMax(person."pmat_email", version) ILIKE '%another@gm%')
  ORDER BY argMax(person.created_at, version) DESC, id DESC
  LIMIT 100 SETTINGS optimize_aggregation_in_order = 1
  '
---
# name: TestPerson.test_search
  '
  /* user_id:0 request:_snapshot_ */
  SELECT id
  FROM person
  WHERE team_id = 2
    AND id IN
      (SELECT id
       FROM person
       WHERE team_id = 2
         AND ((replaceRegexpAll(JSONExtractRaw(properties, 'email'), '^"|"$', '') ILIKE '%another@gm%')
              OR id IN
                (SELECT person_id
                 FROM
                   (SELECT distinct_id,
                           argMax(person_id, version) as person_id
                    FROM person_distinct_id2
                    WHERE team_id = 2
                    GROUP BY distinct_id
                    HAVING argMax(is_deleted, version) = 0)
                 WHERE distinct_id = 'another@gm' )) )
  GROUP BY id
  HAVING max(is_deleted) = 0
  AND argMax(person.created_at, version) < now() + INTERVAL 1 DAY
  AND ((replaceRegexpAll(JSONExtractRaw(argMax(person.properties, version), 'email'), '^"|"$', '') ILIKE '%another@gm%')
       OR id IN
         (SELECT person_id
          FROM
            (SELECT distinct_id,
                    argMax(person_id, version) as person_id
             FROM person_distinct_id2
             WHERE team_id = 2
             GROUP BY distinct_id
             HAVING argMax(is_deleted, version) = 0)
          WHERE distinct_id = 'another@gm' ))
  ORDER BY argMax(person.created_at, version) DESC, id DESC
  LIMIT 100 SETTINGS optimize_aggregation_in_order = 1
  '
---
# name: TestPerson.test_search.1
  '
  /* user_id:0 request:_snapshot_ */
  SELECT id
  FROM person
  WHERE team_id = 2
    AND id IN
      (SELECT id
       FROM person
       WHERE team_id = 2
         AND ((replaceRegexpAll(JSONExtractRaw(properties, 'email'), '^"|"$', '') ILIKE '%distinct_id_3%')
              OR id IN
                (SELECT person_id
                 FROM
                   (SELECT distinct_id,
                           argMax(person_id, version) as person_id
                    FROM person_distinct_id2
                    WHERE team_id = 2
                    GROUP BY distinct_id
                    HAVING argMax(is_deleted, version) = 0)
                 WHERE distinct_id = 'distinct_id_3' )) )
  GROUP BY id
  HAVING max(is_deleted) = 0
  AND argMax(person.created_at, version) < now() + INTERVAL 1 DAY
  AND ((replaceRegexpAll(JSONExtractRaw(argMax(person.properties, version), 'email'), '^"|"$', '') ILIKE '%distinct_id_3%')
       OR id IN
         (SELECT person_id
          FROM
            (SELECT distinct_id,
                    argMax(person_id, version) as person_id
             FROM person_distinct_id2
             WHERE team_id = 2
             GROUP BY distinct_id
             HAVING argMax(is_deleted, version) = 0)
          WHERE distinct_id = 'distinct_id_3' ))
  ORDER BY argMax(person.created_at, version) DESC, id DESC
  LIMIT 100 SETTINGS optimize_aggregation_in_order = 1
  '
---
# name: TestPerson.test_search_materialized
  '
  /* user_id:0 request:_snapshot_ */
  SELECT id
  FROM person
  WHERE team_id = 2
    AND id IN
      (SELECT id
       FROM person
       WHERE team_id = 2
         AND (("pmat_email" ILIKE '%another@gm%')
              OR id IN
                (SELECT person_id
                 FROM
                   (SELECT distinct_id,
                           argMax(person_id, version) as person_id
                    FROM person_distinct_id2
                    WHERE team_id = 2
                    GROUP BY distinct_id
                    HAVING argMax(is_deleted, version) = 0)
                 WHERE distinct_id = 'another@gm' )) )
  GROUP BY id
  HAVING max(is_deleted) = 0
  AND argMax(person.created_at, version) < now() + INTERVAL 1 DAY
  AND ((argMax(person."pmat_email", version) ILIKE '%another@gm%')
       OR id IN
         (SELECT person_id
          FROM
            (SELECT distinct_id,
                    argMax(person_id, version) as person_id
             FROM person_distinct_id2
             WHERE team_id = 2
             GROUP BY distinct_id
             HAVING argMax(is_deleted, version) = 0)
          WHERE distinct_id = 'another@gm' ))
  ORDER BY argMax(person.created_at, version) DESC, id DESC
  LIMIT 100 SETTINGS optimize_aggregation_in_order = 1
  '
---
# name: TestPerson.test_search_materialized.1
  '
  /* user_id:0 request:_snapshot_ */
  SELECT id
  FROM person
  WHERE team_id = 2
    AND id IN
      (SELECT id
       FROM person
       WHERE team_id = 2
         AND (("pmat_email" ILIKE '%distinct_id_3%')
              OR id IN
                (SELECT person_id
                 FROM
                   (SELECT distinct_id,
                           argMax(person_id, version) as person_id
                    FROM person_distinct_id2
                    WHERE team_id = 2
                    GROUP BY distinct_id
                    HAVING argMax(is_deleted, version) = 0)
                 WHERE distinct_id = 'distinct_id_3' )) )
  GROUP BY id
  HAVING max(is_deleted) = 0
  AND argMax(person.created_at, version) < now() + INTERVAL 1 DAY
  AND ((argMax(person."pmat_email", version) ILIKE '%distinct_id_3%')
       OR id IN
         (SELECT person_id
          FROM
            (SELECT distinct_id,
                    argMax(person_id, version) as person_id
             FROM person_distinct_id2
             WHERE team_id = 2
             GROUP BY distinct_id
             HAVING argMax(is_deleted, version) = 0)
          WHERE distinct_id = 'distinct_id_3' ))
  ORDER BY argMax(person.created_at, version) DESC, id DESC
  LIMIT 100 SETTINGS optimize_aggregation_in_order = 1
  '
---
# name: TestPerson.test_search_person_id
  '
  /* user_id:0 request:_snapshot_ */
  SELECT id
  FROM person
  WHERE team_id = 2
    AND id IN
      (SELECT id
       FROM person
       WHERE team_id = 2
         AND ((replaceRegexpAll(JSONExtractRaw(properties, 'email'), '^"|"$', '') ILIKE '%00000000-0000-4000-8000-000000000000%')
              OR (id = '00000000-0000-4000-8000-000000000000'
                  OR id IN
                    (SELECT person_id
                     FROM
                       (SELECT distinct_id,
                               argMax(person_id, version) as person_id
                        FROM person_distinct_id2
                        WHERE team_id = 2
                        GROUP BY distinct_id
                        HAVING argMax(is_deleted, version) = 0)
                     WHERE distinct_id = '00000000-0000-4000-8000-000000000000' ))) )
  GROUP BY id
  HAVING max(is_deleted) = 0
  AND argMax(person.created_at, version) < now() + INTERVAL 1 DAY
  AND ((replaceRegexpAll(JSONExtractRaw(argMax(person.properties, version), 'email'), '^"|"$', '') ILIKE '%00000000-0000-4000-8000-000000000000%')
       OR (id = '00000000-0000-4000-8000-000000000000'
           OR id IN
             (SELECT person_id
              FROM
                (SELECT distinct_id,
                        argMax(person_id, version) as person_id
                 FROM person_distinct_id2
                 WHERE team_id = 2
                 GROUP BY distinct_id
                 HAVING argMax(is_deleted, version) = 0)
              WHERE distinct_id = '00000000-0000-4000-8000-000000000000' )))
  ORDER BY argMax(person.created_at, version) DESC, id DESC
  LIMIT 100 SETTINGS optimize_aggregation_in_order = 1
  '
---
# name: TestPerson.test_search_person_id_materialized
  '
  /* user_id:0 request:_snapshot_ */
  SELECT id
  FROM person
  WHERE team_id = 2
    AND id IN
      (SELECT id
       FROM person
       WHERE team_id = 2
         AND (("pmat_email" ILIKE '%00000000-0000-4000-8000-000000000000%')
              OR (id = '00000000-0000-4000-8000-000000000000'
                  OR id IN
                    (SELECT person_id
                     FROM
                       (SELECT distinct_id,
                               argMax(person_id, version) as person_id
                        FROM person_distinct_id2
                        WHERE team_id = 2
                        GROUP BY distinct_id
                        HAVING argMax(is_deleted, version) = 0)
                     WHERE distinct_id = '00000000-0000-4000-8000-000000000000' ))) )
  GROUP BY id
  HAVING max(is_deleted) = 0
  AND argMax(person.created_at, version) < now() + INTERVAL 1 DAY
  AND ((argMax(person."pmat_email", version) ILIKE '%00000000-0000-4000-8000-000000000000%')
       OR (id = '00000000-0000-4000-8000-000000000000'
           OR id IN
             (SELECT person_id
              FROM
                (SELECT distinct_id,
                        argMax(person_id, version) as person_id
                 FROM person_distinct_id2
                 WHERE team_id = 2
                 GROUP BY distinct_id
                 HAVING argMax(is_deleted, version) = 0)
              WHERE distinct_id = '00000000-0000-4000-8000-000000000000' )))
  ORDER BY argMax(person.created_at, version) DESC, id DESC
  LIMIT 100 SETTINGS optimize_aggregation_in_order = 1
  '
---
# name: TestPersonFromClickhouse.test_filter_person_email
  '
  /* user_id:0 request:_snapshot_ */
  SELECT person.*,
         groupArray(pdi.distinct_id) as distinct_ids
  FROM
    (SELECT id,
            argMax(created_at, version) as created_at,
            argMax(is_identified, version) as is_identified,
            argMax(properties, version) as person_props
     FROM person
     WHERE team_id = 2
     GROUP BY id
     HAVING max(is_deleted) = 0
     AND argMax(person.created_at, version) < now() + INTERVAL 1 DAY
     AND has(['another@gmail.com'], replaceRegexpAll(JSONExtractRaw(properties, 'email'), '^"|"$', ''))
     ORDER BY argMax(person.created_at, version) DESC, id DESC
     LIMIT 100 SETTINGS optimize_aggregation_in_order = 1) person
  LEFT JOIN
    (SELECT distinct_id,
            argMax(person_id, version) as person_id
     FROM person_distinct_id2
     WHERE team_id = 2
     GROUP BY distinct_id
     HAVING argMax(is_deleted, version) = 0) as pdi ON person.id=pdi.person_id
  GROUP BY person.*
  ORDER BY created_at desc,
           id desc
  '
---
# name: TestPersonFromClickhouse.test_filter_person_email_materialized
  '
  /* user_id:0 request:_snapshot_ */
  SELECT person.*,
         groupArray(pdi.distinct_id) as distinct_ids
  FROM
    (SELECT id,
            argMax(created_at, version) as created_at,
            argMax(is_identified, version) as is_identified,
            argMax(properties, version) as person_props
     FROM person
     WHERE team_id = 2
     GROUP BY id
     HAVING max(is_deleted) = 0
     AND argMax(person.created_at, version) < now() + INTERVAL 1 DAY
     AND has(['another@gmail.com'], "pmat_email")
     ORDER BY argMax(person.created_at, version) DESC, id DESC
     LIMIT 100 SETTINGS optimize_aggregation_in_order = 1) person
  LEFT JOIN
    (SELECT distinct_id,
            argMax(person_id, version) as person_id
     FROM person_distinct_id2
     WHERE team_id = 2
     GROUP BY distinct_id
     HAVING argMax(is_deleted, version) = 0) as pdi ON person.id=pdi.person_id
  GROUP BY person.*
  ORDER BY created_at desc,
           id desc
  '
---
# name: TestPersonFromClickhouse.test_filter_person_list
  '
  /* user_id:0 request:_snapshot_ */
  SELECT person.*,
         groupArray(pdi.distinct_id) as distinct_ids
  FROM
    (SELECT id,
            argMax(created_at, version) as created_at,
            argMax(is_identified, version) as is_identified,
            argMax(properties, version) as person_props
     FROM person
     WHERE team_id = 2
     GROUP BY id
     HAVING max(is_deleted) = 0
     AND argMax(person.created_at, version) < now() + INTERVAL 1 DAY
     AND id IN
       (SELECT person_id
        FROM
          (SELECT distinct_id,
                  argMax(person_id, version) as person_id
           FROM person_distinct_id2
           WHERE team_id = 2
           GROUP BY distinct_id
           HAVING argMax(is_deleted, version) = 0)
        where distinct_id = 'distinct_id' )
     ORDER BY argMax(person.created_at, version) DESC, id DESC
     LIMIT 100 SETTINGS optimize_aggregation_in_order = 1) person
  LEFT JOIN
    (SELECT distinct_id,
            argMax(person_id, version) as person_id
     FROM person_distinct_id2
     WHERE team_id = 2
     GROUP BY distinct_id
     HAVING argMax(is_deleted, version) = 0) as pdi ON person.id=pdi.person_id
  GROUP BY person.*
  ORDER BY created_at desc,
           id desc
  '
---
# name: TestPersonFromClickhouse.test_filter_person_list.1
  '
  /* user_id:0 request:_snapshot_ */
  SELECT person.*,
         groupArray(pdi.distinct_id) as distinct_ids
  FROM
    (SELECT id,
            argMax(created_at, version) as created_at,
            argMax(is_identified, version) as is_identified,
            argMax(properties, version) as person_props
     FROM person
     WHERE team_id = 2
     GROUP BY id
     HAVING max(is_deleted) = 0
     AND argMax(person.created_at, version) < now() + INTERVAL 1 DAY
     AND id IN
       (SELECT person_id
        FROM
          (SELECT distinct_id,
                  argMax(person_id, version) as person_id
           FROM person_distinct_id2
           WHERE team_id = 2
           GROUP BY distinct_id
           HAVING argMax(is_deleted, version) = 0)
        where distinct_id = 'another_one' )
     ORDER BY argMax(person.created_at, version) DESC, id DESC
     LIMIT 100 SETTINGS optimize_aggregation_in_order = 1) person
  LEFT JOIN
    (SELECT distinct_id,
            argMax(person_id, version) as person_id
     FROM person_distinct_id2
     WHERE team_id = 2
     GROUP BY distinct_id
     HAVING argMax(is_deleted, version) = 0) as pdi ON person.id=pdi.person_id
  GROUP BY person.*
  ORDER BY created_at desc,
           id desc
  '
---
# name: TestPersonFromClickhouse.test_filter_person_list.2
  '
  /* user_id:0 request:_snapshot_ */
  SELECT person.*,
         groupArray(pdi.distinct_id) as distinct_ids
  FROM
    (SELECT id,
            argMax(created_at, version) as created_at,
            argMax(is_identified, version) as is_identified,
            argMax(properties, version) as person_props
     FROM person
     WHERE team_id = 2
     GROUP BY id
     HAVING max(is_deleted) = 0
     AND argMax(person.created_at, version) < now() + INTERVAL 1 DAY
     AND has(['another@gmail.com'], replaceRegexpAll(JSONExtractRaw(properties, 'email'), '^"|"$', ''))
     ORDER BY argMax(person.created_at, version) DESC, id DESC
     LIMIT 100 SETTINGS optimize_aggregation_in_order = 1) person
  LEFT JOIN
    (SELECT distinct_id,
            argMax(person_id, version) as person_id
     FROM person_distinct_id2
     WHERE team_id = 2
     GROUP BY distinct_id
     HAVING argMax(is_deleted, version) = 0) as pdi ON person.id=pdi.person_id
  GROUP BY person.*
  ORDER BY created_at desc,
           id desc
  '
---
# name: TestPersonFromClickhouse.test_filter_person_list.3
  '
  /* user_id:0 request:_snapshot_ */
  SELECT person.*,
         groupArray(pdi.distinct_id) as distinct_ids
  FROM
    (SELECT id,
            argMax(created_at, version) as created_at,
            argMax(is_identified, version) as is_identified,
            argMax(properties, version) as person_props
     FROM person
     WHERE team_id = 2
     GROUP BY id
     HAVING max(is_deleted) = 0
     AND argMax(person.created_at, version) < now() + INTERVAL 1 DAY
     AND has(['inexistent'], replaceRegexpAll(JSONExtractRaw(properties, 'email'), '^"|"$', ''))
     ORDER BY argMax(person.created_at, version) DESC, id DESC
     LIMIT 100 SETTINGS optimize_aggregation_in_order = 1) person
  LEFT JOIN
    (SELECT distinct_id,
            argMax(person_id, version) as person_id
     FROM person_distinct_id2
     WHERE team_id = 2
     GROUP BY distinct_id
     HAVING argMax(is_deleted, version) = 0) as pdi ON person.id=pdi.person_id
  GROUP BY person.*
  ORDER BY created_at desc,
           id desc
  '
---
# name: TestPersonFromClickhouse.test_filter_person_list.4
  '
  /* user_id:0 request:_snapshot_ */
  SELECT person.*,
         groupArray(pdi.distinct_id) as distinct_ids
  FROM
    (SELECT id,
            argMax(created_at, version) as created_at,
            argMax(is_identified, version) as is_identified,
            argMax(properties, version) as person_props
     FROM person
     WHERE team_id = 2
     GROUP BY id
     HAVING max(is_deleted) = 0
     AND argMax(person.created_at, version) < now() + INTERVAL 1 DAY
     AND id IN
       (SELECT person_id
        FROM
          (SELECT distinct_id,
                  argMax(person_id, version) as person_id
           FROM person_distinct_id2
           WHERE team_id = 2
           GROUP BY distinct_id
           HAVING argMax(is_deleted, version) = 0)
        where distinct_id = 'inexistent' )
     ORDER BY argMax(person.created_at, version) DESC, id DESC
     LIMIT 100 SETTINGS optimize_aggregation_in_order = 1) person
  LEFT JOIN
    (SELECT distinct_id,
            argMax(person_id, version) as person_id
     FROM person_distinct_id2
     WHERE team_id = 2
     GROUP BY distinct_id
     HAVING argMax(is_deleted, version) = 0) as pdi ON person.id=pdi.person_id
  GROUP BY person.*
  ORDER BY created_at desc,
           id desc
  '
---
# name: TestPersonFromClickhouse.test_filter_person_prop
  '
  /* user_id:0 request:_snapshot_ */
  SELECT person.*,
         groupArray(pdi.distinct_id) as distinct_ids
  FROM
    (SELECT id,
            argMax(created_at, version) as created_at,
            argMax(is_identified, version) as is_identified,
            argMax(properties, version) as person_props
     FROM person
     WHERE team_id = 2
       AND id IN
         (SELECT id
          FROM person
          WHERE team_id = 2
            AND (has(['some_value'], replaceRegexpAll(JSONExtractRaw(properties, 'some_prop'), '^"|"$', ''))) )
     GROUP BY id
     HAVING max(is_deleted) = 0
     AND argMax(person.created_at, version) < now() + INTERVAL 1 DAY
     AND (has(['some_value'], replaceRegexpAll(JSONExtractRaw(argMax(person.properties, version), 'some_prop'), '^"|"$', '')))
     ORDER BY argMax(person.created_at, version) DESC, id DESC
     LIMIT 100 SETTINGS optimize_aggregation_in_order = 1) person
  LEFT JOIN
    (SELECT distinct_id,
            argMax(person_id, version) as person_id
     FROM person_distinct_id2
     WHERE team_id = 2
     GROUP BY distinct_id
     HAVING argMax(is_deleted, version) = 0) as pdi ON person.id=pdi.person_id
  GROUP BY person.*
  ORDER BY created_at desc,
           id desc
  '
---
# name: TestPersonFromClickhouse.test_person_property_values
  '
  /* user_id:0 request:_snapshot_ */
  SELECT value,
         count(value)
  FROM
    (SELECT replaceRegexpAll(JSONExtractRaw(properties, 'random_prop'), '^"|"$', '') as value
     FROM person
     WHERE team_id = 2
       AND is_deleted = 0
       AND replaceRegexpAll(JSONExtractRaw(properties, 'random_prop'), '^"|"$', '') IS NOT NULL
       AND replaceRegexpAll(JSONExtractRaw(properties, 'random_prop'), '^"|"$', '') != ''
     ORDER BY id DESC
     LIMIT 100000)
  GROUP BY value
  ORDER BY count(value) DESC
  LIMIT 20
  '
---
# name: TestPersonFromClickhouse.test_person_property_values.1
  '
  /* user_id:0 request:_snapshot_ */
  SELECT value,
         count(value)
  FROM
    (SELECT replaceRegexpAll(JSONExtractRaw(properties, 'random_prop'), '^"|"$', '') as value
     FROM person
     WHERE team_id = 2
       AND is_deleted = 0
       AND replaceRegexpAll(JSONExtractRaw(properties, 'random_prop'), '^"|"$', '') ILIKE '%qw%'
     ORDER BY id DESC
     LIMIT 100000)
  GROUP BY value
  ORDER BY count(value) DESC
  LIMIT 20
  '
---
# name: TestPersonFromClickhouse.test_person_property_values_materialized
  '
  /* user_id:0 request:_snapshot_ */
  SELECT value,
         count(value)
  FROM
    (SELECT "pmat_random_prop" as value
     FROM person
     WHERE team_id = 2
       AND is_deleted = 0
       AND "pmat_random_prop" IS NOT NULL
       AND "pmat_random_prop" != ''
     ORDER BY id DESC
     LIMIT 100000)
  GROUP BY value
  ORDER BY count(value) DESC
  LIMIT 20
  '
---
# name: TestPersonFromClickhouse.test_person_property_values_materialized.1
  '
  /* user_id:0 request:_snapshot_ */
  SELECT value,
         count(value)
  FROM
    (SELECT "pmat_random_prop" as value
     FROM person
     WHERE team_id = 2
       AND is_deleted = 0
       AND "pmat_random_prop" ILIKE '%qw%'
     ORDER BY id DESC
     LIMIT 100000)
  GROUP BY value
  ORDER BY count(value) DESC
  LIMIT 20
  '
---
# name: TestPersonFromClickhouse.test_properties
  '
  /* user_id:0 request:_snapshot_ */
  SELECT person.*,
         groupArray(pdi.distinct_id) as distinct_ids
  FROM
    (SELECT id,
            argMax(created_at, version) as created_at,
            argMax(is_identified, version) as is_identified,
            argMax(properties, version) as person_props
     FROM person
     WHERE team_id = 2
       AND id IN
         (SELECT id
          FROM person
          WHERE team_id = 2
            AND (JSONHas(properties, 'email')) )
     GROUP BY id
     HAVING max(is_deleted) = 0
     AND argMax(person.created_at, version) < now() + INTERVAL 1 DAY
     AND (JSONHas(argMax(person.properties, version), 'email'))
     ORDER BY argMax(person.created_at, version) DESC, id DESC
     LIMIT 100 SETTINGS optimize_aggregation_in_order = 1) person
  LEFT JOIN
    (SELECT distinct_id,
            argMax(person_id, version) as person_id
     FROM person_distinct_id2
     WHERE team_id = 2
     GROUP BY distinct_id
     HAVING argMax(is_deleted, version) = 0) as pdi ON person.id=pdi.person_id
  GROUP BY person.*
  ORDER BY created_at desc,
           id desc
  '
---
# name: TestPersonFromClickhouse.test_properties.1
  '
  /* user_id:0 request:_snapshot_ */
  SELECT person.*,
         groupArray(pdi.distinct_id) as distinct_ids
  FROM
    (SELECT id,
            argMax(created_at, version) as created_at,
            argMax(is_identified, version) as is_identified,
            argMax(properties, version) as person_props
     FROM person
     WHERE team_id = 2
       AND id IN
         (SELECT id
          FROM person
          WHERE team_id = 2
            AND (replaceRegexpAll(JSONExtractRaw(properties, 'email'), '^"|"$', '') ILIKE '%another@gm%') )
     GROUP BY id
     HAVING max(is_deleted) = 0
     AND argMax(person.created_at, version) < now() + INTERVAL 1 DAY
     AND (replaceRegexpAll(JSONExtractRaw(argMax(person.properties, version), 'email'), '^"|"$', '') ILIKE '%another@gm%')
     ORDER BY argMax(person.created_at, version) DESC, id DESC
     LIMIT 100 SETTINGS optimize_aggregation_in_order = 1) person
  LEFT JOIN
    (SELECT distinct_id,
            argMax(person_id, version) as person_id
     FROM person_distinct_id2
     WHERE team_id = 2
     GROUP BY distinct_id
     HAVING argMax(is_deleted, version) = 0) as pdi ON person.id=pdi.person_id
  GROUP BY person.*
  ORDER BY created_at desc,
           id desc
  '
---
# name: TestPersonFromClickhouse.test_properties_materialized
  '
  /* user_id:0 request:_snapshot_ */
  SELECT person.*,
         groupArray(pdi.distinct_id) as distinct_ids
  FROM
    (SELECT id,
            argMax(created_at, version) as created_at,
            argMax(is_identified, version) as is_identified,
            argMax(properties, version) as person_props
     FROM person
     WHERE team_id = 2
       AND id IN
         (SELECT id
          FROM person
          WHERE team_id = 2
            AND (notEmpty("pmat_email")) )
     GROUP BY id
     HAVING max(is_deleted) = 0
     AND argMax(person.created_at, version) < now() + INTERVAL 1 DAY
     AND (notEmpty(argMax(person."pmat_email", version)))
     ORDER BY argMax(person.created_at, version) DESC, id DESC
     LIMIT 100 SETTINGS optimize_aggregation_in_order = 1) person
  LEFT JOIN
    (SELECT distinct_id,
            argMax(person_id, version) as person_id
     FROM person_distinct_id2
     WHERE team_id = 2
     GROUP BY distinct_id
     HAVING argMax(is_deleted, version) = 0) as pdi ON person.id=pdi.person_id
  GROUP BY person.*
  ORDER BY created_at desc,
           id desc
  '
---
# name: TestPersonFromClickhouse.test_properties_materialized.1
  '
  /* user_id:0 request:_snapshot_ */
  SELECT person.*,
         groupArray(pdi.distinct_id) as distinct_ids
  FROM
    (SELECT id,
            argMax(created_at, version) as created_at,
            argMax(is_identified, version) as is_identified,
            argMax(properties, version) as person_props
     FROM person
     WHERE team_id = 2
       AND id IN
         (SELECT id
          FROM person
          WHERE team_id = 2
            AND ("pmat_email" ILIKE '%another@gm%') )
     GROUP BY id
     HAVING max(is_deleted) = 0
     AND argMax(person.created_at, version) < now() + INTERVAL 1 DAY
     AND (argMax(person."pmat_email", version) ILIKE '%another@gm%')
     ORDER BY argMax(person.created_at, version) DESC, id DESC
     LIMIT 100 SETTINGS optimize_aggregation_in_order = 1) person
  LEFT JOIN
    (SELECT distinct_id,
            argMax(person_id, version) as person_id
     FROM person_distinct_id2
     WHERE team_id = 2
     GROUP BY distinct_id
     HAVING argMax(is_deleted, version) = 0) as pdi ON person.id=pdi.person_id
  GROUP BY person.*
  ORDER BY created_at desc,
           id desc
  '
---
# name: TestPersonFromClickhouse.test_search
  '
  /* user_id:0 request:_snapshot_ */
  SELECT person.*,
         groupArray(pdi.distinct_id) as distinct_ids
  FROM
    (SELECT id,
            argMax(created_at, version) as created_at,
            argMax(is_identified, version) as is_identified,
            argMax(properties, version) as person_props
     FROM person
     WHERE team_id = 2
       AND id IN
         (SELECT id
          FROM person
          WHERE team_id = 2
            AND ((replaceRegexpAll(JSONExtractRaw(properties, 'email'), '^"|"$', '') ILIKE '%another@gm%')
                 OR id IN
                   (SELECT person_id
                    FROM
                      (SELECT distinct_id,
                              argMax(person_id, version) as person_id
                       FROM person_distinct_id2
                       WHERE team_id = 2
                       GROUP BY distinct_id
                       HAVING argMax(is_deleted, version) = 0)
                    WHERE distinct_id = 'another@gm' )) )
     GROUP BY id
     HAVING max(is_deleted) = 0
     AND argMax(person.created_at, version) < now() + INTERVAL 1 DAY
     AND ((replaceRegexpAll(JSONExtractRaw(argMax(person.properties, version), 'email'), '^"|"$', '') ILIKE '%another@gm%')
          OR id IN
            (SELECT person_id
             FROM
               (SELECT distinct_id,
                       argMax(person_id, version) as person_id
                FROM person_distinct_id2
                WHERE team_id = 2
                GROUP BY distinct_id
                HAVING argMax(is_deleted, version) = 0)
             WHERE distinct_id = 'another@gm' ))
     ORDER BY argMax(person.created_at, version) DESC, id DESC
     LIMIT 100 SETTINGS optimize_aggregation_in_order = 1) person
  LEFT JOIN
    (SELECT distinct_id,
            argMax(person_id, version) as person_id
     FROM person_distinct_id2
     WHERE team_id = 2
     GROUP BY distinct_id
     HAVING argMax(is_deleted, version) = 0) as pdi ON person.id=pdi.person_id
  GROUP BY person.*
  ORDER BY created_at desc,
           id desc
  '
---
# name: TestPersonFromClickhouse.test_search.1
  '
  /* user_id:0 request:_snapshot_ */
  SELECT person.*,
         groupArray(pdi.distinct_id) as distinct_ids
  FROM
    (SELECT id,
            argMax(created_at, version) as created_at,
            argMax(is_identified, version) as is_identified,
            argMax(properties, version) as person_props
     FROM person
     WHERE team_id = 2
       AND id IN
         (SELECT id
          FROM person
          WHERE team_id = 2
            AND ((replaceRegexpAll(JSONExtractRaw(properties, 'email'), '^"|"$', '') ILIKE '%distinct_id_3%')
                 OR id IN
                   (SELECT person_id
                    FROM
                      (SELECT distinct_id,
                              argMax(person_id, version) as person_id
                       FROM person_distinct_id2
                       WHERE team_id = 2
                       GROUP BY distinct_id
                       HAVING argMax(is_deleted, version) = 0)
                    WHERE distinct_id = 'distinct_id_3' )) )
     GROUP BY id
     HAVING max(is_deleted) = 0
     AND argMax(person.created_at, version) < now() + INTERVAL 1 DAY
     AND ((replaceRegexpAll(JSONExtractRaw(argMax(person.properties, version), 'email'), '^"|"$', '') ILIKE '%distinct_id_3%')
          OR id IN
            (SELECT person_id
             FROM
               (SELECT distinct_id,
                       argMax(person_id, version) as person_id
                FROM person_distinct_id2
                WHERE team_id = 2
                GROUP BY distinct_id
                HAVING argMax(is_deleted, version) = 0)
             WHERE distinct_id = 'distinct_id_3' ))
     ORDER BY argMax(person.created_at, version) DESC, id DESC
     LIMIT 100 SETTINGS optimize_aggregation_in_order = 1) person
  LEFT JOIN
    (SELECT distinct_id,
            argMax(person_id, version) as person_id
     FROM person_distinct_id2
     WHERE team_id = 2
     GROUP BY distinct_id
     HAVING argMax(is_deleted, version) = 0) as pdi ON person.id=pdi.person_id
  GROUP BY person.*
  ORDER BY created_at desc,
           id desc
  '
---
# name: TestPersonFromClickhouse.test_search_materialized
  '
  /* user_id:0 request:_snapshot_ */
  SELECT person.*,
         groupArray(pdi.distinct_id) as distinct_ids
  FROM
    (SELECT id,
            argMax(created_at, version) as created_at,
            argMax(is_identified, version) as is_identified,
            argMax(properties, version) as person_props
     FROM person
     WHERE team_id = 2
       AND id IN
         (SELECT id
          FROM person
          WHERE team_id = 2
            AND (("pmat_email" ILIKE '%another@gm%')
                 OR id IN
                   (SELECT person_id
                    FROM
                      (SELECT distinct_id,
                              argMax(person_id, version) as person_id
                       FROM person_distinct_id2
                       WHERE team_id = 2
                       GROUP BY distinct_id
                       HAVING argMax(is_deleted, version) = 0)
                    WHERE distinct_id = 'another@gm' )) )
     GROUP BY id
     HAVING max(is_deleted) = 0
     AND argMax(person.created_at, version) < now() + INTERVAL 1 DAY
     AND ((argMax(person."pmat_email", version) ILIKE '%another@gm%')
          OR id IN
            (SELECT person_id
             FROM
               (SELECT distinct_id,
                       argMax(person_id, version) as person_id
                FROM person_distinct_id2
                WHERE team_id = 2
                GROUP BY distinct_id
                HAVING argMax(is_deleted, version) = 0)
             WHERE distinct_id = 'another@gm' ))
     ORDER BY argMax(person.created_at, version) DESC, id DESC
     LIMIT 100 SETTINGS optimize_aggregation_in_order = 1) person
  LEFT JOIN
    (SELECT distinct_id,
            argMax(person_id, version) as person_id
     FROM person_distinct_id2
     WHERE team_id = 2
     GROUP BY distinct_id
     HAVING argMax(is_deleted, version) = 0) as pdi ON person.id=pdi.person_id
  GROUP BY person.*
  ORDER BY created_at desc,
           id desc
  '
---
# name: TestPersonFromClickhouse.test_search_materialized.1
  '
  /* user_id:0 request:_snapshot_ */
  SELECT person.*,
         groupArray(pdi.distinct_id) as distinct_ids
  FROM
    (SELECT id,
            argMax(created_at, version) as created_at,
            argMax(is_identified, version) as is_identified,
            argMax(properties, version) as person_props
     FROM person
     WHERE team_id = 2
       AND id IN
         (SELECT id
          FROM person
          WHERE team_id = 2
            AND (("pmat_email" ILIKE '%distinct_id_3%')
                 OR id IN
                   (SELECT person_id
                    FROM
                      (SELECT distinct_id,
                              argMax(person_id, version) as person_id
                       FROM person_distinct_id2
                       WHERE team_id = 2
                       GROUP BY distinct_id
                       HAVING argMax(is_deleted, version) = 0)
                    WHERE distinct_id = 'distinct_id_3' )) )
     GROUP BY id
     HAVING max(is_deleted) = 0
     AND argMax(person.created_at, version) < now() + INTERVAL 1 DAY
     AND ((argMax(person."pmat_email", version) ILIKE '%distinct_id_3%')
          OR id IN
            (SELECT person_id
             FROM
               (SELECT distinct_id,
                       argMax(person_id, version) as person_id
                FROM person_distinct_id2
                WHERE team_id = 2
                GROUP BY distinct_id
                HAVING argMax(is_deleted, version) = 0)
             WHERE distinct_id = 'distinct_id_3' ))
     ORDER BY argMax(person.created_at, version) DESC, id DESC
     LIMIT 100 SETTINGS optimize_aggregation_in_order = 1) person
  LEFT JOIN
    (SELECT distinct_id,
            argMax(person_id, version) as person_id
     FROM person_distinct_id2
     WHERE team_id = 2
     GROUP BY distinct_id
     HAVING argMax(is_deleted, version) = 0) as pdi ON person.id=pdi.person_id
  GROUP BY person.*
  ORDER BY created_at desc,
           id desc
  '
---
# name: TestPersonFromClickhouse.test_search_person_id
  '
  /* user_id:0 request:_snapshot_ */
  SELECT person.*,
         groupArray(pdi.distinct_id) as distinct_ids
  FROM
    (SELECT id,
            argMax(created_at, version) as created_at,
            argMax(is_identified, version) as is_identified,
            argMax(properties, version) as person_props
     FROM person
     WHERE team_id = 2
       AND id IN
         (SELECT id
          FROM person
          WHERE team_id = 2
            AND ((replaceRegexpAll(JSONExtractRaw(properties, 'email'), '^"|"$', '') ILIKE '%00000000-0000-4000-8000-000000000000%')
                 OR (id = '00000000-0000-4000-8000-000000000000'
                     OR id IN
                       (SELECT person_id
                        FROM
                          (SELECT distinct_id,
                                  argMax(person_id, version) as person_id
                           FROM person_distinct_id2
                           WHERE team_id = 2
                           GROUP BY distinct_id
                           HAVING argMax(is_deleted, version) = 0)
                        WHERE distinct_id = '00000000-0000-4000-8000-000000000000' ))) )
     GROUP BY id
     HAVING max(is_deleted) = 0
     AND argMax(person.created_at, version) < now() + INTERVAL 1 DAY
     AND ((replaceRegexpAll(JSONExtractRaw(argMax(person.properties, version), 'email'), '^"|"$', '') ILIKE '%00000000-0000-4000-8000-000000000000%')
          OR (id = '00000000-0000-4000-8000-000000000000'
              OR id IN
                (SELECT person_id
                 FROM
                   (SELECT distinct_id,
                           argMax(person_id, version) as person_id
                    FROM person_distinct_id2
                    WHERE team_id = 2
                    GROUP BY distinct_id
                    HAVING argMax(is_deleted, version) = 0)
                 WHERE distinct_id = '00000000-0000-4000-8000-000000000000' )))
     ORDER BY argMax(person.created_at, version) DESC, id DESC
     LIMIT 100 SETTINGS optimize_aggregation_in_order = 1) person
  LEFT JOIN
    (SELECT distinct_id,
            argMax(person_id, version) as person_id
     FROM person_distinct_id2
     WHERE team_id = 2
     GROUP BY distinct_id
     HAVING argMax(is_deleted, version) = 0) as pdi ON person.id=pdi.person_id
  GROUP BY person.*
  ORDER BY created_at desc,
           id desc
  '
---
# name: TestPersonFromClickhouse.test_search_person_id_materialized
  '
  /* user_id:0 request:_snapshot_ */
  SELECT person.*,
         groupArray(pdi.distinct_id) as distinct_ids
  FROM
    (SELECT id,
            argMax(created_at, version) as created_at,
            argMax(is_identified, version) as is_identified,
            argMax(properties, version) as person_props
     FROM person
     WHERE team_id = 2
       AND id IN
         (SELECT id
          FROM person
          WHERE team_id = 2
            AND (("pmat_email" ILIKE '%00000000-0000-4000-8000-000000000000%')
                 OR (id = '00000000-0000-4000-8000-000000000000'
                     OR id IN
                       (SELECT person_id
                        FROM
                          (SELECT distinct_id,
                                  argMax(person_id, version) as person_id
                           FROM person_distinct_id2
                           WHERE team_id = 2
                           GROUP BY distinct_id
                           HAVING argMax(is_deleted, version) = 0)
                        WHERE distinct_id = '00000000-0000-4000-8000-000000000000' ))) )
     GROUP BY id
     HAVING max(is_deleted) = 0
     AND argMax(person.created_at, version) < now() + INTERVAL 1 DAY
     AND ((argMax(person."pmat_email", version) ILIKE '%00000000-0000-4000-8000-000000000000%')
          OR (id = '00000000-0000-4000-8000-000000000000'
              OR id IN
                (SELECT person_id
                 FROM
                   (SELECT distinct_id,
                           argMax(person_id, version) as person_id
                    FROM person_distinct_id2
                    WHERE team_id = 2
                    GROUP BY distinct_id
                    HAVING argMax(is_deleted, version) = 0)
                 WHERE distinct_id = '00000000-0000-4000-8000-000000000000' )))
     ORDER BY argMax(person.created_at, version) DESC, id DESC
     LIMIT 100 SETTINGS optimize_aggregation_in_order = 1) person
  LEFT JOIN
    (SELECT distinct_id,
            argMax(person_id, version) as person_id
     FROM person_distinct_id2
     WHERE team_id = 2
     GROUP BY distinct_id
     HAVING argMax(is_deleted, version) = 0) as pdi ON person.id=pdi.person_id
  GROUP BY person.*
  ORDER BY created_at desc,
           id desc
  '
---
