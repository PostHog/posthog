# serializer version: 1
# name: TestInsight.test_insight_funnels_hogql_breakdown
  '''
  /* user_id:0 request:_snapshot_ */
  SELECT countIf(ifNull(equals(steps, 1), 0)) AS step_1,
         countIf(ifNull(equals(steps, 2), 0)) AS step_2,
         avg(step_1_average_conversion_time_inner) AS step_1_average_conversion_time,
         median(step_1_median_conversion_time_inner) AS step_1_median_conversion_time,
         prop AS prop
  FROM
    (SELECT aggregation_target AS aggregation_target,
            steps AS steps,
            prop AS prop,
            prop AS prop,
            avg(step_1_conversion_time) AS step_1_average_conversion_time_inner,
            median(step_1_conversion_time) AS step_1_median_conversion_time_inner
     FROM
       (SELECT aggregation_target AS aggregation_target,
               steps AS steps,
               prop AS prop,
               max(steps) OVER (PARTITION BY aggregation_target,
                                             prop) AS max_steps,
                               step_1_conversion_time AS step_1_conversion_time,
                               prop AS prop
        FROM
          (SELECT aggregation_target AS aggregation_target,
                  timestamp AS timestamp,
                  step_0 AS step_0,
                  latest_0 AS latest_0,
                  step_1 AS step_1,
                  latest_1 AS latest_1,
                  prop AS prop,
                  if(and(ifNull(lessOrEquals(latest_0, latest_1), 0), ifNull(lessOrEquals(latest_1, plus(toTimeZone(latest_0, 'UTC'), toIntervalDay(14))), 0)), 2, 1) AS steps,
                  if(and(isNotNull(latest_1), ifNull(lessOrEquals(latest_1, plus(toTimeZone(latest_0, 'UTC'), toIntervalDay(14))), 0)), dateDiff('second', latest_0, latest_1), NULL) AS step_1_conversion_time,
                  prop AS prop
           FROM
             (SELECT aggregation_target AS aggregation_target,
                     timestamp AS timestamp,
                     step_0 AS step_0,
                     latest_0 AS latest_0,
                     step_1 AS step_1,
                     min(latest_1) OVER (PARTITION BY aggregation_target,
                                                      prop
                                         ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) AS latest_1,
                                        prop AS prop
              FROM
                (SELECT timestamp AS timestamp,
                        aggregation_target AS aggregation_target,
                        step_0 AS step_0,
                        latest_0 AS latest_0,
                        step_1 AS step_1,
                        latest_1 AS latest_1,
                        prop_basic AS prop_basic,
                        prop,
                        prop_vals AS prop_vals,
                        if(notEmpty(arrayFilter(x -> notEmpty(x), prop_vals)), prop_vals, ['']) AS prop
                 FROM
                   (SELECT toTimeZone(e.timestamp, 'UTC') AS timestamp,
                           if(not(empty(e__override.distinct_id)), e__override.person_id, e.person_id) AS aggregation_target,
                           if(equals(e.event, 'user signed up'), 1, 0) AS step_0,
                           if(ifNull(equals(step_0, 1), 0), timestamp, NULL) AS latest_0,
                           if(equals(e.event, 'user did things'), 1, 0) AS step_1,
                           if(ifNull(equals(step_1, 1), 0), timestamp, NULL) AS latest_1,
                           ([e__person.properties___fish] AS value) AS prop_basic,
                           prop_basic AS prop,
                           argMinIf(prop, timestamp, notEmpty(arrayFilter(x -> notEmpty(x), prop))) OVER (PARTITION BY aggregation_target) AS prop_vals
                    FROM events AS e
                    LEFT OUTER JOIN
                      (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                              person_distinct_id_overrides.distinct_id AS distinct_id
                       FROM person_distinct_id_overrides
                       WHERE equals(person_distinct_id_overrides.team_id, 99999)
                       GROUP BY person_distinct_id_overrides.distinct_id
                       HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS e__override ON equals(e.distinct_id, e__override.distinct_id)
                    LEFT JOIN
                      (SELECT person.id AS id,
                              replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(person.properties, 'fish'), ''), 'null'), '^"|"$', '') AS properties___fish
                       FROM person
                       WHERE and(equals(person.team_id, 99999), ifNull(in(tuple(person.id, person.version),
                                                                            (SELECT person.id AS id, max(person.version) AS version
                                                                             FROM person
                                                                             WHERE equals(person.team_id, 99999)
                                                                             GROUP BY person.id
                                                                             HAVING and(ifNull(equals(argMax(person.is_deleted, person.version), 0), 0), ifNull(less(argMax(toTimeZone(person.created_at, 'UTC'), person.version), plus(now64(6, 'UTC'), toIntervalDay(1))), 0)))), 0)) SETTINGS optimize_aggregation_in_order=1) AS e__person ON equals(if(not(empty(e__override.distinct_id)), e__override.person_id, e.person_id), e__person.id)
                    WHERE and(equals(e.team_id, 99999), and(and(greaterOrEquals(toTimeZone(e.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(e.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.999999', 6, 'UTC'))), in(e.event, tuple('user did things', 'user signed up')), and(ifNull(less(accurateCastOrNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(e.properties, 'int_value'), ''), 'null'), '^"|"$', ''), 'Int64'), 10), 0), 1)), or(ifNull(equals(step_0, 1), 0), ifNull(equals(step_1, 1), 0))))))
           WHERE ifNull(equals(step_0, 1), 0)))
     GROUP BY aggregation_target,
              steps,
              prop
     HAVING ifNull(equals(steps, max(max_steps)), isNull(steps)
                   and isNull(max(max_steps))))
  GROUP BY prop
  LIMIT 100 SETTINGS readonly=2,
                     max_execution_time=60,
                     allow_experimental_object_type=1,
                     format_csv_allow_double_quotes=0,
                     max_ast_elements=4000000,
                     max_expanded_ast_elements=4000000,
                     max_bytes_before_external_group_by=23622320128,
                     allow_experimental_analyzer=1
  '''
# ---
# name: TestInsight.test_insight_funnels_hogql_breakdown.1
  '''
  /* user_id:0 request:_snapshot_ */
  SELECT countIf(steps = 1) step_1,
         countIf(steps = 2) step_2,
         avg(step_1_average_conversion_time_inner) step_1_average_conversion_time,
         median(step_1_median_conversion_time_inner) step_1_median_conversion_time,
         prop
  FROM
    (SELECT aggregation_target,
            steps,
            avg(step_1_conversion_time) step_1_average_conversion_time_inner,
            median(step_1_conversion_time) step_1_median_conversion_time_inner ,
            prop
     FROM
       (SELECT aggregation_target,
               steps,
               max(steps) over (PARTITION BY aggregation_target,
                                             prop) as max_steps,
                               step_1_conversion_time ,
                               prop
        FROM
          (SELECT *,
                  if(latest_0 <= latest_1
                     AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                  if(isNotNull(latest_1)
                     AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time,
                  prop
           FROM
             (SELECT aggregation_target, timestamp, step_0,
                                                    latest_0,
                                                    step_1,
                                                    min(latest_1) over (PARTITION by aggregation_target,
                                                                                     prop
                                                                        ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1 ,
                                                                       prop
              FROM
                (SELECT *,
                        if(notEmpty(arrayFilter(x -> notEmpty(x), prop_vals)), prop_vals, ['']) as prop
                 FROM
                   (SELECT e.timestamp as timestamp,
                           if(notEmpty(pdi.distinct_id), pdi.person_id, e.person_id) as aggregation_target,
                           if(notEmpty(pdi.distinct_id), pdi.person_id, e.person_id) as person_id,
                           person.person_props as person_props,
                           if(event = 'user signed up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'user did things', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1,
                           array(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(person_props, 'fish'), ''), 'null'), '^"|"$', '')) AS prop_basic,
                           prop_basic as prop,
                           argMinIf(prop, timestamp, notEmpty(arrayFilter(x -> notEmpty(x), prop))) over (PARTITION by aggregation_target) as prop_vals
                    FROM events e
                    LEFT OUTER JOIN
                      (SELECT distinct_id,
                              argMax(person_id, version) as person_id
                       FROM person_distinct_id2
                       WHERE team_id = 99999
                         AND distinct_id IN
                           (SELECT distinct_id
                            FROM events
                            WHERE team_id = 99999
                              AND event IN ['user did things', 'user signed up']
                              AND toTimeZone(timestamp, 'UTC') >= toDateTime('2012-01-08 00:00:00', 'UTC')
                              AND toTimeZone(timestamp, 'UTC') <= toDateTime('2012-01-15 23:59:59', 'UTC') )
                       GROUP BY distinct_id
                       HAVING argMax(is_deleted, version) = 0) AS pdi ON e.distinct_id = pdi.distinct_id
                    INNER JOIN
                      (SELECT id,
                              argMax(properties, version) as person_props
                       FROM person
                       WHERE team_id = 99999
                       GROUP BY id
                       HAVING max(is_deleted) = 0 SETTINGS optimize_aggregation_in_order = 1) person ON person.id = pdi.person_id
                    WHERE team_id = 99999
                      AND event IN ['user did things', 'user signed up']
                      AND toTimeZone(timestamp, 'UTC') >= toDateTime('2012-01-08 00:00:00', 'UTC')
                      AND toTimeZone(timestamp, 'UTC') <= toDateTime('2012-01-15 23:59:59', 'UTC')
                      AND (and(ifNull(less(accurateCastOrNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(properties, 'int_value'), ''), 'null'), '^"|"$', ''), 'Int64'), 10), 0), 1))
                      AND (step_0 = 1
                           OR step_1 = 1) )))
           WHERE step_0 = 1 ))
     GROUP BY aggregation_target,
              steps,
              prop
     HAVING steps = max(max_steps))
  GROUP BY prop
  '''
# ---
# name: TestInsight.test_insight_funnels_hogql_global_filters
  '''
  /* user_id:0 request:_snapshot_ */
  SELECT countIf(ifNull(equals(steps, 1), 0)) AS step_1,
         countIf(ifNull(equals(steps, 2), 0)) AS step_2,
         avg(step_1_average_conversion_time_inner) AS step_1_average_conversion_time,
         median(step_1_median_conversion_time_inner) AS step_1_median_conversion_time
  FROM
    (SELECT aggregation_target AS aggregation_target,
            steps AS steps,
            avg(step_1_conversion_time) AS step_1_average_conversion_time_inner,
            median(step_1_conversion_time) AS step_1_median_conversion_time_inner
     FROM
       (SELECT aggregation_target AS aggregation_target,
               steps AS steps,
               max(steps) OVER (PARTITION BY aggregation_target) AS max_steps,
                               step_1_conversion_time AS step_1_conversion_time
        FROM
          (SELECT aggregation_target AS aggregation_target,
                  timestamp AS timestamp,
                  step_0 AS step_0,
                  latest_0 AS latest_0,
                  step_1 AS step_1,
                  latest_1 AS latest_1,
                  if(and(ifNull(lessOrEquals(latest_0, latest_1), 0), ifNull(lessOrEquals(latest_1, plus(toTimeZone(latest_0, 'UTC'), toIntervalDay(14))), 0)), 2, 1) AS steps,
                  if(and(isNotNull(latest_1), ifNull(lessOrEquals(latest_1, plus(toTimeZone(latest_0, 'UTC'), toIntervalDay(14))), 0)), dateDiff('second', latest_0, latest_1), NULL) AS step_1_conversion_time
           FROM
             (SELECT aggregation_target AS aggregation_target,
                     timestamp AS timestamp,
                     step_0 AS step_0,
                     latest_0 AS latest_0,
                     step_1 AS step_1,
                     min(latest_1) OVER (PARTITION BY aggregation_target
                                         ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) AS latest_1
              FROM
                (SELECT toTimeZone(e.timestamp, 'UTC') AS timestamp,
                        if(not(empty(e__override.distinct_id)), e__override.person_id, e.person_id) AS aggregation_target,
                        if(equals(e.event, 'user signed up'), 1, 0) AS step_0,
                        if(ifNull(equals(step_0, 1), 0), timestamp, NULL) AS latest_0,
                        if(equals(e.event, 'user did things'), 1, 0) AS step_1,
                        if(ifNull(equals(step_1, 1), 0), timestamp, NULL) AS latest_1
                 FROM events AS e
                 LEFT OUTER JOIN
                   (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                           person_distinct_id_overrides.distinct_id AS distinct_id
                    FROM person_distinct_id_overrides
                    WHERE equals(person_distinct_id_overrides.team_id, 99999)
                    GROUP BY person_distinct_id_overrides.distinct_id
                    HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS e__override ON equals(e.distinct_id, e__override.distinct_id)
                 LEFT JOIN
                   (SELECT person.id AS id,
                           replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(person.properties, 'fish'), ''), 'null'), '^"|"$', '') AS properties___fish
                    FROM person
                    WHERE and(equals(person.team_id, 99999), ifNull(in(tuple(person.id, person.version),
                                                                         (SELECT person.id AS id, max(person.version) AS version
                                                                          FROM person
                                                                          WHERE equals(person.team_id, 99999)
                                                                          GROUP BY person.id
                                                                          HAVING and(ifNull(equals(argMax(person.is_deleted, person.version), 0), 0), ifNull(less(argMax(toTimeZone(person.created_at, 'UTC'), person.version), plus(now64(6, 'UTC'), toIntervalDay(1))), 0)))), 0)) SETTINGS optimize_aggregation_in_order=1) AS e__person ON equals(if(not(empty(e__override.distinct_id)), e__override.person_id, e.person_id), e__person.id)
                 WHERE and(equals(e.team_id, 99999), and(and(greaterOrEquals(toTimeZone(e.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(e.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.999999', 6, 'UTC'))), in(e.event, tuple('user did things', 'user signed up')), and(and(ifNull(less(accurateCastOrNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(e.properties, 'int_value'), ''), 'null'), '^"|"$', ''), 'Int64'), 10), 0), 1), ifNull(like(e__person.properties___fish, '%fish%'), 0))), or(ifNull(equals(step_0, 1), 0), ifNull(equals(step_1, 1), 0)))))
           WHERE ifNull(equals(step_0, 1), 0)))
     GROUP BY aggregation_target,
              steps
     HAVING ifNull(equals(steps, max(max_steps)), isNull(steps)
                   and isNull(max(max_steps))))
  LIMIT 100 SETTINGS readonly=2,
                     max_execution_time=60,
                     allow_experimental_object_type=1,
                     format_csv_allow_double_quotes=0,
                     max_ast_elements=4000000,
                     max_expanded_ast_elements=4000000,
                     max_bytes_before_external_group_by=23622320128,
                     allow_experimental_analyzer=1
  '''
# ---
# name: TestInsight.test_insight_funnels_hogql_local_filters
  '''
  /* user_id:0 request:_snapshot_ */
  SELECT countIf(ifNull(equals(steps, 1), 0)) AS step_1,
         countIf(ifNull(equals(steps, 2), 0)) AS step_2,
         avg(step_1_average_conversion_time_inner) AS step_1_average_conversion_time,
         median(step_1_median_conversion_time_inner) AS step_1_median_conversion_time
  FROM
    (SELECT aggregation_target AS aggregation_target,
            steps AS steps,
            avg(step_1_conversion_time) AS step_1_average_conversion_time_inner,
            median(step_1_conversion_time) AS step_1_median_conversion_time_inner
     FROM
       (SELECT aggregation_target AS aggregation_target,
               steps AS steps,
               max(steps) OVER (PARTITION BY aggregation_target) AS max_steps,
                               step_1_conversion_time AS step_1_conversion_time
        FROM
          (SELECT aggregation_target AS aggregation_target,
                  timestamp AS timestamp,
                  step_0 AS step_0,
                  latest_0 AS latest_0,
                  step_1 AS step_1,
                  latest_1 AS latest_1,
                  if(and(ifNull(lessOrEquals(latest_0, latest_1), 0), ifNull(lessOrEquals(latest_1, plus(toTimeZone(latest_0, 'UTC'), toIntervalDay(14))), 0)), 2, 1) AS steps,
                  if(and(isNotNull(latest_1), ifNull(lessOrEquals(latest_1, plus(toTimeZone(latest_0, 'UTC'), toIntervalDay(14))), 0)), dateDiff('second', latest_0, latest_1), NULL) AS step_1_conversion_time
           FROM
             (SELECT aggregation_target AS aggregation_target,
                     timestamp AS timestamp,
                     step_0 AS step_0,
                     latest_0 AS latest_0,
                     step_1 AS step_1,
                     min(latest_1) OVER (PARTITION BY aggregation_target
                                         ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) AS latest_1
              FROM
                (SELECT toTimeZone(e.timestamp, 'UTC') AS timestamp,
                        if(not(empty(e__override.distinct_id)), e__override.person_id, e.person_id) AS aggregation_target,
                        if(and(equals(e.event, 'user signed up'), and(and(ifNull(less(accurateCastOrNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(e.properties, 'int_value'), ''), 'null'), '^"|"$', ''), 'Int64'), 10), 0), 1), ifNull(like(e__person.properties___fish, '%fish%'), 0))), 1, 0) AS step_0,
                        if(ifNull(equals(step_0, 1), 0), timestamp, NULL) AS latest_0,
                        if(and(equals(e.event, 'user did things'), and(and(ifNull(less(accurateCastOrNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(e.properties, 'int_value'), ''), 'null'), '^"|"$', ''), 'Int64'), 10), 0), 1), ifNull(like(e__person.properties___fish, '%fish%'), 0))), 1, 0) AS step_1,
                        if(ifNull(equals(step_1, 1), 0), timestamp, NULL) AS latest_1
                 FROM events AS e
                 LEFT OUTER JOIN
                   (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                           person_distinct_id_overrides.distinct_id AS distinct_id
                    FROM person_distinct_id_overrides
                    WHERE equals(person_distinct_id_overrides.team_id, 99999)
                    GROUP BY person_distinct_id_overrides.distinct_id
                    HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS e__override ON equals(e.distinct_id, e__override.distinct_id)
                 LEFT JOIN
                   (SELECT person.id AS id,
                           replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(person.properties, 'fish'), ''), 'null'), '^"|"$', '') AS properties___fish
                    FROM person
                    WHERE and(equals(person.team_id, 99999), ifNull(in(tuple(person.id, person.version),
                                                                         (SELECT person.id AS id, max(person.version) AS version
                                                                          FROM person
                                                                          WHERE equals(person.team_id, 99999)
                                                                          GROUP BY person.id
                                                                          HAVING and(ifNull(equals(argMax(person.is_deleted, person.version), 0), 0), ifNull(less(argMax(toTimeZone(person.created_at, 'UTC'), person.version), plus(now64(6, 'UTC'), toIntervalDay(1))), 0)))), 0)) SETTINGS optimize_aggregation_in_order=1) AS e__person ON equals(if(not(empty(e__override.distinct_id)), e__override.person_id, e.person_id), e__person.id)
                 WHERE and(equals(e.team_id, 99999), and(and(greaterOrEquals(toTimeZone(e.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.000000', 6, 'UTC')), lessOrEquals(toTimeZone(e.timestamp, 'UTC'), toDateTime64('explicit_redacted_timestamp.999999', 6, 'UTC'))), in(e.event, tuple('user did things', 'user signed up'))), or(ifNull(equals(step_0, 1), 0), ifNull(equals(step_1, 1), 0)))))
           WHERE ifNull(equals(step_0, 1), 0)))
     GROUP BY aggregation_target,
              steps
     HAVING ifNull(equals(steps, max(max_steps)), isNull(steps)
                   and isNull(max(max_steps))))
  LIMIT 100 SETTINGS readonly=2,
                     max_execution_time=60,
                     allow_experimental_object_type=1,
                     format_csv_allow_double_quotes=0,
                     max_ast_elements=4000000,
                     max_expanded_ast_elements=4000000,
                     max_bytes_before_external_group_by=23622320128,
                     allow_experimental_analyzer=1
  '''
# ---
# name: TestInsight.test_insight_trend_hogql_breakdown
  '''
  /* user_id:0 request:_snapshot_ */
  SELECT groupArray(1)(date)[1] AS date,
                      arrayFold((acc, x) -> arrayMap(i -> plus(acc[i], x[i]), range(1, plus(length(date), 1))), groupArray(ifNull(total, 0)), arrayWithConstant(length(date), reinterpretAsFloat64(0))) AS total,
                      if(ifNull(ifNull(greaterOrEquals(row_number, 25), 0), 0), '$$_posthog_breakdown_other_$$', breakdown_value) AS breakdown_value
  FROM
    (SELECT arrayMap(number -> plus(toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2012-01-08 00:00:00', 6, 'UTC'))), toIntervalDay(number)), range(0, plus(coalesce(dateDiff('day', toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2012-01-08 00:00:00', 6, 'UTC'))), toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2012-01-15 23:59:59', 6, 'UTC'))))), 1))) AS date,
            arrayMap(_match_date -> arraySum(arraySlice(groupArray(ifNull(count, 0)), indexOf(groupArray(day_start) AS _days_for_count, _match_date) AS _index, plus(minus(arrayLastIndex(x -> ifNull(equals(x, _match_date), isNull(x)
                                                                                                                                                                                                      and isNull(_match_date)), _days_for_count), _index), 1))), date) AS total,
            breakdown_value AS breakdown_value,
            rowNumberInAllBlocks() AS row_number
     FROM
       (SELECT sum(total) AS count,
               day_start AS day_start,
               breakdown_value AS breakdown_value
        FROM
          (SELECT count() AS total,
                  toStartOfDay(toTimeZone(e.timestamp, 'UTC')) AS day_start,
                  ifNull(nullIf(toString(if(ifNull(less(accurateCastOrNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(e.properties, 'int_value'), ''), 'null'), '^"|"$', ''), 'Int64'), 10), 0), 'le%ss', 'more')), ''), '$$_posthog_breakdown_null_$$') AS breakdown_value
           FROM events AS e SAMPLE 1
           WHERE and(equals(e.team_id, 99999), greaterOrEquals(toTimeZone(e.timestamp, 'UTC'), toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2012-01-08 00:00:00', 6, 'UTC')))), lessOrEquals(toTimeZone(e.timestamp, 'UTC'), assumeNotNull(parseDateTime64BestEffortOrNull('2012-01-15 23:59:59', 6, 'UTC'))), equals(e.event, '$pageview'))
           GROUP BY day_start,
                    breakdown_value)
        GROUP BY day_start,
                 breakdown_value
        ORDER BY day_start ASC, breakdown_value ASC)
     GROUP BY breakdown_value
     ORDER BY if(ifNull(equals(breakdown_value, '$$_posthog_breakdown_other_$$'), 0), 2, if(ifNull(equals(breakdown_value, '$$_posthog_breakdown_null_$$'), 0), 1, 0)) ASC, arraySum(total) DESC, breakdown_value ASC)
  WHERE isNotNull(breakdown_value)
  GROUP BY breakdown_value
  ORDER BY if(ifNull(equals(breakdown_value, '$$_posthog_breakdown_other_$$'), 0), 2, if(ifNull(equals(breakdown_value, '$$_posthog_breakdown_null_$$'), 0), 1, 0)) ASC, arraySum(total) DESC, breakdown_value ASC
  LIMIT 50000 SETTINGS readonly=2,
                       max_execution_time=60,
                       allow_experimental_object_type=1,
                       format_csv_allow_double_quotes=0,
                       max_ast_elements=4000000,
                       max_expanded_ast_elements=4000000,
                       max_bytes_before_external_group_by=0
  '''
# ---
# name: TestInsight.test_insight_trend_hogql_breakdown.1
  '''
  /* user_id:0 request:_snapshot_ */
  SELECT groupArray(day_start) as date,
         groupArray(count) AS total,
         breakdown_value
  FROM
    (SELECT SUM(total) as count,
            day_start,
            breakdown_value
     FROM
       (SELECT *
        FROM
          (SELECT toUInt16(0) AS total,
                  ticks.day_start as day_start,
                  breakdown_value
           FROM
             (SELECT toStartOfDay(toDateTime('2012-01-15 23:59:59', 'UTC')) - toIntervalDay(number) as day_start
              FROM numbers(8)
              UNION ALL SELECT toStartOfDay(toDateTime('2012-01-08 00:00:00', 'UTC')) as day_start) as ticks
           CROSS JOIN
             (SELECT breakdown_value
              FROM
                (SELECT ['more', 'le%ss'] as breakdown_value) ARRAY
              JOIN breakdown_value) as sec
           ORDER BY breakdown_value,
                    day_start
           UNION ALL SELECT count(*) as total,
                            toStartOfDay(toTimeZone(toDateTime(timestamp, 'UTC'), 'UTC')) as day_start,
                            transform(ifNull(nullIf(if(ifNull(less(accurateCastOrNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(properties, 'int_value'), ''), 'null'), '^"|"$', ''), 'Int64'), 10), 0), 'le%ss', 'more'), ''), '$$_posthog_breakdown_null_$$'), (['more', 'le%ss']), (['more', 'le%ss']), '$$_posthog_breakdown_other_$$') as breakdown_value
           FROM events e
           WHERE e.team_id = 99999
             AND event = '$pageview'
             AND toTimeZone(timestamp, 'UTC') >= toDateTime(toStartOfDay(toDateTime('2012-01-08 00:00:00', 'UTC')), 'UTC')
             AND toTimeZone(timestamp, 'UTC') <= toDateTime('2012-01-15 23:59:59', 'UTC')
           GROUP BY day_start,
                    breakdown_value))
     GROUP BY day_start,
              breakdown_value
     ORDER BY breakdown_value,
              day_start)
  GROUP BY breakdown_value
  ORDER BY breakdown_value
  '''
# ---
# name: TestInsight.test_insight_trend_hogql_breakdown_materialized
  '''
  /* user_id:0 request:_snapshot_ */
  SELECT groupArray(1)(date)[1] AS date,
                      arrayFold((acc, x) -> arrayMap(i -> plus(acc[i], x[i]), range(1, plus(length(date), 1))), groupArray(ifNull(total, 0)), arrayWithConstant(length(date), reinterpretAsFloat64(0))) AS total,
                      if(ifNull(ifNull(greaterOrEquals(row_number, 25), 0), 0), '$$_posthog_breakdown_other_$$', breakdown_value) AS breakdown_value
  FROM
    (SELECT arrayMap(number -> plus(toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2012-01-08 00:00:00', 6, 'UTC'))), toIntervalDay(number)), range(0, plus(coalesce(dateDiff('day', toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2012-01-08 00:00:00', 6, 'UTC'))), toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2012-01-15 23:59:59', 6, 'UTC'))))), 1))) AS date,
            arrayMap(_match_date -> arraySum(arraySlice(groupArray(ifNull(count, 0)), indexOf(groupArray(day_start) AS _days_for_count, _match_date) AS _index, plus(minus(arrayLastIndex(x -> ifNull(equals(x, _match_date), isNull(x)
                                                                                                                                                                                                      and isNull(_match_date)), _days_for_count), _index), 1))), date) AS total,
            breakdown_value AS breakdown_value,
            rowNumberInAllBlocks() AS row_number
     FROM
       (SELECT sum(total) AS count,
               day_start AS day_start,
               breakdown_value AS breakdown_value
        FROM
          (SELECT count() AS total,
                  toStartOfDay(toTimeZone(e.timestamp, 'UTC')) AS day_start,
                  ifNull(nullIf(toString(if(ifNull(less(accurateCastOrNull(nullIf(nullIf(e.mat_int_value, ''), 'null'), 'Int64'), 10), 0), 'le%ss', 'more')), ''), '$$_posthog_breakdown_null_$$') AS breakdown_value
           FROM events AS e SAMPLE 1
           WHERE and(equals(e.team_id, 99999), greaterOrEquals(toTimeZone(e.timestamp, 'UTC'), toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2012-01-08 00:00:00', 6, 'UTC')))), lessOrEquals(toTimeZone(e.timestamp, 'UTC'), assumeNotNull(parseDateTime64BestEffortOrNull('2012-01-15 23:59:59', 6, 'UTC'))), equals(e.event, '$pageview'))
           GROUP BY day_start,
                    breakdown_value)
        GROUP BY day_start,
                 breakdown_value
        ORDER BY day_start ASC, breakdown_value ASC)
     GROUP BY breakdown_value
     ORDER BY if(ifNull(equals(breakdown_value, '$$_posthog_breakdown_other_$$'), 0), 2, if(ifNull(equals(breakdown_value, '$$_posthog_breakdown_null_$$'), 0), 1, 0)) ASC, arraySum(total) DESC, breakdown_value ASC)
  WHERE isNotNull(breakdown_value)
  GROUP BY breakdown_value
  ORDER BY if(ifNull(equals(breakdown_value, '$$_posthog_breakdown_other_$$'), 0), 2, if(ifNull(equals(breakdown_value, '$$_posthog_breakdown_null_$$'), 0), 1, 0)) ASC, arraySum(total) DESC, breakdown_value ASC
  LIMIT 50000 SETTINGS readonly=2,
                       max_execution_time=60,
                       allow_experimental_object_type=1,
                       format_csv_allow_double_quotes=0,
                       max_ast_elements=4000000,
                       max_expanded_ast_elements=4000000,
                       max_bytes_before_external_group_by=0
  '''
# ---
# name: TestInsight.test_insight_trend_hogql_breakdown_materialized.1
  '''
  /* user_id:0 request:_snapshot_ */
  SELECT groupArray(day_start) as date,
         groupArray(count) AS total,
         breakdown_value
  FROM
    (SELECT SUM(total) as count,
            day_start,
            breakdown_value
     FROM
       (SELECT *
        FROM
          (SELECT toUInt16(0) AS total,
                  ticks.day_start as day_start,
                  breakdown_value
           FROM
             (SELECT toStartOfDay(toDateTime('2012-01-15 23:59:59', 'UTC')) - toIntervalDay(number) as day_start
              FROM numbers(8)
              UNION ALL SELECT toStartOfDay(toDateTime('2012-01-08 00:00:00', 'UTC')) as day_start) as ticks
           CROSS JOIN
             (SELECT breakdown_value
              FROM
                (SELECT ['more', 'le%ss'] as breakdown_value) ARRAY
              JOIN breakdown_value) as sec
           ORDER BY breakdown_value,
                    day_start
           UNION ALL SELECT count(*) as total,
                            toStartOfDay(toTimeZone(toDateTime(timestamp, 'UTC'), 'UTC')) as day_start,
                            transform(ifNull(nullIf(if(ifNull(less(accurateCastOrNull(nullIf(nullIf(events.mat_int_value, ''), 'null'), 'Int64'), 10), 0), 'le%ss', 'more'), ''), '$$_posthog_breakdown_null_$$'), (['more', 'le%ss']), (['more', 'le%ss']), '$$_posthog_breakdown_other_$$') as breakdown_value
           FROM events e
           WHERE e.team_id = 99999
             AND event = '$pageview'
             AND toTimeZone(timestamp, 'UTC') >= toDateTime(toStartOfDay(toDateTime('2012-01-08 00:00:00', 'UTC')), 'UTC')
             AND toTimeZone(timestamp, 'UTC') <= toDateTime('2012-01-15 23:59:59', 'UTC')
           GROUP BY day_start,
                    breakdown_value))
     GROUP BY day_start,
              breakdown_value
     ORDER BY breakdown_value,
              day_start)
  GROUP BY breakdown_value
  ORDER BY breakdown_value
  '''
# ---
# name: TestInsight.test_insight_trend_hogql_global_filters
  '''
  /* user_id:0 request:_snapshot_ */
  SELECT arrayMap(number -> plus(toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2012-01-08 00:00:00', 6, 'UTC'))), toIntervalDay(number)), range(0, plus(coalesce(dateDiff('day', toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2012-01-08 00:00:00', 6, 'UTC'))), toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2012-01-15 23:59:59', 6, 'UTC'))))), 1))) AS date,
         arrayMap(_match_date -> arraySum(arraySlice(groupArray(ifNull(count, 0)), indexOf(groupArray(day_start) AS _days_for_count, _match_date) AS _index, plus(minus(arrayLastIndex(x -> ifNull(equals(x, _match_date), isNull(x)
                                                                                                                                                                                                   and isNull(_match_date)), _days_for_count), _index), 1))), date) AS total
  FROM
    (SELECT sum(total) AS count,
            day_start AS day_start
     FROM
       (SELECT count() AS total,
               toStartOfDay(toTimeZone(e.timestamp, 'UTC')) AS day_start
        FROM events AS e SAMPLE 1
        WHERE and(equals(e.team_id, 99999), greaterOrEquals(toTimeZone(e.timestamp, 'UTC'), toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2012-01-08 00:00:00', 6, 'UTC')))), lessOrEquals(toTimeZone(e.timestamp, 'UTC'), assumeNotNull(parseDateTime64BestEffortOrNull('2012-01-15 23:59:59', 6, 'UTC'))), equals(e.event, '$pageview'))
        GROUP BY day_start)
     GROUP BY day_start
     ORDER BY day_start ASC)
  ORDER BY arraySum(total) DESC
  LIMIT 50000 SETTINGS readonly=2,
                       max_execution_time=60,
                       allow_experimental_object_type=1,
                       format_csv_allow_double_quotes=0,
                       max_ast_elements=4000000,
                       max_expanded_ast_elements=4000000,
                       max_bytes_before_external_group_by=0
  '''
# ---
# name: TestInsight.test_insight_trend_hogql_global_filters.1
  '''
  /* user_id:0 request:_snapshot_ */
  SELECT arrayMap(number -> plus(toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2012-01-08 00:00:00', 6, 'UTC'))), toIntervalDay(number)), range(0, plus(coalesce(dateDiff('day', toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2012-01-08 00:00:00', 6, 'UTC'))), toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2012-01-15 23:59:59', 6, 'UTC'))))), 1))) AS date,
         arrayMap(_match_date -> arraySum(arraySlice(groupArray(ifNull(count, 0)), indexOf(groupArray(day_start) AS _days_for_count, _match_date) AS _index, plus(minus(arrayLastIndex(x -> ifNull(equals(x, _match_date), isNull(x)
                                                                                                                                                                                                   and isNull(_match_date)), _days_for_count), _index), 1))), date) AS total
  FROM
    (SELECT sum(total) AS count,
            day_start AS day_start
     FROM
       (SELECT count() AS total,
               toStartOfDay(toTimeZone(e.timestamp, 'UTC')) AS day_start
        FROM events AS e SAMPLE 1
        LEFT OUTER JOIN
          (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                  person_distinct_id_overrides.distinct_id AS distinct_id
           FROM person_distinct_id_overrides
           WHERE equals(person_distinct_id_overrides.team_id, 99999)
           GROUP BY person_distinct_id_overrides.distinct_id
           HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS e__override ON equals(e.distinct_id, e__override.distinct_id)
        LEFT JOIN
          (SELECT person.id AS id,
                  replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(person.properties, 'fish'), ''), 'null'), '^"|"$', '') AS properties___fish
           FROM person
           WHERE and(equals(person.team_id, 99999), ifNull(in(tuple(person.id, person.version),
                                                                (SELECT person.id AS id, max(person.version) AS version
                                                                 FROM person
                                                                 WHERE equals(person.team_id, 99999)
                                                                 GROUP BY person.id
                                                                 HAVING and(ifNull(equals(argMax(person.is_deleted, person.version), 0), 0), ifNull(less(argMax(toTimeZone(person.created_at, 'UTC'), person.version), plus(now64(6, 'UTC'), toIntervalDay(1))), 0)))), 0)) SETTINGS optimize_aggregation_in_order=1) AS e__person ON equals(if(not(empty(e__override.distinct_id)), e__override.person_id, e.person_id), e__person.id)
        WHERE and(equals(e.team_id, 99999), greaterOrEquals(toTimeZone(e.timestamp, 'UTC'), toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2012-01-08 00:00:00', 6, 'UTC')))), lessOrEquals(toTimeZone(e.timestamp, 'UTC'), assumeNotNull(parseDateTime64BestEffortOrNull('2012-01-15 23:59:59', 6, 'UTC'))), equals(e.event, '$pageview'), and(and(ifNull(greater(accurateCastOrNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(e.properties, 'int_value'), ''), 'null'), '^"|"$', ''), 'Int64'), 10), 0), 1), ifNull(like(e__person.properties___fish, '%fish%'), 0)))
        GROUP BY day_start)
     GROUP BY day_start
     ORDER BY day_start ASC)
  ORDER BY arraySum(total) DESC
  LIMIT 50000 SETTINGS readonly=2,
                       max_execution_time=60,
                       allow_experimental_object_type=1,
                       format_csv_allow_double_quotes=0,
                       max_ast_elements=4000000,
                       max_expanded_ast_elements=4000000,
                       max_bytes_before_external_group_by=0
  '''
# ---
# name: TestInsight.test_insight_trend_hogql_global_filters_materialized
  '''
  /* user_id:0 request:_snapshot_ */
  SELECT arrayMap(number -> plus(toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2012-01-08 00:00:00', 6, 'UTC'))), toIntervalDay(number)), range(0, plus(coalesce(dateDiff('day', toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2012-01-08 00:00:00', 6, 'UTC'))), toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2012-01-15 23:59:59', 6, 'UTC'))))), 1))) AS date,
         arrayMap(_match_date -> arraySum(arraySlice(groupArray(ifNull(count, 0)), indexOf(groupArray(day_start) AS _days_for_count, _match_date) AS _index, plus(minus(arrayLastIndex(x -> ifNull(equals(x, _match_date), isNull(x)
                                                                                                                                                                                                   and isNull(_match_date)), _days_for_count), _index), 1))), date) AS total
  FROM
    (SELECT sum(total) AS count,
            day_start AS day_start
     FROM
       (SELECT count() AS total,
               toStartOfDay(toTimeZone(e.timestamp, 'UTC')) AS day_start
        FROM events AS e SAMPLE 1
        WHERE and(equals(e.team_id, 99999), greaterOrEquals(toTimeZone(e.timestamp, 'UTC'), toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2012-01-08 00:00:00', 6, 'UTC')))), lessOrEquals(toTimeZone(e.timestamp, 'UTC'), assumeNotNull(parseDateTime64BestEffortOrNull('2012-01-15 23:59:59', 6, 'UTC'))), equals(e.event, '$pageview'))
        GROUP BY day_start)
     GROUP BY day_start
     ORDER BY day_start ASC)
  ORDER BY arraySum(total) DESC
  LIMIT 50000 SETTINGS readonly=2,
                       max_execution_time=60,
                       allow_experimental_object_type=1,
                       format_csv_allow_double_quotes=0,
                       max_ast_elements=4000000,
                       max_expanded_ast_elements=4000000,
                       max_bytes_before_external_group_by=0
  '''
# ---
# name: TestInsight.test_insight_trend_hogql_global_filters_materialized.1
  '''
  /* user_id:0 request:_snapshot_ */
  SELECT arrayMap(number -> plus(toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2012-01-08 00:00:00', 6, 'UTC'))), toIntervalDay(number)), range(0, plus(coalesce(dateDiff('day', toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2012-01-08 00:00:00', 6, 'UTC'))), toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2012-01-15 23:59:59', 6, 'UTC'))))), 1))) AS date,
         arrayMap(_match_date -> arraySum(arraySlice(groupArray(ifNull(count, 0)), indexOf(groupArray(day_start) AS _days_for_count, _match_date) AS _index, plus(minus(arrayLastIndex(x -> ifNull(equals(x, _match_date), isNull(x)
                                                                                                                                                                                                   and isNull(_match_date)), _days_for_count), _index), 1))), date) AS total
  FROM
    (SELECT sum(total) AS count,
            day_start AS day_start
     FROM
       (SELECT count() AS total,
               toStartOfDay(toTimeZone(e.timestamp, 'UTC')) AS day_start
        FROM events AS e SAMPLE 1
        LEFT OUTER JOIN
          (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                  person_distinct_id_overrides.distinct_id AS distinct_id
           FROM person_distinct_id_overrides
           WHERE equals(person_distinct_id_overrides.team_id, 99999)
           GROUP BY person_distinct_id_overrides.distinct_id
           HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS e__override ON equals(e.distinct_id, e__override.distinct_id)
        LEFT JOIN
          (SELECT person.id AS id,
                  nullIf(nullIf(person.pmat_fish, ''), 'null') AS properties___fish
           FROM person
           WHERE and(equals(person.team_id, 99999), ifNull(in(tuple(person.id, person.version),
                                                                (SELECT person.id AS id, max(person.version) AS version
                                                                 FROM person
                                                                 WHERE equals(person.team_id, 99999)
                                                                 GROUP BY person.id
                                                                 HAVING and(ifNull(equals(argMax(person.is_deleted, person.version), 0), 0), ifNull(less(argMax(toTimeZone(person.created_at, 'UTC'), person.version), plus(now64(6, 'UTC'), toIntervalDay(1))), 0)))), 0)) SETTINGS optimize_aggregation_in_order=1) AS e__person ON equals(if(not(empty(e__override.distinct_id)), e__override.person_id, e.person_id), e__person.id)
        WHERE and(equals(e.team_id, 99999), greaterOrEquals(toTimeZone(e.timestamp, 'UTC'), toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2012-01-08 00:00:00', 6, 'UTC')))), lessOrEquals(toTimeZone(e.timestamp, 'UTC'), assumeNotNull(parseDateTime64BestEffortOrNull('2012-01-15 23:59:59', 6, 'UTC'))), equals(e.event, '$pageview'), and(and(ifNull(greater(accurateCastOrNull(nullIf(nullIf(e.mat_int_value, ''), 'null'), 'Int64'), 10), 0), 1), ifNull(like(e__person.properties___fish, '%fish%'), 0)))
        GROUP BY day_start)
     GROUP BY day_start
     ORDER BY day_start ASC)
  ORDER BY arraySum(total) DESC
  LIMIT 50000 SETTINGS readonly=2,
                       max_execution_time=60,
                       allow_experimental_object_type=1,
                       format_csv_allow_double_quotes=0,
                       max_ast_elements=4000000,
                       max_expanded_ast_elements=4000000,
                       max_bytes_before_external_group_by=0
  '''
# ---
# name: TestInsight.test_insight_trend_hogql_local_filters
  '''
  /* user_id:0 request:_snapshot_ */
  SELECT arrayMap(number -> plus(toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2012-01-08 00:00:00', 6, 'UTC'))), toIntervalDay(number)), range(0, plus(coalesce(dateDiff('day', toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2012-01-08 00:00:00', 6, 'UTC'))), toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2012-01-15 23:59:59', 6, 'UTC'))))), 1))) AS date,
         arrayMap(_match_date -> arraySum(arraySlice(groupArray(ifNull(count, 0)), indexOf(groupArray(day_start) AS _days_for_count, _match_date) AS _index, plus(minus(arrayLastIndex(x -> ifNull(equals(x, _match_date), isNull(x)
                                                                                                                                                                                                   and isNull(_match_date)), _days_for_count), _index), 1))), date) AS total
  FROM
    (SELECT sum(total) AS count,
            day_start AS day_start
     FROM
       (SELECT count() AS total,
               toStartOfDay(toTimeZone(e.timestamp, 'UTC')) AS day_start
        FROM events AS e SAMPLE 1
        LEFT OUTER JOIN
          (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                  person_distinct_id_overrides.distinct_id AS distinct_id
           FROM person_distinct_id_overrides
           WHERE equals(person_distinct_id_overrides.team_id, 99999)
           GROUP BY person_distinct_id_overrides.distinct_id
           HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS e__override ON equals(e.distinct_id, e__override.distinct_id)
        LEFT JOIN
          (SELECT person.id AS id,
                  replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(person.properties, 'fish'), ''), 'null'), '^"|"$', '') AS properties___fish
           FROM person
           WHERE and(equals(person.team_id, 99999), ifNull(in(tuple(person.id, person.version),
                                                                (SELECT person.id AS id, max(person.version) AS version
                                                                 FROM person
                                                                 WHERE equals(person.team_id, 99999)
                                                                 GROUP BY person.id
                                                                 HAVING and(ifNull(equals(argMax(person.is_deleted, person.version), 0), 0), ifNull(less(argMax(toTimeZone(person.created_at, 'UTC'), person.version), plus(now64(6, 'UTC'), toIntervalDay(1))), 0)))), 0)) SETTINGS optimize_aggregation_in_order=1) AS e__person ON equals(if(not(empty(e__override.distinct_id)), e__override.person_id, e.person_id), e__person.id)
        WHERE and(equals(e.team_id, 99999), greaterOrEquals(toTimeZone(e.timestamp, 'UTC'), toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2012-01-08 00:00:00', 6, 'UTC')))), lessOrEquals(toTimeZone(e.timestamp, 'UTC'), assumeNotNull(parseDateTime64BestEffortOrNull('2012-01-15 23:59:59', 6, 'UTC'))), equals(e.event, '$pageview'), and(and(ifNull(less(accurateCastOrNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(e.properties, 'int_value'), ''), 'null'), '^"|"$', ''), 'Int64'), 10), 0), 1), ifNull(like(e__person.properties___fish, '%fish%'), 0)))
        GROUP BY day_start)
     GROUP BY day_start
     ORDER BY day_start ASC)
  ORDER BY arraySum(total) DESC
  LIMIT 50000 SETTINGS readonly=2,
                       max_execution_time=60,
                       allow_experimental_object_type=1,
                       format_csv_allow_double_quotes=0,
                       max_ast_elements=4000000,
                       max_expanded_ast_elements=4000000,
                       max_bytes_before_external_group_by=0
  '''
# ---
# name: TestInsight.test_insight_trend_hogql_local_filters_materialized
  '''
  /* user_id:0 request:_snapshot_ */
  SELECT arrayMap(number -> plus(toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2012-01-08 00:00:00', 6, 'UTC'))), toIntervalDay(number)), range(0, plus(coalesce(dateDiff('day', toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2012-01-08 00:00:00', 6, 'UTC'))), toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2012-01-15 23:59:59', 6, 'UTC'))))), 1))) AS date,
         arrayMap(_match_date -> arraySum(arraySlice(groupArray(ifNull(count, 0)), indexOf(groupArray(day_start) AS _days_for_count, _match_date) AS _index, plus(minus(arrayLastIndex(x -> ifNull(equals(x, _match_date), isNull(x)
                                                                                                                                                                                                   and isNull(_match_date)), _days_for_count), _index), 1))), date) AS total
  FROM
    (SELECT sum(total) AS count,
            day_start AS day_start
     FROM
       (SELECT count() AS total,
               toStartOfDay(toTimeZone(e.timestamp, 'UTC')) AS day_start
        FROM events AS e SAMPLE 1
        LEFT OUTER JOIN
          (SELECT argMax(person_distinct_id_overrides.person_id, person_distinct_id_overrides.version) AS person_id,
                  person_distinct_id_overrides.distinct_id AS distinct_id
           FROM person_distinct_id_overrides
           WHERE equals(person_distinct_id_overrides.team_id, 99999)
           GROUP BY person_distinct_id_overrides.distinct_id
           HAVING ifNull(equals(argMax(person_distinct_id_overrides.is_deleted, person_distinct_id_overrides.version), 0), 0) SETTINGS optimize_aggregation_in_order=1) AS e__override ON equals(e.distinct_id, e__override.distinct_id)
        LEFT JOIN
          (SELECT person.id AS id,
                  nullIf(nullIf(person.pmat_fish, ''), 'null') AS properties___fish
           FROM person
           WHERE and(equals(person.team_id, 99999), ifNull(in(tuple(person.id, person.version),
                                                                (SELECT person.id AS id, max(person.version) AS version
                                                                 FROM person
                                                                 WHERE equals(person.team_id, 99999)
                                                                 GROUP BY person.id
                                                                 HAVING and(ifNull(equals(argMax(person.is_deleted, person.version), 0), 0), ifNull(less(argMax(toTimeZone(person.created_at, 'UTC'), person.version), plus(now64(6, 'UTC'), toIntervalDay(1))), 0)))), 0)) SETTINGS optimize_aggregation_in_order=1) AS e__person ON equals(if(not(empty(e__override.distinct_id)), e__override.person_id, e.person_id), e__person.id)
        WHERE and(equals(e.team_id, 99999), greaterOrEquals(toTimeZone(e.timestamp, 'UTC'), toStartOfDay(assumeNotNull(parseDateTime64BestEffortOrNull('2012-01-08 00:00:00', 6, 'UTC')))), lessOrEquals(toTimeZone(e.timestamp, 'UTC'), assumeNotNull(parseDateTime64BestEffortOrNull('2012-01-15 23:59:59', 6, 'UTC'))), equals(e.event, '$pageview'), and(and(ifNull(less(accurateCastOrNull(nullIf(nullIf(e.mat_int_value, ''), 'null'), 'Int64'), 10), 0), 1), ifNull(like(e__person.properties___fish, '%fish%'), 0)))
        GROUP BY day_start)
     GROUP BY day_start
     ORDER BY day_start ASC)
  ORDER BY arraySum(total) DESC
  LIMIT 50000 SETTINGS readonly=2,
                       max_execution_time=60,
                       allow_experimental_object_type=1,
                       format_csv_allow_double_quotes=0,
                       max_ast_elements=4000000,
                       max_expanded_ast_elements=4000000,
                       max_bytes_before_external_group_by=0
  '''
# ---
# name: TestInsight.test_listing_insights_does_not_nplus1
  '''
  SELECT "posthog_user"."id",
         "posthog_user"."password",
         "posthog_user"."last_login",
         "posthog_user"."first_name",
         "posthog_user"."last_name",
         "posthog_user"."is_staff",
         "posthog_user"."date_joined",
         "posthog_user"."uuid",
         "posthog_user"."current_organization_id",
         "posthog_user"."current_team_id",
         "posthog_user"."email",
         "posthog_user"."pending_email",
         "posthog_user"."temporary_token",
         "posthog_user"."distinct_id",
         "posthog_user"."is_email_verified",
         "posthog_user"."has_seen_product_intro_for",
         "posthog_user"."strapi_id",
         "posthog_user"."is_active",
         "posthog_user"."role_at_organization",
         "posthog_user"."theme_mode",
         "posthog_user"."partial_notification_settings",
         "posthog_user"."anonymize_data",
         "posthog_user"."toolbar_mode",
         "posthog_user"."hedgehog_config",
         "posthog_user"."events_column_config",
         "posthog_user"."email_opt_in"
  FROM "posthog_user"
  WHERE "posthog_user"."id" = 99999
  LIMIT 21
  '''
# ---
# name: TestInsight.test_listing_insights_does_not_nplus1.1
  '''
  SELECT "posthog_team"."id",
         "posthog_team"."uuid",
         "posthog_team"."organization_id",
         "posthog_team"."project_id",
         "posthog_team"."api_token",
         "posthog_team"."app_urls",
         "posthog_team"."name",
         "posthog_team"."slack_incoming_webhook",
         "posthog_team"."created_at",
         "posthog_team"."updated_at",
         "posthog_team"."anonymize_ips",
         "posthog_team"."completed_snippet_onboarding",
         "posthog_team"."has_completed_onboarding_for",
         "posthog_team"."ingested_event",
         "posthog_team"."autocapture_opt_out",
         "posthog_team"."autocapture_web_vitals_opt_in",
         "posthog_team"."autocapture_web_vitals_allowed_metrics",
         "posthog_team"."autocapture_exceptions_opt_in",
         "posthog_team"."autocapture_exceptions_errors_to_ignore",
         "posthog_team"."person_processing_opt_out",
         "posthog_team"."session_recording_opt_in",
         "posthog_team"."session_recording_sample_rate",
         "posthog_team"."session_recording_minimum_duration_milliseconds",
         "posthog_team"."session_recording_linked_flag",
         "posthog_team"."session_recording_network_payload_capture_config",
         "posthog_team"."session_recording_url_trigger_config",
         "posthog_team"."session_recording_url_blocklist_config",
         "posthog_team"."session_recording_event_trigger_config",
         "posthog_team"."session_replay_config",
         "posthog_team"."survey_config",
         "posthog_team"."capture_console_log_opt_in",
         "posthog_team"."capture_performance_opt_in",
         "posthog_team"."capture_dead_clicks",
         "posthog_team"."surveys_opt_in",
         "posthog_team"."heatmaps_opt_in",
         "posthog_team"."flags_persistence_default",
         "posthog_team"."session_recording_version",
         "posthog_team"."signup_token",
         "posthog_team"."is_demo",
         "posthog_team"."access_control",
         "posthog_team"."week_start_day",
         "posthog_team"."inject_web_apps",
         "posthog_team"."test_account_filters",
         "posthog_team"."test_account_filters_default_checked",
         "posthog_team"."path_cleaning_filters",
         "posthog_team"."timezone",
         "posthog_team"."data_attributes",
         "posthog_team"."person_display_name_properties",
         "posthog_team"."live_events_columns",
         "posthog_team"."recording_domains",
         "posthog_team"."human_friendly_comparison_periods",
         "posthog_team"."cookieless_server_hash_mode",
         "posthog_team"."revenue_tracking_config",
         "posthog_team"."primary_dashboard_id",
         "posthog_team"."default_data_theme",
         "posthog_team"."extra_settings",
         "posthog_team"."modifiers",
         "posthog_team"."correlation_config",
         "posthog_team"."session_recording_retention_period_days",
         "posthog_team"."external_data_workspace_id",
         "posthog_team"."external_data_workspace_last_synced_at"
  FROM "posthog_team"
  WHERE "posthog_team"."id" = 99999
  LIMIT 21
  '''
# ---
# name: TestInsight.test_listing_insights_does_not_nplus1.10
  '''
  SELECT "posthog_team"."id",
         "posthog_team"."uuid",
         "posthog_team"."organization_id",
         "posthog_team"."project_id",
         "posthog_team"."api_token",
         "posthog_team"."app_urls",
         "posthog_team"."name",
         "posthog_team"."slack_incoming_webhook",
         "posthog_team"."created_at",
         "posthog_team"."updated_at",
         "posthog_team"."anonymize_ips",
         "posthog_team"."completed_snippet_onboarding",
         "posthog_team"."has_completed_onboarding_for",
         "posthog_team"."ingested_event",
         "posthog_team"."autocapture_opt_out",
         "posthog_team"."autocapture_web_vitals_opt_in",
         "posthog_team"."autocapture_web_vitals_allowed_metrics",
         "posthog_team"."autocapture_exceptions_opt_in",
         "posthog_team"."autocapture_exceptions_errors_to_ignore",
         "posthog_team"."person_processing_opt_out",
         "posthog_team"."session_recording_opt_in",
         "posthog_team"."session_recording_sample_rate",
         "posthog_team"."session_recording_minimum_duration_milliseconds",
         "posthog_team"."session_recording_linked_flag",
         "posthog_team"."session_recording_network_payload_capture_config",
         "posthog_team"."session_recording_url_trigger_config",
         "posthog_team"."session_recording_url_blocklist_config",
         "posthog_team"."session_recording_event_trigger_config",
         "posthog_team"."session_replay_config",
         "posthog_team"."survey_config",
         "posthog_team"."capture_console_log_opt_in",
         "posthog_team"."capture_performance_opt_in",
         "posthog_team"."capture_dead_clicks",
         "posthog_team"."surveys_opt_in",
         "posthog_team"."heatmaps_opt_in",
         "posthog_team"."flags_persistence_default",
         "posthog_team"."session_recording_version",
         "posthog_team"."signup_token",
         "posthog_team"."is_demo",
         "posthog_team"."access_control",
         "posthog_team"."week_start_day",
         "posthog_team"."inject_web_apps",
         "posthog_team"."test_account_filters",
         "posthog_team"."test_account_filters_default_checked",
         "posthog_team"."path_cleaning_filters",
         "posthog_team"."timezone",
         "posthog_team"."data_attributes",
         "posthog_team"."person_display_name_properties",
         "posthog_team"."live_events_columns",
         "posthog_team"."recording_domains",
         "posthog_team"."human_friendly_comparison_periods",
         "posthog_team"."cookieless_server_hash_mode",
         "posthog_team"."revenue_tracking_config",
         "posthog_team"."primary_dashboard_id",
         "posthog_team"."default_data_theme",
         "posthog_team"."extra_settings",
         "posthog_team"."modifiers",
         "posthog_team"."correlation_config",
         "posthog_team"."session_recording_retention_period_days",
         "posthog_team"."plugins_opt_in",
         "posthog_team"."opt_out_capture",
         "posthog_team"."event_names",
         "posthog_team"."event_names_with_usage",
         "posthog_team"."event_properties",
         "posthog_team"."event_properties_with_usage",
         "posthog_team"."event_properties_numerical",
         "posthog_team"."external_data_workspace_id",
         "posthog_team"."external_data_workspace_last_synced_at"
  FROM "posthog_team"
  WHERE "posthog_team"."id" = 99999
  LIMIT 21
  '''
# ---
# name: TestInsight.test_listing_insights_does_not_nplus1.11
  '''
  SELECT "posthog_team"."id",
         "posthog_team"."uuid",
         "posthog_team"."organization_id",
         "posthog_team"."project_id",
         "posthog_team"."api_token",
         "posthog_team"."app_urls",
         "posthog_team"."name",
         "posthog_team"."slack_incoming_webhook",
         "posthog_team"."created_at",
         "posthog_team"."updated_at",
         "posthog_team"."anonymize_ips",
         "posthog_team"."completed_snippet_onboarding",
         "posthog_team"."has_completed_onboarding_for",
         "posthog_team"."ingested_event",
         "posthog_team"."autocapture_opt_out",
         "posthog_team"."autocapture_web_vitals_opt_in",
         "posthog_team"."autocapture_web_vitals_allowed_metrics",
         "posthog_team"."autocapture_exceptions_opt_in",
         "posthog_team"."autocapture_exceptions_errors_to_ignore",
         "posthog_team"."person_processing_opt_out",
         "posthog_team"."session_recording_opt_in",
         "posthog_team"."session_recording_sample_rate",
         "posthog_team"."session_recording_minimum_duration_milliseconds",
         "posthog_team"."session_recording_linked_flag",
         "posthog_team"."session_recording_network_payload_capture_config",
         "posthog_team"."session_recording_url_trigger_config",
         "posthog_team"."session_recording_url_blocklist_config",
         "posthog_team"."session_recording_event_trigger_config",
         "posthog_team"."session_replay_config",
         "posthog_team"."survey_config",
         "posthog_team"."capture_console_log_opt_in",
         "posthog_team"."capture_performance_opt_in",
         "posthog_team"."capture_dead_clicks",
         "posthog_team"."surveys_opt_in",
         "posthog_team"."heatmaps_opt_in",
         "posthog_team"."flags_persistence_default",
         "posthog_team"."session_recording_version",
         "posthog_team"."signup_token",
         "posthog_team"."is_demo",
         "posthog_team"."access_control",
         "posthog_team"."week_start_day",
         "posthog_team"."inject_web_apps",
         "posthog_team"."test_account_filters",
         "posthog_team"."test_account_filters_default_checked",
         "posthog_team"."path_cleaning_filters",
         "posthog_team"."timezone",
         "posthog_team"."data_attributes",
         "posthog_team"."person_display_name_properties",
         "posthog_team"."live_events_columns",
         "posthog_team"."recording_domains",
         "posthog_team"."human_friendly_comparison_periods",
         "posthog_team"."cookieless_server_hash_mode",
         "posthog_team"."revenue_tracking_config",
         "posthog_team"."primary_dashboard_id",
         "posthog_team"."default_data_theme",
         "posthog_team"."extra_settings",
         "posthog_team"."modifiers",
         "posthog_team"."correlation_config",
         "posthog_team"."session_recording_retention_period_days",
         "posthog_team"."plugins_opt_in",
         "posthog_team"."opt_out_capture",
         "posthog_team"."event_names",
         "posthog_team"."event_names_with_usage",
         "posthog_team"."event_properties",
         "posthog_team"."event_properties_with_usage",
         "posthog_team"."event_properties_numerical",
         "posthog_team"."external_data_workspace_id",
         "posthog_team"."external_data_workspace_last_synced_at"
  FROM "posthog_team"
  WHERE "posthog_team"."id" = 99999
  LIMIT 21
  '''
# ---
# name: TestInsight.test_listing_insights_does_not_nplus1.12
  '''
  SELECT "posthog_team"."id",
         "posthog_team"."uuid",
         "posthog_team"."organization_id",
         "posthog_team"."project_id",
         "posthog_team"."api_token",
         "posthog_team"."app_urls",
         "posthog_team"."name",
         "posthog_team"."slack_incoming_webhook",
         "posthog_team"."created_at",
         "posthog_team"."updated_at",
         "posthog_team"."anonymize_ips",
         "posthog_team"."completed_snippet_onboarding",
         "posthog_team"."has_completed_onboarding_for",
         "posthog_team"."ingested_event",
         "posthog_team"."autocapture_opt_out",
         "posthog_team"."autocapture_web_vitals_opt_in",
         "posthog_team"."autocapture_web_vitals_allowed_metrics",
         "posthog_team"."autocapture_exceptions_opt_in",
         "posthog_team"."autocapture_exceptions_errors_to_ignore",
         "posthog_team"."person_processing_opt_out",
         "posthog_team"."session_recording_opt_in",
         "posthog_team"."session_recording_sample_rate",
         "posthog_team"."session_recording_minimum_duration_milliseconds",
         "posthog_team"."session_recording_linked_flag",
         "posthog_team"."session_recording_network_payload_capture_config",
         "posthog_team"."session_recording_url_trigger_config",
         "posthog_team"."session_recording_url_blocklist_config",
         "posthog_team"."session_recording_event_trigger_config",
         "posthog_team"."session_replay_config",
         "posthog_team"."survey_config",
         "posthog_team"."capture_console_log_opt_in",
         "posthog_team"."capture_performance_opt_in",
         "posthog_team"."capture_dead_clicks",
         "posthog_team"."surveys_opt_in",
         "posthog_team"."heatmaps_opt_in",
         "posthog_team"."flags_persistence_default",
         "posthog_team"."session_recording_version",
         "posthog_team"."signup_token",
         "posthog_team"."is_demo",
         "posthog_team"."access_control",
         "posthog_team"."week_start_day",
         "posthog_team"."inject_web_apps",
         "posthog_team"."test_account_filters",
         "posthog_team"."test_account_filters_default_checked",
         "posthog_team"."path_cleaning_filters",
         "posthog_team"."timezone",
         "posthog_team"."data_attributes",
         "posthog_team"."person_display_name_properties",
         "posthog_team"."live_events_columns",
         "posthog_team"."recording_domains",
         "posthog_team"."human_friendly_comparison_periods",
         "posthog_team"."cookieless_server_hash_mode",
         "posthog_team"."revenue_tracking_config",
         "posthog_team"."primary_dashboard_id",
         "posthog_team"."default_data_theme",
         "posthog_team"."extra_settings",
         "posthog_team"."modifiers",
         "posthog_team"."correlation_config",
         "posthog_team"."session_recording_retention_period_days",
         "posthog_team"."external_data_workspace_id",
         "posthog_team"."external_data_workspace_last_synced_at"
  FROM "posthog_team"
  WHERE "posthog_team"."id" = 99999
  LIMIT 21
  '''
# ---
# name: TestInsight.test_listing_insights_does_not_nplus1.13
  '''
  SELECT "posthog_dashboardtile"."id",
         "posthog_dashboardtile"."dashboard_id",
         "posthog_dashboardtile"."insight_id",
         "posthog_dashboardtile"."text_id",
         "posthog_dashboardtile"."layouts",
         "posthog_dashboardtile"."color",
         "posthog_dashboardtile"."filters_hash",
         "posthog_dashboardtile"."last_refresh",
         "posthog_dashboardtile"."refreshing",
         "posthog_dashboardtile"."refresh_attempt",
         "posthog_dashboardtile"."deleted"
  FROM "posthog_dashboardtile"
  WHERE "posthog_dashboardtile"."id" = 99999
  LIMIT 21
  '''
# ---
# name: TestInsight.test_listing_insights_does_not_nplus1.14
  '''
  SELECT "posthog_dashboarditem"."id",
         "posthog_dashboarditem"."name",
         "posthog_dashboarditem"."derived_name",
         "posthog_dashboarditem"."description",
         "posthog_dashboarditem"."team_id",
         "posthog_dashboarditem"."filters",
         "posthog_dashboarditem"."filters_hash",
         "posthog_dashboarditem"."query",
         "posthog_dashboarditem"."order",
         "posthog_dashboarditem"."deleted",
         "posthog_dashboarditem"."saved",
         "posthog_dashboarditem"."created_at",
         "posthog_dashboarditem"."refreshing",
         "posthog_dashboarditem"."created_by_id",
         "posthog_dashboarditem"."is_sample",
         "posthog_dashboarditem"."short_id",
         "posthog_dashboarditem"."favorited",
         "posthog_dashboarditem"."refresh_attempt",
         "posthog_dashboarditem"."last_modified_at",
         "posthog_dashboarditem"."last_modified_by_id",
         "posthog_dashboarditem"."dashboard_id",
         "posthog_dashboarditem"."last_refresh",
         "posthog_dashboarditem"."layouts",
         "posthog_dashboarditem"."color",
         "posthog_dashboarditem"."dive_dashboard_id",
         "posthog_dashboarditem"."updated_at",
         "posthog_dashboarditem"."deprecated_tags",
         "posthog_dashboarditem"."tags"
  FROM "posthog_dashboarditem"
  WHERE "posthog_dashboarditem"."id" = 99999
  LIMIT 21
  '''
# ---
# name: TestInsight.test_listing_insights_does_not_nplus1.15
  '''
  SELECT "posthog_dashboard"."id",
         "posthog_dashboard"."name",
         "posthog_dashboard"."description",
         "posthog_dashboard"."team_id",
         "posthog_dashboard"."pinned",
         "posthog_dashboard"."created_at",
         "posthog_dashboard"."created_by_id",
         "posthog_dashboard"."deleted",
         "posthog_dashboard"."last_accessed_at",
         "posthog_dashboard"."filters",
         "posthog_dashboard"."variables",
         "posthog_dashboard"."creation_mode",
         "posthog_dashboard"."restriction_level",
         "posthog_dashboard"."deprecated_tags",
         "posthog_dashboard"."tags",
         "posthog_dashboard"."share_token",
         "posthog_dashboard"."is_shared"
  FROM "posthog_dashboard"
  WHERE "posthog_dashboard"."id" = 99999
  LIMIT 21
  '''
# ---
# name: TestInsight.test_listing_insights_does_not_nplus1.16
  '''
  SELECT "posthog_team"."id",
         "posthog_team"."uuid",
         "posthog_team"."organization_id",
         "posthog_team"."project_id",
         "posthog_team"."api_token",
         "posthog_team"."app_urls",
         "posthog_team"."name",
         "posthog_team"."slack_incoming_webhook",
         "posthog_team"."created_at",
         "posthog_team"."updated_at",
         "posthog_team"."anonymize_ips",
         "posthog_team"."completed_snippet_onboarding",
         "posthog_team"."has_completed_onboarding_for",
         "posthog_team"."ingested_event",
         "posthog_team"."autocapture_opt_out",
         "posthog_team"."autocapture_web_vitals_opt_in",
         "posthog_team"."autocapture_web_vitals_allowed_metrics",
         "posthog_team"."autocapture_exceptions_opt_in",
         "posthog_team"."autocapture_exceptions_errors_to_ignore",
         "posthog_team"."person_processing_opt_out",
         "posthog_team"."session_recording_opt_in",
         "posthog_team"."session_recording_sample_rate",
         "posthog_team"."session_recording_minimum_duration_milliseconds",
         "posthog_team"."session_recording_linked_flag",
         "posthog_team"."session_recording_network_payload_capture_config",
         "posthog_team"."session_recording_url_trigger_config",
         "posthog_team"."session_recording_url_blocklist_config",
         "posthog_team"."session_recording_event_trigger_config",
         "posthog_team"."session_replay_config",
         "posthog_team"."survey_config",
         "posthog_team"."capture_console_log_opt_in",
         "posthog_team"."capture_performance_opt_in",
         "posthog_team"."capture_dead_clicks",
         "posthog_team"."surveys_opt_in",
         "posthog_team"."heatmaps_opt_in",
         "posthog_team"."flags_persistence_default",
         "posthog_team"."session_recording_version",
         "posthog_team"."signup_token",
         "posthog_team"."is_demo",
         "posthog_team"."access_control",
         "posthog_team"."week_start_day",
         "posthog_team"."inject_web_apps",
         "posthog_team"."test_account_filters",
         "posthog_team"."test_account_filters_default_checked",
         "posthog_team"."path_cleaning_filters",
         "posthog_team"."timezone",
         "posthog_team"."data_attributes",
         "posthog_team"."person_display_name_properties",
         "posthog_team"."live_events_columns",
         "posthog_team"."recording_domains",
         "posthog_team"."human_friendly_comparison_periods",
         "posthog_team"."cookieless_server_hash_mode",
         "posthog_team"."revenue_tracking_config",
         "posthog_team"."primary_dashboard_id",
         "posthog_team"."default_data_theme",
         "posthog_team"."extra_settings",
         "posthog_team"."modifiers",
         "posthog_team"."correlation_config",
         "posthog_team"."session_recording_retention_period_days",
         "posthog_team"."plugins_opt_in",
         "posthog_team"."opt_out_capture",
         "posthog_team"."event_names",
         "posthog_team"."event_names_with_usage",
         "posthog_team"."event_properties",
         "posthog_team"."event_properties_with_usage",
         "posthog_team"."event_properties_numerical",
         "posthog_team"."external_data_workspace_id",
         "posthog_team"."external_data_workspace_last_synced_at"
  FROM "posthog_team"
  WHERE "posthog_team"."id" = 99999
  LIMIT 21
  '''
# ---
# name: TestInsight.test_listing_insights_does_not_nplus1.17
  '''
  SELECT "posthog_organization"."id",
         "posthog_organization"."name",
         "posthog_organization"."slug",
         "posthog_organization"."logo_media_id",
         "posthog_organization"."created_at",
         "posthog_organization"."updated_at",
         "posthog_organization"."plugins_access_level",
         "posthog_organization"."for_internal_metrics",
         "posthog_organization"."is_member_join_email_enabled",
         "posthog_organization"."enforce_2fa",
         "posthog_organization"."is_hipaa",
         "posthog_organization"."customer_id",
         "posthog_organization"."available_product_features",
         "posthog_organization"."usage",
         "posthog_organization"."never_drop_data",
         "posthog_organization"."customer_trust_scores",
         "posthog_organization"."setup_section_2_completed",
         "posthog_organization"."personalization",
         "posthog_organization"."domain_whitelist"
  FROM "posthog_organization"
  WHERE "posthog_organization"."id" = '00000000-0000-0000-0000-000000000000'::uuid
  LIMIT 21
  '''
# ---
# name: TestInsight.test_listing_insights_does_not_nplus1.18
  '''
  SELECT "posthog_dashboard"."id",
         "posthog_dashboard"."name",
         "posthog_dashboard"."description",
         "posthog_dashboard"."team_id",
         "posthog_dashboard"."pinned",
         "posthog_dashboard"."created_at",
         "posthog_dashboard"."created_by_id",
         "posthog_dashboard"."deleted",
         "posthog_dashboard"."last_accessed_at",
         "posthog_dashboard"."filters",
         "posthog_dashboard"."variables",
         "posthog_dashboard"."creation_mode",
         "posthog_dashboard"."restriction_level",
         "posthog_dashboard"."deprecated_tags",
         "posthog_dashboard"."tags",
         "posthog_dashboard"."share_token",
         "posthog_dashboard"."is_shared"
  FROM "posthog_dashboard"
  INNER JOIN "posthog_dashboardtile" ON ("posthog_dashboard"."id" = "posthog_dashboardtile"."dashboard_id")
  WHERE (NOT ("posthog_dashboard"."deleted")
         AND "posthog_dashboardtile"."insight_id" = 99999)
  '''
# ---
# name: TestInsight.test_listing_insights_does_not_nplus1.19
  '''
  SELECT "posthog_dashboardtile"."id",
         "posthog_dashboardtile"."dashboard_id",
         "posthog_dashboardtile"."insight_id",
         "posthog_dashboardtile"."text_id",
         "posthog_dashboardtile"."layouts",
         "posthog_dashboardtile"."color",
         "posthog_dashboardtile"."filters_hash",
         "posthog_dashboardtile"."last_refresh",
         "posthog_dashboardtile"."refreshing",
         "posthog_dashboardtile"."refresh_attempt",
         "posthog_dashboardtile"."deleted"
  FROM "posthog_dashboardtile"
  INNER JOIN "posthog_dashboard" ON ("posthog_dashboardtile"."dashboard_id" = "posthog_dashboard"."id")
  WHERE (NOT ("posthog_dashboardtile"."deleted"
              AND "posthog_dashboardtile"."deleted" IS NOT NULL)
         AND NOT ("posthog_dashboard"."deleted")
         AND "posthog_dashboardtile"."insight_id" = 99999)
  '''
# ---
# name: TestInsight.test_listing_insights_does_not_nplus1.2
  '''
  SELECT "posthog_organizationmembership"."id",
         "posthog_organizationmembership"."organization_id",
         "posthog_organizationmembership"."user_id",
         "posthog_organizationmembership"."level",
         "posthog_organizationmembership"."joined_at",
         "posthog_organizationmembership"."updated_at",
         "posthog_organization"."id",
         "posthog_organization"."name",
         "posthog_organization"."slug",
         "posthog_organization"."logo_media_id",
         "posthog_organization"."created_at",
         "posthog_organization"."updated_at",
         "posthog_organization"."plugins_access_level",
         "posthog_organization"."for_internal_metrics",
         "posthog_organization"."is_member_join_email_enabled",
         "posthog_organization"."enforce_2fa",
         "posthog_organization"."is_hipaa",
         "posthog_organization"."customer_id",
         "posthog_organization"."available_product_features",
         "posthog_organization"."usage",
         "posthog_organization"."never_drop_data",
         "posthog_organization"."customer_trust_scores",
         "posthog_organization"."setup_section_2_completed",
         "posthog_organization"."personalization",
         "posthog_organization"."domain_whitelist"
  FROM "posthog_organizationmembership"
  INNER JOIN "posthog_organization" ON ("posthog_organizationmembership"."organization_id" = "posthog_organization"."id")
  WHERE ("posthog_organizationmembership"."organization_id" = '00000000-0000-0000-0000-000000000000'::uuid
         AND "posthog_organizationmembership"."user_id" = 99999)
  LIMIT 21
  '''
# ---
# name: TestInsight.test_listing_insights_does_not_nplus1.20
  '''
  SELECT "posthog_dashboardtile"."dashboard_id"
  FROM "posthog_dashboardtile"
  INNER JOIN "posthog_dashboard" ON ("posthog_dashboardtile"."dashboard_id" = "posthog_dashboard"."id")
  WHERE (NOT ("posthog_dashboardtile"."deleted"
              AND "posthog_dashboardtile"."deleted" IS NOT NULL)
         AND NOT ("posthog_dashboard"."deleted")
         AND "posthog_dashboardtile"."insight_id" = 99999)
  '''
# ---
# name: TestInsight.test_listing_insights_does_not_nplus1.21
  '''
  SELECT "posthog_dashboard"."id",
         "posthog_dashboard"."name",
         "posthog_dashboard"."description",
         "posthog_dashboard"."team_id",
         "posthog_dashboard"."pinned",
         "posthog_dashboard"."created_at",
         "posthog_dashboard"."created_by_id",
         "posthog_dashboard"."deleted",
         "posthog_dashboard"."last_accessed_at",
         "posthog_dashboard"."filters",
         "posthog_dashboard"."variables",
         "posthog_dashboard"."creation_mode",
         "posthog_dashboard"."restriction_level",
         "posthog_dashboard"."deprecated_tags",
         "posthog_dashboard"."tags",
         "posthog_dashboard"."share_token",
         "posthog_dashboard"."is_shared"
  FROM "posthog_dashboard"
  WHERE (NOT ("posthog_dashboard"."deleted")
         AND "posthog_dashboard"."id" IN (1,
                                          2,
                                          3,
                                          4,
                                          5 /* ... */))
  '''
# ---
# name: TestInsight.test_listing_insights_does_not_nplus1.22
  '''
  SELECT COUNT(*) AS "__count"
  FROM "posthog_dashboarditem"
  WHERE NOT ("posthog_dashboarditem"."deleted")
  '''
# ---
# name: TestInsight.test_listing_insights_does_not_nplus1.23
  '''
  SELECT "posthog_user"."id",
         "posthog_user"."password",
         "posthog_user"."last_login",
         "posthog_user"."first_name",
         "posthog_user"."last_name",
         "posthog_user"."is_staff",
         "posthog_user"."date_joined",
         "posthog_user"."uuid",
         "posthog_user"."current_organization_id",
         "posthog_user"."current_team_id",
         "posthog_user"."email",
         "posthog_user"."pending_email",
         "posthog_user"."temporary_token",
         "posthog_user"."distinct_id",
         "posthog_user"."is_email_verified",
         "posthog_user"."has_seen_product_intro_for",
         "posthog_user"."strapi_id",
         "posthog_user"."is_active",
         "posthog_user"."role_at_organization",
         "posthog_user"."theme_mode",
         "posthog_user"."partial_notification_settings",
         "posthog_user"."anonymize_data",
         "posthog_user"."toolbar_mode",
         "posthog_user"."hedgehog_config",
         "posthog_user"."events_column_config",
         "posthog_user"."email_opt_in"
  FROM "posthog_user"
  WHERE "posthog_user"."id" = 99999
  LIMIT 21
  '''
# ---
# name: TestInsight.test_listing_insights_does_not_nplus1.24
  '''
  SELECT "posthog_team"."id",
         "posthog_team"."uuid",
         "posthog_team"."organization_id",
         "posthog_team"."project_id",
         "posthog_team"."api_token",
         "posthog_team"."app_urls",
         "posthog_team"."name",
         "posthog_team"."slack_incoming_webhook",
         "posthog_team"."created_at",
         "posthog_team"."updated_at",
         "posthog_team"."anonymize_ips",
         "posthog_team"."completed_snippet_onboarding",
         "posthog_team"."has_completed_onboarding_for",
         "posthog_team"."ingested_event",
         "posthog_team"."autocapture_opt_out",
         "posthog_team"."autocapture_web_vitals_opt_in",
         "posthog_team"."autocapture_web_vitals_allowed_metrics",
         "posthog_team"."autocapture_exceptions_opt_in",
         "posthog_team"."autocapture_exceptions_errors_to_ignore",
         "posthog_team"."person_processing_opt_out",
         "posthog_team"."session_recording_opt_in",
         "posthog_team"."session_recording_sample_rate",
         "posthog_team"."session_recording_minimum_duration_milliseconds",
         "posthog_team"."session_recording_linked_flag",
         "posthog_team"."session_recording_network_payload_capture_config",
         "posthog_team"."session_recording_url_trigger_config",
         "posthog_team"."session_recording_url_blocklist_config",
         "posthog_team"."session_recording_event_trigger_config",
         "posthog_team"."session_replay_config",
         "posthog_team"."survey_config",
         "posthog_team"."capture_console_log_opt_in",
         "posthog_team"."capture_performance_opt_in",
         "posthog_team"."capture_dead_clicks",
         "posthog_team"."surveys_opt_in",
         "posthog_team"."heatmaps_opt_in",
         "posthog_team"."flags_persistence_default",
         "posthog_team"."session_recording_version",
         "posthog_team"."signup_token",
         "posthog_team"."is_demo",
         "posthog_team"."access_control",
         "posthog_team"."week_start_day",
         "posthog_team"."inject_web_apps",
         "posthog_team"."test_account_filters",
         "posthog_team"."test_account_filters_default_checked",
         "posthog_team"."path_cleaning_filters",
         "posthog_team"."timezone",
         "posthog_team"."data_attributes",
         "posthog_team"."person_display_name_properties",
         "posthog_team"."live_events_columns",
         "posthog_team"."recording_domains",
         "posthog_team"."human_friendly_comparison_periods",
         "posthog_team"."cookieless_server_hash_mode",
         "posthog_team"."revenue_tracking_config",
         "posthog_team"."primary_dashboard_id",
         "posthog_team"."default_data_theme",
         "posthog_team"."extra_settings",
         "posthog_team"."modifiers",
         "posthog_team"."correlation_config",
         "posthog_team"."session_recording_retention_period_days",
         "posthog_team"."external_data_workspace_id",
         "posthog_team"."external_data_workspace_last_synced_at"
  FROM "posthog_team"
  WHERE "posthog_team"."id" = 99999
  LIMIT 21
  '''
# ---
# name: TestInsight.test_listing_insights_does_not_nplus1.25
  '''
  SELECT "posthog_organizationmembership"."id",
         "posthog_organizationmembership"."organization_id",
         "posthog_organizationmembership"."user_id",
         "posthog_organizationmembership"."level",
         "posthog_organizationmembership"."joined_at",
         "posthog_organizationmembership"."updated_at",
         "posthog_organization"."id",
         "posthog_organization"."name",
         "posthog_organization"."slug",
         "posthog_organization"."logo_media_id",
         "posthog_organization"."created_at",
         "posthog_organization"."updated_at",
         "posthog_organization"."plugins_access_level",
         "posthog_organization"."for_internal_metrics",
         "posthog_organization"."is_member_join_email_enabled",
         "posthog_organization"."enforce_2fa",
         "posthog_organization"."is_hipaa",
         "posthog_organization"."customer_id",
         "posthog_organization"."available_product_features",
         "posthog_organization"."usage",
         "posthog_organization"."never_drop_data",
         "posthog_organization"."customer_trust_scores",
         "posthog_organization"."setup_section_2_completed",
         "posthog_organization"."personalization",
         "posthog_organization"."domain_whitelist"
  FROM "posthog_organizationmembership"
  INNER JOIN "posthog_organization" ON ("posthog_organizationmembership"."organization_id" = "posthog_organization"."id")
  WHERE ("posthog_organizationmembership"."organization_id" = '00000000-0000-0000-0000-000000000000'::uuid
         AND "posthog_organizationmembership"."user_id" = 99999)
  LIMIT 21
  '''
# ---
# name: TestInsight.test_listing_insights_does_not_nplus1.26
  '''
  SELECT "ee_accesscontrol"."id",
         "ee_accesscontrol"."team_id",
         "ee_accesscontrol"."access_level",
         "ee_accesscontrol"."resource",
         "ee_accesscontrol"."resource_id",
         "ee_accesscontrol"."organization_member_id",
         "ee_accesscontrol"."role_id",
         "ee_accesscontrol"."created_by_id",
         "ee_accesscontrol"."created_at",
         "ee_accesscontrol"."updated_at"
  FROM "ee_accesscontrol"
  LEFT OUTER JOIN "posthog_organizationmembership" ON ("ee_accesscontrol"."organization_member_id" = "posthog_organizationmembership"."id")
  WHERE (("ee_accesscontrol"."organization_member_id" IS NULL
          AND "ee_accesscontrol"."resource" = 'project'
          AND "ee_accesscontrol"."resource_id" = '99999'
          AND "ee_accesscontrol"."role_id" IS NULL
          AND "ee_accesscontrol"."team_id" = 99999)
         OR ("posthog_organizationmembership"."user_id" = 99999
             AND "ee_accesscontrol"."resource" = 'project'
             AND "ee_accesscontrol"."resource_id" = '99999'
             AND "ee_accesscontrol"."role_id" IS NULL
             AND "ee_accesscontrol"."team_id" = 99999)
         OR ("ee_accesscontrol"."organization_member_id" IS NULL
             AND "ee_accesscontrol"."resource" = 'insight'
             AND "ee_accesscontrol"."resource_id" IS NULL
             AND "ee_accesscontrol"."role_id" IS NULL
             AND "ee_accesscontrol"."team_id" = 99999)
         OR ("posthog_organizationmembership"."user_id" = 99999
             AND "ee_accesscontrol"."resource" = 'insight'
             AND "ee_accesscontrol"."resource_id" IS NULL
             AND "ee_accesscontrol"."role_id" IS NULL
             AND "ee_accesscontrol"."team_id" = 99999)
         OR ("ee_accesscontrol"."organization_member_id" IS NULL
             AND "ee_accesscontrol"."resource" = 'insight'
             AND "ee_accesscontrol"."resource_id" IS NOT NULL
             AND "ee_accesscontrol"."role_id" IS NULL
             AND "ee_accesscontrol"."team_id" = 99999)
         OR ("posthog_organizationmembership"."user_id" = 99999
             AND "ee_accesscontrol"."resource" = 'insight'
             AND "ee_accesscontrol"."resource_id" IS NOT NULL
             AND "ee_accesscontrol"."role_id" IS NULL
             AND "ee_accesscontrol"."team_id" = 99999))
  '''
# ---
# name: TestInsight.test_listing_insights_does_not_nplus1.27
  '''
  SELECT "posthog_organizationmembership"."id",
         "posthog_organizationmembership"."organization_id",
         "posthog_organizationmembership"."user_id",
         "posthog_organizationmembership"."level",
         "posthog_organizationmembership"."joined_at",
         "posthog_organizationmembership"."updated_at",
         "posthog_organization"."id",
         "posthog_organization"."name",
         "posthog_organization"."slug",
         "posthog_organization"."logo_media_id",
         "posthog_organization"."created_at",
         "posthog_organization"."updated_at",
         "posthog_organization"."plugins_access_level",
         "posthog_organization"."for_internal_metrics",
         "posthog_organization"."is_member_join_email_enabled",
         "posthog_organization"."enforce_2fa",
         "posthog_organization"."is_hipaa",
         "posthog_organization"."customer_id",
         "posthog_organization"."available_product_features",
         "posthog_organization"."usage",
         "posthog_organization"."never_drop_data",
         "posthog_organization"."customer_trust_scores",
         "posthog_organization"."setup_section_2_completed",
         "posthog_organization"."personalization",
         "posthog_organization"."domain_whitelist"
  FROM "posthog_organizationmembership"
  INNER JOIN "posthog_organization" ON ("posthog_organizationmembership"."organization_id" = "posthog_organization"."id")
  WHERE "posthog_organizationmembership"."user_id" = 99999
  '''
# ---
# name: TestInsight.test_listing_insights_does_not_nplus1.28
  '''
  SELECT "posthog_organization"."id",
         "posthog_organization"."name",
         "posthog_organization"."slug",
         "posthog_organization"."logo_media_id",
         "posthog_organization"."created_at",
         "posthog_organization"."updated_at",
         "posthog_organization"."plugins_access_level",
         "posthog_organization"."for_internal_metrics",
         "posthog_organization"."is_member_join_email_enabled",
         "posthog_organization"."enforce_2fa",
         "posthog_organization"."is_hipaa",
         "posthog_organization"."customer_id",
         "posthog_organization"."available_product_features",
         "posthog_organization"."usage",
         "posthog_organization"."never_drop_data",
         "posthog_organization"."customer_trust_scores",
         "posthog_organization"."setup_section_2_completed",
         "posthog_organization"."personalization",
         "posthog_organization"."domain_whitelist"
  FROM "posthog_organization"
  WHERE "posthog_organization"."id" = '00000000-0000-0000-0000-000000000000'::uuid
  LIMIT 21
  '''
# ---
# name: TestInsight.test_listing_insights_does_not_nplus1.29
  '''
  SELECT COUNT(*) AS "__count"
  FROM "posthog_dashboarditem"
  INNER JOIN "posthog_team" ON ("posthog_dashboarditem"."team_id" = "posthog_team"."id")
  WHERE ("posthog_team"."project_id" = 99999
         AND NOT ("posthog_dashboarditem"."deleted"))
  '''
# ---
# name: TestInsight.test_listing_insights_does_not_nplus1.3
  '''
  SELECT "ee_accesscontrol"."id",
         "ee_accesscontrol"."team_id",
         "ee_accesscontrol"."access_level",
         "ee_accesscontrol"."resource",
         "ee_accesscontrol"."resource_id",
         "ee_accesscontrol"."organization_member_id",
         "ee_accesscontrol"."role_id",
         "ee_accesscontrol"."created_by_id",
         "ee_accesscontrol"."created_at",
         "ee_accesscontrol"."updated_at"
  FROM "ee_accesscontrol"
  LEFT OUTER JOIN "posthog_organizationmembership" ON ("ee_accesscontrol"."organization_member_id" = "posthog_organizationmembership"."id")
  WHERE (("ee_accesscontrol"."organization_member_id" IS NULL
          AND "ee_accesscontrol"."resource" = 'project'
          AND "ee_accesscontrol"."resource_id" = '99999'
          AND "ee_accesscontrol"."role_id" IS NULL
          AND "ee_accesscontrol"."team_id" = 99999)
         OR ("posthog_organizationmembership"."user_id" = 99999
             AND "ee_accesscontrol"."resource" = 'project'
             AND "ee_accesscontrol"."resource_id" = '99999'
             AND "ee_accesscontrol"."role_id" IS NULL
             AND "ee_accesscontrol"."team_id" = 99999)
         OR ("ee_accesscontrol"."organization_member_id" IS NULL
             AND "ee_accesscontrol"."resource" = 'insight'
             AND "ee_accesscontrol"."resource_id" IS NULL
             AND "ee_accesscontrol"."role_id" IS NULL
             AND "ee_accesscontrol"."team_id" = 99999)
         OR ("posthog_organizationmembership"."user_id" = 99999
             AND "ee_accesscontrol"."resource" = 'insight'
             AND "ee_accesscontrol"."resource_id" IS NULL
             AND "ee_accesscontrol"."role_id" IS NULL
             AND "ee_accesscontrol"."team_id" = 99999)
         OR ("ee_accesscontrol"."organization_member_id" IS NULL
             AND "ee_accesscontrol"."resource" = 'insight'
             AND "ee_accesscontrol"."resource_id" IS NOT NULL
             AND "ee_accesscontrol"."role_id" IS NULL
             AND "ee_accesscontrol"."team_id" = 99999)
         OR ("posthog_organizationmembership"."user_id" = 99999
             AND "ee_accesscontrol"."resource" = 'insight'
             AND "ee_accesscontrol"."resource_id" IS NOT NULL
             AND "ee_accesscontrol"."role_id" IS NULL
             AND "ee_accesscontrol"."team_id" = 99999))
  '''
# ---
# name: TestInsight.test_listing_insights_does_not_nplus1.30
  '''
  SELECT "posthog_dashboarditem"."id",
         "posthog_dashboarditem"."name",
         "posthog_dashboarditem"."derived_name",
         "posthog_dashboarditem"."description",
         "posthog_dashboarditem"."team_id",
         "posthog_dashboarditem"."filters",
         "posthog_dashboarditem"."filters_hash",
         "posthog_dashboarditem"."query",
         "posthog_dashboarditem"."order",
         "posthog_dashboarditem"."deleted",
         "posthog_dashboarditem"."saved",
         "posthog_dashboarditem"."created_at",
         "posthog_dashboarditem"."refreshing",
         "posthog_dashboarditem"."created_by_id",
         "posthog_dashboarditem"."is_sample",
         "posthog_dashboarditem"."short_id",
         "posthog_dashboarditem"."favorited",
         "posthog_dashboarditem"."refresh_attempt",
         "posthog_dashboarditem"."last_modified_at",
         "posthog_dashboarditem"."last_modified_by_id",
         "posthog_dashboarditem"."dashboard_id",
         "posthog_dashboarditem"."last_refresh",
         "posthog_dashboarditem"."layouts",
         "posthog_dashboarditem"."color",
         "posthog_dashboarditem"."dive_dashboard_id",
         "posthog_dashboarditem"."updated_at",
         "posthog_dashboarditem"."deprecated_tags",
         "posthog_dashboarditem"."tags",
         "posthog_team"."id",
         "posthog_team"."uuid",
         "posthog_team"."organization_id",
         "posthog_team"."project_id",
         "posthog_team"."api_token",
         "posthog_team"."app_urls",
         "posthog_team"."name",
         "posthog_team"."slack_incoming_webhook",
         "posthog_team"."created_at",
         "posthog_team"."updated_at",
         "posthog_team"."anonymize_ips",
         "posthog_team"."completed_snippet_onboarding",
         "posthog_team"."has_completed_onboarding_for",
         "posthog_team"."ingested_event",
         "posthog_team"."autocapture_opt_out",
         "posthog_team"."autocapture_web_vitals_opt_in",
         "posthog_team"."autocapture_web_vitals_allowed_metrics",
         "posthog_team"."autocapture_exceptions_opt_in",
         "posthog_team"."autocapture_exceptions_errors_to_ignore",
         "posthog_team"."person_processing_opt_out",
         "posthog_team"."session_recording_opt_in",
         "posthog_team"."session_recording_sample_rate",
         "posthog_team"."session_recording_minimum_duration_milliseconds",
         "posthog_team"."session_recording_linked_flag",
         "posthog_team"."session_recording_network_payload_capture_config",
         "posthog_team"."session_recording_url_trigger_config",
         "posthog_team"."session_recording_url_blocklist_config",
         "posthog_team"."session_recording_event_trigger_config",
         "posthog_team"."session_replay_config",
         "posthog_team"."survey_config",
         "posthog_team"."capture_console_log_opt_in",
         "posthog_team"."capture_performance_opt_in",
         "posthog_team"."capture_dead_clicks",
         "posthog_team"."surveys_opt_in",
         "posthog_team"."heatmaps_opt_in",
         "posthog_team"."flags_persistence_default",
         "posthog_team"."session_recording_version",
         "posthog_team"."signup_token",
         "posthog_team"."is_demo",
         "posthog_team"."access_control",
         "posthog_team"."week_start_day",
         "posthog_team"."inject_web_apps",
         "posthog_team"."test_account_filters",
         "posthog_team"."test_account_filters_default_checked",
         "posthog_team"."path_cleaning_filters",
         "posthog_team"."timezone",
         "posthog_team"."data_attributes",
         "posthog_team"."person_display_name_properties",
         "posthog_team"."live_events_columns",
         "posthog_team"."recording_domains",
         "posthog_team"."human_friendly_comparison_periods",
         "posthog_team"."cookieless_server_hash_mode",
         "posthog_team"."revenue_tracking_config",
         "posthog_team"."primary_dashboard_id",
         "posthog_team"."default_data_theme",
         "posthog_team"."extra_settings",
         "posthog_team"."modifiers",
         "posthog_team"."correlation_config",
         "posthog_team"."session_recording_retention_period_days",
         "posthog_team"."plugins_opt_in",
         "posthog_team"."opt_out_capture",
         "posthog_team"."event_names",
         "posthog_team"."event_names_with_usage",
         "posthog_team"."event_properties",
         "posthog_team"."event_properties_with_usage",
         "posthog_team"."event_properties_numerical",
         "posthog_team"."external_data_workspace_id",
         "posthog_team"."external_data_workspace_last_synced_at",
         "posthog_user"."id",
         "posthog_user"."password",
         "posthog_user"."last_login",
         "posthog_user"."first_name",
         "posthog_user"."last_name",
         "posthog_user"."is_staff",
         "posthog_user"."date_joined",
         "posthog_user"."uuid",
         "posthog_user"."current_organization_id",
         "posthog_user"."current_team_id",
         "posthog_user"."email",
         "posthog_user"."pending_email",
         "posthog_user"."temporary_token",
         "posthog_user"."distinct_id",
         "posthog_user"."is_email_verified",
         "posthog_user"."requested_password_reset_at",
         "posthog_user"."has_seen_product_intro_for",
         "posthog_user"."strapi_id",
         "posthog_user"."is_active",
         "posthog_user"."role_at_organization",
         "posthog_user"."theme_mode",
         "posthog_user"."partial_notification_settings",
         "posthog_user"."anonymize_data",
         "posthog_user"."toolbar_mode",
         "posthog_user"."hedgehog_config",
         "posthog_user"."events_column_config",
         "posthog_user"."email_opt_in",
         T5."id",
         T5."password",
         T5."last_login",
         T5."first_name",
         T5."last_name",
         T5."is_staff",
         T5."date_joined",
         T5."uuid",
         T5."current_organization_id",
         T5."current_team_id",
         T5."email",
         T5."pending_email",
         T5."temporary_token",
         T5."distinct_id",
         T5."is_email_verified",
         T5."requested_password_reset_at",
         T5."has_seen_product_intro_for",
         T5."strapi_id",
         T5."is_active",
         T5."role_at_organization",
         T5."theme_mode",
         T5."partial_notification_settings",
         T5."anonymize_data",
         T5."toolbar_mode",
         T5."hedgehog_config",
         T5."events_column_config",
         T5."email_opt_in"
  FROM "posthog_dashboarditem"
  INNER JOIN "posthog_team" ON ("posthog_dashboarditem"."team_id" = "posthog_team"."id")
  LEFT OUTER JOIN "posthog_user" ON ("posthog_dashboarditem"."created_by_id" = "posthog_user"."id")
  LEFT OUTER JOIN "posthog_user" T5 ON ("posthog_dashboarditem"."last_modified_by_id" = T5."id")
  WHERE ("posthog_team"."project_id" = 99999
         AND NOT ("posthog_dashboarditem"."deleted"))
  ORDER BY "posthog_dashboarditem"."order" ASC
  LIMIT 100
  '''
# ---
# name: TestInsight.test_listing_insights_does_not_nplus1.31
  '''
  SELECT ("posthog_dashboardtile"."insight_id") AS "_prefetch_related_val_insight_id",
         "posthog_dashboard"."id",
         "posthog_dashboard"."name",
         "posthog_dashboard"."description",
         "posthog_dashboard"."team_id",
         "posthog_dashboard"."pinned",
         "posthog_dashboard"."created_at",
         "posthog_dashboard"."created_by_id",
         "posthog_dashboard"."deleted",
         "posthog_dashboard"."last_accessed_at",
         "posthog_dashboard"."filters",
         "posthog_dashboard"."variables",
         "posthog_dashboard"."creation_mode",
         "posthog_dashboard"."restriction_level",
         "posthog_dashboard"."deprecated_tags",
         "posthog_dashboard"."tags",
         "posthog_dashboard"."share_token",
         "posthog_dashboard"."is_shared",
         "posthog_team"."id",
         "posthog_team"."uuid",
         "posthog_team"."organization_id",
         "posthog_team"."project_id",
         "posthog_team"."api_token",
         "posthog_team"."app_urls",
         "posthog_team"."name",
         "posthog_team"."slack_incoming_webhook",
         "posthog_team"."created_at",
         "posthog_team"."updated_at",
         "posthog_team"."anonymize_ips",
         "posthog_team"."completed_snippet_onboarding",
         "posthog_team"."has_completed_onboarding_for",
         "posthog_team"."ingested_event",
         "posthog_team"."autocapture_opt_out",
         "posthog_team"."autocapture_web_vitals_opt_in",
         "posthog_team"."autocapture_web_vitals_allowed_metrics",
         "posthog_team"."autocapture_exceptions_opt_in",
         "posthog_team"."autocapture_exceptions_errors_to_ignore",
         "posthog_team"."person_processing_opt_out",
         "posthog_team"."session_recording_opt_in",
         "posthog_team"."session_recording_sample_rate",
         "posthog_team"."session_recording_minimum_duration_milliseconds",
         "posthog_team"."session_recording_linked_flag",
         "posthog_team"."session_recording_network_payload_capture_config",
         "posthog_team"."session_recording_url_trigger_config",
         "posthog_team"."session_recording_url_blocklist_config",
         "posthog_team"."session_recording_event_trigger_config",
         "posthog_team"."session_replay_config",
         "posthog_team"."survey_config",
         "posthog_team"."capture_console_log_opt_in",
         "posthog_team"."capture_performance_opt_in",
         "posthog_team"."capture_dead_clicks",
         "posthog_team"."surveys_opt_in",
         "posthog_team"."heatmaps_opt_in",
         "posthog_team"."flags_persistence_default",
         "posthog_team"."session_recording_version",
         "posthog_team"."signup_token",
         "posthog_team"."is_demo",
         "posthog_team"."access_control",
         "posthog_team"."week_start_day",
         "posthog_team"."inject_web_apps",
         "posthog_team"."test_account_filters",
         "posthog_team"."test_account_filters_default_checked",
         "posthog_team"."path_cleaning_filters",
         "posthog_team"."timezone",
         "posthog_team"."data_attributes",
         "posthog_team"."person_display_name_properties",
         "posthog_team"."live_events_columns",
         "posthog_team"."recording_domains",
         "posthog_team"."human_friendly_comparison_periods",
         "posthog_team"."cookieless_server_hash_mode",
         "posthog_team"."revenue_tracking_config",
         "posthog_team"."primary_dashboard_id",
         "posthog_team"."default_data_theme",
         "posthog_team"."extra_settings",
         "posthog_team"."modifiers",
         "posthog_team"."correlation_config",
         "posthog_team"."session_recording_retention_period_days",
         "posthog_team"."plugins_opt_in",
         "posthog_team"."opt_out_capture",
         "posthog_team"."event_names",
         "posthog_team"."event_names_with_usage",
         "posthog_team"."event_properties",
         "posthog_team"."event_properties_with_usage",
         "posthog_team"."event_properties_numerical",
         "posthog_team"."external_data_workspace_id",
         "posthog_team"."external_data_workspace_last_synced_at",
         "posthog_organization"."id",
         "posthog_organization"."name",
         "posthog_organization"."slug",
         "posthog_organization"."logo_media_id",
         "posthog_organization"."created_at",
         "posthog_organization"."updated_at",
         "posthog_organization"."plugins_access_level",
         "posthog_organization"."for_internal_metrics",
         "posthog_organization"."is_member_join_email_enabled",
         "posthog_organization"."enforce_2fa",
         "posthog_organization"."is_hipaa",
         "posthog_organization"."customer_id",
         "posthog_organization"."available_product_features",
         "posthog_organization"."usage",
         "posthog_organization"."never_drop_data",
         "posthog_organization"."customer_trust_scores",
         "posthog_organization"."setup_section_2_completed",
         "posthog_organization"."personalization",
         "posthog_organization"."domain_whitelist"
  FROM "posthog_dashboard"
  INNER JOIN "posthog_dashboardtile" ON ("posthog_dashboard"."id" = "posthog_dashboardtile"."dashboard_id")
  INNER JOIN "posthog_team" ON ("posthog_dashboard"."team_id" = "posthog_team"."id")
  INNER JOIN "posthog_organization" ON ("posthog_team"."organization_id" = "posthog_organization"."id")
  WHERE (NOT ("posthog_dashboard"."deleted")
         AND "posthog_dashboardtile"."insight_id" IN (1,
                                                      2,
                                                      3,
                                                      4,
                                                      5 /* ... */))
  '''
# ---
# name: TestInsight.test_listing_insights_does_not_nplus1.32
  '''
  SELECT "posthog_dashboardtile"."id",
         "posthog_dashboardtile"."dashboard_id",
         "posthog_dashboardtile"."insight_id",
         "posthog_dashboardtile"."text_id",
         "posthog_dashboardtile"."layouts",
         "posthog_dashboardtile"."color",
         "posthog_dashboardtile"."filters_hash",
         "posthog_dashboardtile"."last_refresh",
         "posthog_dashboardtile"."refreshing",
         "posthog_dashboardtile"."refresh_attempt",
         "posthog_dashboardtile"."deleted",
         "posthog_dashboard"."id",
         "posthog_dashboard"."name",
         "posthog_dashboard"."description",
         "posthog_dashboard"."team_id",
         "posthog_dashboard"."pinned",
         "posthog_dashboard"."created_at",
         "posthog_dashboard"."created_by_id",
         "posthog_dashboard"."deleted",
         "posthog_dashboard"."last_accessed_at",
         "posthog_dashboard"."filters",
         "posthog_dashboard"."variables",
         "posthog_dashboard"."creation_mode",
         "posthog_dashboard"."restriction_level",
         "posthog_dashboard"."deprecated_tags",
         "posthog_dashboard"."tags",
         "posthog_dashboard"."share_token",
         "posthog_dashboard"."is_shared",
         "posthog_team"."id",
         "posthog_team"."uuid",
         "posthog_team"."organization_id",
         "posthog_team"."project_id",
         "posthog_team"."api_token",
         "posthog_team"."app_urls",
         "posthog_team"."name",
         "posthog_team"."slack_incoming_webhook",
         "posthog_team"."created_at",
         "posthog_team"."updated_at",
         "posthog_team"."anonymize_ips",
         "posthog_team"."completed_snippet_onboarding",
         "posthog_team"."has_completed_onboarding_for",
         "posthog_team"."ingested_event",
         "posthog_team"."autocapture_opt_out",
         "posthog_team"."autocapture_web_vitals_opt_in",
         "posthog_team"."autocapture_web_vitals_allowed_metrics",
         "posthog_team"."autocapture_exceptions_opt_in",
         "posthog_team"."autocapture_exceptions_errors_to_ignore",
         "posthog_team"."person_processing_opt_out",
         "posthog_team"."session_recording_opt_in",
         "posthog_team"."session_recording_sample_rate",
         "posthog_team"."session_recording_minimum_duration_milliseconds",
         "posthog_team"."session_recording_linked_flag",
         "posthog_team"."session_recording_network_payload_capture_config",
         "posthog_team"."session_recording_url_trigger_config",
         "posthog_team"."session_recording_url_blocklist_config",
         "posthog_team"."session_recording_event_trigger_config",
         "posthog_team"."session_replay_config",
         "posthog_team"."survey_config",
         "posthog_team"."capture_console_log_opt_in",
         "posthog_team"."capture_performance_opt_in",
         "posthog_team"."capture_dead_clicks",
         "posthog_team"."surveys_opt_in",
         "posthog_team"."heatmaps_opt_in",
         "posthog_team"."flags_persistence_default",
         "posthog_team"."session_recording_version",
         "posthog_team"."signup_token",
         "posthog_team"."is_demo",
         "posthog_team"."access_control",
         "posthog_team"."week_start_day",
         "posthog_team"."inject_web_apps",
         "posthog_team"."test_account_filters",
         "posthog_team"."test_account_filters_default_checked",
         "posthog_team"."path_cleaning_filters",
         "posthog_team"."timezone",
         "posthog_team"."data_attributes",
         "posthog_team"."person_display_name_properties",
         "posthog_team"."live_events_columns",
         "posthog_team"."recording_domains",
         "posthog_team"."human_friendly_comparison_periods",
         "posthog_team"."cookieless_server_hash_mode",
         "posthog_team"."revenue_tracking_config",
         "posthog_team"."primary_dashboard_id",
         "posthog_team"."default_data_theme",
         "posthog_team"."extra_settings",
         "posthog_team"."modifiers",
         "posthog_team"."correlation_config",
         "posthog_team"."session_recording_retention_period_days",
         "posthog_team"."plugins_opt_in",
         "posthog_team"."opt_out_capture",
         "posthog_team"."event_names",
         "posthog_team"."event_names_with_usage",
         "posthog_team"."event_properties",
         "posthog_team"."event_properties_with_usage",
         "posthog_team"."event_properties_numerical",
         "posthog_team"."external_data_workspace_id",
         "posthog_team"."external_data_workspace_last_synced_at",
         "posthog_organization"."id",
         "posthog_organization"."name",
         "posthog_organization"."slug",
         "posthog_organization"."logo_media_id",
         "posthog_organization"."created_at",
         "posthog_organization"."updated_at",
         "posthog_organization"."plugins_access_level",
         "posthog_organization"."for_internal_metrics",
         "posthog_organization"."is_member_join_email_enabled",
         "posthog_organization"."enforce_2fa",
         "posthog_organization"."is_hipaa",
         "posthog_organization"."customer_id",
         "posthog_organization"."available_product_features",
         "posthog_organization"."usage",
         "posthog_organization"."never_drop_data",
         "posthog_organization"."customer_trust_scores",
         "posthog_organization"."setup_section_2_completed",
         "posthog_organization"."personalization",
         "posthog_organization"."domain_whitelist"
  FROM "posthog_dashboardtile"
  INNER JOIN "posthog_dashboard" ON ("posthog_dashboardtile"."dashboard_id" = "posthog_dashboard"."id")
  INNER JOIN "posthog_team" ON ("posthog_dashboard"."team_id" = "posthog_team"."id")
  INNER JOIN "posthog_organization" ON ("posthog_team"."organization_id" = "posthog_organization"."id")
  WHERE (NOT ("posthog_dashboardtile"."deleted"
              AND "posthog_dashboardtile"."deleted" IS NOT NULL)
         AND NOT ("posthog_dashboard"."deleted")
         AND "posthog_dashboardtile"."insight_id" IN (1,
                                                      2,
                                                      3,
                                                      4,
                                                      5 /* ... */))
  '''
# ---
# name: TestInsight.test_listing_insights_does_not_nplus1.33
  '''
  SELECT "posthog_taggeditem"."id",
         "posthog_taggeditem"."tag_id",
         "posthog_taggeditem"."dashboard_id",
         "posthog_taggeditem"."insight_id",
         "posthog_taggeditem"."event_definition_id",
         "posthog_taggeditem"."property_definition_id",
         "posthog_taggeditem"."action_id",
         "posthog_taggeditem"."feature_flag_id",
         "posthog_taggeditem"."experiment_saved_metric_id"
  FROM "posthog_taggeditem"
  WHERE "posthog_taggeditem"."insight_id" IN (1,
                                              2,
                                              3,
                                              4,
                                              5 /* ... */)
  '''
# ---
# name: TestInsight.test_listing_insights_does_not_nplus1.34
  '''
  SELECT "ee_accesscontrol"."id",
         "ee_accesscontrol"."team_id",
         "ee_accesscontrol"."access_level",
         "ee_accesscontrol"."resource",
         "ee_accesscontrol"."resource_id",
         "ee_accesscontrol"."organization_member_id",
         "ee_accesscontrol"."role_id",
         "ee_accesscontrol"."created_by_id",
         "ee_accesscontrol"."created_at",
         "ee_accesscontrol"."updated_at"
  FROM "ee_accesscontrol"
  LEFT OUTER JOIN "posthog_organizationmembership" ON ("ee_accesscontrol"."organization_member_id" = "posthog_organizationmembership"."id")
  WHERE (("ee_accesscontrol"."organization_member_id" IS NULL
          AND "ee_accesscontrol"."resource" = 'insight'
          AND "ee_accesscontrol"."resource_id" = '99999'
          AND "ee_accesscontrol"."role_id" IS NULL
          AND "ee_accesscontrol"."team_id" = 99999)
         OR ("posthog_organizationmembership"."user_id" = 99999
             AND "ee_accesscontrol"."resource" = 'insight'
             AND "ee_accesscontrol"."resource_id" = '99999'
             AND "ee_accesscontrol"."role_id" IS NULL
             AND "ee_accesscontrol"."team_id" = 99999)
         OR ("ee_accesscontrol"."organization_member_id" IS NULL
             AND "ee_accesscontrol"."resource" = 'insight'
             AND "ee_accesscontrol"."resource_id" = '99999'
             AND "ee_accesscontrol"."role_id" IS NULL
             AND "ee_accesscontrol"."team_id" = 99999)
         OR ("posthog_organizationmembership"."user_id" = 99999
             AND "ee_accesscontrol"."resource" = 'insight'
             AND "ee_accesscontrol"."resource_id" = '99999'
             AND "ee_accesscontrol"."role_id" IS NULL
             AND "ee_accesscontrol"."team_id" = 99999)
         OR ("ee_accesscontrol"."organization_member_id" IS NULL
             AND "ee_accesscontrol"."resource" = 'insight'
             AND "ee_accesscontrol"."resource_id" = '99999'
             AND "ee_accesscontrol"."role_id" IS NULL
             AND "ee_accesscontrol"."team_id" = 99999)
         OR ("posthog_organizationmembership"."user_id" = 99999
             AND "ee_accesscontrol"."resource" = 'insight'
             AND "ee_accesscontrol"."resource_id" = '99999'
             AND "ee_accesscontrol"."role_id" IS NULL
             AND "ee_accesscontrol"."team_id" = 99999)
         OR ("ee_accesscontrol"."organization_member_id" IS NULL
             AND "ee_accesscontrol"."resource" = 'insight'
             AND "ee_accesscontrol"."resource_id" = '99999'
             AND "ee_accesscontrol"."role_id" IS NULL
             AND "ee_accesscontrol"."team_id" = 99999)
         OR ("posthog_organizationmembership"."user_id" = 99999
             AND "ee_accesscontrol"."resource" = 'insight'
             AND "ee_accesscontrol"."resource_id" = '99999'
             AND "ee_accesscontrol"."role_id" IS NULL
             AND "ee_accesscontrol"."team_id" = 99999)
         OR ("ee_accesscontrol"."organization_member_id" IS NULL
             AND "ee_accesscontrol"."resource" = 'insight'
             AND "ee_accesscontrol"."resource_id" = '99999'
             AND "ee_accesscontrol"."role_id" IS NULL
             AND "ee_accesscontrol"."team_id" = 99999)
         OR ("posthog_organizationmembership"."user_id" = 99999
             AND "ee_accesscontrol"."resource" = 'insight'
             AND "ee_accesscontrol"."resource_id" = '99999'
             AND "ee_accesscontrol"."role_id" IS NULL
             AND "ee_accesscontrol"."team_id" = 99999))
  '''
# ---
# name: TestInsight.test_listing_insights_does_not_nplus1.4
  '''
  SELECT "posthog_organizationmembership"."id",
         "posthog_organizationmembership"."organization_id",
         "posthog_organizationmembership"."user_id",
         "posthog_organizationmembership"."level",
         "posthog_organizationmembership"."joined_at",
         "posthog_organizationmembership"."updated_at",
         "posthog_organization"."id",
         "posthog_organization"."name",
         "posthog_organization"."slug",
         "posthog_organization"."logo_media_id",
         "posthog_organization"."created_at",
         "posthog_organization"."updated_at",
         "posthog_organization"."plugins_access_level",
         "posthog_organization"."for_internal_metrics",
         "posthog_organization"."is_member_join_email_enabled",
         "posthog_organization"."enforce_2fa",
         "posthog_organization"."is_hipaa",
         "posthog_organization"."customer_id",
         "posthog_organization"."available_product_features",
         "posthog_organization"."usage",
         "posthog_organization"."never_drop_data",
         "posthog_organization"."customer_trust_scores",
         "posthog_organization"."setup_section_2_completed",
         "posthog_organization"."personalization",
         "posthog_organization"."domain_whitelist"
  FROM "posthog_organizationmembership"
  INNER JOIN "posthog_organization" ON ("posthog_organizationmembership"."organization_id" = "posthog_organization"."id")
  WHERE "posthog_organizationmembership"."user_id" = 99999
  '''
# ---
# name: TestInsight.test_listing_insights_does_not_nplus1.5
  '''
  SELECT "posthog_dashboard"."id",
         "posthog_dashboard"."name",
         "posthog_dashboard"."description",
         "posthog_dashboard"."team_id",
         "posthog_dashboard"."pinned",
         "posthog_dashboard"."created_at",
         "posthog_dashboard"."created_by_id",
         "posthog_dashboard"."deleted",
         "posthog_dashboard"."last_accessed_at",
         "posthog_dashboard"."filters",
         "posthog_dashboard"."variables",
         "posthog_dashboard"."creation_mode",
         "posthog_dashboard"."restriction_level",
         "posthog_dashboard"."deprecated_tags",
         "posthog_dashboard"."tags",
         "posthog_dashboard"."share_token",
         "posthog_dashboard"."is_shared"
  FROM "posthog_dashboard"
  WHERE (NOT ("posthog_dashboard"."deleted")
         AND "posthog_dashboard"."id" = 99999)
  LIMIT 21
  '''
# ---
# name: TestInsight.test_listing_insights_does_not_nplus1.6
  '''
  SELECT "posthog_team"."id",
         "posthog_team"."uuid",
         "posthog_team"."organization_id",
         "posthog_team"."project_id",
         "posthog_team"."api_token",
         "posthog_team"."app_urls",
         "posthog_team"."name",
         "posthog_team"."slack_incoming_webhook",
         "posthog_team"."created_at",
         "posthog_team"."updated_at",
         "posthog_team"."anonymize_ips",
         "posthog_team"."completed_snippet_onboarding",
         "posthog_team"."has_completed_onboarding_for",
         "posthog_team"."ingested_event",
         "posthog_team"."autocapture_opt_out",
         "posthog_team"."autocapture_web_vitals_opt_in",
         "posthog_team"."autocapture_web_vitals_allowed_metrics",
         "posthog_team"."autocapture_exceptions_opt_in",
         "posthog_team"."autocapture_exceptions_errors_to_ignore",
         "posthog_team"."person_processing_opt_out",
         "posthog_team"."session_recording_opt_in",
         "posthog_team"."session_recording_sample_rate",
         "posthog_team"."session_recording_minimum_duration_milliseconds",
         "posthog_team"."session_recording_linked_flag",
         "posthog_team"."session_recording_network_payload_capture_config",
         "posthog_team"."session_recording_url_trigger_config",
         "posthog_team"."session_recording_url_blocklist_config",
         "posthog_team"."session_recording_event_trigger_config",
         "posthog_team"."session_replay_config",
         "posthog_team"."survey_config",
         "posthog_team"."capture_console_log_opt_in",
         "posthog_team"."capture_performance_opt_in",
         "posthog_team"."capture_dead_clicks",
         "posthog_team"."surveys_opt_in",
         "posthog_team"."heatmaps_opt_in",
         "posthog_team"."flags_persistence_default",
         "posthog_team"."session_recording_version",
         "posthog_team"."signup_token",
         "posthog_team"."is_demo",
         "posthog_team"."access_control",
         "posthog_team"."week_start_day",
         "posthog_team"."inject_web_apps",
         "posthog_team"."test_account_filters",
         "posthog_team"."test_account_filters_default_checked",
         "posthog_team"."path_cleaning_filters",
         "posthog_team"."timezone",
         "posthog_team"."data_attributes",
         "posthog_team"."person_display_name_properties",
         "posthog_team"."live_events_columns",
         "posthog_team"."recording_domains",
         "posthog_team"."human_friendly_comparison_periods",
         "posthog_team"."cookieless_server_hash_mode",
         "posthog_team"."revenue_tracking_config",
         "posthog_team"."primary_dashboard_id",
         "posthog_team"."default_data_theme",
         "posthog_team"."extra_settings",
         "posthog_team"."modifiers",
         "posthog_team"."correlation_config",
         "posthog_team"."session_recording_retention_period_days",
         "posthog_team"."external_data_workspace_id",
         "posthog_team"."external_data_workspace_last_synced_at"
  FROM "posthog_team"
  WHERE "posthog_team"."id" = 99999
  LIMIT 21
  '''
# ---
# name: TestInsight.test_listing_insights_does_not_nplus1.7
  '''
  SELECT "posthog_dashboarditem"."id",
         "posthog_dashboarditem"."name",
         "posthog_dashboarditem"."derived_name",
         "posthog_dashboarditem"."description",
         "posthog_dashboarditem"."team_id",
         "posthog_dashboarditem"."filters",
         "posthog_dashboarditem"."filters_hash",
         "posthog_dashboarditem"."query",
         "posthog_dashboarditem"."order",
         "posthog_dashboarditem"."deleted",
         "posthog_dashboarditem"."saved",
         "posthog_dashboarditem"."created_at",
         "posthog_dashboarditem"."refreshing",
         "posthog_dashboarditem"."created_by_id",
         "posthog_dashboarditem"."is_sample",
         "posthog_dashboarditem"."short_id",
         "posthog_dashboarditem"."favorited",
         "posthog_dashboarditem"."refresh_attempt",
         "posthog_dashboarditem"."last_modified_at",
         "posthog_dashboarditem"."last_modified_by_id",
         "posthog_dashboarditem"."dashboard_id",
         "posthog_dashboarditem"."last_refresh",
         "posthog_dashboarditem"."layouts",
         "posthog_dashboarditem"."color",
         "posthog_dashboarditem"."dive_dashboard_id",
         "posthog_dashboarditem"."updated_at",
         "posthog_dashboarditem"."deprecated_tags",
         "posthog_dashboarditem"."tags"
  FROM "posthog_dashboarditem"
  WHERE "posthog_dashboarditem"."id" = 99999
  LIMIT 21
  '''
# ---
# name: TestInsight.test_listing_insights_does_not_nplus1.8
  '''
  SELECT "posthog_team"."id",
         "posthog_team"."uuid",
         "posthog_team"."organization_id",
         "posthog_team"."project_id",
         "posthog_team"."api_token",
         "posthog_team"."app_urls",
         "posthog_team"."name",
         "posthog_team"."slack_incoming_webhook",
         "posthog_team"."created_at",
         "posthog_team"."updated_at",
         "posthog_team"."anonymize_ips",
         "posthog_team"."completed_snippet_onboarding",
         "posthog_team"."has_completed_onboarding_for",
         "posthog_team"."ingested_event",
         "posthog_team"."autocapture_opt_out",
         "posthog_team"."autocapture_web_vitals_opt_in",
         "posthog_team"."autocapture_web_vitals_allowed_metrics",
         "posthog_team"."autocapture_exceptions_opt_in",
         "posthog_team"."autocapture_exceptions_errors_to_ignore",
         "posthog_team"."person_processing_opt_out",
         "posthog_team"."session_recording_opt_in",
         "posthog_team"."session_recording_sample_rate",
         "posthog_team"."session_recording_minimum_duration_milliseconds",
         "posthog_team"."session_recording_linked_flag",
         "posthog_team"."session_recording_network_payload_capture_config",
         "posthog_team"."session_recording_url_trigger_config",
         "posthog_team"."session_recording_url_blocklist_config",
         "posthog_team"."session_recording_event_trigger_config",
         "posthog_team"."session_replay_config",
         "posthog_team"."survey_config",
         "posthog_team"."capture_console_log_opt_in",
         "posthog_team"."capture_performance_opt_in",
         "posthog_team"."capture_dead_clicks",
         "posthog_team"."surveys_opt_in",
         "posthog_team"."heatmaps_opt_in",
         "posthog_team"."flags_persistence_default",
         "posthog_team"."session_recording_version",
         "posthog_team"."signup_token",
         "posthog_team"."is_demo",
         "posthog_team"."access_control",
         "posthog_team"."week_start_day",
         "posthog_team"."inject_web_apps",
         "posthog_team"."test_account_filters",
         "posthog_team"."test_account_filters_default_checked",
         "posthog_team"."path_cleaning_filters",
         "posthog_team"."timezone",
         "posthog_team"."data_attributes",
         "posthog_team"."person_display_name_properties",
         "posthog_team"."live_events_columns",
         "posthog_team"."recording_domains",
         "posthog_team"."human_friendly_comparison_periods",
         "posthog_team"."cookieless_server_hash_mode",
         "posthog_team"."revenue_tracking_config",
         "posthog_team"."primary_dashboard_id",
         "posthog_team"."default_data_theme",
         "posthog_team"."extra_settings",
         "posthog_team"."modifiers",
         "posthog_team"."correlation_config",
         "posthog_team"."session_recording_retention_period_days",
         "posthog_team"."plugins_opt_in",
         "posthog_team"."opt_out_capture",
         "posthog_team"."event_names",
         "posthog_team"."event_names_with_usage",
         "posthog_team"."event_properties",
         "posthog_team"."event_properties_with_usage",
         "posthog_team"."event_properties_numerical",
         "posthog_team"."external_data_workspace_id",
         "posthog_team"."external_data_workspace_last_synced_at"
  FROM "posthog_team"
  WHERE "posthog_team"."id" = 99999
  LIMIT 21
  '''
# ---
# name: TestInsight.test_listing_insights_does_not_nplus1.9
  '''
  SELECT "posthog_dashboard"."id",
         "posthog_dashboard"."name",
         "posthog_dashboard"."description",
         "posthog_dashboard"."team_id",
         "posthog_dashboard"."pinned",
         "posthog_dashboard"."created_at",
         "posthog_dashboard"."created_by_id",
         "posthog_dashboard"."deleted",
         "posthog_dashboard"."last_accessed_at",
         "posthog_dashboard"."filters",
         "posthog_dashboard"."variables",
         "posthog_dashboard"."creation_mode",
         "posthog_dashboard"."restriction_level",
         "posthog_dashboard"."deprecated_tags",
         "posthog_dashboard"."tags",
         "posthog_dashboard"."share_token",
         "posthog_dashboard"."is_shared"
  FROM "posthog_dashboard"
  WHERE (NOT ("posthog_dashboard"."deleted")
         AND "posthog_dashboard"."id" IN (1,
                                          2,
                                          3,
                                          4,
                                          5 /* ... */))
  '''
# ---
