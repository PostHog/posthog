# serializer version: 1
# name: TestSourceConfigGenerator.test_source_config_types
  '''
  # This file is automatically generated from AVAILABLE_SOURCES.
  # Do not edit manually - run `pnpm generate:source-configs` to regenerate.
  
  from posthog.temporal.data_imports.pipelines.source import config
  from posthog.warehouse.models import ExternalDataSource
  from posthog.warehouse.models.ssh_tunnel import SSHTunnelConfig
  from typing import Any, Literal
  
  
  @config.config
  class StripeSelectWithFieldsConfig(config.Config):
      option_1_input: str
      option_2_input: str
      selection: Literal["option_1", "option_2"] = "1"
  
  
  @config.config
  class StripeSwitchGroupConfig(config.Config):
      enabled: bool = config.value(converter=config.str_to_bool, default=False)
      input_field_1: str | None = None
      input_field_2: str | None = None
  
  
  @config.config
  class StripeSourceConfig(config.Config):
      select_with_fields: StripeSelectWithFieldsConfig
      oauth_integration_id: str
      file_upload: dict[str, Any]
      ssh_tunnel: SSHTunnelConfig
      input_field: str | None = None
      switch_group: StripeSwitchGroupConfig | None = None
      select_with_options: Literal["1", "0"] = "1"
  
  
  def get_config_for_source(source: "ExternalDataSource.Type"):
      return {
          ExternalDataSource.Type.STRIPE: StripeSourceConfig,
      }[source]
  
  '''
# ---
