# manually copied from github.com/posthog/proxy-provisioner@6b0fc2d
# ruff: noqa
# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""

import grpc

import posthog.temporal.proxy_service.proto.proxy_provisioner_pb2 as proto_dot_proxy__provisioner__pb2


class ProxyProvisionerServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Create = channel.unary_unary(
            "/provisioner.ProxyProvisionerService/Create",
            request_serializer=proto_dot_proxy__provisioner__pb2.CreateRequest.SerializeToString,
            response_deserializer=proto_dot_proxy__provisioner__pb2.CreateResponse.FromString,
        )
        self.Status = channel.unary_unary(
            "/provisioner.ProxyProvisionerService/Status",
            request_serializer=proto_dot_proxy__provisioner__pb2.StatusRequest.SerializeToString,
            response_deserializer=proto_dot_proxy__provisioner__pb2.StatusResponse.FromString,
        )
        self.Delete = channel.unary_unary(
            "/provisioner.ProxyProvisionerService/Delete",
            request_serializer=proto_dot_proxy__provisioner__pb2.DeleteRequest.SerializeToString,
            response_deserializer=proto_dot_proxy__provisioner__pb2.DeleteResponse.FromString,
        )


class ProxyProvisionerServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Create(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def Status(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def Delete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_ProxyProvisionerServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "Create": grpc.unary_unary_rpc_method_handler(
            servicer.Create,
            request_deserializer=proto_dot_proxy__provisioner__pb2.CreateRequest.FromString,
            response_serializer=proto_dot_proxy__provisioner__pb2.CreateResponse.SerializeToString,
        ),
        "Status": grpc.unary_unary_rpc_method_handler(
            servicer.Status,
            request_deserializer=proto_dot_proxy__provisioner__pb2.StatusRequest.FromString,
            response_serializer=proto_dot_proxy__provisioner__pb2.StatusResponse.SerializeToString,
        ),
        "Delete": grpc.unary_unary_rpc_method_handler(
            servicer.Delete,
            request_deserializer=proto_dot_proxy__provisioner__pb2.DeleteRequest.FromString,
            response_serializer=proto_dot_proxy__provisioner__pb2.DeleteResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler("provisioner.ProxyProvisionerService", rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class ProxyProvisionerService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Create(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/provisioner.ProxyProvisionerService/Create",
            proto_dot_proxy__provisioner__pb2.CreateRequest.SerializeToString,
            proto_dot_proxy__provisioner__pb2.CreateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def Status(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/provisioner.ProxyProvisionerService/Status",
            proto_dot_proxy__provisioner__pb2.StatusRequest.SerializeToString,
            proto_dot_proxy__provisioner__pb2.StatusResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def Delete(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/provisioner.ProxyProvisionerService/Delete",
            proto_dot_proxy__provisioner__pb2.DeleteRequest.SerializeToString,
            proto_dot_proxy__provisioner__pb2.DeleteResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
