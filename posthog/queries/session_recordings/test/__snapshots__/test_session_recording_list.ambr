# name: TestClickhouseSessionRecordingsList.test_any_event_filter_with_properties
  '
  
  SELECT session_recordings.session_id,
         any(session_recordings.start_time) as start_time,
         any(session_recordings.end_time) as end_time,
         any(session_recordings.click_count) as click_count,
         any(session_recordings.keypress_count) as keypress_count,
         any(session_recordings.urls) as urls,
         any(session_recordings.duration) as duration,
         any(session_recordings.distinct_id) as distinct_id ,
         countIf(1 = 1
                 AND (has(['Chrome'], replaceRegexpAll(JSONExtractRaw(properties, '$browser'), '^"|"$', '')))) as count_event_match_0 ,
         groupUniqArrayIf(100)((events.timestamp,
                                events.uuid,
                                events.session_id,
                                events.window_id), 1 = 1
                               AND (has(['Chrome'], replaceRegexpAll(JSONExtractRaw(properties, '$browser'), '^"|"$', '')))) as matching_events_0
  FROM
    (SELECT uuid,
            distinct_id,
            event,
            team_id, timestamp, "$session_id" AS session_id,
                                "$window_id" AS window_id ,
                                events.properties as properties
     FROM events
     WHERE team_id = 2
       AND timestamp >= '2021-01-13 12:00:00'
       AND timestamp <= '2021-01-22 08:00:00' ) AS events
  JOIN
    (SELECT session_id,
            any(window_id) as window_id,
            minIf(first_event_timestamp, first_event_timestamp != '1970-01-01 00:00:00') as start_time,
            MAX(last_event_timestamp) as end_time,
            SUM(click_count) as click_count,
            SUM(keypress_count) as keypress_count,
            groupArrayArray(urls) as urls,
            dateDiff('second', start_time, end_time) as duration,
            any(distinct_id) as distinct_id,
            SUM(has_full_snapshot) as full_snapshots
     FROM session_recording_events PREWHERE team_id = 2
     AND timestamp >= '2021-01-13 12:00:00'
     AND timestamp <= '2021-01-22 08:00:00'
     GROUP BY session_id
     HAVING full_snapshots > 0
     AND start_time >= '2021-01-14 00:00:00'
     AND start_time <= '2021-01-21 20:00:00') AS session_recordings ON session_recordings.distinct_id = events.distinct_id
  WHERE ((notEmpty(events.session_id)
          AND events.session_id == session_recordings.session_id)
         OR (empty(events.session_id)
             AND (events.timestamp >= session_recordings.start_time
                  AND events.timestamp <= session_recordings.end_time)))
  GROUP BY session_recordings.session_id
  HAVING 1 = 1
  AND count_event_match_0 > 0
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0
  '
---
# name: TestClickhouseSessionRecordingsList.test_any_event_filter_with_properties.1
  '
  
  SELECT session_recordings.session_id,
         any(session_recordings.start_time) as start_time,
         any(session_recordings.end_time) as end_time,
         any(session_recordings.click_count) as click_count,
         any(session_recordings.keypress_count) as keypress_count,
         any(session_recordings.urls) as urls,
         any(session_recordings.duration) as duration,
         any(session_recordings.distinct_id) as distinct_id ,
         countIf(1 = 1
                 AND (has(['Firefox'], replaceRegexpAll(JSONExtractRaw(properties, '$browser'), '^"|"$', '')))) as count_event_match_0 ,
         groupUniqArrayIf(100)((events.timestamp,
                                events.uuid,
                                events.session_id,
                                events.window_id), 1 = 1
                               AND (has(['Firefox'], replaceRegexpAll(JSONExtractRaw(properties, '$browser'), '^"|"$', '')))) as matching_events_0
  FROM
    (SELECT uuid,
            distinct_id,
            event,
            team_id, timestamp, "$session_id" AS session_id,
                                "$window_id" AS window_id ,
                                events.properties as properties
     FROM events
     WHERE team_id = 2
       AND timestamp >= '2021-01-13 12:00:00'
       AND timestamp <= '2021-01-22 08:00:00' ) AS events
  JOIN
    (SELECT session_id,
            any(window_id) as window_id,
            minIf(first_event_timestamp, first_event_timestamp != '1970-01-01 00:00:00') as start_time,
            MAX(last_event_timestamp) as end_time,
            SUM(click_count) as click_count,
            SUM(keypress_count) as keypress_count,
            groupArrayArray(urls) as urls,
            dateDiff('second', start_time, end_time) as duration,
            any(distinct_id) as distinct_id,
            SUM(has_full_snapshot) as full_snapshots
     FROM session_recording_events PREWHERE team_id = 2
     AND timestamp >= '2021-01-13 12:00:00'
     AND timestamp <= '2021-01-22 08:00:00'
     GROUP BY session_id
     HAVING full_snapshots > 0
     AND start_time >= '2021-01-14 00:00:00'
     AND start_time <= '2021-01-21 20:00:00') AS session_recordings ON session_recordings.distinct_id = events.distinct_id
  WHERE ((notEmpty(events.session_id)
          AND events.session_id == session_recordings.session_id)
         OR (empty(events.session_id)
             AND (events.timestamp >= session_recordings.start_time
                  AND events.timestamp <= session_recordings.end_time)))
  GROUP BY session_recordings.session_id
  HAVING 1 = 1
  AND count_event_match_0 > 0
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0
  '
---
# name: TestClickhouseSessionRecordingsList.test_any_event_filter_with_properties_materialized
  '
  
  SELECT session_recordings.session_id,
         any(session_recordings.start_time) as start_time,
         any(session_recordings.end_time) as end_time,
         any(session_recordings.click_count) as click_count,
         any(session_recordings.keypress_count) as keypress_count,
         any(session_recordings.urls) as urls,
         any(session_recordings.duration) as duration,
         any(session_recordings.distinct_id) as distinct_id ,
         countIf(1 = 1
                 AND (has(['Chrome'], "mat_$browser"))) as count_event_match_0 ,
         groupUniqArrayIf(100)((events.timestamp,
                                events.uuid,
                                events.session_id,
                                events.window_id), 1 = 1
                               AND (has(['Chrome'], "mat_$browser"))) as matching_events_0
  FROM
    (SELECT uuid,
            distinct_id,
            event,
            team_id, timestamp, "$session_id" AS session_id,
                                "$window_id" AS window_id ,
                                events.mat_$browser as mat_$browser
     FROM events
     WHERE team_id = 2
       AND timestamp >= '2021-01-13 12:00:00'
       AND timestamp <= '2021-01-22 08:00:00' ) AS events
  JOIN
    (SELECT session_id,
            any(window_id) as window_id,
            minIf(first_event_timestamp, first_event_timestamp != '1970-01-01 00:00:00') as start_time,
            MAX(last_event_timestamp) as end_time,
            SUM(click_count) as click_count,
            SUM(keypress_count) as keypress_count,
            groupArrayArray(urls) as urls,
            dateDiff('second', start_time, end_time) as duration,
            any(distinct_id) as distinct_id,
            SUM(has_full_snapshot) as full_snapshots
     FROM session_recording_events PREWHERE team_id = 2
     AND timestamp >= '2021-01-13 12:00:00'
     AND timestamp <= '2021-01-22 08:00:00'
     GROUP BY session_id
     HAVING full_snapshots > 0
     AND start_time >= '2021-01-14 00:00:00'
     AND start_time <= '2021-01-21 20:00:00') AS session_recordings ON session_recordings.distinct_id = events.distinct_id
  WHERE ((notEmpty(events.session_id)
          AND events.session_id == session_recordings.session_id)
         OR (empty(events.session_id)
             AND (events.timestamp >= session_recordings.start_time
                  AND events.timestamp <= session_recordings.end_time)))
  GROUP BY session_recordings.session_id
  HAVING 1 = 1
  AND count_event_match_0 > 0
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0
  '
---
# name: TestClickhouseSessionRecordingsList.test_any_event_filter_with_properties_materialized.1
  '
  
  SELECT session_recordings.session_id,
         any(session_recordings.start_time) as start_time,
         any(session_recordings.end_time) as end_time,
         any(session_recordings.click_count) as click_count,
         any(session_recordings.keypress_count) as keypress_count,
         any(session_recordings.urls) as urls,
         any(session_recordings.duration) as duration,
         any(session_recordings.distinct_id) as distinct_id ,
         countIf(1 = 1
                 AND (has(['Firefox'], "mat_$browser"))) as count_event_match_0 ,
         groupUniqArrayIf(100)((events.timestamp,
                                events.uuid,
                                events.session_id,
                                events.window_id), 1 = 1
                               AND (has(['Firefox'], "mat_$browser"))) as matching_events_0
  FROM
    (SELECT uuid,
            distinct_id,
            event,
            team_id, timestamp, "$session_id" AS session_id,
                                "$window_id" AS window_id ,
                                events.mat_$browser as mat_$browser
     FROM events
     WHERE team_id = 2
       AND timestamp >= '2021-01-13 12:00:00'
       AND timestamp <= '2021-01-22 08:00:00' ) AS events
  JOIN
    (SELECT session_id,
            any(window_id) as window_id,
            minIf(first_event_timestamp, first_event_timestamp != '1970-01-01 00:00:00') as start_time,
            MAX(last_event_timestamp) as end_time,
            SUM(click_count) as click_count,
            SUM(keypress_count) as keypress_count,
            groupArrayArray(urls) as urls,
            dateDiff('second', start_time, end_time) as duration,
            any(distinct_id) as distinct_id,
            SUM(has_full_snapshot) as full_snapshots
     FROM session_recording_events PREWHERE team_id = 2
     AND timestamp >= '2021-01-13 12:00:00'
     AND timestamp <= '2021-01-22 08:00:00'
     GROUP BY session_id
     HAVING full_snapshots > 0
     AND start_time >= '2021-01-14 00:00:00'
     AND start_time <= '2021-01-21 20:00:00') AS session_recordings ON session_recordings.distinct_id = events.distinct_id
  WHERE ((notEmpty(events.session_id)
          AND events.session_id == session_recordings.session_id)
         OR (empty(events.session_id)
             AND (events.timestamp >= session_recordings.start_time
                  AND events.timestamp <= session_recordings.end_time)))
  GROUP BY session_recordings.session_id
  HAVING 1 = 1
  AND count_event_match_0 > 0
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0
  '
---
# name: TestClickhouseSessionRecordingsList.test_event_filter
  '
  
  SELECT session_recordings.session_id,
         any(session_recordings.start_time) as start_time,
         any(session_recordings.end_time) as end_time,
         any(session_recordings.click_count) as click_count,
         any(session_recordings.keypress_count) as keypress_count,
         any(session_recordings.urls) as urls,
         any(session_recordings.duration) as duration,
         any(session_recordings.distinct_id) as distinct_id ,
         countIf(event = '$pageview') as count_event_match_0 ,
         groupUniqArrayIf(100)((events.timestamp,
                                events.uuid,
                                events.session_id,
                                events.window_id), event = '$pageview') as matching_events_0
  FROM
    (SELECT uuid,
            distinct_id,
            event,
            team_id, timestamp, "$session_id" AS session_id,
                                "$window_id" AS window_id
     FROM events
     WHERE team_id = 2
       AND event IN ['$pageview']
       AND timestamp >= '2021-01-13 12:00:00'
       AND timestamp <= '2021-01-22 08:00:00' ) AS events
  JOIN
    (SELECT session_id,
            any(window_id) as window_id,
            minIf(first_event_timestamp, first_event_timestamp != '1970-01-01 00:00:00') as start_time,
            MAX(last_event_timestamp) as end_time,
            SUM(click_count) as click_count,
            SUM(keypress_count) as keypress_count,
            groupArrayArray(urls) as urls,
            dateDiff('second', start_time, end_time) as duration,
            any(distinct_id) as distinct_id,
            SUM(has_full_snapshot) as full_snapshots
     FROM session_recording_events PREWHERE team_id = 2
     AND timestamp >= '2021-01-13 12:00:00'
     AND timestamp <= '2021-01-22 08:00:00'
     GROUP BY session_id
     HAVING full_snapshots > 0
     AND start_time >= '2021-01-14 00:00:00'
     AND start_time <= '2021-01-21 20:00:00') AS session_recordings ON session_recordings.distinct_id = events.distinct_id
  WHERE ((notEmpty(events.session_id)
          AND events.session_id == session_recordings.session_id)
         OR (empty(events.session_id)
             AND (events.timestamp >= session_recordings.start_time
                  AND events.timestamp <= session_recordings.end_time)))
  GROUP BY session_recordings.session_id
  HAVING 1 = 1
  AND count_event_match_0 > 0
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0
  '
---
# name: TestClickhouseSessionRecordingsList.test_event_filter.1
  '
  
  SELECT session_recordings.session_id,
         any(session_recordings.start_time) as start_time,
         any(session_recordings.end_time) as end_time,
         any(session_recordings.click_count) as click_count,
         any(session_recordings.keypress_count) as keypress_count,
         any(session_recordings.urls) as urls,
         any(session_recordings.duration) as duration,
         any(session_recordings.distinct_id) as distinct_id ,
         countIf(event = '$autocapture') as count_event_match_0 ,
         groupUniqArrayIf(100)((events.timestamp,
                                events.uuid,
                                events.session_id,
                                events.window_id), event = '$autocapture') as matching_events_0
  FROM
    (SELECT uuid,
            distinct_id,
            event,
            team_id, timestamp, "$session_id" AS session_id,
                                "$window_id" AS window_id
     FROM events
     WHERE team_id = 2
       AND event IN ['$autocapture']
       AND timestamp >= '2021-01-13 12:00:00'
       AND timestamp <= '2021-01-22 08:00:00' ) AS events
  JOIN
    (SELECT session_id,
            any(window_id) as window_id,
            minIf(first_event_timestamp, first_event_timestamp != '1970-01-01 00:00:00') as start_time,
            MAX(last_event_timestamp) as end_time,
            SUM(click_count) as click_count,
            SUM(keypress_count) as keypress_count,
            groupArrayArray(urls) as urls,
            dateDiff('second', start_time, end_time) as duration,
            any(distinct_id) as distinct_id,
            SUM(has_full_snapshot) as full_snapshots
     FROM session_recording_events PREWHERE team_id = 2
     AND timestamp >= '2021-01-13 12:00:00'
     AND timestamp <= '2021-01-22 08:00:00'
     GROUP BY session_id
     HAVING full_snapshots > 0
     AND start_time >= '2021-01-14 00:00:00'
     AND start_time <= '2021-01-21 20:00:00') AS session_recordings ON session_recordings.distinct_id = events.distinct_id
  WHERE ((notEmpty(events.session_id)
          AND events.session_id == session_recordings.session_id)
         OR (empty(events.session_id)
             AND (events.timestamp >= session_recordings.start_time
                  AND events.timestamp <= session_recordings.end_time)))
  GROUP BY session_recordings.session_id
  HAVING 1 = 1
  AND count_event_match_0 > 0
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0
  '
---
# name: TestClickhouseSessionRecordingsList.test_event_filter_with_cohort_properties
  '
  
  SELECT count(DISTINCT person_id)
  FROM cohortpeople
  WHERE team_id = 2
    AND cohort_id = 2
    AND version = NULL
  '
---
# name: TestClickhouseSessionRecordingsList.test_event_filter_with_cohort_properties.1
  '
  
  SELECT count(DISTINCT person_id)
  FROM cohortpeople
  WHERE team_id = 2
    AND cohort_id = 2
    AND version = 0
  '
---
# name: TestClickhouseSessionRecordingsList.test_event_filter_with_cohort_properties.2
  '
  
  SELECT session_recordings.session_id,
         any(session_recordings.start_time) as start_time,
         any(session_recordings.end_time) as end_time,
         any(session_recordings.click_count) as click_count,
         any(session_recordings.keypress_count) as keypress_count,
         any(session_recordings.urls) as urls,
         any(session_recordings.duration) as duration,
         any(session_recordings.distinct_id) as distinct_id
  FROM
    (SELECT session_id,
            any(window_id) as window_id,
            minIf(first_event_timestamp, first_event_timestamp != '1970-01-01 00:00:00') as start_time,
            MAX(last_event_timestamp) as end_time,
            SUM(click_count) as click_count,
            SUM(keypress_count) as keypress_count,
            groupArrayArray(urls) as urls,
            dateDiff('second', start_time, end_time) as duration,
            any(distinct_id) as distinct_id,
            SUM(has_full_snapshot) as full_snapshots
     FROM session_recording_events PREWHERE team_id = 2
     AND timestamp >= '2021-08-13 12:00:00'
     AND timestamp <= '2021-08-22 08:00:00'
     GROUP BY session_id
     HAVING full_snapshots > 0
     AND start_time >= '2021-08-14 00:00:00'
     AND start_time <= '2021-08-21 20:00:00') AS session_recordings
  JOIN
    (SELECT distinct_id,
            argMax(person_id, version) as person_id
     FROM person_distinct_id2
     WHERE team_id = 2
     GROUP BY distinct_id
     HAVING argMax(is_deleted, version) = 0) as pdi ON pdi.distinct_id = session_recordings.distinct_id
  INNER JOIN
    (SELECT id
     FROM person
     WHERE team_id = 2
     GROUP BY id
     HAVING max(is_deleted) = 0) person ON person.id = pdi.person_id
  WHERE 1 = 1
    AND (pdi.person_id IN
           (SELECT DISTINCT person_id
            FROM cohortpeople
            WHERE team_id = 2
              AND cohort_id = 2
              AND version = 0 ))
  GROUP BY session_recordings.session_id
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0
  '
---
# name: TestClickhouseSessionRecordingsList.test_event_filter_with_hogql_properties
  '
  
  SELECT session_recordings.session_id,
         any(session_recordings.start_time) as start_time,
         any(session_recordings.end_time) as end_time,
         any(session_recordings.click_count) as click_count,
         any(session_recordings.keypress_count) as keypress_count,
         any(session_recordings.urls) as urls,
         any(session_recordings.duration) as duration,
         any(session_recordings.distinct_id) as distinct_id ,
         countIf(event = '$pageview'
                 AND (ifNull(equals(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(properties, '$browser'), ''), 'null'), '^"|"$', ''), 'Chrome'), 0)
                      AND ifNull(equals(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(person_props, 'email'), ''), 'null'), '^"|"$', ''), 'bla'), 0))) as count_event_match_0 ,
         groupUniqArrayIf(100)((events.timestamp,
                                events.uuid,
                                events.session_id,
                                events.window_id), event = '$pageview'
                               AND (ifNull(equals(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(properties, '$browser'), ''), 'null'), '^"|"$', ''), 'Chrome'), 0)
                                    AND ifNull(equals(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(person_props, 'email'), ''), 'null'), '^"|"$', ''), 'bla'), 0))) as matching_events_0
  FROM
    (SELECT uuid,
            distinct_id,
            event,
            team_id, timestamp, "$session_id" AS session_id,
                                "$window_id" AS window_id ,
                                events.properties as properties
     FROM events
     WHERE team_id = 2
       AND event IN ['$pageview']
       AND timestamp >= '2021-01-13 12:00:00'
       AND timestamp <= '2021-01-22 08:00:00' ) AS events
  JOIN
    (SELECT session_id,
            any(window_id) as window_id,
            minIf(first_event_timestamp, first_event_timestamp != '1970-01-01 00:00:00') as start_time,
            MAX(last_event_timestamp) as end_time,
            SUM(click_count) as click_count,
            SUM(keypress_count) as keypress_count,
            groupArrayArray(urls) as urls,
            dateDiff('second', start_time, end_time) as duration,
            any(distinct_id) as distinct_id,
            SUM(has_full_snapshot) as full_snapshots
     FROM session_recording_events PREWHERE team_id = 2
     AND timestamp >= '2021-01-13 12:00:00'
     AND timestamp <= '2021-01-22 08:00:00'
     GROUP BY session_id
     HAVING full_snapshots > 0
     AND start_time >= '2021-01-14 00:00:00'
     AND start_time <= '2021-01-21 20:00:00') AS session_recordings ON session_recordings.distinct_id = events.distinct_id
  JOIN
    (SELECT distinct_id,
            argMax(person_id, version) as person_id
     FROM person_distinct_id2
     WHERE team_id = 2
     GROUP BY distinct_id
     HAVING argMax(is_deleted, version) = 0) as pdi ON pdi.distinct_id = session_recordings.distinct_id
  INNER JOIN
    (SELECT id,
            argMax(properties, version) as person_props
     FROM person
     WHERE team_id = 2
     GROUP BY id
     HAVING max(is_deleted) = 0) person ON person.id = pdi.person_id
  WHERE ((notEmpty(events.session_id)
          AND events.session_id == session_recordings.session_id)
         OR (empty(events.session_id)
             AND (events.timestamp >= session_recordings.start_time
                  AND events.timestamp <= session_recordings.end_time)))
  GROUP BY session_recordings.session_id
  HAVING 1 = 1
  AND count_event_match_0 > 0
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0
  '
---
# name: TestClickhouseSessionRecordingsList.test_event_filter_with_hogql_properties.1
  '
  
  SELECT session_recordings.session_id,
         any(session_recordings.start_time) as start_time,
         any(session_recordings.end_time) as end_time,
         any(session_recordings.click_count) as click_count,
         any(session_recordings.keypress_count) as keypress_count,
         any(session_recordings.urls) as urls,
         any(session_recordings.duration) as duration,
         any(session_recordings.distinct_id) as distinct_id ,
         countIf(event = '$pageview'
                 AND (ifNull(equals(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(properties, '$browser'), ''), 'null'), '^"|"$', ''), 'Firefox'), 0))) as count_event_match_0 ,
         groupUniqArrayIf(100)((events.timestamp,
                                events.uuid,
                                events.session_id,
                                events.window_id), event = '$pageview'
                               AND (ifNull(equals(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(properties, '$browser'), ''), 'null'), '^"|"$', ''), 'Firefox'), 0))) as matching_events_0
  FROM
    (SELECT uuid,
            distinct_id,
            event,
            team_id, timestamp, "$session_id" AS session_id,
                                "$window_id" AS window_id ,
                                events.properties as properties
     FROM events
     WHERE team_id = 2
       AND event IN ['$pageview']
       AND timestamp >= '2021-01-13 12:00:00'
       AND timestamp <= '2021-01-22 08:00:00' ) AS events
  JOIN
    (SELECT session_id,
            any(window_id) as window_id,
            minIf(first_event_timestamp, first_event_timestamp != '1970-01-01 00:00:00') as start_time,
            MAX(last_event_timestamp) as end_time,
            SUM(click_count) as click_count,
            SUM(keypress_count) as keypress_count,
            groupArrayArray(urls) as urls,
            dateDiff('second', start_time, end_time) as duration,
            any(distinct_id) as distinct_id,
            SUM(has_full_snapshot) as full_snapshots
     FROM session_recording_events PREWHERE team_id = 2
     AND timestamp >= '2021-01-13 12:00:00'
     AND timestamp <= '2021-01-22 08:00:00'
     GROUP BY session_id
     HAVING full_snapshots > 0
     AND start_time >= '2021-01-14 00:00:00'
     AND start_time <= '2021-01-21 20:00:00') AS session_recordings ON session_recordings.distinct_id = events.distinct_id
  WHERE ((notEmpty(events.session_id)
          AND events.session_id == session_recordings.session_id)
         OR (empty(events.session_id)
             AND (events.timestamp >= session_recordings.start_time
                  AND events.timestamp <= session_recordings.end_time)))
  GROUP BY session_recordings.session_id
  HAVING 1 = 1
  AND count_event_match_0 > 0
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0
  '
---
# name: TestClickhouseSessionRecordingsList.test_event_filter_with_hogql_properties_materialized
  '
  
  SELECT session_recordings.session_id,
         any(session_recordings.start_time) as start_time,
         any(session_recordings.end_time) as end_time,
         any(session_recordings.click_count) as click_count,
         any(session_recordings.keypress_count) as keypress_count,
         any(session_recordings.urls) as urls,
         any(session_recordings.duration) as duration,
         any(session_recordings.distinct_id) as distinct_id ,
         countIf(event = '$pageview'
                 AND (ifNull(equals(nullIf(nullIf(events.`mat_$browser`, ''), 'null'), 'Chrome'), 0)
                      AND ifNull(equals(nullIf(nullIf(pmat_email, ''), 'null'), 'bla'), 0))) as count_event_match_0 ,
         groupUniqArrayIf(100)((events.timestamp,
                                events.uuid,
                                events.session_id,
                                events.window_id), event = '$pageview'
                               AND (ifNull(equals(nullIf(nullIf(events.`mat_$browser`, ''), 'null'), 'Chrome'), 0)
                                    AND ifNull(equals(nullIf(nullIf(pmat_email, ''), 'null'), 'bla'), 0))) as matching_events_0
  FROM
    (SELECT uuid,
            distinct_id,
            event,
            team_id, timestamp, "$session_id" AS session_id,
                                "$window_id" AS window_id ,
                                events.mat_$browser as mat_$browser
     FROM events
     WHERE team_id = 2
       AND event IN ['$pageview']
       AND timestamp >= '2021-01-13 12:00:00'
       AND timestamp <= '2021-01-22 08:00:00' ) AS events
  JOIN
    (SELECT session_id,
            any(window_id) as window_id,
            minIf(first_event_timestamp, first_event_timestamp != '1970-01-01 00:00:00') as start_time,
            MAX(last_event_timestamp) as end_time,
            SUM(click_count) as click_count,
            SUM(keypress_count) as keypress_count,
            groupArrayArray(urls) as urls,
            dateDiff('second', start_time, end_time) as duration,
            any(distinct_id) as distinct_id,
            SUM(has_full_snapshot) as full_snapshots
     FROM session_recording_events PREWHERE team_id = 2
     AND timestamp >= '2021-01-13 12:00:00'
     AND timestamp <= '2021-01-22 08:00:00'
     GROUP BY session_id
     HAVING full_snapshots > 0
     AND start_time >= '2021-01-14 00:00:00'
     AND start_time <= '2021-01-21 20:00:00') AS session_recordings ON session_recordings.distinct_id = events.distinct_id
  JOIN
    (SELECT distinct_id,
            argMax(person_id, version) as person_id
     FROM person_distinct_id2
     WHERE team_id = 2
     GROUP BY distinct_id
     HAVING argMax(is_deleted, version) = 0) as pdi ON pdi.distinct_id = session_recordings.distinct_id
  INNER JOIN
    (SELECT id,
            argMax(pmat_email, version) as pmat_email
     FROM person
     WHERE team_id = 2
     GROUP BY id
     HAVING max(is_deleted) = 0) person ON person.id = pdi.person_id
  WHERE ((notEmpty(events.session_id)
          AND events.session_id == session_recordings.session_id)
         OR (empty(events.session_id)
             AND (events.timestamp >= session_recordings.start_time
                  AND events.timestamp <= session_recordings.end_time)))
  GROUP BY session_recordings.session_id
  HAVING 1 = 1
  AND count_event_match_0 > 0
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0
  '
---
# name: TestClickhouseSessionRecordingsList.test_event_filter_with_hogql_properties_materialized.1
  '
  
  SELECT session_recordings.session_id,
         any(session_recordings.start_time) as start_time,
         any(session_recordings.end_time) as end_time,
         any(session_recordings.click_count) as click_count,
         any(session_recordings.keypress_count) as keypress_count,
         any(session_recordings.urls) as urls,
         any(session_recordings.duration) as duration,
         any(session_recordings.distinct_id) as distinct_id ,
         countIf(event = '$pageview'
                 AND (ifNull(equals(nullIf(nullIf(events.`mat_$browser`, ''), 'null'), 'Firefox'), 0))) as count_event_match_0 ,
         groupUniqArrayIf(100)((events.timestamp,
                                events.uuid,
                                events.session_id,
                                events.window_id), event = '$pageview'
                               AND (ifNull(equals(nullIf(nullIf(events.`mat_$browser`, ''), 'null'), 'Firefox'), 0))) as matching_events_0
  FROM
    (SELECT uuid,
            distinct_id,
            event,
            team_id, timestamp, "$session_id" AS session_id,
                                "$window_id" AS window_id ,
                                events.mat_$browser as mat_$browser
     FROM events
     WHERE team_id = 2
       AND event IN ['$pageview']
       AND timestamp >= '2021-01-13 12:00:00'
       AND timestamp <= '2021-01-22 08:00:00' ) AS events
  JOIN
    (SELECT session_id,
            any(window_id) as window_id,
            minIf(first_event_timestamp, first_event_timestamp != '1970-01-01 00:00:00') as start_time,
            MAX(last_event_timestamp) as end_time,
            SUM(click_count) as click_count,
            SUM(keypress_count) as keypress_count,
            groupArrayArray(urls) as urls,
            dateDiff('second', start_time, end_time) as duration,
            any(distinct_id) as distinct_id,
            SUM(has_full_snapshot) as full_snapshots
     FROM session_recording_events PREWHERE team_id = 2
     AND timestamp >= '2021-01-13 12:00:00'
     AND timestamp <= '2021-01-22 08:00:00'
     GROUP BY session_id
     HAVING full_snapshots > 0
     AND start_time >= '2021-01-14 00:00:00'
     AND start_time <= '2021-01-21 20:00:00') AS session_recordings ON session_recordings.distinct_id = events.distinct_id
  WHERE ((notEmpty(events.session_id)
          AND events.session_id == session_recordings.session_id)
         OR (empty(events.session_id)
             AND (events.timestamp >= session_recordings.start_time
                  AND events.timestamp <= session_recordings.end_time)))
  GROUP BY session_recordings.session_id
  HAVING 1 = 1
  AND count_event_match_0 > 0
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0
  '
---
# name: TestClickhouseSessionRecordingsList.test_event_filter_with_matching_on_session_id
  '
  
  SELECT session_recordings.session_id,
         any(session_recordings.start_time) as start_time,
         any(session_recordings.end_time) as end_time,
         any(session_recordings.click_count) as click_count,
         any(session_recordings.keypress_count) as keypress_count,
         any(session_recordings.urls) as urls,
         any(session_recordings.duration) as duration,
         any(session_recordings.distinct_id) as distinct_id ,
         countIf(event = '$pageview') as count_event_match_0 ,
         groupUniqArrayIf(100)((events.timestamp,
                                events.uuid,
                                events.session_id,
                                events.window_id), event = '$pageview') as matching_events_0
  FROM
    (SELECT uuid,
            distinct_id,
            event,
            team_id, timestamp, "$session_id" AS session_id,
                                "$window_id" AS window_id
     FROM events
     WHERE team_id = 2
       AND event IN ['$pageview']
       AND timestamp >= '2021-01-13 12:00:00'
       AND timestamp <= '2021-01-22 08:00:00' ) AS events
  JOIN
    (SELECT session_id,
            any(window_id) as window_id,
            minIf(first_event_timestamp, first_event_timestamp != '1970-01-01 00:00:00') as start_time,
            MAX(last_event_timestamp) as end_time,
            SUM(click_count) as click_count,
            SUM(keypress_count) as keypress_count,
            groupArrayArray(urls) as urls,
            dateDiff('second', start_time, end_time) as duration,
            any(distinct_id) as distinct_id,
            SUM(has_full_snapshot) as full_snapshots
     FROM session_recording_events PREWHERE team_id = 2
     AND timestamp >= '2021-01-13 12:00:00'
     AND timestamp <= '2021-01-22 08:00:00'
     GROUP BY session_id
     HAVING full_snapshots > 0
     AND start_time >= '2021-01-14 00:00:00'
     AND start_time <= '2021-01-21 20:00:00') AS session_recordings ON session_recordings.distinct_id = events.distinct_id
  WHERE ((notEmpty(events.session_id)
          AND events.session_id == session_recordings.session_id)
         OR (empty(events.session_id)
             AND (events.timestamp >= session_recordings.start_time
                  AND events.timestamp <= session_recordings.end_time)))
  GROUP BY session_recordings.session_id
  HAVING 1 = 1
  AND count_event_match_0 > 0
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0
  '
---
# name: TestClickhouseSessionRecordingsList.test_event_filter_with_matching_on_session_id.1
  '
  
  SELECT session_recordings.session_id,
         any(session_recordings.start_time) as start_time,
         any(session_recordings.end_time) as end_time,
         any(session_recordings.click_count) as click_count,
         any(session_recordings.keypress_count) as keypress_count,
         any(session_recordings.urls) as urls,
         any(session_recordings.duration) as duration,
         any(session_recordings.distinct_id) as distinct_id ,
         countIf(event = '$autocapture') as count_event_match_0 ,
         groupUniqArrayIf(100)((events.timestamp,
                                events.uuid,
                                events.session_id,
                                events.window_id), event = '$autocapture') as matching_events_0
  FROM
    (SELECT uuid,
            distinct_id,
            event,
            team_id, timestamp, "$session_id" AS session_id,
                                "$window_id" AS window_id
     FROM events
     WHERE team_id = 2
       AND event IN ['$autocapture']
       AND timestamp >= '2021-01-13 12:00:00'
       AND timestamp <= '2021-01-22 08:00:00' ) AS events
  JOIN
    (SELECT session_id,
            any(window_id) as window_id,
            minIf(first_event_timestamp, first_event_timestamp != '1970-01-01 00:00:00') as start_time,
            MAX(last_event_timestamp) as end_time,
            SUM(click_count) as click_count,
            SUM(keypress_count) as keypress_count,
            groupArrayArray(urls) as urls,
            dateDiff('second', start_time, end_time) as duration,
            any(distinct_id) as distinct_id,
            SUM(has_full_snapshot) as full_snapshots
     FROM session_recording_events PREWHERE team_id = 2
     AND timestamp >= '2021-01-13 12:00:00'
     AND timestamp <= '2021-01-22 08:00:00'
     GROUP BY session_id
     HAVING full_snapshots > 0
     AND start_time >= '2021-01-14 00:00:00'
     AND start_time <= '2021-01-21 20:00:00') AS session_recordings ON session_recordings.distinct_id = events.distinct_id
  WHERE ((notEmpty(events.session_id)
          AND events.session_id == session_recordings.session_id)
         OR (empty(events.session_id)
             AND (events.timestamp >= session_recordings.start_time
                  AND events.timestamp <= session_recordings.end_time)))
  GROUP BY session_recordings.session_id
  HAVING 1 = 1
  AND count_event_match_0 > 0
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0
  '
---
# name: TestClickhouseSessionRecordingsList.test_event_filter_with_person_properties
  '
  
  SELECT session_recordings.session_id,
         any(session_recordings.start_time) as start_time,
         any(session_recordings.end_time) as end_time,
         any(session_recordings.click_count) as click_count,
         any(session_recordings.keypress_count) as keypress_count,
         any(session_recordings.urls) as urls,
         any(session_recordings.duration) as duration,
         any(session_recordings.distinct_id) as distinct_id
  FROM
    (SELECT session_id,
            any(window_id) as window_id,
            minIf(first_event_timestamp, first_event_timestamp != '1970-01-01 00:00:00') as start_time,
            MAX(last_event_timestamp) as end_time,
            SUM(click_count) as click_count,
            SUM(keypress_count) as keypress_count,
            groupArrayArray(urls) as urls,
            dateDiff('second', start_time, end_time) as duration,
            any(distinct_id) as distinct_id,
            SUM(has_full_snapshot) as full_snapshots
     FROM session_recording_events PREWHERE team_id = 2
     AND timestamp >= '2021-01-13 12:00:00'
     AND timestamp <= '2021-01-22 08:00:00'
     GROUP BY session_id
     HAVING full_snapshots > 0
     AND start_time >= '2021-01-14 00:00:00'
     AND start_time <= '2021-01-21 20:00:00') AS session_recordings
  JOIN
    (SELECT distinct_id,
            argMax(person_id, version) as person_id
     FROM person_distinct_id2
     WHERE team_id = 2
     GROUP BY distinct_id
     HAVING argMax(is_deleted, version) = 0) as pdi ON pdi.distinct_id = session_recordings.distinct_id
  INNER JOIN
    (SELECT id
     FROM person
     WHERE team_id = 2
       AND id IN
         (SELECT id
          FROM person
          WHERE team_id = 2
            AND (has(['bla'], replaceRegexpAll(JSONExtractRaw(properties, 'email'), '^"|"$', ''))) )
     GROUP BY id
     HAVING max(is_deleted) = 0
     AND (has(['bla'], replaceRegexpAll(JSONExtractRaw(argMax(person.properties, version), 'email'), '^"|"$', '')))) person ON person.id = pdi.person_id
  WHERE 1 = 1
  GROUP BY session_recordings.session_id
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0
  '
---
# name: TestClickhouseSessionRecordingsList.test_event_filter_with_properties
  '
  
  SELECT session_recordings.session_id,
         any(session_recordings.start_time) as start_time,
         any(session_recordings.end_time) as end_time,
         any(session_recordings.click_count) as click_count,
         any(session_recordings.keypress_count) as keypress_count,
         any(session_recordings.urls) as urls,
         any(session_recordings.duration) as duration,
         any(session_recordings.distinct_id) as distinct_id ,
         countIf(event = '$pageview'
                 AND (has(['Chrome'], replaceRegexpAll(JSONExtractRaw(properties, '$browser'), '^"|"$', '')))) as count_event_match_0 ,
         groupUniqArrayIf(100)((events.timestamp,
                                events.uuid,
                                events.session_id,
                                events.window_id), event = '$pageview'
                               AND (has(['Chrome'], replaceRegexpAll(JSONExtractRaw(properties, '$browser'), '^"|"$', '')))) as matching_events_0
  FROM
    (SELECT uuid,
            distinct_id,
            event,
            team_id, timestamp, "$session_id" AS session_id,
                                "$window_id" AS window_id ,
                                events.properties as properties
     FROM events
     WHERE team_id = 2
       AND event IN ['$pageview']
       AND timestamp >= '2021-01-13 12:00:00'
       AND timestamp <= '2021-01-22 08:00:00' ) AS events
  JOIN
    (SELECT session_id,
            any(window_id) as window_id,
            minIf(first_event_timestamp, first_event_timestamp != '1970-01-01 00:00:00') as start_time,
            MAX(last_event_timestamp) as end_time,
            SUM(click_count) as click_count,
            SUM(keypress_count) as keypress_count,
            groupArrayArray(urls) as urls,
            dateDiff('second', start_time, end_time) as duration,
            any(distinct_id) as distinct_id,
            SUM(has_full_snapshot) as full_snapshots
     FROM session_recording_events PREWHERE team_id = 2
     AND timestamp >= '2021-01-13 12:00:00'
     AND timestamp <= '2021-01-22 08:00:00'
     GROUP BY session_id
     HAVING full_snapshots > 0
     AND start_time >= '2021-01-14 00:00:00'
     AND start_time <= '2021-01-21 20:00:00') AS session_recordings ON session_recordings.distinct_id = events.distinct_id
  WHERE ((notEmpty(events.session_id)
          AND events.session_id == session_recordings.session_id)
         OR (empty(events.session_id)
             AND (events.timestamp >= session_recordings.start_time
                  AND events.timestamp <= session_recordings.end_time)))
  GROUP BY session_recordings.session_id
  HAVING 1 = 1
  AND count_event_match_0 > 0
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0
  '
---
# name: TestClickhouseSessionRecordingsList.test_event_filter_with_properties.1
  '
  
  SELECT session_recordings.session_id,
         any(session_recordings.start_time) as start_time,
         any(session_recordings.end_time) as end_time,
         any(session_recordings.click_count) as click_count,
         any(session_recordings.keypress_count) as keypress_count,
         any(session_recordings.urls) as urls,
         any(session_recordings.duration) as duration,
         any(session_recordings.distinct_id) as distinct_id ,
         countIf(event = '$pageview'
                 AND (has(['Firefox'], replaceRegexpAll(JSONExtractRaw(properties, '$browser'), '^"|"$', '')))) as count_event_match_0 ,
         groupUniqArrayIf(100)((events.timestamp,
                                events.uuid,
                                events.session_id,
                                events.window_id), event = '$pageview'
                               AND (has(['Firefox'], replaceRegexpAll(JSONExtractRaw(properties, '$browser'), '^"|"$', '')))) as matching_events_0
  FROM
    (SELECT uuid,
            distinct_id,
            event,
            team_id, timestamp, "$session_id" AS session_id,
                                "$window_id" AS window_id ,
                                events.properties as properties
     FROM events
     WHERE team_id = 2
       AND event IN ['$pageview']
       AND timestamp >= '2021-01-13 12:00:00'
       AND timestamp <= '2021-01-22 08:00:00' ) AS events
  JOIN
    (SELECT session_id,
            any(window_id) as window_id,
            minIf(first_event_timestamp, first_event_timestamp != '1970-01-01 00:00:00') as start_time,
            MAX(last_event_timestamp) as end_time,
            SUM(click_count) as click_count,
            SUM(keypress_count) as keypress_count,
            groupArrayArray(urls) as urls,
            dateDiff('second', start_time, end_time) as duration,
            any(distinct_id) as distinct_id,
            SUM(has_full_snapshot) as full_snapshots
     FROM session_recording_events PREWHERE team_id = 2
     AND timestamp >= '2021-01-13 12:00:00'
     AND timestamp <= '2021-01-22 08:00:00'
     GROUP BY session_id
     HAVING full_snapshots > 0
     AND start_time >= '2021-01-14 00:00:00'
     AND start_time <= '2021-01-21 20:00:00') AS session_recordings ON session_recordings.distinct_id = events.distinct_id
  WHERE ((notEmpty(events.session_id)
          AND events.session_id == session_recordings.session_id)
         OR (empty(events.session_id)
             AND (events.timestamp >= session_recordings.start_time
                  AND events.timestamp <= session_recordings.end_time)))
  GROUP BY session_recordings.session_id
  HAVING 1 = 1
  AND count_event_match_0 > 0
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0
  '
---
# name: TestClickhouseSessionRecordingsList.test_event_filter_with_properties_materialized
  '
  
  SELECT session_recordings.session_id,
         any(session_recordings.start_time) as start_time,
         any(session_recordings.end_time) as end_time,
         any(session_recordings.click_count) as click_count,
         any(session_recordings.keypress_count) as keypress_count,
         any(session_recordings.urls) as urls,
         any(session_recordings.duration) as duration,
         any(session_recordings.distinct_id) as distinct_id ,
         countIf(event = '$pageview'
                 AND (has(['Chrome'], "mat_$browser"))) as count_event_match_0 ,
         groupUniqArrayIf(100)((events.timestamp,
                                events.uuid,
                                events.session_id,
                                events.window_id), event = '$pageview'
                               AND (has(['Chrome'], "mat_$browser"))) as matching_events_0
  FROM
    (SELECT uuid,
            distinct_id,
            event,
            team_id, timestamp, "$session_id" AS session_id,
                                "$window_id" AS window_id ,
                                events.mat_$browser as mat_$browser
     FROM events
     WHERE team_id = 2
       AND event IN ['$pageview']
       AND timestamp >= '2021-01-13 12:00:00'
       AND timestamp <= '2021-01-22 08:00:00' ) AS events
  JOIN
    (SELECT session_id,
            any(window_id) as window_id,
            minIf(first_event_timestamp, first_event_timestamp != '1970-01-01 00:00:00') as start_time,
            MAX(last_event_timestamp) as end_time,
            SUM(click_count) as click_count,
            SUM(keypress_count) as keypress_count,
            groupArrayArray(urls) as urls,
            dateDiff('second', start_time, end_time) as duration,
            any(distinct_id) as distinct_id,
            SUM(has_full_snapshot) as full_snapshots
     FROM session_recording_events PREWHERE team_id = 2
     AND timestamp >= '2021-01-13 12:00:00'
     AND timestamp <= '2021-01-22 08:00:00'
     GROUP BY session_id
     HAVING full_snapshots > 0
     AND start_time >= '2021-01-14 00:00:00'
     AND start_time <= '2021-01-21 20:00:00') AS session_recordings ON session_recordings.distinct_id = events.distinct_id
  WHERE ((notEmpty(events.session_id)
          AND events.session_id == session_recordings.session_id)
         OR (empty(events.session_id)
             AND (events.timestamp >= session_recordings.start_time
                  AND events.timestamp <= session_recordings.end_time)))
  GROUP BY session_recordings.session_id
  HAVING 1 = 1
  AND count_event_match_0 > 0
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0
  '
---
# name: TestClickhouseSessionRecordingsList.test_event_filter_with_properties_materialized.1
  '
  
  SELECT session_recordings.session_id,
         any(session_recordings.start_time) as start_time,
         any(session_recordings.end_time) as end_time,
         any(session_recordings.click_count) as click_count,
         any(session_recordings.keypress_count) as keypress_count,
         any(session_recordings.urls) as urls,
         any(session_recordings.duration) as duration,
         any(session_recordings.distinct_id) as distinct_id ,
         countIf(event = '$pageview'
                 AND (has(['Firefox'], "mat_$browser"))) as count_event_match_0 ,
         groupUniqArrayIf(100)((events.timestamp,
                                events.uuid,
                                events.session_id,
                                events.window_id), event = '$pageview'
                               AND (has(['Firefox'], "mat_$browser"))) as matching_events_0
  FROM
    (SELECT uuid,
            distinct_id,
            event,
            team_id, timestamp, "$session_id" AS session_id,
                                "$window_id" AS window_id ,
                                events.mat_$browser as mat_$browser
     FROM events
     WHERE team_id = 2
       AND event IN ['$pageview']
       AND timestamp >= '2021-01-13 12:00:00'
       AND timestamp <= '2021-01-22 08:00:00' ) AS events
  JOIN
    (SELECT session_id,
            any(window_id) as window_id,
            minIf(first_event_timestamp, first_event_timestamp != '1970-01-01 00:00:00') as start_time,
            MAX(last_event_timestamp) as end_time,
            SUM(click_count) as click_count,
            SUM(keypress_count) as keypress_count,
            groupArrayArray(urls) as urls,
            dateDiff('second', start_time, end_time) as duration,
            any(distinct_id) as distinct_id,
            SUM(has_full_snapshot) as full_snapshots
     FROM session_recording_events PREWHERE team_id = 2
     AND timestamp >= '2021-01-13 12:00:00'
     AND timestamp <= '2021-01-22 08:00:00'
     GROUP BY session_id
     HAVING full_snapshots > 0
     AND start_time >= '2021-01-14 00:00:00'
     AND start_time <= '2021-01-21 20:00:00') AS session_recordings ON session_recordings.distinct_id = events.distinct_id
  WHERE ((notEmpty(events.session_id)
          AND events.session_id == session_recordings.session_id)
         OR (empty(events.session_id)
             AND (events.timestamp >= session_recordings.start_time
                  AND events.timestamp <= session_recordings.end_time)))
  GROUP BY session_recordings.session_id
  HAVING 1 = 1
  AND count_event_match_0 > 0
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0
  '
---
# name: TestClickhouseSessionRecordingsList.test_multiple_event_filters
  '
  
  SELECT session_recordings.session_id,
         any(session_recordings.start_time) as start_time,
         any(session_recordings.end_time) as end_time,
         any(session_recordings.click_count) as click_count,
         any(session_recordings.keypress_count) as keypress_count,
         any(session_recordings.urls) as urls,
         any(session_recordings.duration) as duration,
         any(session_recordings.distinct_id) as distinct_id ,
         countIf(event = '$pageview') as count_event_match_0 ,
         groupUniqArrayIf(100)((events.timestamp,
                                events.uuid,
                                events.session_id,
                                events.window_id), event = '$pageview') as matching_events_0 ,
         countIf(event = 'new-event') as count_event_match_1 ,
         groupUniqArrayIf(100)((events.timestamp,
                                events.uuid,
                                events.session_id,
                                events.window_id), event = 'new-event') as matching_events_1
  FROM
    (SELECT uuid,
            distinct_id,
            event,
            team_id, timestamp, "$session_id" AS session_id,
                                "$window_id" AS window_id
     FROM events
     WHERE team_id = 2
       AND event IN ['$pageview', 'new-event']
       AND timestamp >= '2021-01-13 12:00:00'
       AND timestamp <= '2021-01-22 08:00:00' ) AS events
  JOIN
    (SELECT session_id,
            any(window_id) as window_id,
            minIf(first_event_timestamp, first_event_timestamp != '1970-01-01 00:00:00') as start_time,
            MAX(last_event_timestamp) as end_time,
            SUM(click_count) as click_count,
            SUM(keypress_count) as keypress_count,
            groupArrayArray(urls) as urls,
            dateDiff('second', start_time, end_time) as duration,
            any(distinct_id) as distinct_id,
            SUM(has_full_snapshot) as full_snapshots
     FROM session_recording_events PREWHERE team_id = 2
     AND timestamp >= '2021-01-13 12:00:00'
     AND timestamp <= '2021-01-22 08:00:00'
     GROUP BY session_id
     HAVING full_snapshots > 0
     AND start_time >= '2021-01-14 00:00:00'
     AND start_time <= '2021-01-21 20:00:00') AS session_recordings ON session_recordings.distinct_id = events.distinct_id
  WHERE ((notEmpty(events.session_id)
          AND events.session_id == session_recordings.session_id)
         OR (empty(events.session_id)
             AND (events.timestamp >= session_recordings.start_time
                  AND events.timestamp <= session_recordings.end_time)))
  GROUP BY session_recordings.session_id
  HAVING 1 = 1
  AND count_event_match_0 > 0
  AND count_event_match_1 > 0
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0
  '
---
# name: TestClickhouseSessionRecordingsList.test_multiple_event_filters.1
  '
  
  SELECT session_recordings.session_id,
         any(session_recordings.start_time) as start_time,
         any(session_recordings.end_time) as end_time,
         any(session_recordings.click_count) as click_count,
         any(session_recordings.keypress_count) as keypress_count,
         any(session_recordings.urls) as urls,
         any(session_recordings.duration) as duration,
         any(session_recordings.distinct_id) as distinct_id ,
         countIf(event = '$pageview') as count_event_match_0 ,
         groupUniqArrayIf(100)((events.timestamp,
                                events.uuid,
                                events.session_id,
                                events.window_id), event = '$pageview') as matching_events_0 ,
         countIf(event = 'new-event2') as count_event_match_1 ,
         groupUniqArrayIf(100)((events.timestamp,
                                events.uuid,
                                events.session_id,
                                events.window_id), event = 'new-event2') as matching_events_1
  FROM
    (SELECT uuid,
            distinct_id,
            event,
            team_id, timestamp, "$session_id" AS session_id,
                                "$window_id" AS window_id
     FROM events
     WHERE team_id = 2
       AND event IN ['$pageview', 'new-event2']
       AND timestamp >= '2021-01-13 12:00:00'
       AND timestamp <= '2021-01-22 08:00:00' ) AS events
  JOIN
    (SELECT session_id,
            any(window_id) as window_id,
            minIf(first_event_timestamp, first_event_timestamp != '1970-01-01 00:00:00') as start_time,
            MAX(last_event_timestamp) as end_time,
            SUM(click_count) as click_count,
            SUM(keypress_count) as keypress_count,
            groupArrayArray(urls) as urls,
            dateDiff('second', start_time, end_time) as duration,
            any(distinct_id) as distinct_id,
            SUM(has_full_snapshot) as full_snapshots
     FROM session_recording_events PREWHERE team_id = 2
     AND timestamp >= '2021-01-13 12:00:00'
     AND timestamp <= '2021-01-22 08:00:00'
     GROUP BY session_id
     HAVING full_snapshots > 0
     AND start_time >= '2021-01-14 00:00:00'
     AND start_time <= '2021-01-21 20:00:00') AS session_recordings ON session_recordings.distinct_id = events.distinct_id
  WHERE ((notEmpty(events.session_id)
          AND events.session_id == session_recordings.session_id)
         OR (empty(events.session_id)
             AND (events.timestamp >= session_recordings.start_time
                  AND events.timestamp <= session_recordings.end_time)))
  GROUP BY session_recordings.session_id
  HAVING 1 = 1
  AND count_event_match_0 > 0
  AND count_event_match_1 > 0
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0
  '
---
# name: TestClickhouseSessionRecordingsListV2.test_any_event_filter_with_properties
  '
  
  SELECT session_recordings.session_id,
         start_time,
         end_time,
         click_count,
         keypress_count,
         urls,
         duration,
         session_recordings.distinct_id as distinct_id ,
         matches_0 ,
         matching_events_0
  FROM
    (SELECT session_id,
            distinct_id ,
            groupUniqArrayIf(100)((timestamp, uuid,
                                              session_id,
                                              window_id), event_match_0 = 1) AS matching_events_0 ,
            sum(event_match_0) AS matches_0
     FROM
       (SELECT uuid,
               distinct_id,
               event,
               team_id, timestamp, "$session_id" AS session_id,
                                   "$window_id" AS window_id ,
                                   events.properties as properties ,
                                   if(1 = 1
                                      AND (has(['Chrome'], replaceRegexpAll(JSONExtractRaw(properties, '$browser'), '^"|"$', ''))), 1, 0) as event_match_0
        FROM events
        WHERE team_id = 2
          AND timestamp >= '2021-01-13 12:00:00'
          AND timestamp <= '2021-01-22 08:00:00'
          AND notEmpty(session_id) )
     GROUP BY session_id,
              distinct_id
     HAVING 1 = 1
     AND matches_0 > 0) AS events
  JOIN
    (SELECT session_id,
            any(window_id) as window_id,
            minIf(first_event_timestamp, first_event_timestamp != '1970-01-01 00:00:00') as start_time,
            MAX(last_event_timestamp) as end_time,
            SUM(click_count) as click_count,
            SUM(keypress_count) as keypress_count,
            groupArrayArray(urls) as urls,
            dateDiff('second', start_time, end_time) as duration,
            any(distinct_id) as distinct_id,
            SUM(has_full_snapshot) as full_snapshots
     FROM session_recording_events PREWHERE team_id = 2
     AND timestamp >= '2021-01-13 12:00:00'
     AND timestamp <= '2021-01-22 08:00:00'
     GROUP BY session_id
     HAVING full_snapshots > 0
     AND start_time >= '2021-01-14 00:00:00'
     AND start_time <= '2021-01-21 20:00:00') AS session_recordings ON session_recordings.session_id = events.session_id
  WHERE session_recordings.distinct_id == events.distinct_id
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0
  '
---
# name: TestClickhouseSessionRecordingsListV2.test_any_event_filter_with_properties.1
  '
  
  SELECT session_recordings.session_id,
         start_time,
         end_time,
         click_count,
         keypress_count,
         urls,
         duration,
         session_recordings.distinct_id as distinct_id ,
         matches_0 ,
         matching_events_0
  FROM
    (SELECT session_id,
            distinct_id ,
            groupUniqArrayIf(100)((timestamp, uuid,
                                              session_id,
                                              window_id), event_match_0 = 1) AS matching_events_0 ,
            sum(event_match_0) AS matches_0
     FROM
       (SELECT uuid,
               distinct_id,
               event,
               team_id, timestamp, "$session_id" AS session_id,
                                   "$window_id" AS window_id ,
                                   events.properties as properties ,
                                   if(1 = 1
                                      AND (has(['Firefox'], replaceRegexpAll(JSONExtractRaw(properties, '$browser'), '^"|"$', ''))), 1, 0) as event_match_0
        FROM events
        WHERE team_id = 2
          AND timestamp >= '2021-01-13 12:00:00'
          AND timestamp <= '2021-01-22 08:00:00'
          AND notEmpty(session_id) )
     GROUP BY session_id,
              distinct_id
     HAVING 1 = 1
     AND matches_0 > 0) AS events
  JOIN
    (SELECT session_id,
            any(window_id) as window_id,
            minIf(first_event_timestamp, first_event_timestamp != '1970-01-01 00:00:00') as start_time,
            MAX(last_event_timestamp) as end_time,
            SUM(click_count) as click_count,
            SUM(keypress_count) as keypress_count,
            groupArrayArray(urls) as urls,
            dateDiff('second', start_time, end_time) as duration,
            any(distinct_id) as distinct_id,
            SUM(has_full_snapshot) as full_snapshots
     FROM session_recording_events PREWHERE team_id = 2
     AND timestamp >= '2021-01-13 12:00:00'
     AND timestamp <= '2021-01-22 08:00:00'
     GROUP BY session_id
     HAVING full_snapshots > 0
     AND start_time >= '2021-01-14 00:00:00'
     AND start_time <= '2021-01-21 20:00:00') AS session_recordings ON session_recordings.session_id = events.session_id
  WHERE session_recordings.distinct_id == events.distinct_id
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0
  '
---
# name: TestClickhouseSessionRecordingsListV2.test_any_event_filter_with_properties_materialized
  '
  
  SELECT session_recordings.session_id,
         start_time,
         end_time,
         click_count,
         keypress_count,
         urls,
         duration,
         session_recordings.distinct_id as distinct_id ,
         matches_0 ,
         matching_events_0
  FROM
    (SELECT session_id,
            distinct_id ,
            groupUniqArrayIf(100)((timestamp, uuid,
                                              session_id,
                                              window_id), event_match_0 = 1) AS matching_events_0 ,
            sum(event_match_0) AS matches_0
     FROM
       (SELECT uuid,
               distinct_id,
               event,
               team_id, timestamp, "$session_id" AS session_id,
                                   "$window_id" AS window_id ,
                                   events.mat_$browser as mat_$browser ,
                                               if(1 = 1
                                                  AND (has(['Chrome'], "mat_$browser")), 1, 0) as event_match_0
        FROM events
        WHERE team_id = 2
          AND timestamp >= '2021-01-13 12:00:00'
          AND timestamp <= '2021-01-22 08:00:00'
          AND notEmpty(session_id) )
     GROUP BY session_id,
              distinct_id
     HAVING 1 = 1
     AND matches_0 > 0) AS events
  JOIN
    (SELECT session_id,
            any(window_id) as window_id,
            minIf(first_event_timestamp, first_event_timestamp != '1970-01-01 00:00:00') as start_time,
            MAX(last_event_timestamp) as end_time,
            SUM(click_count) as click_count,
            SUM(keypress_count) as keypress_count,
            groupArrayArray(urls) as urls,
            dateDiff('second', start_time, end_time) as duration,
            any(distinct_id) as distinct_id,
            SUM(has_full_snapshot) as full_snapshots
     FROM session_recording_events PREWHERE team_id = 2
     AND timestamp >= '2021-01-13 12:00:00'
     AND timestamp <= '2021-01-22 08:00:00'
     GROUP BY session_id
     HAVING full_snapshots > 0
     AND start_time >= '2021-01-14 00:00:00'
     AND start_time <= '2021-01-21 20:00:00') AS session_recordings ON session_recordings.session_id = events.session_id
  WHERE session_recordings.distinct_id == events.distinct_id
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0
  '
---
# name: TestClickhouseSessionRecordingsListV2.test_any_event_filter_with_properties_materialized.1
  '
  
  SELECT session_recordings.session_id,
         start_time,
         end_time,
         click_count,
         keypress_count,
         urls,
         duration,
         session_recordings.distinct_id as distinct_id ,
         matches_0 ,
         matching_events_0
  FROM
    (SELECT session_id,
            distinct_id ,
            groupUniqArrayIf(100)((timestamp, uuid,
                                              session_id,
                                              window_id), event_match_0 = 1) AS matching_events_0 ,
            sum(event_match_0) AS matches_0
     FROM
       (SELECT uuid,
               distinct_id,
               event,
               team_id, timestamp, "$session_id" AS session_id,
                                   "$window_id" AS window_id ,
                                   events.mat_$browser as mat_$browser ,
                                               if(1 = 1
                                                  AND (has(['Firefox'], "mat_$browser")), 1, 0) as event_match_0
        FROM events
        WHERE team_id = 2
          AND timestamp >= '2021-01-13 12:00:00'
          AND timestamp <= '2021-01-22 08:00:00'
          AND notEmpty(session_id) )
     GROUP BY session_id,
              distinct_id
     HAVING 1 = 1
     AND matches_0 > 0) AS events
  JOIN
    (SELECT session_id,
            any(window_id) as window_id,
            minIf(first_event_timestamp, first_event_timestamp != '1970-01-01 00:00:00') as start_time,
            MAX(last_event_timestamp) as end_time,
            SUM(click_count) as click_count,
            SUM(keypress_count) as keypress_count,
            groupArrayArray(urls) as urls,
            dateDiff('second', start_time, end_time) as duration,
            any(distinct_id) as distinct_id,
            SUM(has_full_snapshot) as full_snapshots
     FROM session_recording_events PREWHERE team_id = 2
     AND timestamp >= '2021-01-13 12:00:00'
     AND timestamp <= '2021-01-22 08:00:00'
     GROUP BY session_id
     HAVING full_snapshots > 0
     AND start_time >= '2021-01-14 00:00:00'
     AND start_time <= '2021-01-21 20:00:00') AS session_recordings ON session_recordings.session_id = events.session_id
  WHERE session_recordings.distinct_id == events.distinct_id
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0
  '
---
# name: TestClickhouseSessionRecordingsListV2.test_event_filter
  '
  
  SELECT session_recordings.session_id,
         start_time,
         end_time,
         click_count,
         keypress_count,
         urls,
         duration,
         session_recordings.distinct_id as distinct_id ,
         matches_0 ,
         matching_events_0
  FROM
    (SELECT session_id,
            distinct_id ,
            groupUniqArrayIf(100)((timestamp, uuid,
                                              session_id,
                                              window_id), event_match_0 = 1) AS matching_events_0 ,
            sum(event_match_0) AS matches_0
     FROM
       (SELECT uuid,
               distinct_id,
               event,
               team_id, timestamp, "$session_id" AS session_id,
                                   "$window_id" AS window_id ,
                                   if(event = '$pageview', 1, 0) as event_match_0
        FROM events
        WHERE team_id = 2
          AND event IN ['$pageview']
          AND timestamp >= '2021-01-13 12:00:00'
          AND timestamp <= '2021-01-22 08:00:00'
          AND notEmpty(session_id) )
     GROUP BY session_id,
              distinct_id
     HAVING 1 = 1
     AND matches_0 > 0) AS events
  JOIN
    (SELECT session_id,
            any(window_id) as window_id,
            minIf(first_event_timestamp, first_event_timestamp != '1970-01-01 00:00:00') as start_time,
            MAX(last_event_timestamp) as end_time,
            SUM(click_count) as click_count,
            SUM(keypress_count) as keypress_count,
            groupArrayArray(urls) as urls,
            dateDiff('second', start_time, end_time) as duration,
            any(distinct_id) as distinct_id,
            SUM(has_full_snapshot) as full_snapshots
     FROM session_recording_events PREWHERE team_id = 2
     AND timestamp >= '2021-01-13 12:00:00'
     AND timestamp <= '2021-01-22 08:00:00'
     GROUP BY session_id
     HAVING full_snapshots > 0
     AND start_time >= '2021-01-14 00:00:00'
     AND start_time <= '2021-01-21 20:00:00') AS session_recordings ON session_recordings.session_id = events.session_id
  WHERE session_recordings.distinct_id == events.distinct_id
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0
  '
---
# name: TestClickhouseSessionRecordingsListV2.test_event_filter.1
  '
  
  SELECT session_recordings.session_id,
         start_time,
         end_time,
         click_count,
         keypress_count,
         urls,
         duration,
         session_recordings.distinct_id as distinct_id ,
         matches_0 ,
         matching_events_0
  FROM
    (SELECT session_id,
            distinct_id ,
            groupUniqArrayIf(100)((timestamp, uuid,
                                              session_id,
                                              window_id), event_match_0 = 1) AS matching_events_0 ,
            sum(event_match_0) AS matches_0
     FROM
       (SELECT uuid,
               distinct_id,
               event,
               team_id, timestamp, "$session_id" AS session_id,
                                   "$window_id" AS window_id ,
                                   if(event = '$autocapture', 1, 0) as event_match_0
        FROM events
        WHERE team_id = 2
          AND event IN ['$autocapture']
          AND timestamp >= '2021-01-13 12:00:00'
          AND timestamp <= '2021-01-22 08:00:00'
          AND notEmpty(session_id) )
     GROUP BY session_id,
              distinct_id
     HAVING 1 = 1
     AND matches_0 > 0) AS events
  JOIN
    (SELECT session_id,
            any(window_id) as window_id,
            minIf(first_event_timestamp, first_event_timestamp != '1970-01-01 00:00:00') as start_time,
            MAX(last_event_timestamp) as end_time,
            SUM(click_count) as click_count,
            SUM(keypress_count) as keypress_count,
            groupArrayArray(urls) as urls,
            dateDiff('second', start_time, end_time) as duration,
            any(distinct_id) as distinct_id,
            SUM(has_full_snapshot) as full_snapshots
     FROM session_recording_events PREWHERE team_id = 2
     AND timestamp >= '2021-01-13 12:00:00'
     AND timestamp <= '2021-01-22 08:00:00'
     GROUP BY session_id
     HAVING full_snapshots > 0
     AND start_time >= '2021-01-14 00:00:00'
     AND start_time <= '2021-01-21 20:00:00') AS session_recordings ON session_recordings.session_id = events.session_id
  WHERE session_recordings.distinct_id == events.distinct_id
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0
  '
---
# name: TestClickhouseSessionRecordingsListV2.test_event_filter_with_cohort_properties
  '
  
  SELECT count(DISTINCT person_id)
  FROM cohortpeople
  WHERE team_id = 2
    AND cohort_id = 2
    AND version = NULL
  '
---
# name: TestClickhouseSessionRecordingsListV2.test_event_filter_with_cohort_properties.1
  '
  
  SELECT count(DISTINCT person_id)
  FROM cohortpeople
  WHERE team_id = 2
    AND cohort_id = 2
    AND version = 0
  '
---
# name: TestClickhouseSessionRecordingsListV2.test_event_filter_with_cohort_properties.2
  '
  
  SELECT session_recordings.session_id,
         any(session_recordings.start_time) as start_time,
         any(session_recordings.end_time) as end_time,
         any(session_recordings.click_count) as click_count,
         any(session_recordings.keypress_count) as keypress_count,
         any(session_recordings.urls) as urls,
         any(session_recordings.duration) as duration,
         any(session_recordings.distinct_id) as distinct_id
  FROM
    (SELECT session_id,
            any(window_id) as window_id,
            minIf(first_event_timestamp, first_event_timestamp != '1970-01-01 00:00:00') as start_time,
            MAX(last_event_timestamp) as end_time,
            SUM(click_count) as click_count,
            SUM(keypress_count) as keypress_count,
            groupArrayArray(urls) as urls,
            dateDiff('second', start_time, end_time) as duration,
            any(distinct_id) as distinct_id,
            SUM(has_full_snapshot) as full_snapshots
     FROM session_recording_events PREWHERE team_id = 2
     AND timestamp >= '2021-08-13 12:00:00'
     AND timestamp <= '2021-08-22 08:00:00'
     GROUP BY session_id
     HAVING full_snapshots > 0
     AND start_time >= '2021-08-14 00:00:00'
     AND start_time <= '2021-08-21 20:00:00') AS session_recordings
  JOIN
    (SELECT distinct_id,
            argMax(person_id, version) as person_id
     FROM person_distinct_id2
     WHERE team_id = 2
     GROUP BY distinct_id
     HAVING argMax(is_deleted, version) = 0) as pdi ON pdi.distinct_id = session_recordings.distinct_id
  INNER JOIN
    (SELECT id
     FROM person
     WHERE team_id = 2
     GROUP BY id
     HAVING max(is_deleted) = 0) person ON person.id = pdi.person_id
  WHERE 1 = 1
    AND (pdi.person_id IN
           (SELECT DISTINCT person_id
            FROM cohortpeople
            WHERE team_id = 2
              AND cohort_id = 2
              AND version = 0 ))
  GROUP BY session_recordings.session_id
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0
  '
---
# name: TestClickhouseSessionRecordingsListV2.test_event_filter_with_matching_on_session_id
  '
  
  SELECT session_recordings.session_id,
         start_time,
         end_time,
         click_count,
         keypress_count,
         urls,
         duration,
         session_recordings.distinct_id as distinct_id ,
         matches_0 ,
         matching_events_0
  FROM
    (SELECT session_id,
            distinct_id ,
            groupUniqArrayIf(100)((timestamp, uuid,
                                              session_id,
                                              window_id), event_match_0 = 1) AS matching_events_0 ,
            sum(event_match_0) AS matches_0
     FROM
       (SELECT uuid,
               distinct_id,
               event,
               team_id, timestamp, "$session_id" AS session_id,
                                   "$window_id" AS window_id ,
                                   if(event = '$pageview', 1, 0) as event_match_0
        FROM events
        WHERE team_id = 2
          AND event IN ['$pageview']
          AND timestamp >= '2021-01-13 12:00:00'
          AND timestamp <= '2021-01-22 08:00:00'
          AND notEmpty(session_id) )
     GROUP BY session_id,
              distinct_id
     HAVING 1 = 1
     AND matches_0 > 0) AS events
  JOIN
    (SELECT session_id,
            any(window_id) as window_id,
            minIf(first_event_timestamp, first_event_timestamp != '1970-01-01 00:00:00') as start_time,
            MAX(last_event_timestamp) as end_time,
            SUM(click_count) as click_count,
            SUM(keypress_count) as keypress_count,
            groupArrayArray(urls) as urls,
            dateDiff('second', start_time, end_time) as duration,
            any(distinct_id) as distinct_id,
            SUM(has_full_snapshot) as full_snapshots
     FROM session_recording_events PREWHERE team_id = 2
     AND timestamp >= '2021-01-13 12:00:00'
     AND timestamp <= '2021-01-22 08:00:00'
     GROUP BY session_id
     HAVING full_snapshots > 0
     AND start_time >= '2021-01-14 00:00:00'
     AND start_time <= '2021-01-21 20:00:00') AS session_recordings ON session_recordings.session_id = events.session_id
  WHERE session_recordings.distinct_id == events.distinct_id
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0
  '
---
# name: TestClickhouseSessionRecordingsListV2.test_event_filter_with_matching_on_session_id.1
  '
  
  SELECT session_recordings.session_id,
         start_time,
         end_time,
         click_count,
         keypress_count,
         urls,
         duration,
         session_recordings.distinct_id as distinct_id ,
         matches_0 ,
         matching_events_0
  FROM
    (SELECT session_id,
            distinct_id ,
            groupUniqArrayIf(100)((timestamp, uuid,
                                              session_id,
                                              window_id), event_match_0 = 1) AS matching_events_0 ,
            sum(event_match_0) AS matches_0
     FROM
       (SELECT uuid,
               distinct_id,
               event,
               team_id, timestamp, "$session_id" AS session_id,
                                   "$window_id" AS window_id ,
                                   if(event = '$autocapture', 1, 0) as event_match_0
        FROM events
        WHERE team_id = 2
          AND event IN ['$autocapture']
          AND timestamp >= '2021-01-13 12:00:00'
          AND timestamp <= '2021-01-22 08:00:00'
          AND notEmpty(session_id) )
     GROUP BY session_id,
              distinct_id
     HAVING 1 = 1
     AND matches_0 > 0) AS events
  JOIN
    (SELECT session_id,
            any(window_id) as window_id,
            minIf(first_event_timestamp, first_event_timestamp != '1970-01-01 00:00:00') as start_time,
            MAX(last_event_timestamp) as end_time,
            SUM(click_count) as click_count,
            SUM(keypress_count) as keypress_count,
            groupArrayArray(urls) as urls,
            dateDiff('second', start_time, end_time) as duration,
            any(distinct_id) as distinct_id,
            SUM(has_full_snapshot) as full_snapshots
     FROM session_recording_events PREWHERE team_id = 2
     AND timestamp >= '2021-01-13 12:00:00'
     AND timestamp <= '2021-01-22 08:00:00'
     GROUP BY session_id
     HAVING full_snapshots > 0
     AND start_time >= '2021-01-14 00:00:00'
     AND start_time <= '2021-01-21 20:00:00') AS session_recordings ON session_recordings.session_id = events.session_id
  WHERE session_recordings.distinct_id == events.distinct_id
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0
  '
---
# name: TestClickhouseSessionRecordingsListV2.test_event_filter_with_person_properties
  '
  
  SELECT session_recordings.session_id,
         any(session_recordings.start_time) as start_time,
         any(session_recordings.end_time) as end_time,
         any(session_recordings.click_count) as click_count,
         any(session_recordings.keypress_count) as keypress_count,
         any(session_recordings.urls) as urls,
         any(session_recordings.duration) as duration,
         any(session_recordings.distinct_id) as distinct_id
  FROM
    (SELECT session_id,
            any(window_id) as window_id,
            minIf(first_event_timestamp, first_event_timestamp != '1970-01-01 00:00:00') as start_time,
            MAX(last_event_timestamp) as end_time,
            SUM(click_count) as click_count,
            SUM(keypress_count) as keypress_count,
            groupArrayArray(urls) as urls,
            dateDiff('second', start_time, end_time) as duration,
            any(distinct_id) as distinct_id,
            SUM(has_full_snapshot) as full_snapshots
     FROM session_recording_events PREWHERE team_id = 2
     AND timestamp >= '2021-01-13 12:00:00'
     AND timestamp <= '2021-01-22 08:00:00'
     GROUP BY session_id
     HAVING full_snapshots > 0
     AND start_time >= '2021-01-14 00:00:00'
     AND start_time <= '2021-01-21 20:00:00') AS session_recordings
  JOIN
    (SELECT distinct_id,
            argMax(person_id, version) as person_id
     FROM person_distinct_id2
     WHERE team_id = 2
     GROUP BY distinct_id
     HAVING argMax(is_deleted, version) = 0) as pdi ON pdi.distinct_id = session_recordings.distinct_id
  INNER JOIN
    (SELECT id
     FROM person
     WHERE team_id = 2
       AND id IN
         (SELECT id
          FROM person
          WHERE team_id = 2
            AND (has(['bla'], replaceRegexpAll(JSONExtractRaw(properties, 'email'), '^"|"$', ''))) )
     GROUP BY id
     HAVING max(is_deleted) = 0
     AND (has(['bla'], replaceRegexpAll(JSONExtractRaw(argMax(person.properties, version), 'email'), '^"|"$', '')))) person ON person.id = pdi.person_id
  WHERE 1 = 1
  GROUP BY session_recordings.session_id
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0
  '
---
# name: TestClickhouseSessionRecordingsListV2.test_event_filter_with_properties
  '
  
  SELECT session_recordings.session_id,
         start_time,
         end_time,
         click_count,
         keypress_count,
         urls,
         duration,
         session_recordings.distinct_id as distinct_id ,
         matches_0 ,
         matching_events_0
  FROM
    (SELECT session_id,
            distinct_id ,
            groupUniqArrayIf(100)((timestamp, uuid,
                                              session_id,
                                              window_id), event_match_0 = 1) AS matching_events_0 ,
            sum(event_match_0) AS matches_0
     FROM
       (SELECT uuid,
               distinct_id,
               event,
               team_id, timestamp, "$session_id" AS session_id,
                                   "$window_id" AS window_id ,
                                   events.properties as properties ,
                                   if(event = '$pageview'
                                      AND (has(['Chrome'], replaceRegexpAll(JSONExtractRaw(properties, '$browser'), '^"|"$', ''))), 1, 0) as event_match_0
        FROM events
        WHERE team_id = 2
          AND event IN ['$pageview']
          AND timestamp >= '2021-01-13 12:00:00'
          AND timestamp <= '2021-01-22 08:00:00'
          AND notEmpty(session_id) )
     GROUP BY session_id,
              distinct_id
     HAVING 1 = 1
     AND matches_0 > 0) AS events
  JOIN
    (SELECT session_id,
            any(window_id) as window_id,
            minIf(first_event_timestamp, first_event_timestamp != '1970-01-01 00:00:00') as start_time,
            MAX(last_event_timestamp) as end_time,
            SUM(click_count) as click_count,
            SUM(keypress_count) as keypress_count,
            groupArrayArray(urls) as urls,
            dateDiff('second', start_time, end_time) as duration,
            any(distinct_id) as distinct_id,
            SUM(has_full_snapshot) as full_snapshots
     FROM session_recording_events PREWHERE team_id = 2
     AND timestamp >= '2021-01-13 12:00:00'
     AND timestamp <= '2021-01-22 08:00:00'
     GROUP BY session_id
     HAVING full_snapshots > 0
     AND start_time >= '2021-01-14 00:00:00'
     AND start_time <= '2021-01-21 20:00:00') AS session_recordings ON session_recordings.session_id = events.session_id
  WHERE session_recordings.distinct_id == events.distinct_id
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0
  '
---
# name: TestClickhouseSessionRecordingsListV2.test_event_filter_with_properties.1
  '
  
  SELECT session_recordings.session_id,
         start_time,
         end_time,
         click_count,
         keypress_count,
         urls,
         duration,
         session_recordings.distinct_id as distinct_id ,
         matches_0 ,
         matching_events_0
  FROM
    (SELECT session_id,
            distinct_id ,
            groupUniqArrayIf(100)((timestamp, uuid,
                                              session_id,
                                              window_id), event_match_0 = 1) AS matching_events_0 ,
            sum(event_match_0) AS matches_0
     FROM
       (SELECT uuid,
               distinct_id,
               event,
               team_id, timestamp, "$session_id" AS session_id,
                                   "$window_id" AS window_id ,
                                   events.properties as properties ,
                                   if(event = '$pageview'
                                      AND (has(['Firefox'], replaceRegexpAll(JSONExtractRaw(properties, '$browser'), '^"|"$', ''))), 1, 0) as event_match_0
        FROM events
        WHERE team_id = 2
          AND event IN ['$pageview']
          AND timestamp >= '2021-01-13 12:00:00'
          AND timestamp <= '2021-01-22 08:00:00'
          AND notEmpty(session_id) )
     GROUP BY session_id,
              distinct_id
     HAVING 1 = 1
     AND matches_0 > 0) AS events
  JOIN
    (SELECT session_id,
            any(window_id) as window_id,
            minIf(first_event_timestamp, first_event_timestamp != '1970-01-01 00:00:00') as start_time,
            MAX(last_event_timestamp) as end_time,
            SUM(click_count) as click_count,
            SUM(keypress_count) as keypress_count,
            groupArrayArray(urls) as urls,
            dateDiff('second', start_time, end_time) as duration,
            any(distinct_id) as distinct_id,
            SUM(has_full_snapshot) as full_snapshots
     FROM session_recording_events PREWHERE team_id = 2
     AND timestamp >= '2021-01-13 12:00:00'
     AND timestamp <= '2021-01-22 08:00:00'
     GROUP BY session_id
     HAVING full_snapshots > 0
     AND start_time >= '2021-01-14 00:00:00'
     AND start_time <= '2021-01-21 20:00:00') AS session_recordings ON session_recordings.session_id = events.session_id
  WHERE session_recordings.distinct_id == events.distinct_id
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0
  '
---
# name: TestClickhouseSessionRecordingsListV2.test_event_filter_with_properties_materialized
  '
  
  SELECT session_recordings.session_id,
         start_time,
         end_time,
         click_count,
         keypress_count,
         urls,
         duration,
         session_recordings.distinct_id as distinct_id ,
         matches_0 ,
         matching_events_0
  FROM
    (SELECT session_id,
            distinct_id ,
            groupUniqArrayIf(100)((timestamp, uuid,
                                              session_id,
                                              window_id), event_match_0 = 1) AS matching_events_0 ,
            sum(event_match_0) AS matches_0
     FROM
       (SELECT uuid,
               distinct_id,
               event,
               team_id, timestamp, "$session_id" AS session_id,
                                   "$window_id" AS window_id ,
                                   events.mat_$browser as mat_$browser ,
                                               if(event = '$pageview'
                                                  AND (has(['Chrome'], "mat_$browser")), 1, 0) as event_match_0
        FROM events
        WHERE team_id = 2
          AND event IN ['$pageview']
          AND timestamp >= '2021-01-13 12:00:00'
          AND timestamp <= '2021-01-22 08:00:00'
          AND notEmpty(session_id) )
     GROUP BY session_id,
              distinct_id
     HAVING 1 = 1
     AND matches_0 > 0) AS events
  JOIN
    (SELECT session_id,
            any(window_id) as window_id,
            minIf(first_event_timestamp, first_event_timestamp != '1970-01-01 00:00:00') as start_time,
            MAX(last_event_timestamp) as end_time,
            SUM(click_count) as click_count,
            SUM(keypress_count) as keypress_count,
            groupArrayArray(urls) as urls,
            dateDiff('second', start_time, end_time) as duration,
            any(distinct_id) as distinct_id,
            SUM(has_full_snapshot) as full_snapshots
     FROM session_recording_events PREWHERE team_id = 2
     AND timestamp >= '2021-01-13 12:00:00'
     AND timestamp <= '2021-01-22 08:00:00'
     GROUP BY session_id
     HAVING full_snapshots > 0
     AND start_time >= '2021-01-14 00:00:00'
     AND start_time <= '2021-01-21 20:00:00') AS session_recordings ON session_recordings.session_id = events.session_id
  WHERE session_recordings.distinct_id == events.distinct_id
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0
  '
---
# name: TestClickhouseSessionRecordingsListV2.test_event_filter_with_properties_materialized.1
  '
  
  SELECT session_recordings.session_id,
         start_time,
         end_time,
         click_count,
         keypress_count,
         urls,
         duration,
         session_recordings.distinct_id as distinct_id ,
         matches_0 ,
         matching_events_0
  FROM
    (SELECT session_id,
            distinct_id ,
            groupUniqArrayIf(100)((timestamp, uuid,
                                              session_id,
                                              window_id), event_match_0 = 1) AS matching_events_0 ,
            sum(event_match_0) AS matches_0
     FROM
       (SELECT uuid,
               distinct_id,
               event,
               team_id, timestamp, "$session_id" AS session_id,
                                   "$window_id" AS window_id ,
                                   events.mat_$browser as mat_$browser ,
                                               if(event = '$pageview'
                                                  AND (has(['Firefox'], "mat_$browser")), 1, 0) as event_match_0
        FROM events
        WHERE team_id = 2
          AND event IN ['$pageview']
          AND timestamp >= '2021-01-13 12:00:00'
          AND timestamp <= '2021-01-22 08:00:00'
          AND notEmpty(session_id) )
     GROUP BY session_id,
              distinct_id
     HAVING 1 = 1
     AND matches_0 > 0) AS events
  JOIN
    (SELECT session_id,
            any(window_id) as window_id,
            minIf(first_event_timestamp, first_event_timestamp != '1970-01-01 00:00:00') as start_time,
            MAX(last_event_timestamp) as end_time,
            SUM(click_count) as click_count,
            SUM(keypress_count) as keypress_count,
            groupArrayArray(urls) as urls,
            dateDiff('second', start_time, end_time) as duration,
            any(distinct_id) as distinct_id,
            SUM(has_full_snapshot) as full_snapshots
     FROM session_recording_events PREWHERE team_id = 2
     AND timestamp >= '2021-01-13 12:00:00'
     AND timestamp <= '2021-01-22 08:00:00'
     GROUP BY session_id
     HAVING full_snapshots > 0
     AND start_time >= '2021-01-14 00:00:00'
     AND start_time <= '2021-01-21 20:00:00') AS session_recordings ON session_recordings.session_id = events.session_id
  WHERE session_recordings.distinct_id == events.distinct_id
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0
  '
---
# name: TestClickhouseSessionRecordingsListV2.test_multiple_event_filters
  '
  
  SELECT session_recordings.session_id,
         start_time,
         end_time,
         click_count,
         keypress_count,
         urls,
         duration,
         session_recordings.distinct_id as distinct_id ,
         matches_0 ,
         matching_events_0 ,
         matches_1 ,
         matching_events_1
  FROM
    (SELECT session_id,
            distinct_id ,
            groupUniqArrayIf(100)((timestamp, uuid,
                                              session_id,
                                              window_id), event_match_0 = 1) AS matching_events_0 ,
            sum(event_match_0) AS matches_0 ,
            groupUniqArrayIf(100)((timestamp, uuid,
                                              session_id,
                                              window_id), event_match_1 = 1) AS matching_events_1 ,
            sum(event_match_1) AS matches_1
     FROM
       (SELECT uuid,
               distinct_id,
               event,
               team_id, timestamp, "$session_id" AS session_id,
                                   "$window_id" AS window_id ,
                                   if(event = '$pageview', 1, 0) as event_match_0 ,
                                   if(event = 'new-event', 1, 0) as event_match_1
        FROM events
        WHERE team_id = 2
          AND event IN ['$pageview', 'new-event']
          AND timestamp >= '2021-01-13 12:00:00'
          AND timestamp <= '2021-01-22 08:00:00'
          AND notEmpty(session_id) )
     GROUP BY session_id,
              distinct_id
     HAVING 1 = 1
     AND matches_0 > 0
     AND matches_1 > 0) AS events
  JOIN
    (SELECT session_id,
            any(window_id) as window_id,
            minIf(first_event_timestamp, first_event_timestamp != '1970-01-01 00:00:00') as start_time,
            MAX(last_event_timestamp) as end_time,
            SUM(click_count) as click_count,
            SUM(keypress_count) as keypress_count,
            groupArrayArray(urls) as urls,
            dateDiff('second', start_time, end_time) as duration,
            any(distinct_id) as distinct_id,
            SUM(has_full_snapshot) as full_snapshots
     FROM session_recording_events PREWHERE team_id = 2
     AND timestamp >= '2021-01-13 12:00:00'
     AND timestamp <= '2021-01-22 08:00:00'
     GROUP BY session_id
     HAVING full_snapshots > 0
     AND start_time >= '2021-01-14 00:00:00'
     AND start_time <= '2021-01-21 20:00:00') AS session_recordings ON session_recordings.session_id = events.session_id
  WHERE session_recordings.distinct_id == events.distinct_id
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0
  '
---
# name: TestClickhouseSessionRecordingsListV2.test_multiple_event_filters.1
  '
  
  SELECT session_recordings.session_id,
         start_time,
         end_time,
         click_count,
         keypress_count,
         urls,
         duration,
         session_recordings.distinct_id as distinct_id ,
         matches_0 ,
         matching_events_0 ,
         matches_1 ,
         matching_events_1
  FROM
    (SELECT session_id,
            distinct_id ,
            groupUniqArrayIf(100)((timestamp, uuid,
                                              session_id,
                                              window_id), event_match_0 = 1) AS matching_events_0 ,
            sum(event_match_0) AS matches_0 ,
            groupUniqArrayIf(100)((timestamp, uuid,
                                              session_id,
                                              window_id), event_match_1 = 1) AS matching_events_1 ,
            sum(event_match_1) AS matches_1
     FROM
       (SELECT uuid,
               distinct_id,
               event,
               team_id, timestamp, "$session_id" AS session_id,
                                   "$window_id" AS window_id ,
                                   if(event = '$pageview', 1, 0) as event_match_0 ,
                                   if(event = 'new-event2', 1, 0) as event_match_1
        FROM events
        WHERE team_id = 2
          AND event IN ['$pageview', 'new-event2']
          AND timestamp >= '2021-01-13 12:00:00'
          AND timestamp <= '2021-01-22 08:00:00'
          AND notEmpty(session_id) )
     GROUP BY session_id,
              distinct_id
     HAVING 1 = 1
     AND matches_0 > 0
     AND matches_1 > 0) AS events
  JOIN
    (SELECT session_id,
            any(window_id) as window_id,
            minIf(first_event_timestamp, first_event_timestamp != '1970-01-01 00:00:00') as start_time,
            MAX(last_event_timestamp) as end_time,
            SUM(click_count) as click_count,
            SUM(keypress_count) as keypress_count,
            groupArrayArray(urls) as urls,
            dateDiff('second', start_time, end_time) as duration,
            any(distinct_id) as distinct_id,
            SUM(has_full_snapshot) as full_snapshots
     FROM session_recording_events PREWHERE team_id = 2
     AND timestamp >= '2021-01-13 12:00:00'
     AND timestamp <= '2021-01-22 08:00:00'
     GROUP BY session_id
     HAVING full_snapshots > 0
     AND start_time >= '2021-01-14 00:00:00'
     AND start_time <= '2021-01-21 20:00:00') AS session_recordings ON session_recordings.session_id = events.session_id
  WHERE session_recordings.distinct_id == events.distinct_id
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0
  '
---
