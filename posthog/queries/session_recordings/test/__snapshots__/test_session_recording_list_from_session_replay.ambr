# name: TestClickhouseSessionRecordingsListFromSessionReplay.test_action_filter
  '
  WITH events_session_ids AS
    (SELECT distinct `$session_id` as session_id
     FROM events PREWHERE team_id = 2
     AND timestamp >= '2022-12-27 12:00:00'
     AND timestamp <= '2023-01-04 12:00:00'
     and notEmpty(session_id)
     WHERE 1=1
       AND event IN ['custom-event']
       AND ((event = 'custom-event'
             AND (has(['Firefox'], replaceRegexpAll(JSONExtractRaw(properties, '$browser'), '^"|"$', ''))
                  AND has(['test_action_filter-session-one'], "$session_id")
                  AND has(['test_action_filter-window-id'], "$window_id")))) )
  SELECT session_id,
         any(team_id),
         any(distinct_id),
         min(min_first_timestamp) as start_time,
         max(max_last_timestamp) as end_time,
         dateDiff('SECOND', start_time, end_time) as duration,
         argMinMerge(first_url) as first_url,
         sum(click_count),
         sum(keypress_count),
         sum(mouse_activity_count),
         sum(active_milliseconds)/1000 as active_seconds
  FROM session_replay_events PREWHERE team_id = 2
  AND min_first_timestamp >= '2022-12-28 00:00:00'
  AND max_last_timestamp <= '2023-01-04 00:00:00'
  AND session_id in
    (select session_id
     from events_session_ids)
  WHERE 1=1
  GROUP BY session_id
  HAVING 1=1
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0
  '
---
# name: TestClickhouseSessionRecordingsListFromSessionReplay.test_action_filter.1
  '
  WITH events_session_ids AS
    (SELECT distinct `$session_id` as session_id
     FROM events PREWHERE team_id = 2
     AND timestamp >= '2022-12-27 12:00:00'
     AND timestamp <= '2023-01-04 12:00:00'
     and notEmpty(session_id)
     WHERE 1=1
       AND event IN ['custom-event']
       AND ((event = 'custom-event'
             AND (has(['test_action_filter-session-one'], "$session_id")
                  AND has(['test_action_filter-window-id'], "$window_id")))) )
  SELECT session_id,
         any(team_id),
         any(distinct_id),
         min(min_first_timestamp) as start_time,
         max(max_last_timestamp) as end_time,
         dateDiff('SECOND', start_time, end_time) as duration,
         argMinMerge(first_url) as first_url,
         sum(click_count),
         sum(keypress_count),
         sum(mouse_activity_count),
         sum(active_milliseconds)/1000 as active_seconds
  FROM session_replay_events PREWHERE team_id = 2
  AND min_first_timestamp >= '2022-12-28 00:00:00'
  AND max_last_timestamp <= '2023-01-04 00:00:00'
  AND session_id in
    (select session_id
     from events_session_ids)
  WHERE 1=1
  GROUP BY session_id
  HAVING 1=1
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0
  '
---
# name: TestClickhouseSessionRecordingsListFromSessionReplay.test_action_filter.2
  '
  WITH events_session_ids AS
    (SELECT distinct `$session_id` as session_id
     FROM events PREWHERE team_id = 2
     AND timestamp >= '2022-12-27 12:00:00'
     AND timestamp <= '2023-01-04 12:00:00'
     and notEmpty(session_id)
     WHERE 1=1
       AND event IN ['custom-event']
       AND ((event = 'custom-event'
             AND (has(['test_action_filter-session-one'], "$session_id")
                  AND has(['test_action_filter-window-id'], "$window_id"))))
       AND (has(['Firefox'], replaceRegexpAll(JSONExtractRaw(properties, '$browser'), '^"|"$', ''))) )
  SELECT session_id,
         any(team_id),
         any(distinct_id),
         min(min_first_timestamp) as start_time,
         max(max_last_timestamp) as end_time,
         dateDiff('SECOND', start_time, end_time) as duration,
         argMinMerge(first_url) as first_url,
         sum(click_count),
         sum(keypress_count),
         sum(mouse_activity_count),
         sum(active_milliseconds)/1000 as active_seconds
  FROM session_replay_events PREWHERE team_id = 2
  AND min_first_timestamp >= '2022-12-28 00:00:00'
  AND max_last_timestamp <= '2023-01-04 00:00:00'
  AND session_id in
    (select session_id
     from events_session_ids)
  WHERE 1=1
  GROUP BY session_id
  HAVING 1=1
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0
  '
---
# name: TestClickhouseSessionRecordingsListFromSessionReplay.test_all_filters_at_once
  '
  WITH distinct_ids_for_person as
    (SELECT distinct_id,
            argMax(person_id, version) as person_id
     FROM person_distinct_id2 as pdi
     INNER JOIN
       (SELECT id
        FROM person
        WHERE team_id = 2
        GROUP BY id
        HAVING max(is_deleted) = 0) person ON person.id = pdi.person_id PREWHERE team_id = 2
     GROUP BY distinct_id
     HAVING argMax(is_deleted, version) = 0
     and person_id = '00000000-0000-0000-0000-000000000000') ,
       events_session_ids AS
    (SELECT distinct `$session_id` as session_id
     FROM events PREWHERE team_id = 2
     AND timestamp >= '2020-12-21 12:00:00'
     AND timestamp <= '2021-01-05 11:59:59'
     and notEmpty(session_id)
     WHERE 1=1
       AND event IN ['$pageview', 'custom-event']
       AND ((event = 'custom-event')) )
  SELECT session_id,
         any(team_id),
         any(distinct_id),
         min(min_first_timestamp) as start_time,
         max(max_last_timestamp) as end_time,
         dateDiff('SECOND', start_time, end_time) as duration,
         argMinMerge(first_url) as first_url,
         sum(click_count),
         sum(keypress_count),
         sum(mouse_activity_count),
         sum(active_milliseconds)/1000 as active_seconds
  FROM session_replay_events PREWHERE team_id = 2
  AND min_first_timestamp >= '2020-12-22 00:00:00'
  AND max_last_timestamp <= '2021-01-04 23:59:59'
  AND session_id in
    (select session_id
     from events_session_ids)
  WHERE 1=1
    AND distinct_id in
      (select distinct_id
       from distinct_ids_for_person)
  GROUP BY session_id
  HAVING 1=1
  AND duration > 60
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0
  '
---
# name: TestClickhouseSessionRecordingsListFromSessionReplay.test_any_event_filter_with_properties
  '
  WITH events_session_ids AS
    (SELECT distinct `$session_id` as session_id
     FROM events PREWHERE team_id = 2
     AND timestamp >= '2021-01-13 12:00:00'
     AND timestamp <= '2021-01-22 08:00:00'
     and notEmpty(session_id)
     WHERE 1=1
       AND 1 = 1 )
  SELECT session_id,
         any(team_id),
         any(distinct_id),
         min(min_first_timestamp) as start_time,
         max(max_last_timestamp) as end_time,
         dateDiff('SECOND', start_time, end_time) as duration,
         argMinMerge(first_url) as first_url,
         sum(click_count),
         sum(keypress_count),
         sum(mouse_activity_count),
         sum(active_milliseconds)/1000 as active_seconds
  FROM session_replay_events PREWHERE team_id = 2
  AND min_first_timestamp >= '2021-01-14 00:00:00'
  AND max_last_timestamp <= '2021-01-21 20:00:00'
  AND session_id in
    (select session_id
     from events_session_ids)
  WHERE 1=1
  GROUP BY session_id
  HAVING 1=1
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0
  '
---
# name: TestClickhouseSessionRecordingsListFromSessionReplay.test_any_event_filter_with_properties.1
  '
  WITH events_session_ids AS
    (SELECT distinct `$session_id` as session_id
     FROM events PREWHERE team_id = 2
     AND timestamp >= '2021-01-13 12:00:00'
     AND timestamp <= '2021-01-22 08:00:00'
     and notEmpty(session_id)
     WHERE 1=1
       AND 1 = 1
       AND (has(['Chrome'], replaceRegexpAll(JSONExtractRaw(properties, '$browser'), '^"|"$', ''))) )
  SELECT session_id,
         any(team_id),
         any(distinct_id),
         min(min_first_timestamp) as start_time,
         max(max_last_timestamp) as end_time,
         dateDiff('SECOND', start_time, end_time) as duration,
         argMinMerge(first_url) as first_url,
         sum(click_count),
         sum(keypress_count),
         sum(mouse_activity_count),
         sum(active_milliseconds)/1000 as active_seconds
  FROM session_replay_events PREWHERE team_id = 2
  AND min_first_timestamp >= '2021-01-14 00:00:00'
  AND max_last_timestamp <= '2021-01-21 20:00:00'
  AND session_id in
    (select session_id
     from events_session_ids)
  WHERE 1=1
  GROUP BY session_id
  HAVING 1=1
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0
  '
---
# name: TestClickhouseSessionRecordingsListFromSessionReplay.test_any_event_filter_with_properties.2
  '
  WITH events_session_ids AS
    (SELECT distinct `$session_id` as session_id
     FROM events PREWHERE team_id = 2
     AND timestamp >= '2021-01-13 12:00:00'
     AND timestamp <= '2021-01-22 08:00:00'
     and notEmpty(session_id)
     WHERE 1=1
       AND 1 = 1
       AND (has(['Firefox'], replaceRegexpAll(JSONExtractRaw(properties, '$browser'), '^"|"$', ''))) )
  SELECT session_id,
         any(team_id),
         any(distinct_id),
         min(min_first_timestamp) as start_time,
         max(max_last_timestamp) as end_time,
         dateDiff('SECOND', start_time, end_time) as duration,
         argMinMerge(first_url) as first_url,
         sum(click_count),
         sum(keypress_count),
         sum(mouse_activity_count),
         sum(active_milliseconds)/1000 as active_seconds
  FROM session_replay_events PREWHERE team_id = 2
  AND min_first_timestamp >= '2021-01-14 00:00:00'
  AND max_last_timestamp <= '2021-01-21 20:00:00'
  AND session_id in
    (select session_id
     from events_session_ids)
  WHERE 1=1
  GROUP BY session_id
  HAVING 1=1
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0
  '
---
# name: TestClickhouseSessionRecordingsListFromSessionReplay.test_any_event_filter_with_properties_materialized
  '
  WITH events_session_ids AS
    (SELECT distinct `$session_id` as session_id
     FROM events PREWHERE team_id = 2
     AND timestamp >= '2021-01-13 12:00:00'
     AND timestamp <= '2021-01-22 08:00:00'
     and notEmpty(session_id)
     WHERE 1=1
       AND 1 = 1 )
  SELECT session_id,
         any(team_id),
         any(distinct_id),
         min(min_first_timestamp) as start_time,
         max(max_last_timestamp) as end_time,
         dateDiff('SECOND', start_time, end_time) as duration,
         argMinMerge(first_url) as first_url,
         sum(click_count),
         sum(keypress_count),
         sum(mouse_activity_count),
         sum(active_milliseconds)/1000 as active_seconds
  FROM session_replay_events PREWHERE team_id = 2
  AND min_first_timestamp >= '2021-01-14 00:00:00'
  AND max_last_timestamp <= '2021-01-21 20:00:00'
  AND session_id in
    (select session_id
     from events_session_ids)
  WHERE 1=1
  GROUP BY session_id
  HAVING 1=1
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0
  '
---
# name: TestClickhouseSessionRecordingsListFromSessionReplay.test_any_event_filter_with_properties_materialized.1
  '
  WITH events_session_ids AS
    (SELECT distinct `$session_id` as session_id
     FROM events PREWHERE team_id = 2
     AND timestamp >= '2021-01-13 12:00:00'
     AND timestamp <= '2021-01-22 08:00:00'
     and notEmpty(session_id)
     WHERE 1=1
       AND 1 = 1
       AND (has(['Chrome'], "mat_$browser")) )
  SELECT session_id,
         any(team_id),
         any(distinct_id),
         min(min_first_timestamp) as start_time,
         max(max_last_timestamp) as end_time,
         dateDiff('SECOND', start_time, end_time) as duration,
         argMinMerge(first_url) as first_url,
         sum(click_count),
         sum(keypress_count),
         sum(mouse_activity_count),
         sum(active_milliseconds)/1000 as active_seconds
  FROM session_replay_events PREWHERE team_id = 2
  AND min_first_timestamp >= '2021-01-14 00:00:00'
  AND max_last_timestamp <= '2021-01-21 20:00:00'
  AND session_id in
    (select session_id
     from events_session_ids)
  WHERE 1=1
  GROUP BY session_id
  HAVING 1=1
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0
  '
---
# name: TestClickhouseSessionRecordingsListFromSessionReplay.test_any_event_filter_with_properties_materialized.2
  '
  WITH events_session_ids AS
    (SELECT distinct `$session_id` as session_id
     FROM events PREWHERE team_id = 2
     AND timestamp >= '2021-01-13 12:00:00'
     AND timestamp <= '2021-01-22 08:00:00'
     and notEmpty(session_id)
     WHERE 1=1
       AND 1 = 1
       AND (has(['Firefox'], "mat_$browser")) )
  SELECT session_id,
         any(team_id),
         any(distinct_id),
         min(min_first_timestamp) as start_time,
         max(max_last_timestamp) as end_time,
         dateDiff('SECOND', start_time, end_time) as duration,
         argMinMerge(first_url) as first_url,
         sum(click_count),
         sum(keypress_count),
         sum(mouse_activity_count),
         sum(active_milliseconds)/1000 as active_seconds
  FROM session_replay_events PREWHERE team_id = 2
  AND min_first_timestamp >= '2021-01-14 00:00:00'
  AND max_last_timestamp <= '2021-01-21 20:00:00'
  AND session_id in
    (select session_id
     from events_session_ids)
  WHERE 1=1
  GROUP BY session_id
  HAVING 1=1
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0
  '
---
# name: TestClickhouseSessionRecordingsListFromSessionReplay.test_basic_query
  '
  
  SELECT session_id,
         any(team_id),
         any(distinct_id),
         min(min_first_timestamp) as start_time,
         max(max_last_timestamp) as end_time,
         dateDiff('SECOND', start_time, end_time) as duration,
         argMinMerge(first_url) as first_url,
         sum(click_count),
         sum(keypress_count),
         sum(mouse_activity_count),
         sum(active_milliseconds)/1000 as active_seconds
  FROM session_replay_events PREWHERE team_id = 2
  AND min_first_timestamp >= '2020-12-25 00:00:00'
  AND max_last_timestamp <= '2021-01-01 13:46:23'
  WHERE 1=1
  GROUP BY session_id
  HAVING 1=1
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0
  '
---
# name: TestClickhouseSessionRecordingsListFromSessionReplay.test_basic_query_active_sessions
  '
  
  SELECT session_id,
         any(team_id),
         any(distinct_id),
         min(min_first_timestamp) as start_time,
         max(max_last_timestamp) as end_time,
         dateDiff('SECOND', start_time, end_time) as duration,
         argMinMerge(first_url) as first_url,
         sum(click_count),
         sum(keypress_count),
         sum(mouse_activity_count),
         sum(active_milliseconds)/1000 as active_seconds
  FROM session_replay_events PREWHERE team_id = 2
  AND min_first_timestamp >= '2020-12-25 00:00:00'
  AND max_last_timestamp <= '2021-01-01 13:46:23'
  WHERE 1=1
  GROUP BY session_id
  HAVING 1=1
  AND duration > 60
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0
  '
---
# name: TestClickhouseSessionRecordingsListFromSessionReplay.test_basic_query_active_sessions.1
  '
  
  SELECT session_id,
         any(team_id),
         any(distinct_id),
         min(min_first_timestamp) as start_time,
         max(max_last_timestamp) as end_time,
         dateDiff('SECOND', start_time, end_time) as duration,
         argMinMerge(first_url) as first_url,
         sum(click_count),
         sum(keypress_count),
         sum(mouse_activity_count),
         sum(active_milliseconds)/1000 as active_seconds
  FROM session_replay_events PREWHERE team_id = 2
  AND min_first_timestamp >= '2020-12-25 00:00:00'
  AND max_last_timestamp <= '2021-01-01 13:46:23'
  WHERE 1=1
  GROUP BY session_id
  HAVING 1=1
  AND active_seconds > 60
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0
  '
---
# name: TestClickhouseSessionRecordingsListFromSessionReplay.test_basic_query_with_paging
  '
  
  SELECT session_id,
         any(team_id),
         any(distinct_id),
         min(min_first_timestamp) as start_time,
         max(max_last_timestamp) as end_time,
         dateDiff('SECOND', start_time, end_time) as duration,
         argMinMerge(first_url) as first_url,
         sum(click_count),
         sum(keypress_count),
         sum(mouse_activity_count),
         sum(active_milliseconds)/1000 as active_seconds
  FROM session_replay_events PREWHERE team_id = 2
  AND min_first_timestamp >= '2020-12-25 00:00:00'
  AND max_last_timestamp <= '2021-01-01 13:46:23'
  WHERE 1=1
  GROUP BY session_id
  HAVING 1=1
  ORDER BY start_time DESC
  LIMIT 2
  OFFSET 0
  '
---
# name: TestClickhouseSessionRecordingsListFromSessionReplay.test_basic_query_with_paging.1
  '
  
  SELECT session_id,
         any(team_id),
         any(distinct_id),
         min(min_first_timestamp) as start_time,
         max(max_last_timestamp) as end_time,
         dateDiff('SECOND', start_time, end_time) as duration,
         argMinMerge(first_url) as first_url,
         sum(click_count),
         sum(keypress_count),
         sum(mouse_activity_count),
         sum(active_milliseconds)/1000 as active_seconds
  FROM session_replay_events PREWHERE team_id = 2
  AND min_first_timestamp >= '2020-12-25 00:00:00'
  AND max_last_timestamp <= '2021-01-01 13:46:23'
  WHERE 1=1
  GROUP BY session_id
  HAVING 1=1
  ORDER BY start_time DESC
  LIMIT 2
  OFFSET 1
  '
---
# name: TestClickhouseSessionRecordingsListFromSessionReplay.test_basic_query_with_paging.2
  '
  
  SELECT session_id,
         any(team_id),
         any(distinct_id),
         min(min_first_timestamp) as start_time,
         max(max_last_timestamp) as end_time,
         dateDiff('SECOND', start_time, end_time) as duration,
         argMinMerge(first_url) as first_url,
         sum(click_count),
         sum(keypress_count),
         sum(mouse_activity_count),
         sum(active_milliseconds)/1000 as active_seconds
  FROM session_replay_events PREWHERE team_id = 2
  AND min_first_timestamp >= '2020-12-25 00:00:00'
  AND max_last_timestamp <= '2021-01-01 13:46:23'
  WHERE 1=1
  GROUP BY session_id
  HAVING 1=1
  ORDER BY start_time DESC
  LIMIT 2
  OFFSET 2
  '
---
# name: TestClickhouseSessionRecordingsListFromSessionReplay.test_date_from_filter
  '
  
  SELECT session_id,
         any(team_id),
         any(distinct_id),
         min(min_first_timestamp) as start_time,
         max(max_last_timestamp) as end_time,
         dateDiff('SECOND', start_time, end_time) as duration,
         argMinMerge(first_url) as first_url,
         sum(click_count),
         sum(keypress_count),
         sum(mouse_activity_count),
         sum(active_milliseconds)/1000 as active_seconds
  FROM session_replay_events PREWHERE team_id = 2
  AND min_first_timestamp >= '2021-01-01 00:00:00'
  AND max_last_timestamp <= '2021-01-01 13:46:23'
  WHERE 1=1
  GROUP BY session_id
  HAVING 1=1
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0
  '
---
# name: TestClickhouseSessionRecordingsListFromSessionReplay.test_date_from_filter.1
  '
  
  SELECT session_id,
         any(team_id),
         any(distinct_id),
         min(min_first_timestamp) as start_time,
         max(max_last_timestamp) as end_time,
         dateDiff('SECOND', start_time, end_time) as duration,
         argMinMerge(first_url) as first_url,
         sum(click_count),
         sum(keypress_count),
         sum(mouse_activity_count),
         sum(active_milliseconds)/1000 as active_seconds
  FROM session_replay_events PREWHERE team_id = 2
  AND min_first_timestamp >= '2020-12-30 00:00:00'
  AND max_last_timestamp <= '2021-01-01 13:46:23'
  WHERE 1=1
  GROUP BY session_id
  HAVING 1=1
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0
  '
---
# name: TestClickhouseSessionRecordingsListFromSessionReplay.test_date_to_filter
  '
  
  SELECT session_id,
         any(team_id),
         any(distinct_id),
         min(min_first_timestamp) as start_time,
         max(max_last_timestamp) as end_time,
         dateDiff('SECOND', start_time, end_time) as duration,
         argMinMerge(first_url) as first_url,
         sum(click_count),
         sum(keypress_count),
         sum(mouse_activity_count),
         sum(active_milliseconds)/1000 as active_seconds
  FROM session_replay_events PREWHERE team_id = 2
  AND min_first_timestamp >= '2020-12-25 00:00:00'
  AND max_last_timestamp <= '2020-12-28 23:59:59'
  WHERE 1=1
  GROUP BY session_id
  HAVING 1=1
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0
  '
---
# name: TestClickhouseSessionRecordingsListFromSessionReplay.test_date_to_filter.1
  '
  
  SELECT session_id,
         any(team_id),
         any(distinct_id),
         min(min_first_timestamp) as start_time,
         max(max_last_timestamp) as end_time,
         dateDiff('SECOND', start_time, end_time) as duration,
         argMinMerge(first_url) as first_url,
         sum(click_count),
         sum(keypress_count),
         sum(mouse_activity_count),
         sum(active_milliseconds)/1000 as active_seconds
  FROM session_replay_events PREWHERE team_id = 2
  AND min_first_timestamp >= '2020-12-25 00:00:00'
  AND max_last_timestamp <= '2020-12-29 23:59:59'
  WHERE 1=1
  GROUP BY session_id
  HAVING 1=1
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0
  '
---
# name: TestClickhouseSessionRecordingsListFromSessionReplay.test_duration_filter
  '
  
  SELECT session_id,
         any(team_id),
         any(distinct_id),
         min(min_first_timestamp) as start_time,
         max(max_last_timestamp) as end_time,
         dateDiff('SECOND', start_time, end_time) as duration,
         argMinMerge(first_url) as first_url,
         sum(click_count),
         sum(keypress_count),
         sum(mouse_activity_count),
         sum(active_milliseconds)/1000 as active_seconds
  FROM session_replay_events PREWHERE team_id = 2
  AND min_first_timestamp >= '2020-12-25 00:00:00'
  AND max_last_timestamp <= '2021-01-01 13:46:23'
  WHERE 1=1
  GROUP BY session_id
  HAVING 1=1
  AND duration > 60
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0
  '
---
# name: TestClickhouseSessionRecordingsListFromSessionReplay.test_duration_filter.1
  '
  
  SELECT session_id,
         any(team_id),
         any(distinct_id),
         min(min_first_timestamp) as start_time,
         max(max_last_timestamp) as end_time,
         dateDiff('SECOND', start_time, end_time) as duration,
         argMinMerge(first_url) as first_url,
         sum(click_count),
         sum(keypress_count),
         sum(mouse_activity_count),
         sum(active_milliseconds)/1000 as active_seconds
  FROM session_replay_events PREWHERE team_id = 2
  AND min_first_timestamp >= '2020-12-25 00:00:00'
  AND max_last_timestamp <= '2021-01-01 13:46:23'
  WHERE 1=1
  GROUP BY session_id
  HAVING 1=1
  AND duration < 60
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0
  '
---
# name: TestClickhouseSessionRecordingsListFromSessionReplay.test_event_filter
  '
  WITH events_session_ids AS
    (SELECT distinct `$session_id` as session_id
     FROM events PREWHERE team_id = 2
     AND timestamp >= '2020-12-24 12:00:00'
     AND timestamp <= '2021-01-02 01:46:23'
     and notEmpty(session_id)
     WHERE 1=1
       AND event IN ['$pageview']
       AND event = '$pageview' )
  SELECT session_id,
         any(team_id),
         any(distinct_id),
         min(min_first_timestamp) as start_time,
         max(max_last_timestamp) as end_time,
         dateDiff('SECOND', start_time, end_time) as duration,
         argMinMerge(first_url) as first_url,
         sum(click_count),
         sum(keypress_count),
         sum(mouse_activity_count),
         sum(active_milliseconds)/1000 as active_seconds
  FROM session_replay_events PREWHERE team_id = 2
  AND min_first_timestamp >= '2020-12-25 00:00:00'
  AND max_last_timestamp <= '2021-01-01 13:46:23'
  AND session_id in
    (select session_id
     from events_session_ids)
  WHERE 1=1
  GROUP BY session_id
  HAVING 1=1
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0
  '
---
# name: TestClickhouseSessionRecordingsListFromSessionReplay.test_event_filter.1
  '
  WITH events_session_ids AS
    (SELECT distinct `$session_id` as session_id
     FROM events PREWHERE team_id = 2
     AND timestamp >= '2020-12-24 12:00:00'
     AND timestamp <= '2021-01-02 01:46:23'
     and notEmpty(session_id)
     WHERE 1=1
       AND event IN ['$autocapture']
       AND event = '$autocapture' )
  SELECT session_id,
         any(team_id),
         any(distinct_id),
         min(min_first_timestamp) as start_time,
         max(max_last_timestamp) as end_time,
         dateDiff('SECOND', start_time, end_time) as duration,
         argMinMerge(first_url) as first_url,
         sum(click_count),
         sum(keypress_count),
         sum(mouse_activity_count),
         sum(active_milliseconds)/1000 as active_seconds
  FROM session_replay_events PREWHERE team_id = 2
  AND min_first_timestamp >= '2020-12-25 00:00:00'
  AND max_last_timestamp <= '2021-01-01 13:46:23'
  AND session_id in
    (select session_id
     from events_session_ids)
  WHERE 1=1
  GROUP BY session_id
  HAVING 1=1
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0
  '
---
# name: TestClickhouseSessionRecordingsListFromSessionReplay.test_event_filter_with_active_sessions
  '
  WITH events_session_ids AS
    (SELECT distinct `$session_id` as session_id
     FROM events PREWHERE team_id = 2
     AND timestamp >= '2020-12-24 12:00:00'
     AND timestamp <= '2021-01-02 01:46:23'
     and notEmpty(session_id)
     WHERE 1=1
       AND event IN ['$pageview']
       AND event = '$pageview' )
  SELECT session_id,
         any(team_id),
         any(distinct_id),
         min(min_first_timestamp) as start_time,
         max(max_last_timestamp) as end_time,
         dateDiff('SECOND', start_time, end_time) as duration,
         argMinMerge(first_url) as first_url,
         sum(click_count),
         sum(keypress_count),
         sum(mouse_activity_count),
         sum(active_milliseconds)/1000 as active_seconds
  FROM session_replay_events PREWHERE team_id = 2
  AND min_first_timestamp >= '2020-12-25 00:00:00'
  AND max_last_timestamp <= '2021-01-01 13:46:23'
  AND session_id in
    (select session_id
     from events_session_ids)
  WHERE 1=1
  GROUP BY session_id
  HAVING 1=1
  AND duration > 60
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0
  '
---
# name: TestClickhouseSessionRecordingsListFromSessionReplay.test_event_filter_with_active_sessions.1
  '
  WITH events_session_ids AS
    (SELECT distinct `$session_id` as session_id
     FROM events PREWHERE team_id = 2
     AND timestamp >= '2020-12-24 12:00:00'
     AND timestamp <= '2021-01-02 01:46:23'
     and notEmpty(session_id)
     WHERE 1=1
       AND event IN ['$pageview']
       AND event = '$pageview' )
  SELECT session_id,
         any(team_id),
         any(distinct_id),
         min(min_first_timestamp) as start_time,
         max(max_last_timestamp) as end_time,
         dateDiff('SECOND', start_time, end_time) as duration,
         argMinMerge(first_url) as first_url,
         sum(click_count),
         sum(keypress_count),
         sum(mouse_activity_count),
         sum(active_milliseconds)/1000 as active_seconds
  FROM session_replay_events PREWHERE team_id = 2
  AND min_first_timestamp >= '2020-12-25 00:00:00'
  AND max_last_timestamp <= '2021-01-01 13:46:23'
  AND session_id in
    (select session_id
     from events_session_ids)
  WHERE 1=1
  GROUP BY session_id
  HAVING 1=1
  AND active_seconds > 60
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0
  '
---
# name: TestClickhouseSessionRecordingsListFromSessionReplay.test_event_filter_with_cohort_properties
  '
  
  SELECT count(DISTINCT person_id)
  FROM cohortpeople
  WHERE team_id = 2
    AND cohort_id = 2
    AND version = NULL
  '
---
# name: TestClickhouseSessionRecordingsListFromSessionReplay.test_event_filter_with_cohort_properties.1
  '
  
  SELECT count(DISTINCT person_id)
  FROM cohortpeople
  WHERE team_id = 2
    AND cohort_id = 2
    AND version = 0
  '
---
# name: TestClickhouseSessionRecordingsListFromSessionReplay.test_event_filter_with_cohort_properties.2
  '
  with distinct_ids_for_person as
    (SELECT distinct_id,
            argMax(person_id, version) as person_id
     FROM person_distinct_id2 as pdi
     INNER JOIN
       (SELECT id
        FROM person
        WHERE team_id = 2
        GROUP BY id
        HAVING max(is_deleted) = 0) person ON person.id = pdi.person_id PREWHERE team_id = 2
     GROUP BY distinct_id
     HAVING argMax(is_deleted, version) = 0
     AND (pdi.person_id IN
            (SELECT DISTINCT person_id
             FROM cohortpeople
             WHERE team_id = 2
               AND cohort_id = 2
               AND version = 0 )))
  SELECT session_id,
         any(team_id),
         any(distinct_id),
         min(min_first_timestamp) as start_time,
         max(max_last_timestamp) as end_time,
         dateDiff('SECOND', start_time, end_time) as duration,
         argMinMerge(first_url) as first_url,
         sum(click_count),
         sum(keypress_count),
         sum(mouse_activity_count),
         sum(active_milliseconds)/1000 as active_seconds
  FROM session_replay_events PREWHERE team_id = 2
  AND min_first_timestamp >= '2021-08-14 00:00:00'
  AND max_last_timestamp <= '2021-08-21 20:00:00'
  WHERE 1=1
    AND distinct_id in
      (select distinct_id
       from distinct_ids_for_person)
  GROUP BY session_id
  HAVING 1=1
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0
  '
---
# name: TestClickhouseSessionRecordingsListFromSessionReplay.test_event_filter_with_matching_on_session_id
  '
  WITH events_session_ids AS
    (SELECT distinct `$session_id` as session_id
     FROM events PREWHERE team_id = 2
     AND timestamp >= '2020-12-24 12:00:00'
     AND timestamp <= '2021-01-02 01:46:23'
     and notEmpty(session_id)
     WHERE 1=1
       AND event IN ['$pageview']
       AND event = '$pageview' )
  SELECT session_id,
         any(team_id),
         any(distinct_id),
         min(min_first_timestamp) as start_time,
         max(max_last_timestamp) as end_time,
         dateDiff('SECOND', start_time, end_time) as duration,
         argMinMerge(first_url) as first_url,
         sum(click_count),
         sum(keypress_count),
         sum(mouse_activity_count),
         sum(active_milliseconds)/1000 as active_seconds
  FROM session_replay_events PREWHERE team_id = 2
  AND min_first_timestamp >= '2020-12-25 00:00:00'
  AND max_last_timestamp <= '2021-01-01 13:46:23'
  AND session_id in
    (select session_id
     from events_session_ids)
  WHERE 1=1
  GROUP BY session_id
  HAVING 1=1
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0
  '
---
# name: TestClickhouseSessionRecordingsListFromSessionReplay.test_event_filter_with_matching_on_session_id.1
  '
  WITH events_session_ids AS
    (SELECT distinct `$session_id` as session_id
     FROM events PREWHERE team_id = 2
     AND timestamp >= '2020-12-24 12:00:00'
     AND timestamp <= '2021-01-02 01:46:23'
     and notEmpty(session_id)
     WHERE 1=1
       AND event IN ['$autocapture']
       AND event = '$autocapture' )
  SELECT session_id,
         any(team_id),
         any(distinct_id),
         min(min_first_timestamp) as start_time,
         max(max_last_timestamp) as end_time,
         dateDiff('SECOND', start_time, end_time) as duration,
         argMinMerge(first_url) as first_url,
         sum(click_count),
         sum(keypress_count),
         sum(mouse_activity_count),
         sum(active_milliseconds)/1000 as active_seconds
  FROM session_replay_events PREWHERE team_id = 2
  AND min_first_timestamp >= '2020-12-25 00:00:00'
  AND max_last_timestamp <= '2021-01-01 13:46:23'
  AND session_id in
    (select session_id
     from events_session_ids)
  WHERE 1=1
  GROUP BY session_id
  HAVING 1=1
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0
  '
---
# name: TestClickhouseSessionRecordingsListFromSessionReplay.test_event_filter_with_person_properties
  '
  with distinct_ids_for_person as
    (SELECT distinct_id,
            argMax(person_id, version) as person_id
     FROM person_distinct_id2 as pdi
     INNER JOIN
       (SELECT id
        FROM person
        WHERE team_id = 2
          AND id IN
            (SELECT id
             FROM person
             WHERE team_id = 2
               AND (has(['bla'], replaceRegexpAll(JSONExtractRaw(properties, 'email'), '^"|"$', ''))) )
        GROUP BY id
        HAVING max(is_deleted) = 0
        AND (has(['bla'], replaceRegexpAll(JSONExtractRaw(argMax(person.properties, version), 'email'), '^"|"$', '')))) person ON person.id = pdi.person_id PREWHERE team_id = 2
     GROUP BY distinct_id
     HAVING argMax(is_deleted, version) = 0)
  SELECT session_id,
         any(team_id),
         any(distinct_id),
         min(min_first_timestamp) as start_time,
         max(max_last_timestamp) as end_time,
         dateDiff('SECOND', start_time, end_time) as duration,
         argMinMerge(first_url) as first_url,
         sum(click_count),
         sum(keypress_count),
         sum(mouse_activity_count),
         sum(active_milliseconds)/1000 as active_seconds
  FROM session_replay_events PREWHERE team_id = 2
  AND min_first_timestamp >= '2020-12-25 00:00:00'
  AND max_last_timestamp <= '2021-01-01 13:46:23'
  WHERE 1=1
    AND distinct_id in
      (select distinct_id
       from distinct_ids_for_person)
  GROUP BY session_id
  HAVING 1=1
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0
  '
---
# name: TestClickhouseSessionRecordingsListFromSessionReplay.test_event_filter_with_properties
  '
  WITH events_session_ids AS
    (SELECT distinct `$session_id` as session_id
     FROM events PREWHERE team_id = 2
     AND timestamp >= '2020-12-24 12:00:00'
     AND timestamp <= '2021-01-02 01:46:23'
     and notEmpty(session_id)
     WHERE 1=1
       AND event IN ['$pageview']
       AND event = '$pageview'
       AND (has(['Chrome'], replaceRegexpAll(JSONExtractRaw(properties, '$browser'), '^"|"$', ''))) )
  SELECT session_id,
         any(team_id),
         any(distinct_id),
         min(min_first_timestamp) as start_time,
         max(max_last_timestamp) as end_time,
         dateDiff('SECOND', start_time, end_time) as duration,
         argMinMerge(first_url) as first_url,
         sum(click_count),
         sum(keypress_count),
         sum(mouse_activity_count),
         sum(active_milliseconds)/1000 as active_seconds
  FROM session_replay_events PREWHERE team_id = 2
  AND min_first_timestamp >= '2020-12-25 00:00:00'
  AND max_last_timestamp <= '2021-01-01 13:46:23'
  AND session_id in
    (select session_id
     from events_session_ids)
  WHERE 1=1
  GROUP BY session_id
  HAVING 1=1
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0
  '
---
# name: TestClickhouseSessionRecordingsListFromSessionReplay.test_event_filter_with_properties.1
  '
  WITH events_session_ids AS
    (SELECT distinct `$session_id` as session_id
     FROM events PREWHERE team_id = 2
     AND timestamp >= '2020-12-24 12:00:00'
     AND timestamp <= '2021-01-02 01:46:23'
     and notEmpty(session_id)
     WHERE 1=1
       AND event IN ['$pageview']
       AND event = '$pageview'
       AND (has(['Firefox'], replaceRegexpAll(JSONExtractRaw(properties, '$browser'), '^"|"$', ''))) )
  SELECT session_id,
         any(team_id),
         any(distinct_id),
         min(min_first_timestamp) as start_time,
         max(max_last_timestamp) as end_time,
         dateDiff('SECOND', start_time, end_time) as duration,
         argMinMerge(first_url) as first_url,
         sum(click_count),
         sum(keypress_count),
         sum(mouse_activity_count),
         sum(active_milliseconds)/1000 as active_seconds
  FROM session_replay_events PREWHERE team_id = 2
  AND min_first_timestamp >= '2020-12-25 00:00:00'
  AND max_last_timestamp <= '2021-01-01 13:46:23'
  AND session_id in
    (select session_id
     from events_session_ids)
  WHERE 1=1
  GROUP BY session_id
  HAVING 1=1
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0
  '
---
# name: TestClickhouseSessionRecordingsListFromSessionReplay.test_event_filter_with_properties_materialized
  '
  WITH events_session_ids AS
    (SELECT distinct `$session_id` as session_id
     FROM events PREWHERE team_id = 2
     AND timestamp >= '2020-12-24 12:00:00'
     AND timestamp <= '2021-01-02 01:46:23'
     and notEmpty(session_id)
     WHERE 1=1
       AND event IN ['$pageview']
       AND event = '$pageview'
       AND (has(['Chrome'], "mat_$browser")) )
  SELECT session_id,
         any(team_id),
         any(distinct_id),
         min(min_first_timestamp) as start_time,
         max(max_last_timestamp) as end_time,
         dateDiff('SECOND', start_time, end_time) as duration,
         argMinMerge(first_url) as first_url,
         sum(click_count),
         sum(keypress_count),
         sum(mouse_activity_count),
         sum(active_milliseconds)/1000 as active_seconds
  FROM session_replay_events PREWHERE team_id = 2
  AND min_first_timestamp >= '2020-12-25 00:00:00'
  AND max_last_timestamp <= '2021-01-01 13:46:23'
  AND session_id in
    (select session_id
     from events_session_ids)
  WHERE 1=1
  GROUP BY session_id
  HAVING 1=1
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0
  '
---
# name: TestClickhouseSessionRecordingsListFromSessionReplay.test_event_filter_with_properties_materialized.1
  '
  WITH events_session_ids AS
    (SELECT distinct `$session_id` as session_id
     FROM events PREWHERE team_id = 2
     AND timestamp >= '2020-12-24 12:00:00'
     AND timestamp <= '2021-01-02 01:46:23'
     and notEmpty(session_id)
     WHERE 1=1
       AND event IN ['$pageview']
       AND event = '$pageview'
       AND (has(['Firefox'], "mat_$browser")) )
  SELECT session_id,
         any(team_id),
         any(distinct_id),
         min(min_first_timestamp) as start_time,
         max(max_last_timestamp) as end_time,
         dateDiff('SECOND', start_time, end_time) as duration,
         argMinMerge(first_url) as first_url,
         sum(click_count),
         sum(keypress_count),
         sum(mouse_activity_count),
         sum(active_milliseconds)/1000 as active_seconds
  FROM session_replay_events PREWHERE team_id = 2
  AND min_first_timestamp >= '2020-12-25 00:00:00'
  AND max_last_timestamp <= '2021-01-01 13:46:23'
  AND session_id in
    (select session_id
     from events_session_ids)
  WHERE 1=1
  GROUP BY session_id
  HAVING 1=1
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0
  '
---
# name: TestClickhouseSessionRecordingsListFromSessionReplay.test_multiple_event_filters
  '
  WITH events_session_ids AS
    (SELECT distinct `$session_id` as session_id
     FROM events PREWHERE team_id = 2
     AND timestamp >= '2020-12-24 12:00:00'
     AND timestamp <= '2021-01-02 01:46:23'
     and notEmpty(session_id)
     WHERE 1=1
       AND event IN ['$pageview', 'new-event']
       AND event = 'new-event' )
  SELECT session_id,
         any(team_id),
         any(distinct_id),
         min(min_first_timestamp) as start_time,
         max(max_last_timestamp) as end_time,
         dateDiff('SECOND', start_time, end_time) as duration,
         argMinMerge(first_url) as first_url,
         sum(click_count),
         sum(keypress_count),
         sum(mouse_activity_count),
         sum(active_milliseconds)/1000 as active_seconds
  FROM session_replay_events PREWHERE team_id = 2
  AND min_first_timestamp >= '2020-12-25 00:00:00'
  AND max_last_timestamp <= '2021-01-01 13:46:23'
  AND session_id in
    (select session_id
     from events_session_ids)
  WHERE 1=1
  GROUP BY session_id
  HAVING 1=1
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0
  '
---
# name: TestClickhouseSessionRecordingsListFromSessionReplay.test_multiple_event_filters.1
  '
  WITH events_session_ids AS
    (SELECT distinct `$session_id` as session_id
     FROM events PREWHERE team_id = 2
     AND timestamp >= '2020-12-24 12:00:00'
     AND timestamp <= '2021-01-02 01:46:23'
     and notEmpty(session_id)
     WHERE 1=1
       AND event IN ['$pageview', 'new-event2']
       AND event = 'new-event2' )
  SELECT session_id,
         any(team_id),
         any(distinct_id),
         min(min_first_timestamp) as start_time,
         max(max_last_timestamp) as end_time,
         dateDiff('SECOND', start_time, end_time) as duration,
         argMinMerge(first_url) as first_url,
         sum(click_count),
         sum(keypress_count),
         sum(mouse_activity_count),
         sum(active_milliseconds)/1000 as active_seconds
  FROM session_replay_events PREWHERE team_id = 2
  AND min_first_timestamp >= '2020-12-25 00:00:00'
  AND max_last_timestamp <= '2021-01-01 13:46:23'
  AND session_id in
    (select session_id
     from events_session_ids)
  WHERE 1=1
  GROUP BY session_id
  HAVING 1=1
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0
  '
---
# name: TestClickhouseSessionRecordingsListFromSessionReplay.test_person_id_filter
  '
  with distinct_ids_for_person as
    (SELECT distinct_id,
            argMax(person_id, version) as person_id
     FROM person_distinct_id2 as pdi
     INNER JOIN
       (SELECT id
        FROM person
        WHERE team_id = 2
        GROUP BY id
        HAVING max(is_deleted) = 0) person ON person.id = pdi.person_id PREWHERE team_id = 2
     GROUP BY distinct_id
     HAVING argMax(is_deleted, version) = 0
     and person_id = '00000000-0000-0000-0000-000000000000')
  SELECT session_id,
         any(team_id),
         any(distinct_id),
         min(min_first_timestamp) as start_time,
         max(max_last_timestamp) as end_time,
         dateDiff('SECOND', start_time, end_time) as duration,
         argMinMerge(first_url) as first_url,
         sum(click_count),
         sum(keypress_count),
         sum(mouse_activity_count),
         sum(active_milliseconds)/1000 as active_seconds
  FROM session_replay_events PREWHERE team_id = 2
  AND min_first_timestamp >= '2020-12-25 00:00:00'
  AND max_last_timestamp <= '2021-01-01 13:46:23'
  WHERE 1=1
    AND distinct_id in
      (select distinct_id
       from distinct_ids_for_person)
  GROUP BY session_id
  HAVING 1=1
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0
  '
---
