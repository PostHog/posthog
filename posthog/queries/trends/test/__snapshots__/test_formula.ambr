# name: TestFormula.test_breakdown
  '
  
  SELECT groupArray(value)
  FROM
    (SELECT replaceRegexpAll(JSONExtractRaw(properties, 'location'), '^"|"$', '') AS value,
            sum(toFloat64OrNull(replaceRegexpAll(JSONExtractRaw(properties, 'session duration'), '^"|"$', ''))) as count
     FROM events e
     WHERE team_id = 2
       AND event = 'session start'
       AND toTimeZone(timestamp, 'UTC') >= toDateTime('2019-12-28 00:00:00', 'UTC')
       AND toTimeZone(timestamp, 'UTC') <= toDateTime('2020-01-04 23:59:59', 'UTC')
     GROUP BY value
     ORDER BY count DESC, value DESC
     LIMIT 25
     OFFSET 0)
  '
---
# name: TestFormula.test_breakdown.1
  '
  
  SELECT groupArray(value)
  FROM
    (SELECT replaceRegexpAll(JSONExtractRaw(properties, 'location'), '^"|"$', '') AS value,
            avg(toFloat64OrNull(replaceRegexpAll(JSONExtractRaw(properties, 'session duration'), '^"|"$', ''))) as count
     FROM events e
     WHERE team_id = 2
       AND event = 'session start'
       AND toTimeZone(timestamp, 'UTC') >= toDateTime('2019-12-28 00:00:00', 'UTC')
       AND toTimeZone(timestamp, 'UTC') <= toDateTime('2020-01-04 23:59:59', 'UTC')
     GROUP BY value
     ORDER BY count DESC, value DESC
     LIMIT 25
     OFFSET 0)
  '
---
# name: TestFormula.test_breakdown.2
  '
  SELECT sub_A.date,
         arrayMap((A, B) -> A - B, arrayResize(sub_A.total, max_length, 0), arrayResize(sub_B.total, max_length, 0)) ,
         arrayFilter(x -> notEmpty(x), [replaceRegexpAll(sub_A.breakdown_value, '^"|"$', ''), replaceRegexpAll(sub_B.breakdown_value, '^"|"$', '')])[1] ,
         arrayMax([length(sub_A.total), length(sub_B.total)]) as max_length
  FROM
    (SELECT groupArray(day_start) as date,
            groupArray(count) AS total,
            breakdown_value
     FROM
       (SELECT SUM(total) as count,
               day_start,
               breakdown_value
        FROM
          (SELECT *
           FROM
             (SELECT toUInt16(0) AS total,
                     ticks.day_start as day_start,
                     breakdown_value
              FROM
                (SELECT toStartOfDay(toDateTime('2020-01-04 23:59:59', 'UTC') - number * 86400) as day_start
                 FROM numbers(8)
                 UNION ALL SELECT toStartOfDay(toDateTime('2019-12-28 00:00:00', 'UTC')) as day_start) as ticks
              CROSS JOIN
                (SELECT breakdown_value
                 FROM
                   (SELECT ['London', 'Paris'] as breakdown_value) ARRAY
                 JOIN breakdown_value) as sec
              ORDER BY breakdown_value,
                       day_start
              UNION ALL SELECT sum(toFloat64OrNull(replaceRegexpAll(JSONExtractRaw(properties, 'session duration'), '^"|"$', ''))) as total,
                               toStartOfDay(toTimeZone(toDateTime(timestamp, 'UTC'), 'UTC')) as day_start,
                               replaceRegexpAll(JSONExtractRaw(properties, 'location'), '^"|"$', '') as breakdown_value
              FROM events e
              WHERE e.team_id = 2
                AND event = 'session start'
                AND toTimeZone(timestamp, 'UTC') >= toDateTime(toStartOfDay(toDateTime('2019-12-28 00:00:00', 'UTC')), 'UTC')
                AND toTimeZone(timestamp, 'UTC') <= toDateTime('2020-01-04 23:59:59', 'UTC')
                AND replaceRegexpAll(JSONExtractRaw(properties, 'location'), '^"|"$', '') in (['London', 'Paris'])
              GROUP BY day_start,
                       breakdown_value))
        GROUP BY day_start,
                 breakdown_value
        ORDER BY breakdown_value,
                 day_start)
     GROUP BY breakdown_value
     ORDER BY breakdown_value) as sub_A
  FULL OUTER JOIN
    (SELECT groupArray(day_start) as date,
            groupArray(count) AS total,
            breakdown_value
     FROM
       (SELECT SUM(total) as count,
               day_start,
               breakdown_value
        FROM
          (SELECT *
           FROM
             (SELECT toUInt16(0) AS total,
                     ticks.day_start as day_start,
                     breakdown_value
              FROM
                (SELECT toStartOfDay(toDateTime('2020-01-04 23:59:59', 'UTC') - number * 86400) as day_start
                 FROM numbers(8)
                 UNION ALL SELECT toStartOfDay(toDateTime('2019-12-28 00:00:00', 'UTC')) as day_start) as ticks
              CROSS JOIN
                (SELECT breakdown_value
                 FROM
                   (SELECT ['London', 'Paris'] as breakdown_value) ARRAY
                 JOIN breakdown_value) as sec
              ORDER BY breakdown_value,
                       day_start
              UNION ALL SELECT avg(toFloat64OrNull(replaceRegexpAll(JSONExtractRaw(properties, 'session duration'), '^"|"$', ''))) as total,
                               toStartOfDay(toTimeZone(toDateTime(timestamp, 'UTC'), 'UTC')) as day_start,
                               replaceRegexpAll(JSONExtractRaw(properties, 'location'), '^"|"$', '') as breakdown_value
              FROM events e
              WHERE e.team_id = 2
                AND event = 'session start'
                AND toTimeZone(timestamp, 'UTC') >= toDateTime(toStartOfDay(toDateTime('2019-12-28 00:00:00', 'UTC')), 'UTC')
                AND toTimeZone(timestamp, 'UTC') <= toDateTime('2020-01-04 23:59:59', 'UTC')
                AND replaceRegexpAll(JSONExtractRaw(properties, 'location'), '^"|"$', '') in (['London', 'Paris'])
              GROUP BY day_start,
                       breakdown_value))
        GROUP BY day_start,
                 breakdown_value
        ORDER BY breakdown_value,
                 day_start)
     GROUP BY breakdown_value
     ORDER BY breakdown_value) as sub_B ON sub_A.breakdown_value = sub_B.breakdown_value
  '
---
# name: TestFormula.test_breakdown_aggregated
  '
  
  SELECT groupArray(value)
  FROM
    (SELECT replaceRegexpAll(JSONExtractRaw(properties, 'location'), '^"|"$', '') AS value,
            sum(toFloat64OrNull(replaceRegexpAll(JSONExtractRaw(properties, 'session duration'), '^"|"$', ''))) as count
     FROM events e
     WHERE team_id = 2
       AND event = 'session start'
       AND toTimeZone(timestamp, 'UTC') >= toDateTime('2019-12-28 00:00:00', 'UTC')
       AND toTimeZone(timestamp, 'UTC') <= toDateTime('2020-01-04 23:59:59', 'UTC')
     GROUP BY value
     ORDER BY count DESC, value DESC
     LIMIT 25
     OFFSET 0)
  '
---
# name: TestFormula.test_breakdown_aggregated.1
  '
  
  SELECT groupArray(value)
  FROM
    (SELECT replaceRegexpAll(JSONExtractRaw(properties, 'location'), '^"|"$', '') AS value,
            avg(toFloat64OrNull(replaceRegexpAll(JSONExtractRaw(properties, 'session duration'), '^"|"$', ''))) as count
     FROM events e
     WHERE team_id = 2
       AND event = 'session start'
       AND toTimeZone(timestamp, 'UTC') >= toDateTime('2019-12-28 00:00:00', 'UTC')
       AND toTimeZone(timestamp, 'UTC') <= toDateTime('2020-01-04 23:59:59', 'UTC')
     GROUP BY value
     ORDER BY count DESC, value DESC
     LIMIT 25
     OFFSET 0)
  '
---
# name: TestFormula.test_breakdown_aggregated.2
  '
  SELECT '' as date,
         arrayMap((A, B) -> A - B, [sub_A.total], [sub_B.total]) ,
         arrayFilter(x -> notEmpty(x), [replaceRegexpAll(sub_A.breakdown_value, '^"|"$', ''), replaceRegexpAll(sub_B.breakdown_value, '^"|"$', '')])[1]
  FROM
    (SELECT sum(toFloat64OrNull(replaceRegexpAll(JSONExtractRaw(properties, 'session duration'), '^"|"$', ''))) AS total,
            replaceRegexpAll(JSONExtractRaw(properties, 'location'), '^"|"$', '') AS breakdown_value
     FROM events e
     WHERE e.team_id = 2
       AND event = 'session start'
       AND toTimeZone(timestamp, 'UTC') >= toDateTime(toStartOfDay(toDateTime('2019-12-28 00:00:00', 'UTC')), 'UTC')
       AND toTimeZone(timestamp, 'UTC') <= toDateTime('2020-01-04 23:59:59', 'UTC')
       AND replaceRegexpAll(JSONExtractRaw(properties, 'location'), '^"|"$', '') in (['London', 'Paris'])
     GROUP BY breakdown_value
     ORDER BY breakdown_value) as sub_A
  FULL OUTER JOIN
    (SELECT avg(toFloat64OrNull(replaceRegexpAll(JSONExtractRaw(properties, 'session duration'), '^"|"$', ''))) AS total,
            replaceRegexpAll(JSONExtractRaw(properties, 'location'), '^"|"$', '') AS breakdown_value
     FROM events e
     WHERE e.team_id = 2
       AND event = 'session start'
       AND toTimeZone(timestamp, 'UTC') >= toDateTime(toStartOfDay(toDateTime('2019-12-28 00:00:00', 'UTC')), 'UTC')
       AND toTimeZone(timestamp, 'UTC') <= toDateTime('2020-01-04 23:59:59', 'UTC')
       AND replaceRegexpAll(JSONExtractRaw(properties, 'location'), '^"|"$', '') in (['London', 'Paris'])
     GROUP BY breakdown_value
     ORDER BY breakdown_value) as sub_B ON sub_A.breakdown_value = sub_B.breakdown_value
  '
---
# name: TestFormula.test_breakdown_cohort
  '
  SELECT sub_A.date,
         arrayMap((A, B) -> A + B, arrayResize(sub_A.total, max_length, 0), arrayResize(sub_B.total, max_length, 0)) ,
         arrayFilter(x -> x != 0, [sub_A.breakdown_value, sub_B.breakdown_value])[1] ,
         arrayMax([length(sub_A.total), length(sub_B.total)]) as max_length
  FROM
    (SELECT groupArray(day_start) as date,
            groupArray(count) AS total,
            breakdown_value
     FROM
       (SELECT SUM(total) as count,
               day_start,
               breakdown_value
        FROM
          (SELECT *
           FROM
             (SELECT toUInt16(0) AS total,
                     ticks.day_start as day_start,
                     breakdown_value
              FROM
                (SELECT toStartOfDay(toDateTime('2020-01-04 23:59:59', 'UTC') - number * 86400) as day_start
                 FROM numbers(8)
                 UNION ALL SELECT toStartOfDay(toDateTime('2019-12-28 00:00:00', 'UTC')) as day_start) as ticks
              CROSS JOIN
                (SELECT breakdown_value
                 FROM
                   (SELECT [39, 0] as breakdown_value) ARRAY
                 JOIN breakdown_value) as sec
              ORDER BY breakdown_value,
                       day_start
              UNION ALL SELECT sum(toFloat64OrNull(replaceRegexpAll(JSONExtractRaw(properties, 'session duration'), '^"|"$', ''))) as total,
                               toStartOfDay(toTimeZone(toDateTime(timestamp, 'UTC'), 'UTC')) as day_start,
                               value as breakdown_value
              FROM events e
              INNER JOIN
                (SELECT distinct_id,
                        39 as value
                 FROM
                   (SELECT distinct_id,
                           argMax(person_id, version) as person_id
                    FROM person_distinct_id2
                    WHERE team_id = 2
                    GROUP BY distinct_id
                    HAVING argMax(is_deleted, version) = 0)
                 WHERE person_id IN
                     (SELECT id
                      FROM person
                      WHERE team_id = 2
                      GROUP BY id
                      HAVING max(is_deleted) = 0
                      AND ((has(['some_val'], replaceRegexpAll(JSONExtractRaw(argMax(person.properties, version), '$some_prop'), '^"|"$', '')))))
                 UNION ALL SELECT DISTINCT distinct_id,
                                           0 as value
                 FROM events all_events
                 WHERE team_id = 2
                   AND toTimeZone(all_events.timestamp, 'UTC') >= toDateTime('2019-12-28 00:00:00', 'UTC')
                   AND toTimeZone(all_events.timestamp, 'UTC') <= toDateTime('2020-01-04 23:59:59', 'UTC') ) ep ON e.distinct_id = ep.distinct_id
              where team_id = 2
                AND event = 'session start'
                AND toTimeZone(timestamp, 'UTC') >= toDateTime(toStartOfDay(toDateTime('2019-12-28 00:00:00', 'UTC')), 'UTC')
                AND toTimeZone(timestamp, 'UTC') <= toDateTime('2020-01-04 23:59:59', 'UTC')
              GROUP BY day_start,
                       breakdown_value))
        GROUP BY day_start,
                 breakdown_value
        ORDER BY breakdown_value,
                 day_start)
     GROUP BY breakdown_value
     ORDER BY breakdown_value) as sub_A
  FULL OUTER JOIN
    (SELECT groupArray(day_start) as date,
            groupArray(count) AS total,
            breakdown_value
     FROM
       (SELECT SUM(total) as count,
               day_start,
               breakdown_value
        FROM
          (SELECT *
           FROM
             (SELECT toUInt16(0) AS total,
                     ticks.day_start as day_start,
                     breakdown_value
              FROM
                (SELECT toStartOfDay(toDateTime('2020-01-04 23:59:59', 'UTC') - number * 86400) as day_start
                 FROM numbers(8)
                 UNION ALL SELECT toStartOfDay(toDateTime('2019-12-28 00:00:00', 'UTC')) as day_start) as ticks
              CROSS JOIN
                (SELECT breakdown_value
                 FROM
                   (SELECT [39, 0] as breakdown_value) ARRAY
                 JOIN breakdown_value) as sec
              ORDER BY breakdown_value,
                       day_start
              UNION ALL SELECT avg(toFloat64OrNull(replaceRegexpAll(JSONExtractRaw(properties, 'session duration'), '^"|"$', ''))) as total,
                               toStartOfDay(toTimeZone(toDateTime(timestamp, 'UTC'), 'UTC')) as day_start,
                               value as breakdown_value
              FROM events e
              INNER JOIN
                (SELECT distinct_id,
                        39 as value
                 FROM
                   (SELECT distinct_id,
                           argMax(person_id, version) as person_id
                    FROM person_distinct_id2
                    WHERE team_id = 2
                    GROUP BY distinct_id
                    HAVING argMax(is_deleted, version) = 0)
                 WHERE person_id IN
                     (SELECT id
                      FROM person
                      WHERE team_id = 2
                      GROUP BY id
                      HAVING max(is_deleted) = 0
                      AND ((has(['some_val'], replaceRegexpAll(JSONExtractRaw(argMax(person.properties, version), '$some_prop'), '^"|"$', '')))))
                 UNION ALL SELECT DISTINCT distinct_id,
                                           0 as value
                 FROM events all_events
                 WHERE team_id = 2
                   AND toTimeZone(all_events.timestamp, 'UTC') >= toDateTime('2019-12-28 00:00:00', 'UTC')
                   AND toTimeZone(all_events.timestamp, 'UTC') <= toDateTime('2020-01-04 23:59:59', 'UTC') ) ep ON e.distinct_id = ep.distinct_id
              where team_id = 2
                AND event = 'session start'
                AND toTimeZone(timestamp, 'UTC') >= toDateTime(toStartOfDay(toDateTime('2019-12-28 00:00:00', 'UTC')), 'UTC')
                AND toTimeZone(timestamp, 'UTC') <= toDateTime('2020-01-04 23:59:59', 'UTC')
              GROUP BY day_start,
                       breakdown_value))
        GROUP BY day_start,
                 breakdown_value
        ORDER BY breakdown_value,
                 day_start)
     GROUP BY breakdown_value
     ORDER BY breakdown_value) as sub_B ON sub_A.breakdown_value = sub_B.breakdown_value
  '
---
# name: TestFormula.test_breakdown_with_different_breakdown_values_per_series
  '
  
  SELECT groupArray(value)
  FROM
    (SELECT replaceRegexpAll(JSONExtractRaw(properties, 'location'), '^"|"$', '') AS value,
            sum(toFloat64OrNull(replaceRegexpAll(JSONExtractRaw(properties, 'session duration'), '^"|"$', ''))) as count
     FROM events e
     WHERE team_id = 2
       AND event = 'session start'
       AND toTimeZone(timestamp, 'UTC') >= toDateTime('2019-12-28 00:00:00', 'UTC')
       AND toTimeZone(timestamp, 'UTC') <= toDateTime('2020-01-04 23:59:59', 'UTC')
     GROUP BY value
     ORDER BY count DESC, value DESC
     LIMIT 25
     OFFSET 0)
  '
---
# name: TestFormula.test_breakdown_with_different_breakdown_values_per_series.1
  '
  
  SELECT groupArray(value)
  FROM
    (SELECT replaceRegexpAll(JSONExtractRaw(properties, 'location'), '^"|"$', '') AS value,
            sum(toFloat64OrNull(replaceRegexpAll(JSONExtractRaw(properties, 'session duration'), '^"|"$', ''))) as count
     FROM events e
     WHERE team_id = 2
       AND event = 'session end'
       AND toTimeZone(timestamp, 'UTC') >= toDateTime('2019-12-28 00:00:00', 'UTC')
       AND toTimeZone(timestamp, 'UTC') <= toDateTime('2020-01-04 23:59:59', 'UTC')
     GROUP BY value
     ORDER BY count DESC, value DESC
     LIMIT 25
     OFFSET 0)
  '
---
# name: TestFormula.test_breakdown_with_different_breakdown_values_per_series.2
  '
  SELECT sub_A.date,
         arrayMap((A, B) -> A + B, arrayResize(sub_A.total, max_length, 0), arrayResize(sub_B.total, max_length, 0)) ,
         arrayFilter(x -> notEmpty(x), [replaceRegexpAll(sub_A.breakdown_value, '^"|"$', ''), replaceRegexpAll(sub_B.breakdown_value, '^"|"$', '')])[1] ,
         arrayMax([length(sub_A.total), length(sub_B.total)]) as max_length
  FROM
    (SELECT groupArray(day_start) as date,
            groupArray(count) AS total,
            breakdown_value
     FROM
       (SELECT SUM(total) as count,
               day_start,
               breakdown_value
        FROM
          (SELECT *
           FROM
             (SELECT toUInt16(0) AS total,
                     ticks.day_start as day_start,
                     breakdown_value
              FROM
                (SELECT toStartOfDay(toDateTime('2020-01-04 23:59:59', 'UTC') - number * 86400) as day_start
                 FROM numbers(8)
                 UNION ALL SELECT toStartOfDay(toDateTime('2019-12-28 00:00:00', 'UTC')) as day_start) as ticks
              CROSS JOIN
                (SELECT breakdown_value
                 FROM
                   (SELECT ['London', 'Paris'] as breakdown_value) ARRAY
                 JOIN breakdown_value) as sec
              ORDER BY breakdown_value,
                       day_start
              UNION ALL SELECT sum(toFloat64OrNull(replaceRegexpAll(JSONExtractRaw(properties, 'session duration'), '^"|"$', ''))) as total,
                               toStartOfDay(toTimeZone(toDateTime(timestamp, 'UTC'), 'UTC')) as day_start,
                               replaceRegexpAll(JSONExtractRaw(properties, 'location'), '^"|"$', '') as breakdown_value
              FROM events e
              WHERE e.team_id = 2
                AND event = 'session start'
                AND toTimeZone(timestamp, 'UTC') >= toDateTime(toStartOfDay(toDateTime('2019-12-28 00:00:00', 'UTC')), 'UTC')
                AND toTimeZone(timestamp, 'UTC') <= toDateTime('2020-01-04 23:59:59', 'UTC')
                AND replaceRegexpAll(JSONExtractRaw(properties, 'location'), '^"|"$', '') in (['London', 'Paris'])
              GROUP BY day_start,
                       breakdown_value))
        GROUP BY day_start,
                 breakdown_value
        ORDER BY breakdown_value,
                 day_start)
     GROUP BY breakdown_value
     ORDER BY breakdown_value) as sub_A
  FULL OUTER JOIN
    (SELECT groupArray(day_start) as date,
            groupArray(count) AS total,
            breakdown_value
     FROM
       (SELECT SUM(total) as count,
               day_start,
               breakdown_value
        FROM
          (SELECT *
           FROM
             (SELECT toUInt16(0) AS total,
                     ticks.day_start as day_start,
                     breakdown_value
              FROM
                (SELECT toStartOfDay(toDateTime('2020-01-04 23:59:59', 'UTC') - number * 86400) as day_start
                 FROM numbers(8)
                 UNION ALL SELECT toStartOfDay(toDateTime('2019-12-28 00:00:00', 'UTC')) as day_start) as ticks
              CROSS JOIN
                (SELECT breakdown_value
                 FROM
                   (SELECT ['London', 'Belo Horizonte', ''] as breakdown_value) ARRAY
                 JOIN breakdown_value) as sec
              ORDER BY breakdown_value,
                       day_start
              UNION ALL SELECT sum(toFloat64OrNull(replaceRegexpAll(JSONExtractRaw(properties, 'session duration'), '^"|"$', ''))) as total,
                               toStartOfDay(toTimeZone(toDateTime(timestamp, 'UTC'), 'UTC')) as day_start,
                               replaceRegexpAll(JSONExtractRaw(properties, 'location'), '^"|"$', '') as breakdown_value
              FROM events e
              WHERE e.team_id = 2
                AND event = 'session end'
                AND toTimeZone(timestamp, 'UTC') >= toDateTime(toStartOfDay(toDateTime('2019-12-28 00:00:00', 'UTC')), 'UTC')
                AND toTimeZone(timestamp, 'UTC') <= toDateTime('2020-01-04 23:59:59', 'UTC')
                AND replaceRegexpAll(JSONExtractRaw(properties, 'location'), '^"|"$', '') in (['London', 'Belo Horizonte', ''])
              GROUP BY day_start,
                       breakdown_value))
        GROUP BY day_start,
                 breakdown_value
        ORDER BY breakdown_value,
                 day_start)
     GROUP BY breakdown_value
     ORDER BY breakdown_value) as sub_B ON sub_A.breakdown_value = sub_B.breakdown_value
  '
---
# name: TestFormula.test_formula_with_unique_sessions
  '
  SELECT sub_A.date,
         arrayMap((A, B) -> A / B, arrayResize(sub_A.total, max_length, 0), arrayResize(sub_B.total, max_length, 0)) ,
         arrayMax([length(sub_A.total), length(sub_B.total)]) as max_length
  FROM
    (SELECT groupArray(day_start) as date,
            groupArray(count) AS total
     FROM
       (SELECT SUM(total) AS count,
               day_start
        FROM
          (SELECT toUInt16(0) AS total,
                  toStartOfDay(toDateTime('2020-01-04 23:59:59', 'UTC') - toIntervalDay(number)) AS day_start
           FROM numbers(dateDiff('day', toStartOfDay(toDateTime('2019-12-28 00:00:00', 'UTC')), toDateTime('2020-01-04 23:59:59', 'UTC')))
           UNION ALL SELECT toUInt16(0) AS total,
                            toStartOfDay(toDateTime('2019-12-28 00:00:00', 'UTC'))
           UNION ALL SELECT count(DISTINCT e."$session_id") AS total,
                            toStartOfDay(toTimeZone(toDateTime(timestamp, 'UTC'), 'UTC')) AS date
           FROM events e
           WHERE team_id = 2
             AND event = 'session start'
             AND toTimeZone(timestamp, 'UTC') >= toDateTime(toStartOfDay(toDateTime('2019-12-28 00:00:00', 'UTC')), 'UTC')
             AND toTimeZone(timestamp, 'UTC') <= toDateTime('2020-01-04 23:59:59', 'UTC')
           GROUP BY date)
        GROUP BY day_start
        ORDER BY day_start)) as sub_A
  CROSS JOIN
    (SELECT groupArray(day_start) as date,
            groupArray(count) AS total
     FROM
       (SELECT SUM(total) AS count,
               day_start
        FROM
          (SELECT toUInt16(0) AS total,
                  toStartOfDay(toDateTime('2020-01-04 23:59:59', 'UTC') - toIntervalDay(number)) AS day_start
           FROM numbers(dateDiff('day', toStartOfDay(toDateTime('2019-12-28 00:00:00', 'UTC')), toDateTime('2020-01-04 23:59:59', 'UTC')))
           UNION ALL SELECT toUInt16(0) AS total,
                            toStartOfDay(toDateTime('2019-12-28 00:00:00', 'UTC'))
           UNION ALL SELECT count(DISTINCT pdi.person_id) AS total,
                            toStartOfDay(toTimeZone(toDateTime(timestamp, 'UTC'), 'UTC')) AS date
           FROM events e
           INNER JOIN
             (SELECT distinct_id,
                     argMax(person_id, version) as person_id
              FROM person_distinct_id2
              WHERE team_id = 2
              GROUP BY distinct_id
              HAVING argMax(is_deleted, version) = 0) AS pdi ON e.distinct_id = pdi.distinct_id
           WHERE team_id = 2
             AND event = 'session start'
             AND toTimeZone(timestamp, 'UTC') >= toDateTime(toStartOfDay(toDateTime('2019-12-28 00:00:00', 'UTC')), 'UTC')
             AND toTimeZone(timestamp, 'UTC') <= toDateTime('2020-01-04 23:59:59', 'UTC')
           GROUP BY date)
        GROUP BY day_start
        ORDER BY day_start)) as sub_B
  '
---
