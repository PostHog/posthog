procs:
    backend:
        shell: 'uv sync --active && bin/check_kafka_clickhouse_up && python manage.py migrate && ./bin/start-backend'

    celery-worker:
        shell: 'uv sync --active && bin/check_kafka_clickhouse_up && ./bin/start-celery worker'

    celery-beat:
        shell: 'uv sync --active && bin/check_kafka_clickhouse_up && ./bin/start-celery beat'

    plugin-server:
        shell: 'bin/check_kafka_clickhouse_up && ./bin/plugin-server'

    frontend:
        shell: 'bin/check_kafka_clickhouse_up && ./bin/start-frontend'

    docker-compose:
        # docker-compose makes sure the stack is up, and then follows its logs - but doesn't tear down on exit for speed
        shell: 'docker compose -f docker-compose.dev-minimal.yml up --pull always -d && docker compose -f docker-compose.dev-minimal.yml logs --tail=0 -f'

    property-defs-rs:
        shell: |-
            bin/check_postgres_up && \
            bin/check_kafka_clickhouse_up && \
            bin/start-rust-service property-defs-rs

    migrate-clickhouse:
        # These migrations are not in the `backend` service, because they typically aren't blocking for backend startup,
        # but unfortunately they DO take 10-30 s just to check if there's any migration to run (haven't profiled why)
        shell: 'bin/check_kafka_clickhouse_up && python manage.py migrate_clickhouse'

    storybook:
        shell: 'pnpm --filter=@posthog/storybook install && pnpm run storybook'
        autostart: false

mouse_scroll_speed: 1
scrollback: 10000
