procs:
    celery-worker:
        shell: 'bin/check_kafka_clickhouse_up && source ./bin/celery-queues.env && python manage.py run_autoreload_celery --type=worker'

    celery-beat:
        shell: 'bin/check_kafka_clickhouse_up && source ./bin/celery-queues.env && python manage.py run_autoreload_celery --type=beat'

    plugin-server:
        shell: 'bin/check_kafka_clickhouse_up && ./bin/plugin-server'

    backend:
        shell: 'bin/check_kafka_clickhouse_up && ./bin/start-backend'

    frontend:
        shell: 'bin/check_kafka_clickhouse_up && ./bin/start-frontend'

    temporal-worker:
        # added a sleep to give the docker stuff time to start
        shell: 'bin/check_kafka_clickhouse_up && bin/check_temporal_up && python manage.py start_temporal_worker'

    docker-compose:
        # docker-compose makes sure the stack is up, and then follows its logs - but doesn't tear down on exit for speed
        shell: 'docker compose -f docker-compose.dev.yml up -d && docker compose -f docker-compose.dev.yml logs --tail=0 -f'

mouse_scroll_speed: 1
scrollback: 10000
