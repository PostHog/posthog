procs:
    backend:
        shell: 'uv sync --active && bin/check_postgres_up && bin/check_kafka_clickhouse_up && ./bin/start-backend 2>&1 | tee /tmp/posthog-backend.log'

    celery-worker:
        shell: 'uv sync --active && bin/check_postgres_up && bin/check_kafka_clickhouse_up && ./bin/start-celery worker 2>&1 | tee /tmp/posthog-celery-worker.log'

    celery-beat:
        shell: 'uv sync --active && bin/check_postgres_up && bin/check_kafka_clickhouse_up && ./bin/start-celery beat 2>&1 | tee /tmp/posthog-celery-beat.log'

    plugin-server:
        shell: 'bin/check_postgres_up && bin/check_kafka_clickhouse_up && ./bin/plugin-server 2>&1 | tee /tmp/posthog-plugin-server.log'

    frontend-vite:
        shell: 'SKIP_TYPEGEN=1 ./bin/start-frontend 2>&1 | tee /tmp/posthog-frontend-vite.log'
        autorestart: true

    frontend-typegen:
        shell: './bin/start-frontend-typegen 2>&1 | tee /tmp/posthog-frontend-typegen.log'
        autorestart: true

    temporal-worker:
        shell: 'bin/check_kafka_clickhouse_up && bin/check_temporal_up && python manage.py start_temporal_worker --task-queue development-task-queue 2>&1 | tee /tmp/posthog-temporal-worker.log'

    dagster:
        shell: |-
            bin/check_postgres_up && \
            bin/check_kafka_clickhouse_up && \
            dagster dev --workspace $DAGSTER_HOME/workspace.yaml -p $DAGSTER_UI_PORT 2>&1 | tee /tmp/posthog-dagster.log

    docker-compose:
        shell: 'docker compose -f docker-compose.dev.yml up --pull always -d && docker compose -f docker-compose.dev.yml logs --tail=0 -f 2>&1 | tee /tmp/posthog-docker-compose.log'

    cyclotron-janitor:
        shell: |-
            bin/check_postgres_up cyclotron && \
            bin/check_kafka_clickhouse_up && \
            bin/start-rust-service cyclotron-janitor 2>&1 | tee /tmp/posthog-cyclotron-janitor.log

    cymbal:
        shell: |-
            bin/check_postgres_up && \
            bin/check_kafka_clickhouse_up && \
            bin/start-rust-service cymbal 2>&1 | tee /tmp/posthog-cymbal.log

    embedding-worker:
        shell: |-
            bin/check_kafka_clickhouse_up && \
            bin/start-rust-service embedding-worker 2>&1 | tee /tmp/posthog-embedding-worker.log

    feature-flags:
        shell: |-
            bin/check_postgres_up posthog && \
            bin/start-rust-service feature-flags 2>&1 | tee /tmp/posthog-feature-flags.log

    property-defs-rs:
        shell: |-
            bin/check_postgres_up && \
            bin/check_kafka_clickhouse_up && \
            bin/start-rust-service property-defs-rs 2>&1 | tee /tmp/posthog-property-defs-rs.log

    capture:
        shell: |-
            bin/check_postgres_up && \
            bin/check_kafka_clickhouse_up && \
            bin/start-rust-service capture 2>&1 | tee /tmp/posthog-capture.log

    capture-replay:
        shell: |-
            bin/check_postgres_up && \
            bin/check_kafka_clickhouse_up && \
            bin/start-rust-service capture-replay 2>&1 | tee /tmp/posthog-capture-replay.log

    batch-import-worker:
        shell: |-
            bin/check_postgres_up && \
            bin/check_kafka_clickhouse_up && \
            bin/start-rust-service batch-import-worker 2>&1 | tee /tmp/posthog-batch-import-worker.log

    migrate-postgres:
        shell: 'bin/check_postgres_up && python manage.py migrate 2>&1 | tee /tmp/posthog-migrate-postgres.log'

    migrate-clickhouse:
        shell: 'bin/check_kafka_clickhouse_up && python manage.py migrate_clickhouse 2>&1 | tee /tmp/posthog-migrate-clickhouse.log'

    migrate-persons-db:
        shell: 'bin/check_postgres_up posthog_persons && cd rust && DATABASE_URL=postgres://posthog:posthog@localhost:5432/posthog_persons sqlx migrate run --source persons_migrations 2>&1 | tee /tmp/posthog-migrate-persons-db.log'

    migrate-behavioral-cohorts:
        shell: 'bin/check_postgres_up behavioral_cohorts && rust/bin/migrate-behavioral-cohorts 2>&1 | tee /tmp/posthog-migrate-behavioral-cohorts.log'

    generate-demo-data:
        shell: |-
            bin/check_postgres_up && \
            bin/check_kafka_clickhouse_up && \
            bin/check_dagster_graphql_up && \
            ./manage.py generate_demo_data 2>&1 | tee /tmp/posthog-generate-demo-data.log
        autostart: false

    storybook:
        shell: 'pnpm --filter=@posthog/storybook install && pnpm run storybook 2>&1 | tee /tmp/posthog-storybook.log'
        autostart: false

    hedgebox-dummy:
        shell: 'bin/check_postgres_up && cd hedgebox-dummy && pnpm install && pnpm run dev 2>&1 | tee /tmp/posthog-hedgebox-dummy.log'
        autostart: false

mouse_scroll_speed: 1
scrollback: 10000
