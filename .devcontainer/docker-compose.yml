# Defines the services and workspace environment used for codespaces
#
# Used
# https://github.com/microsoft/vscode-dev-containers/blob/main/containers/python-3-postgres/.devcontainer/docker-compose.yml
# for reference.

version: '3'
services:
    # The workspace environment you'll be dropped into. Note that I do not
    # create separate services for each process e.g. celery, the plugin server.
    # I expect these to be run from within this workspace context, such that you
    # do not need to interact with them via docker, the intent is to make them
    # readily debuggable.
    #
    # Service dependencies are, however, run separately as there isn't so much
    # of a need to debug them. You can of course however use `docker logs` (as we
    # have docker-in-docker enabled) to view these, of via the vscode docker
    # extention.
    app:
        build:
            context: ../
            dockerfile: .devcontainer/Dockerfile
            cache_from:
                - ghcr.io/posthog/posthog/codespaces:cache

        command: sleep infinity
        volumes:
            # Make sure we can see the code in our workspace! Should match the
            # `workspaceFolder` setting in `devcontainer.json`.
            - .:/workspace:cached

            # Make sure we can talk to the docker daemon. See
            # https://aka.ms/vscode-remote/samples/docker-from-docker-compose
            # for details.
            - /var/run/docker.sock:/var/run/docker.sock

    # The applications service dependencies
    db:
        image: postgres:12-alpine
        network_mode: host
        environment:
            POSTGRES_USER: posthog
            POSTGRES_DB: posthog
            POSTGRES_PASSWORD: posthog
        volumes:
            - postgres-data:/var/lib/postgresql/data

    # Used for/by 1. celery broker 2. django.core.cache
    redis:
        image: 'redis:alpine'
        network_mode: host

    clickhouse:
        # KEEP CLICKHOUSE-SERVER VERSION IN SYNC WITH
        # https://github.com/PostHog/charts-clickhouse/blob/main/charts/posthog/templates/clickhouse_instance.yaml#L88
        image: yandex/clickhouse-server:21.6.5
        network_mode: host
        volumes:
            - ./idl:/idl
            - ../docker/clickhouse/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
            - ../docker/clickhouse/config.xml:/etc/clickhouse-server/config.xml
            - ../docker/clickhouse/users.xml:/etc/clickhouse-server/users.xml
            - clickhouse-data:/var/lib/clickhouse/data

    # Needed for 1. clickhouse distributed queries 2. kafka replication
    zookeeper:
        image: wurstmeister/zookeeper
        network_mode: host

    kafka:
        image: wurstmeister/kafka
        network_mode: host
        depends_on:
            - zookeeper
        environment:
            KAFKA_ADVERTISED_HOST_NAME: kafka
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181

# Make sure we persist between container recreation. We only really care about
# postgres and clickhouse here
volumes:
    postgres-data:
    clickhouse-data:
