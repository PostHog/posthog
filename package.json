{
    "name": "@posthog/build",
    "description": "",
    "version": "0.0.0",
    "repository": {
        "type": "git",
        "url": "https://github.com/posthog/posthog.git"
    },
    "author": "PostHog Inc.",
    "bugs": {
        "url": "https://github.com/posthog/posthog/issues"
    },
    "homepage": "https://github.com/posthog/posthog#readme",
    "license": "MIT",
    "engines": {
        "node": ">=18 <19"
    },
    "packageManager": "pnpm@8.10.5",
    "scripts": {
        "test": "pnpm test:unit && pnpm test:visual",
        "test:unit": "jest --testPathPattern='(frontend/|products/|common/)'",
        "jest": "jest",
        "test:visual:update": "rm -rf frontend/__snapshots__/__failures__/ && docker compose -f docker-compose.playwright.yml run --rm -it --build playwright pnpm test:visual:update:docker --url http://host.docker.internal:6006",
        "test:visual:update:docker": "NODE_OPTIONS=--max-old-space-size=6144 test-storybook -u --browsers chromium webkit --no-index-json",
        "test:visual:debug": "PWDEBUG=1 NODE_OPTIONS=--max-old-space-size=6144 test-storybook --browsers chromium webkit --no-index-json",
        "test:visual:ci:update": "test-storybook -u --no-index-json --maxWorkers=2",
        "test:visual:ci:verify": "test-storybook --ci --no-index-json --maxWorkers=2",
        "schema:build": "pnpm run schema:build:json && pnpm run schema:build:python",
        "schema:build:json": "ts-node bin/build-schema-json.mjs && prettier --write frontend/src/queries/schema.json",
        "schema:build:python": "bash bin/build-schema-python.sh",
        "grammar:build": "npm run grammar:build:python && npm run grammar:build:cpp",
        "grammar:build:python": "cd posthog/hogql/grammar && antlr -Dlanguage=Python3 HogQLLexer.g4 && antlr -visitor -no-listener -Dlanguage=Python3 HogQLParser.g4",
        "grammar:build:cpp": "cd posthog/hogql/grammar && antlr -o ../../../common/hogql_parser -Dlanguage=Cpp HogQLLexer.g4 && antlr -o ../../../common/hogql_parser -visitor -no-listener -Dlanguage=Cpp HogQLParser.g4",
        "packages:build": "pnpm packages:build:lemon-ui",
        "packages:build:lemon-ui": "cd frontend/@posthog/lemon-ui && pnpm i && pnpm build",
        "editor:update-tsd": "pnpm packages:build && node frontend/editor-update-tsd.mjs",
        "prettier": "prettier --write \"./**/*.{js,mjs,ts,tsx,json,yaml,yml,css,scss}\"",
        "prettier:check": "prettier --check \"frontend/**/*.{js,mjs,ts,tsx,json,yaml,yml,css,scss}\"",
        "typescript:check": "tsc --noEmit && echo \"No errors reported by tsc.\"",
        "lint:js": "eslint --cache frontend/src cypress products common",
        "lint:css": "stylelint \"(frontend|products|common)/**/*.{css,scss}\"",
        "format:backend": "ruff .",
        "format:frontend": "pnpm lint:js --fix && pnpm lint:css --fix && pnpm prettier",
        "format": "pnpm format:backend && pnpm format:frontend",
        "typegen:write": "kea-typegen write --delete --show-ts-errors",
        "typegen:check": "kea-typegen check",
        "typegen:watch": "kea-typegen watch --delete --show-ts-errors",
        "typegen:clean": "find frontend/src products common -type f -name '*Type.ts' -delete",
        "storybook": "DEBUG=0 nx storybook dev -p 6006",
        "build-storybook": "DEBUG=0 storybook build",
        "dev:migrate:postgres": "export DEBUG=1 && source env/bin/activate && python manage.py migrate",
        "dev:migrate:clickhouse": "export DEBUG=1 && source env/bin/activate && python manage.py migrate_clickhouse",
        "prepare": "husky install",
        "mobile-replay:web:schema:build:json": "ts-json-schema-generator -f tsconfig.json --path 'node_modules/@rrweb/types/dist/index.d.ts' --type 'eventWithTime' --expose all --no-top-ref --out ee/frontend/mobile-replay/schema/web/rr-web-schema.json && prettier --write ee/frontend/mobile-replay/schema/web/rr-web-schema.json",
        "mobile-replay:mobile:schema:build:json": "ts-json-schema-generator -f tsconfig.json --path 'ee/frontend/mobile-replay/mobile.types.ts' --type 'mobileEventWithTime' --expose all --no-top-ref --out ee/frontend/mobile-replay/schema/mobile/rr-mobile-schema.json && prettier --write ee/frontend/mobile-replay/schema/mobile/rr-mobile-schema.json",
        "mobile-replay:schema:build:json": "pnpm mobile-replay:web:schema:build:json && pnpm mobile-replay:mobile:schema:build:json",
        "visualize-toolbar-bundle": "pnpm exec esbuild-visualizer --metadata ./toolbar-esbuild-meta.json --filename=toolbar-esbuild-bundle-visualization.html",
        "mypy-baseline-sync": "mypy -p posthog | mypy-baseline sync"
    },
    "dependencies": {
        "husky": "^7.0.4",
        "lint-staged": "~10.2.13",
        "turbo": "^2.3.4"
    },
    "devDependencies": {
        "@typescript-eslint/eslint-plugin": "^7.1.1",
        "@typescript-eslint/parser": "^7.1.1",
        "eslint": "^8.57.0",
        "eslint-config-prettier": "^9.1.0",
        "eslint-plugin-compat": "^4.2.0",
        "eslint-plugin-cypress": "^2.15.1",
        "eslint-plugin-eslint-comments": "^3.2.0",
        "eslint-plugin-import": "^2.29.0",
        "eslint-plugin-jest": "^28.6.0",
        "eslint-plugin-posthog": "link:./eslint-rules",
        "eslint-plugin-react": "^7.33.2",
        "eslint-plugin-react-google-translate": "^0.0.114",
        "eslint-plugin-react-hooks": "^4.6.2",
        "eslint-plugin-simple-import-sort": "^10.0.0",
        "eslint-plugin-storybook": "^0.6.15",
        "eslint-plugin-unused-imports": "^3.1.0",
        "stylelint": "^15.11.0",
        "stylelint-config-recess-order": "^4.3.0",
        "stylelint-config-standard-scss": "^11.1.0",
        "stylelint-order": "^6.0.3",
        "syncpack": "^13.0.1"
    },
    "lint-staged": {
        "*.{json,yaml,yml}": "prettier --write",
        "*.{css,scss}": [
            "stylelint --fix",
            "prettier --write"
        ],
        "cypress/**/*.{js,jsx,mjs,ts,tsx}": [
            "eslint -c .eslintrc.js --fix",
            "prettier --write"
        ],
        "frontend/src/**/*.{js,jsx,mjs,ts,tsx}": [
            "eslint --cache -c .eslintrc.js --fix",
            "prettier --write"
        ],
        "products/**/frontend/**/*.{js,jsx,mjs,ts,tsx}": [
            "eslint --cache -c .eslintrc.js --fix",
            "prettier --write"
        ],
        "common/**/src/**/*.{js,jsx,mjs,ts,tsx}": [
            "eslint --cache -c .eslintrc.js --fix",
            "prettier --write"
        ],
        "common/**/frontend/**/*.{js,jsx,mjs,ts,tsx}": [
            "eslint --cache -c .eslintrc.js --fix",
            "prettier --write"
        ],
        "frontend/*.mjs": [
            "eslint -c .eslintrc.js --fix",
            "prettier --write"
        ],
        "ee/frontend/**/*.{js,jsx,mjs,ts,tsx}": [
            "eslint -c .eslintrc.js --fix",
            "prettier --write"
        ],
        "plugin-server/**/*.{js,jsx,mjs,ts,tsx}": [
            "pnpm --dir plugin-server exec eslint --fix",
            "pnpm --dir plugin-server exec prettier --write"
        ],
        "!(posthog/hogql/grammar/*)*.{py,pyi}": [
            "ruff check --fix",
            "ruff format"
        ]
    },
    "browserslist": {
        "development": [
            "last 2 chrome versions",
            "last 2 firefox versions",
            "last 2 edge versions"
        ],
        "production": [
            "defaults and not op_mini all"
        ]
    },
    "browser": {
        "path": "path-browserify"
    }
}
