{
    "name": "@posthog/build",
    "description": "",
    "version": "0.0.0",
    "repository": {
        "type": "git",
        "url": "https://github.com/posthog/posthog.git"
    },
    "author": "PostHog Inc.",
    "bugs": {
        "url": "https://github.com/posthog/posthog/issues"
    },
    "homepage": "https://github.com/posthog/posthog#readme",
    "license": "MIT",
    "engines": {
        "node": ">=18 <19"
    },
    "packageManager": "pnpm@8.10.5",
    "scripts": {
        "schema:build": "pnpm run schema:build:json && pnpm run schema:build:python",
        "schema:build:json": "ts-node bin/build-schema-json.mjs && prettier --write frontend/src/queries/schema.json",
        "schema:build:python": "bash bin/build-schema-python.sh",
        "grammar:build": "npm run grammar:build:python && npm run grammar:build:cpp",
        "grammar:build:python": "cd posthog/hogql/grammar && antlr -Dlanguage=Python3 HogQLLexer.g4 && antlr -visitor -no-listener -Dlanguage=Python3 HogQLParser.g4",
        "grammar:build:cpp": "cd posthog/hogql/grammar && antlr -o ../../../common/hogql_parser -Dlanguage=Cpp HogQLLexer.g4 && antlr -o ../../../common/hogql_parser -visitor -no-listener -Dlanguage=Cpp HogQLParser.g4",
        "format:backend": "ruff .",
        "format": "pnpm format:backend && cd frontend && pnpm format",
        "dev:migrate:postgres": "export DEBUG=1 && source env/bin/activate && python manage.py migrate",
        "dev:migrate:clickhouse": "export DEBUG=1 && source env/bin/activate && python manage.py migrate_clickhouse",
        "prepare": "husky install",
        "mobile-replay:web:schema:build:json": "ts-json-schema-generator -f tsconfig.json --path 'node_modules/@posthog/rrweb-types/dist/index.d.ts' --type 'eventWithTime' --expose all --no-top-ref --out ee/frontend/mobile-replay/schema/web/rr-web-schema.json && prettier --write ee/frontend/mobile-replay/schema/web/rr-web-schema.json",
        "mobile-replay:mobile:schema:build:json": "ts-json-schema-generator -f tsconfig.json --path 'ee/frontend/mobile-replay/mobile.types.ts' --type 'mobileEventWithTime' --expose all --no-top-ref --out ee/frontend/mobile-replay/schema/mobile/rr-mobile-schema.json && prettier --write ee/frontend/mobile-replay/schema/mobile/rr-mobile-schema.json",
        "mobile-replay:schema:build:json": "pnpm mobile-replay:web:schema:build:json && pnpm mobile-replay:mobile:schema:build:json",
        "mypy-baseline-sync": "mypy -p posthog | mypy-baseline sync"
    },
    "dependencies": {
        "husky": "^7.0.4",
        "lint-staged": "~10.2.13",
        "turbo": "^2.3.4"
    },
    "devDependencies": {
        "syncpack": "^13.0.1"
    },
    "pnpm": {
        "overrides": {
            "playwright": "1.45.0",
            "typescript": "~4.9.5"
        }
    },
    "lint-staged": {
        "*.{json,yaml,yml}": "prettier --write",
        "*.{css,scss}": [
            "stylelint --fix",
            "prettier --write"
        ],
        "cypress/**/*.{js,jsx,mjs,ts,tsx}": [
            "eslint -c .eslintrc.js --fix",
            "prettier --write"
        ],
        "frontend/src/**/*.{js,jsx,mjs,ts,tsx}": [
            "eslint --cache -c .eslintrc.js --fix",
            "prettier --write"
        ],
        "products/**/frontend/**/*.{js,jsx,mjs,ts,tsx}": [
            "eslint --cache -c .eslintrc.js --fix",
            "prettier --write"
        ],
        "common/**/src/**/*.{js,jsx,mjs,ts,tsx}": [
            "eslint --cache -c .eslintrc.js --fix",
            "prettier --write"
        ],
        "common/**/frontend/**/*.{js,jsx,mjs,ts,tsx}": [
            "eslint --cache -c .eslintrc.js --fix",
            "prettier --write"
        ],
        "frontend/*.mjs": [
            "eslint -c .eslintrc.js --fix",
            "prettier --write"
        ],
        "ee/frontend/**/*.{js,jsx,mjs,ts,tsx}": [
            "eslint -c .eslintrc.js --fix",
            "prettier --write"
        ],
        "plugin-server/**/*.{js,jsx,mjs,ts,tsx}": [
            "pnpm --dir plugin-server exec eslint --fix",
            "pnpm --dir plugin-server exec prettier --write"
        ],
        "!(posthog/hogql/grammar/*)*.{py,pyi}": [
            "ruff check --fix",
            "ruff format"
        ]
    },
    "browserslist": {
        "development": [
            "last 2 chrome versions",
            "last 2 firefox versions",
            "last 2 edge versions"
        ],
        "production": [
            "defaults and not op_mini all"
        ]
    },
    "browser": {
        "path": "path-browserify"
    }
}
