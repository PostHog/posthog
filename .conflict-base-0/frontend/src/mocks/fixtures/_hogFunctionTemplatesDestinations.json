{
    "count": 277,
    "next": null,
    "previous": null,
    "results": [
        {
            "mapping_templates": [
                {
                    "name": "Track Calls",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify') and event != 'Order Completed'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "user_id",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": false,
                            "description": "A readable ID specified by you. Must have a minimum length of 5 characters. Required unless device ID is present. **Note:** If you send a request with a user ID that is not in the Amplitude system yet, then the user tied to that ID will not be marked new until their first event."
                        },
                        {
                            "key": "device_id",
                            "type": "string",
                            "label": "Device ID",
                            "secret": false,
                            "default": "{event.properties.$device_id ?? event.distinct_id}",
                            "required": false,
                            "description": "A device-specific identifier, such as the Identifier for Vendor on iOS. Required unless user ID is present. If a device ID is not sent with the event, it will be set to a hashed version of the user ID."
                        },
                        {
                            "key": "event_type",
                            "type": "string",
                            "label": "Event Type",
                            "secret": false,
                            "default": "{event.event}",
                            "required": true,
                            "description": "A unique identifier for your event."
                        },
                        {
                            "key": "session_id",
                            "type": "string",
                            "label": "Session ID",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "The start time of the session, necessary if you want to associate events with a particular system. To use automatic Amplitude session tracking in browsers, enable Analytics 2.0 on your connected source."
                        },
                        {
                            "key": "time",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": false,
                            "description": "The timestamp of the event. If time is not sent with the event, it will be set to the request upload time."
                        },
                        {
                            "key": "event_properties",
                            "type": "dictionary",
                            "label": "Event Properties",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.properties}"
                            },
                            "required": false,
                            "description": "An object of key-value pairs that represent additional data to be sent along with the event. You can store property values in an array, but note that Amplitude only supports one-dimensional arrays. Date values are transformed into string values. Object depth may not exceed 40 layers."
                        },
                        {
                            "key": "user_properties",
                            "type": "dictionary",
                            "label": "User Properties",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{person.properties}"
                            },
                            "required": false,
                            "description": "An object of key-value pairs that represent additional data tied to the user. You can store property values in an array, but note that Amplitude only supports one-dimensional arrays. Date values are transformed into string values. Object depth may not exceed 40 layers."
                        },
                        {
                            "key": "groups",
                            "type": "dictionary",
                            "label": "Groups",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "Groups of users for the event as an event-level group. You can only track up to 5 groups. **Note:** This Amplitude feature is only available to Enterprise customers who have purchased the Accounts add-on."
                        },
                        {
                            "key": "app_version",
                            "type": "string",
                            "label": "App Version",
                            "secret": false,
                            "default": "{event.event.properties.$app_version}",
                            "required": false,
                            "description": "The current version of your application."
                        },
                        {
                            "key": "platform",
                            "type": "string",
                            "label": "Platform",
                            "secret": false,
                            "default": "{event.properties.$device_type}",
                            "required": false,
                            "description": "Platform of the device. If using analytics.js to send events from a Browser and no if no Platform value is provided, the value \"Web\" will be sent."
                        },
                        {
                            "key": "os_name",
                            "type": "string",
                            "label": "OS Name",
                            "secret": false,
                            "default": "{event.properties.$os}",
                            "required": false,
                            "description": "The name of the mobile operating system or browser that the user is using."
                        },
                        {
                            "key": "os_version",
                            "type": "string",
                            "label": "OS Version",
                            "secret": false,
                            "default": "{event.properties.$os_version}",
                            "required": false,
                            "description": "The version of the mobile operating system or browser the user is using."
                        },
                        {
                            "key": "device_brand",
                            "type": "string",
                            "label": "Device Brand",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "The device brand that the user is using."
                        },
                        {
                            "key": "device_manufacturer",
                            "type": "string",
                            "label": "Device Manufacturer",
                            "secret": false,
                            "default": "{event.properties.$device_manufacturer}",
                            "required": false,
                            "description": "The device manufacturer that the user is using."
                        },
                        {
                            "key": "device_model",
                            "type": "string",
                            "label": "Device Model",
                            "secret": false,
                            "default": "{event.properties.$device_model}",
                            "required": false,
                            "description": "The device model that the user is using."
                        },
                        {
                            "key": "carrier",
                            "type": "string",
                            "label": "Carrier",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "The carrier that the user is using."
                        },
                        {
                            "key": "country",
                            "type": "string",
                            "label": "Country",
                            "secret": false,
                            "default": "{event.properties.$geoip_country_name}",
                            "required": false,
                            "description": "The current country of the user."
                        },
                        {
                            "key": "region",
                            "type": "string",
                            "label": "Region",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "The current region of the user."
                        },
                        {
                            "key": "city",
                            "type": "string",
                            "label": "City",
                            "secret": false,
                            "default": "{event.properties.$geoip_city_name}",
                            "required": false,
                            "description": "The current city of the user."
                        },
                        {
                            "key": "dma",
                            "type": "string",
                            "label": "Designated Market Area",
                            "secret": false,
                            "required": false,
                            "description": "The current Designated Market Area of the user."
                        },
                        {
                            "key": "language",
                            "type": "string",
                            "label": "Language",
                            "secret": false,
                            "default": "{event.properties.$locale}",
                            "required": false,
                            "description": "The language set by the user."
                        },
                        {
                            "key": "price",
                            "type": "string",
                            "label": "Price",
                            "secret": false,
                            "default": "{event.properties.price}",
                            "required": false,
                            "description": "The price of the item purchased. Required for revenue data if the revenue field is not sent. You can use negative values to indicate refunds."
                        },
                        {
                            "key": "quantity",
                            "type": "string",
                            "label": "Quantity",
                            "secret": false,
                            "default": "{event.properties.quantity}",
                            "required": false,
                            "description": "The quantity of the item purchased. Defaults to 1 if not specified."
                        },
                        {
                            "key": "revenue",
                            "type": "string",
                            "label": "Revenue",
                            "secret": false,
                            "default": "{event.properties.revenue}",
                            "required": false,
                            "description": "Revenue = price * quantity. If you send all 3 fields of price, quantity, and revenue, then (price * quantity) will be used as the revenue value. You can use negative values to indicate refunds. **Note:** You will need to explicitly set this if you are using the Amplitude in cloud-mode."
                        },
                        {
                            "key": "productId",
                            "type": "string",
                            "label": "Product ID",
                            "secret": false,
                            "default": "{event.properties.productId}",
                            "required": false,
                            "description": "An identifier for the item purchased. You must send a price and quantity or revenue with this field."
                        },
                        {
                            "key": "revenueType",
                            "type": "string",
                            "label": "Revenue Type",
                            "secret": false,
                            "default": "{event.properties.revenueType}",
                            "required": false,
                            "description": "The type of revenue for the item purchased. You must send a price and quantity or revenue with this field."
                        },
                        {
                            "key": "location_lat",
                            "type": "string",
                            "label": "Latitude",
                            "secret": false,
                            "default": "{event.properties.$geoip_latitude}",
                            "required": false,
                            "description": "The current Latitude of the user."
                        },
                        {
                            "key": "location_lng",
                            "type": "string",
                            "label": "Longtitude",
                            "secret": false,
                            "default": "{event.properties.$geoip_longitude}",
                            "required": false,
                            "description": "The current Longitude of the user."
                        },
                        {
                            "key": "ip",
                            "type": "string",
                            "label": "IP Address",
                            "secret": false,
                            "default": "{event.properties.$ip}",
                            "required": false,
                            "description": "The IP address of the user. Use \"$remote\" to use the IP address on the upload request. Amplitude will use the IP address to reverse lookup a user's location (city, country, region, and DMA). Amplitude has the ability to drop the location and IP address from events once it reaches our servers. You can submit a request to Amplitude's platform specialist team here to configure this for you."
                        },
                        {
                            "key": "idfa",
                            "type": "string",
                            "label": "Identifier For Advertiser (IDFA)",
                            "secret": false,
                            "default": "{event.properties.$device_idfa}",
                            "required": false,
                            "description": "Identifier for Advertiser. _(iOS)_"
                        },
                        {
                            "key": "idfv",
                            "type": "string",
                            "label": "Identifier For Vendor (IDFV)",
                            "secret": false,
                            "default": "{event.properties.$device_id}",
                            "required": false,
                            "description": "Identifier for Vendor. _(iOS)_"
                        },
                        {
                            "key": "adid",
                            "type": "string",
                            "label": "Google Play Services Advertising ID",
                            "secret": false,
                            "default": "{event.properties.$device_idfa}",
                            "required": false,
                            "description": "Google Play Services advertising ID. _(Android)_"
                        },
                        {
                            "key": "android_id",
                            "type": "string",
                            "label": "Android ID",
                            "secret": false,
                            "required": false,
                            "description": "Android ID (not the advertising ID). _(Android)_"
                        },
                        {
                            "key": "event_id",
                            "type": "string",
                            "label": "Event ID",
                            "secret": false,
                            "required": false,
                            "description": "An incrementing counter to distinguish events with the same user ID and timestamp from each other. Amplitude recommends you send an event ID, increasing over time, especially if you expect events to occur simultanenously."
                        },
                        {
                            "key": "insert_id",
                            "type": "string",
                            "label": "Insert ID",
                            "secret": false,
                            "required": false,
                            "description": "Amplitude will deduplicate subsequent events sent with this ID we have already seen before within the past 7 days. Amplitude recommends generating a UUID or using some combination of device ID, user ID, event type, event ID, and time."
                        },
                        {
                            "key": "library",
                            "type": "string",
                            "label": "Library",
                            "secret": false,
                            "default": "{event.properties.$lib}",
                            "required": false,
                            "description": "The name of the library that generated the event."
                        },
                        {
                            "key": "products",
                            "type": "string",
                            "label": "Products",
                            "secret": false,
                            "default": "{event.properties.products}",
                            "required": false,
                            "description": "The list of products purchased."
                        },
                        {
                            "key": "setOnce",
                            "type": "dictionary",
                            "label": "Set Once",
                            "secret": false,
                            "default": {
                                "initial_referrer": "{event.properties.$referrer}",
                                "initial_utm_term": "{event.properties.utm_term}",
                                "initial_utm_medium": "{event.properties.utm_medium}",
                                "initial_utm_source": "{event.properties.utm_source}",
                                "initial_utm_content": "{event.properties.utm_content}",
                                "initial_utm_campaign": "{event.properties.utm_campaign}"
                            },
                            "required": false,
                            "description": "The following fields will only be set as user properties if they do not already have a value."
                        },
                        {
                            "key": "setAlways",
                            "type": "dictionary",
                            "label": "Set Always",
                            "secret": false,
                            "default": {
                                "referrer": "{event.properties.$referrer}",
                                "utm_term": "{event.properties.utm_term}",
                                "utm_medium": "{event.properties.utm_medium}",
                                "utm_source": "{event.properties.utm_source}",
                                "utm_content": "{event.properties.utm_content}",
                                "utm_campaign": "{event.properties.utm_campaign}"
                            },
                            "required": false,
                            "description": "The following fields will be set as user properties for every event."
                        },
                        {
                            "key": "add",
                            "type": "dictionary",
                            "label": "Add",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "Increment a user property by a number with add. If the user property doesn't have a value set yet, it's initialized to 0."
                        },
                        {
                            "key": "userAgent",
                            "type": "string",
                            "label": "User Agent",
                            "secret": false,
                            "default": "{event.properties.$raw_user_agent}",
                            "required": false,
                            "description": "The user agent of the device sending the event."
                        },
                        {
                            "key": "userAgentParsing",
                            "type": "string",
                            "label": "User Agent Parsing",
                            "secret": false,
                            "default": "true",
                            "required": false,
                            "description": "Enabling this setting will set the Device manufacturer, Device Model and OS Name properties based on the user agent string provided in the userAgent field."
                        },
                        {
                            "key": "includeRawUserAgent",
                            "type": "string",
                            "label": "Include Raw User Agent",
                            "secret": false,
                            "default": "false",
                            "required": false,
                            "description": "Enabling this setting will send user_agent based on the raw user agent string provided in the userAgent field"
                        },
                        {
                            "key": "min_id_length",
                            "type": "string",
                            "label": "Minimum ID Length",
                            "secret": false,
                            "required": false,
                            "description": "Amplitude has a default minimum id length of 5 characters for user_id and device_id fields. This field allows the minimum to be overridden to allow shorter id lengths."
                        },
                        {
                            "key": "userAgentData",
                            "type": "dictionary",
                            "label": "User Agent Data",
                            "secret": false,
                            "default": {
                                "model": "",
                                "platformVersion": ""
                            },
                            "required": false,
                            "description": "The user agent data of device sending the event"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "logEventV2",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Order Completed Calls",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify') and event = 'Order Completed'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "trackRevenuePerProduct",
                            "type": "string",
                            "label": "Track Revenue Per Product",
                            "secret": false,
                            "default": "false",
                            "required": false,
                            "description": "When enabled, track revenue with each product within the event. When disabled, track total revenue once for the event."
                        },
                        {
                            "key": "user_id",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": false,
                            "description": "A readable ID specified by you. Must have a minimum length of 5 characters. Required unless device ID is present. **Note:** If you send a request with a user ID that is not in the Amplitude system yet, then the user tied to that ID will not be marked new until their first event."
                        },
                        {
                            "key": "device_id",
                            "type": "string",
                            "label": "Device ID",
                            "secret": false,
                            "default": "{event.properties.$device_id ?? event.distinct_id}",
                            "required": false,
                            "description": "A device-specific identifier, such as the Identifier for Vendor on iOS. Required unless user ID is present. If a device ID is not sent with the event, it will be set to a hashed version of the user ID."
                        },
                        {
                            "key": "event_type",
                            "type": "string",
                            "label": "Event Type",
                            "secret": false,
                            "default": "{event.event}",
                            "required": true,
                            "description": "A unique identifier for your event."
                        },
                        {
                            "key": "session_id",
                            "type": "string",
                            "label": "Session ID",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "The start time of the session, necessary if you want to associate events with a particular system. To use automatic Amplitude session tracking in browsers, enable Analytics 2.0 on your connected source."
                        },
                        {
                            "key": "time",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": false,
                            "description": "The timestamp of the event. If time is not sent with the event, it will be set to the request upload time."
                        },
                        {
                            "key": "event_properties",
                            "type": "dictionary",
                            "label": "Event Properties",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.properties}"
                            },
                            "required": false,
                            "description": "An object of key-value pairs that represent additional data to be sent along with the event. You can store property values in an array, but note that Amplitude only supports one-dimensional arrays. Date values are transformed into string values. Object depth may not exceed 40 layers."
                        },
                        {
                            "key": "user_properties",
                            "type": "dictionary",
                            "label": "User Properties",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{person.properties}"
                            },
                            "required": false,
                            "description": "An object of key-value pairs that represent additional data tied to the user. You can store property values in an array, but note that Amplitude only supports one-dimensional arrays. Date values are transformed into string values. Object depth may not exceed 40 layers."
                        },
                        {
                            "key": "groups",
                            "type": "dictionary",
                            "label": "Groups",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "Groups of users for the event as an event-level group. You can only track up to 5 groups. **Note:** This Amplitude feature is only available to Enterprise customers who have purchased the Accounts add-on."
                        },
                        {
                            "key": "app_version",
                            "type": "string",
                            "label": "App Version",
                            "secret": false,
                            "default": "{event.event.properties.$app_version}",
                            "required": false,
                            "description": "The current version of your application."
                        },
                        {
                            "key": "platform",
                            "type": "string",
                            "label": "Platform",
                            "secret": false,
                            "default": "{event.properties.$device_type}",
                            "required": false,
                            "description": "Platform of the device. If using analytics.js to send events from a Browser and no if no Platform value is provided, the value \"Web\" will be sent."
                        },
                        {
                            "key": "os_name",
                            "type": "string",
                            "label": "OS Name",
                            "secret": false,
                            "default": "{event.properties.$os}",
                            "required": false,
                            "description": "The name of the mobile operating system or browser that the user is using."
                        },
                        {
                            "key": "os_version",
                            "type": "string",
                            "label": "OS Version",
                            "secret": false,
                            "default": "{event.properties.$os_version}",
                            "required": false,
                            "description": "The version of the mobile operating system or browser the user is using."
                        },
                        {
                            "key": "device_brand",
                            "type": "string",
                            "label": "Device Brand",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "The device brand that the user is using."
                        },
                        {
                            "key": "device_manufacturer",
                            "type": "string",
                            "label": "Device Manufacturer",
                            "secret": false,
                            "default": "{event.properties.$device_manufacturer}",
                            "required": false,
                            "description": "The device manufacturer that the user is using."
                        },
                        {
                            "key": "device_model",
                            "type": "string",
                            "label": "Device Model",
                            "secret": false,
                            "default": "{event.properties.$device_model}",
                            "required": false,
                            "description": "The device model that the user is using."
                        },
                        {
                            "key": "carrier",
                            "type": "string",
                            "label": "Carrier",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "The carrier that the user is using."
                        },
                        {
                            "key": "country",
                            "type": "string",
                            "label": "Country",
                            "secret": false,
                            "default": "{event.properties.$geoip_country_name}",
                            "required": false,
                            "description": "The current country of the user."
                        },
                        {
                            "key": "region",
                            "type": "string",
                            "label": "Region",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "The current region of the user."
                        },
                        {
                            "key": "city",
                            "type": "string",
                            "label": "City",
                            "secret": false,
                            "default": "{event.properties.$geoip_city_name}",
                            "required": false,
                            "description": "The current city of the user."
                        },
                        {
                            "key": "dma",
                            "type": "string",
                            "label": "Designated Market Area",
                            "secret": false,
                            "required": false,
                            "description": "The current Designated Market Area of the user."
                        },
                        {
                            "key": "language",
                            "type": "string",
                            "label": "Language",
                            "secret": false,
                            "default": "{event.properties.$locale}",
                            "required": false,
                            "description": "The language set by the user."
                        },
                        {
                            "key": "price",
                            "type": "string",
                            "label": "Price",
                            "secret": false,
                            "default": "{event.properties.price}",
                            "required": false,
                            "description": "The price of the item purchased. Required for revenue data if the revenue field is not sent. You can use negative values to indicate refunds."
                        },
                        {
                            "key": "quantity",
                            "type": "string",
                            "label": "Quantity",
                            "secret": false,
                            "default": "{event.properties.quantity}",
                            "required": false,
                            "description": "The quantity of the item purchased. Defaults to 1 if not specified."
                        },
                        {
                            "key": "revenue",
                            "type": "string",
                            "label": "Revenue",
                            "secret": false,
                            "default": "{event.properties.revenue}",
                            "required": false,
                            "description": "Revenue = price * quantity. If you send all 3 fields of price, quantity, and revenue, then (price * quantity) will be used as the revenue value. You can use negative values to indicate refunds. **Note:** You will need to explicitly set this if you are using the Amplitude in cloud-mode."
                        },
                        {
                            "key": "productId",
                            "type": "string",
                            "label": "Product ID",
                            "secret": false,
                            "default": "{event.properties.productId}",
                            "required": false,
                            "description": "An identifier for the item purchased. You must send a price and quantity or revenue with this field."
                        },
                        {
                            "key": "revenueType",
                            "type": "string",
                            "label": "Revenue Type",
                            "secret": false,
                            "default": "{event.properties.revenueType}",
                            "required": false,
                            "description": "The type of revenue for the item purchased. You must send a price and quantity or revenue with this field."
                        },
                        {
                            "key": "location_lat",
                            "type": "string",
                            "label": "Latitude",
                            "secret": false,
                            "default": "{event.properties.$geoip_latitude}",
                            "required": false,
                            "description": "The current Latitude of the user."
                        },
                        {
                            "key": "location_lng",
                            "type": "string",
                            "label": "Longtitude",
                            "secret": false,
                            "default": "{event.properties.$geoip_longitude}",
                            "required": false,
                            "description": "The current Longitude of the user."
                        },
                        {
                            "key": "ip",
                            "type": "string",
                            "label": "IP Address",
                            "secret": false,
                            "default": "{event.properties.$ip}",
                            "required": false,
                            "description": "The IP address of the user. Use \"$remote\" to use the IP address on the upload request. Amplitude will use the IP address to reverse lookup a user's location (city, country, region, and DMA). Amplitude has the ability to drop the location and IP address from events once it reaches our servers. You can submit a request to Amplitude's platform specialist team here to configure this for you."
                        },
                        {
                            "key": "idfa",
                            "type": "string",
                            "label": "Identifier For Advertiser (IDFA)",
                            "secret": false,
                            "default": "{event.properties.$device_idfa}",
                            "required": false,
                            "description": "Identifier for Advertiser. _(iOS)_"
                        },
                        {
                            "key": "idfv",
                            "type": "string",
                            "label": "Identifier For Vendor (IDFV)",
                            "secret": false,
                            "default": "{event.properties.$device_id}",
                            "required": false,
                            "description": "Identifier for Vendor. _(iOS)_"
                        },
                        {
                            "key": "adid",
                            "type": "string",
                            "label": "Google Play Services Advertising ID",
                            "secret": false,
                            "default": "{event.properties.$device_idfa}",
                            "required": false,
                            "description": "Google Play Services advertising ID. _(Android)_"
                        },
                        {
                            "key": "android_id",
                            "type": "string",
                            "label": "Android ID",
                            "secret": false,
                            "required": false,
                            "description": "Android ID (not the advertising ID). _(Android)_"
                        },
                        {
                            "key": "event_id",
                            "type": "string",
                            "label": "Event ID",
                            "secret": false,
                            "required": false,
                            "description": "An incrementing counter to distinguish events with the same user ID and timestamp from each other. Amplitude recommends you send an event ID, increasing over time, especially if you expect events to occur simultanenously."
                        },
                        {
                            "key": "insert_id",
                            "type": "string",
                            "label": "Insert ID",
                            "secret": false,
                            "required": false,
                            "description": "Amplitude will deduplicate subsequent events sent with this ID we have already seen before within the past 7 days. Amplitude recommends generating a UUID or using some combination of device ID, user ID, event type, event ID, and time."
                        },
                        {
                            "key": "library",
                            "type": "string",
                            "label": "Library",
                            "secret": false,
                            "default": "{event.properties.$lib}",
                            "required": false,
                            "description": "The name of the library that generated the event."
                        },
                        {
                            "key": "products",
                            "type": "string",
                            "label": "Products",
                            "secret": false,
                            "default": "{event.properties.products}",
                            "required": false,
                            "description": "The list of products purchased."
                        },
                        {
                            "key": "userAgent",
                            "type": "string",
                            "label": "User Agent",
                            "secret": false,
                            "default": "{event.properties.$raw_user_agent}",
                            "required": false,
                            "description": "The user agent of the device sending the event."
                        },
                        {
                            "key": "userAgentParsing",
                            "type": "string",
                            "label": "User Agent Parsing",
                            "secret": false,
                            "default": "true",
                            "required": false,
                            "description": "Enabling this setting will set the Device manufacturer, Device Model and OS Name properties based on the user agent string provided in the userAgent field"
                        },
                        {
                            "key": "includeRawUserAgent",
                            "type": "string",
                            "label": "Include Raw User Agent",
                            "secret": false,
                            "default": "false",
                            "required": false,
                            "description": "Enabling this setting will send user_agent based on the raw user agent string provided in the userAgent field"
                        },
                        {
                            "key": "utm_properties",
                            "type": "dictionary",
                            "label": "UTM Properties",
                            "secret": false,
                            "default": {
                                "utm_term": "{event.properties.utm_term}",
                                "utm_medium": "{event.properties.utm_medium}",
                                "utm_source": "{event.properties.utm_source}",
                                "utm_content": "{event.properties.utm_content}",
                                "utm_campaign": "{event.properties.utm_campaign}"
                            },
                            "required": false,
                            "description": "UTM Tracking Properties"
                        },
                        {
                            "key": "referrer",
                            "type": "string",
                            "label": "Referrer",
                            "secret": false,
                            "default": "{event.properties.$referrer}",
                            "required": false,
                            "description": "The referrer of the web request. Sent to Amplitude as both last touch “referrer” and first touch “initial_referrer”"
                        },
                        {
                            "key": "min_id_length",
                            "type": "string",
                            "label": "Minimum ID Length",
                            "secret": false,
                            "required": false,
                            "description": "Amplitude has a default minimum id lenght of 5 characters for user_id and device_id fields. This field allows the minimum to be overridden to allow shorter id lengths."
                        },
                        {
                            "key": "userAgentData",
                            "type": "dictionary",
                            "label": "User Agent Data",
                            "secret": false,
                            "default": {
                                "model": "",
                                "platformVersion": ""
                            },
                            "required": false,
                            "description": "The user agent data of device sending the event"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "logPurchase",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Page Calls",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event = '$pageview'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "user_id",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": false,
                            "description": "A readable ID specified by you. Must have a minimum length of 5 characters. Required unless device ID is present. **Note:** If you send a request with a user ID that is not in the Amplitude system yet, then the user tied to that ID will not be marked new until their first event."
                        },
                        {
                            "key": "device_id",
                            "type": "string",
                            "label": "Device ID",
                            "secret": false,
                            "default": "{event.properties.$device_id ?? event.distinct_id}",
                            "required": false,
                            "description": "A device-specific identifier, such as the Identifier for Vendor on iOS. Required unless user ID is present. If a device ID is not sent with the event, it will be set to a hashed version of the user ID."
                        },
                        {
                            "key": "event_type",
                            "type": "string",
                            "label": "Event Type",
                            "secret": false,
                            "default": "{event.event}",
                            "required": true,
                            "description": "A unique identifier for your event."
                        },
                        {
                            "key": "session_id",
                            "type": "string",
                            "label": "Session ID",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "The start time of the session, necessary if you want to associate events with a particular system. To use automatic Amplitude session tracking in browsers, enable Analytics 2.0 on your connected source."
                        },
                        {
                            "key": "time",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": false,
                            "description": "The timestamp of the event. If time is not sent with the event, it will be set to the request upload time."
                        },
                        {
                            "key": "event_properties",
                            "type": "dictionary",
                            "label": "Event Properties",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.properties}"
                            },
                            "required": false,
                            "description": "An object of key-value pairs that represent additional data to be sent along with the event. You can store property values in an array, but note that Amplitude only supports one-dimensional arrays. Date values are transformed into string values. Object depth may not exceed 40 layers."
                        },
                        {
                            "key": "user_properties",
                            "type": "dictionary",
                            "label": "User Properties",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{person.properties}"
                            },
                            "required": false,
                            "description": "An object of key-value pairs that represent additional data tied to the user. You can store property values in an array, but note that Amplitude only supports one-dimensional arrays. Date values are transformed into string values. Object depth may not exceed 40 layers."
                        },
                        {
                            "key": "groups",
                            "type": "dictionary",
                            "label": "Groups",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "Groups of users for the event as an event-level group. You can only track up to 5 groups. **Note:** This Amplitude feature is only available to Enterprise customers who have purchased the Accounts add-on."
                        },
                        {
                            "key": "app_version",
                            "type": "string",
                            "label": "App Version",
                            "secret": false,
                            "default": "{event.event.properties.$app_version}",
                            "required": false,
                            "description": "The current version of your application."
                        },
                        {
                            "key": "platform",
                            "type": "string",
                            "label": "Platform",
                            "secret": false,
                            "default": "{event.properties.$device_type}",
                            "required": false,
                            "description": "Platform of the device. If using analytics.js to send events from a Browser and no if no Platform value is provided, the value \"Web\" will be sent."
                        },
                        {
                            "key": "os_name",
                            "type": "string",
                            "label": "OS Name",
                            "secret": false,
                            "default": "{event.properties.$os}",
                            "required": false,
                            "description": "The name of the mobile operating system or browser that the user is using."
                        },
                        {
                            "key": "os_version",
                            "type": "string",
                            "label": "OS Version",
                            "secret": false,
                            "default": "{event.properties.$os_version}",
                            "required": false,
                            "description": "The version of the mobile operating system or browser the user is using."
                        },
                        {
                            "key": "device_brand",
                            "type": "string",
                            "label": "Device Brand",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "The device brand that the user is using."
                        },
                        {
                            "key": "device_manufacturer",
                            "type": "string",
                            "label": "Device Manufacturer",
                            "secret": false,
                            "default": "{event.properties.$device_manufacturer}",
                            "required": false,
                            "description": "The device manufacturer that the user is using."
                        },
                        {
                            "key": "device_model",
                            "type": "string",
                            "label": "Device Model",
                            "secret": false,
                            "default": "{event.properties.$device_model}",
                            "required": false,
                            "description": "The device model that the user is using."
                        },
                        {
                            "key": "carrier",
                            "type": "string",
                            "label": "Carrier",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "The carrier that the user is using."
                        },
                        {
                            "key": "country",
                            "type": "string",
                            "label": "Country",
                            "secret": false,
                            "default": "{event.properties.$geoip_country_name}",
                            "required": false,
                            "description": "The current country of the user."
                        },
                        {
                            "key": "region",
                            "type": "string",
                            "label": "Region",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "The current region of the user."
                        },
                        {
                            "key": "city",
                            "type": "string",
                            "label": "City",
                            "secret": false,
                            "default": "{event.properties.$geoip_city_name}",
                            "required": false,
                            "description": "The current city of the user."
                        },
                        {
                            "key": "dma",
                            "type": "string",
                            "label": "Designated Market Area",
                            "secret": false,
                            "required": false,
                            "description": "The current Designated Market Area of the user."
                        },
                        {
                            "key": "language",
                            "type": "string",
                            "label": "Language",
                            "secret": false,
                            "default": "{event.properties.$locale}",
                            "required": false,
                            "description": "The language set by the user."
                        },
                        {
                            "key": "price",
                            "type": "string",
                            "label": "Price",
                            "secret": false,
                            "default": "{event.properties.price}",
                            "required": false,
                            "description": "The price of the item purchased. Required for revenue data if the revenue field is not sent. You can use negative values to indicate refunds."
                        },
                        {
                            "key": "quantity",
                            "type": "string",
                            "label": "Quantity",
                            "secret": false,
                            "default": "{event.properties.quantity}",
                            "required": false,
                            "description": "The quantity of the item purchased. Defaults to 1 if not specified."
                        },
                        {
                            "key": "revenue",
                            "type": "string",
                            "label": "Revenue",
                            "secret": false,
                            "default": "{event.properties.revenue}",
                            "required": false,
                            "description": "Revenue = price * quantity. If you send all 3 fields of price, quantity, and revenue, then (price * quantity) will be used as the revenue value. You can use negative values to indicate refunds. **Note:** You will need to explicitly set this if you are using the Amplitude in cloud-mode."
                        },
                        {
                            "key": "productId",
                            "type": "string",
                            "label": "Product ID",
                            "secret": false,
                            "default": "{event.properties.productId}",
                            "required": false,
                            "description": "An identifier for the item purchased. You must send a price and quantity or revenue with this field."
                        },
                        {
                            "key": "revenueType",
                            "type": "string",
                            "label": "Revenue Type",
                            "secret": false,
                            "default": "{event.properties.revenueType}",
                            "required": false,
                            "description": "The type of revenue for the item purchased. You must send a price and quantity or revenue with this field."
                        },
                        {
                            "key": "location_lat",
                            "type": "string",
                            "label": "Latitude",
                            "secret": false,
                            "default": "{event.properties.$geoip_latitude}",
                            "required": false,
                            "description": "The current Latitude of the user."
                        },
                        {
                            "key": "location_lng",
                            "type": "string",
                            "label": "Longtitude",
                            "secret": false,
                            "default": "{event.properties.$geoip_longitude}",
                            "required": false,
                            "description": "The current Longitude of the user."
                        },
                        {
                            "key": "ip",
                            "type": "string",
                            "label": "IP Address",
                            "secret": false,
                            "default": "{event.properties.$ip}",
                            "required": false,
                            "description": "The IP address of the user. Use \"$remote\" to use the IP address on the upload request. Amplitude will use the IP address to reverse lookup a user's location (city, country, region, and DMA). Amplitude has the ability to drop the location and IP address from events once it reaches our servers. You can submit a request to Amplitude's platform specialist team here to configure this for you."
                        },
                        {
                            "key": "idfa",
                            "type": "string",
                            "label": "Identifier For Advertiser (IDFA)",
                            "secret": false,
                            "default": "{event.properties.$device_idfa}",
                            "required": false,
                            "description": "Identifier for Advertiser. _(iOS)_"
                        },
                        {
                            "key": "idfv",
                            "type": "string",
                            "label": "Identifier For Vendor (IDFV)",
                            "secret": false,
                            "default": "{event.properties.$device_id}",
                            "required": false,
                            "description": "Identifier for Vendor. _(iOS)_"
                        },
                        {
                            "key": "adid",
                            "type": "string",
                            "label": "Google Play Services Advertising ID",
                            "secret": false,
                            "default": "{event.properties.$device_idfa}",
                            "required": false,
                            "description": "Google Play Services advertising ID. _(Android)_"
                        },
                        {
                            "key": "android_id",
                            "type": "string",
                            "label": "Android ID",
                            "secret": false,
                            "required": false,
                            "description": "Android ID (not the advertising ID). _(Android)_"
                        },
                        {
                            "key": "event_id",
                            "type": "string",
                            "label": "Event ID",
                            "secret": false,
                            "required": false,
                            "description": "An incrementing counter to distinguish events with the same user ID and timestamp from each other. Amplitude recommends you send an event ID, increasing over time, especially if you expect events to occur simultanenously."
                        },
                        {
                            "key": "insert_id",
                            "type": "string",
                            "label": "Insert ID",
                            "secret": false,
                            "required": false,
                            "description": "Amplitude will deduplicate subsequent events sent with this ID we have already seen before within the past 7 days. Amplitude recommends generating a UUID or using some combination of device ID, user ID, event type, event ID, and time."
                        },
                        {
                            "key": "library",
                            "type": "string",
                            "label": "Library",
                            "secret": false,
                            "default": "{event.properties.$lib}",
                            "required": false,
                            "description": "The name of the library that generated the event."
                        },
                        {
                            "key": "products",
                            "type": "string",
                            "label": "Products",
                            "secret": false,
                            "default": "{event.properties.products}",
                            "required": false,
                            "description": "The list of products purchased."
                        },
                        {
                            "key": "setOnce",
                            "type": "dictionary",
                            "label": "Set Once",
                            "secret": false,
                            "default": {
                                "initial_referrer": "{event.properties.$referrer}",
                                "initial_utm_term": "{event.properties.utm_term}",
                                "initial_utm_medium": "{event.properties.utm_medium}",
                                "initial_utm_source": "{event.properties.utm_source}",
                                "initial_utm_content": "{event.properties.utm_content}",
                                "initial_utm_campaign": "{event.properties.utm_campaign}"
                            },
                            "required": false,
                            "description": "The following fields will only be set as user properties if they do not already have a value."
                        },
                        {
                            "key": "setAlways",
                            "type": "dictionary",
                            "label": "Set Always",
                            "secret": false,
                            "default": {
                                "referrer": "{event.properties.$referrer}",
                                "utm_term": "{event.properties.utm_term}",
                                "utm_medium": "{event.properties.utm_medium}",
                                "utm_source": "{event.properties.utm_source}",
                                "utm_content": "{event.properties.utm_content}",
                                "utm_campaign": "{event.properties.utm_campaign}"
                            },
                            "required": false,
                            "description": "The following fields will be set as user properties for every event."
                        },
                        {
                            "key": "add",
                            "type": "dictionary",
                            "label": "Add",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "Increment a user property by a number with add. If the user property doesn't have a value set yet, it's initialized to 0."
                        },
                        {
                            "key": "userAgent",
                            "type": "string",
                            "label": "User Agent",
                            "secret": false,
                            "default": "{event.properties.$raw_user_agent}",
                            "required": false,
                            "description": "The user agent of the device sending the event."
                        },
                        {
                            "key": "userAgentParsing",
                            "type": "string",
                            "label": "User Agent Parsing",
                            "secret": false,
                            "default": "true",
                            "required": false,
                            "description": "Enabling this setting will set the Device manufacturer, Device Model and OS Name properties based on the user agent string provided in the userAgent field."
                        },
                        {
                            "key": "includeRawUserAgent",
                            "type": "string",
                            "label": "Include Raw User Agent",
                            "secret": false,
                            "default": "false",
                            "required": false,
                            "description": "Enabling this setting will send user_agent based on the raw user agent string provided in the userAgent field"
                        },
                        {
                            "key": "min_id_length",
                            "type": "string",
                            "label": "Minimum ID Length",
                            "secret": false,
                            "required": false,
                            "description": "Amplitude has a default minimum id length of 5 characters for user_id and device_id fields. This field allows the minimum to be overridden to allow shorter id lengths."
                        },
                        {
                            "key": "userAgentData",
                            "type": "dictionary",
                            "label": "User Agent Data",
                            "secret": false,
                            "default": {
                                "model": "",
                                "platformVersion": ""
                            },
                            "required": false,
                            "description": "The user agent data of device sending the event"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "logEventV2",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Screen Calls",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event = '$screen'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "user_id",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": false,
                            "description": "A readable ID specified by you. Must have a minimum length of 5 characters. Required unless device ID is present. **Note:** If you send a request with a user ID that is not in the Amplitude system yet, then the user tied to that ID will not be marked new until their first event."
                        },
                        {
                            "key": "device_id",
                            "type": "string",
                            "label": "Device ID",
                            "secret": false,
                            "default": "{event.properties.$device_id ?? event.distinct_id}",
                            "required": false,
                            "description": "A device-specific identifier, such as the Identifier for Vendor on iOS. Required unless user ID is present. If a device ID is not sent with the event, it will be set to a hashed version of the user ID."
                        },
                        {
                            "key": "event_type",
                            "type": "string",
                            "label": "Event Type",
                            "secret": false,
                            "default": "{event.event}",
                            "required": true,
                            "description": "A unique identifier for your event."
                        },
                        {
                            "key": "session_id",
                            "type": "string",
                            "label": "Session ID",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "The start time of the session, necessary if you want to associate events with a particular system. To use automatic Amplitude session tracking in browsers, enable Analytics 2.0 on your connected source."
                        },
                        {
                            "key": "time",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": false,
                            "description": "The timestamp of the event. If time is not sent with the event, it will be set to the request upload time."
                        },
                        {
                            "key": "event_properties",
                            "type": "dictionary",
                            "label": "Event Properties",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.properties}"
                            },
                            "required": false,
                            "description": "An object of key-value pairs that represent additional data to be sent along with the event. You can store property values in an array, but note that Amplitude only supports one-dimensional arrays. Date values are transformed into string values. Object depth may not exceed 40 layers."
                        },
                        {
                            "key": "user_properties",
                            "type": "dictionary",
                            "label": "User Properties",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{person.properties}"
                            },
                            "required": false,
                            "description": "An object of key-value pairs that represent additional data tied to the user. You can store property values in an array, but note that Amplitude only supports one-dimensional arrays. Date values are transformed into string values. Object depth may not exceed 40 layers."
                        },
                        {
                            "key": "groups",
                            "type": "dictionary",
                            "label": "Groups",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "Groups of users for the event as an event-level group. You can only track up to 5 groups. **Note:** This Amplitude feature is only available to Enterprise customers who have purchased the Accounts add-on."
                        },
                        {
                            "key": "app_version",
                            "type": "string",
                            "label": "App Version",
                            "secret": false,
                            "default": "{event.event.properties.$app_version}",
                            "required": false,
                            "description": "The current version of your application."
                        },
                        {
                            "key": "platform",
                            "type": "string",
                            "label": "Platform",
                            "secret": false,
                            "default": "{event.properties.$device_type}",
                            "required": false,
                            "description": "Platform of the device. If using analytics.js to send events from a Browser and no if no Platform value is provided, the value \"Web\" will be sent."
                        },
                        {
                            "key": "os_name",
                            "type": "string",
                            "label": "OS Name",
                            "secret": false,
                            "default": "{event.properties.$os}",
                            "required": false,
                            "description": "The name of the mobile operating system or browser that the user is using."
                        },
                        {
                            "key": "os_version",
                            "type": "string",
                            "label": "OS Version",
                            "secret": false,
                            "default": "{event.properties.$os_version}",
                            "required": false,
                            "description": "The version of the mobile operating system or browser the user is using."
                        },
                        {
                            "key": "device_brand",
                            "type": "string",
                            "label": "Device Brand",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "The device brand that the user is using."
                        },
                        {
                            "key": "device_manufacturer",
                            "type": "string",
                            "label": "Device Manufacturer",
                            "secret": false,
                            "default": "{event.properties.$device_manufacturer}",
                            "required": false,
                            "description": "The device manufacturer that the user is using."
                        },
                        {
                            "key": "device_model",
                            "type": "string",
                            "label": "Device Model",
                            "secret": false,
                            "default": "{event.properties.$device_model}",
                            "required": false,
                            "description": "The device model that the user is using."
                        },
                        {
                            "key": "carrier",
                            "type": "string",
                            "label": "Carrier",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "The carrier that the user is using."
                        },
                        {
                            "key": "country",
                            "type": "string",
                            "label": "Country",
                            "secret": false,
                            "default": "{event.properties.$geoip_country_name}",
                            "required": false,
                            "description": "The current country of the user."
                        },
                        {
                            "key": "region",
                            "type": "string",
                            "label": "Region",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "The current region of the user."
                        },
                        {
                            "key": "city",
                            "type": "string",
                            "label": "City",
                            "secret": false,
                            "default": "{event.properties.$geoip_city_name}",
                            "required": false,
                            "description": "The current city of the user."
                        },
                        {
                            "key": "dma",
                            "type": "string",
                            "label": "Designated Market Area",
                            "secret": false,
                            "required": false,
                            "description": "The current Designated Market Area of the user."
                        },
                        {
                            "key": "language",
                            "type": "string",
                            "label": "Language",
                            "secret": false,
                            "default": "{event.properties.$locale}",
                            "required": false,
                            "description": "The language set by the user."
                        },
                        {
                            "key": "price",
                            "type": "string",
                            "label": "Price",
                            "secret": false,
                            "default": "{event.properties.price}",
                            "required": false,
                            "description": "The price of the item purchased. Required for revenue data if the revenue field is not sent. You can use negative values to indicate refunds."
                        },
                        {
                            "key": "quantity",
                            "type": "string",
                            "label": "Quantity",
                            "secret": false,
                            "default": "{event.properties.quantity}",
                            "required": false,
                            "description": "The quantity of the item purchased. Defaults to 1 if not specified."
                        },
                        {
                            "key": "revenue",
                            "type": "string",
                            "label": "Revenue",
                            "secret": false,
                            "default": "{event.properties.revenue}",
                            "required": false,
                            "description": "Revenue = price * quantity. If you send all 3 fields of price, quantity, and revenue, then (price * quantity) will be used as the revenue value. You can use negative values to indicate refunds. **Note:** You will need to explicitly set this if you are using the Amplitude in cloud-mode."
                        },
                        {
                            "key": "productId",
                            "type": "string",
                            "label": "Product ID",
                            "secret": false,
                            "default": "{event.properties.productId}",
                            "required": false,
                            "description": "An identifier for the item purchased. You must send a price and quantity or revenue with this field."
                        },
                        {
                            "key": "revenueType",
                            "type": "string",
                            "label": "Revenue Type",
                            "secret": false,
                            "default": "{event.properties.revenueType}",
                            "required": false,
                            "description": "The type of revenue for the item purchased. You must send a price and quantity or revenue with this field."
                        },
                        {
                            "key": "location_lat",
                            "type": "string",
                            "label": "Latitude",
                            "secret": false,
                            "default": "{event.properties.$geoip_latitude}",
                            "required": false,
                            "description": "The current Latitude of the user."
                        },
                        {
                            "key": "location_lng",
                            "type": "string",
                            "label": "Longtitude",
                            "secret": false,
                            "default": "{event.properties.$geoip_longitude}",
                            "required": false,
                            "description": "The current Longitude of the user."
                        },
                        {
                            "key": "ip",
                            "type": "string",
                            "label": "IP Address",
                            "secret": false,
                            "default": "{event.properties.$ip}",
                            "required": false,
                            "description": "The IP address of the user. Use \"$remote\" to use the IP address on the upload request. Amplitude will use the IP address to reverse lookup a user's location (city, country, region, and DMA). Amplitude has the ability to drop the location and IP address from events once it reaches our servers. You can submit a request to Amplitude's platform specialist team here to configure this for you."
                        },
                        {
                            "key": "idfa",
                            "type": "string",
                            "label": "Identifier For Advertiser (IDFA)",
                            "secret": false,
                            "default": "{event.properties.$device_idfa}",
                            "required": false,
                            "description": "Identifier for Advertiser. _(iOS)_"
                        },
                        {
                            "key": "idfv",
                            "type": "string",
                            "label": "Identifier For Vendor (IDFV)",
                            "secret": false,
                            "default": "{event.properties.$device_id}",
                            "required": false,
                            "description": "Identifier for Vendor. _(iOS)_"
                        },
                        {
                            "key": "adid",
                            "type": "string",
                            "label": "Google Play Services Advertising ID",
                            "secret": false,
                            "default": "{event.properties.$device_idfa}",
                            "required": false,
                            "description": "Google Play Services advertising ID. _(Android)_"
                        },
                        {
                            "key": "android_id",
                            "type": "string",
                            "label": "Android ID",
                            "secret": false,
                            "required": false,
                            "description": "Android ID (not the advertising ID). _(Android)_"
                        },
                        {
                            "key": "event_id",
                            "type": "string",
                            "label": "Event ID",
                            "secret": false,
                            "required": false,
                            "description": "An incrementing counter to distinguish events with the same user ID and timestamp from each other. Amplitude recommends you send an event ID, increasing over time, especially if you expect events to occur simultanenously."
                        },
                        {
                            "key": "insert_id",
                            "type": "string",
                            "label": "Insert ID",
                            "secret": false,
                            "required": false,
                            "description": "Amplitude will deduplicate subsequent events sent with this ID we have already seen before within the past 7 days. Amplitude recommends generating a UUID or using some combination of device ID, user ID, event type, event ID, and time."
                        },
                        {
                            "key": "library",
                            "type": "string",
                            "label": "Library",
                            "secret": false,
                            "default": "{event.properties.$lib}",
                            "required": false,
                            "description": "The name of the library that generated the event."
                        },
                        {
                            "key": "products",
                            "type": "string",
                            "label": "Products",
                            "secret": false,
                            "default": "{event.properties.products}",
                            "required": false,
                            "description": "The list of products purchased."
                        },
                        {
                            "key": "setOnce",
                            "type": "dictionary",
                            "label": "Set Once",
                            "secret": false,
                            "default": {
                                "initial_referrer": "{event.properties.$referrer}",
                                "initial_utm_term": "{event.properties.utm_term}",
                                "initial_utm_medium": "{event.properties.utm_medium}",
                                "initial_utm_source": "{event.properties.utm_source}",
                                "initial_utm_content": "{event.properties.utm_content}",
                                "initial_utm_campaign": "{event.properties.utm_campaign}"
                            },
                            "required": false,
                            "description": "The following fields will only be set as user properties if they do not already have a value."
                        },
                        {
                            "key": "setAlways",
                            "type": "dictionary",
                            "label": "Set Always",
                            "secret": false,
                            "default": {
                                "referrer": "{event.properties.$referrer}",
                                "utm_term": "{event.properties.utm_term}",
                                "utm_medium": "{event.properties.utm_medium}",
                                "utm_source": "{event.properties.utm_source}",
                                "utm_content": "{event.properties.utm_content}",
                                "utm_campaign": "{event.properties.utm_campaign}"
                            },
                            "required": false,
                            "description": "The following fields will be set as user properties for every event."
                        },
                        {
                            "key": "add",
                            "type": "dictionary",
                            "label": "Add",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "Increment a user property by a number with add. If the user property doesn't have a value set yet, it's initialized to 0."
                        },
                        {
                            "key": "userAgent",
                            "type": "string",
                            "label": "User Agent",
                            "secret": false,
                            "default": "{event.properties.$raw_user_agent}",
                            "required": false,
                            "description": "The user agent of the device sending the event."
                        },
                        {
                            "key": "userAgentParsing",
                            "type": "string",
                            "label": "User Agent Parsing",
                            "secret": false,
                            "default": "true",
                            "required": false,
                            "description": "Enabling this setting will set the Device manufacturer, Device Model and OS Name properties based on the user agent string provided in the userAgent field."
                        },
                        {
                            "key": "includeRawUserAgent",
                            "type": "string",
                            "label": "Include Raw User Agent",
                            "secret": false,
                            "default": "false",
                            "required": false,
                            "description": "Enabling this setting will send user_agent based on the raw user agent string provided in the userAgent field"
                        },
                        {
                            "key": "min_id_length",
                            "type": "string",
                            "label": "Minimum ID Length",
                            "secret": false,
                            "required": false,
                            "description": "Amplitude has a default minimum id length of 5 characters for user_id and device_id fields. This field allows the minimum to be overridden to allow shorter id lengths."
                        },
                        {
                            "key": "userAgentData",
                            "type": "dictionary",
                            "label": "User Agent Data",
                            "secret": false,
                            "default": {
                                "model": "",
                                "platformVersion": ""
                            },
                            "required": false,
                            "description": "The user agent data of device sending the event"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "logEventV2",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Identify Calls",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event in ('$identify', '$set')",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "user_id",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": false,
                            "description": "A UUID (unique user ID) specified by you. **Note:** If you send a request with a user ID that is not in the Amplitude system yet, then the user tied to that ID will not be marked new until their first event. Required unless device ID is present."
                        },
                        {
                            "key": "device_id",
                            "type": "string",
                            "label": "Device ID",
                            "secret": false,
                            "default": "{event.properties.$device_id ?? event.distinct_id}",
                            "required": false,
                            "description": "A device specific identifier, such as the Identifier for Vendor (IDFV) on iOS. Required unless user ID is present."
                        },
                        {
                            "key": "user_properties",
                            "type": "dictionary",
                            "label": "User Properties",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{person.properties}"
                            },
                            "required": false,
                            "description": "Additional data tied to the user in Amplitude. Each distinct value will show up as a user segment on the Amplitude dashboard. Object depth may not exceed 40 layers. **Note:** You can store property values in an array and date values are transformed into string values."
                        },
                        {
                            "key": "groups",
                            "type": "dictionary",
                            "label": "Groups",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "Groups of users for Amplitude's account-level reporting feature. Note: You can only track up to 5 groups. Any groups past that threshold will not be tracked. **Note:** This feature is only available to Amplitude Enterprise customers who have purchased the Amplitude Accounts add-on."
                        },
                        {
                            "key": "app_version",
                            "type": "string",
                            "label": "App Version",
                            "secret": false,
                            "default": "{event.event.properties.$app_version}",
                            "required": false,
                            "description": "Version of the app the user is on."
                        },
                        {
                            "key": "platform",
                            "type": "string",
                            "label": "Platform",
                            "secret": false,
                            "default": "{event.properties.$device_type}",
                            "required": false,
                            "description": "The platform of the user's device."
                        },
                        {
                            "key": "os_name",
                            "type": "string",
                            "label": "OS Name",
                            "secret": false,
                            "default": "{event.properties.$os}",
                            "required": false,
                            "description": "The mobile operating system or browser of the user's device."
                        },
                        {
                            "key": "os_version",
                            "type": "string",
                            "label": "OS Version",
                            "secret": false,
                            "default": "{event.properties.$os_version}",
                            "required": false,
                            "description": "The version of the mobile operating system or browser of the user's device."
                        },
                        {
                            "key": "device_brand",
                            "type": "string",
                            "label": "Device Brand",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "The brand of user's the device."
                        },
                        {
                            "key": "device_manufacturer",
                            "type": "string",
                            "label": "Device Manufacturer",
                            "secret": false,
                            "default": "{event.properties.$device_manufacturer}",
                            "required": false,
                            "description": "The manufacturer of the user's device."
                        },
                        {
                            "key": "device_model",
                            "type": "string",
                            "label": "Device Model",
                            "secret": false,
                            "default": "{event.properties.$device_model}",
                            "required": false,
                            "description": "The model of the user's device."
                        },
                        {
                            "key": "carrier",
                            "type": "string",
                            "label": "Carrier",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "The user's mobile carrier."
                        },
                        {
                            "key": "country",
                            "type": "string",
                            "label": "Country",
                            "secret": false,
                            "default": "{event.properties.$geoip_country_name}",
                            "required": false,
                            "description": "The country in which the user is located."
                        },
                        {
                            "key": "region",
                            "type": "string",
                            "label": "Region",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "The geographical region in which the user is located."
                        },
                        {
                            "key": "city",
                            "type": "string",
                            "label": "City",
                            "secret": false,
                            "default": "{event.properties.$geoip_city_name}",
                            "required": false,
                            "description": "The city in which the user is located."
                        },
                        {
                            "key": "dma",
                            "type": "string",
                            "label": "Designated Market Area",
                            "secret": false,
                            "required": false,
                            "description": "The Designated Market Area in which the user is located."
                        },
                        {
                            "key": "language",
                            "type": "string",
                            "label": "Language",
                            "secret": false,
                            "default": "{event.properties.$locale}",
                            "required": false,
                            "description": "Language the user has set on their device or browser."
                        },
                        {
                            "key": "paying",
                            "type": "string",
                            "label": "Is Paying",
                            "secret": false,
                            "required": false,
                            "description": "Whether the user is paying or not."
                        },
                        {
                            "key": "start_version",
                            "type": "string",
                            "label": "Initial Version",
                            "secret": false,
                            "required": false,
                            "description": "The version of the app the user was first on."
                        },
                        {
                            "key": "insert_id",
                            "type": "string",
                            "label": "Insert ID",
                            "secret": false,
                            "required": false,
                            "description": "Amplitude will deduplicate subsequent events sent with this ID we have already seen before within the past 7 days. Amplitude recommends generating a UUID or using some combination of device ID, user ID, event type, event ID, and time."
                        },
                        {
                            "key": "userAgent",
                            "type": "string",
                            "label": "User Agent",
                            "secret": false,
                            "default": "{event.properties.$raw_user_agent}",
                            "required": false,
                            "description": "The user agent of the device sending the event."
                        },
                        {
                            "key": "userAgentParsing",
                            "type": "string",
                            "label": "User Agent Parsing",
                            "secret": false,
                            "default": "true",
                            "required": false,
                            "description": "Enabling this setting will set the Device manufacturer, Device Model and OS Name properties based on the user agent string provided in the userAgent field"
                        },
                        {
                            "key": "includeRawUserAgent",
                            "type": "string",
                            "label": "Include Raw User Agent",
                            "secret": false,
                            "default": "false",
                            "required": false,
                            "description": "Enabling this setting will send user_agent based on the raw user agent string provided in the userAgent field"
                        },
                        {
                            "key": "utm_properties",
                            "type": "dictionary",
                            "label": "UTM Properties",
                            "secret": false,
                            "default": {
                                "utm_term": "{event.properties.utm_term}",
                                "utm_medium": "{event.properties.utm_medium}",
                                "utm_source": "{event.properties.utm_source}",
                                "utm_content": "{event.properties.utm_content}",
                                "utm_campaign": "{event.properties.utm_campaign}"
                            },
                            "required": false,
                            "description": "UTM Tracking Properties"
                        },
                        {
                            "key": "referrer",
                            "type": "string",
                            "label": "Referrer",
                            "secret": false,
                            "default": "{event.properties.$referrer}",
                            "required": false,
                            "description": "The referrer of the web request. Sent to Amplitude as both last touch “referrer” and first touch “initial_referrer”"
                        },
                        {
                            "key": "min_id_length",
                            "type": "string",
                            "label": "Minimum ID Length",
                            "secret": false,
                            "required": false,
                            "description": "Amplitude has a default minimum id length of 5 characters for user_id and device_id fields. This field allows the minimum to be overridden to allow shorter id lengths."
                        },
                        {
                            "key": "library",
                            "type": "string",
                            "label": "Library",
                            "secret": false,
                            "default": "{event.properties.$lib}",
                            "required": false,
                            "description": "The name of the library that generated the event."
                        },
                        {
                            "key": "userAgentData",
                            "type": "dictionary",
                            "label": "User Agent Data",
                            "secret": false,
                            "default": {
                                "model": "",
                                "platformVersion": ""
                            },
                            "required": false,
                            "description": "The user agent data of device sending the event"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "identifyUser",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                }
            ],
            "mappings": null,
            "status": "beta",
            "free": false,
            "type": "destination",
            "id": "segment-actions-amplitude",
            "name": "Amplitude",
            "hog": "return event",
            "inputs_schema": [
                {
                    "key": "apiKey",
                    "type": "string",
                    "label": "API Key",
                    "secret": false,
                    "required": true,
                    "description": "Amplitude project API key. You can find this key in the \"General\" tab of your Amplitude project."
                },
                {
                    "key": "secretKey",
                    "type": "string",
                    "label": "Secret Key",
                    "secret": false,
                    "required": true,
                    "description": "Amplitude project secret key. You can find this key in the \"General\" tab of your Amplitude project."
                },
                {
                    "key": "endpoint",
                    "type": "choice",
                    "label": "Endpoint Region",
                    "secret": false,
                    "choices": [
                        {
                            "label": "North America",
                            "value": "north_america"
                        },
                        {
                            "label": "Europe",
                            "value": "europe"
                        }
                    ],
                    "default": "north_america",
                    "required": false,
                    "description": "The region to send your data."
                },
                {
                    "key": "debug_mode",
                    "type": "boolean",
                    "label": "Debug Mode",
                    "default": false,
                    "description": "Will log configuration and request details"
                }
            ],
            "category": [],
            "code_language": "hog",
            "description": "Send event data to Amplitude",
            "filters": null,
            "masking": null,
            "icon_url": "/static/services/amplitude.com.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "stable",
            "free": false,
            "type": "destination",
            "id": "template-webhook",
            "name": "HTTP Webhook",
            "hog": "let payload := {\n  'headers': inputs.headers,\n  'body': inputs.body,\n  'method': inputs.method\n}\n\nif (inputs.debug) {\n  print('Request', inputs.url, payload)\n}\n\nlet res := fetch(inputs.url, payload);\n\nif (res.status >= 400) {\n  throw Error(f'Webhook failed with status {res.status}: {res.body}');\n}\n\nif (inputs.debug) {\n  print('Response', res.status, res.body);\n}",
            "inputs_schema": [
                {
                    "key": "url",
                    "type": "string",
                    "label": "Webhook URL",
                    "secret": false,
                    "required": true,
                    "description": "Endpoint URL to send event data to."
                },
                {
                    "key": "method",
                    "type": "choice",
                    "label": "Method",
                    "secret": false,
                    "choices": [
                        {
                            "label": "POST",
                            "value": "POST"
                        },
                        {
                            "label": "PUT",
                            "value": "PUT"
                        },
                        {
                            "label": "PATCH",
                            "value": "PATCH"
                        },
                        {
                            "label": "GET",
                            "value": "GET"
                        },
                        {
                            "label": "DELETE",
                            "value": "DELETE"
                        }
                    ],
                    "default": "POST",
                    "required": false,
                    "description": "HTTP method to use for the request."
                },
                {
                    "key": "body",
                    "type": "json",
                    "label": "JSON Body",
                    "secret": false,
                    "default": {
                        "event": "{event}",
                        "person": "{person}"
                    },
                    "required": false,
                    "description": "JSON payload to send in the request body."
                },
                {
                    "key": "headers",
                    "type": "dictionary",
                    "label": "Headers",
                    "secret": false,
                    "default": {
                        "Content-Type": "application/json"
                    },
                    "required": false,
                    "description": "HTTP headers to send in the request."
                },
                {
                    "key": "debug",
                    "type": "boolean",
                    "label": "Log responses",
                    "secret": false,
                    "default": false,
                    "required": false,
                    "description": "Logs the response of http calls for debugging."
                }
            ],
            "category": ["Custom"],
            "code_language": "hog",
            "description": "Sends a webhook templated by the incoming event data",
            "filters": null,
            "masking": null,
            "icon_url": "/static/posthog-icon.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "hidden",
            "free": false,
            "type": "destination",
            "id": "native-webhook",
            "name": "Native HTTP Webhook",
            "hog": "return event;",
            "inputs_schema": [
                {
                    "key": "url",
                    "type": "string",
                    "label": "Webhook URL",
                    "secret": false,
                    "required": true,
                    "description": "Endpoint URL to send event data to."
                },
                {
                    "key": "method",
                    "type": "choice",
                    "label": "Method",
                    "secret": false,
                    "choices": [
                        {
                            "label": "POST",
                            "value": "POST"
                        },
                        {
                            "label": "PUT",
                            "value": "PUT"
                        },
                        {
                            "label": "PATCH",
                            "value": "PATCH"
                        },
                        {
                            "label": "GET",
                            "value": "GET"
                        },
                        {
                            "label": "DELETE",
                            "value": "DELETE"
                        }
                    ],
                    "default": "POST",
                    "required": false,
                    "description": "HTTP method to use for the request."
                },
                {
                    "key": "body",
                    "type": "json",
                    "label": "JSON Body",
                    "secret": false,
                    "default": {
                        "event": "{event}",
                        "person": "{person}"
                    },
                    "required": false,
                    "description": "JSON payload to send in the request body."
                },
                {
                    "key": "headers",
                    "type": "dictionary",
                    "label": "Headers",
                    "secret": false,
                    "default": {
                        "Content-Type": "application/json"
                    },
                    "required": false,
                    "description": "HTTP headers to send in the request."
                },
                {
                    "key": "debug",
                    "type": "boolean",
                    "label": "Log responses",
                    "secret": false,
                    "default": false,
                    "required": false,
                    "description": "Logs the response of http calls for debugging."
                },
                {
                    "key": "debug_mode",
                    "type": "boolean",
                    "label": "Debug Mode",
                    "default": false,
                    "description": "Will log configuration and request details"
                }
            ],
            "category": ["Custom"],
            "code_language": "hog",
            "description": "Sends a native webhook templated by the incoming event data",
            "filters": null,
            "masking": null,
            "icon_url": "/static/posthog-icon.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "stable",
            "free": true,
            "type": "destination",
            "id": "template-slack",
            "name": "Slack",
            "hog": "let res := fetch('https://slack.com/api/chat.postMessage', {\n  'body': {\n    'channel': inputs.channel,\n    'icon_emoji': inputs.icon_emoji,\n    'username': inputs.username,\n    'blocks': inputs.blocks,\n    'text': inputs.text\n  },\n  'method': 'POST',\n  'headers': {\n    'Authorization': f'Bearer {inputs.slack_workspace.access_token}',\n    'Content-Type': 'application/json'\n  }\n});\n\nif (res.status != 200 or res.body.ok == false) {\n  throw Error(f'Failed to post message to Slack: {res.status}: {res.body}');\n}",
            "inputs_schema": [
                {
                    "key": "slack_workspace",
                    "type": "integration",
                    "label": "Slack workspace",
                    "hidden": false,
                    "secret": false,
                    "required": true,
                    "integration": "slack",
                    "requiredScopes": "channels:read groups:read chat:write chat:write.customize"
                },
                {
                    "key": "channel",
                    "type": "integration_field",
                    "label": "Channel to post to",
                    "hidden": false,
                    "secret": false,
                    "required": true,
                    "description": "Select the channel to post to (e.g. #general). The PostHog app must be installed in the workspace.",
                    "integration_key": "slack_workspace",
                    "integration_field": "slack_channel"
                },
                {
                    "key": "icon_emoji",
                    "type": "string",
                    "label": "Emoji icon",
                    "hidden": false,
                    "secret": false,
                    "default": ":hedgehog:",
                    "required": false
                },
                {
                    "key": "username",
                    "type": "string",
                    "label": "Bot name",
                    "hidden": false,
                    "secret": false,
                    "default": "PostHog",
                    "required": false
                },
                {
                    "key": "blocks",
                    "type": "json",
                    "label": "Blocks",
                    "hidden": false,
                    "secret": false,
                    "default": [
                        {
                            "text": {
                                "text": "*{person.name}* triggered event: '{event.event}'",
                                "type": "mrkdwn"
                            },
                            "type": "section"
                        },
                        {
                            "type": "actions",
                            "elements": [
                                {
                                    "url": "{person.url}",
                                    "text": {
                                        "text": "View Person in PostHog",
                                        "type": "plain_text"
                                    },
                                    "type": "button"
                                },
                                {
                                    "url": "{source.url}",
                                    "text": {
                                        "text": "Message source",
                                        "type": "plain_text"
                                    },
                                    "type": "button"
                                }
                            ]
                        }
                    ],
                    "required": false,
                    "description": "(see https://api.slack.com/block-kit/building)"
                },
                {
                    "key": "text",
                    "type": "string",
                    "label": "Plain text message",
                    "hidden": false,
                    "secret": false,
                    "default": "*{person.name}* triggered event: '{event.event}'",
                    "required": false,
                    "description": "Optional fallback message if blocks are not provided or supported"
                }
            ],
            "category": ["Customer Success"],
            "code_language": "hog",
            "description": "Sends a message to a Slack channel",
            "filters": null,
            "masking": null,
            "icon_url": "/static/services/slack.png"
        },
        {
            "mapping_templates": [
                {
                    "name": "Track Calls",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify') and event != 'Experiment Viewed'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "units",
                            "type": "dictionary",
                            "label": "Units",
                            "secret": false,
                            "default": {},
                            "required": true,
                            "description": "The units of the goal to track. Mapping of unit name to source property in the event payload. Create Units in the Settings > Units section of the ABsmartly Web Console"
                        },
                        {
                            "key": "name",
                            "type": "string",
                            "label": "Goal Name",
                            "secret": false,
                            "default": "{event.event}",
                            "required": true,
                            "description": "The name of the goal to track"
                        },
                        {
                            "key": "properties",
                            "type": "dictionary",
                            "label": "Goal Properties",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.properties}"
                            },
                            "required": true,
                            "description": "Custom properties of the goal"
                        },
                        {
                            "key": "agent",
                            "type": "string",
                            "label": "Agent",
                            "secret": false,
                            "default": "{event.properties.$lib ?? 'segment'}",
                            "required": false,
                            "description": "Optional agent identifier that originated the event. Used to identify which SDK generated the event."
                        },
                        {
                            "key": "application",
                            "type": "string",
                            "label": "Application",
                            "secret": false,
                            "required": false,
                            "description": "Optional application name that originated this event. Must exist if not empty. Create Applications in the Settings > Applications section of the ABsmartly Web Console"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "trackGoal",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Page Calls",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event = '$pageview'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "units",
                            "type": "dictionary",
                            "label": "Units",
                            "secret": false,
                            "default": {},
                            "required": true,
                            "description": "The units of the goal to track. Mapping of unit name to source property in the event payload. Create Units in the Settings > Units section of the ABsmartly Web Console"
                        },
                        {
                            "key": "name",
                            "type": "string",
                            "label": "Goal Name",
                            "secret": false,
                            "default": "{event.event}",
                            "required": true,
                            "description": "The name of the goal to track"
                        },
                        {
                            "key": "properties",
                            "type": "dictionary",
                            "label": "Goal Properties",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.properties}"
                            },
                            "required": true,
                            "description": "Custom properties of the goal"
                        },
                        {
                            "key": "agent",
                            "type": "string",
                            "label": "Agent",
                            "secret": false,
                            "default": "{event.properties.$lib ?? 'segment'}",
                            "required": false,
                            "description": "Optional agent identifier that originated the event. Used to identify which SDK generated the event."
                        },
                        {
                            "key": "application",
                            "type": "string",
                            "label": "Application",
                            "secret": false,
                            "required": false,
                            "description": "Optional application name that originated this event. Must exist if not empty. Create Applications in the Settings > Applications section of the ABsmartly Web Console"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "trackGoal",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Screen Calls",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event = '$screen'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "units",
                            "type": "dictionary",
                            "label": "Units",
                            "secret": false,
                            "default": {},
                            "required": true,
                            "description": "The units of the goal to track. Mapping of unit name to source property in the event payload. Create Units in the Settings > Units section of the ABsmartly Web Console"
                        },
                        {
                            "key": "name",
                            "type": "string",
                            "label": "Goal Name",
                            "secret": false,
                            "default": "{event.event}",
                            "required": true,
                            "description": "The name of the goal to track"
                        },
                        {
                            "key": "properties",
                            "type": "dictionary",
                            "label": "Goal Properties",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.properties}"
                            },
                            "required": true,
                            "description": "Custom properties of the goal"
                        },
                        {
                            "key": "agent",
                            "type": "string",
                            "label": "Agent",
                            "secret": false,
                            "default": "{event.properties.$lib ?? 'segment'}",
                            "required": false,
                            "description": "Optional agent identifier that originated the event. Used to identify which SDK generated the event."
                        },
                        {
                            "key": "application",
                            "type": "string",
                            "label": "Application",
                            "secret": false,
                            "required": false,
                            "description": "Optional application name that originated this event. Must exist if not empty. Create Applications in the Settings > Applications section of the ABsmartly Web Console"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "trackGoal",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Exposures (Verbatim)",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify') and event = 'Experiment Viewed'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "exposure",
                            "type": "dictionary",
                            "label": "ABsmartly Exposure Payload",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.properties.exposure}"
                            },
                            "required": true,
                            "description": "The ABsmartly exposure payload without any goals. Generated by the ABsmartly SDK and should not be modified."
                        },
                        {
                            "key": "agent",
                            "type": "string",
                            "label": "Agent",
                            "secret": false,
                            "default": "{event.properties.$lib ?? 'segment'}",
                            "required": false,
                            "description": "Optional agent identifier that originated the event. Used to identify which SDK generated the event."
                        },
                        {
                            "key": "application",
                            "type": "string",
                            "label": "Application",
                            "secret": false,
                            "required": false,
                            "description": "Optional application name that originated this event. Must exist if not empty. Create Applications in the Settings > Applications section of the ABsmartly Web Console"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "trackExposure",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                }
            ],
            "mappings": null,
            "status": "alpha",
            "free": false,
            "type": "destination",
            "id": "segment-actions-absmartly",
            "name": "ABsmartly",
            "hog": "return event",
            "inputs_schema": [
                {
                    "key": "collectorEndpoint",
                    "type": "string",
                    "label": "Collector Endpoint",
                    "secret": false,
                    "required": true,
                    "description": "ABsmartly Collector endpoint, for example: https://you-subdomain.absmartly.io/v1 - Contact ABsmartly Support if you don't know your Collector Endpoint."
                },
                {
                    "key": "apiKey",
                    "type": "string",
                    "label": "API Key",
                    "secret": false,
                    "required": true,
                    "description": "ABsmartly SDK API Key. Create SDK Api Keys in the Settings > API Keys section of the ABsmartly Web Console"
                },
                {
                    "key": "environment",
                    "type": "string",
                    "label": "Environment",
                    "secret": false,
                    "required": true,
                    "description": "Environment name. Environment name needs to match what's in the Web Console. Create Environments in the Settings > Environments section of the ABsmartly Web Console"
                },
                {
                    "key": "debug_mode",
                    "type": "boolean",
                    "label": "Debug Mode",
                    "default": false,
                    "description": "Will log configuration and request details"
                }
            ],
            "category": [],
            "code_language": "hog",
            "description": "Send event data to ABsmartly",
            "filters": null,
            "masking": null,
            "icon_url": "/static/services/absmartly.com.png"
        },
        {
            "mapping_templates": [
                {
                    "name": "Track Calls",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify')",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "event",
                            "type": "string",
                            "label": "Event Name",
                            "secret": false,
                            "default": "{event.event}",
                            "required": true,
                            "description": "The event name"
                        },
                        {
                            "key": "userId",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": true,
                            "description": "The ID associated with the user"
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": true,
                            "description": "The timestamp of the event"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "track",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Page Calls",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event = '$pageview'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "userId",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": false,
                            "description": "The ID associated with the user"
                        },
                        {
                            "key": "name",
                            "type": "string",
                            "label": "Page Name",
                            "secret": false,
                            "default": "{event.event}",
                            "required": false,
                            "description": "The name of the page"
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": true,
                            "description": "The timestamp of the event"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "page",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Screen Calls",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event = '$screen'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "userId",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": false,
                            "description": "The ID associated with the user"
                        },
                        {
                            "key": "name",
                            "type": "string",
                            "label": "Screen Name",
                            "secret": false,
                            "default": "{event.event}",
                            "required": false,
                            "description": "The name of the screen"
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": true,
                            "description": "The timestamp of the event"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "screen",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Identify Calls",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event in ('$identify', '$set')",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "userId",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": true,
                            "description": "The ID associated with the user"
                        },
                        {
                            "key": "email",
                            "type": "string",
                            "label": "Email",
                            "secret": false,
                            "default": "{person.properties.email}",
                            "required": false,
                            "description": "Email addresses are highly recommended as they are often used to identify users across multiple platforms. (Highly Recommended)"
                        },
                        {
                            "key": "name",
                            "type": "string",
                            "label": "Name",
                            "secret": false,
                            "default": "{person.properties.name}",
                            "required": false,
                            "description": "Providing a name helps display users in Accoil. If no name is provided, the email address is displayed instead. (Highly Recommended)"
                        },
                        {
                            "key": "role",
                            "type": "string",
                            "label": "Role",
                            "secret": false,
                            "default": "{person.properties.role}",
                            "required": false,
                            "description": "Describes the user's role in your product such as Admin, Owner, Team Member. (Suggested) "
                        },
                        {
                            "key": "accountStatus",
                            "type": "string",
                            "label": "Account Status",
                            "secret": false,
                            "default": "{person.properties.accountStatus}",
                            "required": false,
                            "description": "Capturing the account status on the user can be helpful to segment users. Possible options include: Free, Trial, Paid, Cancelled (Suggested) "
                        },
                        {
                            "key": "createdAt",
                            "type": "string",
                            "label": "Created at",
                            "secret": false,
                            "default": "{person.properties.createdAt}",
                            "required": false,
                            "description": "When was the user created, including this ensures that tenure tracking is accurate. (Highly Recommended) "
                        },
                        {
                            "key": "traits",
                            "type": "dictionary",
                            "label": "Traits",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{person.properties}"
                            },
                            "required": false,
                            "description": "Optionally send all traits to associate with the user or the group"
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": true,
                            "description": "The timestamp of the event"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "identify",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Group Calls",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event = '$groupidentify'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "anonymousId",
                            "type": "string",
                            "label": "Anonymous ID",
                            "secret": false,
                            "default": "{event.distinct_id}",
                            "required": false,
                            "description": "Anonymous id"
                        },
                        {
                            "key": "userId",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": false,
                            "description": "The ID associated with the user"
                        },
                        {
                            "key": "groupId",
                            "type": "string",
                            "label": "Group ID",
                            "secret": false,
                            "default": "{event.groupId}",
                            "required": true,
                            "description": "The group id"
                        },
                        {
                            "key": "name",
                            "type": "string",
                            "label": "Name",
                            "secret": false,
                            "default": "{person.properties.name}",
                            "required": false,
                            "description": "The name of the account. Without providing a name, accounts are displayed using a numeric ID, making them harder to identify. (Highly Recommended)"
                        },
                        {
                            "key": "createdAt",
                            "type": "string",
                            "label": "Created at",
                            "secret": false,
                            "default": "{person.properties.createdAt}",
                            "required": false,
                            "description": "Helps calculate account tenure. If no createdAt is provided, the earliest createdAt from the associated users will be used. (Highly Recommended)"
                        },
                        {
                            "key": "status",
                            "type": "string",
                            "label": "Status",
                            "secret": false,
                            "default": "{person.properties.status}",
                            "required": false,
                            "description": "The overall status of your the account subscription. Possible options include: Free, Trial, Paid, Cancelled (Highly Recommended)"
                        },
                        {
                            "key": "plan",
                            "type": "string",
                            "label": "Plan",
                            "secret": false,
                            "default": "{person.properties.plan}",
                            "required": false,
                            "description": "The plan type helps in segmenting accounts by their subscription tier (e.g., starter, pro, enterprise). (Recommended)"
                        },
                        {
                            "key": "mrr",
                            "type": "string",
                            "label": "MRR",
                            "secret": false,
                            "default": "{person.properties.mrr}",
                            "required": false,
                            "description": "Monthly recurring revenue (MRR) is important for segmenting accounts by value. It also allows Accoil to show the dollar value of different segments. Ideally this is passed in cents eg $99 becomes 9900. (Highly Recommended)"
                        },
                        {
                            "key": "traits",
                            "type": "dictionary",
                            "label": "Traits",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{person.properties}"
                            },
                            "required": false,
                            "description": "Optionally send all traits to associate with the user or the group"
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": true,
                            "description": "The timestamp of the event"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "group",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                }
            ],
            "mappings": null,
            "status": "beta",
            "free": false,
            "type": "destination",
            "id": "segment-actions-accoil-analytics",
            "name": "Accoil Analytics",
            "hog": "return event",
            "inputs_schema": [
                {
                    "key": "api_key",
                    "type": "string",
                    "label": "API Key",
                    "secret": true,
                    "required": true,
                    "description": "Your Accoil.com API Key. You can find your API Key in your Accoil account settings."
                },
                {
                    "key": "debug_mode",
                    "type": "boolean",
                    "label": "Debug Mode",
                    "default": false,
                    "description": "Will log configuration and request details"
                }
            ],
            "category": [],
            "code_language": "hog",
            "description": "Send event data to Accoil Analytics",
            "filters": null,
            "masking": null,
            "icon_url": "/static/services/accoil.com.png"
        },
        {
            "mapping_templates": [
                {
                    "name": "Track Calls",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify')",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "key_value_pairs",
                            "type": "dictionary",
                            "label": "Key-Value pairs",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "Map simple Key-Value pairs (optional) "
                        },
                        {
                            "key": "array_data",
                            "type": "dictionary",
                            "label": "Arrays",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "If the data needed is in an array, use this section to Map Array data into useable attributes (optional) "
                        },
                        {
                            "key": "context",
                            "type": "dictionary",
                            "label": "Context",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "If the data is present in a Context section, use this to map the attributes of a Context Section (optional)"
                        },
                        {
                            "key": "properties",
                            "type": "dictionary",
                            "label": "Properties",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "If the data is present in a Properties section, use this to map the attributes of a Properties Section (optional) "
                        },
                        {
                            "key": "traits",
                            "type": "dictionary",
                            "label": "Traits",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "If the data is present in a Traits section, use this to map the attributes of a Traits Section (optional) "
                        },
                        {
                            "key": "uniqueRecipientId",
                            "type": "string",
                            "label": "UniqueRecipientId",
                            "secret": false,
                            "default": "{event.properties.email ?? person.properties.email}",
                            "required": true,
                            "description": "The field to be used to uniquely identify the Recipient in Acoustic. This field is required with Email preferred but not required."
                        },
                        {
                            "key": "type",
                            "type": "string",
                            "label": "Type",
                            "secret": false,
                            "default": "{event.event == '$pageview' ? 'page' : event.event == '$screen' ? 'screen' : event.event == '$groupidentify' ? 'group' : event.event in ('$identify', '$set') ? 'identify' : event.event == '$alias' ? 'alias' : 'track'}",
                            "required": true,
                            "description": "Do Not Modify - The type of event. e.g. track or identify, this field is required"
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": true,
                            "description": "Do Not Modify - The timestamp for when the event took place. This field is required"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "receiveEvents",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Identify Calls",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event in ('$identify', '$set')",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "key_value_pairs",
                            "type": "dictionary",
                            "label": "Key-Value pairs",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "Map simple Key-Value pairs (optional) "
                        },
                        {
                            "key": "array_data",
                            "type": "dictionary",
                            "label": "Arrays",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "If the data needed is in an array, use this section to Map Array data into useable attributes (optional) "
                        },
                        {
                            "key": "context",
                            "type": "dictionary",
                            "label": "Context",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "If the data is present in a Context section, use this to map the attributes of a Context Section (optional)"
                        },
                        {
                            "key": "properties",
                            "type": "dictionary",
                            "label": "Properties",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "If the data is present in a Properties section, use this to map the attributes of a Properties Section (optional) "
                        },
                        {
                            "key": "traits",
                            "type": "dictionary",
                            "label": "Traits",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "If the data is present in a Traits section, use this to map the attributes of a Traits Section (optional) "
                        },
                        {
                            "key": "uniqueRecipientId",
                            "type": "string",
                            "label": "UniqueRecipientId",
                            "secret": false,
                            "default": "{person.properties.email ?? person.properties.email}",
                            "required": true,
                            "description": "The field to be used to uniquely identify the Recipient in Acoustic. This field is required with Email preferred but not required."
                        },
                        {
                            "key": "type",
                            "type": "string",
                            "label": "Type",
                            "secret": false,
                            "default": "{event.event == '$pageview' ? 'page' : event.event == '$screen' ? 'screen' : event.event == '$groupidentify' ? 'group' : event.event in ('$identify', '$set') ? 'identify' : event.event == '$alias' ? 'alias' : 'track'}",
                            "required": true,
                            "description": "Do Not Modify - The type of event. e.g. track or identify, this field is required"
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": true,
                            "description": "Do Not Modify - The timestamp for when the event took place. This field is required"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "receiveEvents",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                }
            ],
            "mappings": null,
            "status": "alpha",
            "free": false,
            "type": "destination",
            "id": "segment-actions-acoustic",
            "name": "Acoustic",
            "hog": "return event",
            "inputs_schema": [
                {
                    "key": "fileNamePrefix",
                    "type": "string",
                    "label": "Customer Prefix",
                    "secret": false,
                    "default": "customer_org_",
                    "required": true,
                    "description": "Use your Acoustic Org name but replace any spaces with an underscore, eg., AcmeCustomer_Prod"
                },
                {
                    "key": "s3_bucket_accesspoint_alias",
                    "type": "string",
                    "label": "S3 Bucket Access Point Alias",
                    "secret": false,
                    "default": "",
                    "required": true,
                    "description": "The Alias of the Access Point created for your access to the S3 Bucket."
                },
                {
                    "key": "s3_access_key",
                    "type": "string",
                    "label": "S3 Access Key",
                    "secret": false,
                    "required": true,
                    "description": "S3 Access Key for the S3 bucket."
                },
                {
                    "key": "s3_secret",
                    "type": "string",
                    "label": "S3 Secret",
                    "secret": true,
                    "required": true,
                    "description": "S3 Secret credential for the S3 bucket."
                },
                {
                    "key": "s3_region",
                    "type": "string",
                    "label": "S3 Region",
                    "secret": false,
                    "default": "us-east-1",
                    "required": true,
                    "description": "Should always be us-east-1 unless directed by Acoustic otherwise. "
                },
                {
                    "key": "version",
                    "type": "string",
                    "label": "Version:",
                    "secret": false,
                    "default": "Version 2.3",
                    "required": false,
                    "description": "\n\nLast-Modified: 02.01.2024 10.30.43\n\n"
                },
                {
                    "key": "debug_mode",
                    "type": "boolean",
                    "label": "Debug Mode",
                    "default": false,
                    "description": "Will log configuration and request details"
                }
            ],
            "category": [],
            "code_language": "hog",
            "description": "Send event data to Acoustic",
            "filters": null,
            "masking": null,
            "icon_url": "/static/services/acoustic.com.png"
        },
        {
            "mapping_templates": [
                {
                    "name": "Track Calls",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify')",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "email",
                            "type": "string",
                            "label": "Email",
                            "secret": false,
                            "default": "{event.properties.email ?? person.properties.email}",
                            "required": true,
                            "description": "At a minimum Email is required, see mapping presets for more info."
                        },
                        {
                            "key": "type",
                            "type": "string",
                            "label": "Type",
                            "secret": false,
                            "default": "{event.event == '$pageview' ? 'page' : event.event == '$screen' ? 'screen' : event.event == '$groupidentify' ? 'group' : event.event in ('$identify', '$set') ? 'identify' : event.event == '$alias' ? 'alias' : 'track'}",
                            "required": false,
                            "description": "The Event Type, will be either Track or Identify"
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": false,
                            "description": "The Timestamp of the Event"
                        },
                        {
                            "key": "key_value_pairs",
                            "type": "dictionary",
                            "label": "Key-Value pairs",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "Map simple Key-Value pairs of Event data here."
                        },
                        {
                            "key": "array_data",
                            "type": "dictionary",
                            "label": "Arrays",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "Map Arrays of data into flattened data attributes here."
                        },
                        {
                            "key": "context",
                            "type": "dictionary",
                            "label": "Context",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "All properties provided via a Context Section "
                        },
                        {
                            "key": "properties",
                            "type": "dictionary",
                            "label": "Properties",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "All properties provided via a Properties Section"
                        },
                        {
                            "key": "traits",
                            "type": "dictionary",
                            "label": "Traits",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "All properties provided via a Traits Section"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "receiveEvents",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Identify Calls",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event in ('$identify', '$set')",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "email",
                            "type": "string",
                            "label": "Email",
                            "secret": false,
                            "default": "{person.properties.email ?? person.properties.email}",
                            "required": true,
                            "description": "At a minimum Email is required, see mapping presets for more info."
                        },
                        {
                            "key": "type",
                            "type": "string",
                            "label": "Type",
                            "secret": false,
                            "default": "{event.event == '$pageview' ? 'page' : event.event == '$screen' ? 'screen' : event.event == '$groupidentify' ? 'group' : event.event in ('$identify', '$set') ? 'identify' : event.event == '$alias' ? 'alias' : 'track'}",
                            "required": false,
                            "description": "The Event Type, will be either Track or Identify"
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": false,
                            "description": "The Timestamp of the Event"
                        },
                        {
                            "key": "key_value_pairs",
                            "type": "dictionary",
                            "label": "Key-Value pairs",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "Map simple Key-Value pairs of Event data here."
                        },
                        {
                            "key": "array_data",
                            "type": "dictionary",
                            "label": "Arrays",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "Map Arrays of data into flattened data attributes here."
                        },
                        {
                            "key": "context",
                            "type": "dictionary",
                            "label": "Context",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "All properties provided via a Context Section "
                        },
                        {
                            "key": "properties",
                            "type": "dictionary",
                            "label": "Properties",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "All properties provided via a Properties Section"
                        },
                        {
                            "key": "traits",
                            "type": "dictionary",
                            "label": "Traits",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "All properties provided via a Traits Section"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "receiveEvents",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                }
            ],
            "mappings": null,
            "status": "alpha",
            "free": false,
            "type": "destination",
            "id": "segment-actions-acoustic-campaign",
            "name": "Acoustic Campaign",
            "hog": "return event",
            "inputs_schema": [
                {
                    "key": "pod",
                    "type": "string",
                    "label": "Pod",
                    "secret": false,
                    "default": "2",
                    "required": true,
                    "description": "Pod Number for API Endpoint"
                },
                {
                    "key": "region",
                    "type": "choice",
                    "label": "Region",
                    "secret": false,
                    "choices": [
                        {
                            "label": "US",
                            "value": "US"
                        },
                        {
                            "label": "EU",
                            "value": "EU"
                        },
                        {
                            "label": "AP",
                            "value": "AP"
                        },
                        {
                            "label": "CA",
                            "value": "CA"
                        }
                    ],
                    "default": "US",
                    "required": true,
                    "description": "Region for API Endpoint, either US, EU, AP, or CA"
                },
                {
                    "key": "tableName",
                    "type": "string",
                    "label": "Acoustic Segment Table Name",
                    "secret": false,
                    "default": "Segment Events Table Name",
                    "required": true,
                    "description": "The Segment Table Name in Acoustic Campaign Data dialog."
                },
                {
                    "key": "tableListId",
                    "type": "string",
                    "label": "Acoustic Segment Table List Id",
                    "secret": false,
                    "default": "",
                    "required": true,
                    "description": "The Segment Table List Id from the Database-Relational Table dialog in Acoustic Campaign"
                },
                {
                    "key": "a_clientId",
                    "type": "string",
                    "label": "Acoustic App Definition ClientId",
                    "secret": false,
                    "default": "",
                    "required": true,
                    "description": "The Client Id from the App definition dialog in Acoustic Campaign"
                },
                {
                    "key": "a_clientSecret",
                    "type": "string",
                    "label": "Acoustic App Definition ClientSecret",
                    "secret": true,
                    "default": "",
                    "required": true,
                    "description": "The Client Secret from the App definition dialog in Acoustic Campaign"
                },
                {
                    "key": "a_refreshToken",
                    "type": "string",
                    "label": "Acoustic App Access Definition RefreshToken",
                    "secret": true,
                    "default": "",
                    "required": true,
                    "description": "The RefreshToken provided when defining access for the App in Acoustic Campaign"
                },
                {
                    "key": "attributesMax",
                    "type": "string",
                    "label": "Properties Max",
                    "secret": false,
                    "default": "15",
                    "required": false,
                    "description": "A safety against mapping too many attributes into the Event, Event will be ignored if number of Event Attributes exceeds this maximum. Note: Before increasing the default max number, consult the Acoustic Destination documentation."
                },
                {
                    "key": "version",
                    "type": "string",
                    "label": "Version:",
                    "secret": false,
                    "default": "Version 3.1   (nodeJS: v18.20.6)",
                    "required": false,
                    "description": "\nLast-Modified: 06.28.2023 16.15.37\n"
                },
                {
                    "key": "debug_mode",
                    "type": "boolean",
                    "label": "Debug Mode",
                    "default": false,
                    "description": "Will log configuration and request details"
                }
            ],
            "category": [],
            "code_language": "hog",
            "description": "Send event data to Acoustic Campaign",
            "filters": null,
            "masking": null,
            "icon_url": "/static/services/acoustic.com.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "beta",
            "free": false,
            "type": "destination",
            "id": "template-activecampaign",
            "name": "ActiveCampaign",
            "hog": "if (empty(inputs.email)) {\n    print('`email` input is empty. Not creating a contact.')\n    return\n}\n\nlet contact := {\n    'email': inputs.email,\n    'fieldValues': [],\n}\n\nif (not empty(inputs.firstName)) contact.firstName := inputs.firstName\nif (not empty(inputs.lastName)) contact.lastName := inputs.lastName\nif (not empty(inputs.phone)) contact.phone := inputs.phone\n\nfor (let key, value in inputs.attributes) {\n    if (not empty(value)) {\n        contact.fieldValues := arrayPushBack(contact.fieldValues, {'field': key, 'value': value})\n    }\n}\n\nlet res := fetch(f'https://{inputs.accountName}.api-us1.com/api/3/contact/sync', {\n    'method': 'POST',\n    'headers': {\n        'content-type': 'application/json',\n        'Api-Token': inputs.apiKey\n    },\n    'body': {\n        'contact': contact\n    }\n})\n\nif (res.status >= 400) {\n    throw Error(f'Error from {inputs.accountName}.api-us1.com (status {res.status}): {res.body}')\n} else {\n    print('Contact has been created or updated successfully!')\n}",
            "inputs_schema": [
                {
                    "key": "accountName",
                    "type": "string",
                    "label": "Account name",
                    "secret": false,
                    "default": "",
                    "required": true,
                    "description": "Usually in the form of <accountName>.activehosted.com. You can use this page to figure our your account name: https://www.activecampaign.com/login/lookup.php"
                },
                {
                    "key": "apiKey",
                    "type": "string",
                    "label": "Your ActiveCampaign API Key",
                    "secret": true,
                    "default": "",
                    "required": true,
                    "description": "See the docs here: https://help.activecampaign.com/hc/en-us/articles/207317590-Getting-started-with-the-API#h_01HJ6REM2YQW19KYPB189726ST"
                },
                {
                    "key": "email",
                    "type": "string",
                    "label": "Email of the user",
                    "secret": false,
                    "default": "{person.properties.email}",
                    "required": true,
                    "description": "Where to find the email for the contact to be created. You can use the filters section to filter out unwanted emails or internal users."
                },
                {
                    "key": "firstName",
                    "type": "string",
                    "label": "First name of the user",
                    "secret": false,
                    "default": "{person.properties.firstName}",
                    "required": true,
                    "description": "Where to find the first name for the contact to be created."
                },
                {
                    "key": "lastName",
                    "type": "string",
                    "label": "Last name of the user",
                    "secret": false,
                    "default": "{person.properties.lastName}",
                    "required": true,
                    "description": "Where to find the last name for the contact to be created."
                },
                {
                    "key": "phone",
                    "type": "string",
                    "label": "Phone number of the user",
                    "secret": false,
                    "default": "{person.properties.phone}",
                    "required": true,
                    "description": "Where to find the phone number for the contact to be created."
                },
                {
                    "key": "attributes",
                    "type": "dictionary",
                    "label": "Additional person fields",
                    "secret": false,
                    "default": {
                        "1": "{person.properties.company}",
                        "2": "{person.properties.website}"
                    },
                    "required": true,
                    "description": "Map any values to ActiveCampaign person fields. (fieldId:value)"
                }
            ],
            "category": ["Email Marketing"],
            "code_language": "hog",
            "description": "Creates a new contact in ActiveCampaign whenever an event is triggered.",
            "filters": {
                "events": [
                    {
                        "id": "$identify",
                        "name": "$identify",
                        "type": "events",
                        "order": 0
                    },
                    {
                        "id": "$set",
                        "name": "$set",
                        "type": "events",
                        "order": 1
                    }
                ],
                "actions": [],
                "filter_test_accounts": true
            },
            "masking": null,
            "icon_url": "/static/services/activecampaign.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-adjust",
            "name": "Adjust",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Attribution Platforms"],
            "code_language": "hog",
            "description": "Send events to Adjust.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Adjust.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-adlearn",
            "name": "AdLearn",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Analytics"],
            "code_language": "hog",
            "description": "Send events to AdLearn.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/AdLearn.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-adobe-analytics",
            "name": "Adobe Analytics",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Analytics"],
            "code_language": "hog",
            "description": "Send events to Adobe Analytics.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Adobe_Analytics.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-adroll",
            "name": "AdRoll",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Advertising"],
            "code_language": "hog",
            "description": "Send events to AdRoll.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/AdRoll.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-aircall",
            "name": "Aircall",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Customer Service"],
            "code_language": "hog",
            "description": "Send events to Aircall.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Aircall.svg"
        },
        {
            "mapping_templates": [
                {
                    "name": "Custom Events",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify')",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "named_user_id",
                            "type": "string",
                            "label": "Airship Named User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": true,
                            "description": "The identifier assigned in Airship as the Named User"
                        },
                        {
                            "key": "name",
                            "type": "string",
                            "label": "Name",
                            "secret": false,
                            "default": "{event.event}",
                            "required": true,
                            "description": "Event Name"
                        },
                        {
                            "key": "occurred",
                            "type": "string",
                            "label": "Occurred",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": true,
                            "description": "When the event occurred."
                        },
                        {
                            "key": "properties",
                            "type": "dictionary",
                            "label": "Event Properties",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.properties}"
                            },
                            "required": false,
                            "description": "Properties of the event"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "customEvents",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Set Attributes",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event in ('$identify', '$set')",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "named_user_id",
                            "type": "string",
                            "label": "Airship Named User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": true,
                            "description": "The identifier assigned in Airship as the Named User"
                        },
                        {
                            "key": "occurred",
                            "type": "string",
                            "label": "Occurred",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": true,
                            "description": "When the Trait was set"
                        },
                        {
                            "key": "attributes",
                            "type": "dictionary",
                            "label": "Attributes",
                            "secret": false,
                            "default": {
                                "age": "{person.properties.age}",
                                "city": "{person.properties.address.city}",
                                "email": "{person.properties.email}",
                                "title": "{person.properties.title}",
                                "gender": "{person.properties.gender}",
                                "region": "{person.properties.address.region}",
                                "company": "{person.properties.company_name}",
                                "country": "{person.properties.address.country}",
                                "zipcode": "{person.properties.address.postalCode}",
                                "altitude": "{person.properties.altitude}",
                                "latitude": "{person.properties.latitude}",
                                "username": "{person.properties.username}",
                                "birthdate": "{person.properties.birthday}",
                                "full_name": "{person.properties.full_name}",
                                "last_name": "{person.properties.last_name}",
                                "longitude": "{person.properties.longitude}",
                                "first_name": "{person.properties.first_name}",
                                "home_phone": "{person.properties.home_phone}",
                                "work_phone": "{person.properties.work_phone}",
                                "loyalty_tier": "{person.properties.loyalty_tier}",
                                "mobile_phone": "{person.properties.phone}",
                                "advertising_id": "",
                                "account_creation": "{person.properties.account_creation}"
                            },
                            "required": false,
                            "description": "User Attributes. Attributes should exist in Airship in order to be set, including the predifined ones defaulted here."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "setAttributes",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                }
            ],
            "mappings": null,
            "status": "alpha",
            "free": false,
            "type": "destination",
            "id": "segment-actions-airship",
            "name": "Airship",
            "hog": "return event",
            "inputs_schema": [
                {
                    "key": "access_token",
                    "type": "string",
                    "label": "Access Token",
                    "secret": true,
                    "required": true,
                    "description": "Create in the Airship Go dashboard in Settings->Partner Integrations->Segment"
                },
                {
                    "key": "app_key",
                    "type": "string",
                    "label": "App Key",
                    "secret": false,
                    "required": true,
                    "description": "The App Key identifies the Airship Project to which API requests are made."
                },
                {
                    "key": "endpoint",
                    "type": "choice",
                    "label": "Data Center",
                    "secret": false,
                    "choices": [
                        {
                            "label": "US",
                            "value": "US"
                        },
                        {
                            "label": "EU",
                            "value": "EU"
                        }
                    ],
                    "default": "US",
                    "required": true,
                    "description": "US or EU"
                },
                {
                    "key": "debug_mode",
                    "type": "boolean",
                    "label": "Debug Mode",
                    "default": false,
                    "description": "Will log configuration and request details"
                }
            ],
            "category": [],
            "code_language": "hog",
            "description": "Send event data to Airship",
            "filters": null,
            "masking": null,
            "icon_url": "/static/services/airship.com.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "beta",
            "free": false,
            "type": "destination",
            "id": "template-airtable",
            "name": "Airtable",
            "hog": "let url := f'https://api.airtable.com/v0/{inputs.base_id}/{inputs.table_name}'\n\nlet payload := {\n  'headers': {\n    'Content-Type': 'application/json',\n    'Authorization': f'Bearer {inputs.access_token}'\n  },\n  'body': {\n    'fields': inputs.fields,\n    'typecast': true\n  },\n  'method': 'POST'\n}\n\nif (inputs.debug) {\n  print('Request', url, payload)\n}\n\nlet res := fetch(url, payload);\n\nif (inputs.debug) {\n  print('Response', res.status, res.body);\n}\nif (res.status >= 400) {\n    throw Error(f'Error from api.airtable.com (status {res.status}): {res.body}')\n}",
            "inputs_schema": [
                {
                    "key": "access_token",
                    "type": "string",
                    "label": "Airtable access token",
                    "secret": true,
                    "required": true,
                    "description": "Create this at https://airtable.com/create/tokens"
                },
                {
                    "key": "base_id",
                    "type": "string",
                    "label": "Airtable base ID",
                    "secret": false,
                    "required": true,
                    "description": "Find this at https://airtable.com/developers/web/api/introduction"
                },
                {
                    "key": "table_name",
                    "type": "string",
                    "label": "Table name",
                    "secret": false,
                    "required": true
                },
                {
                    "key": "fields",
                    "type": "json",
                    "label": "Fields",
                    "secret": false,
                    "default": {
                        "Timestamp": "{event.timestamp}",
                        "Person Name": "{person.name}"
                    },
                    "required": true,
                    "description": "Map field names from Airtable to properties from events and person records."
                },
                {
                    "key": "debug",
                    "type": "boolean",
                    "label": "Log responses",
                    "secret": false,
                    "default": false,
                    "required": false,
                    "description": "Logs the response of http calls for debugging."
                }
            ],
            "category": ["Custom"],
            "code_language": "hog",
            "description": "Creates Airtable records",
            "filters": null,
            "masking": null,
            "icon_url": "/static/services/airtable.png"
        },
        {
            "mapping_templates": [
                {
                    "name": "Send product clicked events to Algolia",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify') and event = 'Product Clicked'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "objectID",
                            "type": "string",
                            "label": "Product ID",
                            "secret": false,
                            "default": "{event.properties.product_id}",
                            "required": true,
                            "description": "Populates the ObjectIds field in the Algolia Insights API. Product ID of the clicked item."
                        },
                        {
                            "key": "index",
                            "type": "string",
                            "label": "Index",
                            "secret": false,
                            "default": "{event.properties.search_index}",
                            "required": true,
                            "description": "Name of the targeted search index."
                        },
                        {
                            "key": "queryID",
                            "type": "string",
                            "label": "Query ID",
                            "secret": false,
                            "default": "{event.properties.query_id}",
                            "required": false,
                            "description": "Query ID of the list on which the item was clicked."
                        },
                        {
                            "key": "position",
                            "type": "string",
                            "label": "Position",
                            "secret": false,
                            "default": "{event.properties.position}",
                            "required": false,
                            "description": "Position of the click in the list of Algolia search results."
                        },
                        {
                            "key": "userToken",
                            "type": "string",
                            "label": "User Token",
                            "secret": false,
                            "default": "{person.id ?? event.distinct_id}",
                            "required": true,
                            "description": "The ID associated with the user."
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": false,
                            "description": "The timestamp of the event."
                        },
                        {
                            "key": "extraProperties",
                            "type": "dictionary",
                            "label": "Extra Properties",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.properties}"
                            },
                            "required": false,
                            "description": "Additional fields for this event. This field may be useful for Algolia Insights fields which are not mapped in Segment."
                        },
                        {
                            "key": "eventName",
                            "type": "string",
                            "label": "Event Name",
                            "secret": false,
                            "default": "Product Clicked",
                            "required": false,
                            "description": "The name of the event to be send to Algolia. Defaults to 'Product Clicked'"
                        },
                        {
                            "key": "eventType",
                            "type": "choice",
                            "label": "Event Type",
                            "secret": false,
                            "choices": [
                                {
                                    "label": "view",
                                    "value": "view"
                                },
                                {
                                    "label": "conversion",
                                    "value": "conversion"
                                },
                                {
                                    "label": "click",
                                    "value": "click"
                                }
                            ],
                            "default": "click",
                            "required": false,
                            "description": "The type of event to send to Algolia. Defaults to 'click'"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "productClickedEvents",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Send purchase events to Algolia",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify') and event = 'Order Completed'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "eventSubtype",
                            "type": "choice",
                            "label": "Event Subtype",
                            "secret": false,
                            "choices": [
                                {
                                    "label": "Purchase",
                                    "value": "purchase"
                                },
                                {
                                    "label": "Add To Cart",
                                    "value": "addToCart"
                                }
                            ],
                            "default": "purchase",
                            "required": false,
                            "description": "Sub-type of the event, \"purchase\" or \"addToCart\"."
                        },
                        {
                            "key": "products",
                            "type": "string",
                            "label": "Product Details",
                            "secret": false,
                            "default": "{event.properties.products}",
                            "required": true,
                            "description": "Populates the ObjectIDs field in the Algolia Insights API. An array of objects representing the purchased items. Each object must contain a product_id field."
                        },
                        {
                            "key": "index",
                            "type": "string",
                            "label": "Index",
                            "secret": false,
                            "default": "{event.properties.search_index}",
                            "required": true,
                            "description": "Name of the targeted search index."
                        },
                        {
                            "key": "queryID",
                            "type": "string",
                            "label": "Query ID",
                            "secret": false,
                            "default": "{event.properties.query_id}",
                            "required": false,
                            "description": "Query ID of the list on which the item was purchased."
                        },
                        {
                            "key": "userToken",
                            "type": "string",
                            "label": "User Token",
                            "secret": false,
                            "default": "{person.id ?? event.distinct_id}",
                            "required": true,
                            "description": "The ID associated with the user."
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": false,
                            "description": "The timestamp of the event."
                        },
                        {
                            "key": "value",
                            "type": "string",
                            "label": "Value",
                            "secret": false,
                            "default": "{event.properties.value}",
                            "required": false,
                            "description": "The value of the cart that is being converted."
                        },
                        {
                            "key": "currency",
                            "type": "string",
                            "label": "Currency",
                            "secret": false,
                            "default": "{event.properties.currency}",
                            "required": false,
                            "description": "Currency of the objects associated with the event in 3-letter ISO 4217 format. Required when `value` or `price` is set."
                        },
                        {
                            "key": "extraProperties",
                            "type": "dictionary",
                            "label": "Extra Properties",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.properties}"
                            },
                            "required": false,
                            "description": "Additional fields for this event. This field may be useful for Algolia Insights fields which are not mapped in Segment."
                        },
                        {
                            "key": "eventName",
                            "type": "string",
                            "label": "Event Name",
                            "secret": false,
                            "default": "Conversion Event",
                            "required": false,
                            "description": "The name of the event to send to Algolia. Defaults to 'Conversion Event'"
                        },
                        {
                            "key": "eventType",
                            "type": "choice",
                            "label": "Event Type",
                            "secret": false,
                            "choices": [
                                {
                                    "label": "View",
                                    "value": "view"
                                },
                                {
                                    "label": "Conversion",
                                    "value": "conversion"
                                },
                                {
                                    "label": "Click",
                                    "value": "click"
                                }
                            ],
                            "default": "conversion",
                            "required": false,
                            "description": "The type of event to send to Algolia. Defaults to 'conversion'"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "conversionEvents",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Send add-to-cart events to Algolia",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify') and event = 'Product Added'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "eventSubtype",
                            "type": "choice",
                            "label": "Event Subtype",
                            "secret": false,
                            "choices": [
                                {
                                    "label": "Purchase",
                                    "value": "purchase"
                                },
                                {
                                    "label": "Add To Cart",
                                    "value": "addToCart"
                                }
                            ],
                            "default": "addToCart",
                            "required": false,
                            "description": "Sub-type of the event, \"purchase\" or \"addToCart\"."
                        },
                        {
                            "key": "products",
                            "type": "string",
                            "label": "Product Details",
                            "secret": false,
                            "default": "{event.properties.products}",
                            "required": true,
                            "description": "Populates the ObjectIDs field in the Algolia Insights API. An array of objects representing the purchased items. Each object must contain a product_id field."
                        },
                        {
                            "key": "index",
                            "type": "string",
                            "label": "Index",
                            "secret": false,
                            "default": "{event.properties.search_index}",
                            "required": true,
                            "description": "Name of the targeted search index."
                        },
                        {
                            "key": "queryID",
                            "type": "string",
                            "label": "Query ID",
                            "secret": false,
                            "default": "{event.properties.query_id}",
                            "required": false,
                            "description": "Query ID of the list on which the item was purchased."
                        },
                        {
                            "key": "userToken",
                            "type": "string",
                            "label": "User Token",
                            "secret": false,
                            "default": "{person.id ?? event.distinct_id}",
                            "required": true,
                            "description": "The ID associated with the user."
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": false,
                            "description": "The timestamp of the event."
                        },
                        {
                            "key": "value",
                            "type": "string",
                            "label": "Value",
                            "secret": false,
                            "default": "{event.properties.value}",
                            "required": false,
                            "description": "The value of the cart that is being converted."
                        },
                        {
                            "key": "currency",
                            "type": "string",
                            "label": "Currency",
                            "secret": false,
                            "default": "{event.properties.currency}",
                            "required": false,
                            "description": "Currency of the objects associated with the event in 3-letter ISO 4217 format. Required when `value` or `price` is set."
                        },
                        {
                            "key": "extraProperties",
                            "type": "dictionary",
                            "label": "Extra Properties",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.properties}"
                            },
                            "required": false,
                            "description": "Additional fields for this event. This field may be useful for Algolia Insights fields which are not mapped in Segment."
                        },
                        {
                            "key": "eventName",
                            "type": "string",
                            "label": "Event Name",
                            "secret": false,
                            "default": "Conversion Event",
                            "required": false,
                            "description": "The name of the event to send to Algolia. Defaults to 'Conversion Event'"
                        },
                        {
                            "key": "eventType",
                            "type": "choice",
                            "label": "Event Type",
                            "secret": false,
                            "choices": [
                                {
                                    "label": "View",
                                    "value": "view"
                                },
                                {
                                    "label": "Conversion",
                                    "value": "conversion"
                                },
                                {
                                    "label": "Click",
                                    "value": "click"
                                }
                            ],
                            "default": "conversion",
                            "required": false,
                            "description": "The type of event to send to Algolia. Defaults to 'conversion'"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "conversionEvents",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Send product viewed events to Algolia",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify') and event = 'Product Viewed'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "objectID",
                            "type": "string",
                            "label": "Product ID",
                            "secret": false,
                            "default": "{event.properties.product_id}",
                            "required": true,
                            "description": "Product ID of the clicked item."
                        },
                        {
                            "key": "index",
                            "type": "string",
                            "label": "Index",
                            "secret": false,
                            "default": "{event.properties.search_index}",
                            "required": true,
                            "description": "Name of the targeted search index."
                        },
                        {
                            "key": "queryID",
                            "type": "string",
                            "label": "Query ID",
                            "secret": false,
                            "default": "{event.properties.query_id}",
                            "required": false,
                            "description": "Query ID of the list on which the item was viewed."
                        },
                        {
                            "key": "userToken",
                            "type": "string",
                            "label": "User Token",
                            "secret": false,
                            "default": "{person.id ?? event.distinct_id}",
                            "required": true,
                            "description": "The ID associated with the user."
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": false,
                            "description": "The timestamp of the event."
                        },
                        {
                            "key": "extraProperties",
                            "type": "dictionary",
                            "label": "Extra Properties",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.properties}"
                            },
                            "required": false,
                            "description": "Additional fields for this event. This field may be useful for Algolia Insights fields which are not mapped in Segment."
                        },
                        {
                            "key": "eventName",
                            "type": "string",
                            "label": "Event Name",
                            "secret": false,
                            "default": "Product Viewed",
                            "required": false,
                            "description": "The name of the event to be send to Algolia. Defaults to 'Product Viewed'"
                        },
                        {
                            "key": "eventType",
                            "type": "choice",
                            "label": "Event Type",
                            "secret": false,
                            "choices": [
                                {
                                    "label": "view",
                                    "value": "view"
                                },
                                {
                                    "label": "conversion",
                                    "value": "conversion"
                                },
                                {
                                    "label": "click",
                                    "value": "click"
                                }
                            ],
                            "default": "view",
                            "required": false,
                            "description": "The type of event to send to Algolia. Defaults to 'view'"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "productViewedEvents",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Send product list filtered events to Algolia",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify') and event = 'Product List Filtered'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "filters",
                            "type": "string",
                            "label": "Filters",
                            "secret": false,
                            "default": "{event.properties.filters}",
                            "required": true,
                            "description": "Populates the filters field in the Algolia Insights API, a list of up to 10 facet filters. Field should be an array of strings with format ${attribute}:${value}."
                        },
                        {
                            "key": "index",
                            "type": "string",
                            "label": "Index",
                            "secret": false,
                            "default": "{event.properties.search_index}",
                            "required": true,
                            "description": "Name of the targeted search index."
                        },
                        {
                            "key": "queryID",
                            "type": "string",
                            "label": "Query ID",
                            "secret": false,
                            "default": "{event.properties.query_id}",
                            "required": false,
                            "description": "Query ID of the list on which the item was clicked."
                        },
                        {
                            "key": "userToken",
                            "type": "string",
                            "label": "User Token",
                            "secret": false,
                            "default": "{person.id ?? event.distinct_id}",
                            "required": true,
                            "description": "The ID associated with the user."
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": false,
                            "description": "The timestamp of the event."
                        },
                        {
                            "key": "extraProperties",
                            "type": "dictionary",
                            "label": "Extra Properties",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.properties}"
                            },
                            "required": false,
                            "description": "Additional fields for this event. This field may be useful for Algolia Insights fields which are not mapped in Segment."
                        },
                        {
                            "key": "eventName",
                            "type": "string",
                            "label": "Event Name",
                            "secret": false,
                            "default": "Product List Filtered",
                            "required": false,
                            "description": "The name of the event to be send to Algolia. Defaults to 'Product List Filtered'"
                        },
                        {
                            "key": "eventType",
                            "type": "choice",
                            "label": "Event Type",
                            "secret": false,
                            "choices": [
                                {
                                    "label": "view",
                                    "value": "view"
                                },
                                {
                                    "label": "conversion",
                                    "value": "conversion"
                                },
                                {
                                    "label": "click",
                                    "value": "click"
                                }
                            ],
                            "default": "click",
                            "required": false,
                            "description": "The type of event to send to Algolia. Defaults to 'click'"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "productListFilteredEvents",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                }
            ],
            "mappings": null,
            "status": "alpha",
            "free": false,
            "type": "destination",
            "id": "segment-actions-algolia-insights",
            "name": "Algolia Insights",
            "hog": "return event",
            "inputs_schema": [
                {
                    "key": "appId",
                    "type": "string",
                    "label": "appId",
                    "secret": false,
                    "required": true,
                    "description": "Your Algolia Application ID."
                },
                {
                    "key": "apiKey",
                    "type": "string",
                    "label": "apiKey",
                    "secret": false,
                    "required": true,
                    "description": "An API key which has write permissions to the Algolia Insights API"
                },
                {
                    "key": "debug_mode",
                    "type": "boolean",
                    "label": "Debug Mode",
                    "default": false,
                    "description": "Will log configuration and request details"
                }
            ],
            "category": [],
            "code_language": "hog",
            "description": "Send event data to Algolia Insights",
            "filters": null,
            "masking": null,
            "icon_url": "/static/services/algolia.com.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-amazon-event-bridge",
            "name": "Amazon Event Bridge",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Data Ingestion"],
            "code_language": "hog",
            "description": "Send events to Amazon Event Bridge.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Amazon_Event_Bridge.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-amazon-personalize",
            "name": "Amazon Personalize",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Analytics"],
            "code_language": "hog",
            "description": "Send events to Amazon Personalize.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Amazon_Personalize.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-ambassador",
            "name": "Ambassador",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Marketing"],
            "code_language": "hog",
            "description": "Send events to Ambassador.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Ambassador.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-amperity",
            "name": "Amperity",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Customer Data Platforms"],
            "code_language": "hog",
            "description": "Send events to Amperity.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Amperity_.svg"
        },
        {
            "mapping_templates": [
                {
                    "name": "Save User",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event in ('$identify', '$set')",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "user",
                            "type": "dictionary",
                            "label": "User",
                            "secret": false,
                            "default": {
                                "id": "{person.id ?? person.properties.id}",
                                "note": "{person.properties.note}",
                                "email": "{person.properties.email}",
                                "phone": "{person.properties.phone}",
                                "state": "{person.properties.state}",
                                "currency": "{person.properties.currency}",
                                "last_name": "{person.properties.last_name}",
                                "created_at": "{person.properties.created_at}",
                                "first_name": "{person.properties.first_name}",
                                "tax_exempt": "{person.properties.tax_exempt}",
                                "updated_at": "{person.properties.updated_at}",
                                "total_spent": "{person.properties.total_spent}",
                                "hashed_email": "{person.properties.hashed_email}",
                                "hashed_phone": "{person.properties.hashed_phone}",
                                "orders_count": "{person.properties.orders_count}",
                                "last_order_id": "{person.properties.last_order_id}",
                                "verified_email": "{person.properties.verified_email}",
                                "last_order_name": "{person.properties.last_order_name}",
                                "hashed_last_name": "{person.properties.hashed_last_name}",
                                "accepts_marketing": "{person.properties.accepts_marketing}",
                                "hashed_first_name": "{person.properties.hashed_first_name}",
                                "marketing_opt_in_level": "{person.properties.marketing_opt_in_level}",
                                "accepts_marketing_updated_at": "{person.properties.accepts_marketing_updated_at}"
                            },
                            "required": false,
                            "description": "The user object."
                        },
                        {
                            "key": "addresses",
                            "type": "string",
                            "label": "Addresses",
                            "secret": false,
                            "default": "{person.properties.addresses}",
                            "required": false,
                            "description": "A list of the ten most recently updated addresses for the customer."
                        },
                        {
                            "key": "default_address",
                            "type": "dictionary",
                            "label": "Default Address",
                            "secret": false,
                            "default": {
                                "zip": "{person.properties.default_address.zip}",
                                "city": "{person.properties.default_address.city}",
                                "phone": "{person.properties.default_address.phone}",
                                "country": "{person.properties.default_address.country}",
                                "address1": "{person.properties.default_address.address1}",
                                "address2": "{person.properties.default_address.address2}",
                                "province": "{person.properties.default_address.province}",
                                "last_name": "{person.properties.default_address.last_name}",
                                "first_name": "{person.properties.default_address.first_name}",
                                "country_code": "{person.properties.default_address.country_code}",
                                "province_code": "{person.properties.default_address.province_code}"
                            },
                            "required": false,
                            "description": "The mailing address associated with the payment method."
                        },
                        {
                            "key": "email_marketing_consent",
                            "type": "string",
                            "label": "Email Marketing Consent",
                            "secret": false,
                            "default": "{person.properties.email_marketing_consent}",
                            "required": false,
                            "description": "The marketing consent information when the customer consented to receiving marketing material by email."
                        },
                        {
                            "key": "metafield",
                            "type": "string",
                            "label": "Metafield",
                            "secret": false,
                            "default": "{person.properties.metafield}",
                            "required": false,
                            "description": "Attaches additional metadata to a shop's resources."
                        },
                        {
                            "key": "sms_marketing_consent",
                            "type": "string",
                            "label": "SMS Marketing Consent",
                            "secret": false,
                            "default": "{person.properties.sms_marketing_consent}",
                            "required": false,
                            "description": "The marketing consent information when the customer consented to receiving marketing material by SMS."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "saveUser",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Save Event - Page Viewed",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event = '$pageview'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "eventId",
                            "type": "string",
                            "label": "Event ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": true,
                            "description": "A unique event identifier."
                        },
                        {
                            "key": "ipAddress",
                            "type": "string",
                            "label": "IP Address",
                            "secret": false,
                            "default": "{event.properties.$ip}",
                            "required": false,
                            "description": "The IP address of the user."
                        },
                        {
                            "key": "userAgent",
                            "type": "string",
                            "label": "User Agent",
                            "secret": false,
                            "default": "{event.properties.$raw_user_agent}",
                            "required": false,
                            "description": "The user agent of the device sending the event."
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": false,
                            "description": "The timestamp when the event was triggered."
                        },
                        {
                            "key": "identifiers",
                            "type": "dictionary",
                            "label": "Identifiers",
                            "secret": false,
                            "default": {
                                "ga": "{event.properties.ga}",
                                "fbc": "{event.properties.fbc}",
                                "fbp": "{event.properties.fbp}",
                                "userId": "{person.id}",
                                "clientId": "{event.distinct_id}",
                                "anonymousId": "{event.distinct_id}"
                            },
                            "required": true,
                            "description": "Identifiers for the user"
                        },
                        {
                            "key": "page",
                            "type": "dictionary",
                            "label": "Page",
                            "secret": false,
                            "default": {
                                "url": "{event.properties.$current_url}",
                                "referrer": "{event.properties.$referrer}"
                            },
                            "required": false,
                            "description": "Page details to send with the event"
                        },
                        {
                            "key": "customAttributes",
                            "type": "dictionary",
                            "label": "Custom Attributes",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "Custom attributes for the event. Data should be specified as key:value pairs"
                        },
                        {
                            "key": "customer",
                            "type": "dictionary",
                            "label": "Customer",
                            "secret": false,
                            "default": {
                                "dob": "{person.properties.birthday ?? person.properties.birthday}",
                                "email": "{person.properties.email ?? person.properties.email}",
                                "phone": "{person.properties.phone ?? person.properties.phone}",
                                "lastName": "{person.properties.last_name ?? person.properties.last_name}",
                                "firstName": "{person.properties.first_name ?? person.properties.first_name}"
                            },
                            "required": false,
                            "description": "Customer details"
                        },
                        {
                            "key": "cart",
                            "type": "dictionary",
                            "label": "Cart",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "Cart details"
                        },
                        {
                            "key": "cartLines",
                            "type": "string",
                            "label": "Cart Line Items",
                            "secret": false,
                            "default": "{event.properties.products}",
                            "required": false,
                            "description": "Cart Line Item details"
                        },
                        {
                            "key": "eventName",
                            "type": "choice",
                            "label": "Event Name",
                            "secret": false,
                            "choices": [
                                {
                                    "label": "page_viewed",
                                    "value": "page_viewed"
                                },
                                {
                                    "label": "cart_viewed",
                                    "value": "cart_viewed"
                                }
                            ],
                            "required": true,
                            "description": "The name of the event to track."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "saveBaseEvent",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Save Event - Cart Viewed",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event = 'Cart Viewed'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "eventId",
                            "type": "string",
                            "label": "Event ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": true,
                            "description": "A unique event identifier."
                        },
                        {
                            "key": "ipAddress",
                            "type": "string",
                            "label": "IP Address",
                            "secret": false,
                            "default": "{event.properties.$ip}",
                            "required": false,
                            "description": "The IP address of the user."
                        },
                        {
                            "key": "userAgent",
                            "type": "string",
                            "label": "User Agent",
                            "secret": false,
                            "default": "{event.properties.$raw_user_agent}",
                            "required": false,
                            "description": "The user agent of the device sending the event."
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": false,
                            "description": "The timestamp when the event was triggered."
                        },
                        {
                            "key": "identifiers",
                            "type": "dictionary",
                            "label": "Identifiers",
                            "secret": false,
                            "default": {
                                "ga": "{event.properties.ga}",
                                "fbc": "{event.properties.fbc}",
                                "fbp": "{event.properties.fbp}",
                                "userId": "{person.id}",
                                "clientId": "{event.distinct_id}",
                                "anonymousId": "{event.distinct_id}"
                            },
                            "required": true,
                            "description": "Identifiers for the user"
                        },
                        {
                            "key": "page",
                            "type": "dictionary",
                            "label": "Page",
                            "secret": false,
                            "default": {
                                "url": "{event.properties.$current_url}",
                                "referrer": "{event.properties.$referrer}"
                            },
                            "required": false,
                            "description": "Page details to send with the event"
                        },
                        {
                            "key": "customAttributes",
                            "type": "dictionary",
                            "label": "Custom Attributes",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "Custom attributes for the event. Data should be specified as key:value pairs"
                        },
                        {
                            "key": "customer",
                            "type": "dictionary",
                            "label": "Customer",
                            "secret": false,
                            "default": {
                                "dob": "{person.properties.birthday ?? person.properties.birthday}",
                                "email": "{person.properties.email ?? person.properties.email}",
                                "phone": "{person.properties.phone ?? person.properties.phone}",
                                "lastName": "{person.properties.last_name ?? person.properties.last_name}",
                                "firstName": "{person.properties.first_name ?? person.properties.first_name}"
                            },
                            "required": false,
                            "description": "Customer details"
                        },
                        {
                            "key": "cart",
                            "type": "dictionary",
                            "label": "Cart",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "Cart details"
                        },
                        {
                            "key": "cartLines",
                            "type": "string",
                            "label": "Cart Line Items",
                            "secret": false,
                            "default": "{event.properties.products}",
                            "required": false,
                            "description": "Cart Line Item details"
                        },
                        {
                            "key": "eventName",
                            "type": "choice",
                            "label": "Event Name",
                            "secret": false,
                            "choices": [
                                {
                                    "label": "page_viewed",
                                    "value": "page_viewed"
                                },
                                {
                                    "label": "cart_viewed",
                                    "value": "cart_viewed"
                                }
                            ],
                            "required": true,
                            "description": "The name of the event to track."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "saveBaseEvent",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Save Event - Checkout Address Info Submitted",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event = 'Checkout Address Info Submitted'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "eventId",
                            "type": "string",
                            "label": "Event ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": true,
                            "description": "A unique event identifier."
                        },
                        {
                            "key": "ipAddress",
                            "type": "string",
                            "label": "IP Address",
                            "secret": false,
                            "default": "{event.properties.$ip}",
                            "required": false,
                            "description": "The IP address of the user."
                        },
                        {
                            "key": "userAgent",
                            "type": "string",
                            "label": "User Agent",
                            "secret": false,
                            "default": "{event.properties.$raw_user_agent}",
                            "required": false,
                            "description": "The user agent of the device sending the event."
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": false,
                            "description": "The timestamp when the event was triggered."
                        },
                        {
                            "key": "identifiers",
                            "type": "dictionary",
                            "label": "Identifiers",
                            "secret": false,
                            "default": {
                                "ga": "{event.properties.ga}",
                                "fbc": "{event.properties.fbc}",
                                "fbp": "{event.properties.fbp}",
                                "userId": "{person.id}",
                                "clientId": "{event.distinct_id}",
                                "anonymousId": "{event.distinct_id}"
                            },
                            "required": true,
                            "description": "Identifiers for the user"
                        },
                        {
                            "key": "page",
                            "type": "dictionary",
                            "label": "Page",
                            "secret": false,
                            "default": {
                                "url": "{event.properties.$current_url}",
                                "referrer": "{event.properties.$referrer}"
                            },
                            "required": false,
                            "description": "Page details to send with the event"
                        },
                        {
                            "key": "customAttributes",
                            "type": "dictionary",
                            "label": "Custom Attributes",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "Custom attributes for the event. Data should be specified as key:value pairs"
                        },
                        {
                            "key": "customer",
                            "type": "dictionary",
                            "label": "Customer",
                            "secret": false,
                            "default": {
                                "dob": "{person.properties.birthday ?? person.properties.birthday}",
                                "email": "{person.properties.email ?? person.properties.email}",
                                "phone": "{person.properties.phone ?? person.properties.phone}",
                                "lastName": "{person.properties.last_name ?? person.properties.last_name}",
                                "firstName": "{person.properties.first_name ?? person.properties.first_name}"
                            },
                            "required": false,
                            "description": "Customer details"
                        },
                        {
                            "key": "checkout",
                            "type": "dictionary",
                            "label": "Checkout",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "Checkout details"
                        },
                        {
                            "key": "checkoutLineItems",
                            "type": "string",
                            "label": "Checkout Line Items",
                            "secret": false,
                            "default": "{event.properties.products}",
                            "required": false,
                            "description": "Checkout Line Item details"
                        },
                        {
                            "key": "checkoutBillingAddress",
                            "type": "dictionary",
                            "label": "Checkout Billing Address",
                            "secret": false,
                            "default": {
                                "zip": "{event.properties.billing_address.zip}",
                                "city": "{event.properties.billing_address.city}",
                                "phone": "{event.properties.billing_address.phone}",
                                "country": "{event.properties.billing_address.country}",
                                "address1": "{event.properties.billing_address.address1}",
                                "address2": "{event.properties.billing_address.address2}",
                                "province": "{event.properties.billing_address.province}",
                                "last_name": "{event.properties.billing_address.last_name}",
                                "first_name": "{event.properties.billing_address.first_name}",
                                "country_code": "{event.properties.billing_address.country_code}",
                                "province_code": "{event.properties.billing_address.province_code}"
                            },
                            "required": false,
                            "description": "The billing address associated with the checkout."
                        },
                        {
                            "key": "checkoutShippingAddress",
                            "type": "dictionary",
                            "label": "Checkout Shipping Address",
                            "secret": false,
                            "default": {
                                "zip": "{event.properties.shipping_address.zip}",
                                "city": "{event.properties.shipping_address.city}",
                                "phone": "{event.properties.shipping_address.phone}",
                                "country": "{event.properties.shipping_address.country}",
                                "address1": "{event.properties.shipping_address.address1}",
                                "address2": "{event.properties.shipping_address.address2}",
                                "province": "{event.properties.shipping_address.province}",
                                "last_name": "{event.properties.shipping_address.last_name}",
                                "first_name": "{event.properties.shipping_address.first_name}",
                                "country_code": "{event.properties.shipping_address.country_code}",
                                "province_code": "{event.properties.shipping_address.province_code}"
                            },
                            "required": false,
                            "description": "The address to which the order will be shipped."
                        },
                        {
                            "key": "eventName",
                            "type": "choice",
                            "label": "Checkout Event Name",
                            "secret": false,
                            "choices": [
                                {
                                    "label": "checkout_address_info_submitted",
                                    "value": "checkout_address_info_submitted"
                                },
                                {
                                    "label": "checkout_completed",
                                    "value": "checkout_completed"
                                },
                                {
                                    "label": "checkout_contact_info_submitted",
                                    "value": "checkout_contact_info_submitted"
                                },
                                {
                                    "label": "checkout_shipping_info_submitted",
                                    "value": "checkout_shipping_info_submitted"
                                },
                                {
                                    "label": "checkout_started",
                                    "value": "checkout_started"
                                },
                                {
                                    "label": "payment_info_submitted",
                                    "value": "payment_info_submitted"
                                }
                            ],
                            "default": "checkout_address_info_submitted",
                            "required": true,
                            "description": "The name of the Checkout Event to track."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "saveCheckoutEvent",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Save Event - Checkout Completed",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event = 'Order Completed'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "eventId",
                            "type": "string",
                            "label": "Event ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": true,
                            "description": "A unique event identifier."
                        },
                        {
                            "key": "ipAddress",
                            "type": "string",
                            "label": "IP Address",
                            "secret": false,
                            "default": "{event.properties.$ip}",
                            "required": false,
                            "description": "The IP address of the user."
                        },
                        {
                            "key": "userAgent",
                            "type": "string",
                            "label": "User Agent",
                            "secret": false,
                            "default": "{event.properties.$raw_user_agent}",
                            "required": false,
                            "description": "The user agent of the device sending the event."
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": false,
                            "description": "The timestamp when the event was triggered."
                        },
                        {
                            "key": "identifiers",
                            "type": "dictionary",
                            "label": "Identifiers",
                            "secret": false,
                            "default": {
                                "ga": "{event.properties.ga}",
                                "fbc": "{event.properties.fbc}",
                                "fbp": "{event.properties.fbp}",
                                "userId": "{person.id}",
                                "clientId": "{event.distinct_id}",
                                "anonymousId": "{event.distinct_id}"
                            },
                            "required": true,
                            "description": "Identifiers for the user"
                        },
                        {
                            "key": "page",
                            "type": "dictionary",
                            "label": "Page",
                            "secret": false,
                            "default": {
                                "url": "{event.properties.$current_url}",
                                "referrer": "{event.properties.$referrer}"
                            },
                            "required": false,
                            "description": "Page details to send with the event"
                        },
                        {
                            "key": "customAttributes",
                            "type": "dictionary",
                            "label": "Custom Attributes",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "Custom attributes for the event. Data should be specified as key:value pairs"
                        },
                        {
                            "key": "customer",
                            "type": "dictionary",
                            "label": "Customer",
                            "secret": false,
                            "default": {
                                "dob": "{person.properties.birthday ?? person.properties.birthday}",
                                "email": "{person.properties.email ?? person.properties.email}",
                                "phone": "{person.properties.phone ?? person.properties.phone}",
                                "lastName": "{person.properties.last_name ?? person.properties.last_name}",
                                "firstName": "{person.properties.first_name ?? person.properties.first_name}"
                            },
                            "required": false,
                            "description": "Customer details"
                        },
                        {
                            "key": "checkout",
                            "type": "dictionary",
                            "label": "Checkout",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "Checkout details"
                        },
                        {
                            "key": "checkoutLineItems",
                            "type": "string",
                            "label": "Checkout Line Items",
                            "secret": false,
                            "default": "{event.properties.products}",
                            "required": false,
                            "description": "Checkout Line Item details"
                        },
                        {
                            "key": "checkoutBillingAddress",
                            "type": "dictionary",
                            "label": "Checkout Billing Address",
                            "secret": false,
                            "default": {
                                "zip": "{event.properties.billing_address.zip}",
                                "city": "{event.properties.billing_address.city}",
                                "phone": "{event.properties.billing_address.phone}",
                                "country": "{event.properties.billing_address.country}",
                                "address1": "{event.properties.billing_address.address1}",
                                "address2": "{event.properties.billing_address.address2}",
                                "province": "{event.properties.billing_address.province}",
                                "last_name": "{event.properties.billing_address.last_name}",
                                "first_name": "{event.properties.billing_address.first_name}",
                                "country_code": "{event.properties.billing_address.country_code}",
                                "province_code": "{event.properties.billing_address.province_code}"
                            },
                            "required": false,
                            "description": "The billing address associated with the checkout."
                        },
                        {
                            "key": "checkoutShippingAddress",
                            "type": "dictionary",
                            "label": "Checkout Shipping Address",
                            "secret": false,
                            "default": {
                                "zip": "{event.properties.shipping_address.zip}",
                                "city": "{event.properties.shipping_address.city}",
                                "phone": "{event.properties.shipping_address.phone}",
                                "country": "{event.properties.shipping_address.country}",
                                "address1": "{event.properties.shipping_address.address1}",
                                "address2": "{event.properties.shipping_address.address2}",
                                "province": "{event.properties.shipping_address.province}",
                                "last_name": "{event.properties.shipping_address.last_name}",
                                "first_name": "{event.properties.shipping_address.first_name}",
                                "country_code": "{event.properties.shipping_address.country_code}",
                                "province_code": "{event.properties.shipping_address.province_code}"
                            },
                            "required": false,
                            "description": "The address to which the order will be shipped."
                        },
                        {
                            "key": "eventName",
                            "type": "choice",
                            "label": "Checkout Event Name",
                            "secret": false,
                            "choices": [
                                {
                                    "label": "checkout_address_info_submitted",
                                    "value": "checkout_address_info_submitted"
                                },
                                {
                                    "label": "checkout_completed",
                                    "value": "checkout_completed"
                                },
                                {
                                    "label": "checkout_contact_info_submitted",
                                    "value": "checkout_contact_info_submitted"
                                },
                                {
                                    "label": "checkout_shipping_info_submitted",
                                    "value": "checkout_shipping_info_submitted"
                                },
                                {
                                    "label": "checkout_started",
                                    "value": "checkout_started"
                                },
                                {
                                    "label": "payment_info_submitted",
                                    "value": "payment_info_submitted"
                                }
                            ],
                            "default": "checkout_completed",
                            "required": true,
                            "description": "The name of the Checkout Event to track."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "saveCheckoutEvent",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Save Event - Checkout Contact Info Submitted",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event = 'Checkout Contact Info Submitted'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "eventId",
                            "type": "string",
                            "label": "Event ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": true,
                            "description": "A unique event identifier."
                        },
                        {
                            "key": "ipAddress",
                            "type": "string",
                            "label": "IP Address",
                            "secret": false,
                            "default": "{event.properties.$ip}",
                            "required": false,
                            "description": "The IP address of the user."
                        },
                        {
                            "key": "userAgent",
                            "type": "string",
                            "label": "User Agent",
                            "secret": false,
                            "default": "{event.properties.$raw_user_agent}",
                            "required": false,
                            "description": "The user agent of the device sending the event."
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": false,
                            "description": "The timestamp when the event was triggered."
                        },
                        {
                            "key": "identifiers",
                            "type": "dictionary",
                            "label": "Identifiers",
                            "secret": false,
                            "default": {
                                "ga": "{event.properties.ga}",
                                "fbc": "{event.properties.fbc}",
                                "fbp": "{event.properties.fbp}",
                                "userId": "{person.id}",
                                "clientId": "{event.distinct_id}",
                                "anonymousId": "{event.distinct_id}"
                            },
                            "required": true,
                            "description": "Identifiers for the user"
                        },
                        {
                            "key": "page",
                            "type": "dictionary",
                            "label": "Page",
                            "secret": false,
                            "default": {
                                "url": "{event.properties.$current_url}",
                                "referrer": "{event.properties.$referrer}"
                            },
                            "required": false,
                            "description": "Page details to send with the event"
                        },
                        {
                            "key": "customAttributes",
                            "type": "dictionary",
                            "label": "Custom Attributes",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "Custom attributes for the event. Data should be specified as key:value pairs"
                        },
                        {
                            "key": "customer",
                            "type": "dictionary",
                            "label": "Customer",
                            "secret": false,
                            "default": {
                                "dob": "{person.properties.birthday ?? person.properties.birthday}",
                                "email": "{person.properties.email ?? person.properties.email}",
                                "phone": "{person.properties.phone ?? person.properties.phone}",
                                "lastName": "{person.properties.last_name ?? person.properties.last_name}",
                                "firstName": "{person.properties.first_name ?? person.properties.first_name}"
                            },
                            "required": false,
                            "description": "Customer details"
                        },
                        {
                            "key": "checkout",
                            "type": "dictionary",
                            "label": "Checkout",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "Checkout details"
                        },
                        {
                            "key": "checkoutLineItems",
                            "type": "string",
                            "label": "Checkout Line Items",
                            "secret": false,
                            "default": "{event.properties.products}",
                            "required": false,
                            "description": "Checkout Line Item details"
                        },
                        {
                            "key": "checkoutBillingAddress",
                            "type": "dictionary",
                            "label": "Checkout Billing Address",
                            "secret": false,
                            "default": {
                                "zip": "{event.properties.billing_address.zip}",
                                "city": "{event.properties.billing_address.city}",
                                "phone": "{event.properties.billing_address.phone}",
                                "country": "{event.properties.billing_address.country}",
                                "address1": "{event.properties.billing_address.address1}",
                                "address2": "{event.properties.billing_address.address2}",
                                "province": "{event.properties.billing_address.province}",
                                "last_name": "{event.properties.billing_address.last_name}",
                                "first_name": "{event.properties.billing_address.first_name}",
                                "country_code": "{event.properties.billing_address.country_code}",
                                "province_code": "{event.properties.billing_address.province_code}"
                            },
                            "required": false,
                            "description": "The billing address associated with the checkout."
                        },
                        {
                            "key": "checkoutShippingAddress",
                            "type": "dictionary",
                            "label": "Checkout Shipping Address",
                            "secret": false,
                            "default": {
                                "zip": "{event.properties.shipping_address.zip}",
                                "city": "{event.properties.shipping_address.city}",
                                "phone": "{event.properties.shipping_address.phone}",
                                "country": "{event.properties.shipping_address.country}",
                                "address1": "{event.properties.shipping_address.address1}",
                                "address2": "{event.properties.shipping_address.address2}",
                                "province": "{event.properties.shipping_address.province}",
                                "last_name": "{event.properties.shipping_address.last_name}",
                                "first_name": "{event.properties.shipping_address.first_name}",
                                "country_code": "{event.properties.shipping_address.country_code}",
                                "province_code": "{event.properties.shipping_address.province_code}"
                            },
                            "required": false,
                            "description": "The address to which the order will be shipped."
                        },
                        {
                            "key": "eventName",
                            "type": "choice",
                            "label": "Checkout Event Name",
                            "secret": false,
                            "choices": [
                                {
                                    "label": "checkout_address_info_submitted",
                                    "value": "checkout_address_info_submitted"
                                },
                                {
                                    "label": "checkout_completed",
                                    "value": "checkout_completed"
                                },
                                {
                                    "label": "checkout_contact_info_submitted",
                                    "value": "checkout_contact_info_submitted"
                                },
                                {
                                    "label": "checkout_shipping_info_submitted",
                                    "value": "checkout_shipping_info_submitted"
                                },
                                {
                                    "label": "checkout_started",
                                    "value": "checkout_started"
                                },
                                {
                                    "label": "payment_info_submitted",
                                    "value": "payment_info_submitted"
                                }
                            ],
                            "default": "checkout_contact_info_submitted",
                            "required": true,
                            "description": "The name of the Checkout Event to track."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "saveCheckoutEvent",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Save Event - Checkout Shipping Info Submitted",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event = 'Checkout Shipping Info Submitted'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "eventId",
                            "type": "string",
                            "label": "Event ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": true,
                            "description": "A unique event identifier."
                        },
                        {
                            "key": "ipAddress",
                            "type": "string",
                            "label": "IP Address",
                            "secret": false,
                            "default": "{event.properties.$ip}",
                            "required": false,
                            "description": "The IP address of the user."
                        },
                        {
                            "key": "userAgent",
                            "type": "string",
                            "label": "User Agent",
                            "secret": false,
                            "default": "{event.properties.$raw_user_agent}",
                            "required": false,
                            "description": "The user agent of the device sending the event."
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": false,
                            "description": "The timestamp when the event was triggered."
                        },
                        {
                            "key": "identifiers",
                            "type": "dictionary",
                            "label": "Identifiers",
                            "secret": false,
                            "default": {
                                "ga": "{event.properties.ga}",
                                "fbc": "{event.properties.fbc}",
                                "fbp": "{event.properties.fbp}",
                                "userId": "{person.id}",
                                "clientId": "{event.distinct_id}",
                                "anonymousId": "{event.distinct_id}"
                            },
                            "required": true,
                            "description": "Identifiers for the user"
                        },
                        {
                            "key": "page",
                            "type": "dictionary",
                            "label": "Page",
                            "secret": false,
                            "default": {
                                "url": "{event.properties.$current_url}",
                                "referrer": "{event.properties.$referrer}"
                            },
                            "required": false,
                            "description": "Page details to send with the event"
                        },
                        {
                            "key": "customAttributes",
                            "type": "dictionary",
                            "label": "Custom Attributes",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "Custom attributes for the event. Data should be specified as key:value pairs"
                        },
                        {
                            "key": "customer",
                            "type": "dictionary",
                            "label": "Customer",
                            "secret": false,
                            "default": {
                                "dob": "{person.properties.birthday ?? person.properties.birthday}",
                                "email": "{person.properties.email ?? person.properties.email}",
                                "phone": "{person.properties.phone ?? person.properties.phone}",
                                "lastName": "{person.properties.last_name ?? person.properties.last_name}",
                                "firstName": "{person.properties.first_name ?? person.properties.first_name}"
                            },
                            "required": false,
                            "description": "Customer details"
                        },
                        {
                            "key": "checkout",
                            "type": "dictionary",
                            "label": "Checkout",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "Checkout details"
                        },
                        {
                            "key": "checkoutLineItems",
                            "type": "string",
                            "label": "Checkout Line Items",
                            "secret": false,
                            "default": "{event.properties.products}",
                            "required": false,
                            "description": "Checkout Line Item details"
                        },
                        {
                            "key": "checkoutBillingAddress",
                            "type": "dictionary",
                            "label": "Checkout Billing Address",
                            "secret": false,
                            "default": {
                                "zip": "{event.properties.billing_address.zip}",
                                "city": "{event.properties.billing_address.city}",
                                "phone": "{event.properties.billing_address.phone}",
                                "country": "{event.properties.billing_address.country}",
                                "address1": "{event.properties.billing_address.address1}",
                                "address2": "{event.properties.billing_address.address2}",
                                "province": "{event.properties.billing_address.province}",
                                "last_name": "{event.properties.billing_address.last_name}",
                                "first_name": "{event.properties.billing_address.first_name}",
                                "country_code": "{event.properties.billing_address.country_code}",
                                "province_code": "{event.properties.billing_address.province_code}"
                            },
                            "required": false,
                            "description": "The billing address associated with the checkout."
                        },
                        {
                            "key": "checkoutShippingAddress",
                            "type": "dictionary",
                            "label": "Checkout Shipping Address",
                            "secret": false,
                            "default": {
                                "zip": "{event.properties.shipping_address.zip}",
                                "city": "{event.properties.shipping_address.city}",
                                "phone": "{event.properties.shipping_address.phone}",
                                "country": "{event.properties.shipping_address.country}",
                                "address1": "{event.properties.shipping_address.address1}",
                                "address2": "{event.properties.shipping_address.address2}",
                                "province": "{event.properties.shipping_address.province}",
                                "last_name": "{event.properties.shipping_address.last_name}",
                                "first_name": "{event.properties.shipping_address.first_name}",
                                "country_code": "{event.properties.shipping_address.country_code}",
                                "province_code": "{event.properties.shipping_address.province_code}"
                            },
                            "required": false,
                            "description": "The address to which the order will be shipped."
                        },
                        {
                            "key": "eventName",
                            "type": "choice",
                            "label": "Checkout Event Name",
                            "secret": false,
                            "choices": [
                                {
                                    "label": "checkout_address_info_submitted",
                                    "value": "checkout_address_info_submitted"
                                },
                                {
                                    "label": "checkout_completed",
                                    "value": "checkout_completed"
                                },
                                {
                                    "label": "checkout_contact_info_submitted",
                                    "value": "checkout_contact_info_submitted"
                                },
                                {
                                    "label": "checkout_shipping_info_submitted",
                                    "value": "checkout_shipping_info_submitted"
                                },
                                {
                                    "label": "checkout_started",
                                    "value": "checkout_started"
                                },
                                {
                                    "label": "payment_info_submitted",
                                    "value": "payment_info_submitted"
                                }
                            ],
                            "default": "checkout_shipping_info_submitted",
                            "required": true,
                            "description": "The name of the Checkout Event to track."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "saveCheckoutEvent",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Save Event - Checkout Started",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event = 'Checkout Started'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "eventId",
                            "type": "string",
                            "label": "Event ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": true,
                            "description": "A unique event identifier."
                        },
                        {
                            "key": "ipAddress",
                            "type": "string",
                            "label": "IP Address",
                            "secret": false,
                            "default": "{event.properties.$ip}",
                            "required": false,
                            "description": "The IP address of the user."
                        },
                        {
                            "key": "userAgent",
                            "type": "string",
                            "label": "User Agent",
                            "secret": false,
                            "default": "{event.properties.$raw_user_agent}",
                            "required": false,
                            "description": "The user agent of the device sending the event."
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": false,
                            "description": "The timestamp when the event was triggered."
                        },
                        {
                            "key": "identifiers",
                            "type": "dictionary",
                            "label": "Identifiers",
                            "secret": false,
                            "default": {
                                "ga": "{event.properties.ga}",
                                "fbc": "{event.properties.fbc}",
                                "fbp": "{event.properties.fbp}",
                                "userId": "{person.id}",
                                "clientId": "{event.distinct_id}",
                                "anonymousId": "{event.distinct_id}"
                            },
                            "required": true,
                            "description": "Identifiers for the user"
                        },
                        {
                            "key": "page",
                            "type": "dictionary",
                            "label": "Page",
                            "secret": false,
                            "default": {
                                "url": "{event.properties.$current_url}",
                                "referrer": "{event.properties.$referrer}"
                            },
                            "required": false,
                            "description": "Page details to send with the event"
                        },
                        {
                            "key": "customAttributes",
                            "type": "dictionary",
                            "label": "Custom Attributes",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "Custom attributes for the event. Data should be specified as key:value pairs"
                        },
                        {
                            "key": "customer",
                            "type": "dictionary",
                            "label": "Customer",
                            "secret": false,
                            "default": {
                                "dob": "{person.properties.birthday ?? person.properties.birthday}",
                                "email": "{person.properties.email ?? person.properties.email}",
                                "phone": "{person.properties.phone ?? person.properties.phone}",
                                "lastName": "{person.properties.last_name ?? person.properties.last_name}",
                                "firstName": "{person.properties.first_name ?? person.properties.first_name}"
                            },
                            "required": false,
                            "description": "Customer details"
                        },
                        {
                            "key": "checkout",
                            "type": "dictionary",
                            "label": "Checkout",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "Checkout details"
                        },
                        {
                            "key": "checkoutLineItems",
                            "type": "string",
                            "label": "Checkout Line Items",
                            "secret": false,
                            "default": "{event.properties.products}",
                            "required": false,
                            "description": "Checkout Line Item details"
                        },
                        {
                            "key": "checkoutBillingAddress",
                            "type": "dictionary",
                            "label": "Checkout Billing Address",
                            "secret": false,
                            "default": {
                                "zip": "{event.properties.billing_address.zip}",
                                "city": "{event.properties.billing_address.city}",
                                "phone": "{event.properties.billing_address.phone}",
                                "country": "{event.properties.billing_address.country}",
                                "address1": "{event.properties.billing_address.address1}",
                                "address2": "{event.properties.billing_address.address2}",
                                "province": "{event.properties.billing_address.province}",
                                "last_name": "{event.properties.billing_address.last_name}",
                                "first_name": "{event.properties.billing_address.first_name}",
                                "country_code": "{event.properties.billing_address.country_code}",
                                "province_code": "{event.properties.billing_address.province_code}"
                            },
                            "required": false,
                            "description": "The billing address associated with the checkout."
                        },
                        {
                            "key": "checkoutShippingAddress",
                            "type": "dictionary",
                            "label": "Checkout Shipping Address",
                            "secret": false,
                            "default": {
                                "zip": "{event.properties.shipping_address.zip}",
                                "city": "{event.properties.shipping_address.city}",
                                "phone": "{event.properties.shipping_address.phone}",
                                "country": "{event.properties.shipping_address.country}",
                                "address1": "{event.properties.shipping_address.address1}",
                                "address2": "{event.properties.shipping_address.address2}",
                                "province": "{event.properties.shipping_address.province}",
                                "last_name": "{event.properties.shipping_address.last_name}",
                                "first_name": "{event.properties.shipping_address.first_name}",
                                "country_code": "{event.properties.shipping_address.country_code}",
                                "province_code": "{event.properties.shipping_address.province_code}"
                            },
                            "required": false,
                            "description": "The address to which the order will be shipped."
                        },
                        {
                            "key": "eventName",
                            "type": "choice",
                            "label": "Checkout Event Name",
                            "secret": false,
                            "choices": [
                                {
                                    "label": "checkout_address_info_submitted",
                                    "value": "checkout_address_info_submitted"
                                },
                                {
                                    "label": "checkout_completed",
                                    "value": "checkout_completed"
                                },
                                {
                                    "label": "checkout_contact_info_submitted",
                                    "value": "checkout_contact_info_submitted"
                                },
                                {
                                    "label": "checkout_shipping_info_submitted",
                                    "value": "checkout_shipping_info_submitted"
                                },
                                {
                                    "label": "checkout_started",
                                    "value": "checkout_started"
                                },
                                {
                                    "label": "payment_info_submitted",
                                    "value": "payment_info_submitted"
                                }
                            ],
                            "default": "checkout_started",
                            "required": true,
                            "description": "The name of the Checkout Event to track."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "saveCheckoutEvent",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Save Event - Checkout Payment Info Submitted",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event = 'Payment Info Entered'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "eventId",
                            "type": "string",
                            "label": "Event ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": true,
                            "description": "A unique event identifier."
                        },
                        {
                            "key": "ipAddress",
                            "type": "string",
                            "label": "IP Address",
                            "secret": false,
                            "default": "{event.properties.$ip}",
                            "required": false,
                            "description": "The IP address of the user."
                        },
                        {
                            "key": "userAgent",
                            "type": "string",
                            "label": "User Agent",
                            "secret": false,
                            "default": "{event.properties.$raw_user_agent}",
                            "required": false,
                            "description": "The user agent of the device sending the event."
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": false,
                            "description": "The timestamp when the event was triggered."
                        },
                        {
                            "key": "identifiers",
                            "type": "dictionary",
                            "label": "Identifiers",
                            "secret": false,
                            "default": {
                                "ga": "{event.properties.ga}",
                                "fbc": "{event.properties.fbc}",
                                "fbp": "{event.properties.fbp}",
                                "userId": "{person.id}",
                                "clientId": "{event.distinct_id}",
                                "anonymousId": "{event.distinct_id}"
                            },
                            "required": true,
                            "description": "Identifiers for the user"
                        },
                        {
                            "key": "page",
                            "type": "dictionary",
                            "label": "Page",
                            "secret": false,
                            "default": {
                                "url": "{event.properties.$current_url}",
                                "referrer": "{event.properties.$referrer}"
                            },
                            "required": false,
                            "description": "Page details to send with the event"
                        },
                        {
                            "key": "customAttributes",
                            "type": "dictionary",
                            "label": "Custom Attributes",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "Custom attributes for the event. Data should be specified as key:value pairs"
                        },
                        {
                            "key": "customer",
                            "type": "dictionary",
                            "label": "Customer",
                            "secret": false,
                            "default": {
                                "dob": "{person.properties.birthday ?? person.properties.birthday}",
                                "email": "{person.properties.email ?? person.properties.email}",
                                "phone": "{person.properties.phone ?? person.properties.phone}",
                                "lastName": "{person.properties.last_name ?? person.properties.last_name}",
                                "firstName": "{person.properties.first_name ?? person.properties.first_name}"
                            },
                            "required": false,
                            "description": "Customer details"
                        },
                        {
                            "key": "checkout",
                            "type": "dictionary",
                            "label": "Checkout",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "Checkout details"
                        },
                        {
                            "key": "checkoutLineItems",
                            "type": "string",
                            "label": "Checkout Line Items",
                            "secret": false,
                            "default": "{event.properties.products}",
                            "required": false,
                            "description": "Checkout Line Item details"
                        },
                        {
                            "key": "checkoutBillingAddress",
                            "type": "dictionary",
                            "label": "Checkout Billing Address",
                            "secret": false,
                            "default": {
                                "zip": "{event.properties.billing_address.zip}",
                                "city": "{event.properties.billing_address.city}",
                                "phone": "{event.properties.billing_address.phone}",
                                "country": "{event.properties.billing_address.country}",
                                "address1": "{event.properties.billing_address.address1}",
                                "address2": "{event.properties.billing_address.address2}",
                                "province": "{event.properties.billing_address.province}",
                                "last_name": "{event.properties.billing_address.last_name}",
                                "first_name": "{event.properties.billing_address.first_name}",
                                "country_code": "{event.properties.billing_address.country_code}",
                                "province_code": "{event.properties.billing_address.province_code}"
                            },
                            "required": false,
                            "description": "The billing address associated with the checkout."
                        },
                        {
                            "key": "checkoutShippingAddress",
                            "type": "dictionary",
                            "label": "Checkout Shipping Address",
                            "secret": false,
                            "default": {
                                "zip": "{event.properties.shipping_address.zip}",
                                "city": "{event.properties.shipping_address.city}",
                                "phone": "{event.properties.shipping_address.phone}",
                                "country": "{event.properties.shipping_address.country}",
                                "address1": "{event.properties.shipping_address.address1}",
                                "address2": "{event.properties.shipping_address.address2}",
                                "province": "{event.properties.shipping_address.province}",
                                "last_name": "{event.properties.shipping_address.last_name}",
                                "first_name": "{event.properties.shipping_address.first_name}",
                                "country_code": "{event.properties.shipping_address.country_code}",
                                "province_code": "{event.properties.shipping_address.province_code}"
                            },
                            "required": false,
                            "description": "The address to which the order will be shipped."
                        },
                        {
                            "key": "eventName",
                            "type": "choice",
                            "label": "Checkout Event Name",
                            "secret": false,
                            "choices": [
                                {
                                    "label": "checkout_address_info_submitted",
                                    "value": "checkout_address_info_submitted"
                                },
                                {
                                    "label": "checkout_completed",
                                    "value": "checkout_completed"
                                },
                                {
                                    "label": "checkout_contact_info_submitted",
                                    "value": "checkout_contact_info_submitted"
                                },
                                {
                                    "label": "checkout_shipping_info_submitted",
                                    "value": "checkout_shipping_info_submitted"
                                },
                                {
                                    "label": "checkout_started",
                                    "value": "checkout_started"
                                },
                                {
                                    "label": "payment_info_submitted",
                                    "value": "payment_info_submitted"
                                }
                            ],
                            "default": "checkout_payment_info_submitted",
                            "required": true,
                            "description": "The name of the Checkout Event to track."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "saveCheckoutEvent",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Save Event - Collection Viewed",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event = 'Product List Viewed'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "eventId",
                            "type": "string",
                            "label": "Event ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": true,
                            "description": "A unique event identifier."
                        },
                        {
                            "key": "ipAddress",
                            "type": "string",
                            "label": "IP Address",
                            "secret": false,
                            "default": "{event.properties.$ip}",
                            "required": false,
                            "description": "The IP address of the user."
                        },
                        {
                            "key": "userAgent",
                            "type": "string",
                            "label": "User Agent",
                            "secret": false,
                            "default": "{event.properties.$raw_user_agent}",
                            "required": false,
                            "description": "The user agent of the device sending the event."
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": false,
                            "description": "The timestamp when the event was triggered."
                        },
                        {
                            "key": "identifiers",
                            "type": "dictionary",
                            "label": "Identifiers",
                            "secret": false,
                            "default": {
                                "ga": "{event.properties.ga}",
                                "fbc": "{event.properties.fbc}",
                                "fbp": "{event.properties.fbp}",
                                "userId": "{person.id}",
                                "clientId": "{event.distinct_id}",
                                "anonymousId": "{event.distinct_id}"
                            },
                            "required": true,
                            "description": "Identifiers for the user"
                        },
                        {
                            "key": "page",
                            "type": "dictionary",
                            "label": "Page",
                            "secret": false,
                            "default": {
                                "url": "{event.properties.$current_url}",
                                "referrer": "{event.properties.$referrer}"
                            },
                            "required": false,
                            "description": "Page details to send with the event"
                        },
                        {
                            "key": "customAttributes",
                            "type": "dictionary",
                            "label": "Custom Attributes",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "Custom attributes for the event. Data should be specified as key:value pairs"
                        },
                        {
                            "key": "customer",
                            "type": "dictionary",
                            "label": "Customer",
                            "secret": false,
                            "default": {
                                "dob": "{person.properties.birthday ?? person.properties.birthday}",
                                "email": "{person.properties.email ?? person.properties.email}",
                                "phone": "{person.properties.phone ?? person.properties.phone}",
                                "lastName": "{person.properties.last_name ?? person.properties.last_name}",
                                "firstName": "{person.properties.first_name ?? person.properties.first_name}"
                            },
                            "required": false,
                            "description": "Customer details"
                        },
                        {
                            "key": "cart",
                            "type": "dictionary",
                            "label": "Cart",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "Cart details"
                        },
                        {
                            "key": "cartLines",
                            "type": "string",
                            "label": "Cart Line Items",
                            "secret": false,
                            "default": "{event.properties.products}",
                            "required": false,
                            "description": "Cart Line Item details"
                        },
                        {
                            "key": "collection",
                            "type": "dictionary",
                            "label": "Collection",
                            "secret": false,
                            "default": {
                                "id": "{event.properties.list_id}",
                                "title": "{event.properties.list_name}"
                            },
                            "required": false,
                            "description": "Collection details"
                        },
                        {
                            "key": "collectionProductVariants",
                            "type": "string",
                            "label": "Collection Product Variants",
                            "secret": false,
                            "default": "{event.properties.products}",
                            "required": false,
                            "description": "A list of product variants associated with the collection."
                        },
                        {
                            "key": "eventName",
                            "type": "choice",
                            "label": "Collection Event Name",
                            "secret": false,
                            "choices": [
                                {
                                    "label": "collection_viewed",
                                    "value": "collection_viewed"
                                }
                            ],
                            "default": "collection_viewed",
                            "required": true,
                            "description": "The name of the Collection Event to track."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "saveCollectionEvent",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Save Event - Search Submitted",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event = 'Products Searched'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "eventId",
                            "type": "string",
                            "label": "Event ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": true,
                            "description": "A unique event identifier."
                        },
                        {
                            "key": "ipAddress",
                            "type": "string",
                            "label": "IP Address",
                            "secret": false,
                            "default": "{event.properties.$ip}",
                            "required": false,
                            "description": "The IP address of the user."
                        },
                        {
                            "key": "userAgent",
                            "type": "string",
                            "label": "User Agent",
                            "secret": false,
                            "default": "{event.properties.$raw_user_agent}",
                            "required": false,
                            "description": "The user agent of the device sending the event."
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": false,
                            "description": "The timestamp when the event was triggered."
                        },
                        {
                            "key": "identifiers",
                            "type": "dictionary",
                            "label": "Identifiers",
                            "secret": false,
                            "default": {
                                "ga": "{event.properties.ga}",
                                "fbc": "{event.properties.fbc}",
                                "fbp": "{event.properties.fbp}",
                                "userId": "{person.id}",
                                "clientId": "{event.distinct_id}",
                                "anonymousId": "{event.distinct_id}"
                            },
                            "required": true,
                            "description": "Identifiers for the user"
                        },
                        {
                            "key": "page",
                            "type": "dictionary",
                            "label": "Page",
                            "secret": false,
                            "default": {
                                "url": "{event.properties.$current_url}",
                                "referrer": "{event.properties.$referrer}"
                            },
                            "required": false,
                            "description": "Page details to send with the event"
                        },
                        {
                            "key": "customAttributes",
                            "type": "dictionary",
                            "label": "Custom Attributes",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "Custom attributes for the event. Data should be specified as key:value pairs"
                        },
                        {
                            "key": "customer",
                            "type": "dictionary",
                            "label": "Customer",
                            "secret": false,
                            "default": {
                                "dob": "{person.properties.birthday ?? person.properties.birthday}",
                                "email": "{person.properties.email ?? person.properties.email}",
                                "phone": "{person.properties.phone ?? person.properties.phone}",
                                "lastName": "{person.properties.last_name ?? person.properties.last_name}",
                                "firstName": "{person.properties.first_name ?? person.properties.first_name}"
                            },
                            "required": false,
                            "description": "Customer details"
                        },
                        {
                            "key": "cart",
                            "type": "dictionary",
                            "label": "Cart",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "Cart details"
                        },
                        {
                            "key": "cartLines",
                            "type": "string",
                            "label": "Cart Line Items",
                            "secret": false,
                            "default": "{event.properties.products}",
                            "required": false,
                            "description": "Cart Line Item details"
                        },
                        {
                            "key": "searchResults",
                            "type": "string",
                            "label": "Search Results",
                            "secret": false,
                            "default": "{event.properties.products}",
                            "required": false,
                            "description": "Search results details"
                        },
                        {
                            "key": "query",
                            "type": "string",
                            "label": "Search Query",
                            "secret": false,
                            "default": "{event.properties.query}",
                            "required": false,
                            "description": "The search query that was executed."
                        },
                        {
                            "key": "eventName",
                            "type": "choice",
                            "label": "Search Event Name",
                            "secret": false,
                            "choices": [
                                {
                                    "label": "search_submitted",
                                    "value": "search_submitted"
                                }
                            ],
                            "default": "search_submitted",
                            "required": true,
                            "description": "The name of the Search event to track."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "saveSearchEvent",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Save Event - Product Added To Cart",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event = 'Product Added'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "eventId",
                            "type": "string",
                            "label": "Event ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": true,
                            "description": "A unique event identifier."
                        },
                        {
                            "key": "ipAddress",
                            "type": "string",
                            "label": "IP Address",
                            "secret": false,
                            "default": "{event.properties.$ip}",
                            "required": false,
                            "description": "The IP address of the user."
                        },
                        {
                            "key": "userAgent",
                            "type": "string",
                            "label": "User Agent",
                            "secret": false,
                            "default": "{event.properties.$raw_user_agent}",
                            "required": false,
                            "description": "The user agent of the device sending the event."
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": false,
                            "description": "The timestamp when the event was triggered."
                        },
                        {
                            "key": "identifiers",
                            "type": "dictionary",
                            "label": "Identifiers",
                            "secret": false,
                            "default": {
                                "ga": "{event.properties.ga}",
                                "fbc": "{event.properties.fbc}",
                                "fbp": "{event.properties.fbp}",
                                "userId": "{person.id}",
                                "clientId": "{event.distinct_id}",
                                "anonymousId": "{event.distinct_id}"
                            },
                            "required": true,
                            "description": "Identifiers for the user"
                        },
                        {
                            "key": "page",
                            "type": "dictionary",
                            "label": "Page",
                            "secret": false,
                            "default": {
                                "url": "{event.properties.$current_url}",
                                "referrer": "{event.properties.$referrer}"
                            },
                            "required": false,
                            "description": "Page details to send with the event"
                        },
                        {
                            "key": "customAttributes",
                            "type": "dictionary",
                            "label": "Custom Attributes",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "Custom attributes for the event. Data should be specified as key:value pairs"
                        },
                        {
                            "key": "customer",
                            "type": "dictionary",
                            "label": "Customer",
                            "secret": false,
                            "default": {
                                "dob": "{person.properties.birthday ?? person.properties.birthday}",
                                "email": "{person.properties.email ?? person.properties.email}",
                                "phone": "{person.properties.phone ?? person.properties.phone}",
                                "lastName": "{person.properties.last_name ?? person.properties.last_name}",
                                "firstName": "{person.properties.first_name ?? person.properties.first_name}"
                            },
                            "required": false,
                            "description": "Customer details"
                        },
                        {
                            "key": "cartLine",
                            "type": "string",
                            "label": "Cart Line",
                            "secret": false,
                            "default": "{event.properties.products}",
                            "required": false,
                            "description": "Cart Line details"
                        },
                        {
                            "key": "eventName",
                            "type": "choice",
                            "label": "Cart Event Name",
                            "secret": false,
                            "choices": [
                                {
                                    "label": "product_added_to_cart",
                                    "value": "product_added_to_cart"
                                },
                                {
                                    "label": "product_removed_from_cart",
                                    "value": "product_removed_from_cart"
                                }
                            ],
                            "default": "product_added_to_cart",
                            "required": true,
                            "description": "The name of the Cart Event to track."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "saveCartEvent",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Save Event - Product Removed From Cart",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event = 'Product Removed'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "eventId",
                            "type": "string",
                            "label": "Event ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": true,
                            "description": "A unique event identifier."
                        },
                        {
                            "key": "ipAddress",
                            "type": "string",
                            "label": "IP Address",
                            "secret": false,
                            "default": "{event.properties.$ip}",
                            "required": false,
                            "description": "The IP address of the user."
                        },
                        {
                            "key": "userAgent",
                            "type": "string",
                            "label": "User Agent",
                            "secret": false,
                            "default": "{event.properties.$raw_user_agent}",
                            "required": false,
                            "description": "The user agent of the device sending the event."
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": false,
                            "description": "The timestamp when the event was triggered."
                        },
                        {
                            "key": "identifiers",
                            "type": "dictionary",
                            "label": "Identifiers",
                            "secret": false,
                            "default": {
                                "ga": "{event.properties.ga}",
                                "fbc": "{event.properties.fbc}",
                                "fbp": "{event.properties.fbp}",
                                "userId": "{person.id}",
                                "clientId": "{event.distinct_id}",
                                "anonymousId": "{event.distinct_id}"
                            },
                            "required": true,
                            "description": "Identifiers for the user"
                        },
                        {
                            "key": "page",
                            "type": "dictionary",
                            "label": "Page",
                            "secret": false,
                            "default": {
                                "url": "{event.properties.$current_url}",
                                "referrer": "{event.properties.$referrer}"
                            },
                            "required": false,
                            "description": "Page details to send with the event"
                        },
                        {
                            "key": "customAttributes",
                            "type": "dictionary",
                            "label": "Custom Attributes",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "Custom attributes for the event. Data should be specified as key:value pairs"
                        },
                        {
                            "key": "customer",
                            "type": "dictionary",
                            "label": "Customer",
                            "secret": false,
                            "default": {
                                "dob": "{person.properties.birthday ?? person.properties.birthday}",
                                "email": "{person.properties.email ?? person.properties.email}",
                                "phone": "{person.properties.phone ?? person.properties.phone}",
                                "lastName": "{person.properties.last_name ?? person.properties.last_name}",
                                "firstName": "{person.properties.first_name ?? person.properties.first_name}"
                            },
                            "required": false,
                            "description": "Customer details"
                        },
                        {
                            "key": "cartLine",
                            "type": "string",
                            "label": "Cart Line",
                            "secret": false,
                            "default": "{event.properties.products}",
                            "required": false,
                            "description": "Cart Line details"
                        },
                        {
                            "key": "eventName",
                            "type": "choice",
                            "label": "Cart Event Name",
                            "secret": false,
                            "choices": [
                                {
                                    "label": "product_added_to_cart",
                                    "value": "product_added_to_cart"
                                },
                                {
                                    "label": "product_removed_from_cart",
                                    "value": "product_removed_from_cart"
                                }
                            ],
                            "default": "product_removed_from_cart",
                            "required": true,
                            "description": "The name of the Cart Event to track."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "saveCartEvent",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Save Event - Product Viewed",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event = 'Product Viewed'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "eventId",
                            "type": "string",
                            "label": "Event ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": true,
                            "description": "A unique event identifier."
                        },
                        {
                            "key": "ipAddress",
                            "type": "string",
                            "label": "IP Address",
                            "secret": false,
                            "default": "{event.properties.$ip}",
                            "required": false,
                            "description": "The IP address of the user."
                        },
                        {
                            "key": "userAgent",
                            "type": "string",
                            "label": "User Agent",
                            "secret": false,
                            "default": "{event.properties.$raw_user_agent}",
                            "required": false,
                            "description": "The user agent of the device sending the event."
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": false,
                            "description": "The timestamp when the event was triggered."
                        },
                        {
                            "key": "identifiers",
                            "type": "dictionary",
                            "label": "Identifiers",
                            "secret": false,
                            "default": {
                                "ga": "{event.properties.ga}",
                                "fbc": "{event.properties.fbc}",
                                "fbp": "{event.properties.fbp}",
                                "userId": "{person.id}",
                                "clientId": "{event.distinct_id}",
                                "anonymousId": "{event.distinct_id}"
                            },
                            "required": true,
                            "description": "Identifiers for the user"
                        },
                        {
                            "key": "page",
                            "type": "dictionary",
                            "label": "Page",
                            "secret": false,
                            "default": {
                                "url": "{event.properties.$current_url}",
                                "referrer": "{event.properties.$referrer}"
                            },
                            "required": false,
                            "description": "Page details to send with the event"
                        },
                        {
                            "key": "customAttributes",
                            "type": "dictionary",
                            "label": "Custom Attributes",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "Custom attributes for the event. Data should be specified as key:value pairs"
                        },
                        {
                            "key": "customer",
                            "type": "dictionary",
                            "label": "Customer",
                            "secret": false,
                            "default": {
                                "dob": "{person.properties.birthday ?? person.properties.birthday}",
                                "email": "{person.properties.email ?? person.properties.email}",
                                "phone": "{person.properties.phone ?? person.properties.phone}",
                                "lastName": "{person.properties.last_name ?? person.properties.last_name}",
                                "firstName": "{person.properties.first_name ?? person.properties.first_name}"
                            },
                            "required": false,
                            "description": "Customer details"
                        },
                        {
                            "key": "cart",
                            "type": "dictionary",
                            "label": "Cart",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "Cart details"
                        },
                        {
                            "key": "cartLines",
                            "type": "string",
                            "label": "Cart Line Items",
                            "secret": false,
                            "default": "{event.properties.products}",
                            "required": false,
                            "description": "Cart Line Item details"
                        },
                        {
                            "key": "productVariant",
                            "type": "dictionary",
                            "label": "Product Variant",
                            "secret": false,
                            "default": {
                                "id": "{event.properties.product_id}",
                                "sku": "{event.properties.sku}",
                                "url": "{event.properties.url}",
                                "type": "{event.properties.category}",
                                "title": "{event.properties.name}",
                                "vendor": "{event.properties.vendor}",
                                "imageSrc": "{event.properties.image_url}",
                                "variantId": "{event.properties.variant}",
                                "priceAmount": "{event.properties.price}",
                                "untranslatedTitle": "{\"@if\":{\"exists\":[{\"@path\":\"$.properties.variant\"}],\"then\":{\"@path\":\"$.properties.variant\"},\"else\":{\"@path\":\"$.properties.title\"}}}"
                            },
                            "required": false,
                            "description": "Product Variant details"
                        },
                        {
                            "key": "eventName",
                            "type": "choice",
                            "label": "Product Event Name",
                            "secret": false,
                            "choices": [
                                {
                                    "label": "product_viewed",
                                    "value": "product_viewed"
                                }
                            ],
                            "default": "product_viewed",
                            "required": true,
                            "description": "The name of the Product event to track."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "saveProductEvent",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Save Event - Form Submitted",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event = 'Form Submitted'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "eventId",
                            "type": "string",
                            "label": "Event ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": true,
                            "description": "A unique event identifier."
                        },
                        {
                            "key": "ipAddress",
                            "type": "string",
                            "label": "IP Address",
                            "secret": false,
                            "default": "{event.properties.$ip}",
                            "required": false,
                            "description": "The IP address of the user."
                        },
                        {
                            "key": "userAgent",
                            "type": "string",
                            "label": "User Agent",
                            "secret": false,
                            "default": "{event.properties.$raw_user_agent}",
                            "required": false,
                            "description": "The user agent of the device sending the event."
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": false,
                            "description": "The timestamp when the event was triggered."
                        },
                        {
                            "key": "identifiers",
                            "type": "dictionary",
                            "label": "Identifiers",
                            "secret": false,
                            "default": {
                                "ga": "{event.properties.ga}",
                                "fbc": "{event.properties.fbc}",
                                "fbp": "{event.properties.fbp}",
                                "userId": "{person.id}",
                                "clientId": "{event.distinct_id}",
                                "anonymousId": "{event.distinct_id}"
                            },
                            "required": true,
                            "description": "Identifiers for the user"
                        },
                        {
                            "key": "page",
                            "type": "dictionary",
                            "label": "Page",
                            "secret": false,
                            "default": {
                                "url": "{event.properties.$current_url}",
                                "referrer": "{event.properties.$referrer}"
                            },
                            "required": false,
                            "description": "Page details to send with the event"
                        },
                        {
                            "key": "customAttributes",
                            "type": "dictionary",
                            "label": "Custom Attributes",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "Custom attributes for the event. Data should be specified as key:value pairs"
                        },
                        {
                            "key": "customer",
                            "type": "dictionary",
                            "label": "Customer",
                            "secret": false,
                            "default": {
                                "dob": "{person.properties.birthday ?? person.properties.birthday}",
                                "email": "{person.properties.email ?? person.properties.email}",
                                "phone": "{person.properties.phone ?? person.properties.phone}",
                                "lastName": "{person.properties.last_name ?? person.properties.last_name}",
                                "firstName": "{person.properties.first_name ?? person.properties.first_name}"
                            },
                            "required": false,
                            "description": "Customer details"
                        },
                        {
                            "key": "cart",
                            "type": "dictionary",
                            "label": "Cart",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "Cart details"
                        },
                        {
                            "key": "cartLines",
                            "type": "string",
                            "label": "Cart Line Items",
                            "secret": false,
                            "default": "{event.properties.products}",
                            "required": false,
                            "description": "Cart Line Item details"
                        },
                        {
                            "key": "id",
                            "type": "string",
                            "label": "Form ID",
                            "secret": false,
                            "required": false,
                            "description": "The id attribute of an element."
                        },
                        {
                            "key": "action",
                            "type": "string",
                            "label": "Form Action",
                            "secret": false,
                            "required": false,
                            "description": "The action attribute of a form element."
                        },
                        {
                            "key": "elements",
                            "type": "string",
                            "label": "Form Elements",
                            "secret": false,
                            "default": "{event.properties.form.elements}",
                            "required": false,
                            "description": "A list of elements associated with the form."
                        },
                        {
                            "key": "eventName",
                            "type": "choice",
                            "label": "Form Event Name",
                            "secret": false,
                            "choices": [
                                {
                                    "label": "form_submitted",
                                    "value": "form_submitted"
                                }
                            ],
                            "default": "form_submitted",
                            "required": true,
                            "description": "The name of the Form Event to track."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "saveFormEvent",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Save Order",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event = 'Order Completed'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "line_items",
                            "type": "string",
                            "label": "Line items",
                            "secret": false,
                            "default": "{event.properties.products}",
                            "required": false,
                            "description": "list of line items associated with the order."
                        },
                        {
                            "key": "billing_address",
                            "type": "dictionary",
                            "label": "Billing Address",
                            "secret": false,
                            "default": {
                                "zip": "{event.properties.billing_address.zip}",
                                "city": "{event.properties.billing_address.city}",
                                "phone": "{event.properties.billing_address.phone}",
                                "country": "{event.properties.billing_address.country}",
                                "address1": "{event.properties.billing_address.address1}",
                                "address2": "{event.properties.billing_address.address2}",
                                "province": "{event.properties.billing_address.province}",
                                "last_name": "{event.properties.billing_address.last_name}",
                                "first_name": "{event.properties.billing_address.first_name}",
                                "country_code": "{event.properties.billing_address.country_code}",
                                "province_code": "{event.properties.billing_address.province_code}"
                            },
                            "required": false,
                            "description": "The mailing address associated with the payment method."
                        },
                        {
                            "key": "browser_ip",
                            "type": "string",
                            "label": "Browser IP",
                            "secret": false,
                            "default": "{event.properties.$ip}",
                            "required": false,
                            "description": "The IP address of the browser used by the customer when they placed the order. Both IPv4 and IPv6 are supported."
                        },
                        {
                            "key": "buyer_accepts_marketing",
                            "type": "string",
                            "label": "Buyer Accepts Marketing",
                            "secret": false,
                            "default": "{event.properties.buyer_accepts_marketing ?? person.properties.accepts_marketing}",
                            "required": false,
                            "description": "Whether the customer consented to receive email updates from the shop."
                        },
                        {
                            "key": "checkout_id",
                            "type": "string",
                            "label": "Checkout ID",
                            "secret": false,
                            "default": "{event.properties.checkout_id}",
                            "required": false,
                            "description": "The ID of the checkout."
                        },
                        {
                            "key": "client_details",
                            "type": "dictionary",
                            "label": "Client Details",
                            "secret": false,
                            "default": {
                                "browser_ip": "{event.properties.$ip}",
                                "user_agent": "{event.properties.$raw_user_agent}"
                            },
                            "required": false,
                            "description": "Information about the browser that the customer used when they placed their order."
                        },
                        {
                            "key": "confirmed",
                            "type": "string",
                            "label": "Confirmed",
                            "secret": false,
                            "default": "{event.properties.confirmed}",
                            "required": false,
                            "description": "Confirmed"
                        },
                        {
                            "key": "contact_email",
                            "type": "string",
                            "label": "Contact Email",
                            "secret": false,
                            "default": "{event.properties.contact_email ?? person.properties.email}",
                            "required": false,
                            "description": "Contact Email"
                        },
                        {
                            "key": "created_at",
                            "type": "string",
                            "label": "Created At",
                            "secret": false,
                            "default": "{event.properties.created_at}",
                            "required": false,
                            "description": "The autogenerated date and time (ISO 8601 format) when the order was created."
                        },
                        {
                            "key": "currency",
                            "type": "string",
                            "label": "Currency",
                            "secret": false,
                            "default": "{event.properties.currency}",
                            "required": false,
                            "description": "The three-letter code (ISO 4217 format) for the currency that the customer used when they paid for their last order."
                        },
                        {
                            "key": "current_subtotal_price",
                            "type": "string",
                            "label": "Current Subtotal Price",
                            "secret": false,
                            "default": "{event.properties.subtotal}",
                            "required": false,
                            "description": "The current subtotal price of the order in the shop currency. The value of this field reflects order edits, returns, and refunds."
                        },
                        {
                            "key": "current_total_discounts",
                            "type": "string",
                            "label": "Current Total Discounts",
                            "secret": false,
                            "default": "{event.properties.discount}",
                            "required": false,
                            "description": "The current total discounts on the order in the shop currency. The value of this field reflects order edits, returns, and refunds."
                        },
                        {
                            "key": "current_total_price",
                            "type": "string",
                            "label": "Current Total Price",
                            "secret": false,
                            "default": "{event.properties.current_total_price}",
                            "required": false,
                            "description": "The current total price of the order in the shop currency. The value of this field reflects order edits, returns, and refunds."
                        },
                        {
                            "key": "current_total_tax",
                            "type": "string",
                            "label": "Current Total Tax",
                            "secret": false,
                            "default": "{event.properties.tax}",
                            "required": false,
                            "description": "The current total taxes charged on the order in the shop currency. The value of this field reflects order edits, returns, or refunds."
                        },
                        {
                            "key": "customer_id",
                            "type": "string",
                            "label": "Customer ID",
                            "secret": false,
                            "default": "{person.id ?? person.properties.id}",
                            "required": false,
                            "description": "A unique identifier for the customer."
                        },
                        {
                            "key": "discount_applications",
                            "type": "string",
                            "label": "Discount Applications",
                            "secret": false,
                            "default": "{event.properties.discount_applications}",
                            "required": false,
                            "description": "An ordered list of stacked discount applications. The discount_applications property includes 3 types: discount_code, manual, and script. All 3 types share a common structure and have some type specific attributes."
                        },
                        {
                            "key": "discount_codes",
                            "type": "string",
                            "label": "Discount Codes",
                            "secret": false,
                            "default": "{event.properties.discount_codes}",
                            "required": false,
                            "description": "A list of discounts applied to the order."
                        },
                        {
                            "key": "email",
                            "type": "string",
                            "label": "Email",
                            "secret": false,
                            "default": "{event.properties.email ?? person.properties.email}",
                            "required": false,
                            "description": "The customer's email address."
                        },
                        {
                            "key": "estimated_taxes",
                            "type": "string",
                            "label": "Estimated Taxes",
                            "secret": false,
                            "default": "{event.properties.estimated_taxes}",
                            "required": false,
                            "description": "Whether taxes on the order are estimated. Many factors can change between the time a customer places an order and the time the order is shipped, which could affect the calculation of taxes."
                        },
                        {
                            "key": "financial_status",
                            "type": "string",
                            "label": "Financial Status",
                            "secret": false,
                            "default": "{event.properties.financial_status}",
                            "required": false,
                            "description": "The status of payments associated with the order."
                        },
                        {
                            "key": "fulfillment_status",
                            "type": "string",
                            "label": "Fulfillment Status",
                            "secret": false,
                            "default": "{event.properties.fulfillment_status}",
                            "required": false,
                            "description": "The order's status in terms of fulfilled line items."
                        },
                        {
                            "key": "gateway",
                            "type": "string",
                            "label": "Gateway",
                            "secret": false,
                            "default": "{event.properties.gateway}",
                            "required": false,
                            "description": "The payment gateway used."
                        },
                        {
                            "key": "id",
                            "type": "string",
                            "label": "ID",
                            "secret": false,
                            "default": "{event.properties.order_id}",
                            "required": true,
                            "description": "The ID of the order, used for API purposes."
                        },
                        {
                            "key": "landing_site",
                            "type": "string",
                            "label": "Landing Site",
                            "secret": false,
                            "default": "{event.properties.landing_site}",
                            "required": false,
                            "description": "The URL for the page where the buyer landed when they entered the shop."
                        },
                        {
                            "key": "landing_site_ref",
                            "type": "string",
                            "label": "Landing Site Ref",
                            "secret": false,
                            "default": "{event.properties.landing_site_ref}",
                            "required": false,
                            "description": "Landing Site Ref"
                        },
                        {
                            "key": "name",
                            "type": "string",
                            "label": "Name",
                            "secret": false,
                            "default": "{event.properties.name}",
                            "required": false,
                            "description": "The order name."
                        },
                        {
                            "key": "order_number",
                            "type": "string",
                            "label": "Order Number",
                            "secret": false,
                            "default": "{event.properties.order_number}",
                            "required": false,
                            "description": "The order position in the shop count of orders starting at 1001. Order numbers are sequential and start at 1001."
                        },
                        {
                            "key": "phone",
                            "type": "string",
                            "label": "Phone",
                            "secret": false,
                            "default": "{event.properties.phone}",
                            "required": false,
                            "description": "The customer's phone number for receiving SMS notifications."
                        },
                        {
                            "key": "processed_at",
                            "type": "string",
                            "label": "Processed At",
                            "secret": false,
                            "default": "{event.properties.processed_at}",
                            "required": false,
                            "description": "The date and time (ISO 8601 format) when an order was processed."
                        },
                        {
                            "key": "processing_method",
                            "type": "string",
                            "label": "Processing Method",
                            "secret": false,
                            "default": "{event.properties.processing_method}",
                            "required": false,
                            "description": "How the payment was processed."
                        },
                        {
                            "key": "reference",
                            "type": "string",
                            "label": "Reference",
                            "secret": false,
                            "default": "{event.properties.reference}",
                            "required": false,
                            "description": "Reference"
                        },
                        {
                            "key": "referring_site",
                            "type": "string",
                            "label": "Referring Site",
                            "secret": false,
                            "default": "{event.properties.referring_site}",
                            "required": false,
                            "description": "The website where the customer clicked a link to the shop."
                        },
                        {
                            "key": "shipping_address",
                            "type": "dictionary",
                            "label": "Shipping Address",
                            "secret": false,
                            "default": {
                                "zip": "{event.properties.shipping_address.zip}",
                                "city": "{event.properties.shipping_address.city}",
                                "phone": "{event.properties.shipping_address.phone}",
                                "country": "{event.properties.shipping_address.country}",
                                "address1": "{event.properties.shipping_address.address1}",
                                "address2": "{event.properties.shipping_address.address2}",
                                "province": "{event.properties.shipping_address.province}",
                                "last_name": "{event.properties.shipping_address.last_name}",
                                "first_name": "{event.properties.shipping_address.first_name}",
                                "country_code": "{event.properties.shipping_address.country_code}",
                                "province_code": "{event.properties.shipping_address.province_code}"
                            },
                            "required": false,
                            "description": "The mailing address associated with the payment method."
                        },
                        {
                            "key": "source_identifier",
                            "type": "string",
                            "label": "Source Identifier",
                            "secret": false,
                            "default": "{event.properties.source_identifier}",
                            "required": false,
                            "description": "The ID of the order placed on the originating platform."
                        },
                        {
                            "key": "source_name",
                            "type": "string",
                            "label": "Source Name",
                            "secret": false,
                            "default": "{event.properties.source_name}",
                            "required": false,
                            "description": "The source of the checkout."
                        },
                        {
                            "key": "source_url",
                            "type": "string",
                            "label": "Source URL",
                            "secret": false,
                            "default": "{event.properties.source_url}",
                            "required": false,
                            "description": "A valid URL to the original order on the originating surface."
                        },
                        {
                            "key": "subtotal_price",
                            "type": "string",
                            "label": "Subtotal Price",
                            "secret": false,
                            "default": "{event.properties.subtotal}",
                            "required": false,
                            "description": "The price of the order in the shop currency after discounts but before shipping, duties, taxes, and tips."
                        },
                        {
                            "key": "tags",
                            "type": "string",
                            "label": "Tags",
                            "secret": false,
                            "default": "{event.properties.tags}",
                            "required": false,
                            "description": "Tags attached to the order, formatted as a string of comma-separated values. Tags are additional short descriptors, commonly used for filtering and searching. Each individual tag is limited to 40 characters in length."
                        },
                        {
                            "key": "taxes_included",
                            "type": "string",
                            "label": "Taxes Included",
                            "secret": false,
                            "default": "{event.properties.taxes_included}",
                            "required": false,
                            "description": "Whether taxes are included in the order subtotal."
                        },
                        {
                            "key": "total_discounts",
                            "type": "string",
                            "label": "Total Discounts",
                            "secret": false,
                            "default": "{event.properties.discount}",
                            "required": false,
                            "description": "The total discounts applied to the price of the order in the shop currency."
                        },
                        {
                            "key": "total_line_items_price",
                            "type": "string",
                            "label": "Total Line Items Price",
                            "secret": false,
                            "default": "{event.properties.total_line_items_price}",
                            "required": false,
                            "description": "The sum of all line item prices in the shop currency."
                        },
                        {
                            "key": "total_outstanding",
                            "type": "string",
                            "label": "Total Outstanding",
                            "secret": false,
                            "default": "{event.properties.total_outstanding}",
                            "required": false,
                            "description": "The total outstanding amount of the order in the shop currency."
                        },
                        {
                            "key": "total_price",
                            "type": "string",
                            "label": "Total Price",
                            "secret": false,
                            "default": "{event.properties.total}",
                            "required": false,
                            "description": "The sum of all line item prices, discounts, shipping, taxes, and tips in the shop currency. Must be positive."
                        },
                        {
                            "key": "total_price_usd",
                            "type": "string",
                            "label": "Total Price USD",
                            "secret": false,
                            "default": "{event.properties.total_price_usd}",
                            "required": false,
                            "description": "The sum of all line item prices, discounts, shipping, taxes, and tips in the shop currency in USD"
                        },
                        {
                            "key": "total_tax",
                            "type": "string",
                            "label": "Total Tax",
                            "secret": false,
                            "default": "{event.properties.tax}",
                            "required": false,
                            "description": "The sum of all the taxes applied to the order in the shop currency. Must be positive."
                        },
                        {
                            "key": "user_id",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{event.properties.user_id}",
                            "required": false,
                            "description": "The ID of the user logged into Shopify POS who processed the order, if applicable."
                        },
                        {
                            "key": "updated_at",
                            "type": "string",
                            "label": "Updated At",
                            "secret": false,
                            "default": "{event.properties.updated_at}",
                            "required": false,
                            "description": "The date and time (ISO 8601 format) when the order was last modified."
                        },
                        {
                            "key": "additional_fields",
                            "type": "string",
                            "label": "Additional Fields",
                            "secret": false,
                            "default": "{event.properties.additional_fields}",
                            "required": false,
                            "description": "Extra properties."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "saveOrder",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                }
            ],
            "mappings": null,
            "status": "alpha",
            "free": false,
            "type": "destination",
            "id": "segment-actions-angler-ai",
            "name": "Angler AI",
            "hog": "return event",
            "inputs_schema": [
                {
                    "key": "accessToken",
                    "type": "string",
                    "label": "Authentication Token",
                    "secret": true,
                    "required": true,
                    "description": "Your Angler AI API Authentication Token"
                },
                {
                    "key": "workspaceId",
                    "type": "string",
                    "label": "Workspace ID",
                    "secret": false,
                    "required": true,
                    "description": "Your Angler AI Workspace ID"
                },
                {
                    "key": "debug_mode",
                    "type": "boolean",
                    "label": "Debug Mode",
                    "default": false,
                    "description": "Will log configuration and request details"
                }
            ],
            "category": [],
            "code_language": "hog",
            "description": "Send event data to Angler AI",
            "filters": null,
            "masking": null,
            "icon_url": "/static/services/getangler.ai.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-apache-kafka",
            "name": "Apache Kafka",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Data Ingestion"],
            "code_language": "hog",
            "description": "Send events to Apache Kafka.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Apache_Kafka_.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-app-center",
            "name": "App Center",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["DevOps"],
            "code_language": "hog",
            "description": "Send events to App Center.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/App_Center.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-appcues",
            "name": "Appcues",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["User Engagement Platforms"],
            "code_language": "hog",
            "description": "Send events to Appcues.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Appcues.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-appsflyer",
            "name": "AppsFlyer",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Attribution Platforms"],
            "code_language": "hog",
            "description": "Send events to AppsFlyer.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/AppsFlyer.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-apptimize",
            "name": "Apptimize",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["A/B Testing & Feature Experimentation"],
            "code_language": "hog",
            "description": "Send events to Apptimize.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Apptimize.png"
        },
        {
            "mapping_templates": [
                {
                    "name": "Track Event",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify')",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "type",
                            "type": "string",
                            "label": "Type",
                            "secret": false,
                            "default": "{event.event}",
                            "required": true,
                            "description": "The type of event. This name is case sensitive. \"Order shipped\" and \"Order Shipped\" would be considered different event types."
                        },
                        {
                            "key": "userIdentifiers",
                            "type": "dictionary",
                            "label": "User Identifiers",
                            "secret": false,
                            "default": {
                                "email": "{person.properties.email ?? event.properties.email}",
                                "phone": "{person.properties.phone ?? event.properties.phone}",
                                "clientUserId": "{person.id}"
                            },
                            "required": true,
                            "description": "At least one identifier is required. Custom identifiers can be added as additional key:value pairs."
                        },
                        {
                            "key": "properties",
                            "type": "dictionary",
                            "label": "Properties",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.properties}"
                            },
                            "required": false,
                            "description": "Metadata to associate with the event."
                        },
                        {
                            "key": "externalEventId",
                            "type": "string",
                            "label": "External Event Id",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": false,
                            "description": "A unique identifier representing this specific event. Should be a UUID format."
                        },
                        {
                            "key": "occurredAt",
                            "type": "string",
                            "label": "Occurred At",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": false,
                            "description": "Timestamp for the event, ISO 8601 format."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "customEvents",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                }
            ],
            "mappings": null,
            "status": "alpha",
            "free": false,
            "type": "destination",
            "id": "segment-actions-attentive",
            "name": "Attentive",
            "hog": "return event",
            "inputs_schema": [
                {
                    "key": "apiKey",
                    "type": "string",
                    "label": "API Key",
                    "secret": false,
                    "required": true,
                    "description": "Your Attentive API Key."
                },
                {
                    "key": "debug_mode",
                    "type": "boolean",
                    "label": "Debug Mode",
                    "default": false,
                    "description": "Will log configuration and request details"
                }
            ],
            "category": [],
            "code_language": "hog",
            "description": "Send event data to Attentive",
            "filters": null,
            "masking": null,
            "icon_url": "/static/services/attentive.com.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "beta",
            "free": false,
            "type": "destination",
            "id": "template-attio",
            "name": "Attio",
            "hog": "let body := {\n    'data': {\n        'values': {\n            'email_addresses': [\n                {\n                    'email_address': inputs.email\n                }\n            ]\n        }\n    }\n}\n\nfor (let key, value in inputs.personAttributes) {\n    if (not empty(value)) {\n        body.data.values[key] := value\n    }\n}\n\nlet res := fetch(f'https://api.attio.com/v2/objects/people/records?matching_attribute=email_addresses', {\n    'method': 'PUT',\n    'headers': {\n        'Authorization': f'Bearer {inputs.apiKey}',\n        'Content-Type': 'application/json',\n    },\n    'body': body\n})\nif (res.status >= 400) {\n    throw Error(f'Error from api.attio.com (status {res.status}): {res.body}')\n}",
            "inputs_schema": [
                {
                    "key": "apiKey",
                    "type": "string",
                    "label": "Access token",
                    "secret": true,
                    "required": true,
                    "description": "Check out this page to get your API key: https://attio.com/help/reference/integrations-automations/generating-an-api-key"
                },
                {
                    "key": "email",
                    "type": "string",
                    "label": "Email of the user",
                    "secret": false,
                    "default": "{person.properties.email}",
                    "required": true,
                    "description": "Where to find the email for the contact to be created. You can use the filters section to filter out unwanted emails or internal users."
                },
                {
                    "key": "personAttributes",
                    "type": "dictionary",
                    "label": "Additional Person attributes",
                    "secret": false,
                    "default": {
                        "name": "{person.properties.name}",
                        "job_title": "{person.properties.job_title}"
                    },
                    "required": true,
                    "description": "This persons keys should be the slugs or IDs of the attributes you wish to update. For information on potential custom attributes, refer to the attribute type docs: https://developers.attio.com/docs/attribute-types"
                }
            ],
            "category": ["Advertisement"],
            "code_language": "hog",
            "description": "Create and update contacts in Attio",
            "filters": {
                "events": [],
                "actions": [],
                "filter_test_accounts": true
            },
            "masking": null,
            "icon_url": "/static/services/attio.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-attribution",
            "name": "Attribution",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Attribution Platforms"],
            "code_language": "hog",
            "description": "Send events to Attribution.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Attribution.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "beta",
            "free": false,
            "type": "destination",
            "id": "template-avo",
            "name": "Avo",
            "hog": "if (empty(inputs.apiKey) or empty(inputs.environment)) {\n    print('API Key and environment has to be set. Skipping...')\n    return\n}\n\nlet avoEvent := {\n    'apiKey': inputs.apiKey,\n    'env': inputs.environment,\n    'appName': inputs.appName,\n    'sessionId': event.properties.$session_id ?? generateUUIDv4(),\n    'createdAt': toString(toDateTime(toUnixTimestamp(now()))),\n    'avoFunction': false,\n    'eventId': null,\n    'eventHash': null,\n    'appVersion': '1.0.0',\n    'libVersion': '1.0.0',\n    'libPlatform': 'node',\n    'trackingId': '',\n    'samplingRate': 1,\n    'type': 'event',\n    'eventName': event.event,\n    'messageId': event.uuid,\n    'eventProperties': []\n}\n\nfun getPropValueType(propValue) {\n    let propType := typeof(propValue)\n    if (propValue == null) {\n        return 'null'\n    } else if (propType == 'string') {\n        return 'string'\n    } else if (propType == 'integer') {\n        return 'int'\n    } else if (propType == 'float') {\n        return 'float'\n    } else if (propType == 'boolean') {\n        return 'boolean'\n    } else if (propType == 'object') {\n        return 'object'\n    } else if (propType == 'array') {\n        return 'list'\n    } else {\n        return propType\n    }\n}\n\nfor (let key, value in event.properties) {\n    let excludeProperties := arrayMap(x -> trim(x), splitByString(',', inputs.excludeProperties))\n    let includeProperties := arrayMap(x -> trim(x), splitByString(',', inputs.includeProperties))\n    let isExcluded := has(excludeProperties, key)\n    let isIncluded := includeProperties[1] == '' or has(includeProperties, key)\n\n    if (not (key like '$%' or isExcluded or not isIncluded)) {\n        avoEvent.eventProperties := arrayPushBack(avoEvent.eventProperties, { 'propertyName': key, 'propertyType': getPropValueType(value) })\n    }\n}\n\nfetch('https://api.avo.app/inspector/posthog/v1/track', {\n    'method': 'POST',\n    'headers': {\n        'env': inputs.environment,\n        'api-key': inputs.apiKey,\n        'content-type': 'application/json',\n        'accept': 'application/json',\n    },\n    'body': [avoEvent]\n})",
            "inputs_schema": [
                {
                    "key": "apiKey",
                    "type": "string",
                    "label": "Avo API Key",
                    "secret": true,
                    "default": "",
                    "required": true,
                    "description": "Avo source API key"
                },
                {
                    "key": "environment",
                    "type": "string",
                    "label": "Environment",
                    "secret": false,
                    "default": "dev",
                    "required": false,
                    "description": "Environment name"
                },
                {
                    "key": "appName",
                    "type": "string",
                    "label": "App name",
                    "secret": false,
                    "default": "PostHog",
                    "required": false,
                    "description": "App name"
                },
                {
                    "key": "excludeProperties",
                    "type": "string",
                    "label": "Properties to exclude",
                    "secret": false,
                    "default": "",
                    "required": false,
                    "description": "Comma-separated list of event properties that will not be sent to Avo."
                },
                {
                    "key": "includeProperties",
                    "type": "string",
                    "label": "Properties to include",
                    "secret": false,
                    "default": "",
                    "required": false,
                    "description": "Comma separated list of event properties to send to Avo (will send all if left empty)."
                }
            ],
            "category": ["Analytics"],
            "code_language": "hog",
            "description": "Send events to Avo",
            "filters": null,
            "masking": null,
            "icon_url": "/static/services/avo.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-awin",
            "name": "Awin",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Marketing"],
            "code_language": "hog",
            "description": "Send events to Awin.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Awin.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "beta",
            "free": false,
            "type": "destination",
            "id": "template-aws-kinesis",
            "name": "AWS Kinesis",
            "hog": "fun getPayload() {\n  let region := inputs.aws_region\n  let service := 'kinesis'\n  let amzDate := formatDateTime(now(), '%Y%m%dT%H%i%sZ')\n  let date := formatDateTime(now(), '%Y%m%d')\n\n  let payload := jsonStringify({\n    'StreamName': inputs.aws_kinesis_stream_name,\n    'PartitionKey': inputs.aws_kinesis_partition_key ?? generateUUIDv4(),\n    'Data': base64Encode(jsonStringify(inputs.payload)),\n  })\n\n  let requestHeaders := {\n    'Content-Type': 'application/x-amz-json-1.1',\n    'X-Amz-Target': 'Kinesis_20131202.PutRecord',\n    'X-Amz-Date': amzDate,\n    'Host': f'kinesis.{region}.amazonaws.com',\n  }\n\n  let canonicalHeaderParts := []\n  for (let key, value in requestHeaders) {\n    let val := replaceAll(trim(value), '\\\\s+', ' ')\n    canonicalHeaderParts := arrayPushBack(canonicalHeaderParts, f'{lower(key)}:{val}')\n  }\n  let canonicalHeaders := arrayStringConcat(arraySort(canonicalHeaderParts), '\\n') || '\\n'\n\n  let signedHeaderParts := []\n  for (let key, value in requestHeaders) {\n    signedHeaderParts := arrayPushBack(signedHeaderParts, lower(key))\n  }\n  let signedHeaders := arrayStringConcat(arraySort(signedHeaderParts), ';')\n\n  let canonicalRequest := arrayStringConcat([\n    'POST',\n    '/',\n    '',\n    canonicalHeaders,\n    signedHeaders,\n    sha256Hex(payload),\n  ], '\\n')\n\n  let credentialScope := f'{date}/{region}/{service}/aws4_request'\n  let stringToSign := arrayStringConcat([\n    'AWS4-HMAC-SHA256',\n    amzDate,\n    credentialScope,\n    sha256Hex(canonicalRequest),\n  ], '\\n')\n\n  let signature := sha256HmacChainHex([\n    f'AWS4{inputs.aws_secret_access_key}', date, region, service, 'aws4_request', stringToSign\n  ])\n\n  let authorizationHeader :=\n      f'AWS4-HMAC-SHA256 Credential={inputs.aws_access_key_id}/{credentialScope}, ' ||\n      f'SignedHeaders={signedHeaders}, ' ||\n      f'Signature={signature}'\n\n  requestHeaders['Authorization'] := authorizationHeader\n\n  return {\n    'headers': requestHeaders,\n    'body': payload,\n    'method': 'POST'\n  }\n}\n\nlet res := fetch(f'https://kinesis.{inputs.aws_region}.amazonaws.com', getPayload())\n\nif (res.status >= 200 and res.status < 300) {\n  print('Event sent successfully!')\n} else {\n  throw Error(f'Error from {inputs.aws_region}.amazonaws.com (status {res.status}): {res.body}')\n}",
            "inputs_schema": [
                {
                    "key": "aws_access_key_id",
                    "type": "string",
                    "label": "AWS Access Key ID",
                    "secret": true,
                    "required": true
                },
                {
                    "key": "aws_secret_access_key",
                    "type": "string",
                    "label": "AWS Secret Access Key",
                    "secret": true,
                    "required": true
                },
                {
                    "key": "aws_region",
                    "type": "string",
                    "label": "AWS Region",
                    "secret": false,
                    "default": "us-east-1",
                    "required": true
                },
                {
                    "key": "aws_kinesis_stream_name",
                    "type": "string",
                    "label": "Kinesis Stream Name",
                    "secret": false,
                    "required": true
                },
                {
                    "key": "aws_kinesis_partition_key",
                    "type": "string",
                    "label": "Kinesis Partition Key",
                    "secret": false,
                    "default": "{event.uuid}",
                    "required": false,
                    "description": "If not provided, a random UUID will be generated."
                },
                {
                    "key": "payload",
                    "type": "json",
                    "label": "Message Payload",
                    "secret": false,
                    "default": {
                        "event": "{event}",
                        "person": "{person}"
                    },
                    "required": false
                }
            ],
            "category": ["Analytics"],
            "code_language": "hog",
            "description": "Put data to an AWS Kinesis stream",
            "filters": null,
            "masking": null,
            "icon_url": "/static/services/aws-kinesis.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-aws-lambda",
            "name": "AWS Lambda",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Serverless"],
            "code_language": "hog",
            "description": "Send events to AWS Lambda.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/AWS_Lambda.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-axeptio",
            "name": "Axeptio",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Consent Management Platform"],
            "code_language": "hog",
            "description": "Send events to Axeptio.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Axeptio.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-azure-blob-storage",
            "name": "Azure Blob Storage",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Databases & Object Storage"],
            "code_language": "hog",
            "description": "Send events to Azure Blob Storage.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Azure_Blob_Storage.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-azure-data-lake",
            "name": "Azure Data Lake",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Data Warehouse"],
            "code_language": "hog",
            "description": "Send events to Azure Data Lake.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Azure_Data_Lake.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-azure-event-hubs",
            "name": "Azure Event Hubs",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Data Ingestion"],
            "code_language": "hog",
            "description": "Send events to Azure Event Hubs.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Azure_Event_Hubs.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-bing-ads",
            "name": "Bing Ads",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Advertising"],
            "code_language": "hog",
            "description": "Send events to Bing Ads.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Bing_Ads.svg"
        },
        {
            "mapping_templates": [
                {
                    "name": "Send Data to Blend",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event in ('$identify', '$set') or event = '$pageview' or event = '$screen' or event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify')",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "eventName",
                            "type": "string",
                            "label": "Event Name",
                            "secret": false,
                            "default": "{event.event ?? event.event}",
                            "required": false,
                            "description": "The name of event, page or screen"
                        },
                        {
                            "key": "eventType",
                            "type": "string",
                            "label": "Event Type",
                            "secret": false,
                            "default": "{event.event == '$pageview' ? 'page' : event.event == '$screen' ? 'screen' : event.event == '$groupidentify' ? 'group' : event.event in ('$identify', '$set') ? 'identify' : event.event == '$alias' ? 'alias' : 'track'}",
                            "required": false,
                            "description": "The type of event"
                        },
                        {
                            "key": "eventProperties",
                            "type": "dictionary",
                            "label": "Event Properties",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.properties}"
                            },
                            "required": false,
                            "description": "Properties of the event"
                        },
                        {
                            "key": "userTraits",
                            "type": "dictionary",
                            "label": "User Traits",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "User profile details / traits"
                        },
                        {
                            "key": "identifiers",
                            "type": "dictionary",
                            "label": "Identifiers",
                            "secret": false,
                            "default": {
                                "userId": "{person.id}",
                                "anonymousId": "{event.distinct_id}"
                            },
                            "required": false,
                            "description": "User identifiers"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "trackEvents",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                }
            ],
            "mappings": null,
            "status": "alpha",
            "free": false,
            "type": "destination",
            "id": "segment-actions-blend-ai",
            "name": "Blend Ai",
            "hog": "return event",
            "inputs_schema": [
                {
                    "key": "apiKey",
                    "type": "string",
                    "label": "API Key",
                    "secret": false,
                    "required": true,
                    "description": "Blend API key - found on integration page."
                },
                {
                    "key": "debug_mode",
                    "type": "boolean",
                    "label": "Debug Mode",
                    "default": false,
                    "description": "Will log configuration and request details"
                }
            ],
            "category": [],
            "code_language": "hog",
            "description": "Send event data to Blend Ai",
            "filters": null,
            "masking": null,
            "icon_url": "/static/services/blend.com.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-bluecore",
            "name": "Bluecore",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Marketing"],
            "code_language": "hog",
            "description": "Send events to Bluecore.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Bluecore.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-blueshift",
            "name": "Blueshift",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Marketing"],
            "code_language": "hog",
            "description": "Send events to Blueshift.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Blueshift.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-branch",
            "name": "Branch",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Attribution Platforms"],
            "code_language": "hog",
            "description": "Send events to Branch.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Branch.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "beta",
            "free": false,
            "type": "destination",
            "id": "template-braze",
            "name": "Braze",
            "hog": "let getPayload := () -> [{\n  'attributes': inputs.attributes,\n  'events': [inputs.event]\n}]\n\nlet res := fetch(f'{inputs.brazeEndpoint}/users/track', {\n  'method': 'POST',\n  'headers': {\n    'Authorization': f'Bearer {inputs.apiKey}',\n    'Content-Type': 'application/json'\n  },\n  'body': getPayload()\n})\n\nif (res.status >= 200 and res.status < 300) {\n  print('Event sent successfully!')\n} else {\n  throw Error(f'Error sending event: {res.status} {res.body}')\n}",
            "inputs_schema": [
                {
                    "key": "brazeEndpoint",
                    "type": "choice",
                    "label": "Braze REST Endpoint",
                    "secret": false,
                    "choices": [
                        {
                            "label": "US-01",
                            "value": "https://rest.iad-01.braze.com"
                        },
                        {
                            "label": "US-02",
                            "value": "https://rest.iad-02.braze.com"
                        },
                        {
                            "label": "US-03",
                            "value": "https://rest.iad-03.braze.com"
                        },
                        {
                            "label": "US-04",
                            "value": "https://rest.iad-04.braze.com"
                        },
                        {
                            "label": "US-05",
                            "value": "https://rest.iad-05.braze.com"
                        },
                        {
                            "label": "US-06",
                            "value": "https://rest.iad-06.braze.com"
                        },
                        {
                            "label": "US-07",
                            "value": "https://rest.iad-07.braze.com"
                        },
                        {
                            "label": "US-08",
                            "value": "https://rest.iad-08.braze.com"
                        },
                        {
                            "label": "US-10",
                            "value": "https://rest.iad-10.braze.com"
                        },
                        {
                            "label": "EU-01",
                            "value": "https://rest.fra-01.braze.eu"
                        },
                        {
                            "label": "EU-02",
                            "value": "https://rest.fra-02.braze.eu"
                        },
                        {
                            "label": "AU-01",
                            "value": "https://rest.au-01.braze.com"
                        }
                    ],
                    "default": "",
                    "required": true,
                    "description": "The endpoint identifier where your Braze instance is located, see the docs here: https://www.braze.com/docs/api/basics"
                },
                {
                    "key": "apiKey",
                    "type": "string",
                    "label": "Your Braze API Key",
                    "secret": true,
                    "default": "",
                    "required": true,
                    "description": "See the docs here: https://www.braze.com/docs/api/api_key/"
                },
                {
                    "key": "attributes",
                    "type": "json",
                    "label": "Attributes to set",
                    "secret": false,
                    "default": {
                        "email": "{person.properties.email}"
                    },
                    "required": true
                },
                {
                    "key": "event",
                    "type": "json",
                    "label": "Event payload",
                    "secret": false,
                    "default": {
                        "name": "{event.event}",
                        "time": "{event.timestamp}",
                        "properties": "{event.properties}",
                        "external_id": "{event.distinct_id}"
                    },
                    "required": true
                }
            ],
            "category": ["Customer Success"],
            "code_language": "hog",
            "description": "Send events to Braze",
            "filters": null,
            "masking": null,
            "icon_url": "/static/services/braze.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "stable",
            "free": false,
            "type": "destination",
            "id": "template-brevo",
            "name": "Brevo",
            "hog": "if (empty(inputs.email)) {\n    print('No email set. Skipping...')\n    return\n}\n\nlet body := {\n    'email': inputs.email,\n    'updateEnabled': true,\n    'attributes': {}\n}\n\nfor (let key, value in inputs.attributes) {\n    if (not empty(value)) {\n        body.attributes[key] := value\n    }\n}\n\nlet res := fetch(f'https://api.brevo.com/v3/contacts', {\n    'method': 'POST',\n    'headers': {\n        'api-key': inputs.apiKey,\n        'Content-Type': 'application/json',\n    },\n    'body': body\n})\nif (res.status >= 400) {\n    throw Error(f'Error from api.brevo.com (status {res.status}): {res.body}')\n}",
            "inputs_schema": [
                {
                    "key": "apiKey",
                    "type": "string",
                    "label": "Brevo API Key",
                    "secret": true,
                    "required": true,
                    "description": "Check out this page on how to get your API key: https://help.brevo.com/hc/en-us/articles/209467485-Create-and-manage-your-API-keys"
                },
                {
                    "key": "email",
                    "type": "string",
                    "label": "Email of the user",
                    "secret": false,
                    "default": "{person.properties.email}",
                    "required": true,
                    "description": "Where to find the email for the contact to be created. You can use the filters section to filter out unwanted emails or internal users."
                },
                {
                    "key": "attributes",
                    "type": "dictionary",
                    "label": "Attributes",
                    "secret": false,
                    "default": {
                        "EMAIL": "{person.properties.email}",
                        "LASTNAME": "{person.properties.lastname}",
                        "FIRSTNAME": "{person.properties.firstname}"
                    },
                    "required": true,
                    "description": "For information on potential attributes, refer to the following page: https://help.brevo.com/hc/en-us/articles/10617359589906-Create-and-manage-contact-attributes"
                }
            ],
            "category": ["Email Marketing"],
            "code_language": "hog",
            "description": "Update contacts in Brevo",
            "filters": {
                "events": [
                    {
                        "id": "$identify",
                        "name": "$identify",
                        "type": "events",
                        "order": 0
                    },
                    {
                        "id": "$set",
                        "name": "$set",
                        "type": "events",
                        "order": 0
                    }
                ],
                "actions": [],
                "filter_test_accounts": true
            },
            "masking": null,
            "icon_url": "/static/services/brevo.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-bugsnag",
            "name": "BugSnag",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Error Reporting & Monitoring"],
            "code_language": "hog",
            "description": "Send events to BugSnag.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/BugSnag.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-callingly",
            "name": "Callingly",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Customer Service"],
            "code_language": "hog",
            "description": "Send events to Callingly.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Callingly.svg"
        },
        {
            "mapping_templates": [
                {
                    "name": "Track Event",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify')",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "event",
                            "type": "string",
                            "label": "Event Type",
                            "secret": false,
                            "default": "{event.event}",
                            "required": true,
                            "description": "A type of your event, e.g. a sign up or a name of an action within your product."
                        },
                        {
                            "key": "time",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": false,
                            "description": "The timestamp of the event. Could be any date string/number value compatible with JavaScript Date constructor: e.g. milliseconds epoch or an ISO datetime. If time is not sent with the event, it will be set to the request time."
                        },
                        {
                            "key": "anonymous_id",
                            "type": "string",
                            "label": "Anonymous ID",
                            "secret": false,
                            "default": "{event.distinct_id}",
                            "required": false,
                            "description": "A distinct ID of an unidentified (logged out) user. Device id is used if available"
                        },
                        {
                            "key": "user_id",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": false,
                            "description": "A distinct ID of an identified (logged in) user."
                        },
                        {
                            "key": "group_id",
                            "type": "string",
                            "label": "Group ID",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "The unique identifier of the group that performed this event."
                        },
                        {
                            "key": "event_unique_id",
                            "type": "string",
                            "label": "Event ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": false,
                            "description": "A random id that is unique to an event. ID is being used to prevent event duplication. All the events that share the same unique id besides the first one will be ignored."
                        },
                        {
                            "key": "app_version",
                            "type": "string",
                            "label": "App Version",
                            "secret": false,
                            "default": "{event.event.properties.$app_version}",
                            "required": false,
                            "description": "The current version of your application."
                        },
                        {
                            "key": "os_name",
                            "type": "string",
                            "label": "OS Name",
                            "secret": false,
                            "default": "{event.properties.$os}",
                            "required": false,
                            "description": "The name of the mobile operating system or browser that the user is using."
                        },
                        {
                            "key": "os_version",
                            "type": "string",
                            "label": "OS Version",
                            "secret": false,
                            "default": "{event.properties.$os_version}",
                            "required": false,
                            "description": "The version of the mobile operating system or browser the user is using."
                        },
                        {
                            "key": "device_id",
                            "type": "string",
                            "label": "Device ID",
                            "secret": false,
                            "default": "{event.properties.$device_id}",
                            "required": false,
                            "description": "A unique identifier for the device the user is using."
                        },
                        {
                            "key": "platform",
                            "type": "string",
                            "label": "Platform",
                            "secret": false,
                            "default": "{event.properties.$device_type}",
                            "required": false,
                            "description": "Platform of the device."
                        },
                        {
                            "key": "device_manufacturer",
                            "type": "string",
                            "label": "Device Manufacturer",
                            "secret": false,
                            "default": "{event.properties.$device_manufacturer}",
                            "required": false,
                            "description": "The device manufacturer that the user is using."
                        },
                        {
                            "key": "device_model",
                            "type": "string",
                            "label": "Device Model",
                            "secret": false,
                            "default": "{event.properties.$device_model}",
                            "required": false,
                            "description": "The device model that the user is using."
                        },
                        {
                            "key": "carrier",
                            "type": "string",
                            "label": "Carrier",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "The carrier that the user is using."
                        },
                        {
                            "key": "cellular",
                            "type": "string",
                            "label": "Cellular Enabled",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "Whether cellular is enabled."
                        },
                        {
                            "key": "country",
                            "type": "string",
                            "label": "Country",
                            "secret": false,
                            "default": "{event.properties.$geoip_country_name}",
                            "required": false,
                            "description": "The current country of the user."
                        },
                        {
                            "key": "region",
                            "type": "string",
                            "label": "Region",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "The current region of the user."
                        },
                        {
                            "key": "city",
                            "type": "string",
                            "label": "City",
                            "secret": false,
                            "default": "{event.properties.$geoip_city_name}",
                            "required": false,
                            "description": "The current city of the user."
                        },
                        {
                            "key": "language",
                            "type": "string",
                            "label": "Language",
                            "secret": false,
                            "default": "{event.properties.$locale}",
                            "required": false,
                            "description": "The language set by the user."
                        },
                        {
                            "key": "library_name",
                            "type": "string",
                            "label": "Library Name",
                            "secret": false,
                            "default": "{event.properties.$lib}",
                            "required": false,
                            "description": "The name of the SDK used to send events."
                        },
                        {
                            "key": "library_version",
                            "type": "string",
                            "label": "Library Version",
                            "secret": false,
                            "default": "{event.properties.$lib_version}",
                            "required": false,
                            "description": "The version of the SDK used to send events."
                        },
                        {
                            "key": "ip",
                            "type": "string",
                            "label": "IP Address",
                            "secret": false,
                            "default": "{event.properties.$ip}",
                            "required": false,
                            "description": "The IP address of the user. This is only used for geolocation and won't be stored."
                        },
                        {
                            "key": "url",
                            "type": "string",
                            "label": "URL",
                            "secret": false,
                            "default": "{event.properties.$current_url}",
                            "required": false,
                            "description": "The full URL of the webpage on which the event is triggered."
                        },
                        {
                            "key": "path",
                            "type": "string",
                            "label": "Page Path",
                            "secret": false,
                            "default": "{event.properties.$pathname}",
                            "required": false,
                            "description": "The relative URL of the webpage on which the event is triggered."
                        },
                        {
                            "key": "page_title",
                            "type": "string",
                            "label": "Page Title",
                            "secret": false,
                            "default": "{event.properties.title}",
                            "required": false,
                            "description": "The name of the webpage on which the event is triggered."
                        },
                        {
                            "key": "referrer",
                            "type": "string",
                            "label": "Referrer",
                            "secret": false,
                            "default": "{event.properties.$referrer}",
                            "required": false,
                            "description": "Referrer url"
                        },
                        {
                            "key": "user_agent",
                            "type": "string",
                            "label": "User Agent",
                            "secret": false,
                            "default": "{event.properties.$raw_user_agent}",
                            "required": false,
                            "description": "User agent"
                        },
                        {
                            "key": "event_properties",
                            "type": "dictionary",
                            "label": "Event Properties",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.properties}"
                            },
                            "required": false,
                            "description": "An object of key-value pairs that represent additional data to be sent along with the event."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "trackEvent",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Identify User",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event in ('$identify', '$set')",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "time",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": false,
                            "description": "The timestamp of the event. Could be any date string/number value compatible with JavaScript Date constructor: e.g. milliseconds epoch or an ISO datetime. If time is not sent with the event, it will be set to the request time."
                        },
                        {
                            "key": "user_id",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": false,
                            "description": "A distinct ID of an identified (logged in) user."
                        },
                        {
                            "key": "anonymous_id",
                            "type": "string",
                            "label": "Anonymous ID",
                            "secret": false,
                            "default": "{event.distinct_id}",
                            "required": false,
                            "description": "A distinct ID of an unidentified (logged out) user. Device id is used if available"
                        },
                        {
                            "key": "first_name",
                            "type": "string",
                            "label": "First Name",
                            "secret": false,
                            "default": "{person.properties.first_name ?? person.properties.firstName}",
                            "required": false,
                            "description": "User's first name"
                        },
                        {
                            "key": "last_name",
                            "type": "string",
                            "label": "Last Name",
                            "secret": false,
                            "default": "{person.properties.last_name ?? person.properties.lastName}",
                            "required": false,
                            "description": "User's last name"
                        },
                        {
                            "key": "name",
                            "type": "string",
                            "label": "Name",
                            "secret": false,
                            "default": "{person.properties.name}",
                            "required": false,
                            "description": "User's full name"
                        },
                        {
                            "key": "email",
                            "type": "string",
                            "label": "Email",
                            "secret": false,
                            "default": "{person.properties.email}",
                            "required": false,
                            "description": "User's email address"
                        },
                        {
                            "key": "phone",
                            "type": "string",
                            "label": "Phone",
                            "secret": false,
                            "default": "{person.properties.phone}",
                            "required": false,
                            "description": "User's phone number"
                        },
                        {
                            "key": "created_at",
                            "type": "string",
                            "label": "User Creation Time",
                            "secret": false,
                            "default": "{person.properties.createdAt ?? person.properties.created_at}",
                            "required": false,
                            "description": "The timestamp for when the user profile was first created"
                        },
                        {
                            "key": "traits",
                            "type": "dictionary",
                            "label": "User Properties",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{person.properties}"
                            },
                            "required": false,
                            "description": "Properties to set on the user profile"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "identifyUser",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Identify Group",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event = '$groupidentify'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "time",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": false,
                            "description": "The timestamp of the event. Could be any date string/number value compatible with JavaScript Date constructor: e.g. milliseconds epoch or an ISO datetime. If time is not sent with the event, it will be set to the request time."
                        },
                        {
                            "key": "group_id",
                            "type": "string",
                            "label": "Group ID",
                            "secret": false,
                            "default": "{event.groupId}",
                            "required": true,
                            "description": "The unique identifier of the group."
                        },
                        {
                            "key": "traits",
                            "type": "dictionary",
                            "label": "Group Properties",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{person.properties}"
                            },
                            "required": false,
                            "description": "The properties to set on the group profile."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "identifyGroup",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                }
            ],
            "mappings": null,
            "status": "alpha",
            "free": false,
            "type": "destination",
            "id": "segment-calliper-cloud-actions",
            "name": "Calliper Cloud",
            "hog": "return event",
            "inputs_schema": [
                {
                    "key": "companyId",
                    "type": "string",
                    "label": "Company id",
                    "secret": false,
                    "required": true,
                    "description": "Your company id in Calliper. During the onboarding you can find it by selecting Segment integration. After onboarding is complete you can find it by opening \"Data Sources\" in the main menu, pressing \"New Data Source\" and pressing \"Connect\" on a Segment card."
                },
                {
                    "key": "segmentKey",
                    "type": "string",
                    "label": "Segment Key",
                    "secret": false,
                    "required": true,
                    "description": "Your Segment Key in Calliper. Please follow the instructions to find the Company id, secret key is located in a field next to it."
                },
                {
                    "key": "debug_mode",
                    "type": "boolean",
                    "label": "Debug Mode",
                    "default": false,
                    "description": "Will log configuration and request details"
                }
            ],
            "category": [],
            "code_language": "hog",
            "description": "Send event data to Calliper Cloud",
            "filters": null,
            "masking": null,
            "icon_url": "/static/services/cloud.com.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-candu",
            "name": "Candu",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["A/B Testing & Feature Experimentation"],
            "code_language": "hog",
            "description": "Send events to Candu.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Candu.svg"
        },
        {
            "mapping_templates": [
                {
                    "name": "Create or update a Company",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event = '$groupidentify'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "groupId",
                            "type": "string",
                            "label": "Group ID",
                            "secret": false,
                            "default": "{event.groupId}",
                            "required": true,
                            "description": "The unique identifier of the group."
                        },
                        {
                            "key": "traits",
                            "type": "dictionary",
                            "label": "Group Properties",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{person.properties}"
                            },
                            "required": false,
                            "description": "Properties to set on the group profile"
                        },
                        {
                            "key": "type",
                            "type": "string",
                            "label": "Type",
                            "secret": false,
                            "default": "{event.event == '$pageview' ? 'page' : event.event == '$screen' ? 'screen' : event.event == '$groupidentify' ? 'group' : event.event in ('$identify', '$set') ? 'identify' : event.event == '$alias' ? 'alias' : 'track'}",
                            "required": true,
                            "description": "The type of the event"
                        },
                        {
                            "key": "userId",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": false,
                            "description": "The unique identifier of the user."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "group",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Create or update a User",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event in ('$identify', '$set')",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "userId",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": true,
                            "description": "A distinct ID of an identified (logged in) user."
                        },
                        {
                            "key": "traits",
                            "type": "dictionary",
                            "label": "User Properties",
                            "secret": false,
                            "default": {
                                "id": "{person.properties.id}",
                                "name": "{person.properties.name}",
                                "email": "{person.properties.email}",
                                "avatar": "{person.properties.avatar}",
                                "company": "{person.properties.company}",
                                "createdAt": "{person.properties.createdAt}"
                            },
                            "required": false,
                            "description": "Properties to set on the user profile"
                        },
                        {
                            "key": "type",
                            "type": "string",
                            "label": "Type",
                            "secret": false,
                            "default": "{event.event == '$pageview' ? 'page' : event.event == '$screen' ? 'screen' : event.event == '$groupidentify' ? 'group' : event.event in ('$identify', '$set') ? 'identify' : event.event == '$alias' ? 'alias' : 'track'}",
                            "required": true,
                            "description": "The type of the event"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "identify",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                }
            ],
            "mappings": null,
            "status": "beta",
            "free": false,
            "type": "destination",
            "id": "segment-actions-canny",
            "name": "Canny",
            "hog": "return event",
            "inputs_schema": [
                {
                    "key": "apiKey",
                    "type": "string",
                    "label": "API Key",
                    "secret": false,
                    "required": true,
                    "description": "You can find your API Key in the Segment Integration page in your admin settings."
                },
                {
                    "key": "debug_mode",
                    "type": "boolean",
                    "label": "Debug Mode",
                    "default": false,
                    "description": "Will log configuration and request details"
                }
            ],
            "category": [],
            "code_language": "hog",
            "description": "Send event data to Canny",
            "filters": null,
            "masking": null,
            "icon_url": "/static/services/canny.io.png"
        },
        {
            "mapping_templates": [
                {
                    "name": "Send Track Event",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify')",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "event",
                            "type": "string",
                            "label": "Event name",
                            "secret": false,
                            "default": "{event.event}",
                            "required": true,
                            "description": "The name of the event."
                        },
                        {
                            "key": "properties",
                            "type": "dictionary",
                            "label": "Event Properties",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.properties}"
                            },
                            "required": false,
                            "description": "A JSON object containing the properties of the event."
                        },
                        {
                            "key": "context",
                            "type": "dictionary",
                            "label": "Event context",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.context}"
                            },
                            "required": false,
                            "description": "Event context as it appears in Segment"
                        },
                        {
                            "key": "anonymous_id",
                            "type": "string",
                            "label": "Anonymous ID",
                            "secret": false,
                            "default": "{event.distinct_id}",
                            "required": false,
                            "description": "The anonymous ID associated with the user"
                        },
                        {
                            "key": "message_id",
                            "type": "string",
                            "label": "Message ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": false,
                            "description": "The Segment messageId"
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": false,
                            "description": "A timestamp of when the event took place. Default is current date and time."
                        },
                        {
                            "key": "received_at",
                            "type": "string",
                            "label": "Received at",
                            "secret": false,
                            "default": "{event.receivedAt}",
                            "required": true,
                            "description": "When the event was received."
                        },
                        {
                            "key": "sent_at",
                            "type": "string",
                            "label": "Sent at",
                            "secret": false,
                            "default": "{event.sentAt}",
                            "required": true,
                            "description": "Device-time when the event was sent."
                        },
                        {
                            "key": "user_id",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": false,
                            "description": "The user's id"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "sendTrackEvent",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Send Identify User Event",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event in ('$identify', '$set')",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "traits",
                            "type": "dictionary",
                            "label": "User Properties",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{person.properties}"
                            },
                            "required": false,
                            "description": "The properties of the user."
                        },
                        {
                            "key": "context",
                            "type": "dictionary",
                            "label": "Event context",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.context}"
                            },
                            "required": false,
                            "description": "Event context as it appears in Segment"
                        },
                        {
                            "key": "anonymous_id",
                            "type": "string",
                            "label": "Anonymous ID",
                            "secret": false,
                            "default": "{event.distinct_id}",
                            "required": false,
                            "description": "The anonymous ID associated with the user"
                        },
                        {
                            "key": "message_id",
                            "type": "string",
                            "label": "Message ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": false,
                            "description": "The Segment messageId"
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": false,
                            "description": "A timestamp of when the event took place. Default is current date and time."
                        },
                        {
                            "key": "received_at",
                            "type": "string",
                            "label": "Received at",
                            "secret": false,
                            "default": "{event.receivedAt}",
                            "required": true,
                            "description": "When the event was received."
                        },
                        {
                            "key": "sent_at",
                            "type": "string",
                            "label": "Sent at",
                            "secret": false,
                            "default": "{event.sentAt}",
                            "required": true,
                            "description": "Device-time when the event was sent."
                        },
                        {
                            "key": "user_id",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": false,
                            "description": "The user's id"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "sendIdentifyEvent",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Send Identify Group Event",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event = '$groupidentify'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "group_id",
                            "type": "string",
                            "label": "Group ID",
                            "secret": false,
                            "default": "{event.groupId}",
                            "required": true,
                            "description": "The unique identifier of the group."
                        },
                        {
                            "key": "traits",
                            "type": "dictionary",
                            "label": "Group Properties",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{person.properties}"
                            },
                            "required": false,
                            "description": "The properties of the group."
                        },
                        {
                            "key": "context",
                            "type": "dictionary",
                            "label": "Event context",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.context}"
                            },
                            "required": false,
                            "description": "Event context as it appears in Segment"
                        },
                        {
                            "key": "anonymous_id",
                            "type": "string",
                            "label": "Anonymous ID",
                            "secret": false,
                            "default": "{event.distinct_id}",
                            "required": false,
                            "description": "The anonymous ID associated with the user"
                        },
                        {
                            "key": "message_id",
                            "type": "string",
                            "label": "Message ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": false,
                            "description": "The Segment messageId"
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": false,
                            "description": "A timestamp of when the event took place. Default is current date and time."
                        },
                        {
                            "key": "received_at",
                            "type": "string",
                            "label": "Received at",
                            "secret": false,
                            "default": "{event.receivedAt}",
                            "required": true,
                            "description": "When the event was received."
                        },
                        {
                            "key": "sent_at",
                            "type": "string",
                            "label": "Sent at",
                            "secret": false,
                            "default": "{event.sentAt}",
                            "required": true,
                            "description": "Device-time when the event was sent."
                        },
                        {
                            "key": "user_id",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": false,
                            "description": "The user's id"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "sendGroupEvent",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Send Page Event",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event = '$pageview'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "name",
                            "type": "string",
                            "label": "Name",
                            "secret": false,
                            "default": "{event.event}",
                            "required": false,
                            "description": "Page name"
                        },
                        {
                            "key": "properties",
                            "type": "dictionary",
                            "label": "Properties",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.properties}"
                            },
                            "required": false,
                            "description": "Properties to associate with the page view"
                        },
                        {
                            "key": "context",
                            "type": "dictionary",
                            "label": "Event context",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.context}"
                            },
                            "required": false,
                            "description": "Event context as it appears in Segment"
                        },
                        {
                            "key": "anonymous_id",
                            "type": "string",
                            "label": "Anonymous ID",
                            "secret": false,
                            "default": "{event.distinct_id}",
                            "required": false,
                            "description": "The anonymous ID associated with the user"
                        },
                        {
                            "key": "message_id",
                            "type": "string",
                            "label": "Message ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": false,
                            "description": "The Segment messageId"
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": false,
                            "description": "A timestamp of when the event took place. Default is current date and time."
                        },
                        {
                            "key": "received_at",
                            "type": "string",
                            "label": "Received at",
                            "secret": false,
                            "default": "{event.receivedAt}",
                            "required": true,
                            "description": "When the event was received."
                        },
                        {
                            "key": "sent_at",
                            "type": "string",
                            "label": "Sent at",
                            "secret": false,
                            "default": "{event.sentAt}",
                            "required": true,
                            "description": "Device-time when the event was sent."
                        },
                        {
                            "key": "user_id",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": false,
                            "description": "The user's id"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "sendPageEvent",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Send Screen Event",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event = '$screen'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "name",
                            "type": "string",
                            "label": "Name",
                            "secret": false,
                            "default": "{event.event}",
                            "required": false,
                            "description": "Screen name"
                        },
                        {
                            "key": "properties",
                            "type": "dictionary",
                            "label": "Properties",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.properties}"
                            },
                            "required": false,
                            "description": "Properties to associate with the screen"
                        },
                        {
                            "key": "context",
                            "type": "dictionary",
                            "label": "Event context",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.context}"
                            },
                            "required": false,
                            "description": "Event context as it appears in Segment"
                        },
                        {
                            "key": "anonymous_id",
                            "type": "string",
                            "label": "Anonymous ID",
                            "secret": false,
                            "default": "{event.distinct_id}",
                            "required": false,
                            "description": "The anonymous ID associated with the user"
                        },
                        {
                            "key": "message_id",
                            "type": "string",
                            "label": "Message ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": false,
                            "description": "The Segment messageId"
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": false,
                            "description": "A timestamp of when the event took place. Default is current date and time."
                        },
                        {
                            "key": "received_at",
                            "type": "string",
                            "label": "Received at",
                            "secret": false,
                            "default": "{event.receivedAt}",
                            "required": true,
                            "description": "When the event was received."
                        },
                        {
                            "key": "sent_at",
                            "type": "string",
                            "label": "Sent at",
                            "secret": false,
                            "default": "{event.sentAt}",
                            "required": true,
                            "description": "Device-time when the event was sent."
                        },
                        {
                            "key": "user_id",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": false,
                            "description": "The user's id"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "sendScreenEvent",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                }
            ],
            "mappings": null,
            "status": "alpha",
            "free": false,
            "type": "destination",
            "id": "segment-actions-canvas",
            "name": "Canvas",
            "hog": "return event",
            "inputs_schema": [
                {
                    "key": "apiToken",
                    "type": "string",
                    "label": "API Token",
                    "secret": true,
                    "required": true,
                    "description": "API token generated by Canvas"
                },
                {
                    "key": "debug_mode",
                    "type": "boolean",
                    "label": "Debug Mode",
                    "default": false,
                    "description": "Will log configuration and request details"
                }
            ],
            "category": [],
            "code_language": "hog",
            "description": "Send event data to Canvas",
            "filters": null,
            "masking": null,
            "icon_url": "/static/services/supernova.ai.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-castle",
            "name": "Castle",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Authentication Platforms"],
            "code_language": "hog",
            "description": "Send events to Castle.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Castle.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-chartbeat",
            "name": "Chartbeat",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Analytics"],
            "code_language": "hog",
            "description": "Send events to Chartbeat.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Chartbeat.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "beta",
            "free": false,
            "type": "destination",
            "id": "template-clearbit",
            "name": "Clearbit",
            "hog": "let api_key := inputs.api_key\nlet email := inputs.email\n\nif (empty(email) or event.event == '$set' or person.properties.clearbit_enriched) {\n    return false\n}\n\nlet response := fetch(f'https://person-stream.clearbit.com/v2/combined/find?email={email}', {\n    'method': 'GET',\n    'headers': {\n        'Authorization': f'Bearer {api_key}'\n    }\n})\nif (response.status == 200 and not empty(response.body.person)) {\n    print('Clearbit data found - sending event to PostHog')\n    postHogCapture({\n        'event': '$set',\n        'distinct_id': event.distinct_id,\n        'properties': {\n            '$lib': 'hog_function',\n            '$hog_function_source': source.url,\n            '$set_once': {\n                'person': response.body.person,\n                'company': response.body.company,\n                'clearbit_enriched': true\n            }\n        }\n    })\n} else {\n    print('No Clearbit data found')\n}",
            "inputs_schema": [
                {
                    "key": "api_key",
                    "type": "string",
                    "label": "Clearbit API Key",
                    "secret": true,
                    "required": true
                },
                {
                    "key": "email",
                    "type": "string",
                    "label": "Email of the user",
                    "secret": false,
                    "default": "{person.properties.email}",
                    "required": true,
                    "description": "Where to find the email for the user to be checked with Clearbit"
                }
            ],
            "category": ["Analytics"],
            "code_language": "hog",
            "description": "Loads data from the Clearbit API and tracks an additional event with the enriched data if found. Once enriched, the person will not be enriched again.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/services/clearbit.png"
        },
        {
            "mapping_templates": [
                {
                    "name": "Event Name is Delete User",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event = 'Delete User'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "identity",
                            "type": "string",
                            "label": "Identity",
                            "secret": false,
                            "default": "{person.id}",
                            "required": true,
                            "description": "The ID of the profile which you want to delete"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "userDelete",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Event Type is Identify",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event in ('$identify', '$set')",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "ts",
                            "type": "string",
                            "label": "Created At",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": false,
                            "description": "A timestamp when the person was created"
                        },
                        {
                            "key": "profileData",
                            "type": "dictionary",
                            "label": "Person Attributes",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.properties}"
                            },
                            "required": false,
                            "description": "Optional attributes for the person. When updating a person attributes added or updated, not removed"
                        },
                        {
                            "key": "identity",
                            "type": "string",
                            "label": "Identity",
                            "secret": false,
                            "default": "{person.id}",
                            "required": true,
                            "description": "The Id used to uniquely identify a person in CleverTap"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "userUpload",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                }
            ],
            "mappings": null,
            "status": "alpha",
            "free": false,
            "type": "destination",
            "id": "segment-actions-clevertap",
            "name": "CleverTap",
            "hog": "return event",
            "inputs_schema": [
                {
                    "key": "clevertapAccountId",
                    "type": "string",
                    "label": "CleverTap Account ID",
                    "secret": false,
                    "required": true,
                    "description": "CleverTap Account Id. This can be found under [Settings Page](https://developer.clevertap.com/docs/authentication#getting-your-account-credentials)."
                },
                {
                    "key": "clevertapPasscode",
                    "type": "string",
                    "label": "CleverTap Account Passcode",
                    "secret": false,
                    "required": true,
                    "description": "CleverTap Passcode. This can be found under [Settings Page](https://developer.clevertap.com/docs/authentication#getting-your-account-credentials)."
                },
                {
                    "key": "clevertapEndpoint",
                    "type": "choice",
                    "label": "REST Endpoint",
                    "secret": false,
                    "choices": [
                        {
                            "label": "SK",
                            "value": "https://sk1.api.clevertap.com"
                        },
                        {
                            "label": "EU",
                            "value": "https://eu1.api.clevertap.com"
                        },
                        {
                            "label": "US",
                            "value": "https://us1.api.clevertap.com"
                        },
                        {
                            "label": "SG",
                            "value": "https://sg1.api.clevertap.com"
                        },
                        {
                            "label": "IN",
                            "value": "https://in1.api.clevertap.com"
                        }
                    ],
                    "default": "https://sk1.api.clevertap.com",
                    "required": true,
                    "description": "Learn More about [Account regions](https://docs.clevertap.com/docs/build-segment-destination#set-up-segment-destination-action)."
                },
                {
                    "key": "debug_mode",
                    "type": "boolean",
                    "label": "Debug Mode",
                    "default": false,
                    "description": "Will log configuration and request details"
                }
            ],
            "category": [],
            "code_language": "hog",
            "description": "Send event data to CleverTap",
            "filters": null,
            "masking": null,
            "icon_url": "/static/services/clevertap.com.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-clickup",
            "name": "ClickUp",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Productivity"],
            "code_language": "hog",
            "description": "Send events to ClickUp.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/ClickUp.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-commandbar",
            "name": "Commandbar",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Marketing"],
            "code_language": "hog",
            "description": "Send events to Commandbar.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Commandbar.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-comscore",
            "name": "Comscore",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Analytics"],
            "code_language": "hog",
            "description": "Send events to Comscore.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Comscore.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-confluent-cloud",
            "name": "Confluent Cloud",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Event Messaging"],
            "code_language": "hog",
            "description": "Send events to Confluent Cloud.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Confluent_Cloud.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-convertflow",
            "name": "ConvertFlow",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["A/B Testing & Feature Experimentation"],
            "code_language": "hog",
            "description": "Send events to ConvertFlow.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/ConvertFlow.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-courier",
            "name": "Courier",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Marketing"],
            "code_language": "hog",
            "description": "Send events to Courier.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Courier.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-crazy-egg",
            "name": "Crazy Egg",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Heatmap Recording"],
            "code_language": "hog",
            "description": "Send events to Crazy Egg.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Crazy_Egg.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-criteo",
            "name": "Criteo",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Advertising"],
            "code_language": "hog",
            "description": "Send events to Criteo.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Criteo.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-criteo-audience",
            "name": "Criteo Audience",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Advertising"],
            "code_language": "hog",
            "description": "Send events to Criteo Audience.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Criteo_Audience.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-crowdpower",
            "name": "CrowdPower",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Analytics"],
            "code_language": "hog",
            "description": "Send events to CrowdPower.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/CrowdPower.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-cruncher",
            "name": "Cruncher",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Analytics"],
            "code_language": "hog",
            "description": "Send events to Cruncher.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Cruncher.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-custify",
            "name": "Custify",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["CRM"],
            "code_language": "hog",
            "description": "Send events to Custify.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Custify.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "stable",
            "free": false,
            "type": "destination",
            "id": "template-customerio",
            "name": "Customer.io",
            "hog": "let action := inputs.action\nlet name := event.event\n\n\nif (empty(inputs.identifier_value) or empty(inputs.identifier_key)) {\n    print('No identifier set. Skipping as identifier is required.')\n    return\n}\n\nlet identifiers := {\n    inputs.identifier_key: inputs.identifier_value\n}\n\nif (action == 'automatic') {\n    if (event.event in ('$identify', '$set')) {\n        action := 'identify'\n        name := null\n    } else if (event.event == '$pageview') {\n        action := 'page'\n        name := event.properties.$current_url\n    } else if (event.event == '$screen') {\n        action := 'screen'\n        name := event.properties.$screen_name\n    } else {\n        action := 'event'\n    }\n}\n\nlet attributes := inputs.include_all_properties ? action == 'identify' ? person.properties : event.properties : {}\nif (inputs.include_all_properties and action != 'identify' and not empty(event.elements_chain)) {\n    attributes['$elements_chain'] := event.elements_chain\n}\nlet timestamp := toInt(toUnixTimestamp(toDateTime(event.timestamp)))\n\nfor (let key, value in inputs.attributes) {\n    attributes[key] := value\n}\n\nfor (let key, value in attributes) {\n    if (value and typeof(value) == 'string') {\n        if (length(value) > 1000) {\n            attributes[key] := substring(value, 1, 1000)\n        }\n    }\n}\n\nlet res := fetch(f'https://{inputs.host}/api/v2/entity', {\n    'method': 'POST',\n    'headers': {\n        'User-Agent': 'PostHog Customer.io App',\n        'Authorization': f'Basic {base64Encode(f'{inputs.site_id}:{inputs.token}')}',\n        'Content-Type': 'application/json'\n    },\n    'body': {\n        'type': 'person',\n        'action': action,\n        'name': name,\n        'identifiers': identifiers,\n        'attributes': attributes,\n        'timestamp': timestamp\n    }\n})\n\nif (res.status >= 400) {\n    throw Error(f'Error from customer.io api: {res.status}: {res.body}');\n}",
            "inputs_schema": [
                {
                    "key": "site_id",
                    "type": "string",
                    "label": "Customer.io site ID",
                    "secret": false,
                    "required": true
                },
                {
                    "key": "token",
                    "type": "string",
                    "label": "Customer.io API Key",
                    "secret": true,
                    "required": true,
                    "description": "You can find your API key in your Customer.io account settings (https://fly.customer.io/settings/api_credentials)"
                },
                {
                    "key": "host",
                    "type": "choice",
                    "label": "Customer.io region",
                    "secret": false,
                    "choices": [
                        {
                            "label": "US (track.customer.io)",
                            "value": "track.customer.io"
                        },
                        {
                            "label": "EU (track-eu.customer.io)",
                            "value": "track-eu.customer.io"
                        }
                    ],
                    "default": "track.customer.io",
                    "required": true,
                    "description": "Use the EU variant if your Customer.io account is based in the EU region"
                },
                {
                    "key": "identifier_key",
                    "type": "choice",
                    "label": "Identifier key",
                    "secret": false,
                    "choices": [
                        {
                            "label": "Email",
                            "value": "email"
                        },
                        {
                            "label": "ID",
                            "value": "id"
                        },
                        {
                            "label": "Customer.io ID",
                            "value": "cio_id"
                        }
                    ],
                    "default": "email",
                    "required": true,
                    "description": "The kind of identifier to be used. See here for more information: https://customer.io/docs/api/track/#operation/entity"
                },
                {
                    "key": "identifier_value",
                    "type": "string",
                    "label": "Identifier value",
                    "secret": false,
                    "default": "{person.properties.email}",
                    "required": true,
                    "description": "The value to be used for the identifier. If the value is empty nothing will be sent. See here for more information: https://customer.io/docs/api/track/#operation/entity"
                },
                {
                    "key": "action",
                    "type": "choice",
                    "label": "Action",
                    "secret": false,
                    "choices": [
                        {
                            "label": "Automatic",
                            "value": "automatic"
                        },
                        {
                            "label": "Identify",
                            "value": "identify"
                        },
                        {
                            "label": "Event",
                            "value": "event"
                        },
                        {
                            "label": "Page",
                            "value": "page"
                        },
                        {
                            "label": "Screen",
                            "value": "screen"
                        },
                        {
                            "label": "Delete",
                            "value": "delete"
                        }
                    ],
                    "default": "automatic",
                    "required": true,
                    "description": "Choose the action to be tracked. Automatic will convert $identify, $pageview and $screen to identify, page and screen automatically - otherwise defaulting to event"
                },
                {
                    "key": "include_all_properties",
                    "type": "boolean",
                    "label": "Include all properties as attributes",
                    "secret": false,
                    "default": false,
                    "required": true,
                    "description": "If set, all event properties will be included as attributes. Individual attributes can be overridden below. For identify events the Person properties will be used."
                },
                {
                    "key": "attributes",
                    "type": "dictionary",
                    "label": "Attribute mapping",
                    "secret": false,
                    "default": {
                        "email": "{person.properties.email}",
                        "lastname": "{person.properties.lastname}",
                        "firstname": "{person.properties.firstname}"
                    },
                    "required": false,
                    "description": "Map of Customer.io attributes and their values. You can use the filters section to filter out unwanted events."
                }
            ],
            "category": ["Email Marketing"],
            "code_language": "hog",
            "description": "Identify or track events against customers in Customer.io",
            "filters": {
                "events": [
                    {
                        "id": "$identify",
                        "name": "$identify",
                        "type": "events",
                        "order": 0
                    },
                    {
                        "id": "$pageview",
                        "name": "$pageview",
                        "type": "events",
                        "order": 0
                    }
                ],
                "actions": [],
                "filter_test_accounts": true
            },
            "masking": null,
            "icon_url": "/static/services/customerio.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-customfit-ai",
            "name": "CustomFit.ai",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Analytics"],
            "code_language": "hog",
            "description": "Send events to CustomFit.ai.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/CustomFit.ai.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-databricks-delta-lake",
            "name": "Databricks Delta Lake",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Data Warehouse"],
            "code_language": "hog",
            "description": "Send events to Databricks Delta Lake.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Databricks_Delta_Lake.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-delighted",
            "name": "Delighted",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Surveys"],
            "code_language": "hog",
            "description": "Send events to Delighted.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Delighted.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-digitalocean-spaces",
            "name": "DigitalOcean Spaces",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Databases & Object Storage"],
            "code_language": "hog",
            "description": "Send events to DigitalOcean Spaces.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/DigitalOcean_Spaces.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "stable",
            "free": true,
            "type": "destination",
            "id": "template-discord",
            "name": "Discord",
            "hog": "if (not match(inputs.webhookUrl, '^https://discord.com/api/webhooks/.*')) {\n    throw Error('Invalid URL. The URL should match the format: https://discord.com/api/webhooks/...')\n}\n\nlet res := fetch(inputs.webhookUrl, {\n    'body': {\n        'content': inputs.content\n    },\n    'method': 'POST',\n    'headers': {\n        'Content-Type': 'application/json'\n    }\n});\n\nif (res.status >= 400) {\n    throw Error(f'Failed to post message to Discord: {res.status}: {res.body}');\n}",
            "inputs_schema": [
                {
                    "key": "webhookUrl",
                    "type": "string",
                    "label": "Webhook URL",
                    "secret": false,
                    "required": true,
                    "description": "See this page on how to generate a Webhook URL: https://support.discord.com/hc/en-us/articles/228383668-Intro-to-Webhooks"
                },
                {
                    "key": "content",
                    "type": "string",
                    "label": "Content",
                    "secret": false,
                    "default": "**{person.name}** triggered event: '{event.event}'",
                    "required": true,
                    "description": "(see https://support.discord.com/hc/en-us/articles/210298617-Markdown-Text-101-Chat-Formatting-Bold-Italic-Underline)"
                }
            ],
            "category": ["Customer Success"],
            "code_language": "hog",
            "description": "Sends a message to a discord channel",
            "filters": null,
            "masking": null,
            "icon_url": "/static/services/discord.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-drift",
            "name": "Drift",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Business Messaging"],
            "code_language": "hog",
            "description": "Send events to Drift.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Drift.png"
        },
        {
            "mapping_templates": [
                {
                    "name": "Identify",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event in ('$identify', '$set')",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "custom_fields",
                            "type": "dictionary",
                            "label": "Custom fields",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{person.properties.custom_fields}"
                            },
                            "required": false,
                            "description": "Custom fields to add to a person's profile. Non string values will be stringified."
                        },
                        {
                            "key": "email",
                            "type": "string",
                            "label": "Email Address",
                            "secret": false,
                            "default": "{person.properties.email}",
                            "required": true,
                            "description": "The person's email address."
                        },
                        {
                            "key": "ip",
                            "type": "string",
                            "label": "IP Address",
                            "secret": false,
                            "default": "{event.properties.$ip}",
                            "required": false,
                            "description": "The person's ip address."
                        },
                        {
                            "key": "phone",
                            "type": "string",
                            "label": "SMS Number",
                            "secret": false,
                            "default": "{person.properties.phone}",
                            "required": false,
                            "description": "The person's sms number."
                        },
                        {
                            "key": "initial_status",
                            "type": "string",
                            "label": "Initial Status",
                            "secret": false,
                            "default": "{person.properties.initial_status ?? 'unsubscribed'}",
                            "required": false,
                            "description": "The person's subscription status if newly identified."
                        },
                        {
                            "key": "status",
                            "type": "string",
                            "label": "Status",
                            "secret": false,
                            "default": "{person.properties.status}",
                            "required": false,
                            "description": "The person's subscription status. Overrides initial_status."
                        },
                        {
                            "key": "status_updated_at",
                            "type": "string",
                            "label": "Status Updated At",
                            "secret": false,
                            "default": "{person.properties.status_updated_at}",
                            "required": false,
                            "description": "The timestamp associated with the update to a person's status."
                        },
                        {
                            "key": "tags",
                            "type": "string",
                            "label": "Tags",
                            "secret": false,
                            "default": "{person.properties.tags}",
                            "required": false,
                            "description": "Comma delimited list of tags to add to a person's profile. e.g. \"tag1,tag2\"."
                        },
                        {
                            "key": "timezone",
                            "type": "string",
                            "label": "Timezone",
                            "secret": false,
                            "default": "{event.properties.$timezone}",
                            "required": false,
                            "description": "The person's timezone."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "identify",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Track event",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify')",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "action",
                            "type": "string",
                            "label": "Action",
                            "secret": false,
                            "default": "{event.event}",
                            "required": true,
                            "description": "The name of the action."
                        },
                        {
                            "key": "email",
                            "type": "string",
                            "label": "Email Address",
                            "secret": false,
                            "default": "{event.properties.email ?? person.properties.email}",
                            "required": true,
                            "description": "The person's email address."
                        },
                        {
                            "key": "properties",
                            "type": "dictionary",
                            "label": "Properties",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.properties}"
                            },
                            "required": false,
                            "description": "Additional properties associated with the event."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "trackEvent",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                }
            ],
            "mappings": null,
            "status": "beta",
            "free": false,
            "type": "destination",
            "id": "segment-actions-drip",
            "name": "Drip",
            "hog": "return event",
            "inputs_schema": [
                {
                    "key": "accountId",
                    "type": "string",
                    "label": "Account ID",
                    "secret": false,
                    "required": true,
                    "description": "Account ID for your Drip account. You can find this in your Drip account settings."
                },
                {
                    "key": "apiKey",
                    "type": "string",
                    "label": "API Key",
                    "secret": false,
                    "required": true,
                    "description": "API key for your Drip account. You can find this in your Drip account settings."
                },
                {
                    "key": "debug_mode",
                    "type": "boolean",
                    "label": "Debug Mode",
                    "default": false,
                    "description": "Will log configuration and request details"
                }
            ],
            "category": [],
            "code_language": "hog",
            "description": "Send event data to Drip",
            "filters": null,
            "masking": null,
            "icon_url": "/static/services/drip.com.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-elevio",
            "name": "Elevio",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Customer Service"],
            "code_language": "hog",
            "description": "Send events to Elevio.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Elevio.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-eloqua",
            "name": "Eloqua",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Marketing"],
            "code_language": "hog",
            "description": "Send events to Eloqua.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Eloqua.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-emarsys",
            "name": "Emarsys",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["CRM"],
            "code_language": "hog",
            "description": "Send events to Emarsys.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Emarsys.svg"
        },
        {
            "mapping_templates": [
                {
                    "name": "Track Event",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify')",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "event",
                            "type": "string",
                            "label": "Event Name",
                            "secret": false,
                            "default": "{event.event}",
                            "required": true,
                            "description": "The name of the event."
                        },
                        {
                            "key": "properties",
                            "type": "dictionary",
                            "label": "Event Properties",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.properties}"
                            },
                            "required": false,
                            "description": "The properties of the event."
                        },
                        {
                            "key": "userFields",
                            "type": "dictionary",
                            "label": "User Fields",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{person.properties}"
                            },
                            "required": false,
                            "description": "Any default or custom field of the user. On the left-hand side, input the API name of the field as seen in your Encharge account. On the right-hand side, map the Segment field that contains the value. Any properties that don't exist will be created automatically. See more information in [Encharge's documentation](https://help.encharge.io/article/206-create-and-manage-custom-fields)."
                        },
                        {
                            "key": "type",
                            "type": "string",
                            "label": "Type",
                            "secret": false,
                            "default": "{event.event == '$pageview' ? 'page' : event.event == '$screen' ? 'screen' : event.event == '$groupidentify' ? 'group' : event.event in ('$identify', '$set') ? 'identify' : event.event == '$alias' ? 'alias' : 'track'}",
                            "required": true,
                            "description": "The type of event."
                        },
                        {
                            "key": "email",
                            "type": "string",
                            "label": "Email",
                            "secret": false,
                            "default": "{person.properties.email ?? event.properties.email}",
                            "required": false,
                            "description": "The email address of the user."
                        },
                        {
                            "key": "segmentAnonymousId",
                            "type": "string",
                            "label": "Anonymous ID",
                            "secret": false,
                            "default": "{event.distinct_id}",
                            "required": false,
                            "description": "An anonymous identifier for this user."
                        },
                        {
                            "key": "userId",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": false,
                            "description": "The User ID associated with the user in Encharge."
                        },
                        {
                            "key": "groupId",
                            "type": "string",
                            "label": "Group ID",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "An ID associating the event with a group."
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": false,
                            "description": "The timestamp of the event"
                        },
                        {
                            "key": "messageId",
                            "type": "string",
                            "label": "MessageId",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": false,
                            "description": "The Segment messageId"
                        },
                        {
                            "key": "ip",
                            "type": "string",
                            "label": "IP Address",
                            "secret": false,
                            "default": "{event.properties.$ip}",
                            "required": false,
                            "description": "The IP address of the user."
                        },
                        {
                            "key": "userAgent",
                            "type": "string",
                            "label": "User Agent",
                            "secret": false,
                            "default": "{event.properties.$raw_user_agent}",
                            "required": false,
                            "description": "The user agent of the user. Used to determine the device, browser and operating system."
                        },
                        {
                            "key": "campaign",
                            "type": "dictionary",
                            "label": "Campaign",
                            "secret": false,
                            "default": {
                                "name": "{event.properties.utm_campaign}",
                                "term": "{event.properties.utm_term}",
                                "medium": "{event.properties.utm_medium}",
                                "source": "{event.properties.utm_source}",
                                "content": "{event.properties.utm_content}"
                            },
                            "required": false,
                            "description": "UTM campaign information."
                        },
                        {
                            "key": "page",
                            "type": "dictionary",
                            "label": "Page",
                            "secret": false,
                            "default": {
                                "url": "{event.properties.$current_url}",
                                "path": "{event.properties.$pathname}",
                                "title": "{event.properties.title}",
                                "search": "",
                                "referrer": "{event.properties.$referrer}"
                            },
                            "required": false,
                            "description": "Information about the page where the event occurred."
                        },
                        {
                            "key": "location",
                            "type": "dictionary",
                            "label": "Location",
                            "secret": false,
                            "default": {
                                "city": "{event.properties.$geoip_city_name}",
                                "region": "",
                                "country": "{event.properties.$geoip_country_name}"
                            },
                            "required": false,
                            "description": "Information about the location of the user."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "trackEvent",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Identify User",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event in ('$identify', '$set')",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "user",
                            "type": "dictionary",
                            "label": "User Fields",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{person.properties}"
                            },
                            "required": false,
                            "description": "Fields to associate with the user in Encharge. Any unexisting fields will be automatically created in Encharge."
                        },
                        {
                            "key": "email",
                            "type": "string",
                            "label": "Email",
                            "secret": false,
                            "default": "{person.properties.email ?? person.properties.email}",
                            "required": false,
                            "description": "The email address of the user."
                        },
                        {
                            "key": "type",
                            "type": "string",
                            "label": "Type",
                            "secret": false,
                            "default": "{event.event == '$pageview' ? 'page' : event.event == '$screen' ? 'screen' : event.event == '$groupidentify' ? 'group' : event.event in ('$identify', '$set') ? 'identify' : event.event == '$alias' ? 'alias' : 'track'}",
                            "required": true,
                            "description": "The type of event."
                        },
                        {
                            "key": "segmentAnonymousId",
                            "type": "string",
                            "label": "Anonymous ID",
                            "secret": false,
                            "default": "{event.distinct_id}",
                            "required": false,
                            "description": "An anonymous identifier for this user."
                        },
                        {
                            "key": "userId",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": false,
                            "description": "The User ID associated with the user in Encharge."
                        },
                        {
                            "key": "groupId",
                            "type": "string",
                            "label": "Group ID",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "An ID associating the event with a group."
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": false,
                            "description": "The timestamp of the event"
                        },
                        {
                            "key": "messageId",
                            "type": "string",
                            "label": "MessageId",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": false,
                            "description": "The Segment messageId"
                        },
                        {
                            "key": "ip",
                            "type": "string",
                            "label": "IP Address",
                            "secret": false,
                            "default": "{event.properties.$ip}",
                            "required": false,
                            "description": "The IP address of the user."
                        },
                        {
                            "key": "userAgent",
                            "type": "string",
                            "label": "User Agent",
                            "secret": false,
                            "default": "{event.properties.$raw_user_agent}",
                            "required": false,
                            "description": "The user agent of the user. Used to determine the device, browser and operating system."
                        },
                        {
                            "key": "campaign",
                            "type": "dictionary",
                            "label": "Campaign",
                            "secret": false,
                            "default": {
                                "name": "{event.properties.utm_campaign}",
                                "term": "{event.properties.utm_term}",
                                "medium": "{event.properties.utm_medium}",
                                "source": "{event.properties.utm_source}",
                                "content": "{event.properties.utm_content}"
                            },
                            "required": false,
                            "description": "UTM campaign information."
                        },
                        {
                            "key": "page",
                            "type": "dictionary",
                            "label": "Page",
                            "secret": false,
                            "default": {
                                "url": "{event.properties.$current_url}",
                                "path": "{event.properties.$pathname}",
                                "title": "{event.properties.title}",
                                "search": "",
                                "referrer": "{event.properties.$referrer}"
                            },
                            "required": false,
                            "description": "Information about the page where the event occurred."
                        },
                        {
                            "key": "location",
                            "type": "dictionary",
                            "label": "Location",
                            "secret": false,
                            "default": {
                                "city": "{event.properties.$geoip_city_name}",
                                "region": "",
                                "country": "{event.properties.$geoip_country_name}"
                            },
                            "required": false,
                            "description": "Information about the location of the user."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "identifyUser",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Track Page View",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event = '$pageview'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "properties",
                            "type": "dictionary",
                            "label": "Page View Properties",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.properties}"
                            },
                            "required": false,
                            "description": "Custom properties to send with the pageview. Please note that URL, title, refererrer, path and search are automatically collected and don't have to be mapped here."
                        },
                        {
                            "key": "userFields",
                            "type": "dictionary",
                            "label": "User Fields",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{person.properties}"
                            },
                            "required": false,
                            "description": "Any default or custom field of the user. On the left-hand side, input the API name of the field as seen in your Encharge account. On the right-hand side, map the Segment field that contains the value. Any properties that don't exist will be created automatically. See more information in [Encharge's documentation](https://help.encharge.io/article/206-create-and-manage-custom-fields)."
                        },
                        {
                            "key": "type",
                            "type": "string",
                            "label": "Type",
                            "secret": false,
                            "default": "{event.event == '$pageview' ? 'page' : event.event == '$screen' ? 'screen' : event.event == '$groupidentify' ? 'group' : event.event in ('$identify', '$set') ? 'identify' : event.event == '$alias' ? 'alias' : 'track'}",
                            "required": true,
                            "description": "The type of event."
                        },
                        {
                            "key": "email",
                            "type": "string",
                            "label": "Email",
                            "secret": false,
                            "default": "{person.properties.email ?? event.properties.email}",
                            "required": false,
                            "description": "The email address of the user."
                        },
                        {
                            "key": "segmentAnonymousId",
                            "type": "string",
                            "label": "Anonymous ID",
                            "secret": false,
                            "default": "{event.distinct_id}",
                            "required": false,
                            "description": "An anonymous identifier for this user."
                        },
                        {
                            "key": "userId",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": false,
                            "description": "The User ID associated with the user in Encharge."
                        },
                        {
                            "key": "groupId",
                            "type": "string",
                            "label": "Group ID",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "An ID associating the event with a group."
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": false,
                            "description": "The timestamp of the event"
                        },
                        {
                            "key": "messageId",
                            "type": "string",
                            "label": "MessageId",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": false,
                            "description": "The Segment messageId"
                        },
                        {
                            "key": "ip",
                            "type": "string",
                            "label": "IP Address",
                            "secret": false,
                            "default": "{event.properties.$ip}",
                            "required": false,
                            "description": "The IP address of the user."
                        },
                        {
                            "key": "userAgent",
                            "type": "string",
                            "label": "User Agent",
                            "secret": false,
                            "default": "{event.properties.$raw_user_agent}",
                            "required": false,
                            "description": "The user agent of the user. Used to determine the device, browser and operating system."
                        },
                        {
                            "key": "campaign",
                            "type": "dictionary",
                            "label": "Campaign",
                            "secret": false,
                            "default": {
                                "name": "{event.properties.utm_campaign}",
                                "term": "{event.properties.utm_term}",
                                "medium": "{event.properties.utm_medium}",
                                "source": "{event.properties.utm_source}",
                                "content": "{event.properties.utm_content}"
                            },
                            "required": false,
                            "description": "UTM campaign information."
                        },
                        {
                            "key": "page",
                            "type": "dictionary",
                            "label": "Page",
                            "secret": false,
                            "default": {
                                "url": "{event.properties.$current_url}",
                                "path": "{event.properties.$pathname}",
                                "title": "{event.properties.title}",
                                "search": "",
                                "referrer": "{event.properties.$referrer}"
                            },
                            "required": false,
                            "description": "Information about the page where the event occurred."
                        },
                        {
                            "key": "location",
                            "type": "dictionary",
                            "label": "Location",
                            "secret": false,
                            "default": {
                                "city": "{event.properties.$geoip_city_name}",
                                "region": "",
                                "country": "{event.properties.$geoip_country_name}"
                            },
                            "required": false,
                            "description": "Information about the location of the user."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "trackPageView",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Alias User",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event = '$alias'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "userId",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": true,
                            "description": "The new User ID to associate with the user in Encharge."
                        },
                        {
                            "key": "previousUserId",
                            "type": "string",
                            "label": "Previous User ID",
                            "secret": false,
                            "default": "{event.previousId}",
                            "required": true,
                            "description": "The previous User ID associated with the user in Encharge."
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": false,
                            "description": "The timestamp of the event"
                        },
                        {
                            "key": "messageId",
                            "type": "string",
                            "label": "MessageId",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": false,
                            "description": "The Segment messageId"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "aliasUser",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Create or Update Object",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event = '$groupidentify'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "objectType",
                            "type": "string",
                            "label": "Object Type",
                            "secret": false,
                            "default": "company",
                            "required": true,
                            "description": "The type of Encharge object to create or update."
                        },
                        {
                            "key": "externalId",
                            "type": "string",
                            "label": "External Object ID",
                            "secret": false,
                            "default": "{event.groupId}",
                            "required": false,
                            "description": "An ID from your app/database that is used to uniquely identify the object in Encharge."
                        },
                        {
                            "key": "id",
                            "type": "string",
                            "label": "Object ID",
                            "secret": false,
                            "required": false,
                            "description": "The Encharge ID of the object. Usually, you want to omit this and use External ID."
                        },
                        {
                            "key": "objectData",
                            "type": "dictionary",
                            "label": "Object Fields",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{person.properties}"
                            },
                            "required": false,
                            "description": "Data for the object fields in Encharge. Any unexisting fields will be ignored."
                        },
                        {
                            "key": "userId",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": false,
                            "description": "The User ID of the user to associate with the object. If no email or user ID is provided, no user will be created and associated."
                        },
                        {
                            "key": "email",
                            "type": "string",
                            "label": "Email",
                            "secret": false,
                            "default": "{event.email}",
                            "required": false,
                            "description": "The email of the user to associate with the object. If no email or user ID is provided, no user will be created and associated."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "createUpdateObject",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                }
            ],
            "mappings": null,
            "status": "alpha",
            "free": false,
            "type": "destination",
            "id": "segment-encharge-cloud-actions",
            "name": "Encharge",
            "hog": "return event",
            "inputs_schema": [
                {
                    "key": "apiKey",
                    "type": "string",
                    "label": "API Key",
                    "secret": false,
                    "required": true,
                    "description": "Encharge.io API Key. This can be found on your [Account page](https://app.encharge.io/settings/api-keys)."
                },
                {
                    "key": "debug_mode",
                    "type": "boolean",
                    "label": "Debug Mode",
                    "default": false,
                    "description": "Will log configuration and request details"
                }
            ],
            "category": [],
            "code_language": "hog",
            "description": "Send event data to Encharge",
            "filters": null,
            "masking": null,
            "icon_url": "/static/services/encharge.io.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "beta",
            "free": false,
            "type": "destination",
            "id": "template-engage-so",
            "name": "Engage.so",
            "hog": "fetch('https://api.engage.so/posthog', {\n    'method': 'POST',\n    'headers': {\n        'Authorization': f'Basic {base64Encode(f'{inputs.public_key}:{inputs.private_key}')}',\n        'Content-Type': 'application/json'\n    },\n    'body': event\n})",
            "inputs_schema": [
                {
                    "key": "public_key",
                    "type": "string",
                    "label": "Public key",
                    "secret": true,
                    "required": true,
                    "description": "Get your public key from your Engage dashboard (Settings -> Account)"
                },
                {
                    "key": "private_key",
                    "type": "string",
                    "label": "Private key",
                    "secret": true,
                    "required": true,
                    "description": "Get your private key from your Engage dashboard (Settings -> Account)"
                }
            ],
            "category": ["Email Marketing"],
            "code_language": "hog",
            "description": "Send events to Engage.so",
            "filters": {
                "events": [
                    {
                        "id": "$identify",
                        "name": "$identify",
                        "type": "events",
                        "order": 0
                    },
                    {
                        "id": "$set",
                        "name": "$set",
                        "type": "events",
                        "order": 1
                    },
                    {
                        "id": "$groupidentify",
                        "name": "$groupidentify",
                        "type": "events",
                        "order": 2
                    },
                    {
                        "id": "$unset",
                        "name": "$unset",
                        "type": "events",
                        "order": 3
                    },
                    {
                        "id": "$create_alias",
                        "name": "$create_alias",
                        "type": "events",
                        "order": 4
                    }
                ],
                "actions": [],
                "filter_test_accounts": true
            },
            "masking": null,
            "icon_url": "/static/services/engage.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-errorception",
            "name": "Errorception",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Error Reporting & Monitoring"],
            "code_language": "hog",
            "description": "Send events to Errorception.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Errorception.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-extole",
            "name": "Extole",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Marketing"],
            "code_language": "hog",
            "description": "Send events to Extole.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Extole.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-firebase",
            "name": "Firebase",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Analytics"],
            "code_language": "hog",
            "description": "Send events to Firebase.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Firebase.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-flurry",
            "name": "Flurry",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Analytics"],
            "code_language": "hog",
            "description": "Send events to Flurry.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Flurry.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-freshmarketer",
            "name": "Freshmarketer",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Marketing"],
            "code_language": "hog",
            "description": "Send events to Freshmarketer.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Freshmarketer.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-freshsales",
            "name": "Freshsales",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["CRM"],
            "code_language": "hog",
            "description": "Send events to Freshsales.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Freshsales.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-friendbuy",
            "name": "Friendbuy",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Marketing"],
            "code_language": "hog",
            "description": "Send events to Friendbuy.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Friendbuy.svg"
        },
        {
            "mapping_templates": [
                {
                    "name": "Track Event",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify')",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "userId",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": false,
                            "description": "The user's id"
                        },
                        {
                            "key": "name",
                            "type": "string",
                            "label": "Name",
                            "secret": false,
                            "default": "{event.event}",
                            "required": true,
                            "description": "The name of the event."
                        },
                        {
                            "key": "properties",
                            "type": "dictionary",
                            "label": "Properties",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.properties}"
                            },
                            "required": false,
                            "description": "A JSON object containing additional information about the event that will be indexed by FullStory."
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": false,
                            "description": "The date and time when the event occurred. If not provided, the current FullStory server time will be used."
                        },
                        {
                            "key": "useRecentSession",
                            "type": "string",
                            "label": "Use Recent Session",
                            "secret": false,
                            "required": false,
                            "description": "Set to true if the custom event should be attached to the user's most recent session. The most recent session must have had activity within the past 30 minutes."
                        },
                        {
                            "key": "sessionUrl",
                            "type": "string",
                            "label": "Session URL",
                            "secret": false,
                            "required": false,
                            "description": "If known, the FullStory session playback URL to which the event should be attached, as returned by the FS.getCurrentSessionURL() client API."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "trackEventV2",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Identify User",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event in ('$identify', '$set')",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "uid",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": false,
                            "description": "The user's id"
                        },
                        {
                            "key": "anonymousId",
                            "type": "string",
                            "label": "Anonymous ID",
                            "secret": false,
                            "default": "{event.distinct_id}",
                            "required": false,
                            "description": "The user's anonymous id"
                        },
                        {
                            "key": "displayName",
                            "type": "string",
                            "label": "Display Name",
                            "secret": false,
                            "default": "{person.properties.name}",
                            "required": false,
                            "description": "The user's display name"
                        },
                        {
                            "key": "email",
                            "type": "string",
                            "label": "Email",
                            "secret": false,
                            "default": "{person.properties.email}",
                            "required": false,
                            "description": "The user's email"
                        },
                        {
                            "key": "properties",
                            "type": "dictionary",
                            "label": "Traits",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{person.properties}"
                            },
                            "required": false,
                            "description": "The Segment traits to be forwarded to FullStory"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "identifyUserV2",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                }
            ],
            "mappings": null,
            "status": "beta",
            "free": false,
            "type": "destination",
            "id": "segment-actions-fullstory-cloud",
            "name": "Fullstory Cloud Mode",
            "hog": "return event",
            "inputs_schema": [
                {
                    "key": "apiKey",
                    "type": "string",
                    "label": "API Key",
                    "secret": true,
                    "required": true,
                    "description": "[FullStory API key](https://help.fullstory.com/hc/en-us/articles/360052021773-Managing-API-Keys)"
                },
                {
                    "key": "debug_mode",
                    "type": "boolean",
                    "label": "Debug Mode",
                    "default": false,
                    "description": "Will log configuration and request details"
                }
            ],
            "category": [],
            "code_language": "hog",
            "description": "Send event data to Fullstory Cloud Mode",
            "filters": null,
            "masking": null,
            "icon_url": "/static/services/fullstory.com.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-funnelenvy",
            "name": "FunnelEnvy",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Marketing"],
            "code_language": "hog",
            "description": "Send events to FunnelEnvy.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/FunnelEnvy.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-gainsight-cs",
            "name": "Gainsight CS",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Marketing"],
            "code_language": "hog",
            "description": "Send events to Gainsight CS.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Gainsight_CS.png"
        },
        {
            "mapping_templates": [
                {
                    "name": "Track Events",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify') and event != 'Order Completed'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "name",
                            "type": "string",
                            "label": "Event Name",
                            "secret": false,
                            "default": "{event.event}",
                            "required": true,
                            "description": "The name of the event"
                        },
                        {
                            "key": "metadata",
                            "type": "dictionary",
                            "label": "Event Metadata",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.properties}"
                            },
                            "required": false,
                            "description": "The event metadata to send to Gameball"
                        },
                        {
                            "key": "playerUniqueId",
                            "type": "string",
                            "label": "Player ID",
                            "secret": false,
                            "default": "{person.id ?? event.distinct_id}",
                            "required": true,
                            "description": "Unique identifier for the player in your database."
                        },
                        {
                            "key": "mobile",
                            "type": "string",
                            "label": "Mobile Number",
                            "secret": false,
                            "default": "{event.properties.mobile ?? person.properties.mobile}",
                            "required": false,
                            "description": "Player's unique mobile number."
                        },
                        {
                            "key": "email",
                            "type": "string",
                            "label": "Email",
                            "secret": false,
                            "default": "{event.properties.email ?? person.properties.email}",
                            "required": false,
                            "description": "Player's unique email."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "trackEvent",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Track Orders",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify') and event = 'Order Completed'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "playerUniqueId",
                            "type": "string",
                            "label": "Player ID",
                            "secret": false,
                            "default": "{person.id ?? event.distinct_id}",
                            "required": true,
                            "description": "Unique identifier for the player in your database."
                        },
                        {
                            "key": "mobile",
                            "type": "string",
                            "label": "Mobile Number",
                            "secret": false,
                            "default": "{event.properties.mobile ?? person.properties.mobile}",
                            "required": false,
                            "description": "Player's unique mobile number."
                        },
                        {
                            "key": "email",
                            "type": "string",
                            "label": "Email",
                            "secret": false,
                            "default": "{event.properties.email ?? person.properties.email}",
                            "required": false,
                            "description": "Player's unique email."
                        },
                        {
                            "key": "orderId",
                            "type": "string",
                            "label": "Order Id",
                            "secret": false,
                            "default": "{event.properties.order_id}",
                            "required": true,
                            "description": "Unique order ID which identifies the underlying order in your system, e.g. order number, invoice number. It will be used for reversing any reward or redemption transaction on Gameball."
                        },
                        {
                            "key": "orderDate",
                            "type": "string",
                            "label": "Order Date",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": true,
                            "description": "The date this order was placed, as an ISO8601 timestamp. Defaults to now if not provided."
                        },
                        {
                            "key": "totalPrice",
                            "type": "string",
                            "label": "Total Price",
                            "secret": false,
                            "default": "{event.properties.total}",
                            "required": true,
                            "description": "The sum of all order items' prices, including discounts, shipping, taxes, and tips. (Note: totalPaid is part of the totalPrice). Must be positive."
                        },
                        {
                            "key": "totalPaid",
                            "type": "string",
                            "label": "Total Paid",
                            "secret": false,
                            "default": "{event.properties.subtotal}",
                            "required": true,
                            "description": "The actual paid amount to the store. (Based on this amount, the player will be rewarded. Also, According to the Cashback Configuration). Must be positive."
                        },
                        {
                            "key": "totalShipping",
                            "type": "string",
                            "label": "Total Shipping",
                            "secret": false,
                            "default": "{event.properties.shipping}",
                            "required": false,
                            "description": "The total shipping price of the order. Must be positive."
                        },
                        {
                            "key": "totalTax",
                            "type": "string",
                            "label": "Total Tax",
                            "secret": false,
                            "default": "{event.properties.tax}",
                            "required": false,
                            "description": "The sum of all the taxes applied to the order in the shop currency. Must be positive."
                        },
                        {
                            "key": "totalDiscount",
                            "type": "string",
                            "label": "Total Discount",
                            "secret": false,
                            "default": "{event.properties.discount}",
                            "required": false,
                            "description": "Total discount applied on this order. Must be positive."
                        },
                        {
                            "key": "lineItems",
                            "type": "string",
                            "label": "Line Items",
                            "secret": false,
                            "default": "{event.properties.products}",
                            "required": false,
                            "description": "A list of line items, each containing information about an item in the order."
                        },
                        {
                            "key": "discountCodes",
                            "type": "string",
                            "label": "Discount Codes",
                            "secret": false,
                            "default": "{[event.properties.coupon]}",
                            "required": false,
                            "description": "An array of discount codes."
                        },
                        {
                            "key": "redeemedAmount",
                            "type": "string",
                            "label": "Redeemed Amount",
                            "secret": false,
                            "default": "{event.properties.redeemedAmount}",
                            "required": false,
                            "description": "Monetary value of the redeemed points to be used by that player while placing his order. Note:  If this field is set, then the holdReference value should be null. Also, both fields could be null."
                        },
                        {
                            "key": "holdReference",
                            "type": "string",
                            "label": "Hold Reference",
                            "secret": false,
                            "default": "{event.properties.holdReference}",
                            "required": false,
                            "description": "Hold reference ID received after calling Hold Points API. This is used in case you want to use already held points. Note:  If this field is set, then the redeemedAmount value should be null. Also, both fields could be null."
                        },
                        {
                            "key": "guest",
                            "type": "string",
                            "label": "Guest",
                            "secret": false,
                            "default": "{event.properties.is_guest ?? false}",
                            "required": false,
                            "description": "A boolean value indicating if the customer who placed this order is a guest. The default is false."
                        },
                        {
                            "key": "extra",
                            "type": "dictionary",
                            "label": "Extra",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.properties.extra}"
                            },
                            "required": false,
                            "description": "Key value pair(s) of any extra information about the order. The key values must be of type string or number"
                        },
                        {
                            "key": "merchantId",
                            "type": "string",
                            "label": "Merchant Id",
                            "secret": false,
                            "default": "{event.properties.merchantId}",
                            "required": false,
                            "description": "Merchant unique id or code"
                        },
                        {
                            "key": "merchantName",
                            "type": "string",
                            "label": "Merchant Name",
                            "secret": false,
                            "default": "{event.properties.merchantName}",
                            "required": false,
                            "description": "Merchant name"
                        },
                        {
                            "key": "branchId",
                            "type": "string",
                            "label": "Branch Id",
                            "secret": false,
                            "default": "{event.properties.branchId}",
                            "required": false,
                            "description": "Branch unique id or code"
                        },
                        {
                            "key": "branchName",
                            "type": "string",
                            "label": "Branch Name",
                            "secret": false,
                            "default": "{event.properties.branchName}",
                            "required": false,
                            "description": "Branch name"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "trackOrder",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Create Or Update Players",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event in ('$identify', '$set')",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "playerUniqueId",
                            "type": "string",
                            "label": "Player ID",
                            "secret": false,
                            "default": "{person.id ?? event.distinct_id}",
                            "required": true,
                            "description": "Unique identifier for the player in your database."
                        },
                        {
                            "key": "mobile",
                            "type": "string",
                            "label": "Mobile Number",
                            "secret": false,
                            "default": "{event.properties.mobile ?? person.properties.mobile}",
                            "required": false,
                            "description": "Player's unique mobile number."
                        },
                        {
                            "key": "email",
                            "type": "string",
                            "label": "Email",
                            "secret": false,
                            "default": "{event.properties.email ?? person.properties.email}",
                            "required": false,
                            "description": "Player's unique email."
                        },
                        {
                            "key": "displayName",
                            "type": "string",
                            "label": "Display Name",
                            "secret": false,
                            "default": "{person.properties.displayName}",
                            "required": false,
                            "description": "Player's display name"
                        },
                        {
                            "key": "firstName",
                            "type": "string",
                            "label": "First Name",
                            "secret": false,
                            "default": "{person.properties.first_name}",
                            "required": false,
                            "description": "Player's first name"
                        },
                        {
                            "key": "lastName",
                            "type": "string",
                            "label": "Last Name",
                            "secret": false,
                            "default": "{person.properties.last_name}",
                            "required": false,
                            "description": "Player's last name"
                        },
                        {
                            "key": "gender",
                            "type": "string",
                            "label": "Gender",
                            "secret": false,
                            "default": "{person.properties.gender}",
                            "required": false,
                            "description": "Player's gender."
                        },
                        {
                            "key": "dateOfBirth",
                            "type": "string",
                            "label": "Date Of Birth",
                            "secret": false,
                            "default": "{person.properties.birthday}",
                            "required": false,
                            "description": "Player's date of birth"
                        },
                        {
                            "key": "joinDate",
                            "type": "string",
                            "label": "Join Date",
                            "secret": false,
                            "default": "{person.properties.joinDate}",
                            "required": false,
                            "description": "Player's join date at your system."
                        },
                        {
                            "key": "country",
                            "type": "string",
                            "label": "Country",
                            "secret": false,
                            "default": "{person.properties.address.country}",
                            "required": false,
                            "description": "Player's country."
                        },
                        {
                            "key": "city",
                            "type": "string",
                            "label": "City",
                            "secret": false,
                            "default": "{person.properties.address.city}",
                            "required": false,
                            "description": "Player's city"
                        },
                        {
                            "key": "zip",
                            "type": "string",
                            "label": "Zip code",
                            "secret": false,
                            "default": "{person.properties.location.postalCode}",
                            "required": false,
                            "description": "Player's zip code"
                        },
                        {
                            "key": "preferredLanguage",
                            "type": "string",
                            "label": "Preferred language",
                            "secret": false,
                            "default": "{event.properties.$locale}",
                            "required": false,
                            "description": "Player's preferred language"
                        },
                        {
                            "key": "guest",
                            "type": "string",
                            "label": "Guest",
                            "secret": false,
                            "default": "{person.properties.is_guest ?? false}",
                            "required": false,
                            "description": "A boolean value indicating if the customer who placed this order is a guest. The default is false."
                        },
                        {
                            "key": "utms",
                            "type": "string",
                            "label": "UTMs",
                            "secret": false,
                            "default": "{event.context.campaign}",
                            "required": false,
                            "description": "Player's utms"
                        },
                        {
                            "key": "devices",
                            "type": "string",
                            "label": "Devices",
                            "secret": false,
                            "default": "{event.context}",
                            "required": false,
                            "description": "Player's used devices"
                        },
                        {
                            "key": "totalSpent",
                            "type": "string",
                            "label": "Total Spent",
                            "secret": false,
                            "default": "{person.properties.totalSpent}",
                            "required": false,
                            "description": "Player's total spent amount"
                        },
                        {
                            "key": "lastOrderDate",
                            "type": "string",
                            "label": "Last Order Date",
                            "secret": false,
                            "default": "{person.properties.lastOrderDate}",
                            "required": false,
                            "description": "Player's last order date"
                        },
                        {
                            "key": "totalOrders",
                            "type": "string",
                            "label": "Total Orders",
                            "secret": false,
                            "default": "{person.properties.totalOrders}",
                            "required": false,
                            "description": "Player's total orders"
                        },
                        {
                            "key": "avgOrderAmount",
                            "type": "string",
                            "label": "Average Order Amount",
                            "secret": false,
                            "default": "{person.properties.avgOrderAmount}",
                            "required": false,
                            "description": "Player's average order amount"
                        },
                        {
                            "key": "tags",
                            "type": "string",
                            "label": "Tags",
                            "secret": false,
                            "default": "{person.properties.tags}",
                            "required": false,
                            "description": "Comma separated string of tags to be attached to the player."
                        },
                        {
                            "key": "playerCustomAttributes",
                            "type": "dictionary",
                            "label": "Player Custom Attributes",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{person.properties.extra}"
                            },
                            "required": false,
                            "description": "Key value pairs of any extra player attributes."
                        },
                        {
                            "key": "referrerCode",
                            "type": "string",
                            "label": "Referrer Code",
                            "secret": false,
                            "default": "{person.properties.referrerCode}",
                            "required": false,
                            "description": "Referring player’s referral code. This is used in case of referral, where the player to be created is referred by the player having this code."
                        },
                        {
                            "key": "levelOrder",
                            "type": "string",
                            "label": "Level Order",
                            "secret": false,
                            "default": "{person.properties.levelOrder}",
                            "required": false,
                            "description": "The level order to place the player in. IMPORTANT: manual player leveling is available under special circumstances and is not available by default. Contact us for more info."
                        },
                        {
                            "key": "deviceToken",
                            "type": "string",
                            "label": "Device Token",
                            "secret": false,
                            "default": "{person.properties.deviceToken}",
                            "required": false,
                            "description": "The FCM token (Firebase Cloud Messaging) needed for sending mobile push notifications. (Used only in case of mobile app)"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "identifyPlayer",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                }
            ],
            "mappings": null,
            "status": "alpha",
            "free": false,
            "type": "destination",
            "id": "segment-actions-gameball",
            "name": "Gameball",
            "hog": "return event",
            "inputs_schema": [
                {
                    "key": "apiKey",
                    "type": "string",
                    "label": "API Key",
                    "secret": true,
                    "required": true,
                    "description": "Go to [help center](https://help.gameball.co/en/articles/3467114-get-your-account-integration-details-api-key-and-transaction-key) to learn how to find your API Key."
                },
                {
                    "key": "secretKey",
                    "type": "string",
                    "label": "Secret Key",
                    "secret": true,
                    "required": true,
                    "description": "Go to [help center](https://help.gameball.co/en/articles/3467114-get-your-account-integration-details-api-key-and-transaction-key) to learn how to find your API Key."
                },
                {
                    "key": "debug_mode",
                    "type": "boolean",
                    "label": "Debug Mode",
                    "default": false,
                    "description": "Will log configuration and request details"
                }
            ],
            "category": [],
            "code_language": "hog",
            "description": "Send event data to Gameball",
            "filters": null,
            "masking": null,
            "icon_url": "/static/services/gameball.co.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-gladly",
            "name": "Gladly",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Customer Service"],
            "code_language": "hog",
            "description": "Send events to Gladly.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Gladly.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "beta",
            "free": false,
            "type": "destination",
            "id": "template-gleap",
            "name": "Gleap",
            "hog": "let action := inputs.action\nlet name := event.event\n\nif (empty(inputs.userId)) {\n    print('No User ID set. Skipping...')\n    return\n}\n\nlet attributes := inputs.include_all_properties ? person.properties : {}\n\nattributes['userId'] := inputs.userId\n\nfor (let key, value in inputs.attributes) {\n    if (not empty(value)) {\n        attributes[key] := value\n    }\n}\n\nlet res := fetch(f'https://api.gleap.io/admin/identify', {\n    'method': 'POST',\n    'headers': {\n        'User-Agent': 'PostHog Gleap.io App',\n        'Api-Token': inputs.apiKey,\n        'Content-Type': 'application/json'\n    },\n    'body': attributes\n})\n\nif (res.status >= 400) {\n    throw Error(f'Error from gleap.io (status {res.status}): {res.body}')\n}",
            "inputs_schema": [
                {
                    "key": "apiKey",
                    "type": "string",
                    "label": "Gleap.io API Key",
                    "secret": true,
                    "required": true
                },
                {
                    "key": "userId",
                    "type": "string",
                    "label": "User ID",
                    "secret": false,
                    "default": "{person.id}",
                    "required": true,
                    "description": "You can choose to fill this from an `email` property or an `id` property. If the value is empty nothing will be sent. See here for more information: https://docs.gleap.io/server/rest-api"
                },
                {
                    "key": "include_all_properties",
                    "type": "boolean",
                    "label": "Include all properties as attributes",
                    "secret": false,
                    "default": false,
                    "required": true,
                    "description": "If set, all person properties will be included as attributes. Individual attributes can be overridden below."
                },
                {
                    "key": "attributes",
                    "type": "dictionary",
                    "label": "Attribute mapping",
                    "secret": false,
                    "default": {
                        "name": "{person.properties.name}",
                        "email": "{person.properties.email}",
                        "phone": "{person.properties.phone}"
                    },
                    "required": false,
                    "description": "Map of Gleap.io attributes and their values. You can use the filters section to filter out unwanted events."
                }
            ],
            "category": ["Customer Success"],
            "code_language": "hog",
            "description": "Updates a contact in Gleap",
            "filters": {
                "events": [
                    {
                        "id": "$identify",
                        "name": "$identify",
                        "type": "events",
                        "order": 0
                    },
                    {
                        "id": "$set",
                        "name": "$set",
                        "type": "events",
                        "order": 1
                    }
                ],
                "actions": [],
                "filter_test_accounts": true
            },
            "masking": null,
            "icon_url": "/static/services/gleap.png"
        },
        {
            "mapping_templates": [
                {
                    "name": "Signed Up",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": "Signed Up",
                                "type": "events"
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "conversionActionId",
                            "type": "integration_field",
                            "label": "Conversion action",
                            "secret": false,
                            "required": true,
                            "description": "The Conversion action associated with this conversion.",
                            "requires_field": "customerId",
                            "integration_key": "oauth",
                            "integration_field": "google_ads_conversion_action"
                        },
                        {
                            "key": "gclid",
                            "type": "string",
                            "label": "Google Click ID (gclid)",
                            "secret": false,
                            "default": "{person.properties.gclid ?? person.properties.$initial_gclid}",
                            "required": true,
                            "description": "The Google click ID (gclid) associated with this conversion."
                        },
                        {
                            "key": "conversionDateTime",
                            "type": "string",
                            "label": "Conversion Date Time",
                            "secret": false,
                            "default": "{formatDateTime(toDateTime(event.timestamp), '%Y-%m-%d %H:%i:%S')}+00:00",
                            "required": true,
                            "description": "The date time at which the conversion occurred. Must be after the click time. The timezone must be specified. The format is \"yyyy-mm-dd hh:mm:ss+|-hh:mm\", e.g. \"2019-01-01 12:32:45-08:00\"."
                        },
                        {
                            "key": "conversionValue",
                            "type": "string",
                            "label": "Conversion value",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "The value of the conversion for the advertiser."
                        },
                        {
                            "key": "currencyCode",
                            "type": "string",
                            "label": "Currency code",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "Currency associated with the conversion value. This is the ISO 4217 3-character currency code. For example: USD, EUR."
                        },
                        {
                            "key": "orderId",
                            "type": "string",
                            "label": "Order ID",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "The order ID associated with the conversion. An order id can only be used for one conversion per conversion action."
                        }
                    ]
                }
            ],
            "mappings": null,
            "status": "hidden",
            "free": false,
            "type": "destination",
            "id": "template-google-ads",
            "name": "Google Ads Conversions",
            "hog": "if (empty(inputs.gclid)) {\n    print('Empty `gclid`. Skipping...')\n    return\n}\n\nlet body := {\n    'conversions': [\n        {\n            'gclid': inputs.gclid,\n            'conversion_action': f'customers/{splitByString('/', inputs.customerId)[1]}/conversionActions/{inputs.conversionActionId}',\n            'conversion_date_time': inputs.conversionDateTime\n        }\n    ],\n    'partialFailure': true\n}\n\nif (not empty(inputs.conversionValue)) {\n    body.conversions[1].conversion_value := inputs.conversionValue\n}\nif (not empty(inputs.currencyCode)) {\n    body.conversions[1].currency_code := inputs.currencyCode\n}\nif (not empty(inputs.orderId)) {\n    body.conversions[1].order_id := inputs.orderId\n}\n\nlet res := fetch(f'https://googleads.googleapis.com/v18/customers/{splitByString('/', inputs.customerId)[1]}:uploadClickConversions', {\n    'method': 'POST',\n    'headers': {\n        'Authorization': f'Bearer {inputs.oauth.access_token}',\n        'Content-Type': 'application/json',\n        'login-customer-id': splitByString('/', inputs.customerId)[2]\n    },\n    'body': body\n})\n\nif (res.status >= 400) {\n    throw Error(f'Error from googleads.googleapis.com (status {res.status}): {res.body}')\n} else if (not empty(res.body.partialFailureError)) {\n    throw Error(f'Error from googleads.googleapis.com (status {res.status}): {res.body.partialFailureError.message}')\n}",
            "inputs_schema": [
                {
                    "key": "oauth",
                    "type": "integration",
                    "label": "Google Ads account",
                    "secret": false,
                    "required": true,
                    "integration": "google-ads",
                    "requiredScopes": "https://www.googleapis.com/auth/adwords https://www.googleapis.com/auth/userinfo.email"
                },
                {
                    "key": "customerId",
                    "type": "integration_field",
                    "label": "Customer ID",
                    "secret": false,
                    "required": true,
                    "description": "ID of your Google Ads Account. This should be 10-digits and in XXX-XXX-XXXX format.",
                    "integration_key": "oauth",
                    "integration_field": "google_ads_customer_id"
                }
            ],
            "category": ["Advertisement"],
            "code_language": "hog",
            "description": "Send conversion events to Google Ads",
            "filters": null,
            "masking": null,
            "icon_url": "/static/services/google-ads.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-google-analytics",
            "name": "Google Analytics",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Analytics"],
            "code_language": "hog",
            "description": "Send events to Google Analytics.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Google_Analytics.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-google-analytics-360",
            "name": "Google Analytics 360",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Analytics"],
            "code_language": "hog",
            "description": "Send events to Google Analytics 360.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Google_Analytics_360.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-google-analytics-4",
            "name": "Google Analytics 4",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Analytics"],
            "code_language": "hog",
            "description": "Send events to Google Analytics 4.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Google_Analytics_4.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-google-cloud-functions",
            "name": "Google Cloud Functions",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Serverless"],
            "code_language": "hog",
            "description": "Send events to Google Cloud Functions.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Google_Cloud_Functions.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "beta",
            "free": false,
            "type": "destination",
            "id": "template-google-cloud-storage",
            "name": "Google Cloud Storage",
            "hog": "let res := fetch(f'https://storage.googleapis.com/upload/storage/v1/b/{encodeURLComponent(inputs.bucketName)}/o?uploadType=media&name={encodeURLComponent(inputs.filename)}', {\n  'method': 'POST',\n  'headers': {\n    'Authorization': f'Bearer {inputs.auth.access_token}',\n    'Content-Type': 'application/json'\n  },\n  'body': inputs.payload\n})\n\nif (res.status >= 200 and res.status < 300) {\n  print('Event sent successfully!')\n} else {\n  throw Error('Error sending event', res)\n}",
            "inputs_schema": [
                {
                    "key": "auth",
                    "type": "integration",
                    "label": "Google Cloud service account",
                    "secret": false,
                    "required": true,
                    "integration": "google-cloud-storage"
                },
                {
                    "key": "bucketName",
                    "type": "string",
                    "label": "Bucket name",
                    "secret": false,
                    "required": true
                },
                {
                    "key": "filename",
                    "type": "string",
                    "label": "Filename",
                    "secret": false,
                    "default": "{toDate(event.timestamp)}/{event.timestamp}-{event.uuid}.json",
                    "required": true
                },
                {
                    "key": "payload",
                    "type": "string",
                    "label": "File contents",
                    "secret": false,
                    "default": "{jsonStringify({ 'event': event, 'person': person })}",
                    "required": true
                }
            ],
            "category": ["Custom"],
            "code_language": "hog",
            "description": "Send data to GCS. This creates a file per event.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/services/google-cloud-storage.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-google-optimize",
            "name": "Google Optimize",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["A/B Testing & Feature Experimentation"],
            "code_language": "hog",
            "description": "Send events to Google Optimize.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Google_Optimize.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "beta",
            "free": false,
            "type": "destination",
            "id": "template-google-pubsub",
            "name": "Google Pub/Sub",
            "hog": "let headers := () -> {\n  'Authorization': f'Bearer {inputs.auth.access_token}',\n  'Content-Type': 'application/json'\n}\nlet message := () -> {\n  'messageId': event.uuid,\n  'data': base64Encode(jsonStringify(inputs.payload)),\n  'attributes': inputs.attributes\n}\nlet res := fetch(f'https://pubsub.googleapis.com/v1/{inputs.topicId}:publish', {\n  'method': 'POST',\n  'headers': headers(),\n  'body': jsonStringify({ 'messages': [message()] })\n})\n\nif (res.status >= 200 and res.status < 300) {\n  print('Event sent successfully!')\n} else {\n  throw Error('Error sending event', res)\n}",
            "inputs_schema": [
                {
                    "key": "auth",
                    "type": "integration",
                    "label": "Google Cloud service account",
                    "secret": false,
                    "required": true,
                    "integration": "google-pubsub"
                },
                {
                    "key": "topicId",
                    "type": "string",
                    "label": "Topic name",
                    "secret": false,
                    "required": true
                },
                {
                    "key": "payload",
                    "type": "json",
                    "label": "Message Payload",
                    "secret": false,
                    "default": {
                        "event": "{event}",
                        "person": "{person}"
                    },
                    "required": false
                },
                {
                    "key": "attributes",
                    "type": "json",
                    "label": "Attributes",
                    "secret": false,
                    "default": {},
                    "required": false
                }
            ],
            "category": ["Custom"],
            "code_language": "hog",
            "description": "Send data to a Google Pub/Sub topic",
            "filters": null,
            "masking": null,
            "icon_url": "/static/services/google-cloud.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-google-sheets",
            "name": "Google Sheets",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Productivity"],
            "code_language": "hog",
            "description": "Send events to Google Sheets.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Google_Sheets.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-google-tag-manager",
            "name": "Google Tag Manager",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Tag Managers"],
            "code_language": "hog",
            "description": "Send events to Google Tag Manager.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Google_Tag_Manager.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-gosquared",
            "name": "GoSquared",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Marketing"],
            "code_language": "hog",
            "description": "Send events to GoSquared.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/GoSquared.png"
        },
        {
            "mapping_templates": [
                {
                    "name": "Send an event to GWEN",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify')",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "userId",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": true,
                            "description": "The user's id. (Format: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)"
                        },
                        {
                            "key": "type",
                            "type": "string",
                            "label": "Event Type",
                            "secret": false,
                            "default": "{event.event == '$pageview' ? 'page' : event.event == '$screen' ? 'screen' : event.event == '$groupidentify' ? 'group' : event.event in ('$identify', '$set') ? 'identify' : event.event == '$alias' ? 'alias' : 'track'}",
                            "required": true,
                            "description": "The type of the event"
                        },
                        {
                            "key": "data",
                            "type": "dictionary",
                            "label": "Data",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.properties}"
                            },
                            "required": false,
                            "description": "The data to be sent to GWEN"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "sendEvent",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Identify a user",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event in ('$identify', '$set')",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "userId",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": true,
                            "description": "The user's id. (Format: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)"
                        },
                        {
                            "key": "ip",
                            "type": "string",
                            "label": "User IP Address",
                            "secret": false,
                            "default": "{event.properties.$ip}",
                            "required": false,
                            "description": "The IP address of the user"
                        },
                        {
                            "key": "userAgent",
                            "type": "string",
                            "label": "User Agent",
                            "secret": false,
                            "default": "{event.properties.$raw_user_agent}",
                            "required": false,
                            "description": "The userAgent string of the user"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "identifyUser",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                }
            ],
            "mappings": null,
            "status": "alpha",
            "free": false,
            "type": "destination",
            "id": "segment-actions-cloud-gwen",
            "name": "GWEN",
            "hog": "return event",
            "inputs_schema": [
                {
                    "key": "apiKey",
                    "type": "string",
                    "label": "API Key",
                    "secret": true,
                    "required": true,
                    "description": "GWEN API key. Can be found [here](http://gwen.insertcoin.se/iam/api-token) (login required)"
                },
                {
                    "key": "debug_mode",
                    "type": "boolean",
                    "label": "Debug Mode",
                    "default": false,
                    "description": "Will log configuration and request details"
                }
            ],
            "category": [],
            "code_language": "hog",
            "description": "Send event data to GWEN",
            "filters": null,
            "masking": null,
            "icon_url": "/static/services/gwenplatform.com.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-help-scout",
            "name": "Help Scout",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Customer Service"],
            "code_language": "hog",
            "description": "Send events to Help Scout.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Help_Scout.svg"
        },
        {
            "mapping_templates": [
                {
                    "name": "Track Calls",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify')",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "anonymousId",
                            "type": "string",
                            "label": "Anonymous ID",
                            "secret": false,
                            "default": "{event.distinct_id}",
                            "required": false,
                            "description": "An anonymous identifier"
                        },
                        {
                            "key": "event",
                            "type": "string",
                            "label": "Name",
                            "secret": false,
                            "default": "{event.event}",
                            "required": false,
                            "description": "Event name"
                        },
                        {
                            "key": "properties",
                            "type": "dictionary",
                            "label": "Properties",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.properties}"
                            },
                            "required": false,
                            "description": "Properties to associate with the event"
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": true,
                            "description": "The timestamp of the event"
                        },
                        {
                            "key": "userId",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": false,
                            "description": "The ID associated with the user"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "track",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Page Calls",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event = '$pageview'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "anonymousId",
                            "type": "string",
                            "label": "Anonymous ID",
                            "secret": false,
                            "default": "{event.distinct_id}",
                            "required": false,
                            "description": "An anonymous identifier"
                        },
                        {
                            "key": "name",
                            "type": "string",
                            "label": "Name",
                            "secret": false,
                            "default": "{event.event}",
                            "required": false,
                            "description": "Page name"
                        },
                        {
                            "key": "properties",
                            "type": "dictionary",
                            "label": "Properties",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.properties}"
                            },
                            "required": false,
                            "description": "Properties to associate with the page view"
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": true,
                            "description": "The timestamp of the page view"
                        },
                        {
                            "key": "userId",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": false,
                            "description": "The ID associated with the user"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "page",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Screen Calls",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event = '$screen'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "anonymousId",
                            "type": "string",
                            "label": "Anonymous ID",
                            "secret": false,
                            "default": "{event.distinct_id}",
                            "required": false,
                            "description": "An anonymous identifier"
                        },
                        {
                            "key": "name",
                            "type": "string",
                            "label": "Name",
                            "secret": false,
                            "default": "{event.event}",
                            "required": false,
                            "description": "Mobile screen name"
                        },
                        {
                            "key": "properties",
                            "type": "dictionary",
                            "label": "Properties",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.properties}"
                            },
                            "required": false,
                            "description": "Properties to associate with the screen view"
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": true,
                            "description": "The timestamp of the screen view"
                        },
                        {
                            "key": "userId",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": false,
                            "description": "The ID associated with the user"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "screen",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Identify Calls",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event in ('$identify', '$set')",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "anonymousId",
                            "type": "string",
                            "label": "Anonymous ID",
                            "secret": false,
                            "default": "{event.distinct_id}",
                            "required": false,
                            "description": "An anonymous identifier"
                        },
                        {
                            "key": "traits",
                            "type": "dictionary",
                            "label": "Traits",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{person.properties}"
                            },
                            "required": false,
                            "description": "Traits to associate with the user"
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": true,
                            "description": "The timestamp of the event"
                        },
                        {
                            "key": "userId",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": false,
                            "description": "The ID associated with the user"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "identify",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Group Calls",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event = '$groupidentify'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "anonymousId",
                            "type": "string",
                            "label": "Anonymous ID",
                            "secret": false,
                            "default": "{event.distinct_id}",
                            "required": false,
                            "description": "An anonymous identifier"
                        },
                        {
                            "key": "groupId",
                            "type": "string",
                            "label": "Group ID",
                            "secret": false,
                            "default": "{event.groupId}",
                            "required": true,
                            "description": "The group ID"
                        },
                        {
                            "key": "traits",
                            "type": "dictionary",
                            "label": "Traits",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{person.properties}"
                            },
                            "required": false,
                            "description": "Traits to associate with the user"
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": true,
                            "description": "The timestamp of the event"
                        },
                        {
                            "key": "userId",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": false,
                            "description": "The ID associated with the user"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "group",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                }
            ],
            "mappings": null,
            "status": "alpha",
            "free": false,
            "type": "destination",
            "id": "segment-actions-hilo",
            "name": "Hilo",
            "hog": "return event",
            "inputs_schema": [
                {
                    "key": "integrationId",
                    "type": "string",
                    "label": "Integration ID",
                    "secret": false,
                    "required": true,
                    "description": "Hilo integration ID. This can be found on the integration page."
                },
                {
                    "key": "debug_mode",
                    "type": "boolean",
                    "label": "Debug Mode",
                    "default": false,
                    "description": "Will log configuration and request details"
                }
            ],
            "category": [],
            "code_language": "hog",
            "description": "Send event data to Hilo",
            "filters": null,
            "masking": null,
            "icon_url": "/static/services/hilo.com.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-hotjar",
            "name": "Hotjar",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Analytics"],
            "code_language": "hog",
            "description": "Send events to Hotjar.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Hotjar.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "stable",
            "free": false,
            "type": "destination",
            "id": "template-hubspot",
            "name": "Hubspot",
            "hog": "let properties := {\n    'email': inputs.email\n}\nfor (let key, value in inputs.properties) {\n    if (typeof(value) in ('object', 'array', 'tuple')) {\n        properties[key] := jsonStringify(value)\n    } else {\n        properties[key] := value\n    }\n}\n\nif (empty(properties.email)) {\n    print('`email` input is empty. Not creating a contact.')\n    return\n}\n\nlet headers := {\n    'Authorization': f'Bearer {inputs.oauth.access_token}',\n    'Content-Type': 'application/json'\n}\nlet body := {\n    'inputs': [\n        {\n            'properties': properties,\n            'id': properties.email,\n            'idProperty': 'email'\n        }\n    ]\n}\n\nlet res := fetch('https://api.hubapi.com/crm/v3/objects/contacts/batch/upsert', {\n    'method': 'POST',\n    'headers': headers,\n    'body': body\n})\n\nif (res.status == 200) {\n    print(f'Contact {properties.email} updated successfully!')\n} else {\n    throw Error(f'Error updating contact {properties.email} (status {res.status}): {res.body}')\n}",
            "inputs_schema": [
                {
                    "key": "oauth",
                    "type": "integration",
                    "label": "Hubspot connection",
                    "secret": false,
                    "required": true,
                    "integration": "hubspot",
                    "requiredScopes": "crm.objects.contacts.write crm.objects.contacts.read"
                },
                {
                    "key": "email",
                    "type": "string",
                    "label": "Email of the user",
                    "secret": false,
                    "default": "{person.properties.email}",
                    "required": true,
                    "description": "Where to find the email for the contact to be created. You can use the filters section to filter out unwanted emails or internal users."
                },
                {
                    "key": "properties",
                    "type": "dictionary",
                    "label": "Property mapping",
                    "secret": false,
                    "default": {
                        "phone": "{person.properties.phone}",
                        "company": "{person.properties.company}",
                        "website": "{person.properties.website}",
                        "lastname": "{person.properties.lastname}",
                        "firstname": "{person.properties.firstname}"
                    },
                    "required": true,
                    "description": "Map any event properties to Hubspot properties."
                }
            ],
            "category": ["CRM", "Customer Success"],
            "code_language": "hog",
            "description": "Creates a new contact in Hubspot whenever an event is triggered.",
            "filters": {
                "events": [
                    {
                        "id": "$identify",
                        "name": "$identify",
                        "type": "events",
                        "order": 0
                    }
                ],
                "actions": [],
                "filter_test_accounts": true
            },
            "masking": null,
            "icon_url": "/static/services/hubspot.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "stable",
            "free": false,
            "type": "destination",
            "id": "template-hubspot-event",
            "name": "Hubspot",
            "hog": "if (empty(inputs.email)) {\n    print('`email` input is empty. Not sending event.')\n    return\n}\n\nlet eventName := replaceAll(replaceAll(trim(lower(inputs.eventName)), '$', ''), ' ', '_')\n\nif (not match(eventName, '^[a-z][a-z0-9_-]*$')) {\n    throw Error(f'Event name must start with a letter and can only contain lowercase letters, numbers, underscores, and hyphens. Not sending event...')\n}\n\nlet properties := {}\n\nfor (let key, value in inputs.properties) {\n    if (not empty(value)) {\n        if (typeof(value) in ('object', 'array', 'tuple')) {\n            properties[key] := jsonStringify(value)\n        } else {\n            properties[key] := value\n        }\n    }\n}\n\nif (inputs.include_all_properties) {\n    for (let key, value in event.properties) {\n        if (not empty(value) and not key like '$%') {\n            if (typeof(value) in ('object', 'array', 'tuple')) {\n                properties[key] := jsonStringify(value)\n            } else {\n                properties[key] := value\n            }\n        }\n    }\n}\n\nlet eventSchema := fetch(f'https://api.hubapi.com/events/v3/event-definitions/{eventName}/?includeProperties=true', {\n    'method': 'GET',\n    'headers': {\n        'Authorization': f'Bearer {inputs.oauth.access_token}',\n        'Content-Type': 'application/json'\n    },\n})\n\nfun getPropValueType(propValue) {\n    let propType := typeof(propValue)\n    if (propType == 'string') {\n        if (match(propValue, '^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}.[0-9]{3}Z$')) {\n            return 'datetime'\n        }\n        return 'string'\n    } else if (propType == 'integer') {\n        return 'number'\n    } else if (propType == 'float') {\n        return 'number'\n    } else if (propType == 'boolean') {\n        return 'enumeration'\n    } else if (propType == 'object') {\n        return 'string'\n    } else {\n        return null\n    }\n}\n\nfun getPropValueTypeDefinition(name, propValue) {\n    let propType := typeof(propValue)\n    if (propType == 'string' or propType == 'object' or propType == 'array' or propType == 'tuple') {\n        if (match(propValue, '^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}.[0-9]{3}Z$')) {\n            return {\n                'name': name,\n                'label': name,\n                'type': 'datetime',\n                'description': f'{name} - (created by PostHog)'\n            }\n        }\n        return {\n            'name': name,\n            'label': name,\n            'type': 'string',\n            'description': f'{name} - (created by PostHog)'\n        }\n    } else if (propType == 'integer' or propType == 'float') {\n        return {\n            'name': name,\n            'label': name,\n            'type': 'number',\n            'description': f'{name} - (created by PostHog)'\n        }\n    } else if (propType == 'boolean') {\n        return {\n            'name': name,\n            'label': name,\n            'type': 'enumeration',\n            'description': f'{name} - (created by PostHog)',\n            'options': [\n                {\n                    'label': 'true',\n                    'value': true,\n                    'hidden': false,\n                    'description': 'True',\n                    'displayOrder': 1\n                },\n                {\n                    'label': 'false',\n                    'value': false,\n                    'hidden': false,\n                    'description': 'False',\n                    'displayOrder': 2\n                }\n            ]\n        }\n    } else {\n        print('unsupported type for key', name)\n        return null\n    }\n}\n\nlet fullyQualifiedName := ''\n\nif (eventSchema.status >= 400) {\n    let body := {\n        'label': eventName,\n        'name': eventName,\n        'description': f'{eventName} - (created by PostHog)',\n        'primaryObject': 'CONTACT',\n        'propertyDefinitions': []\n    }\n\n    for (let key, value in properties) {\n        body.propertyDefinitions := arrayPushBack(body.propertyDefinitions, getPropValueTypeDefinition(key, value))\n    }\n\n    let res := fetch('https://api.hubapi.com/events/v3/event-definitions', {\n        'method': 'POST',\n        'headers': {\n            'Authorization': f'Bearer {inputs.oauth.access_token}',\n            'Content-Type': 'application/json'\n        },\n        'body': body\n    })\n\n    if (res.status >= 400) {\n        throw Error(f'Error from api.hubapi.com api: {res.status}: {res.body}');\n    } else {\n        fullyQualifiedName := res.body.fullyQualifiedName\n    }\n} else {\n    fullyQualifiedName := eventSchema.body.fullyQualifiedName\n    let missingProperties := []\n    let wrongTypeProperties := []\n    for (let key, value in properties) {\n        if (not arrayExists(property -> property.name == key, eventSchema.body.properties)) {\n            missingProperties := arrayPushBack(missingProperties, { 'key': key, 'value': value })\n        } else if (not arrayExists(property -> property.name == key and property.type == getPropValueType(value), eventSchema.body.properties)) {\n            wrongTypeProperties := arrayPushBack(wrongTypeProperties, { 'key': key, 'value': value })\n        }\n    }\n\n    if (not empty(missingProperties)) {\n        for (let i, obj in missingProperties) {\n            let res := fetch(f'https://api.hubapi.com/events/v3/event-definitions/{eventName}/property', {\n                'method': 'POST',\n                'headers': {\n                    'Authorization': f'Bearer {inputs.oauth.access_token}',\n                    'Content-Type': 'application/json'\n                },\n                'body': getPropValueTypeDefinition(obj.key, obj.value)\n            })\n\n            if (res.status >= 400) {\n                throw Error(f'Error from api.hubapi.com api: {res.status}: {res.body}');\n            }\n        }\n    }\n\n    if (not empty(wrongTypeProperties)) {\n        throw Error(f'Property type mismatch for the following properties: {wrongTypeProperties}. Not sending event.')\n    }\n}\n\nlet res := fetch('https://api.hubapi.com/events/v3/send', {\n    'method': 'POST',\n    'headers': {\n        'Authorization': f'Bearer {inputs.oauth.access_token}',\n        'Content-Type': 'application/json'\n    },\n    'body': {\n        'eventName': fullyQualifiedName,\n        'email': inputs.email,\n        'occurredAt': event.timestamp,\n        'properties': properties\n    }\n})\n\nif (res.status >= 400) {\n    throw Error(f'Error from api.hubapi.com api: {res.status}: {res.body}');\n}",
            "inputs_schema": [
                {
                    "key": "oauth",
                    "type": "integration",
                    "label": "Hubspot connection",
                    "secret": false,
                    "required": true,
                    "integration": "hubspot",
                    "requiredScopes": "analytics.behavioral_events.send behavioral_events.event_definitions.read_write"
                },
                {
                    "key": "eventName",
                    "type": "string",
                    "label": "Event Name",
                    "secret": false,
                    "default": "{event.event}",
                    "required": true,
                    "description": "Hubspot only allows events that start with a letter and can only contain lowercase letters, numbers, underscores, and hyphens. Whitespace will be automatically replaced with _"
                },
                {
                    "key": "email",
                    "type": "string",
                    "label": "Email of the user",
                    "secret": false,
                    "default": "{person.properties.email}",
                    "required": true,
                    "description": "Where to find the email for the contact to be created. You can use the filters section to filter out unwanted emails or internal users."
                },
                {
                    "key": "include_all_properties",
                    "type": "boolean",
                    "label": "Include all event properties",
                    "secret": false,
                    "default": false,
                    "required": true,
                    "description": "If set, all event properties will be included. Individual properties can be overridden below."
                },
                {
                    "key": "properties",
                    "type": "dictionary",
                    "label": "Property mapping",
                    "secret": false,
                    "default": {
                        "price": "{event.properties.price}",
                        "currency": "USD"
                    },
                    "required": true,
                    "description": "Map any event properties to Hubspot properties."
                }
            ],
            "category": ["CRM", "Customer Success"],
            "code_language": "hog",
            "description": "Send events to Hubspot.",
            "filters": {
                "events": [
                    {
                        "id": "checkout",
                        "name": "checkout",
                        "type": "events",
                        "order": 0
                    }
                ],
                "actions": [],
                "filter_test_accounts": true
            },
            "masking": null,
            "icon_url": "/static/services/hubspot.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-hull",
            "name": "Hull",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Customer Data Platforms"],
            "code_language": "hog",
            "description": "Send events to Hull.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Hull.svg"
        },
        {
            "mapping_templates": [
                {
                    "name": "Track Event",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify')",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "event_name",
                            "type": "string",
                            "label": "Event name",
                            "secret": false,
                            "default": "{event.event}",
                            "required": true,
                            "description": "The name of the event"
                        },
                        {
                            "key": "user_id",
                            "type": "string",
                            "label": "User id",
                            "secret": false,
                            "default": "{person.id}",
                            "required": true,
                            "description": "The user id, to uniquely identify the user associated with the event"
                        },
                        {
                            "key": "account_id",
                            "type": "string",
                            "label": "Account id",
                            "secret": false,
                            "default": "{event.groupId}",
                            "required": false,
                            "description": "The account id, to uniquely identify the account associated with the user"
                        },
                        {
                            "key": "properties",
                            "type": "dictionary",
                            "label": "Event properties",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.properties}"
                            },
                            "required": false,
                            "description": "The properties of the track call"
                        },
                        {
                            "key": "anonymous_id",
                            "type": "string",
                            "label": "Anonymous ID",
                            "secret": false,
                            "default": "{event.distinct_id}",
                            "required": false,
                            "description": "User Anonymous id"
                        },
                        {
                            "key": "event_id",
                            "type": "string",
                            "label": "Event ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": false,
                            "description": "The ID of the event."
                        },
                        {
                            "key": "doc_path",
                            "type": "string",
                            "label": "Document Path",
                            "secret": false,
                            "default": "{event.properties.$pathname}",
                            "required": false,
                            "description": "The path of the document."
                        },
                        {
                            "key": "doc_search",
                            "type": "string",
                            "label": "Document Search",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "The search query of the document."
                        },
                        {
                            "key": "doc_title",
                            "type": "string",
                            "label": "Page Title",
                            "secret": false,
                            "default": "{event.properties.title}",
                            "required": false,
                            "description": "The title of the page where the event occurred."
                        },
                        {
                            "key": "url",
                            "type": "string",
                            "label": "URL",
                            "secret": false,
                            "default": "{event.properties.$current_url}",
                            "required": false,
                            "description": "The URL of the page where the event occurred."
                        },
                        {
                            "key": "referer",
                            "type": "string",
                            "label": "Referrer",
                            "secret": false,
                            "default": "{event.properties.$referrer}",
                            "required": false,
                            "description": "The referrer of the page where the event occurred."
                        },
                        {
                            "key": "user_agent",
                            "type": "string",
                            "label": "User Agent",
                            "secret": false,
                            "default": "{event.properties.$raw_user_agent}",
                            "required": false,
                            "description": "The user agent of the browser."
                        },
                        {
                            "key": "user_language",
                            "type": "string",
                            "label": "User Language",
                            "secret": false,
                            "default": "{event.properties.$locale}",
                            "required": false,
                            "description": "The language of the browser."
                        },
                        {
                            "key": "utc_time",
                            "type": "string",
                            "label": "UTC Time",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": false,
                            "description": "The time of the event in UTC."
                        },
                        {
                            "key": "utm",
                            "type": "dictionary",
                            "label": "UTM",
                            "secret": false,
                            "default": {
                                "name": "{event.properties.utm_campaign}",
                                "term": "{event.properties.utm_term}",
                                "medium": "{event.properties.utm_medium}",
                                "source": "{event.properties.utm_source}",
                                "content": "{event.properties.utm_content}"
                            },
                            "required": false,
                            "description": "Information about the UTM parameters."
                        },
                        {
                            "key": "screen",
                            "type": "dictionary",
                            "label": "Screen",
                            "secret": false,
                            "default": {
                                "width": "{event.context.screen.width}",
                                "height": "{event.context.screen.height}",
                                "density": ""
                            },
                            "required": false,
                            "description": "Information about the screen."
                        },
                        {
                            "key": "timezone",
                            "type": "string",
                            "label": "Timezone",
                            "secret": false,
                            "default": "{event.properties.$timezone ?? event.properties.timezone}",
                            "required": false,
                            "description": "The timezone of the browser."
                        },
                        {
                            "key": "source_ip",
                            "type": "string",
                            "label": "IP Address",
                            "secret": false,
                            "default": "{event.properties.$ip}",
                            "required": false,
                            "description": "The IP address of the user."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "track",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Identify User",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event in ('$identify', '$set')",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "user_id",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": true,
                            "description": "The External ID of the user"
                        },
                        {
                            "key": "name",
                            "type": "string",
                            "label": "Name",
                            "secret": false,
                            "default": "{person.properties.name ?? event.properties.name}",
                            "required": false,
                            "description": "The user's name"
                        },
                        {
                            "key": "first_name",
                            "type": "string",
                            "label": "First name",
                            "secret": false,
                            "default": "{person.properties.first_name ?? event.properties.first_name}",
                            "required": false,
                            "description": "The user's first name. This field is mandatory if you're not providing a name field"
                        },
                        {
                            "key": "last_name",
                            "type": "string",
                            "label": "Last name",
                            "secret": false,
                            "default": "{person.properties.last_name ?? event.properties.last_name}",
                            "required": false,
                            "description": "The user's last name. This field is mandatory if you're not providing a name field"
                        },
                        {
                            "key": "email",
                            "type": "string",
                            "label": "Email address",
                            "secret": false,
                            "default": "{person.properties.email ?? event.properties.email}",
                            "required": false,
                            "description": "The user's email address"
                        },
                        {
                            "key": "account_id",
                            "type": "string",
                            "label": "Account id",
                            "secret": false,
                            "default": "{event.context.group_id ?? event.groupId}",
                            "required": false,
                            "description": "The account id, to uniquely identify the account associated with the user"
                        },
                        {
                            "key": "created_at",
                            "type": "string",
                            "label": "Created at",
                            "secret": false,
                            "default": "{person.properties.created_at ?? person.properties.createdAt}",
                            "required": false,
                            "description": "The timestamp when the user was created, represented in the ISO-8601 date format. For instance, \"2023-09-26T15:30:00Z\"."
                        },
                        {
                            "key": "traits",
                            "type": "dictionary",
                            "label": "Traits",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{person.properties}"
                            },
                            "required": false,
                            "description": "Properties to associate with the user"
                        },
                        {
                            "key": "anonymous_id",
                            "type": "string",
                            "label": "Anonymous ID",
                            "secret": false,
                            "default": "{event.distinct_id}",
                            "required": false,
                            "description": "User Anonymous id"
                        },
                        {
                            "key": "event_id",
                            "type": "string",
                            "label": "Event ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": false,
                            "description": "The ID of the event."
                        },
                        {
                            "key": "doc_path",
                            "type": "string",
                            "label": "Document Path",
                            "secret": false,
                            "default": "{event.properties.$pathname}",
                            "required": false,
                            "description": "The path of the document."
                        },
                        {
                            "key": "doc_search",
                            "type": "string",
                            "label": "Document Search",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "The search query of the document."
                        },
                        {
                            "key": "doc_title",
                            "type": "string",
                            "label": "Page Title",
                            "secret": false,
                            "default": "{event.properties.title}",
                            "required": false,
                            "description": "The title of the page where the event occurred."
                        },
                        {
                            "key": "url",
                            "type": "string",
                            "label": "URL",
                            "secret": false,
                            "default": "{event.properties.$current_url}",
                            "required": false,
                            "description": "The URL of the page where the event occurred."
                        },
                        {
                            "key": "referer",
                            "type": "string",
                            "label": "Referrer",
                            "secret": false,
                            "default": "{event.properties.$referrer}",
                            "required": false,
                            "description": "The referrer of the page where the event occurred."
                        },
                        {
                            "key": "user_agent",
                            "type": "string",
                            "label": "User Agent",
                            "secret": false,
                            "default": "{event.properties.$raw_user_agent}",
                            "required": false,
                            "description": "The user agent of the browser."
                        },
                        {
                            "key": "user_language",
                            "type": "string",
                            "label": "User Language",
                            "secret": false,
                            "default": "{event.properties.$locale}",
                            "required": false,
                            "description": "The language of the browser."
                        },
                        {
                            "key": "utc_time",
                            "type": "string",
                            "label": "UTC Time",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": false,
                            "description": "The time of the event in UTC."
                        },
                        {
                            "key": "utm",
                            "type": "dictionary",
                            "label": "UTM",
                            "secret": false,
                            "default": {
                                "name": "{event.properties.utm_campaign}",
                                "term": "{event.properties.utm_term}",
                                "medium": "{event.properties.utm_medium}",
                                "source": "{event.properties.utm_source}",
                                "content": "{event.properties.utm_content}"
                            },
                            "required": false,
                            "description": "Information about the UTM parameters."
                        },
                        {
                            "key": "screen",
                            "type": "dictionary",
                            "label": "Screen",
                            "secret": false,
                            "default": {
                                "width": "{event.context.screen.width}",
                                "height": "{event.context.screen.height}",
                                "density": ""
                            },
                            "required": false,
                            "description": "Information about the screen."
                        },
                        {
                            "key": "timezone",
                            "type": "string",
                            "label": "Timezone",
                            "secret": false,
                            "default": "{event.properties.$timezone ?? event.properties.timezone}",
                            "required": false,
                            "description": "The timezone of the browser."
                        },
                        {
                            "key": "source_ip",
                            "type": "string",
                            "label": "IP Address",
                            "secret": false,
                            "default": "{event.properties.$ip}",
                            "required": false,
                            "description": "The IP address of the user."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "identify",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Group",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event = '$groupidentify'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "account_id",
                            "type": "string",
                            "label": "Account id",
                            "secret": false,
                            "default": "{event.context.group_id ?? event.groupId}",
                            "required": true,
                            "description": "The External ID of the account to send properties for"
                        },
                        {
                            "key": "user_id",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": false,
                            "description": "The ID associated with the user"
                        },
                        {
                            "key": "name",
                            "type": "string",
                            "label": "Account name",
                            "secret": false,
                            "default": "{person.properties.name ?? event.properties.name}",
                            "required": true,
                            "description": "The Account name"
                        },
                        {
                            "key": "created_at",
                            "type": "string",
                            "label": "Account created at",
                            "secret": false,
                            "default": "{person.properties.created_at ?? person.properties.createdAt}",
                            "required": false,
                            "description": "The timestamp when the account was created, represented in the ISO-8601 date format. For instance, \"2023-09-26T15:30:00Z\"."
                        },
                        {
                            "key": "traits",
                            "type": "dictionary",
                            "label": "Account properties",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{person.properties}"
                            },
                            "required": false,
                            "description": "The properties of the account"
                        },
                        {
                            "key": "plan",
                            "type": "string",
                            "label": "Account subscription plan",
                            "secret": false,
                            "default": "{person.properties.plan ?? person.properties.plan_name}",
                            "required": false,
                            "description": "Subscription plan the account is associated with"
                        },
                        {
                            "key": "industry",
                            "type": "string",
                            "label": "Account industry",
                            "secret": false,
                            "default": "{person.properties.industry}",
                            "required": false,
                            "description": "The account industry"
                        },
                        {
                            "key": "website",
                            "type": "string",
                            "label": "Account website",
                            "secret": false,
                            "default": "{person.properties.website}",
                            "required": false,
                            "description": "The account website"
                        },
                        {
                            "key": "anonymous_id",
                            "type": "string",
                            "label": "Anonymous ID",
                            "secret": false,
                            "default": "{event.distinct_id}",
                            "required": false,
                            "description": "User Anonymous id"
                        },
                        {
                            "key": "event_id",
                            "type": "string",
                            "label": "Event ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": false,
                            "description": "The ID of the event."
                        },
                        {
                            "key": "doc_path",
                            "type": "string",
                            "label": "Document Path",
                            "secret": false,
                            "default": "{event.properties.$pathname}",
                            "required": false,
                            "description": "The path of the document."
                        },
                        {
                            "key": "doc_search",
                            "type": "string",
                            "label": "Document Search",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "The search query of the document."
                        },
                        {
                            "key": "doc_title",
                            "type": "string",
                            "label": "Page Title",
                            "secret": false,
                            "default": "{event.properties.title}",
                            "required": false,
                            "description": "The title of the page where the event occurred."
                        },
                        {
                            "key": "url",
                            "type": "string",
                            "label": "URL",
                            "secret": false,
                            "default": "{event.properties.$current_url}",
                            "required": false,
                            "description": "The URL of the page where the event occurred."
                        },
                        {
                            "key": "referer",
                            "type": "string",
                            "label": "Referrer",
                            "secret": false,
                            "default": "{event.properties.$referrer}",
                            "required": false,
                            "description": "The referrer of the page where the event occurred."
                        },
                        {
                            "key": "user_agent",
                            "type": "string",
                            "label": "User Agent",
                            "secret": false,
                            "default": "{event.properties.$raw_user_agent}",
                            "required": false,
                            "description": "The user agent of the browser."
                        },
                        {
                            "key": "user_language",
                            "type": "string",
                            "label": "User Language",
                            "secret": false,
                            "default": "{event.properties.$locale}",
                            "required": false,
                            "description": "The language of the browser."
                        },
                        {
                            "key": "utc_time",
                            "type": "string",
                            "label": "UTC Time",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": false,
                            "description": "The time of the event in UTC."
                        },
                        {
                            "key": "utm",
                            "type": "dictionary",
                            "label": "UTM",
                            "secret": false,
                            "default": {
                                "name": "{event.properties.utm_campaign}",
                                "term": "{event.properties.utm_term}",
                                "medium": "{event.properties.utm_medium}",
                                "source": "{event.properties.utm_source}",
                                "content": "{event.properties.utm_content}"
                            },
                            "required": false,
                            "description": "Information about the UTM parameters."
                        },
                        {
                            "key": "screen",
                            "type": "dictionary",
                            "label": "Screen",
                            "secret": false,
                            "default": {
                                "width": "{event.context.screen.width}",
                                "height": "{event.context.screen.height}",
                                "density": ""
                            },
                            "required": false,
                            "description": "Information about the screen."
                        },
                        {
                            "key": "timezone",
                            "type": "string",
                            "label": "Timezone",
                            "secret": false,
                            "default": "{event.properties.$timezone ?? event.properties.timezone}",
                            "required": false,
                            "description": "The timezone of the browser."
                        },
                        {
                            "key": "source_ip",
                            "type": "string",
                            "label": "IP Address",
                            "secret": false,
                            "default": "{event.properties.$ip}",
                            "required": false,
                            "description": "The IP address of the user."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "group",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                }
            ],
            "mappings": null,
            "status": "alpha",
            "free": false,
            "type": "destination",
            "id": "segment-actions-hyperengage",
            "name": "Hyperengage",
            "hog": "return event",
            "inputs_schema": [
                {
                    "key": "apiKey",
                    "type": "string",
                    "label": "API Key",
                    "secret": false,
                    "required": true,
                    "description": "Your Hyperengage API key located in the Integration Settings page."
                },
                {
                    "key": "workspaceIdentifier",
                    "type": "string",
                    "label": "Workspace Identifier",
                    "secret": false,
                    "required": true,
                    "description": "Your Hyperengage workspace identifier located in the Integration Settings page."
                },
                {
                    "key": "debug_mode",
                    "type": "boolean",
                    "label": "Debug Mode",
                    "default": false,
                    "description": "Will log configuration and request details"
                }
            ],
            "category": [],
            "code_language": "hog",
            "description": "Send event data to Hyperengage",
            "filters": null,
            "masking": null,
            "icon_url": "/static/services/hyperengage.io.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-ibm-db2-data-warehouse",
            "name": "IBM DB2 Data Warehouse",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Data Warehouse"],
            "code_language": "hog",
            "description": "Send events to IBM DB2 Data Warehouse.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/IBM_DB2_Data_Warehouse.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-indicative-analytics",
            "name": "Indicative Analytics",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Analytics"],
            "code_language": "hog",
            "description": "Send events to Indicative Analytics.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Indicative_Analytics.webp"
        },
        {
            "mapping_templates": [
                {
                    "name": "Track Event",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify')",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "eventName",
                            "type": "string",
                            "label": "Event name",
                            "secret": false,
                            "default": "{event.event}",
                            "required": true,
                            "description": "The name of the event"
                        },
                        {
                            "key": "user_id",
                            "type": "string",
                            "label": "User id",
                            "secret": false,
                            "default": "{person.id}",
                            "required": true,
                            "description": "The user id, to uniquely identify the user associated with the event"
                        },
                        {
                            "key": "account_id",
                            "type": "string",
                            "label": "Account id",
                            "secret": false,
                            "default": "{event.groupId}",
                            "required": false,
                            "description": "The account id, to uniquely identify the account associated with the user"
                        },
                        {
                            "key": "properties",
                            "type": "dictionary",
                            "label": "Event properties",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.properties}"
                            },
                            "required": false,
                            "description": "The properties of the track call"
                        },
                        {
                            "key": "traits",
                            "type": "dictionary",
                            "label": "Event Traits",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{person.properties}"
                            },
                            "required": false,
                            "description": "The Traits of the track call"
                        },
                        {
                            "key": "userMeta",
                            "type": "dictionary",
                            "label": "User Metadata",
                            "secret": false,
                            "default": {
                                "ip": "{event.properties.$ip}",
                                "os": "{event.properties.$os}",
                                "city": "{event.properties.$geoip_city_name}",
                                "browser": "{event.properties.$raw_user_agent}",
                                "country": "{event.properties.$geoip_country_name}",
                                "latitude": "{event.properties.$geoip_latitude}",
                                "timeZone": "{event.properties.$timezone ?? event.properties.timezone}",
                                "longitude": "{event.properties.$geoip_longitude}",
                                "osVersion": "{event.properties.$os_version}",
                                "deviceType": "{event.properties.$device_type}",
                                "deviceModel": "{event.properties.$device_model}",
                                "deviceVendor": "{event.properties.$device_manufacturer}"
                            },
                            "required": false,
                            "description": "User metadata including IP, Location, etc."
                        },
                        {
                            "key": "anonymous_id",
                            "type": "string",
                            "label": "Anonymous ID",
                            "secret": false,
                            "default": "{event.distinct_id}",
                            "required": false,
                            "description": "User Anonymous id"
                        },
                        {
                            "key": "event_id",
                            "type": "string",
                            "label": "Event ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": false,
                            "description": "The ID of the event."
                        },
                        {
                            "key": "url",
                            "type": "string",
                            "label": "URL",
                            "secret": false,
                            "default": "{event.properties.$current_url}",
                            "required": false,
                            "description": "The URL of the page where the event occurred."
                        },
                        {
                            "key": "referer",
                            "type": "string",
                            "label": "Referrer",
                            "secret": false,
                            "default": "{event.properties.$referrer}",
                            "required": false,
                            "description": "The referrer of the page where the event occurred."
                        },
                        {
                            "key": "user_language",
                            "type": "string",
                            "label": "User Language",
                            "secret": false,
                            "default": "{event.properties.$locale}",
                            "required": false,
                            "description": "The language of the browser."
                        },
                        {
                            "key": "utc_time",
                            "type": "string",
                            "label": "UTC Time",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": true,
                            "description": "The time of the event in UTC."
                        },
                        {
                            "key": "utm",
                            "type": "dictionary",
                            "label": "UTM",
                            "secret": false,
                            "default": {
                                "name": "{event.properties.utm_campaign}",
                                "term": "{event.properties.utm_term}",
                                "medium": "{event.properties.utm_medium}",
                                "source": "{event.properties.utm_source}",
                                "content": "{event.properties.utm_content}"
                            },
                            "required": false,
                            "description": "Information about the UTM parameters."
                        },
                        {
                            "key": "screen",
                            "type": "dictionary",
                            "label": "Screen",
                            "secret": false,
                            "default": {
                                "width": "{event.context.screen.width}",
                                "height": "{event.context.screen.height}",
                                "density": ""
                            },
                            "required": false,
                            "description": "Information about the screen."
                        },
                        {
                            "key": "timezone",
                            "type": "string",
                            "label": "Timezone",
                            "secret": false,
                            "default": "{event.properties.$timezone ?? event.properties.timezone}",
                            "required": false,
                            "description": "The timezone of the browser."
                        },
                        {
                            "key": "source_ip",
                            "type": "string",
                            "label": "IP Address",
                            "secret": false,
                            "default": "{event.properties.$ip}",
                            "required": false,
                            "description": "The IP address of the user."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "track",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Group",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event = '$groupidentify'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "account_id",
                            "type": "string",
                            "label": "Account id",
                            "secret": false,
                            "default": "{event.groupId}",
                            "required": true,
                            "description": "The External ID of the account to send properties for"
                        },
                        {
                            "key": "user_id",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": false,
                            "description": "The ID associated with the user"
                        },
                        {
                            "key": "name",
                            "type": "string",
                            "label": "Account name",
                            "secret": false,
                            "default": "{person.properties.name ?? event.properties.name}",
                            "required": true,
                            "description": "The Account name"
                        },
                        {
                            "key": "created_at",
                            "type": "string",
                            "label": "Account created at",
                            "secret": false,
                            "default": "{person.properties.created_at ?? person.properties.createdAt}",
                            "required": false,
                            "description": "The timestamp when the account was created, represented in the ISO-8601 date format. For instance, \"2023-09-26T15:30:00Z\"."
                        },
                        {
                            "key": "traits",
                            "type": "dictionary",
                            "label": "Account properties",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{person.properties}"
                            },
                            "required": false,
                            "description": "The properties of the account"
                        },
                        {
                            "key": "website",
                            "type": "string",
                            "label": "Account website",
                            "secret": false,
                            "default": "{person.properties.website}",
                            "required": false,
                            "description": "The account website"
                        },
                        {
                            "key": "userMeta",
                            "type": "dictionary",
                            "label": "User Metadata",
                            "secret": false,
                            "default": {
                                "ip": "{event.properties.$ip}",
                                "os": "{event.properties.$os}",
                                "city": "{event.properties.$geoip_city_name}",
                                "browser": "{event.properties.$raw_user_agent}",
                                "country": "{event.properties.$geoip_country_name}",
                                "latitude": "{event.properties.$geoip_latitude}",
                                "timeZone": "{event.properties.$timezone ?? event.properties.timezone}",
                                "longitude": "{event.properties.$geoip_longitude}",
                                "osVersion": "{event.properties.$os_version}",
                                "deviceType": "{event.properties.$device_type}",
                                "deviceModel": "{event.properties.$device_model}",
                                "deviceVendor": "{event.properties.$device_manufacturer}"
                            },
                            "required": false,
                            "description": "User metadata including IP, Location, etc."
                        },
                        {
                            "key": "anonymous_id",
                            "type": "string",
                            "label": "Anonymous ID",
                            "secret": false,
                            "default": "{event.distinct_id}",
                            "required": false,
                            "description": "User Anonymous id"
                        },
                        {
                            "key": "event_id",
                            "type": "string",
                            "label": "Event ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": false,
                            "description": "The ID of the event."
                        },
                        {
                            "key": "url",
                            "type": "string",
                            "label": "URL",
                            "secret": false,
                            "default": "{event.properties.$current_url}",
                            "required": false,
                            "description": "The URL of the page where the event occurred."
                        },
                        {
                            "key": "referer",
                            "type": "string",
                            "label": "Referrer",
                            "secret": false,
                            "default": "{event.properties.$referrer}",
                            "required": false,
                            "description": "The referrer of the page where the event occurred."
                        },
                        {
                            "key": "user_language",
                            "type": "string",
                            "label": "User Language",
                            "secret": false,
                            "default": "{event.properties.$locale}",
                            "required": false,
                            "description": "The language of the browser."
                        },
                        {
                            "key": "utc_time",
                            "type": "string",
                            "label": "UTC Time",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": true,
                            "description": "The time of the event in UTC."
                        },
                        {
                            "key": "utm",
                            "type": "dictionary",
                            "label": "UTM",
                            "secret": false,
                            "default": {
                                "name": "{event.properties.utm_campaign}",
                                "term": "{event.properties.utm_term}",
                                "medium": "{event.properties.utm_medium}",
                                "source": "{event.properties.utm_source}",
                                "content": "{event.properties.utm_content}"
                            },
                            "required": false,
                            "description": "Information about the UTM parameters."
                        },
                        {
                            "key": "screen",
                            "type": "dictionary",
                            "label": "Screen",
                            "secret": false,
                            "default": {
                                "width": "{event.context.screen.width}",
                                "height": "{event.context.screen.height}",
                                "density": ""
                            },
                            "required": false,
                            "description": "Information about the screen."
                        },
                        {
                            "key": "timezone",
                            "type": "string",
                            "label": "Timezone",
                            "secret": false,
                            "default": "{event.properties.$timezone ?? event.properties.timezone}",
                            "required": false,
                            "description": "The timezone of the browser."
                        },
                        {
                            "key": "source_ip",
                            "type": "string",
                            "label": "IP Address",
                            "secret": false,
                            "default": "{event.properties.$ip}",
                            "required": false,
                            "description": "The IP address of the user."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "group",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Identify User",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event in ('$identify', '$set')",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "user_id",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": true,
                            "description": "The External ID of the user"
                        },
                        {
                            "key": "name",
                            "type": "string",
                            "label": "Name",
                            "secret": false,
                            "default": "{person.properties.name ?? event.properties.name}",
                            "required": false,
                            "description": "The user's name"
                        },
                        {
                            "key": "first_name",
                            "type": "string",
                            "label": "First name",
                            "secret": false,
                            "default": "{person.properties.first_name ?? event.properties.first_name}",
                            "required": false,
                            "description": "The user's first name. This field is mandatory if you're not providing a name field"
                        },
                        {
                            "key": "last_name",
                            "type": "string",
                            "label": "Last name",
                            "secret": false,
                            "default": "{person.properties.last_name ?? event.properties.last_name}",
                            "required": false,
                            "description": "The user's last name. This field is mandatory if you're not providing a name field"
                        },
                        {
                            "key": "email",
                            "type": "string",
                            "label": "Email address",
                            "secret": false,
                            "default": "{person.properties.email ?? event.properties.email}",
                            "required": false,
                            "description": "The user's email address"
                        },
                        {
                            "key": "account_id",
                            "type": "string",
                            "label": "Account id",
                            "secret": false,
                            "default": "{event.context.group_id ?? event.groupId}",
                            "required": false,
                            "description": "The account id, to uniquely identify the account associated with the user"
                        },
                        {
                            "key": "created_at",
                            "type": "string",
                            "label": "Created at",
                            "secret": false,
                            "default": "{person.properties.created_at ?? person.properties.createdAt}",
                            "required": false,
                            "description": "The timestamp when the user was created, represented in the ISO-8601 date format. For instance, \"2023-09-26T15:30:00Z\"."
                        },
                        {
                            "key": "traits",
                            "type": "dictionary",
                            "label": "Traits",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{person.properties}"
                            },
                            "required": false,
                            "description": "Properties to associate with the user"
                        },
                        {
                            "key": "userMeta",
                            "type": "dictionary",
                            "label": "User Metadata",
                            "secret": false,
                            "default": {
                                "ip": "{event.properties.$ip}",
                                "os": "{event.properties.$os}",
                                "city": "{event.properties.$geoip_city_name}",
                                "browser": "{event.properties.$raw_user_agent}",
                                "country": "{event.properties.$geoip_country_name}",
                                "latitude": "{event.properties.$geoip_latitude}",
                                "timeZone": "{event.properties.$timezone ?? event.properties.timezone}",
                                "longitude": "{event.properties.$geoip_longitude}",
                                "osVersion": "{event.properties.$os_version}",
                                "deviceType": "{event.properties.$device_type}",
                                "deviceModel": "{event.properties.$device_model}",
                                "deviceVendor": "{event.properties.$device_manufacturer}"
                            },
                            "required": false,
                            "description": "User metadata including IP, Location, etc."
                        },
                        {
                            "key": "anonymous_id",
                            "type": "string",
                            "label": "Anonymous ID",
                            "secret": false,
                            "default": "{event.distinct_id}",
                            "required": false,
                            "description": "User Anonymous id"
                        },
                        {
                            "key": "event_id",
                            "type": "string",
                            "label": "Event ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": false,
                            "description": "The ID of the event."
                        },
                        {
                            "key": "url",
                            "type": "string",
                            "label": "URL",
                            "secret": false,
                            "default": "{event.properties.$current_url}",
                            "required": false,
                            "description": "The URL of the page where the event occurred."
                        },
                        {
                            "key": "referer",
                            "type": "string",
                            "label": "Referrer",
                            "secret": false,
                            "default": "{event.properties.$referrer}",
                            "required": false,
                            "description": "The referrer of the page where the event occurred."
                        },
                        {
                            "key": "user_language",
                            "type": "string",
                            "label": "User Language",
                            "secret": false,
                            "default": "{event.properties.$locale}",
                            "required": false,
                            "description": "The language of the browser."
                        },
                        {
                            "key": "utc_time",
                            "type": "string",
                            "label": "UTC Time",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": true,
                            "description": "The time of the event in UTC."
                        },
                        {
                            "key": "utm",
                            "type": "dictionary",
                            "label": "UTM",
                            "secret": false,
                            "default": {
                                "name": "{event.properties.utm_campaign}",
                                "term": "{event.properties.utm_term}",
                                "medium": "{event.properties.utm_medium}",
                                "source": "{event.properties.utm_source}",
                                "content": "{event.properties.utm_content}"
                            },
                            "required": false,
                            "description": "Information about the UTM parameters."
                        },
                        {
                            "key": "screen",
                            "type": "dictionary",
                            "label": "Screen",
                            "secret": false,
                            "default": {
                                "width": "{event.context.screen.width}",
                                "height": "{event.context.screen.height}",
                                "density": ""
                            },
                            "required": false,
                            "description": "Information about the screen."
                        },
                        {
                            "key": "timezone",
                            "type": "string",
                            "label": "Timezone",
                            "secret": false,
                            "default": "{event.properties.$timezone ?? event.properties.timezone}",
                            "required": false,
                            "description": "The timezone of the browser."
                        },
                        {
                            "key": "source_ip",
                            "type": "string",
                            "label": "IP Address",
                            "secret": false,
                            "default": "{event.properties.$ip}",
                            "required": false,
                            "description": "The IP address of the user."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "identify",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                }
            ],
            "mappings": null,
            "status": "beta",
            "free": false,
            "type": "destination",
            "id": "segment-inleads-ai",
            "name": "Inleads AI",
            "hog": "return event",
            "inputs_schema": [
                {
                    "key": "apiKey",
                    "type": "string",
                    "label": "API Key",
                    "secret": false,
                    "required": true,
                    "description": "Your Inleads AI API Key. You can find your API Key in your inleads.ai settings."
                },
                {
                    "key": "debug_mode",
                    "type": "boolean",
                    "label": "Debug Mode",
                    "default": false,
                    "description": "Will log configuration and request details"
                }
            ],
            "category": [],
            "code_language": "hog",
            "description": "Send event data to Inleads AI",
            "filters": null,
            "masking": null,
            "icon_url": "/static/services/inleads.ai.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-inmoment",
            "name": "InMoment",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Customer Service"],
            "code_language": "hog",
            "description": "Send events to InMoment.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/InMoment.svg"
        },
        {
            "mapping_templates": [
                {
                    "name": "Create or Update a User Profile",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event in ('$identify', '$set')",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "email_as_identifier",
                            "type": "string",
                            "label": "Treat Email as Identifier",
                            "secret": false,
                            "default": "true",
                            "required": false,
                            "description": "If true, Email will be sent as identifier to Insider."
                        },
                        {
                            "key": "phone_number_as_identifier",
                            "type": "string",
                            "label": "Treat Phone Number as Identifier",
                            "secret": false,
                            "default": "true",
                            "required": false,
                            "description": "If true, Phone Number will be sent as identifier to Insider"
                        },
                        {
                            "key": "append_arrays",
                            "type": "string",
                            "label": "Append Array Fields",
                            "secret": false,
                            "default": "false",
                            "required": false,
                            "description": "If enabled, new data for array fields will be appended to the existing values in Insider."
                        },
                        {
                            "key": "age",
                            "type": "string",
                            "label": "Age",
                            "secret": false,
                            "default": "{person.properties.age}",
                            "required": false,
                            "description": "Age of a user."
                        },
                        {
                            "key": "birthday",
                            "type": "string",
                            "label": "Birthday",
                            "secret": false,
                            "default": "{person.properties.birthday}",
                            "required": false,
                            "description": "User’s birthday"
                        },
                        {
                            "key": "email",
                            "type": "string",
                            "label": "Email",
                            "secret": false,
                            "default": "{person.properties.email}",
                            "required": false,
                            "description": "Email address of a user."
                        },
                        {
                            "key": "firstName",
                            "type": "string",
                            "label": "First Name",
                            "secret": false,
                            "default": "{person.properties.first_name}",
                            "required": false,
                            "description": "First name of a user."
                        },
                        {
                            "key": "gender",
                            "type": "string",
                            "label": "Gender",
                            "secret": false,
                            "default": "{person.properties.gender}",
                            "required": false,
                            "description": "Gender of a user."
                        },
                        {
                            "key": "lastName",
                            "type": "string",
                            "label": "Last Name",
                            "secret": false,
                            "default": "{person.properties.last_name}",
                            "required": false,
                            "description": "Last name of a user."
                        },
                        {
                            "key": "phone",
                            "type": "string",
                            "label": "Phone Number",
                            "secret": false,
                            "default": "{person.properties.phone}",
                            "required": false,
                            "description": "User's phone number in E.164 format (e.g. +6598765432), can be used as an identifier."
                        },
                        {
                            "key": "uuid",
                            "type": "string",
                            "label": "UUID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": false,
                            "description": "User's unique identifier. The UUID string is used as identifier when sending data to Insider. UUID is required if the Anonymous Id field is empty."
                        },
                        {
                            "key": "segment_anonymous_id",
                            "type": "string",
                            "label": "Anonymous Id",
                            "secret": false,
                            "default": "{event.distinct_id}",
                            "required": false,
                            "description": "An Anonymous Identifier. The Anonymous Id string is used as identifier when sending data to Insider. Anonymous Id is required if the UUID field is empty."
                        },
                        {
                            "key": "custom_identifiers",
                            "type": "dictionary",
                            "label": "Custom Identifiers",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "You can select you custom identifiers for the event."
                        },
                        {
                            "key": "city",
                            "type": "string",
                            "label": "City",
                            "secret": false,
                            "default": "{person.properties.address.city}",
                            "required": false,
                            "description": "City"
                        },
                        {
                            "key": "country",
                            "type": "string",
                            "label": "Country",
                            "secret": false,
                            "default": "{person.properties.address.country}",
                            "required": false,
                            "description": "Country"
                        },
                        {
                            "key": "gdprOptin",
                            "type": "string",
                            "label": "GDPR Opt-in",
                            "secret": false,
                            "required": false,
                            "description": "GDPR opt-in."
                        },
                        {
                            "key": "emailOptin",
                            "type": "string",
                            "label": "Email Opt-in",
                            "secret": false,
                            "required": false,
                            "description": "Email opt-in."
                        },
                        {
                            "key": "smsOptin",
                            "type": "string",
                            "label": "SMS Opt-in",
                            "secret": false,
                            "required": false,
                            "description": "SMS opt-in."
                        },
                        {
                            "key": "whatsappOptin",
                            "type": "string",
                            "label": "Whatsapp Opt-in",
                            "secret": false,
                            "required": false,
                            "description": "Whatsapp opt-in."
                        },
                        {
                            "key": "language",
                            "type": "string",
                            "label": "Language",
                            "secret": false,
                            "required": false,
                            "description": "The user's preferred language."
                        },
                        {
                            "key": "custom",
                            "type": "dictionary",
                            "label": "Other Properties",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "The user's additional information."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "updateUserProfile",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                }
            ],
            "mappings": null,
            "status": "alpha",
            "free": false,
            "type": "destination",
            "id": "segment-actions-insider-cloud",
            "name": "Insider Cloud Mode",
            "hog": "return event",
            "inputs_schema": [
                {
                    "key": "account_name",
                    "type": "string",
                    "label": "Account Name",
                    "secret": false,
                    "required": true,
                    "description": "You can get your Account Name via Insider Inone Panel > Settings > Inone Settings > Account Preferences."
                },
                {
                    "key": "ucd_key",
                    "type": "string",
                    "label": "API Key",
                    "secret": true,
                    "required": true,
                    "description": "You can get your API Key via Insider Inone Panel > Settings > Preferences > Integration Settings"
                },
                {
                    "key": "debug_mode",
                    "type": "boolean",
                    "label": "Debug Mode",
                    "default": false,
                    "description": "Will log configuration and request details"
                }
            ],
            "category": [],
            "code_language": "hog",
            "description": "Send event data to Insider Cloud Mode",
            "filters": null,
            "masking": null,
            "icon_url": "/static/services/insider.com.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-inspectlet",
            "name": "Inspectlet",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Heatmap Recording"],
            "code_language": "hog",
            "description": "Send events to Inspectlet.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Inspectlet_.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "stable",
            "free": false,
            "type": "destination",
            "id": "template-intercom",
            "name": "Intercom",
            "hog": "if (empty(inputs.email)) {\n    print('No email set. Skipping...')\n    return\n}\n\nlet regions := {\n    'US': 'api.intercom.io',\n    'EU': 'api.eu.intercom.io',\n    'AU': 'api.au.intercom.io',\n}\n\nlet user := fetch(f'https://{regions[inputs.oauth['app.region']]}/contacts/search', {\n    'method': 'POST',\n    'headers': {\n        'Content-Type': 'application/json',\n        'Intercom-Version': '2.11',\n        'Accept': 'application/json',\n        'Authorization': f'Bearer {inputs.oauth.access_token}',\n    },\n    'body': {\n        'query': {\n            'field': 'email',\n            'operator': '=',\n            'value': inputs.email\n        }\n    }\n})\n\nif (user.status >= 400) {\n    throw Error(f'Error from intercom api (status {user.status}): {user.body}')\n}\n\nlet payload := {\n    'email': inputs.email,\n    'custom_attributes': {}\n}\n\nif (inputs.include_all_properties) {\n    for (let key, value in person.properties) {\n        if (not empty(value) and not key like '$%') {\n            payload[key] := value\n        }\n    }\n}\n\nfor (let key, value in inputs.properties) {\n    if (not empty(value)) {\n        payload[key] := value\n    }\n}\n\nfor (let key, value in inputs.customProperties) {\n    if (not empty(value)) {\n        payload.custom_attributes[key] := value\n    }\n}\n\nlet res\n\nif (user.body.total_count == 1) {\n    res := fetch(f'https://{regions[inputs.oauth['app.region']]}/contacts/{user.body.data.1.id}', {\n        'method': 'PUT',\n        'headers': {\n            'Content-Type': 'application/json',\n            'Intercom-Version': '2.11',\n            'Accept': 'application/json',\n            'Authorization': f'Bearer {inputs.oauth.access_token}',\n        },\n        'body': payload\n    })\n} else if (user.body.total_count == 0) {\n    res := fetch(f'https://{regions[inputs.oauth['app.region']]}/contacts', {\n        'method': 'POST',\n        'headers': {\n            'Content-Type': 'application/json',\n            'Intercom-Version': '2.11',\n            'Accept': 'application/json',\n            'Authorization': f'Bearer {inputs.oauth.access_token}',\n        },\n        'body': payload\n    })\n} else {\n    throw Error('Found multiple contacts with the same email address. Skipping...')\n}\n\nif (res.status >= 400) {\n    throw Error(f'Error from intercom api (status {res.status}): {res.body}')\n} else if (user.status >= 400) {\n    throw Error(f'Error from intercom api (status {user.status}): {user.body}')\n}",
            "inputs_schema": [
                {
                    "key": "oauth",
                    "type": "integration",
                    "label": "Intercom account",
                    "secret": false,
                    "required": true,
                    "integration": "intercom"
                },
                {
                    "key": "email",
                    "type": "string",
                    "label": "Email of the user",
                    "secret": false,
                    "default": "{person.properties.email}",
                    "required": true,
                    "description": "Where to find the email of the user."
                },
                {
                    "key": "include_all_properties",
                    "type": "boolean",
                    "label": "Include all properties as attributes",
                    "secret": false,
                    "default": false,
                    "required": true,
                    "description": "If set, all person properties will be included. Individual attributes can be overridden below."
                },
                {
                    "key": "properties",
                    "type": "dictionary",
                    "label": "Default property mapping",
                    "secret": false,
                    "default": {
                        "name": "{f'{person.properties.first_name} {person.properties.last_name}' == ' ' ? null : f'{person.properties.first_name} {person.properties.last_name}'}",
                        "phone": "{person.properties.phone}",
                        "last_seen_at": "{toUnixTimestamp(event.timestamp)}"
                    },
                    "required": false,
                    "description": "Map of Intercom properties and their values."
                },
                {
                    "key": "customProperties",
                    "type": "dictionary",
                    "label": "Custom property mapping",
                    "secret": false,
                    "default": {},
                    "required": false,
                    "description": "Map of custom properties and their values. Check out this page for more details: https://www.intercom.com/help/en/articles/179-create-and-track-custom-data-attributes-cdas"
                }
            ],
            "category": ["Customer Success"],
            "code_language": "hog",
            "description": "Update contacts in Intercom",
            "filters": {
                "events": [
                    {
                        "id": "$identify",
                        "name": "$identify",
                        "type": "events",
                        "order": 0
                    },
                    {
                        "id": "$set",
                        "name": "$set",
                        "type": "events",
                        "order": 1
                    }
                ],
                "actions": [],
                "filter_test_accounts": true
            },
            "masking": null,
            "icon_url": "/static/services/intercom.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "stable",
            "free": false,
            "type": "destination",
            "id": "template-intercom-event",
            "name": "Intercom",
            "hog": "if (empty(inputs.email)) {\n    print('No email set. Skipping...')\n    return\n}\n\nlet regions := {\n    'US': 'api.intercom.io',\n    'EU': 'api.eu.intercom.io',\n    'AU': 'api.au.intercom.io',\n}\n\nlet user := fetch(f'https://{regions[inputs.oauth['app.region']]}/contacts/search', {\n    'method': 'POST',\n    'headers': {\n        'Content-Type': 'application/json',\n        'Intercom-Version': '2.11',\n        'Accept': 'application/json',\n        'Authorization': f'Bearer {inputs.oauth.access_token}',\n    },\n    'body': {\n        'query': {\n            'field': 'email',\n            'operator': '=',\n            'value': inputs.email\n        }\n    }\n})\n\nif (user.status >= 400) {\n    throw Error(f'Error from intercom api (status {user.status}): {user.body}')\n}\n\nlet payload := {\n    'event_name': inputs.eventName,\n    'created_at': inputs.eventTime,\n    'email': inputs.email,\n    'metadata': {}\n}\n\nif (inputs.include_all_properties) {\n    for (let key, value in event.properties) {\n        if (not empty(value) and not key like '$%') {\n            payload.metadata[key] := value\n        }\n    }\n}\n\nfor (let key, value in inputs.properties) {\n    if (not empty(value)) {\n        payload.metadata[key] := value\n    }\n}\n\nlet res\n\nif (user.body.total_count == 1) {\n    res := fetch(f'https://{regions[inputs.oauth['app.region']]}/events', {\n        'method': 'POST',\n        'headers': {\n            'Content-Type': 'application/json',\n            'Intercom-Version': '2.11',\n            'Accept': 'application/json',\n            'Authorization': f'Bearer {inputs.oauth.access_token}',\n        },\n        'body': payload\n    })\n} else {\n    throw Error('No unique contact found. Skipping...')\n}\n\nif (res.status >= 400) {\n    throw Error(f'Error from intercom api (status {res.status}): {res.body}')\n} else if (user.status >= 400) {\n    throw Error(f'Error from intercom api (status {user.status}): {user.body}')\n}",
            "inputs_schema": [
                {
                    "key": "oauth",
                    "type": "integration",
                    "label": "Intercom account",
                    "secret": false,
                    "required": true,
                    "integration": "intercom"
                },
                {
                    "key": "email",
                    "type": "string",
                    "label": "Email of the user",
                    "secret": false,
                    "default": "{person.properties.email}",
                    "required": true,
                    "description": "Where to find the email of the user."
                },
                {
                    "key": "eventName",
                    "type": "string",
                    "label": "Event name",
                    "secret": false,
                    "default": "{event.event}",
                    "required": true,
                    "description": "A standard event or custom event name."
                },
                {
                    "key": "eventTime",
                    "type": "string",
                    "label": "Event time",
                    "secret": false,
                    "default": "{toInt(toUnixTimestamp(event.timestamp))}",
                    "required": true,
                    "description": "A Unix timestamp in seconds indicating when the actual event occurred."
                },
                {
                    "key": "include_all_properties",
                    "type": "boolean",
                    "label": "Include all properties as attributes",
                    "secret": false,
                    "default": false,
                    "required": true,
                    "description": "If set, all person properties will be included. Individual attributes can be overridden below."
                },
                {
                    "key": "properties",
                    "type": "dictionary",
                    "label": "Property mapping",
                    "secret": false,
                    "default": {
                        "revenue": "{event.properties.price}",
                        "currency": "{event.properties.currency}"
                    },
                    "required": false,
                    "description": "Map of Intercom properties and their values. You can use the filters section to filter out unwanted events."
                }
            ],
            "category": ["Customer Success"],
            "code_language": "hog",
            "description": "Send events to Intercom",
            "filters": {
                "events": [
                    {
                        "id": "$pageview",
                        "name": "$pageview",
                        "type": "events",
                        "order": 0
                    }
                ],
                "actions": [],
                "filter_test_accounts": true
            },
            "masking": null,
            "icon_url": "/static/services/intercom.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-iron-io",
            "name": "Iron.io",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Serverless"],
            "code_language": "hog",
            "description": "Send events to Iron.io.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Iron.io_.svg"
        },
        {
            "mapping_templates": [
                {
                    "name": "Track Calls",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify') and event != 'Order Completed' and event != 'Cart Updated'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "email",
                            "type": "string",
                            "label": "Email Address",
                            "secret": false,
                            "default": "{event.properties.email ?? person.properties.email}",
                            "required": false,
                            "description": "An email address that identifies a user profile in Iterable."
                        },
                        {
                            "key": "userId",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": false,
                            "description": "A user ID that identifies a user profile in Iterable."
                        },
                        {
                            "key": "eventName",
                            "type": "string",
                            "label": "Event name",
                            "secret": false,
                            "default": "{event.event}",
                            "required": true,
                            "description": "Name of the event"
                        },
                        {
                            "key": "dataFields",
                            "type": "dictionary",
                            "label": "Event Data Fields",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.properties}"
                            },
                            "required": false,
                            "description": "Additional event properties."
                        },
                        {
                            "key": "id",
                            "type": "string",
                            "label": "Event ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": false,
                            "description": "A unique ID. If an event exists with that id, the event will be updated"
                        },
                        {
                            "key": "createdAt",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": false,
                            "description": "Time the event took place."
                        },
                        {
                            "key": "campaignId",
                            "type": "string",
                            "label": "Campaign ID",
                            "secret": false,
                            "default": "{event.properties.campaignId}",
                            "required": false,
                            "description": "Iterable campaign the event can be attributed to."
                        },
                        {
                            "key": "templateId",
                            "type": "string",
                            "label": "Template ID",
                            "secret": false,
                            "default": "{event.properties.templateId}",
                            "required": false,
                            "description": "Iterable template the event can be attributed to."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "trackEvent",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Identify Calls",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event in ('$identify', '$set')",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "email",
                            "type": "string",
                            "label": "Email Address",
                            "secret": false,
                            "default": "{person.properties.email}",
                            "required": false,
                            "description": "An email address that identifies a user profile in Iterable."
                        },
                        {
                            "key": "userId",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": false,
                            "description": "A user ID that identifies a user profile in Iterable."
                        },
                        {
                            "key": "dataFields",
                            "type": "dictionary",
                            "label": "User Data Fields",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{person.properties}"
                            },
                            "required": false,
                            "description": "Data to store on the user profile."
                        },
                        {
                            "key": "phoneNumber",
                            "type": "string",
                            "label": "User Phone Number",
                            "secret": false,
                            "default": "{person.properties.phone}",
                            "required": false,
                            "description": "User phone number. Must be a valid phone number including country code. e.g. +14158675309"
                        },
                        {
                            "key": "mergeNestedObjects",
                            "type": "string",
                            "label": "Merge Nested Objects",
                            "secret": false,
                            "default": "false",
                            "required": false,
                            "description": "If you'd like to merge (rather than overwrite) a user profile's top-level objects with the values provided for them in the request body, set mergeNestedObjects to true."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "updateUser",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Update Cart Calls",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify') and event = 'Cart Updated'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "user",
                            "type": "dictionary",
                            "label": "User Data",
                            "secret": false,
                            "default": {
                                "email": "{event.properties.email ?? person.properties.email}",
                                "userId": "{person.id}",
                                "dataFields": "{person.properties}",
                                "phoneNumber": "{person.properties.phone}",
                                "mergeNestedObjects": "false"
                            },
                            "required": true,
                            "description": "Updates user data or adds a user if none exists"
                        },
                        {
                            "key": "items",
                            "type": "string",
                            "label": "Cart items",
                            "secret": false,
                            "default": "{event.properties.products}",
                            "required": true,
                            "description": "Individual items in the cart. Each item must contain `id`, `name`, `price`, and `quantity`. Extra values are added to dataFields."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "updateCart",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Order Completed Calls",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify') and event = 'Order Completed'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "id",
                            "type": "string",
                            "label": "Order ID",
                            "secret": false,
                            "default": "{event.properties.order_id}",
                            "required": false,
                            "description": "Similar to `Event ID` in custom events. Iterable recommends mapping `order_id` or `messageId`. If a purchase exists with that id, the purchase will be updated. If none is specified, a new id will automatically be generated by Iterable"
                        },
                        {
                            "key": "user",
                            "type": "dictionary",
                            "label": "User Data",
                            "secret": false,
                            "default": {
                                "email": "{event.properties.email ?? person.properties.email}",
                                "userId": "{person.id}",
                                "dataFields": "{person.properties}",
                                "phoneNumber": "{person.properties.phone}",
                                "mergeNestedObjects": "false"
                            },
                            "required": true,
                            "description": "Updates user data or adds a user if none exists"
                        },
                        {
                            "key": "dataFields",
                            "type": "dictionary",
                            "label": "Event Data Fields",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.properties}"
                            },
                            "required": false,
                            "description": "Additional event properties."
                        },
                        {
                            "key": "items",
                            "type": "string",
                            "label": "Cart items",
                            "secret": false,
                            "default": "{event.properties.products}",
                            "required": true,
                            "description": "Individual items in the cart. Each item must contain `id`, `name`, `price`, and `quantity`. Extra values are added to dataFields."
                        },
                        {
                            "key": "total",
                            "type": "string",
                            "label": "Total",
                            "secret": false,
                            "default": "{event.properties.total}",
                            "required": true,
                            "description": "Total order amount."
                        },
                        {
                            "key": "createdAt",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": false,
                            "description": "Time the event took place."
                        },
                        {
                            "key": "campaignId",
                            "type": "string",
                            "label": "Campaign ID",
                            "secret": false,
                            "default": "{event.properties.campaignId}",
                            "required": false,
                            "description": "Iterable campaign the event can be attributed to."
                        },
                        {
                            "key": "templateId",
                            "type": "string",
                            "label": "Template ID",
                            "secret": false,
                            "default": "{event.properties.templateId}",
                            "required": false,
                            "description": "Iterable template the event can be attributed to."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "trackPurchase",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                }
            ],
            "mappings": null,
            "status": "alpha",
            "free": false,
            "type": "destination",
            "id": "segment-actions-iterable",
            "name": "Iterable",
            "hog": "return event",
            "inputs_schema": [
                {
                    "key": "apiKey",
                    "type": "string",
                    "label": "API Key",
                    "secret": false,
                    "required": true,
                    "description": "To obtain the API Key, go to the Iterable app and naviate to Integrations > API Keys. Create a new API Key with the 'Server-Side' type."
                },
                {
                    "key": "dataCenterLocation",
                    "type": "choice",
                    "label": "Data Center Location",
                    "secret": false,
                    "choices": [
                        {
                            "label": "United States",
                            "value": "united_states"
                        },
                        {
                            "label": "Europe",
                            "value": "europe"
                        }
                    ],
                    "default": "united_states",
                    "required": false,
                    "description": "The location where your Iterable data is hosted."
                },
                {
                    "key": "debug_mode",
                    "type": "boolean",
                    "label": "Debug Mode",
                    "default": false,
                    "description": "Will log configuration and request details"
                }
            ],
            "category": [],
            "code_language": "hog",
            "description": "Send event data to Iterable",
            "filters": null,
            "masking": null,
            "icon_url": "/static/services/iterable.com.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-jackdb",
            "name": "JackDB",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Databases & Object Storage"],
            "code_language": "hog",
            "description": "Send events to JackDB.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/JackDB.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "stable",
            "free": false,
            "type": "destination",
            "id": "template-june",
            "name": "June.so",
            "hog": "let type := 'track'\n\nif (event.event in ('$identify', '$set')) {\n    type := 'identify'\n} else if (event.event in ('$pageview', '$screen')) {\n    type := 'page'\n}\n\nlet context := {\n    'app': {},\n    'campaign': {},\n    'device': {},\n    'os': {},\n    'referrer': {},\n    'screen': {}\n}\n\nif (not empty(event.properties.$app_build)) context.app.build := event.properties.$app_build\nif (not empty(event.properties.$app_version)) context.app.version := event.properties.$app_version\nif (not empty(event.properties.$app_name)) context.app.name := event.properties.$app_name\nif (not empty(event.properties.utm_campaign)) context.campaign.name := event.properties.utm_campaign\nif (not empty(event.properties.utm_content)) context.campaign.content := event.properties.utm_content\nif (not empty(event.properties.utm_medium)) context.campaign.medium := event.properties.utm_medium\nif (not empty(event.properties.utm_source)) context.campaign.source := event.properties.utm_source\nif (not empty(event.properties.utm_term)) context.campaign.term := event.properties.utm_term\nif (not empty(event.properties.$device_id)) context.device.id := event.properties.$device_id\nif (not empty(event.properties.$device_manufacturer)) context.device.manufacturer := event.properties.$device_manufacturer\nif (not empty(event.properties.$device_model)) context.device.model := event.properties.$device_model\nif (not empty(event.properties.$os_name)) context.device.name := event.properties.$os_name\nif (not empty(event.properties.$os_version)) context.device.version := event.properties.$os_version\nif (not empty(event.properties.$device_type)) context.device.type := event.properties.$device_type\nif (not empty(event.properties.$ip)) context.ip := event.properties.$ip\nif (not empty(event.properties.$browser_language)) context.locale := event.properties.$browser_language\nif (not empty(event.properties.$os)) context.os.name := event.properties.$os\nif (not empty(event.properties.$os_version)) context.os.version := event.properties.$os_version\nif (not empty(event.properties.$referrer)) context.referrer.url := event.properties.$referrer\nif (not empty(event.properties.$screen_height)) context.screen.height := event.properties.$screen_height\nif (not empty(event.properties.$screen_width)) context.screen.width := event.properties.$screen_width\nif (not empty(event.properties.$geoip_time_zone)) context.timezone := event.properties.$geoip_time_zone\nif (not empty(event.properties.$raw_user_agent)) context.userAgent := event.properties.$raw_user_agent\n\nlet properties := {}\n\nif (not empty(event.properties.$current_url)) properties.url := event.properties.$current_url\nif (not empty(event.properties.$pathname)) properties.path := event.properties.$pathname\nif (not empty(event.properties.title)) properties.title := event.properties.title\nif (not empty(event.properties.$referrer)) properties.referrer := event.properties.$referrer\nif (not empty(event.properties.$current_url)) {\n    if (not empty(splitByString('?', event.properties.$current_url)[2])) {\n        properties.search := f'?{splitByString('?', event.properties.$current_url)[2]}'\n    }\n}\n\nlet traits := {}\n\nfor (let key, value in inputs.properties) {\n    if (not empty(value)) {\n        traits[key] := value\n    }\n}\n\nif (inputs.include_all_properties) {\n    for (let key, value in (type == 'identify' ? person.properties : event.properties)) {\n        if (not empty(value) and not key like '$%') {\n            traits[key] := value\n        }\n    }\n}\n\nlet body := {\n    'properties': properties,\n    'traits': traits,\n    'timestamp': event.timestamp,\n    'context': context,\n    'messageId': event.uuid\n}\n\nif (type == 'track') body.event := event.event\nif (event.properties.$is_identified) {\n    body.userId := event.distinct_id\n    if (not empty(event.properties.$anon_distinct_id)) body.anonymousId := event.properties.$anon_distinct_id\n} else {\n    body.anonymousId := event.distinct_id\n}\n\nlet res := fetch(f'https://api.june.so/sdk/{type}', {\n    'method': 'POST',\n    'headers': {\n        'Authorization': f'Basic {inputs.apiKey}',\n        'Content-Type': 'application/json'\n    },\n    'body': body\n})\n\nif (res.status >= 400) {\n    throw Error(f'Error from api.june.so (status {res.status}): {res.body}')\n}",
            "inputs_schema": [
                {
                    "key": "apiKey",
                    "type": "string",
                    "label": "June.so Write API key",
                    "secret": true,
                    "required": true
                },
                {
                    "key": "include_all_properties",
                    "type": "boolean",
                    "label": "Include all properties as attributes",
                    "secret": false,
                    "default": false,
                    "required": true,
                    "description": "If set, all event properties will be included as traits. Individual traits can be overridden below. For identify events the Person properties will be used."
                },
                {
                    "key": "properties",
                    "type": "dictionary",
                    "label": "Trait mapping",
                    "secret": false,
                    "default": {
                        "name": "{person.properties.name}",
                        "email": "{person.properties.email}",
                        "phone": "{person.properties.phone}"
                    },
                    "required": false,
                    "description": "Map of June.so traits and their values. You can use the filters section to filter out unwanted events."
                }
            ],
            "category": ["Analytics"],
            "code_language": "hog",
            "description": "Send events to June.so ",
            "filters": {
                "events": [],
                "actions": [],
                "filter_test_accounts": false
            },
            "masking": null,
            "icon_url": "/static/services/june.png"
        },
        {
            "mapping_templates": [
                {
                    "name": "Track Calls",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify')",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "anonymousId",
                            "type": "string",
                            "label": "Anonymous ID",
                            "secret": false,
                            "default": "{event.distinct_id}",
                            "required": false,
                            "description": "Anonymous id"
                        },
                        {
                            "key": "userId",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": false,
                            "description": "The ID associated with the user"
                        },
                        {
                            "key": "event",
                            "type": "string",
                            "label": "Event Name",
                            "secret": false,
                            "default": "{event.event ?? event.event}",
                            "required": false,
                            "description": "The event name"
                        },
                        {
                            "key": "type",
                            "type": "string",
                            "label": "Type",
                            "secret": false,
                            "default": "{event.event == '$pageview' ? 'page' : event.event == '$screen' ? 'screen' : event.event == '$groupidentify' ? 'group' : event.event in ('$identify', '$set') ? 'identify' : event.event == '$alias' ? 'alias' : 'track'}",
                            "required": true,
                            "description": "The type of the event"
                        },
                        {
                            "key": "properties",
                            "type": "dictionary",
                            "label": "Event properties or user traits",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "Additional event Properties or user Traits to send with the event"
                        },
                        {
                            "key": "kameleoonVisitorCode",
                            "type": "string",
                            "label": "Kameleoon Visitor Code",
                            "secret": false,
                            "default": "{event.properties.kameleoonVisitorCode ?? person.properties.kameleoonVisitorCode}",
                            "required": false,
                            "description": "Kameleoon Visitor Code - a unique identifier for the user"
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": true,
                            "description": "The timestamp of the event"
                        },
                        {
                            "key": "context",
                            "type": "dictionary",
                            "label": "Context properties",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.context}"
                            },
                            "required": false,
                            "description": "Context properties to send with the event"
                        },
                        {
                            "key": "messageId",
                            "type": "string",
                            "label": "MessageId",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": true,
                            "description": "The Segment messageId"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "logEvent",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Page Calls",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event = '$pageview'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "anonymousId",
                            "type": "string",
                            "label": "Anonymous ID",
                            "secret": false,
                            "default": "{event.distinct_id}",
                            "required": false,
                            "description": "Anonymous id"
                        },
                        {
                            "key": "userId",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": false,
                            "description": "The ID associated with the user"
                        },
                        {
                            "key": "type",
                            "type": "string",
                            "label": "Type",
                            "secret": false,
                            "default": "{event.event == '$pageview' ? 'page' : event.event == '$screen' ? 'screen' : event.event == '$groupidentify' ? 'group' : event.event in ('$identify', '$set') ? 'identify' : event.event == '$alias' ? 'alias' : 'track'}",
                            "required": true,
                            "description": "The type of the event"
                        },
                        {
                            "key": "properties",
                            "type": "dictionary",
                            "label": "Properties",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.properties}"
                            },
                            "required": false,
                            "description": "Page properties"
                        },
                        {
                            "key": "kameleoonVisitorCode",
                            "type": "string",
                            "label": "Kameleoon Visitor Code",
                            "secret": false,
                            "default": "{event.properties.kameleoonVisitorCode}",
                            "required": false,
                            "description": "Kameleoon Visitor Code - a unique identifier for the user"
                        },
                        {
                            "key": "name",
                            "type": "string",
                            "label": "Page Name",
                            "secret": false,
                            "default": "{event.event}",
                            "required": false,
                            "description": "The name of the page"
                        },
                        {
                            "key": "context",
                            "type": "dictionary",
                            "label": "Context properties",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.context}"
                            },
                            "required": false,
                            "description": "Context properties to send with the event"
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": true,
                            "description": "The timestamp of the event"
                        },
                        {
                            "key": "messageId",
                            "type": "string",
                            "label": "MessageId",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": false,
                            "description": "The Segment messageId"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "page",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Group Calls",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event = '$groupidentify'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "anonymousId",
                            "type": "string",
                            "label": "Anonymous ID",
                            "secret": false,
                            "default": "{event.distinct_id}",
                            "required": false,
                            "description": "Anonymous id"
                        },
                        {
                            "key": "userId",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": false,
                            "description": "The ID associated with the user"
                        },
                        {
                            "key": "type",
                            "type": "string",
                            "label": "Type",
                            "secret": false,
                            "default": "{event.event == '$pageview' ? 'page' : event.event == '$screen' ? 'screen' : event.event == '$groupidentify' ? 'group' : event.event in ('$identify', '$set') ? 'identify' : event.event == '$alias' ? 'alias' : 'track'}",
                            "required": true,
                            "description": "The type of the event"
                        },
                        {
                            "key": "groupId",
                            "type": "string",
                            "label": "Group ID",
                            "secret": false,
                            "default": "{event.groupId}",
                            "required": true,
                            "description": "The group id"
                        },
                        {
                            "key": "properties",
                            "type": "dictionary",
                            "label": "User Traits",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{person.properties}"
                            },
                            "required": false,
                            "description": "Traits to send with the event"
                        },
                        {
                            "key": "kameleoonVisitorCode",
                            "type": "string",
                            "label": "Kameleoon Visitor Code",
                            "secret": false,
                            "default": "{person.properties.kameleoonVisitorCode}",
                            "required": false,
                            "description": "Kameleoon Visitor Code - a unique identifier for the user"
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": true,
                            "description": "The timestamp of the event"
                        },
                        {
                            "key": "messageId",
                            "type": "string",
                            "label": "MessageId",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": true,
                            "description": "The Segment messageId"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "group",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Identify Calls",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event in ('$identify', '$set')",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "anonymousId",
                            "type": "string",
                            "label": "Anonymous ID",
                            "secret": false,
                            "default": "{event.distinct_id}",
                            "required": false,
                            "description": "Anonymous id"
                        },
                        {
                            "key": "userId",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": false,
                            "description": "The ID associated with the user"
                        },
                        {
                            "key": "type",
                            "type": "string",
                            "label": "Type",
                            "secret": false,
                            "default": "{event.event == '$pageview' ? 'page' : event.event == '$screen' ? 'screen' : event.event == '$groupidentify' ? 'group' : event.event in ('$identify', '$set') ? 'identify' : event.event == '$alias' ? 'alias' : 'track'}",
                            "required": true,
                            "description": "The type of the event"
                        },
                        {
                            "key": "properties",
                            "type": "dictionary",
                            "label": "User Traits",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{person.properties}"
                            },
                            "required": false,
                            "description": "Traits to send with the event"
                        },
                        {
                            "key": "kameleoonVisitorCode",
                            "type": "string",
                            "label": "Kameleoon Visitor Code",
                            "secret": false,
                            "default": "{person.properties.kameleoonVisitorCode}",
                            "required": false,
                            "description": "Kameleoon Visitor Code - a unique identifier for the user"
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": true,
                            "description": "The timestamp of the event"
                        },
                        {
                            "key": "messageId",
                            "type": "string",
                            "label": "MessageId",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": true,
                            "description": "The Segment messageId"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "identify",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                }
            ],
            "mappings": null,
            "status": "alpha",
            "free": false,
            "type": "destination",
            "id": "segment-actions-kameleoon",
            "name": "Kameleoon",
            "hog": "return event",
            "inputs_schema": [
                {
                    "key": "apiKey",
                    "type": "string",
                    "label": "API Key",
                    "secret": true,
                    "required": true,
                    "description": "Kameleoon API key. You can generate one using the link in the help doc (https://help.kameleoon.com/setting-up-segment/)."
                },
                {
                    "key": "sitecode",
                    "type": "string",
                    "label": "Sitecode",
                    "secret": false,
                    "required": true,
                    "description": "Kameleoon project sitecode. You can find this project dashboard (https://help.kameleoon.com/question/how-do-i-find-my-site-id/)."
                },
                {
                    "key": "debug_mode",
                    "type": "boolean",
                    "label": "Debug Mode",
                    "default": false,
                    "description": "Will log configuration and request details"
                }
            ],
            "category": [],
            "code_language": "hog",
            "description": "Send event data to Kameleoon",
            "filters": null,
            "masking": null,
            "icon_url": "/static/services/kameleoon.com.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-keen-io",
            "name": "Keen.io",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Analytics"],
            "code_language": "hog",
            "description": "Send events to Keen.io.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Keen.io.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-kissmetrics",
            "name": "Kissmetrics",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Analytics"],
            "code_language": "hog",
            "description": "Send events to Kissmetrics.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Kissmetrics.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "stable",
            "free": false,
            "type": "destination",
            "id": "template-klaviyo-event",
            "name": "Klaviyo",
            "hog": "if (empty(inputs.externalId) and empty(inputs.email)) {\n    print('Email or External ID has to be set. Skipping...')\n    return\n}\n\nlet body := {\n    'data': {\n        'type': 'event',\n        'attributes': {\n            'properties': {},\n            'metric': {\n                'data': {\n                    'type': 'metric',\n                    'attributes': {\n                        'name': event.event\n                    }\n                }\n            },\n            'profile': {\n                'data': {\n                    'type': 'profile',\n                    'attributes': {}\n                }\n            }\n        }\n    }\n}\n\nif (not empty(inputs.email)) body.data.attributes.profile.data.attributes.email := inputs.email\nif (not empty(inputs.externalId)) body.data.attributes.profile.data.attributes.external_id := inputs.externalId\n\nif (inputs.include_all_properties) {\n    for (let key, value in event.properties) {\n        if (not empty(value) and not key like '$%') {\n            body.data.attributes.properties[key] := value\n        }\n    }\n}\n\nfor (let key, value in inputs.attributes) {\n    if (not empty(value)) {\n        body.data.attributes.properties[key] := value\n    }\n}\n\nlet res := fetch('https://a.klaviyo.com/api/events', {\n    'method': 'POST',\n    'headers': {\n        'Authorization': f'Klaviyo-API-Key {inputs.apiKey}',\n        'revision': '2024-10-15',\n        'Content-Type': 'application/json'\n    },\n    'body': body\n})\n\n\nif (res.status >= 400) {\n    throw Error(f'Error from a.klaviyo.com api: {res.status}: {res.body}');\n}",
            "inputs_schema": [
                {
                    "key": "apiKey",
                    "type": "string",
                    "label": "Klaviyo Private API Key",
                    "secret": true,
                    "required": true,
                    "description": "You can create a Private API Key in the account settings (https://www.klaviyo.com/settings/account/api-keys)"
                },
                {
                    "key": "email",
                    "type": "string",
                    "label": "User Email",
                    "secret": false,
                    "default": "{person.properties.email}",
                    "required": true,
                    "description": "Where to find the email for the contact to be created. You can use the filters section to filter out unwanted emails or internal users."
                },
                {
                    "key": "externalId",
                    "type": "string",
                    "label": "External ID",
                    "secret": false,
                    "default": "{person.id}",
                    "required": true,
                    "description": "A unique identifier used to associate Klaviyo profiles with profiles in an external system"
                },
                {
                    "key": "include_all_properties",
                    "type": "boolean",
                    "label": "Include all event properties as event attributes",
                    "secret": false,
                    "default": false,
                    "required": true,
                    "description": "If set, all event properties will be included as attributes. Individual attributes can be overridden below."
                },
                {
                    "key": "attributes",
                    "type": "dictionary",
                    "label": "Attributes",
                    "secret": false,
                    "default": {
                        "price": "{event.properties.price}",
                        "currency": "{event.properties.currency}"
                    },
                    "required": false,
                    "description": "Map of event attributes and their values."
                }
            ],
            "category": ["Email Marketing"],
            "code_language": "hog",
            "description": "Send events to Klaviyo",
            "filters": {
                "events": [],
                "actions": [],
                "filter_test_accounts": true
            },
            "masking": null,
            "icon_url": "/static/services/klaviyo.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "stable",
            "free": false,
            "type": "destination",
            "id": "template-klaviyo-user",
            "name": "Klaviyo",
            "hog": "if (empty(inputs.externalId) and empty(inputs.email)) {\n    print('Email or External ID has to be set. Skipping...')\n    return\n}\n\nlet body := {\n    'data': {\n        'type': 'profile',\n        'attributes': {\n            'location': {},\n            'properties': {},\n        }\n    }\n}\n\nif (not empty(person.properties.$geoip_latitude)) body.data.attributes.location.latitude := person.properties.$geoip_latitude\nif (not empty(person.properties.$geoip_longitude)) body.data.attributes.location.longitude := person.properties.$geoip_longitude\nif (not empty(person.properties.$geoip_city_name)) body.data.attributes.location.city := person.properties.$geoip_city_name\nif (not empty(person.properties.$geoip_country_name)) body.data.attributes.location.country := person.properties.$geoip_country_name\nif (not empty(person.properties.$geoip_continent_code)) body.data.attributes.location.region := person.properties.$geoip_continent_code\nif (not empty(person.properties.$geoip_postal_code)) body.data.attributes.location.zip := person.properties.$geoip_postal_code\nif (not empty(person.properties.$geoip_time_zone)) body.data.attributes.location.timezone := person.properties.$geoip_time_zone\n\nif (not empty(inputs.email)) body.data.attributes.email := inputs.email\nif (not empty(inputs.externalId)) body.data.attributes.external_id := inputs.externalId\n\nif (inputs.include_all_properties) {\n    for (let key, value in person.properties) {\n        if (not empty(value) and not key like '$%') {\n            body.data.attributes.properties[key] := value\n        }\n    }\n}\n\nfor (let key, value in inputs.customProperties) {\n    if (not empty(value)) {\n        body.data.attributes.properties[key] := value\n    }\n}\n\nlet res := fetch('https://a.klaviyo.com/api/profiles', {\n    'method': 'POST',\n    'headers': {\n        'Authorization': f'Klaviyo-API-Key {inputs.apiKey}',\n        'revision': '2024-10-15',\n        'Content-Type': 'application/json'\n    },\n    'body': body\n})\n\nif (res.status == 409 and not empty(res.body.errors.1.meta.duplicate_profile_id)) {\n    let id := res.body.errors.1.meta.duplicate_profile_id\n    body.data.id := id\n\n    let res2 := fetch(f'https://a.klaviyo.com/api/profiles/{id}', {\n        'method': 'PATCH',\n        'headers': {\n            'Authorization': f'Klaviyo-API-Key {inputs.apiKey}',\n            'revision': '2024-10-15',\n            'Content-Type': 'application/json'\n        },\n        'body': body\n    })\n    if (res2.status >= 400) {\n        throw Error(f'Error from a.klaviyo.com api: {res2.status}: {res2.body}');\n    }\n} else if (res.status >= 400) {\n    throw Error(f'Error from a.klaviyo.com api: {res.status}: {res.body}');\n}",
            "inputs_schema": [
                {
                    "key": "apiKey",
                    "type": "string",
                    "label": "Klaviyo Private API Key",
                    "secret": true,
                    "required": true,
                    "description": "You can create a Private API Key in the account settings (https://www.klaviyo.com/settings/account/api-keys)"
                },
                {
                    "key": "email",
                    "type": "string",
                    "label": "User Email",
                    "secret": false,
                    "default": "{person.properties.email}",
                    "required": true,
                    "description": "Where to find the email for the contact to be created. You can use the filters section to filter out unwanted emails or internal users."
                },
                {
                    "key": "externalId",
                    "type": "string",
                    "label": "External ID",
                    "secret": false,
                    "default": "{person.id}",
                    "required": true,
                    "description": "A unique identifier used to associate Klaviyo profiles with profiles in an external system"
                },
                {
                    "key": "include_all_properties",
                    "type": "boolean",
                    "label": "Include all person properties as custom properties",
                    "secret": false,
                    "default": false,
                    "required": true,
                    "description": "If set, all event properties will be included as attributes. Individual attributes can be overridden below. For identify events the Person properties will be used."
                },
                {
                    "key": "customProperties",
                    "type": "dictionary",
                    "label": "Custom properties",
                    "secret": false,
                    "default": {
                        "title": "{person.properties.title}",
                        "last_name": "{person.properties.lastname}",
                        "first_name": "{person.properties.firstname}",
                        "organization": "{person.properties.organization}",
                        "phone_number": "{person.properties.phone}"
                    },
                    "required": false,
                    "description": "Map of Custom properties and their values."
                }
            ],
            "category": ["Email Marketing"],
            "code_language": "hog",
            "description": "Updates a contact in Klaviyo",
            "filters": {
                "events": [
                    {
                        "id": "$identify",
                        "name": "$identify",
                        "type": "events",
                        "order": 0
                    },
                    {
                        "id": "$set",
                        "name": "$set",
                        "type": "events",
                        "order": 0
                    }
                ],
                "actions": [],
                "filter_test_accounts": true
            },
            "masking": null,
            "icon_url": "/static/services/klaviyo.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "beta",
            "free": false,
            "type": "destination",
            "id": "template-knock",
            "name": "Knock",
            "hog": "if (empty(inputs.userId)) {\n    print('No User ID set. Skipping...')\n    return\n}\n\nlet body := {\n    'type': 'track',\n    'event': event.event,\n    'userId': inputs.userId,\n    'properties': inputs.include_all_properties ? event.properties : {},\n    'messageId': event.uuid,\n    'timestamp': event.timestamp\n}\nif (inputs.include_all_properties and not empty(event.elements_chain)) {\n    body['properties']['$elements_chain'] := event.elements_chain\n}\n\nfor (let key, value in inputs.attributes) {\n    if (not empty(value)) {\n        body['properties'][key] := value\n    }\n}\n\nlet res := fetch(inputs.webhookUrl, {\n    'method': 'POST',\n    'headers': {\n        'Content-Type': 'application/json'\n    },\n    'body': body\n})\n\nif (res.status >= 400) {\n    throw Error(f'Error from knock.app (status {res.status}): {res.body}')\n}",
            "inputs_schema": [
                {
                    "key": "webhookUrl",
                    "type": "string",
                    "label": "Knock.app webhook destination URL",
                    "secret": false,
                    "required": true
                },
                {
                    "key": "userId",
                    "type": "string",
                    "label": "User ID",
                    "secret": false,
                    "default": "{person.id}",
                    "required": true,
                    "description": "You can choose to fill this from an `email` property or an `id` property. If the value is empty nothing will be sent. See here for more information: https://docs.gleap.io/server/rest-api"
                },
                {
                    "key": "include_all_properties",
                    "type": "boolean",
                    "label": "Include all properties as attributes",
                    "secret": false,
                    "default": false,
                    "required": true,
                    "description": "If set, all event properties will be included as attributes. Individual attributes can be overridden below."
                },
                {
                    "key": "attributes",
                    "type": "dictionary",
                    "label": "Attribute mapping",
                    "secret": false,
                    "default": {
                        "price": "{event.properties.price}"
                    },
                    "required": false,
                    "description": "Map of Knock.app attributes and their values. You can use the filters section to filter out unwanted events."
                }
            ],
            "category": ["SMS & Push Notifications"],
            "code_language": "hog",
            "description": "Send events to Knock",
            "filters": null,
            "masking": null,
            "icon_url": "/static/services/knock.png"
        },
        {
            "mapping_templates": [
                {
                    "name": "Track Calls",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify')",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "email",
                            "type": "string",
                            "label": "Email",
                            "secret": false,
                            "default": "{person.properties.email ?? event.email}",
                            "required": false,
                            "description": "The email to associate with the user"
                        },
                        {
                            "key": "event",
                            "type": "string",
                            "label": "Event Name",
                            "secret": false,
                            "default": "{event.event}",
                            "required": true,
                            "description": "The event name"
                        },
                        {
                            "key": "properties",
                            "type": "dictionary",
                            "label": "Event properties",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.properties}"
                            },
                            "required": false,
                            "description": "Properties to send with the event"
                        },
                        {
                            "key": "sent_at",
                            "type": "string",
                            "label": "Sent At",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": true,
                            "description": "The timestamp of the event"
                        },
                        {
                            "key": "context",
                            "type": "dictionary",
                            "label": "Context properties",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.context}"
                            },
                            "required": false,
                            "description": "Context properties to send with the event"
                        },
                        {
                            "key": "traits",
                            "type": "dictionary",
                            "label": "Traits",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{person.properties}"
                            },
                            "required": false,
                            "description": "Traits inherited from the context object"
                        },
                        {
                            "key": "device_ip",
                            "type": "string",
                            "label": "Device IP",
                            "secret": false,
                            "default": "{event.properties.$ip}",
                            "required": false,
                            "description": "The device IP collected from the context"
                        },
                        {
                            "key": "message_id",
                            "type": "string",
                            "label": "MessageId",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": true,
                            "description": "The Segment messageId"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "track",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Identify Calls",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event in ('$identify', '$set')",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "email",
                            "type": "string",
                            "label": "Email",
                            "secret": false,
                            "default": "{person.properties.email ?? event.email}",
                            "required": false,
                            "description": "The email to associate with the user"
                        },
                        {
                            "key": "traits",
                            "type": "dictionary",
                            "label": "Traits",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{person.properties}"
                            },
                            "required": false,
                            "description": "Traits to associate with the user"
                        },
                        {
                            "key": "sent_at",
                            "type": "string",
                            "label": "Sent At",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": true,
                            "description": "The timestamp of the event"
                        },
                        {
                            "key": "context",
                            "type": "dictionary",
                            "label": "Context properties",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.context}"
                            },
                            "required": false,
                            "description": "Context properties to send with the event"
                        },
                        {
                            "key": "device_ip",
                            "type": "string",
                            "label": "Device IP",
                            "secret": false,
                            "default": "{event.properties.$ip}",
                            "required": false,
                            "description": "The device IP collected from the context"
                        },
                        {
                            "key": "message_id",
                            "type": "string",
                            "label": "MessageId",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": true,
                            "description": "The Segment messageId"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "identify",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                }
            ],
            "mappings": null,
            "status": "beta",
            "free": false,
            "type": "destination",
            "id": "segment-actions-koala-cloud",
            "name": "Koala (Cloud)",
            "hog": "return event",
            "inputs_schema": [
                {
                    "key": "public_key",
                    "type": "string",
                    "label": "Public Key",
                    "secret": false,
                    "required": true,
                    "description": "Your public key"
                },
                {
                    "key": "debug_mode",
                    "type": "boolean",
                    "label": "Debug Mode",
                    "default": false,
                    "description": "Will log configuration and request details"
                }
            ],
            "category": [],
            "code_language": "hog",
            "description": "Send event data to Koala (Cloud)",
            "filters": null,
            "masking": null,
            "icon_url": "/static/services/koala.com.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-kochava",
            "name": "Kochava",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Attribution Platforms"],
            "code_language": "hog",
            "description": "Send events to Kochava.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Kochava.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-kubit",
            "name": "Kubit",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Analytics"],
            "code_language": "hog",
            "description": "Send events to Kubit.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Kubit.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-kustomer",
            "name": "Kustomer",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Customer Service"],
            "code_language": "hog",
            "description": "Send events to Kustomer.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Kustomer.svg"
        },
        {
            "mapping_templates": [
                {
                    "name": "Track Event",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify')",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "context_kind",
                            "type": "string",
                            "label": "Context Kind",
                            "secret": false,
                            "default": "user",
                            "required": false,
                            "description": "The event's context kind. If not specified, the context kind will default to `user`. To learn more about context kinds and where you can find a list of context kinds LaunchDarkly has observed, read [Context kinds](https://docs.launchdarkly.com/home/contexts/context-kinds)."
                        },
                        {
                            "key": "user_key",
                            "type": "string",
                            "label": "Context Key",
                            "secret": false,
                            "default": "{person.id ?? event.distinct_id}",
                            "required": true,
                            "description": "The unique LaunchDarkly context key. In most cases the Segment `userId` should be used."
                        },
                        {
                            "key": "additional_context_keys",
                            "type": "dictionary",
                            "label": "Additional Context Keys",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "A mapping of additional context kinds to context keys. To learn more, read [Contexts and segments](https://docs.launchdarkly.com/home/contexts)."
                        },
                        {
                            "key": "event_name",
                            "type": "string",
                            "label": "Event Name",
                            "secret": false,
                            "default": "{event.event}",
                            "required": true,
                            "description": "The name of the event to track. This name typically corresponds to a LaunchDarkly metric with the same key."
                        },
                        {
                            "key": "metric_value",
                            "type": "string",
                            "label": "Metric Value",
                            "secret": false,
                            "default": "{event.properties.revenue ?? event.properties.value}",
                            "required": false,
                            "description": "The numeric value associated with the event. This value is used by the LaunchDarkly experimentation feature in numeric custom metrics, and will also be returned as part of the custom event for Data Export."
                        },
                        {
                            "key": "event_properties",
                            "type": "dictionary",
                            "label": "Event Properties",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.properties}"
                            },
                            "required": false,
                            "description": "Optional object containing the properties for the event being tracked. These properties assist with observational analytics for LaunchDarkly Data Export destinations. These properties are not saved to the LaunchDarkly user."
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Event timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": false,
                            "description": "The time when the event happened. Defaults to the current time."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "trackEvent",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Alias User",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event in ('$identify', '$set') or event = '$alias'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "user_key",
                            "type": "string",
                            "label": "User key",
                            "secret": false,
                            "default": "{person.id}",
                            "required": true,
                            "description": "The user's unique key."
                        },
                        {
                            "key": "previous_key",
                            "type": "string",
                            "label": "Anonymous ID",
                            "secret": false,
                            "default": "{event.previousId ?? event.distinct_id}",
                            "required": true,
                            "description": "The user's unauthenticated identifier."
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Event Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": false,
                            "description": "The time when the event happened. Defaults to the current time."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "aliasUser",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                }
            ],
            "mappings": null,
            "status": "beta",
            "free": false,
            "type": "destination",
            "id": "segment-actions-launchdarkly",
            "name": "LaunchDarkly",
            "hog": "return event",
            "inputs_schema": [
                {
                    "key": "client_id",
                    "type": "string",
                    "label": "LaunchDarkly client-side ID",
                    "secret": false,
                    "required": true,
                    "description": "Find and copy the client-side ID in the LaunchDarkly account settings page."
                },
                {
                    "key": "events_host_name",
                    "type": "string",
                    "label": "LaunchDarkly events host name",
                    "secret": false,
                    "default": "events.launchdarkly.com",
                    "required": false,
                    "description": "Your LaunchDarkly events host name. If not specified, the default value of events.launchdarkly.com will be used. Most customers will not need to change this setting."
                },
                {
                    "key": "debug_mode",
                    "type": "boolean",
                    "label": "Debug Mode",
                    "default": false,
                    "description": "Will log configuration and request details"
                }
            ],
            "category": [],
            "code_language": "hog",
            "description": "Send event data to LaunchDarkly",
            "filters": null,
            "masking": null,
            "icon_url": "/static/services/launchdarkly.com.png"
        },
        {
            "mapping_templates": [
                {
                    "name": "Track Calls",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify') and event != 'Order Completed'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "event",
                            "type": "string",
                            "label": "Event Name",
                            "secret": false,
                            "default": "{event.event}",
                            "required": true,
                            "description": "The name of the action being performed."
                        },
                        {
                            "key": "userId",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": false,
                            "description": "A unique ID for a known user. This will be used as the Distinct ID. This field is required if the Anonymous ID field is empty"
                        },
                        {
                            "key": "anonymousId",
                            "type": "string",
                            "label": "Anonymous ID",
                            "secret": false,
                            "default": "{event.distinct_id}",
                            "required": false,
                            "description": "A unique ID for an anonymous user. This will be used as the Distinct ID if the User ID field is empty. This field is required if the User ID field is empty"
                        },
                        {
                            "key": "groupId",
                            "type": "string",
                            "label": "Group ID",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "The unique identifier of the group that performed this event."
                        },
                        {
                            "key": "messageId",
                            "type": "string",
                            "label": "Insert ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": true,
                            "description": "A random id that is unique to an event. Launchpad uses $insert_id to deduplicate events."
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": true,
                            "description": "The timestamp of the event. Launchpad expects epoch timestamp in millisecond or second. Please note, Launchpad only accepts this field as the timestamp. If the field is empty, it will be set to the time Launchpad servers receive it."
                        },
                        {
                            "key": "properties",
                            "type": "dictionary",
                            "label": "Event Properties",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.properties}"
                            },
                            "required": false,
                            "description": "An object of key-value pairs that represent additional data to be sent along with the event."
                        },
                        {
                            "key": "traits",
                            "type": "dictionary",
                            "label": "User Properties",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "An object of key-value pairs that represent additional data tied to the user. This is used for segmentation within the platform."
                        },
                        {
                            "key": "context",
                            "type": "dictionary",
                            "label": "Event context",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.context}"
                            },
                            "required": false,
                            "description": "An object of key-value pairs that provides useful context about the event."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "trackEvent",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Page Calls",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event = '$pageview'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "event",
                            "type": "string",
                            "label": "Event Name",
                            "secret": false,
                            "default": "{event.event}",
                            "required": true,
                            "description": "The name of the action being performed."
                        },
                        {
                            "key": "userId",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": false,
                            "description": "A unique ID for a known user. This will be used as the Distinct ID. This field is required if the Anonymous ID field is empty"
                        },
                        {
                            "key": "anonymousId",
                            "type": "string",
                            "label": "Anonymous ID",
                            "secret": false,
                            "default": "{event.distinct_id}",
                            "required": false,
                            "description": "A unique ID for an anonymous user. This will be used as the Distinct ID if the User ID field is empty. This field is required if the User ID field is empty"
                        },
                        {
                            "key": "groupId",
                            "type": "string",
                            "label": "Group ID",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "The unique identifier of the group that performed this event."
                        },
                        {
                            "key": "messageId",
                            "type": "string",
                            "label": "Insert ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": true,
                            "description": "A random id that is unique to an event. Launchpad uses $insert_id to deduplicate events."
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": true,
                            "description": "The timestamp of the event. Launchpad expects epoch timestamp in millisecond or second. Please note, Launchpad only accepts this field as the timestamp. If the field is empty, it will be set to the time Launchpad servers receive it."
                        },
                        {
                            "key": "properties",
                            "type": "dictionary",
                            "label": "Event Properties",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.properties}"
                            },
                            "required": false,
                            "description": "An object of key-value pairs that represent additional data to be sent along with the event."
                        },
                        {
                            "key": "traits",
                            "type": "dictionary",
                            "label": "User Properties",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "An object of key-value pairs that represent additional data tied to the user. This is used for segmentation within the platform."
                        },
                        {
                            "key": "context",
                            "type": "dictionary",
                            "label": "Event context",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.context}"
                            },
                            "required": false,
                            "description": "An object of key-value pairs that provides useful context about the event."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "trackEvent",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Screen Calls",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event = '$screen'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "event",
                            "type": "string",
                            "label": "Event Name",
                            "secret": false,
                            "default": "{event.event}",
                            "required": true,
                            "description": "The name of the action being performed."
                        },
                        {
                            "key": "userId",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": false,
                            "description": "A unique ID for a known user. This will be used as the Distinct ID. This field is required if the Anonymous ID field is empty"
                        },
                        {
                            "key": "anonymousId",
                            "type": "string",
                            "label": "Anonymous ID",
                            "secret": false,
                            "default": "{event.distinct_id}",
                            "required": false,
                            "description": "A unique ID for an anonymous user. This will be used as the Distinct ID if the User ID field is empty. This field is required if the User ID field is empty"
                        },
                        {
                            "key": "groupId",
                            "type": "string",
                            "label": "Group ID",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "The unique identifier of the group that performed this event."
                        },
                        {
                            "key": "messageId",
                            "type": "string",
                            "label": "Insert ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": true,
                            "description": "A random id that is unique to an event. Launchpad uses $insert_id to deduplicate events."
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": true,
                            "description": "The timestamp of the event. Launchpad expects epoch timestamp in millisecond or second. Please note, Launchpad only accepts this field as the timestamp. If the field is empty, it will be set to the time Launchpad servers receive it."
                        },
                        {
                            "key": "properties",
                            "type": "dictionary",
                            "label": "Event Properties",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.properties}"
                            },
                            "required": false,
                            "description": "An object of key-value pairs that represent additional data to be sent along with the event."
                        },
                        {
                            "key": "traits",
                            "type": "dictionary",
                            "label": "User Properties",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "An object of key-value pairs that represent additional data tied to the user. This is used for segmentation within the platform."
                        },
                        {
                            "key": "context",
                            "type": "dictionary",
                            "label": "Event context",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.context}"
                            },
                            "required": false,
                            "description": "An object of key-value pairs that provides useful context about the event."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "trackEvent",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Identify Calls",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event in ('$identify', '$set')",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "ip",
                            "type": "string",
                            "label": "IP Address",
                            "secret": false,
                            "default": "{event.properties.$ip}",
                            "required": false,
                            "description": "The IP address of the user. This is only used for geolocation and won't be stored."
                        },
                        {
                            "key": "userId",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": false,
                            "description": "A unique ID for a known user. This will be used as the Distinct ID. This field is required if the Anonymous ID field is empty"
                        },
                        {
                            "key": "anonymousId",
                            "type": "string",
                            "label": "Anonymous ID",
                            "secret": false,
                            "default": "{event.distinct_id}",
                            "required": false,
                            "description": "A unique ID for an anonymous user. This will be used as the Distinct ID if the User ID field is empty. This field is required if the User ID field is empty"
                        },
                        {
                            "key": "traits",
                            "type": "dictionary",
                            "label": "User Properties",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{person.properties}"
                            },
                            "required": true,
                            "description": "Properties that you want to set on the user profile and you would want to segment by later."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "identifyUser",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Group Calls",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event = '$groupidentify'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "groupKey",
                            "type": "string",
                            "label": "Group Key",
                            "secret": false,
                            "required": false,
                            "description": "The group key you specified in Launchpad under the company corresponding to the group. If this is not specified, it will be defaulted to \"$group_id\". This is helpful when you have a group of companies that should be joined together as in when you have a multinational."
                        },
                        {
                            "key": "groupId",
                            "type": "string",
                            "label": "Group ID",
                            "secret": false,
                            "default": "{event.groupId}",
                            "required": true,
                            "description": "The unique identifier of the group. If there is a trait that matches the group key, it will override this value."
                        },
                        {
                            "key": "traits",
                            "type": "dictionary",
                            "label": "Group Properties",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{person.properties}"
                            },
                            "required": false,
                            "description": "The properties to set on the group profile."
                        },
                        {
                            "key": "userId",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": false,
                            "description": "A unique ID for a known user. This will be used as the Distinct ID. This field is required if the Anonymous ID field is empty"
                        },
                        {
                            "key": "anonymousId",
                            "type": "string",
                            "label": "Anonymous ID",
                            "secret": false,
                            "default": "{event.distinct_id}",
                            "required": false,
                            "description": "A unique ID for an anonymous user. This will be used as the Distinct ID if the User ID field is empty. This field is required if the User ID field is empty"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "groupIdentifyUser",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                }
            ],
            "mappings": null,
            "status": "alpha",
            "free": false,
            "type": "destination",
            "id": "segment-actions-launchpad",
            "name": "Launchpad",
            "hog": "return event",
            "inputs_schema": [
                {
                    "key": "apiSecret",
                    "type": "string",
                    "label": "Secret Key",
                    "secret": true,
                    "required": true,
                    "description": "Launchpad project secret. You can find that in the settings in your Launchpad.pm account."
                },
                {
                    "key": "apiRegion",
                    "type": "choice",
                    "label": "Data Residency",
                    "secret": false,
                    "choices": [
                        {
                            "label": "US 🇺🇸",
                            "value": "US 🇺🇸"
                        },
                        {
                            "label": "EU 🇪🇺",
                            "value": "EU 🇪🇺"
                        }
                    ],
                    "default": "US 🇺🇸",
                    "required": false,
                    "description": "Learn about [EU data residency](https://help.launchpad.pm)."
                },
                {
                    "key": "sourceName",
                    "type": "string",
                    "label": "Source Name",
                    "secret": false,
                    "required": false,
                    "description": "This value, if it's not blank, will be sent as segment_source_name to Launchpad for every event/page/screen call."
                },
                {
                    "key": "debug_mode",
                    "type": "boolean",
                    "label": "Debug Mode",
                    "default": false,
                    "description": "Will log configuration and request details"
                }
            ],
            "category": [],
            "code_language": "hog",
            "description": "Send event data to Launchpad",
            "filters": null,
            "masking": null,
            "icon_url": "/static/services/launchpad.com.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-leanplum",
            "name": "Leanplum",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["User Engagement Platforms"],
            "code_language": "hog",
            "description": "Send events to Leanplum.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Leanplum.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-lemnisk",
            "name": "Lemnisk",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Marketing"],
            "code_language": "hog",
            "description": "Send events to Lemnisk.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Lemnisk.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "hidden",
            "free": false,
            "type": "destination",
            "id": "template-linear",
            "name": "Linear",
            "hog": "let description :=f'{event.properties.description}\n\n[View Person in PostHog]({person.url})\n[Message source]({source.url})'\n\nlet mutation := f'mutation IssueCreate { issueCreate(input: { title: \"{inputs.title}\" description: \"{description}\" teamId: \"{inputs.team}\" }) { success issue { id } } }';\n\nlet res := fetch('https://api.linear.app/graphql', {\n  'body': {\n    'query': mutation,\n  },\n  'method': 'POST',\n  'headers': {\n    'Authorization': f'Bearer {inputs.linear_workspace.access_token}',\n    'Content-Type': 'application/json'\n  }\n});\n\nif (res.status != 200 or res.body.success == false) {\n  throw Error(f'Failed to create Linear issue: {res.status}: {res.body}');\n}",
            "inputs_schema": [
                {
                    "key": "linear_workspace",
                    "type": "integration",
                    "label": "Linear workspace",
                    "hidden": false,
                    "secret": false,
                    "required": true,
                    "integration": "linear"
                },
                {
                    "key": "team",
                    "type": "integration_field",
                    "label": "Team",
                    "hidden": false,
                    "secret": false,
                    "required": true,
                    "integration_key": "linear_workspace",
                    "integration_field": "linear_team"
                },
                {
                    "key": "title",
                    "type": "string",
                    "label": "Title",
                    "hidden": true,
                    "secret": false,
                    "default": "[PostHog Issue] {event.properties.name}",
                    "required": true
                },
                {
                    "key": "description",
                    "type": "string",
                    "label": "Description",
                    "hidden": true,
                    "secret": false,
                    "default": "{event.properties.description}",
                    "required": true
                }
            ],
            "category": ["Error tracking"],
            "code_language": "hog",
            "description": "Creates an issue for a Linear team",
            "filters": null,
            "masking": null,
            "icon_url": "/static/services/linear.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "hidden",
            "free": false,
            "type": "destination",
            "id": "template-linkedin-ads",
            "name": "LinkedIn Ads Conversions",
            "hog": "let body := {\n    'conversion': f'urn:lla:llaPartnerConversion:{inputs.conversionRuleId}',\n    'conversionHappenedAt': inputs.conversionDateTime,\n    'user': {\n        'userIds': [],\n        'userInfo': {}\n     },\n    'eventId' : inputs.eventId\n}\n\nif (not empty(inputs.conversionValue) or not empty(inputs.currencyCode)) {\n    body.conversionValue := {}\n}\nif (not empty(inputs.currencyCode)) {\n    body.conversionValue.currencyCode := inputs.currencyCode\n}\nif (not empty(inputs.conversionValue)) {\n    body.conversionValue.amount := inputs.conversionValue\n}\n\nfor (let key, value in inputs.userInfo) {\n    if (not empty(value)) {\n        body.user.userInfo[key] := value\n    }\n}\n\nfor (let key, value in inputs.userIds) {\n    if (not empty(value)) {\n        body.user.userIds := arrayPushBack(body.user.userIds, {'idType': key, 'idValue': value})\n    }\n}\n\nlet res := fetch('https://api.linkedin.com/rest/conversionEvents', {\n    'method': 'POST',\n    'headers': {\n        'Authorization': f'Bearer {inputs.oauth.access_token}',\n        'Content-Type': 'application/json',\n        'LinkedIn-Version': '202409'\n    },\n    'body': body\n})\n\nif (res.status >= 400) {\n    throw Error(f'Error from api.linkedin.com (status {res.status}): {res.body}')\n}",
            "inputs_schema": [
                {
                    "key": "oauth",
                    "type": "integration",
                    "label": "LinkedIn Ads account",
                    "secret": false,
                    "required": true,
                    "integration": "linkedin-ads"
                },
                {
                    "key": "accountId",
                    "type": "integration_field",
                    "label": "Account ID",
                    "secret": false,
                    "required": true,
                    "description": "ID of your LinkedIn Ads Account. This should be 9-digits and in XXXXXXXXX format.",
                    "integration_key": "oauth",
                    "integration_field": "linkedin_ads_account_id"
                },
                {
                    "key": "conversionRuleId",
                    "type": "integration_field",
                    "label": "Conversion rule",
                    "secret": false,
                    "required": true,
                    "description": "The Conversion rule associated with this conversion.",
                    "requires_field": "accountId",
                    "integration_key": "oauth",
                    "integration_field": "linkedin_ads_conversion_rule_id"
                },
                {
                    "key": "conversionDateTime",
                    "type": "string",
                    "label": "Conversion Date Time",
                    "secret": false,
                    "default": "{toUnixTimestampMilli(event.timestamp)}",
                    "required": true,
                    "description": "The timestamp at which the conversion occurred in milliseconds. Must be after the click time."
                },
                {
                    "key": "conversionValue",
                    "type": "string",
                    "label": "Conversion value",
                    "secret": false,
                    "default": "",
                    "required": false,
                    "description": "The value of the conversion for the advertiser in decimal string. (e.g. “100.05”)."
                },
                {
                    "key": "currencyCode",
                    "type": "string",
                    "label": "Currency code",
                    "secret": false,
                    "default": "",
                    "required": false,
                    "description": "Currency associated with the conversion value. This is the ISO 4217 3-character currency code. For example: USD, EUR."
                },
                {
                    "key": "eventId",
                    "type": "string",
                    "label": "Event ID",
                    "secret": false,
                    "default": "{event.uuid}",
                    "required": true,
                    "description": "ID of the event that triggered the conversion."
                },
                {
                    "key": "userIds",
                    "type": "dictionary",
                    "label": "User ids",
                    "secret": false,
                    "default": {
                        "SHA256_EMAIL": "{sha256Hex(person.properties.email)}",
                        "LINKEDIN_FIRST_PARTY_ADS_TRACKING_UUID": "{person.properties.li_fat_id ?? person.properties.$initial_li_fat_id}"
                    },
                    "required": true,
                    "description": "A map that contains user ids. See this page for options: https://learn.microsoft.com/en-us/linkedin/marketing/integrations/ads-reporting/conversions-api?view=li-lms-2024-03&tabs=curl#idtype"
                },
                {
                    "key": "userInfo",
                    "type": "dictionary",
                    "label": "User information",
                    "secret": false,
                    "default": {
                        "title": "{person.properties.title}",
                        "lastName": "{person.properties.last_name}",
                        "firstName": "{person.properties.first_name}",
                        "companyName": "{person.properties.company}",
                        "countryCode": "{person.properties.$geoip_country_code}"
                    },
                    "required": true,
                    "description": "A map that contains user information data. See this page for options: https://learn.microsoft.com/en-us/linkedin/marketing/integrations/ads-reporting/conversions-api?view=li-lms-2024-03&tabs=curl#userinfo"
                }
            ],
            "category": ["Advertisement"],
            "code_language": "hog",
            "description": "Send conversion events to LinkedIn Ads",
            "filters": {
                "events": [],
                "actions": [],
                "filter_test_accounts": true
            },
            "masking": null,
            "icon_url": "/static/services/linkedin.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-livechat",
            "name": "LiveChat",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Customer Service"],
            "code_language": "hog",
            "description": "Send events to LiveChat.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/LiveChat.svg"
        },
        {
            "mapping_templates": [
                {
                    "name": "Track User Actions",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify')",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "event_name",
                            "type": "string",
                            "label": "Event Name",
                            "secret": false,
                            "default": "{event.event}",
                            "required": true,
                            "description": "The name of the event being performed. For example, `User Registration` could be an event_name referring the event that is being sent to LiveLike."
                        },
                        {
                            "key": "event_type",
                            "type": "string",
                            "label": "Event Type",
                            "secret": false,
                            "default": "{event.event == '$pageview' ? 'page' : event.event == '$screen' ? 'screen' : event.event == '$groupidentify' ? 'group' : event.event in ('$identify', '$set') ? 'identify' : event.event == '$alias' ? 'alias' : 'track'}",
                            "required": true,
                            "description": "The type of event (track/screen/page)"
                        },
                        {
                            "key": "segment_user_id",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": false,
                            "description": "A unique identifier for a user."
                        },
                        {
                            "key": "livelike_profile_id",
                            "type": "string",
                            "label": "LiveLike User Profile ID",
                            "secret": false,
                            "default": "{event.properties.livelike_profile_id}",
                            "required": false,
                            "description": "The unique LiveLike user identifier."
                        },
                        {
                            "key": "anonymous_id",
                            "type": "string",
                            "label": "Segment Anonymous ID",
                            "secret": false,
                            "default": "{event.distinct_id}",
                            "required": false,
                            "description": "Segment Anonymous ID."
                        },
                        {
                            "key": "custom_id",
                            "type": "string",
                            "label": "Custom ID",
                            "secret": false,
                            "default": "{event.properties.custom_id}",
                            "required": false,
                            "description": "In case you are not able to store `livelike_profile_id`, LiveLike provides a way to create your own access tokens which helps us to map your user_id to a unique `livelike_profile_id`. Please refer [LiveLike Docs](https://docs.livelike.com/docs/client-generated-access-tokens) for more info."
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": true,
                            "description": "The date and time when the event occurred in ISO 8601 format. Defaults to current time if not provided. For example, `2019-09-30T15:59:44.933696Z`."
                        },
                        {
                            "key": "properties",
                            "type": "dictionary",
                            "label": "Event Properties",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.properties}"
                            },
                            "required": false,
                            "description": "Properties of the event."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "trackEvent",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Page Calls",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event = '$pageview'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "event_name",
                            "type": "string",
                            "label": "Event Name",
                            "secret": false,
                            "default": "{event.event ?? event.properties.title}",
                            "required": true,
                            "description": "The name of the event being performed. For example, `User Registration` could be an event_name referring the event that is being sent to LiveLike."
                        },
                        {
                            "key": "event_type",
                            "type": "string",
                            "label": "Event Type",
                            "secret": false,
                            "default": "{event.event == '$pageview' ? 'page' : event.event == '$screen' ? 'screen' : event.event == '$groupidentify' ? 'group' : event.event in ('$identify', '$set') ? 'identify' : event.event == '$alias' ? 'alias' : 'track'}",
                            "required": true,
                            "description": "The type of event (track/screen/page)"
                        },
                        {
                            "key": "segment_user_id",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": false,
                            "description": "A unique identifier for a user."
                        },
                        {
                            "key": "livelike_profile_id",
                            "type": "string",
                            "label": "LiveLike User Profile ID",
                            "secret": false,
                            "default": "{event.properties.livelike_profile_id}",
                            "required": false,
                            "description": "The unique LiveLike user identifier."
                        },
                        {
                            "key": "anonymous_id",
                            "type": "string",
                            "label": "Segment Anonymous ID",
                            "secret": false,
                            "default": "{event.distinct_id}",
                            "required": false,
                            "description": "Segment Anonymous ID."
                        },
                        {
                            "key": "custom_id",
                            "type": "string",
                            "label": "Custom ID",
                            "secret": false,
                            "default": "{event.properties.custom_id}",
                            "required": false,
                            "description": "In case you are not able to store `livelike_profile_id`, LiveLike provides a way to create your own access tokens which helps us to map your user_id to a unique `livelike_profile_id`. Please refer [LiveLike Docs](https://docs.livelike.com/docs/client-generated-access-tokens) for more info."
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": true,
                            "description": "The date and time when the event occurred in ISO 8601 format. Defaults to current time if not provided. For example, `2019-09-30T15:59:44.933696Z`."
                        },
                        {
                            "key": "properties",
                            "type": "dictionary",
                            "label": "Event Properties",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.properties}"
                            },
                            "required": false,
                            "description": "Properties of the event."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "trackEvent",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Screen Calls",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event = '$screen'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "event_name",
                            "type": "string",
                            "label": "Event Name",
                            "secret": false,
                            "default": "{event.event ?? event.properties.title}",
                            "required": true,
                            "description": "The name of the event being performed. For example, `User Registration` could be an event_name referring the event that is being sent to LiveLike."
                        },
                        {
                            "key": "event_type",
                            "type": "string",
                            "label": "Event Type",
                            "secret": false,
                            "default": "{event.event == '$pageview' ? 'page' : event.event == '$screen' ? 'screen' : event.event == '$groupidentify' ? 'group' : event.event in ('$identify', '$set') ? 'identify' : event.event == '$alias' ? 'alias' : 'track'}",
                            "required": true,
                            "description": "The type of event (track/screen/page)"
                        },
                        {
                            "key": "segment_user_id",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": false,
                            "description": "A unique identifier for a user."
                        },
                        {
                            "key": "livelike_profile_id",
                            "type": "string",
                            "label": "LiveLike User Profile ID",
                            "secret": false,
                            "default": "{event.properties.livelike_profile_id}",
                            "required": false,
                            "description": "The unique LiveLike user identifier."
                        },
                        {
                            "key": "anonymous_id",
                            "type": "string",
                            "label": "Segment Anonymous ID",
                            "secret": false,
                            "default": "{event.distinct_id}",
                            "required": false,
                            "description": "Segment Anonymous ID."
                        },
                        {
                            "key": "custom_id",
                            "type": "string",
                            "label": "Custom ID",
                            "secret": false,
                            "default": "{event.properties.custom_id}",
                            "required": false,
                            "description": "In case you are not able to store `livelike_profile_id`, LiveLike provides a way to create your own access tokens which helps us to map your user_id to a unique `livelike_profile_id`. Please refer [LiveLike Docs](https://docs.livelike.com/docs/client-generated-access-tokens) for more info."
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": true,
                            "description": "The date and time when the event occurred in ISO 8601 format. Defaults to current time if not provided. For example, `2019-09-30T15:59:44.933696Z`."
                        },
                        {
                            "key": "properties",
                            "type": "dictionary",
                            "label": "Event Properties",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.properties}"
                            },
                            "required": false,
                            "description": "Properties of the event."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "trackEvent",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                }
            ],
            "mappings": null,
            "status": "alpha",
            "free": false,
            "type": "destination",
            "id": "segment-actions-livelike-cloud",
            "name": "LiveLike",
            "hog": "return event",
            "inputs_schema": [
                {
                    "key": "clientId",
                    "type": "string",
                    "label": "Client ID",
                    "secret": false,
                    "required": true,
                    "description": "Your LiveLike Application Client ID."
                },
                {
                    "key": "producerToken",
                    "type": "string",
                    "label": "Producer Token",
                    "secret": true,
                    "required": true,
                    "description": "Your LiveLike Producer token."
                },
                {
                    "key": "debug_mode",
                    "type": "boolean",
                    "label": "Debug Mode",
                    "default": false,
                    "description": "Will log configuration and request details"
                }
            ],
            "category": [],
            "code_language": "hog",
            "description": "Send event data to LiveLike",
            "filters": null,
            "masking": null,
            "icon_url": "/static/services/livelike.com.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "stable",
            "free": false,
            "type": "destination",
            "id": "template-loops",
            "name": "Loops",
            "hog": "if (empty(inputs.email)) {\n    print('No email set. Skipping...')\n    return\n}\n\nlet payload := {\n    'email': inputs.email,\n    'userId': person.id,\n}\n\nif (inputs.include_all_properties) {\n    for (let key, value in person.properties) {\n        if (not empty(value) and not key like '$%') {\n            payload[key] := value\n        }\n    }\n}\n\nfor (let key, value in inputs.properties) {\n    if (not empty(value)) {\n        payload[key] := value\n    }\n}\n\nlet res := fetch('https://app.loops.so/api/v1/contacts/update', {\n    'method': 'POST',\n    'headers': {\n        'Content-Type': 'application/json',\n        'Authorization': f'Bearer {inputs.apiKey}',\n    },\n    'body': payload\n})\n\nif (res.status >= 400) {\n    throw Error(f'Error from app.loops.so (status {res.status}): {res.body}')\n}",
            "inputs_schema": [
                {
                    "key": "apiKey",
                    "type": "string",
                    "label": "Loops API Key",
                    "secret": true,
                    "default": "",
                    "required": true,
                    "description": "Loops API Key"
                },
                {
                    "key": "email",
                    "type": "string",
                    "label": "Email of the user",
                    "secret": false,
                    "default": "{person.properties.email}",
                    "required": true,
                    "description": "Where to find the email of the user."
                },
                {
                    "key": "include_all_properties",
                    "type": "boolean",
                    "label": "Include all properties as attributes",
                    "secret": false,
                    "default": false,
                    "required": true,
                    "description": "If set, all person properties will be included. Individual attributes can be overridden below."
                },
                {
                    "key": "properties",
                    "type": "dictionary",
                    "label": "Property mapping",
                    "secret": false,
                    "default": {
                        "lastName": "{person.properties.lastname}",
                        "firstName": "{person.properties.firstname}"
                    },
                    "required": false,
                    "description": "Map of Loops.so properties and their values. You can use the filters section to filter out unwanted events."
                }
            ],
            "category": ["Email Marketing"],
            "code_language": "hog",
            "description": "Update contacts in Loops.so",
            "filters": {
                "events": [
                    {
                        "id": "$identify",
                        "name": "$identify",
                        "type": "events",
                        "order": 0
                    },
                    {
                        "id": "$set",
                        "name": "$set",
                        "type": "events",
                        "order": 1
                    }
                ],
                "actions": [],
                "filter_test_accounts": true
            },
            "masking": null,
            "icon_url": "/static/services/loops.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "stable",
            "free": false,
            "type": "destination",
            "id": "template-loops-event",
            "name": "Loops",
            "hog": "if (empty(inputs.email)) {\n    print('No email set. Skipping...')\n    return\n}\n\nlet payload := {\n    'email': inputs.email,\n    'userId': person.id,\n    'eventName': event.event,\n    'eventProperties': {}\n}\n\nif (inputs.include_all_properties) {\n    for (let key, value in event.properties) {\n        if (not empty(value) and not key like '$%') {\n            payload.eventProperties[key] := value\n        }\n    }\n}\n\nfor (let key, value in inputs.properties) {\n    if (not empty(value)) {\n        payload.eventProperties[key] := value\n    }\n}\n\nlet res := fetch('https://app.loops.so/api/v1/events/send', {\n    'method': 'POST',\n    'headers': {\n        'Content-Type': 'application/json',\n        'Authorization': f'Bearer {inputs.apiKey}',\n    },\n    'body': payload\n})\n\nif (res.status >= 400) {\n    throw Error(f'Error from app.loops.so (status {res.status}): {res.body}')\n}",
            "inputs_schema": [
                {
                    "key": "apiKey",
                    "type": "string",
                    "label": "Loops API Key",
                    "secret": true,
                    "default": "",
                    "required": true,
                    "description": "Loops API Key"
                },
                {
                    "key": "email",
                    "type": "string",
                    "label": "Email of the user",
                    "secret": false,
                    "default": "{person.properties.email}",
                    "required": true,
                    "description": "Where to find the email of the user."
                },
                {
                    "key": "include_all_properties",
                    "type": "boolean",
                    "label": "Include all properties as attributes",
                    "secret": false,
                    "default": false,
                    "required": true,
                    "description": "If set, all event properties will be included. Individual attributes can be overridden below."
                },
                {
                    "key": "properties",
                    "type": "dictionary",
                    "label": "Property mapping",
                    "secret": false,
                    "default": {
                        "pathname": "{event.properties.$pathname}"
                    },
                    "required": false,
                    "description": "Map of Loops.so properties and their values. You can use the filters section to filter out unwanted events."
                }
            ],
            "category": ["Email Marketing"],
            "code_language": "hog",
            "description": "Send events to Loops.so",
            "filters": {
                "events": [
                    {
                        "id": "$pageview",
                        "name": "$pageview",
                        "type": "events",
                        "order": 0
                    }
                ],
                "actions": [],
                "filter_test_accounts": true
            },
            "masking": null,
            "icon_url": "/static/services/loops.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-lotame",
            "name": "Lotame",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Attribution Platforms"],
            "code_language": "hog",
            "description": "Send events to Lotame.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Lotame.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-lucky-orange",
            "name": "Lucky Orange",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Heatmap Recording"],
            "code_language": "hog",
            "description": "Send events to Lucky Orange.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Lucky_Orange.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-lytics",
            "name": "Lytics",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Analytics"],
            "code_language": "hog",
            "description": "Send events to Lytics.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Lytics.svg"
        },
        {
            "mapping_templates": [
                {
                    "name": "Submit usage data to m3ter",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify')",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "uid",
                            "type": "string",
                            "label": "m3ter UUID",
                            "secret": false,
                            "default": "{event.properties.uid}",
                            "required": true,
                            "description": "Unique ID for this measurement"
                        },
                        {
                            "key": "meter",
                            "type": "string",
                            "label": "Meter",
                            "secret": false,
                            "default": "{event.properties.meter}",
                            "required": true,
                            "description": "Short code identifying the Meter the measurement is for"
                        },
                        {
                            "key": "account",
                            "type": "string",
                            "label": "Account",
                            "secret": false,
                            "default": "{event.properties.account}",
                            "required": true,
                            "description": "Code of the Account the measurement is for"
                        },
                        {
                            "key": "ts",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": true,
                            "description": "Timestamp for the measurement"
                        },
                        {
                            "key": "ets",
                            "type": "string",
                            "label": "End timestamp",
                            "secret": false,
                            "required": false,
                            "description": "End timestamp for the measurement. Can be used in the case a usage event needs to have an explicit start and end rather than being instantaneous"
                        },
                        {
                            "key": "who",
                            "type": "dictionary",
                            "label": "Who",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "Non-numeric who values for data measurements, such as: who logged-in to the service; who was contacted by the service"
                        },
                        {
                            "key": "where",
                            "type": "dictionary",
                            "label": "Where",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "Non-numeric where values for data measurements such as: where someone logged into your service from"
                        },
                        {
                            "key": "what",
                            "type": "dictionary",
                            "label": "What",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "Non-numeric what values for data measurements such as: what level of user logged into the service"
                        },
                        {
                            "key": "other",
                            "type": "dictionary",
                            "label": "Other",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "Non-numeric other values for measurements such as textual data which is not applicable to Who, What, or Where events"
                        },
                        {
                            "key": "metadata",
                            "type": "dictionary",
                            "label": "Metadata",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "Non-numeric metadata values for measurements using high-cardinality fields that you don't intend to segment when you aggregate the data"
                        },
                        {
                            "key": "measure",
                            "type": "dictionary",
                            "label": "Measure",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "Numeric measure values for general quantitative measurements."
                        },
                        {
                            "key": "cost",
                            "type": "dictionary",
                            "label": "Cost",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "Numeric cost values for measurements associated with costs"
                        },
                        {
                            "key": "income",
                            "type": "dictionary",
                            "label": "Income",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "Numeric income values for measurements associated with income"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "submitMeasurements",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                }
            ],
            "mappings": null,
            "status": "alpha",
            "free": false,
            "type": "destination",
            "id": "segment-actions-m3ter",
            "name": "m3ter",
            "hog": "return event",
            "inputs_schema": [
                {
                    "key": "access_key_id",
                    "type": "string",
                    "label": "m3ter Access Key Id",
                    "secret": false,
                    "required": true,
                    "description": "Your service user Access Key Id. You can generate the service user and its Access Key Id in your m3ter console under \"Settings\" -> \"Access\" -> \"Service Users\" -> \"Create Service User\". Step by step guide can be found in [m3ter Docs](https://www.m3ter.com/docs/guides/authenticating-with-the-platform/service-authentication#generating-an-api-key-and-secret-for-a-service-user)"
                },
                {
                    "key": "api_secret",
                    "type": "string",
                    "label": "m3ter Api Secret",
                    "secret": true,
                    "required": true,
                    "description": "Your service user Api Secret. You can generate the service user and its Api Secret in your m3ter console under \"Settings\" -> \"Access\" -> \"Service Users\" -> \"Create Service User\". Step by step guide can be found in [m3ter Docs](https://www.m3ter.com/docs/guides/authenticating-with-the-platform/service-authentication#generating-an-api-key-and-secret-for-a-service-user)"
                },
                {
                    "key": "org_id",
                    "type": "string",
                    "label": "m3ter Organization Id",
                    "secret": false,
                    "required": true,
                    "description": "ID of your organization where your data will be submitted to"
                },
                {
                    "key": "debug_mode",
                    "type": "boolean",
                    "label": "Debug Mode",
                    "default": false,
                    "description": "Will log configuration and request details"
                }
            ],
            "category": [],
            "code_language": "hog",
            "description": "Send event data to m3ter",
            "filters": null,
            "masking": null,
            "icon_url": "/static/services/m3ter.com.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-madkudu",
            "name": "Madkudu",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Marketing"],
            "code_language": "hog",
            "description": "Send events to Madkudu.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Madkudu.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "beta",
            "free": false,
            "type": "destination",
            "id": "template-mailchimp",
            "name": "Mailchimp",
            "hog": "if (empty(inputs.email)) {\n    print('No email set. Skipping...')\n    return\n}\n\nlet email := lower(inputs.email)\nlet subscriberHash := md5Hex(email)\n\nlet properties := {}\n\n\nfor (let key, value in inputs.properties) {\n    if (not empty(value)) {\n        properties[key] := value\n    }\n}\n\nif (inputs.include_all_properties) {\n    for (let key, value in event.properties) {\n        if (not empty(value) and not key like '$%') {\n            properties[key] := value\n        }\n    }\n}\n\nlet userStatus := fetch(f'https://{inputs.dataCenterId}.api.mailchimp.com/3.0/lists/{inputs.audienceId}/members/{subscriberHash}', {\n    'method': 'GET',\n    'headers': {\n        'Authorization': f'Bearer {inputs.apiKey}',\n        'Content-Type': 'application/json'\n    }\n})\n\nif (userStatus.status == 404 or userStatus.status == 200) {\n    let res := fetch(f'https://{inputs.dataCenterId}.api.mailchimp.com/3.0/lists/{inputs.audienceId}/members/{subscriberHash}', {\n        'method': 'PUT',\n        'headers': {\n            'Authorization': f'Bearer {inputs.apiKey}',\n            'Content-Type': 'application/json'\n        },\n        'body': {\n            'email_address': inputs.email,\n            'status_if_new': inputs.doubleOptIn ? 'pending' : 'subscribed',\n            'merge_fields': properties\n        }\n    })\n    if (res.status >= 400) {\n        throw Error(f'Error from api.mailchimp.com (status {userStatus.status}): {userStatus.body}')\n    }\n} else if (userStatus.status >= 400) {\n    throw Error(f'Error from api.mailchimp.com (status {userStatus.status}): {userStatus.body}')\n}",
            "inputs_schema": [
                {
                    "key": "apiKey",
                    "type": "string",
                    "label": "Mailchimp API Key",
                    "secret": true,
                    "required": true,
                    "description": "See the docs here: https://mailchimp.com/help/about-api-keys/"
                },
                {
                    "key": "audienceId",
                    "type": "string",
                    "label": "Mailchimp audience ID",
                    "secret": false,
                    "required": true,
                    "description": "See the docs here: https://mailchimp.com/help/find-audience-id/"
                },
                {
                    "key": "dataCenterId",
                    "type": "string",
                    "label": "Mailchimp data center ID",
                    "secret": false,
                    "required": true,
                    "description": "You can find your Datacenter ID in the Mailchimp url in your browser when you're logged in. It's the 'us1' in 'https://us1.admin.mailchimp.com/lists/'"
                },
                {
                    "key": "email",
                    "type": "string",
                    "label": "Email of the user",
                    "secret": false,
                    "default": "{person.properties.email}",
                    "required": true,
                    "description": "Where to find the email for the contact to be created. You can use the filters section to filter out unwanted emails or internal users."
                },
                {
                    "key": "doubleOptIn",
                    "type": "boolean",
                    "label": "Enable double opt-in",
                    "secret": false,
                    "default": false,
                    "required": true,
                    "description": "If enabled, Mailchimp sends a confirmation email to that user, and that email is tagged with a pending subscriber status. The subscriber status automatically changes to subscribed once the user confirms the email."
                },
                {
                    "key": "include_all_properties",
                    "type": "boolean",
                    "label": "Include all event properties",
                    "secret": false,
                    "default": false,
                    "required": true,
                    "description": "If set, all person properties will be included. Individual properties can be overridden below."
                },
                {
                    "key": "properties",
                    "type": "dictionary",
                    "label": "Merge field",
                    "secret": false,
                    "default": {
                        "FNAME": "{person.properties.firstname}",
                        "LNAME": "{person.properties.lastname}",
                        "COMPANY": "{person.properties.company}"
                    },
                    "required": false,
                    "description": "Map of Mailchimp merge fields and their values. You can use the filters section to filter out unwanted events. Check out this page for more details: https://mailchimp.com/developer/marketing/docs/merge-fields/#add-merge-data-to-contacts"
                }
            ],
            "category": ["Email Marketing"],
            "code_language": "hog",
            "description": "Updates a contact in Mailchimp and subscribes new ones.",
            "filters": {
                "events": [
                    {
                        "id": "$identify",
                        "name": "$identify",
                        "type": "events",
                        "order": 0
                    },
                    {
                        "id": "$set",
                        "name": "$set",
                        "type": "events",
                        "order": 1
                    }
                ],
                "actions": [],
                "filter_test_accounts": true
            },
            "masking": null,
            "icon_url": "/static/services/mailchimp.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "beta",
            "free": false,
            "type": "destination",
            "id": "template-mailgun-send-email",
            "name": "Mailgun",
            "hog": "if (empty(inputs.template.to)) {\n    return false\n}\n\nfun multiPartFormEncode(data) {\n    let boundary := f'---011000010111000001101001'\n    let bodyBoundary := f'--{boundary}\\r\\n'\n    let body := bodyBoundary\n\n    for (let key, value in data) {\n        if (not empty(value)) {\n            body := f'{body}Content-Disposition: form-data; name=\"{key}\"\\r\\n\\r\\n{value}\\r\\n{bodyBoundary}'\n        }\n    }\n\n    return {\n        'body': body,\n        'contentType': f'multipart/form-data; boundary={boundary}'\n    }\n}\n\nlet form := multiPartFormEncode({\n    'from': inputs.template.from,\n    'to': inputs.template.to,\n    'subject': inputs.template.subject,\n    'text': inputs.template.text,\n    'html': inputs.template.html\n})\n\nlet res := fetch(f'https://{inputs.host}/v3/{inputs.domain_name}/messages', {\n    'method': 'POST',\n    'headers': {\n        'Authorization': f'Basic {base64Encode(f'api:{inputs.api_key}')}',\n        'Content-Type': form.contentType\n    },\n    'body': form.body\n})\n\nif (res.status >= 400) {\n    throw Error(f'Error from mailgun api (status {res.status}): {res.body}')\n}",
            "inputs_schema": [
                {
                    "key": "domain_name",
                    "type": "string",
                    "label": "Mailgun Domain Name",
                    "secret": false,
                    "required": true,
                    "description": "The domain name of the Mailgun account"
                },
                {
                    "key": "api_key",
                    "type": "string",
                    "label": "Mailgun API Key",
                    "secret": true,
                    "required": true
                },
                {
                    "key": "host",
                    "type": "choice",
                    "label": "Region",
                    "secret": false,
                    "choices": [
                        {
                            "label": "US (api.mailgun.net)",
                            "value": "api.mailgun.net"
                        },
                        {
                            "label": "EU (api.eu.mailgun.net)",
                            "value": "api.eu.mailgun.net"
                        }
                    ],
                    "default": "api.eu.mailgun.net",
                    "required": true
                },
                {
                    "key": "template",
                    "type": "email",
                    "label": "Email template",
                    "secret": false,
                    "default": {
                        "to": "{person.properties.email}"
                    },
                    "required": true
                }
            ],
            "category": ["Email Marketing"],
            "code_language": "hog",
            "description": "Send emails using the Mailgun HTTP API",
            "filters": {
                "events": [
                    {
                        "id": "",
                        "name": "<email trigger event>",
                        "type": "events",
                        "order": 0
                    }
                ],
                "actions": [],
                "filter_test_accounts": true
            },
            "masking": null,
            "icon_url": "/static/services/mailgun.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "beta",
            "free": false,
            "type": "destination",
            "id": "template-mailjet-create-contact",
            "name": "Mailjet",
            "hog": "if (empty(inputs.email)) {\n    return false\n}\n\nfetch(f'https://api.mailjet.com/v3/REST/contact/', {\n    'method': 'POST',\n    'headers': {\n        'Authorization': f'Basic {base64Encode(f'{inputs.api_key}:{inputs.secret_key}')}',\n        'Content-Type': 'application/json'\n    },\n    'body': {\n        'Email': inputs.email,\n        'Name': inputs.name,\n        'IsExcludedFromCampaigns': inputs.is_excluded_from_campaigns\n    }\n})",
            "inputs_schema": [
                {
                    "key": "api_key",
                    "type": "string",
                    "label": "Mailjet API Key",
                    "secret": true,
                    "required": true
                },
                {
                    "key": "secret_key",
                    "type": "string",
                    "label": "Mailjet Secret Key",
                    "secret": true,
                    "required": true
                },
                {
                    "key": "email",
                    "type": "string",
                    "label": "Email of the user",
                    "secret": false,
                    "default": "{person.properties.email}",
                    "required": true,
                    "description": "Where to find the email for the user to be checked with Mailjet"
                },
                {
                    "key": "name",
                    "type": "string",
                    "label": "Name",
                    "secret": false,
                    "default": "{person.properties.first_name} {person.properties.last_name}",
                    "required": false,
                    "description": "Name of the contact"
                },
                {
                    "key": "is_excluded_from_campaigns",
                    "type": "boolean",
                    "label": "Is excluded from campaigns",
                    "secret": false,
                    "default": false,
                    "required": false,
                    "description": "Whether the contact should be excluded from campaigns"
                }
            ],
            "category": ["Email Marketing"],
            "code_language": "hog",
            "description": "Add contacts to Mailjet",
            "filters": {
                "events": [
                    {
                        "id": "$identify",
                        "name": "$identify",
                        "type": "events",
                        "order": 0
                    }
                ],
                "actions": [],
                "filter_test_accounts": true
            },
            "masking": null,
            "icon_url": "/static/services/mailjet.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "beta",
            "free": false,
            "type": "destination",
            "id": "template-mailjet-update-contact-list",
            "name": "Mailjet",
            "hog": "if (empty(inputs.email)) {\n    return false\n}\n\nfetch(f'https://api.mailjet.com/v3/REST/contact/{inputs.email}/managecontactlists', {\n    'method': 'POST',\n    'headers': {\n        'Authorization': f'Basic {base64Encode(f'{inputs.api_key}:{inputs.secret_key}')}',\n        'Content-Type': 'application/json'\n    },\n    'body': {\n        'ContactsLists':[\n            {\n                'Action': inputs.action,\n                'ListID': inputs.contact_list_id\n            },\n        ]\n    }\n})",
            "inputs_schema": [
                {
                    "key": "api_key",
                    "type": "string",
                    "label": "Mailjet API Key",
                    "secret": true,
                    "required": true
                },
                {
                    "key": "secret_key",
                    "type": "string",
                    "label": "Mailjet Secret Key",
                    "secret": true,
                    "required": true
                },
                {
                    "key": "email",
                    "type": "string",
                    "label": "Email of the user",
                    "secret": false,
                    "default": "{person.properties.email}",
                    "required": true,
                    "description": "Where to find the email for the user to be checked with Mailjet"
                },
                {
                    "key": "contact_list_id",
                    "type": "string",
                    "label": "Contact list ID",
                    "secret": false,
                    "required": true,
                    "description": "ID of the contact list"
                },
                {
                    "key": "action",
                    "type": "choice",
                    "label": "Action",
                    "secret": false,
                    "choices": [
                        {
                            "label": "Add",
                            "value": "addnoforce"
                        },
                        {
                            "label": "Add (force)",
                            "value": "addforce"
                        },
                        {
                            "label": "Remove",
                            "value": "remove"
                        },
                        {
                            "label": "Unsubscribe",
                            "value": "unsub"
                        }
                    ],
                    "default": "addnoforce",
                    "required": true
                }
            ],
            "category": ["Email Marketing"],
            "code_language": "hog",
            "description": "Update a Mailjet contact list",
            "filters": {
                "events": [
                    {
                        "id": "$identify",
                        "name": "$identify",
                        "type": "events",
                        "order": 0
                    }
                ],
                "actions": [],
                "filter_test_accounts": true
            },
            "masking": null,
            "icon_url": "/static/services/mailjet.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-mailmodo",
            "name": "Mailmodo",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Marketing"],
            "code_language": "hog",
            "description": "Send events to Mailmodo.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Mailmodo.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "stable",
            "free": false,
            "type": "destination",
            "id": "template-make",
            "name": "Make",
            "hog": "if (not match(inputs.webhookUrl, '^https://hook.[^/]+.make.com/?.*')) {\n    throw Error('Invalid URL. The URL should match the format: https://hook.<region>.make.com/<hookUrl>')\n}\n\nlet res := fetch(inputs.webhookUrl, {\n    'body': inputs.body,\n    'method': 'POST',\n    'headers': {\n        'Content-Type': 'application/json'\n    }\n});\n\nif (res.status >= 400) {\n    throw Error(f'Error from make.com (status {res.status}): {res.body}')\n}",
            "inputs_schema": [
                {
                    "key": "webhookUrl",
                    "type": "string",
                    "label": "Webhook URL",
                    "secret": false,
                    "required": true,
                    "description": "See this page on how to generate a Webhook URL: https://www.make.com/en/help/tools/webhooks"
                },
                {
                    "key": "body",
                    "type": "json",
                    "label": "JSON Body",
                    "secret": false,
                    "default": {
                        "data": {
                            "event": "{event.event}",
                            "person": {
                                "uuid": "{person.id}",
                                "properties": "{person.properties}"
                            },
                            "teamId": "{project.id}",
                            "eventUuid": "{event.uuid}",
                            "timestamp": "{event.timestamp}",
                            "distinctId": "{event.distinct_id}",
                            "properties": "{event.properties}",
                            "elementsChain": "{event.elementsChain}"
                        }
                    },
                    "required": true
                }
            ],
            "category": ["Custom"],
            "code_language": "hog",
            "description": "Triggers a webhook based scenario",
            "filters": null,
            "masking": null,
            "icon_url": "/static/services/make.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-marketo",
            "name": "Marketo",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Marketing"],
            "code_language": "hog",
            "description": "Send events to Marketo.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Marketo.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-marketo-lead-import",
            "name": "Marketo Lead Import",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Marketing"],
            "code_language": "hog",
            "description": "Send events to Marketo Lead Import.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Marketo_Lead_Import.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-materialize",
            "name": "Materialize",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Data Warehouse"],
            "code_language": "hog",
            "description": "Send events to Materialize.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Materialize.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-mautic",
            "name": "Mautic",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Marketing"],
            "code_language": "hog",
            "description": "Send events to Mautic.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Mautic.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "alpha",
            "free": false,
            "type": "destination",
            "id": "template-meta-ads",
            "name": "Meta Ads Conversions",
            "hog": "let body := {\n    'data': [\n        {\n            'event_name': inputs.eventName,\n            'event_id': inputs.eventId,\n            'event_time': inputs.eventTime,\n            'action_source': inputs.actionSource,\n            'user_data': {},\n            'custom_data': {}\n        }\n    ],\n    'access_token': inputs.accessToken\n}\n\nif (not empty(inputs.testEventCode)) {\n    body.test_event_code := inputs.testEventCode\n}\n\nif (not empty(inputs.eventSourceUrl)) {\n    body.data.1.event_source_url := inputs.eventSourceUrl\n}\n\nfor (let key, value in inputs.userData) {\n    if (not empty(value)) {\n        body.data.1.user_data[key] := value\n    }\n}\n\nfor (let key, value in inputs.customData) {\n    if (not empty(value)) {\n        body.data.1.custom_data[key] := value\n    }\n}\n\nlet res := fetch(f'https://graph.facebook.com/v21.0/{inputs.pixelId}/events', {\n    'method': 'POST',\n    'headers': {\n        'Content-Type': 'application/json',\n    },\n    'body': body\n})\nif (res.status >= 400) {\n    throw Error(f'Error from graph.facebook.com (status {res.status}): {res.body}')\n}",
            "inputs_schema": [
                {
                    "key": "accessToken",
                    "type": "string",
                    "label": "Access token",
                    "secret": true,
                    "required": true,
                    "description": "Check out this page on how to obtain such a token: https://developers.facebook.com/docs/marketing-api/conversions-api/get-started"
                },
                {
                    "key": "pixelId",
                    "type": "string",
                    "label": "Pixel ID",
                    "secret": false,
                    "required": true,
                    "description": "You must obtain a Pixel ID to use the Conversions API. If you’ve already set up a Pixel for your website, we recommend that you use the same Pixel ID for your browser and server events."
                },
                {
                    "key": "eventName",
                    "type": "string",
                    "label": "Event name",
                    "secret": false,
                    "default": "{event.event}",
                    "required": true,
                    "description": "A standard event or custom event name."
                },
                {
                    "key": "eventId",
                    "type": "string",
                    "label": "Event ID",
                    "secret": false,
                    "default": "{event.uuid}",
                    "required": true,
                    "description": "The ID of the event."
                },
                {
                    "key": "eventSourceUrl",
                    "type": "string",
                    "label": "Event source URL",
                    "secret": false,
                    "default": "{event.properties.$current_url}",
                    "required": false,
                    "description": "The URL of the page where the event occurred."
                },
                {
                    "key": "eventTime",
                    "type": "string",
                    "label": "Event time",
                    "secret": false,
                    "default": "{toInt(toUnixTimestamp(event.timestamp))}",
                    "required": true,
                    "description": "A Unix timestamp in seconds indicating when the actual event occurred. You must send this date in GMT time zone."
                },
                {
                    "key": "actionSource",
                    "type": "choice",
                    "label": "Action source",
                    "secret": false,
                    "choices": [
                        {
                            "label": "Email - Conversion happened over email.",
                            "value": "email"
                        },
                        {
                            "label": "Website - Conversion was made on your website.",
                            "value": "website"
                        },
                        {
                            "label": "App - Conversion was made on your mobile app.",
                            "value": "app"
                        },
                        {
                            "label": "Phone call - Conversion was made over the phone.",
                            "value": "phone_call"
                        },
                        {
                            "label": "Chat - Conversion was made via a messaging app, SMS, or online messaging feature.",
                            "value": "chat"
                        },
                        {
                            "label": "Physical store - Conversion was made in person at your physical store.",
                            "value": "physical_store"
                        },
                        {
                            "label": "System generated - Conversion happened automatically, for example, a subscription renewal that’s set to auto-pay each month.",
                            "value": "system_generated"
                        },
                        {
                            "label": "Business messaging - Conversion was made from ads that click to Messenger, Instagram or WhatsApp.",
                            "value": "business_messaging"
                        },
                        {
                            "label": "Other - Conversion happened in a way that is not listed.",
                            "value": "other"
                        }
                    ],
                    "default": "website",
                    "required": true,
                    "description": "This field allows you to specify where your conversions occurred. Knowing where your events took place helps ensure your ads go to the right people."
                },
                {
                    "key": "userData",
                    "type": "dictionary",
                    "label": "User data",
                    "secret": false,
                    "default": {
                        "em": "{sha256Hex(lower(person.properties.email))}",
                        "fn": "{sha256Hex(lower(person.properties.first_name))}",
                        "ln": "{sha256Hex(lower(person.properties.last_name))}",
                        "fbc": "{not empty(person.properties.fbclid ?? person.properties.$initial_fbclid) ? f'fb.1.{toUnixTimestampMilli(now())}.{person.properties.fbclid ?? person.properties.$initial_fbclid}' : ''}",
                        "client_user_agent": "{event.properties.$raw_user_agent}"
                    },
                    "required": true,
                    "description": "A map that contains customer information data. See this page for options: https://developers.facebook.com/docs/marketing-api/conversions-api/parameters/customer-information-parameters"
                },
                {
                    "key": "customData",
                    "type": "dictionary",
                    "label": "Custom data",
                    "secret": false,
                    "default": {
                        "price": "{event.properties.price}",
                        "currency": "USD"
                    },
                    "required": true,
                    "description": "A map that contains custom data. See this page for options: https://developers.facebook.com/docs/marketing-api/conversions-api/parameters/custom-data"
                },
                {
                    "key": "testEventCode",
                    "type": "string",
                    "label": "Test Event Code",
                    "secret": false,
                    "default": "",
                    "required": false,
                    "description": "Use this field to specify that events should be test events rather than actual traffic. You'll want to remove your Test Event Code when sending real traffic through this integration."
                }
            ],
            "category": ["Advertisement"],
            "code_language": "hog",
            "description": "Send conversion events to Meta Ads",
            "filters": {
                "events": [],
                "actions": [],
                "filter_test_accounts": true
            },
            "masking": null,
            "icon_url": "/static/services/meta-ads.png"
        },
        {
            "mapping_templates": [
                {
                    "name": "Send track events to Metronome",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify')",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "transaction_id",
                            "type": "string",
                            "label": "transaction_id",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": true,
                            "description": "The Metronome transaction ID uniquely identifies an event to ensure Metronome only processes each event once."
                        },
                        {
                            "key": "customer_id",
                            "type": "string",
                            "label": "customer_id",
                            "secret": false,
                            "default": "",
                            "required": true,
                            "description": "The Metronome customer ID or ingest alias this event should be associated with."
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": true,
                            "description": "The timestamp at which this event occurred."
                        },
                        {
                            "key": "event_type",
                            "type": "string",
                            "label": "event_type",
                            "secret": false,
                            "default": "{event.event}",
                            "required": true,
                            "description": "The Metronome `event_type`."
                        },
                        {
                            "key": "properties",
                            "type": "dictionary",
                            "label": "properties",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.properties}"
                            },
                            "required": true,
                            "description": "The Metronome properties object."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "sendEvent",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                }
            ],
            "mappings": null,
            "status": "alpha",
            "free": false,
            "type": "destination",
            "id": "segment-metronome-actions",
            "name": "Metronome",
            "hog": "return event",
            "inputs_schema": [
                {
                    "key": "apiToken",
                    "type": "string",
                    "label": "API Token",
                    "secret": false,
                    "required": true,
                    "description": "Your Metronome API Token"
                },
                {
                    "key": "debug_mode",
                    "type": "boolean",
                    "label": "Debug Mode",
                    "default": false,
                    "description": "Will log configuration and request details"
                }
            ],
            "category": [],
            "code_language": "hog",
            "description": "Send event data to Metronome",
            "filters": null,
            "masking": null,
            "icon_url": "/static/services/metronome.com.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-microsoft-azure-sql-data-warehouse",
            "name": "Microsoft Azure SQL Data Warehouse",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Data Warehouse"],
            "code_language": "hog",
            "description": "Send events to Microsoft Azure SQL Data Warehouse.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Microsoft_Azure_SQL_Data_Warehouse.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-microsoft-azure-synapse-analytics",
            "name": "Microsoft Azure Synapse Analytics",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Data Warehouse"],
            "code_language": "hog",
            "description": "Send events to Microsoft Azure Synapse Analytics.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Microsoft_Azure_Synapse_Analytics.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "stable",
            "free": true,
            "type": "destination",
            "id": "template-microsoft-teams",
            "name": "Microsoft Teams",
            "hog": "if (not match(inputs.webhookUrl, '^https://[^/]+.logic.azure.com:443/workflows/[^/]+/triggers/manual/paths/invoke?.*') and\n    not match(inputs.webhookUrl, '^https://[^/]+.webhook.office.com/webhookb2/[^/]+/IncomingWebhook/[^/]+/[^/]+') and\n    not match(inputs.webhookUrl, '^https://[^/]+.powerautomate.com/[^/]+') and\n    not match(inputs.webhookUrl, '^https://[^/]+.flow.microsoft.com/[^/]+')) {\n    throw Error('Invalid URL. The URL should match either Azure Logic Apps format (https://<region>.logic.azure.com:443/workflows/...), Power Platform format (https://<tenant>.webhook.office.com/webhookb2/...), or Power Automate format (https://<region>.powerautomate.com/... or https://<region>.flow.microsoft.com/...)')\n}\n\nlet res := fetch(inputs.webhookUrl, {\n    'body': {\n        'type': 'message',\n        'attachments': [\n            {\n                'contentType': 'application/vnd.microsoft.card.adaptive',\n                'contentUrl': null,\n                'content': {\n                    '$schema': 'http://adaptivecards.io/schemas/adaptive-card.json',\n                    'type': 'AdaptiveCard',\n                    'version': '1.2',\n                    'body': [\n                        {\n                            'type': 'TextBlock',\n                            'text': inputs.text,\n                            'wrap': true\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    'method': 'POST',\n    'headers': {\n        'Content-Type': 'application/json'\n    }\n});\n\nif (res.status >= 400) {\n    throw Error(f'Failed to post message to Microsoft Teams: {res.status}: {res.body}');\n}",
            "inputs_schema": [
                {
                    "key": "webhookUrl",
                    "type": "string",
                    "label": "Webhook URL",
                    "secret": false,
                    "required": true,
                    "description": "You can use any of these options: Azure Logic Apps (logic.azure.com), Power Platform webhooks (create through Microsoft Teams by adding an incoming webhook connector to your channel), or Power Automate (powerautomate.com or flow.microsoft.com)"
                },
                {
                    "key": "text",
                    "type": "string",
                    "label": "Text",
                    "secret": false,
                    "default": "**{person.name}** triggered event: '{event.event}'",
                    "required": true,
                    "description": "(see https://learn.microsoft.com/en-us/microsoftteams/platform/webhooks-and-connectors/how-to/add-incoming-webhook?tabs=newteams%2Cdotnet#example)"
                }
            ],
            "category": ["Customer Success"],
            "code_language": "hog",
            "description": "Sends a message to a Microsoft Teams channel",
            "filters": null,
            "masking": null,
            "icon_url": "/static/services/microsoft-teams.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-minio",
            "name": "MinIO",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Databases & Object Storage"],
            "code_language": "hog",
            "description": "Send events to MinIO.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/MinIO.svg"
        },
        {
            "mapping_templates": [
                {
                    "name": "Track Calls",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify') and event != 'Order Completed'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "event",
                            "type": "string",
                            "label": "Event Name",
                            "secret": false,
                            "default": "{event.event}",
                            "required": true,
                            "description": "The name of the action being performed."
                        },
                        {
                            "key": "distinct_id",
                            "type": "string",
                            "label": "Distinct ID",
                            "secret": false,
                            "default": "{person.id ?? event.distinct_id}",
                            "required": false,
                            "description": "A distinct ID specified by you."
                        },
                        {
                            "key": "anonymous_id",
                            "type": "string",
                            "label": "Anonymous ID",
                            "secret": false,
                            "default": "{event.distinct_id}",
                            "required": false,
                            "description": "A distinct ID randomly generated prior to calling identify."
                        },
                        {
                            "key": "user_id",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": false,
                            "description": "The distinct ID after calling identify."
                        },
                        {
                            "key": "group_id",
                            "type": "string",
                            "label": "Group ID",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "The unique identifier of the group that performed this event."
                        },
                        {
                            "key": "insert_id",
                            "type": "string",
                            "label": "Insert ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": false,
                            "description": "A random id that is unique to an event. Mixpanel uses $insert_id to deduplicate events."
                        },
                        {
                            "key": "time",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": false,
                            "description": "The timestamp of the event. Mixpanel expects epoch timestamp in millisecond or second. Please note, Mixpanel only accepts this field as the timestamp. If the field is empty, it will be set to the time Mixpanel servers receive it."
                        },
                        {
                            "key": "app_name",
                            "type": "string",
                            "label": "App Name",
                            "secret": false,
                            "default": "{event.event.properties.$app_name}",
                            "required": false,
                            "description": "The name of your application."
                        },
                        {
                            "key": "app_namespace",
                            "type": "string",
                            "label": "App Namespace",
                            "secret": false,
                            "default": "{event.event.properties.$app_namespace}",
                            "required": false,
                            "description": "The namespace of your application."
                        },
                        {
                            "key": "app_build",
                            "type": "string",
                            "label": "App Build",
                            "secret": false,
                            "default": "{event.event.properties.$app_build}",
                            "required": false,
                            "description": "The current build of your application."
                        },
                        {
                            "key": "app_version",
                            "type": "string",
                            "label": "App Version",
                            "secret": false,
                            "default": "{event.event.properties.$app_version}",
                            "required": false,
                            "description": "The current version of your application."
                        },
                        {
                            "key": "os_name",
                            "type": "string",
                            "label": "OS Name",
                            "secret": false,
                            "default": "{event.properties.$os}",
                            "required": false,
                            "description": "The name of the mobile operating system or browser that the user is using."
                        },
                        {
                            "key": "os_version",
                            "type": "string",
                            "label": "OS Version",
                            "secret": false,
                            "default": "{event.properties.$os_version}",
                            "required": false,
                            "description": "The version of the mobile operating system or browser the user is using."
                        },
                        {
                            "key": "device_id",
                            "type": "string",
                            "label": "Device ID",
                            "secret": false,
                            "default": "{event.properties.$device_id}",
                            "required": false,
                            "description": "A unique identifier for the device the user is using."
                        },
                        {
                            "key": "device_type",
                            "type": "string",
                            "label": "Device Type",
                            "secret": false,
                            "default": "{event.properties.$device_type}",
                            "required": false,
                            "description": "The type of the user's device."
                        },
                        {
                            "key": "device_name",
                            "type": "string",
                            "label": "Device Name",
                            "secret": false,
                            "default": "{event.properties.$device_name}",
                            "required": false,
                            "description": "The name of the user's device."
                        },
                        {
                            "key": "device_manufacturer",
                            "type": "string",
                            "label": "Device Manufacturer",
                            "secret": false,
                            "default": "{event.properties.$device_manufacturer}",
                            "required": false,
                            "description": "The device manufacturer that the user is using."
                        },
                        {
                            "key": "device_model",
                            "type": "string",
                            "label": "Device Model",
                            "secret": false,
                            "default": "{event.properties.$device_model}",
                            "required": false,
                            "description": "The device model that the user is using."
                        },
                        {
                            "key": "bluetooth",
                            "type": "string",
                            "label": "Bluetooth Enabled",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "Whether bluetooth is enabled."
                        },
                        {
                            "key": "carrier",
                            "type": "string",
                            "label": "Carrier",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "The carrier that the user is using."
                        },
                        {
                            "key": "cellular",
                            "type": "string",
                            "label": "Cellular Enabled",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "Whether cellular is enabled."
                        },
                        {
                            "key": "wifi",
                            "type": "string",
                            "label": "Wifi",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "Set to true if user’s device has an active, available Wifi connection, false if not."
                        },
                        {
                            "key": "country",
                            "type": "string",
                            "label": "Country",
                            "secret": false,
                            "default": "{event.properties.$geoip_country_name}",
                            "required": false,
                            "description": "The current country of the user."
                        },
                        {
                            "key": "region",
                            "type": "string",
                            "label": "Region",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "The current region of the user."
                        },
                        {
                            "key": "language",
                            "type": "string",
                            "label": "Language",
                            "secret": false,
                            "default": "{event.properties.$locale}",
                            "required": false,
                            "description": "The language set by the user."
                        },
                        {
                            "key": "library_name",
                            "type": "string",
                            "label": "Library Name",
                            "secret": false,
                            "default": "{event.properties.$lib}",
                            "required": false,
                            "description": "The name of the SDK used to send events."
                        },
                        {
                            "key": "library_version",
                            "type": "string",
                            "label": "Library Version",
                            "secret": false,
                            "default": "{event.properties.$lib_version}",
                            "required": false,
                            "description": "The version of the SDK used to send events."
                        },
                        {
                            "key": "ip",
                            "type": "string",
                            "label": "IP Address",
                            "secret": false,
                            "default": "{event.properties.$ip}",
                            "required": false,
                            "description": "The IP address of the user. This is only used for geolocation and won't be stored."
                        },
                        {
                            "key": "idfa",
                            "type": "string",
                            "label": "Identifier For Advertiser (IDFA)",
                            "secret": false,
                            "default": "{event.properties.$device_idfa}",
                            "required": false,
                            "description": "Identifier for Advertiser. _(iOS)_"
                        },
                        {
                            "key": "url",
                            "type": "string",
                            "label": "URL",
                            "secret": false,
                            "default": "{event.properties.$current_url}",
                            "required": false,
                            "description": "The full URL of the webpage on which the event is triggered."
                        },
                        {
                            "key": "screen_width",
                            "type": "string",
                            "label": "Screen width",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "Width, in pixels, of the device screen."
                        },
                        {
                            "key": "screen_height",
                            "type": "string",
                            "label": "Screen height",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "Height, in pixels, of the device screen."
                        },
                        {
                            "key": "screen_density",
                            "type": "string",
                            "label": "Screen density",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "Pixel density of the device screen."
                        },
                        {
                            "key": "referrer",
                            "type": "string",
                            "label": "Referrer",
                            "secret": false,
                            "default": "{event.properties.$referrer}",
                            "required": false,
                            "description": "Referrer url"
                        },
                        {
                            "key": "userAgent",
                            "type": "string",
                            "label": "User Agent",
                            "secret": false,
                            "default": "{event.properties.$raw_user_agent}",
                            "required": false,
                            "description": "User agent"
                        },
                        {
                            "key": "advertising_id",
                            "type": "string",
                            "label": "Advertising ID",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "Advertising ID"
                        },
                        {
                            "key": "ad_tracking_enabled",
                            "type": "string",
                            "label": "Ad Tracking Enabled",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "Ad Tracking Enabled (true or false)"
                        },
                        {
                            "key": "timezone",
                            "type": "string",
                            "label": "Timezone",
                            "secret": false,
                            "default": "{event.properties.$timezone}",
                            "required": false,
                            "description": "The event timezone"
                        },
                        {
                            "key": "app_platform",
                            "type": "string",
                            "label": "App Platform",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "The App Platform, if applicable"
                        },
                        {
                            "key": "name",
                            "type": "string",
                            "label": "Event Original Name",
                            "secret": false,
                            "default": "{event.event ?? event.event}",
                            "required": false,
                            "description": "The Event Original Name, if applicable"
                        },
                        {
                            "key": "event_properties",
                            "type": "dictionary",
                            "label": "Event Properties",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.properties}"
                            },
                            "required": false,
                            "description": "An object of key-value pairs that represent additional data to be sent along with the event."
                        },
                        {
                            "key": "context",
                            "type": "dictionary",
                            "label": "Event context",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.context}"
                            },
                            "required": false,
                            "description": "An object of key-value pairs that provides useful context about the event."
                        },
                        {
                            "key": "utm_properties",
                            "type": "dictionary",
                            "label": "UTM Properties",
                            "secret": false,
                            "default": {
                                "utm_term": "{event.properties.utm_term}",
                                "utm_medium": "{event.properties.utm_medium}",
                                "utm_source": "{event.properties.utm_source}",
                                "utm_content": "{event.properties.utm_content}",
                                "utm_campaign": "{event.properties.utm_campaign}"
                            },
                            "required": false,
                            "description": "UTM Tracking Properties"
                        },
                        {
                            "key": "userAgentData",
                            "type": "dictionary",
                            "label": "User Agent Data",
                            "secret": false,
                            "default": {
                                "model": "",
                                "wow64": "",
                                "mobile": "",
                                "bitness": "",
                                "platform": "",
                                "architecture": "",
                                "uaFullVersion": "",
                                "platformVersion": ""
                            },
                            "required": false,
                            "description": "The user agent data of device sending the event"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "trackEvent",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Order Completed Calls",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify') and event = 'Order Completed'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "generatePurchaseEventPerProduct",
                            "type": "string",
                            "label": "Generate Purchase Event Per Product",
                            "secret": false,
                            "default": "true",
                            "required": false,
                            "description": "When enabled, send \"Product Purchased\" with each product within the event."
                        },
                        {
                            "key": "distinct_id",
                            "type": "string",
                            "label": "Distinct ID",
                            "secret": false,
                            "default": "{person.id ?? event.distinct_id}",
                            "required": false,
                            "description": "A distinct ID specified by you."
                        },
                        {
                            "key": "anonymous_id",
                            "type": "string",
                            "label": "Anonymous ID",
                            "secret": false,
                            "default": "{event.distinct_id}",
                            "required": false,
                            "description": "A distinct ID randomly generated prior to calling identify."
                        },
                        {
                            "key": "user_id",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": false,
                            "description": "The distinct ID after calling identify."
                        },
                        {
                            "key": "group_id",
                            "type": "string",
                            "label": "Group ID",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "The unique identifier of the group that performed this event."
                        },
                        {
                            "key": "insert_id",
                            "type": "string",
                            "label": "Insert ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": false,
                            "description": "A random id that is unique to an event. Mixpanel uses $insert_id to deduplicate events."
                        },
                        {
                            "key": "time",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": false,
                            "description": "The timestamp of the event. Mixpanel expects epoch timestamp in millisecond or second. Please note, Mixpanel only accepts this field as the timestamp. If the field is empty, it will be set to the time Mixpanel servers receive it."
                        },
                        {
                            "key": "app_name",
                            "type": "string",
                            "label": "App Name",
                            "secret": false,
                            "default": "{event.event.properties.$app_name}",
                            "required": false,
                            "description": "The name of your application."
                        },
                        {
                            "key": "app_namespace",
                            "type": "string",
                            "label": "App Namespace",
                            "secret": false,
                            "default": "{event.event.properties.$app_namespace}",
                            "required": false,
                            "description": "The namespace of your application."
                        },
                        {
                            "key": "app_build",
                            "type": "string",
                            "label": "App Build",
                            "secret": false,
                            "default": "{event.event.properties.$app_build}",
                            "required": false,
                            "description": "The current build of your application."
                        },
                        {
                            "key": "app_version",
                            "type": "string",
                            "label": "App Version",
                            "secret": false,
                            "default": "{event.event.properties.$app_version}",
                            "required": false,
                            "description": "The current version of your application."
                        },
                        {
                            "key": "os_name",
                            "type": "string",
                            "label": "OS Name",
                            "secret": false,
                            "default": "{event.properties.$os}",
                            "required": false,
                            "description": "The name of the mobile operating system or browser that the user is using."
                        },
                        {
                            "key": "os_version",
                            "type": "string",
                            "label": "OS Version",
                            "secret": false,
                            "default": "{event.properties.$os_version}",
                            "required": false,
                            "description": "The version of the mobile operating system or browser the user is using."
                        },
                        {
                            "key": "device_id",
                            "type": "string",
                            "label": "Device ID",
                            "secret": false,
                            "default": "{event.properties.$device_id}",
                            "required": false,
                            "description": "A unique identifier for the device the user is using."
                        },
                        {
                            "key": "device_type",
                            "type": "string",
                            "label": "Device Type",
                            "secret": false,
                            "default": "{event.properties.$device_type}",
                            "required": false,
                            "description": "The type of the user's device."
                        },
                        {
                            "key": "device_name",
                            "type": "string",
                            "label": "Device Name",
                            "secret": false,
                            "default": "{event.properties.$device_name}",
                            "required": false,
                            "description": "The name of the user's device."
                        },
                        {
                            "key": "device_manufacturer",
                            "type": "string",
                            "label": "Device Manufacturer",
                            "secret": false,
                            "default": "{event.properties.$device_manufacturer}",
                            "required": false,
                            "description": "The device manufacturer that the user is using."
                        },
                        {
                            "key": "device_model",
                            "type": "string",
                            "label": "Device Model",
                            "secret": false,
                            "default": "{event.properties.$device_model}",
                            "required": false,
                            "description": "The device model that the user is using."
                        },
                        {
                            "key": "bluetooth",
                            "type": "string",
                            "label": "Bluetooth Enabled",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "Whether bluetooth is enabled."
                        },
                        {
                            "key": "carrier",
                            "type": "string",
                            "label": "Carrier",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "The carrier that the user is using."
                        },
                        {
                            "key": "cellular",
                            "type": "string",
                            "label": "Cellular Enabled",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "Whether cellular is enabled."
                        },
                        {
                            "key": "wifi",
                            "type": "string",
                            "label": "Wifi",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "Set to true if user’s device has an active, available Wifi connection, false if not."
                        },
                        {
                            "key": "country",
                            "type": "string",
                            "label": "Country",
                            "secret": false,
                            "default": "{event.properties.$geoip_country_name}",
                            "required": false,
                            "description": "The current country of the user."
                        },
                        {
                            "key": "region",
                            "type": "string",
                            "label": "Region",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "The current region of the user."
                        },
                        {
                            "key": "language",
                            "type": "string",
                            "label": "Language",
                            "secret": false,
                            "default": "{event.properties.$locale}",
                            "required": false,
                            "description": "The language set by the user."
                        },
                        {
                            "key": "library_name",
                            "type": "string",
                            "label": "Library Name",
                            "secret": false,
                            "default": "{event.properties.$lib}",
                            "required": false,
                            "description": "The name of the SDK used to send events."
                        },
                        {
                            "key": "library_version",
                            "type": "string",
                            "label": "Library Version",
                            "secret": false,
                            "default": "{event.properties.$lib_version}",
                            "required": false,
                            "description": "The version of the SDK used to send events."
                        },
                        {
                            "key": "ip",
                            "type": "string",
                            "label": "IP Address",
                            "secret": false,
                            "default": "{event.properties.$ip}",
                            "required": false,
                            "description": "The IP address of the user. This is only used for geolocation and won't be stored."
                        },
                        {
                            "key": "idfa",
                            "type": "string",
                            "label": "Identifier For Advertiser (IDFA)",
                            "secret": false,
                            "default": "{event.properties.$device_idfa}",
                            "required": false,
                            "description": "Identifier for Advertiser. _(iOS)_"
                        },
                        {
                            "key": "url",
                            "type": "string",
                            "label": "URL",
                            "secret": false,
                            "default": "{event.properties.$current_url}",
                            "required": false,
                            "description": "The full URL of the webpage on which the event is triggered."
                        },
                        {
                            "key": "screen_width",
                            "type": "string",
                            "label": "Screen width",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "Width, in pixels, of the device screen."
                        },
                        {
                            "key": "screen_height",
                            "type": "string",
                            "label": "Screen height",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "Height, in pixels, of the device screen."
                        },
                        {
                            "key": "screen_density",
                            "type": "string",
                            "label": "Screen density",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "Pixel density of the device screen."
                        },
                        {
                            "key": "referrer",
                            "type": "string",
                            "label": "Referrer",
                            "secret": false,
                            "default": "{event.properties.$referrer}",
                            "required": false,
                            "description": "Referrer url"
                        },
                        {
                            "key": "userAgent",
                            "type": "string",
                            "label": "User Agent",
                            "secret": false,
                            "default": "{event.properties.$raw_user_agent}",
                            "required": false,
                            "description": "User agent"
                        },
                        {
                            "key": "advertising_id",
                            "type": "string",
                            "label": "Advertising ID",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "Advertising ID"
                        },
                        {
                            "key": "ad_tracking_enabled",
                            "type": "string",
                            "label": "Ad Tracking Enabled",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "Ad Tracking Enabled (true or false)"
                        },
                        {
                            "key": "timezone",
                            "type": "string",
                            "label": "Timezone",
                            "secret": false,
                            "default": "{event.properties.$timezone}",
                            "required": false,
                            "description": "The event timezone"
                        },
                        {
                            "key": "app_platform",
                            "type": "string",
                            "label": "App Platform",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "The App Platform, if applicable"
                        },
                        {
                            "key": "name",
                            "type": "string",
                            "label": "Event Original Name",
                            "secret": false,
                            "default": "{event.event ?? event.event}",
                            "required": false,
                            "description": "The Event Original Name, if applicable"
                        },
                        {
                            "key": "event_properties",
                            "type": "dictionary",
                            "label": "Event Properties",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.properties}"
                            },
                            "required": false,
                            "description": "An object of key-value pairs that represent additional data to be sent along with the event."
                        },
                        {
                            "key": "context",
                            "type": "dictionary",
                            "label": "Event context",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.context}"
                            },
                            "required": false,
                            "description": "An object of key-value pairs that provides useful context about the event."
                        },
                        {
                            "key": "utm_properties",
                            "type": "dictionary",
                            "label": "UTM Properties",
                            "secret": false,
                            "default": {
                                "utm_term": "{event.properties.utm_term}",
                                "utm_medium": "{event.properties.utm_medium}",
                                "utm_source": "{event.properties.utm_source}",
                                "utm_content": "{event.properties.utm_content}",
                                "utm_campaign": "{event.properties.utm_campaign}"
                            },
                            "required": false,
                            "description": "UTM Tracking Properties"
                        },
                        {
                            "key": "userAgentData",
                            "type": "dictionary",
                            "label": "User Agent Data",
                            "secret": false,
                            "default": {
                                "model": "",
                                "wow64": "",
                                "mobile": "",
                                "bitness": "",
                                "platform": "",
                                "architecture": "",
                                "uaFullVersion": "",
                                "platformVersion": ""
                            },
                            "required": false,
                            "description": "The user agent data of device sending the event"
                        },
                        {
                            "key": "products",
                            "type": "string",
                            "label": "Products",
                            "secret": false,
                            "default": "{event.properties.products}",
                            "required": false,
                            "description": "Products in the order."
                        },
                        {
                            "key": "event",
                            "type": "string",
                            "label": "Event Name",
                            "secret": false,
                            "default": "{event.event}",
                            "required": true,
                            "description": "The name of the action being performed."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "trackPurchase",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Page Calls",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event = '$pageview'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "event",
                            "type": "string",
                            "label": "Event Name",
                            "secret": false,
                            "default": "{event.event}",
                            "required": true,
                            "description": "The name of the action being performed."
                        },
                        {
                            "key": "distinct_id",
                            "type": "string",
                            "label": "Distinct ID",
                            "secret": false,
                            "default": "{person.id ?? event.distinct_id}",
                            "required": false,
                            "description": "A distinct ID specified by you."
                        },
                        {
                            "key": "anonymous_id",
                            "type": "string",
                            "label": "Anonymous ID",
                            "secret": false,
                            "default": "{event.distinct_id}",
                            "required": false,
                            "description": "A distinct ID randomly generated prior to calling identify."
                        },
                        {
                            "key": "user_id",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": false,
                            "description": "The distinct ID after calling identify."
                        },
                        {
                            "key": "group_id",
                            "type": "string",
                            "label": "Group ID",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "The unique identifier of the group that performed this event."
                        },
                        {
                            "key": "insert_id",
                            "type": "string",
                            "label": "Insert ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": false,
                            "description": "A random id that is unique to an event. Mixpanel uses $insert_id to deduplicate events."
                        },
                        {
                            "key": "time",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": false,
                            "description": "The timestamp of the event. Mixpanel expects epoch timestamp in millisecond or second. Please note, Mixpanel only accepts this field as the timestamp. If the field is empty, it will be set to the time Mixpanel servers receive it."
                        },
                        {
                            "key": "app_name",
                            "type": "string",
                            "label": "App Name",
                            "secret": false,
                            "default": "{event.event.properties.$app_name}",
                            "required": false,
                            "description": "The name of your application."
                        },
                        {
                            "key": "app_namespace",
                            "type": "string",
                            "label": "App Namespace",
                            "secret": false,
                            "default": "{event.event.properties.$app_namespace}",
                            "required": false,
                            "description": "The namespace of your application."
                        },
                        {
                            "key": "app_build",
                            "type": "string",
                            "label": "App Build",
                            "secret": false,
                            "default": "{event.event.properties.$app_build}",
                            "required": false,
                            "description": "The current build of your application."
                        },
                        {
                            "key": "app_version",
                            "type": "string",
                            "label": "App Version",
                            "secret": false,
                            "default": "{event.event.properties.$app_version}",
                            "required": false,
                            "description": "The current version of your application."
                        },
                        {
                            "key": "os_name",
                            "type": "string",
                            "label": "OS Name",
                            "secret": false,
                            "default": "{event.properties.$os}",
                            "required": false,
                            "description": "The name of the mobile operating system or browser that the user is using."
                        },
                        {
                            "key": "os_version",
                            "type": "string",
                            "label": "OS Version",
                            "secret": false,
                            "default": "{event.properties.$os_version}",
                            "required": false,
                            "description": "The version of the mobile operating system or browser the user is using."
                        },
                        {
                            "key": "device_id",
                            "type": "string",
                            "label": "Device ID",
                            "secret": false,
                            "default": "{event.properties.$device_id}",
                            "required": false,
                            "description": "A unique identifier for the device the user is using."
                        },
                        {
                            "key": "device_type",
                            "type": "string",
                            "label": "Device Type",
                            "secret": false,
                            "default": "{event.properties.$device_type}",
                            "required": false,
                            "description": "The type of the user's device."
                        },
                        {
                            "key": "device_name",
                            "type": "string",
                            "label": "Device Name",
                            "secret": false,
                            "default": "{event.properties.$device_name}",
                            "required": false,
                            "description": "The name of the user's device."
                        },
                        {
                            "key": "device_manufacturer",
                            "type": "string",
                            "label": "Device Manufacturer",
                            "secret": false,
                            "default": "{event.properties.$device_manufacturer}",
                            "required": false,
                            "description": "The device manufacturer that the user is using."
                        },
                        {
                            "key": "device_model",
                            "type": "string",
                            "label": "Device Model",
                            "secret": false,
                            "default": "{event.properties.$device_model}",
                            "required": false,
                            "description": "The device model that the user is using."
                        },
                        {
                            "key": "bluetooth",
                            "type": "string",
                            "label": "Bluetooth Enabled",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "Whether bluetooth is enabled."
                        },
                        {
                            "key": "carrier",
                            "type": "string",
                            "label": "Carrier",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "The carrier that the user is using."
                        },
                        {
                            "key": "cellular",
                            "type": "string",
                            "label": "Cellular Enabled",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "Whether cellular is enabled."
                        },
                        {
                            "key": "wifi",
                            "type": "string",
                            "label": "Wifi",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "Set to true if user’s device has an active, available Wifi connection, false if not."
                        },
                        {
                            "key": "country",
                            "type": "string",
                            "label": "Country",
                            "secret": false,
                            "default": "{event.properties.$geoip_country_name}",
                            "required": false,
                            "description": "The current country of the user."
                        },
                        {
                            "key": "region",
                            "type": "string",
                            "label": "Region",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "The current region of the user."
                        },
                        {
                            "key": "language",
                            "type": "string",
                            "label": "Language",
                            "secret": false,
                            "default": "{event.properties.$locale}",
                            "required": false,
                            "description": "The language set by the user."
                        },
                        {
                            "key": "library_name",
                            "type": "string",
                            "label": "Library Name",
                            "secret": false,
                            "default": "{event.properties.$lib}",
                            "required": false,
                            "description": "The name of the SDK used to send events."
                        },
                        {
                            "key": "library_version",
                            "type": "string",
                            "label": "Library Version",
                            "secret": false,
                            "default": "{event.properties.$lib_version}",
                            "required": false,
                            "description": "The version of the SDK used to send events."
                        },
                        {
                            "key": "ip",
                            "type": "string",
                            "label": "IP Address",
                            "secret": false,
                            "default": "{event.properties.$ip}",
                            "required": false,
                            "description": "The IP address of the user. This is only used for geolocation and won't be stored."
                        },
                        {
                            "key": "idfa",
                            "type": "string",
                            "label": "Identifier For Advertiser (IDFA)",
                            "secret": false,
                            "default": "{event.properties.$device_idfa}",
                            "required": false,
                            "description": "Identifier for Advertiser. _(iOS)_"
                        },
                        {
                            "key": "url",
                            "type": "string",
                            "label": "URL",
                            "secret": false,
                            "default": "{event.properties.$current_url}",
                            "required": false,
                            "description": "The full URL of the webpage on which the event is triggered."
                        },
                        {
                            "key": "screen_width",
                            "type": "string",
                            "label": "Screen width",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "Width, in pixels, of the device screen."
                        },
                        {
                            "key": "screen_height",
                            "type": "string",
                            "label": "Screen height",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "Height, in pixels, of the device screen."
                        },
                        {
                            "key": "screen_density",
                            "type": "string",
                            "label": "Screen density",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "Pixel density of the device screen."
                        },
                        {
                            "key": "referrer",
                            "type": "string",
                            "label": "Referrer",
                            "secret": false,
                            "default": "{event.properties.$referrer}",
                            "required": false,
                            "description": "Referrer url"
                        },
                        {
                            "key": "userAgent",
                            "type": "string",
                            "label": "User Agent",
                            "secret": false,
                            "default": "{event.properties.$raw_user_agent}",
                            "required": false,
                            "description": "User agent"
                        },
                        {
                            "key": "advertising_id",
                            "type": "string",
                            "label": "Advertising ID",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "Advertising ID"
                        },
                        {
                            "key": "ad_tracking_enabled",
                            "type": "string",
                            "label": "Ad Tracking Enabled",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "Ad Tracking Enabled (true or false)"
                        },
                        {
                            "key": "timezone",
                            "type": "string",
                            "label": "Timezone",
                            "secret": false,
                            "default": "{event.properties.$timezone}",
                            "required": false,
                            "description": "The event timezone"
                        },
                        {
                            "key": "app_platform",
                            "type": "string",
                            "label": "App Platform",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "The App Platform, if applicable"
                        },
                        {
                            "key": "name",
                            "type": "string",
                            "label": "Event Original Name",
                            "secret": false,
                            "default": "{event.event ?? event.event}",
                            "required": false,
                            "description": "The Event Original Name, if applicable"
                        },
                        {
                            "key": "event_properties",
                            "type": "dictionary",
                            "label": "Event Properties",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.properties}"
                            },
                            "required": false,
                            "description": "An object of key-value pairs that represent additional data to be sent along with the event."
                        },
                        {
                            "key": "context",
                            "type": "dictionary",
                            "label": "Event context",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.context}"
                            },
                            "required": false,
                            "description": "An object of key-value pairs that provides useful context about the event."
                        },
                        {
                            "key": "utm_properties",
                            "type": "dictionary",
                            "label": "UTM Properties",
                            "secret": false,
                            "default": {
                                "utm_term": "{event.properties.utm_term}",
                                "utm_medium": "{event.properties.utm_medium}",
                                "utm_source": "{event.properties.utm_source}",
                                "utm_content": "{event.properties.utm_content}",
                                "utm_campaign": "{event.properties.utm_campaign}"
                            },
                            "required": false,
                            "description": "UTM Tracking Properties"
                        },
                        {
                            "key": "userAgentData",
                            "type": "dictionary",
                            "label": "User Agent Data",
                            "secret": false,
                            "default": {
                                "model": "",
                                "wow64": "",
                                "mobile": "",
                                "bitness": "",
                                "platform": "",
                                "architecture": "",
                                "uaFullVersion": "",
                                "platformVersion": ""
                            },
                            "required": false,
                            "description": "The user agent data of device sending the event"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "trackEvent",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Screen Calls",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event = '$screen'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "event",
                            "type": "string",
                            "label": "Event Name",
                            "secret": false,
                            "default": "{event.event}",
                            "required": true,
                            "description": "The name of the action being performed."
                        },
                        {
                            "key": "distinct_id",
                            "type": "string",
                            "label": "Distinct ID",
                            "secret": false,
                            "default": "{person.id ?? event.distinct_id}",
                            "required": false,
                            "description": "A distinct ID specified by you."
                        },
                        {
                            "key": "anonymous_id",
                            "type": "string",
                            "label": "Anonymous ID",
                            "secret": false,
                            "default": "{event.distinct_id}",
                            "required": false,
                            "description": "A distinct ID randomly generated prior to calling identify."
                        },
                        {
                            "key": "user_id",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": false,
                            "description": "The distinct ID after calling identify."
                        },
                        {
                            "key": "group_id",
                            "type": "string",
                            "label": "Group ID",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "The unique identifier of the group that performed this event."
                        },
                        {
                            "key": "insert_id",
                            "type": "string",
                            "label": "Insert ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": false,
                            "description": "A random id that is unique to an event. Mixpanel uses $insert_id to deduplicate events."
                        },
                        {
                            "key": "time",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": false,
                            "description": "The timestamp of the event. Mixpanel expects epoch timestamp in millisecond or second. Please note, Mixpanel only accepts this field as the timestamp. If the field is empty, it will be set to the time Mixpanel servers receive it."
                        },
                        {
                            "key": "app_name",
                            "type": "string",
                            "label": "App Name",
                            "secret": false,
                            "default": "{event.event.properties.$app_name}",
                            "required": false,
                            "description": "The name of your application."
                        },
                        {
                            "key": "app_namespace",
                            "type": "string",
                            "label": "App Namespace",
                            "secret": false,
                            "default": "{event.event.properties.$app_namespace}",
                            "required": false,
                            "description": "The namespace of your application."
                        },
                        {
                            "key": "app_build",
                            "type": "string",
                            "label": "App Build",
                            "secret": false,
                            "default": "{event.event.properties.$app_build}",
                            "required": false,
                            "description": "The current build of your application."
                        },
                        {
                            "key": "app_version",
                            "type": "string",
                            "label": "App Version",
                            "secret": false,
                            "default": "{event.event.properties.$app_version}",
                            "required": false,
                            "description": "The current version of your application."
                        },
                        {
                            "key": "os_name",
                            "type": "string",
                            "label": "OS Name",
                            "secret": false,
                            "default": "{event.properties.$os}",
                            "required": false,
                            "description": "The name of the mobile operating system or browser that the user is using."
                        },
                        {
                            "key": "os_version",
                            "type": "string",
                            "label": "OS Version",
                            "secret": false,
                            "default": "{event.properties.$os_version}",
                            "required": false,
                            "description": "The version of the mobile operating system or browser the user is using."
                        },
                        {
                            "key": "device_id",
                            "type": "string",
                            "label": "Device ID",
                            "secret": false,
                            "default": "{event.properties.$device_id}",
                            "required": false,
                            "description": "A unique identifier for the device the user is using."
                        },
                        {
                            "key": "device_type",
                            "type": "string",
                            "label": "Device Type",
                            "secret": false,
                            "default": "{event.properties.$device_type}",
                            "required": false,
                            "description": "The type of the user's device."
                        },
                        {
                            "key": "device_name",
                            "type": "string",
                            "label": "Device Name",
                            "secret": false,
                            "default": "{event.properties.$device_name}",
                            "required": false,
                            "description": "The name of the user's device."
                        },
                        {
                            "key": "device_manufacturer",
                            "type": "string",
                            "label": "Device Manufacturer",
                            "secret": false,
                            "default": "{event.properties.$device_manufacturer}",
                            "required": false,
                            "description": "The device manufacturer that the user is using."
                        },
                        {
                            "key": "device_model",
                            "type": "string",
                            "label": "Device Model",
                            "secret": false,
                            "default": "{event.properties.$device_model}",
                            "required": false,
                            "description": "The device model that the user is using."
                        },
                        {
                            "key": "bluetooth",
                            "type": "string",
                            "label": "Bluetooth Enabled",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "Whether bluetooth is enabled."
                        },
                        {
                            "key": "carrier",
                            "type": "string",
                            "label": "Carrier",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "The carrier that the user is using."
                        },
                        {
                            "key": "cellular",
                            "type": "string",
                            "label": "Cellular Enabled",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "Whether cellular is enabled."
                        },
                        {
                            "key": "wifi",
                            "type": "string",
                            "label": "Wifi",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "Set to true if user’s device has an active, available Wifi connection, false if not."
                        },
                        {
                            "key": "country",
                            "type": "string",
                            "label": "Country",
                            "secret": false,
                            "default": "{event.properties.$geoip_country_name}",
                            "required": false,
                            "description": "The current country of the user."
                        },
                        {
                            "key": "region",
                            "type": "string",
                            "label": "Region",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "The current region of the user."
                        },
                        {
                            "key": "language",
                            "type": "string",
                            "label": "Language",
                            "secret": false,
                            "default": "{event.properties.$locale}",
                            "required": false,
                            "description": "The language set by the user."
                        },
                        {
                            "key": "library_name",
                            "type": "string",
                            "label": "Library Name",
                            "secret": false,
                            "default": "{event.properties.$lib}",
                            "required": false,
                            "description": "The name of the SDK used to send events."
                        },
                        {
                            "key": "library_version",
                            "type": "string",
                            "label": "Library Version",
                            "secret": false,
                            "default": "{event.properties.$lib_version}",
                            "required": false,
                            "description": "The version of the SDK used to send events."
                        },
                        {
                            "key": "ip",
                            "type": "string",
                            "label": "IP Address",
                            "secret": false,
                            "default": "{event.properties.$ip}",
                            "required": false,
                            "description": "The IP address of the user. This is only used for geolocation and won't be stored."
                        },
                        {
                            "key": "idfa",
                            "type": "string",
                            "label": "Identifier For Advertiser (IDFA)",
                            "secret": false,
                            "default": "{event.properties.$device_idfa}",
                            "required": false,
                            "description": "Identifier for Advertiser. _(iOS)_"
                        },
                        {
                            "key": "url",
                            "type": "string",
                            "label": "URL",
                            "secret": false,
                            "default": "{event.properties.$current_url}",
                            "required": false,
                            "description": "The full URL of the webpage on which the event is triggered."
                        },
                        {
                            "key": "screen_width",
                            "type": "string",
                            "label": "Screen width",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "Width, in pixels, of the device screen."
                        },
                        {
                            "key": "screen_height",
                            "type": "string",
                            "label": "Screen height",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "Height, in pixels, of the device screen."
                        },
                        {
                            "key": "screen_density",
                            "type": "string",
                            "label": "Screen density",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "Pixel density of the device screen."
                        },
                        {
                            "key": "referrer",
                            "type": "string",
                            "label": "Referrer",
                            "secret": false,
                            "default": "{event.properties.$referrer}",
                            "required": false,
                            "description": "Referrer url"
                        },
                        {
                            "key": "userAgent",
                            "type": "string",
                            "label": "User Agent",
                            "secret": false,
                            "default": "{event.properties.$raw_user_agent}",
                            "required": false,
                            "description": "User agent"
                        },
                        {
                            "key": "advertising_id",
                            "type": "string",
                            "label": "Advertising ID",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "Advertising ID"
                        },
                        {
                            "key": "ad_tracking_enabled",
                            "type": "string",
                            "label": "Ad Tracking Enabled",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "Ad Tracking Enabled (true or false)"
                        },
                        {
                            "key": "timezone",
                            "type": "string",
                            "label": "Timezone",
                            "secret": false,
                            "default": "{event.properties.$timezone}",
                            "required": false,
                            "description": "The event timezone"
                        },
                        {
                            "key": "app_platform",
                            "type": "string",
                            "label": "App Platform",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "The App Platform, if applicable"
                        },
                        {
                            "key": "name",
                            "type": "string",
                            "label": "Event Original Name",
                            "secret": false,
                            "default": "{event.event ?? event.event}",
                            "required": false,
                            "description": "The Event Original Name, if applicable"
                        },
                        {
                            "key": "event_properties",
                            "type": "dictionary",
                            "label": "Event Properties",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.properties}"
                            },
                            "required": false,
                            "description": "An object of key-value pairs that represent additional data to be sent along with the event."
                        },
                        {
                            "key": "context",
                            "type": "dictionary",
                            "label": "Event context",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.context}"
                            },
                            "required": false,
                            "description": "An object of key-value pairs that provides useful context about the event."
                        },
                        {
                            "key": "utm_properties",
                            "type": "dictionary",
                            "label": "UTM Properties",
                            "secret": false,
                            "default": {
                                "utm_term": "{event.properties.utm_term}",
                                "utm_medium": "{event.properties.utm_medium}",
                                "utm_source": "{event.properties.utm_source}",
                                "utm_content": "{event.properties.utm_content}",
                                "utm_campaign": "{event.properties.utm_campaign}"
                            },
                            "required": false,
                            "description": "UTM Tracking Properties"
                        },
                        {
                            "key": "userAgentData",
                            "type": "dictionary",
                            "label": "User Agent Data",
                            "secret": false,
                            "default": {
                                "model": "",
                                "wow64": "",
                                "mobile": "",
                                "bitness": "",
                                "platform": "",
                                "architecture": "",
                                "uaFullVersion": "",
                                "platformVersion": ""
                            },
                            "required": false,
                            "description": "The user agent data of device sending the event"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "trackEvent",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Identify Calls",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event in ('$identify', '$set')",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "ip",
                            "type": "string",
                            "label": "IP Address",
                            "secret": false,
                            "default": "{event.properties.$ip}",
                            "required": false,
                            "description": "The IP address of the user. This is only used for geolocation and won't be stored."
                        },
                        {
                            "key": "user_id",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": false,
                            "description": "The unique user identifier set by you"
                        },
                        {
                            "key": "anonymous_id",
                            "type": "string",
                            "label": "Anonymous ID",
                            "secret": false,
                            "default": "{event.distinct_id}",
                            "required": false,
                            "description": "The generated anonymous ID for the user"
                        },
                        {
                            "key": "traits",
                            "type": "dictionary",
                            "label": "User Properties",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{person.properties}"
                            },
                            "required": false,
                            "description": "Properties to set on the user profile"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "identifyUser",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Group Calls",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event = '$groupidentify'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "group_key",
                            "type": "string",
                            "label": "Group Key",
                            "secret": false,
                            "required": false,
                            "description": "The group key you specified in Mixpanel under Project settings. If this is not specified, it will be defaulted to \"$group_id\"."
                        },
                        {
                            "key": "group_id",
                            "type": "string",
                            "label": "Group ID",
                            "secret": false,
                            "default": "{event.groupId}",
                            "required": true,
                            "description": "The unique identifier of the group. If there is a trait that matches the group key, it will override this value."
                        },
                        {
                            "key": "traits",
                            "type": "dictionary",
                            "label": "Group Properties",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{person.properties}"
                            },
                            "required": false,
                            "description": "The properties to set on the group profile."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "groupIdentifyUser",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                }
            ],
            "mappings": null,
            "status": "beta",
            "free": false,
            "type": "destination",
            "id": "segment-actions-mixpanel",
            "name": "Mixpanel",
            "hog": "return event",
            "inputs_schema": [
                {
                    "key": "projectToken",
                    "type": "string",
                    "label": "Project Token",
                    "secret": false,
                    "required": true,
                    "description": "Mixpanel project token."
                },
                {
                    "key": "apiSecret",
                    "type": "string",
                    "label": "Secret Key",
                    "secret": false,
                    "required": true,
                    "description": "Mixpanel project secret."
                },
                {
                    "key": "apiRegion",
                    "type": "choice",
                    "label": "Data Residency",
                    "secret": false,
                    "choices": [
                        {
                            "label": "US 🇺🇸",
                            "value": "US 🇺🇸"
                        },
                        {
                            "label": "EU 🇪🇺",
                            "value": "EU 🇪🇺"
                        },
                        {
                            "label": "IN 🇮🇳",
                            "value": "IN 🇮🇳"
                        }
                    ],
                    "default": "US 🇺🇸",
                    "required": false,
                    "description": "Learn about [EU data residency](https://docs.mixpanel.com/docs/privacy/eu-residency) and [India data residency](https://docs.mixpanel.com/docs/privacy/in-residency)"
                },
                {
                    "key": "sourceName",
                    "type": "string",
                    "label": "Source Name",
                    "secret": false,
                    "required": false,
                    "description": "This value, if it's not blank, will be sent as segment_source_name to Mixpanel for every event/page/screen call."
                },
                {
                    "key": "strictMode",
                    "type": "choice",
                    "label": "Strict Mode",
                    "secret": false,
                    "choices": [
                        {
                            "label": "1",
                            "value": "1"
                        },
                        {
                            "label": "0",
                            "value": "0"
                        }
                    ],
                    "default": "1",
                    "required": false,
                    "description": "This value, if it's 1 (recommended), Mixpanel will validate the events you are trying to send and return errors per event that failed. Learn more about the Mixpanel [Import Events API](https://developer.mixpanel.com/reference/import-events)"
                },
                {
                    "key": "debug_mode",
                    "type": "boolean",
                    "label": "Debug Mode",
                    "default": false,
                    "description": "Will log configuration and request details"
                }
            ],
            "category": [],
            "code_language": "hog",
            "description": "Send event data to Mixpanel",
            "filters": null,
            "masking": null,
            "icon_url": "/static/services/mixpanel.com.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-mode-analytics",
            "name": "Mode Analytics",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Analytics"],
            "code_language": "hog",
            "description": "Send events to Mode Analytics.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Mode_Analytics.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-moengage",
            "name": "MoEngage",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["User Engagement Platforms"],
            "code_language": "hog",
            "description": "Send events to MoEngage.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/MoEngage.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-moesif-api-analytics",
            "name": "Moesif API Analytics",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Analytics"],
            "code_language": "hog",
            "description": "Send events to Moesif API Analytics.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Moesif_API_Analytics.svg"
        },
        {
            "mapping_templates": [
                {
                    "name": "Search",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify') and event = 'Products Searched'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "event_id",
                            "type": "string",
                            "label": "Event ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": false,
                            "description": "Unique ID generated by the client to suppress duplicate events. The length should not exceed 128 characters."
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": true,
                            "description": "Timestamp that the event happened at."
                        },
                        {
                            "key": "user_id",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": false,
                            "description": "User Identifier for the platform. The length should not exceed 128 characters."
                        },
                        {
                            "key": "device",
                            "type": "dictionary",
                            "label": "Device",
                            "secret": false,
                            "default": {
                                "ip": "{event.properties.$ip}",
                                "os": "{event.properties.$os}",
                                "ua": "{event.properties.$raw_user_agent}",
                                "model": "{event.properties.$device_model}",
                                "os_version": "{event.properties.$os_version}",
                                "advertising_id": "",
                                "unique_device_id": "{event.properties.$device_id}"
                            },
                            "required": false,
                            "description": "Device information of the event"
                        },
                        {
                            "key": "session_id",
                            "type": "string",
                            "label": "Session ID",
                            "secret": false,
                            "default": "{event.distinct_id}",
                            "required": false,
                            "description": "Identifier for tracking users regardless of sign-in status. The length should not exceed 128 characters."
                        },
                        {
                            "key": "default_currency",
                            "type": "choice",
                            "label": "Default Currency",
                            "secret": false,
                            "choices": [
                                {
                                    "label": "UNKNOWN_CURRENCY",
                                    "value": "UNKNOWN_CURRENCY"
                                },
                                {
                                    "label": "USD",
                                    "value": "USD"
                                },
                                {
                                    "label": "KRW",
                                    "value": "KRW"
                                },
                                {
                                    "label": "JPY",
                                    "value": "JPY"
                                },
                                {
                                    "label": "EUR",
                                    "value": "EUR"
                                },
                                {
                                    "label": "GBP",
                                    "value": "GBP"
                                },
                                {
                                    "label": "SEK",
                                    "value": "SEK"
                                },
                                {
                                    "label": "INR",
                                    "value": "INR"
                                },
                                {
                                    "label": "THB",
                                    "value": "THB"
                                },
                                {
                                    "label": "IDR",
                                    "value": "IDR"
                                },
                                {
                                    "label": "CNY",
                                    "value": "CNY"
                                },
                                {
                                    "label": "CAD",
                                    "value": "CAD"
                                },
                                {
                                    "label": "RUB",
                                    "value": "RUB"
                                },
                                {
                                    "label": "BRL",
                                    "value": "BRL"
                                },
                                {
                                    "label": "SGD",
                                    "value": "SGD"
                                },
                                {
                                    "label": "HKD",
                                    "value": "HKD"
                                },
                                {
                                    "label": "AUD",
                                    "value": "AUD"
                                },
                                {
                                    "label": "PLN",
                                    "value": "PLN"
                                },
                                {
                                    "label": "DKK",
                                    "value": "DKK"
                                },
                                {
                                    "label": "VND",
                                    "value": "VND"
                                },
                                {
                                    "label": "MYR",
                                    "value": "MYR"
                                },
                                {
                                    "label": "PHP",
                                    "value": "PHP"
                                },
                                {
                                    "label": "TRY",
                                    "value": "TRY"
                                },
                                {
                                    "label": "VEF",
                                    "value": "VEF"
                                }
                            ],
                            "default": "USD",
                            "required": false,
                            "description": "The default currency value. Defaults to \"USD\". If this is set, it will be used as a default currency value for items."
                        },
                        {
                            "key": "items",
                            "type": "string",
                            "label": "Items",
                            "secret": false,
                            "default": "{event.properties.products}",
                            "required": false,
                            "description": "Item information list related to the event."
                        },
                        {
                            "key": "search_query",
                            "type": "string",
                            "label": "Search Query",
                            "secret": false,
                            "default": "{event.properties.query}",
                            "required": true,
                            "description": "Query string for the search."
                        },
                        {
                            "key": "page_id",
                            "type": "string",
                            "label": "Page ID",
                            "secret": false,
                            "default": "{event.properties.$pathname}",
                            "required": false,
                            "description": "A string value used to uniquely identify a page. For example: \"electronics\", \"categories/12312\", \"azd911d\" or \"/classes/foo/lectures/bar\"."
                        },
                        {
                            "key": "page_identifier_tokens",
                            "type": "dictionary",
                            "label": "Page Identifier Tokens",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "Tokens that can be used to identify a page. Alternative to page_id with a lower priority."
                        },
                        {
                            "key": "referrer_page_id",
                            "type": "string",
                            "label": "Referrer Page ID",
                            "secret": false,
                            "default": "{event.properties.$referrer}",
                            "required": false,
                            "description": "Similar to referrer in HTTP, this value indicates from which page the user came to the current page."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "search",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Purchase",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify') and event = 'Order Completed'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "event_id",
                            "type": "string",
                            "label": "Event ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": false,
                            "description": "Unique ID generated by the client to suppress duplicate events. The length should not exceed 128 characters."
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": true,
                            "description": "Timestamp that the event happened at."
                        },
                        {
                            "key": "user_id",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": false,
                            "description": "User Identifier for the platform. The length should not exceed 128 characters."
                        },
                        {
                            "key": "device",
                            "type": "dictionary",
                            "label": "Device",
                            "secret": false,
                            "default": {
                                "ip": "{event.properties.$ip}",
                                "os": "{event.properties.$os}",
                                "ua": "{event.properties.$raw_user_agent}",
                                "model": "{event.properties.$device_model}",
                                "os_version": "{event.properties.$os_version}",
                                "advertising_id": "",
                                "unique_device_id": "{event.properties.$device_id}"
                            },
                            "required": false,
                            "description": "Device information of the event"
                        },
                        {
                            "key": "session_id",
                            "type": "string",
                            "label": "Session ID",
                            "secret": false,
                            "default": "{event.distinct_id}",
                            "required": false,
                            "description": "Identifier for tracking users regardless of sign-in status. The length should not exceed 128 characters."
                        },
                        {
                            "key": "default_currency",
                            "type": "choice",
                            "label": "Default Currency",
                            "secret": false,
                            "choices": [
                                {
                                    "label": "UNKNOWN_CURRENCY",
                                    "value": "UNKNOWN_CURRENCY"
                                },
                                {
                                    "label": "USD",
                                    "value": "USD"
                                },
                                {
                                    "label": "KRW",
                                    "value": "KRW"
                                },
                                {
                                    "label": "JPY",
                                    "value": "JPY"
                                },
                                {
                                    "label": "EUR",
                                    "value": "EUR"
                                },
                                {
                                    "label": "GBP",
                                    "value": "GBP"
                                },
                                {
                                    "label": "SEK",
                                    "value": "SEK"
                                },
                                {
                                    "label": "INR",
                                    "value": "INR"
                                },
                                {
                                    "label": "THB",
                                    "value": "THB"
                                },
                                {
                                    "label": "IDR",
                                    "value": "IDR"
                                },
                                {
                                    "label": "CNY",
                                    "value": "CNY"
                                },
                                {
                                    "label": "CAD",
                                    "value": "CAD"
                                },
                                {
                                    "label": "RUB",
                                    "value": "RUB"
                                },
                                {
                                    "label": "BRL",
                                    "value": "BRL"
                                },
                                {
                                    "label": "SGD",
                                    "value": "SGD"
                                },
                                {
                                    "label": "HKD",
                                    "value": "HKD"
                                },
                                {
                                    "label": "AUD",
                                    "value": "AUD"
                                },
                                {
                                    "label": "PLN",
                                    "value": "PLN"
                                },
                                {
                                    "label": "DKK",
                                    "value": "DKK"
                                },
                                {
                                    "label": "VND",
                                    "value": "VND"
                                },
                                {
                                    "label": "MYR",
                                    "value": "MYR"
                                },
                                {
                                    "label": "PHP",
                                    "value": "PHP"
                                },
                                {
                                    "label": "TRY",
                                    "value": "TRY"
                                },
                                {
                                    "label": "VEF",
                                    "value": "VEF"
                                }
                            ],
                            "default": "USD",
                            "required": false,
                            "description": "The default currency value. Defaults to \"USD\". If this is set, it will be used as a default currency value for items."
                        },
                        {
                            "key": "items",
                            "type": "string",
                            "label": "Items",
                            "secret": false,
                            "default": "{event.properties.products}",
                            "required": true,
                            "description": "Item information list related to the event."
                        },
                        {
                            "key": "revenue",
                            "type": "dictionary",
                            "label": "Revenue",
                            "secret": false,
                            "default": {
                                "price": "{event.properties.revenue}",
                                "currency": "{event.properties.currency}"
                            },
                            "required": true,
                            "description": "Revenue of the event"
                        },
                        {
                            "key": "page_id",
                            "type": "string",
                            "label": "Page ID",
                            "secret": false,
                            "default": "{event.properties.$pathname}",
                            "required": false,
                            "description": "A string value used to uniquely identify a page. For example: \"electronics\", \"categories/12312\", \"azd911d\" or \"/classes/foo/lectures/bar\"."
                        },
                        {
                            "key": "page_identifier_tokens",
                            "type": "dictionary",
                            "label": "Page Identifier Tokens",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "Tokens that can be used to identify a page. Alternative to page_id with a lower priority."
                        },
                        {
                            "key": "shipping_charge",
                            "type": "dictionary",
                            "label": "Shipping Charge",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "Shipping charge’s monetary amount in a specific currency."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "purchase",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Page View",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event = '$pageview' and properties.name != 'Home' and properties.name != 'Land'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "event_id",
                            "type": "string",
                            "label": "Event ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": false,
                            "description": "Unique ID generated by the client to suppress duplicate events. The length should not exceed 128 characters."
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": true,
                            "description": "Timestamp that the event happened at."
                        },
                        {
                            "key": "user_id",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": false,
                            "description": "User Identifier for the platform. The length should not exceed 128 characters."
                        },
                        {
                            "key": "device",
                            "type": "dictionary",
                            "label": "Device",
                            "secret": false,
                            "default": {
                                "ip": "{event.properties.$ip}",
                                "os": "{event.properties.$os}",
                                "ua": "{event.properties.$raw_user_agent}",
                                "model": "{event.properties.$device_model}",
                                "os_version": "{event.properties.$os_version}",
                                "advertising_id": "",
                                "unique_device_id": "{event.properties.$device_id}"
                            },
                            "required": false,
                            "description": "Device information of the event"
                        },
                        {
                            "key": "session_id",
                            "type": "string",
                            "label": "Session ID",
                            "secret": false,
                            "default": "{event.distinct_id}",
                            "required": false,
                            "description": "Identifier for tracking users regardless of sign-in status. The length should not exceed 128 characters."
                        },
                        {
                            "key": "default_currency",
                            "type": "choice",
                            "label": "Default Currency",
                            "secret": false,
                            "choices": [
                                {
                                    "label": "UNKNOWN_CURRENCY",
                                    "value": "UNKNOWN_CURRENCY"
                                },
                                {
                                    "label": "USD",
                                    "value": "USD"
                                },
                                {
                                    "label": "KRW",
                                    "value": "KRW"
                                },
                                {
                                    "label": "JPY",
                                    "value": "JPY"
                                },
                                {
                                    "label": "EUR",
                                    "value": "EUR"
                                },
                                {
                                    "label": "GBP",
                                    "value": "GBP"
                                },
                                {
                                    "label": "SEK",
                                    "value": "SEK"
                                },
                                {
                                    "label": "INR",
                                    "value": "INR"
                                },
                                {
                                    "label": "THB",
                                    "value": "THB"
                                },
                                {
                                    "label": "IDR",
                                    "value": "IDR"
                                },
                                {
                                    "label": "CNY",
                                    "value": "CNY"
                                },
                                {
                                    "label": "CAD",
                                    "value": "CAD"
                                },
                                {
                                    "label": "RUB",
                                    "value": "RUB"
                                },
                                {
                                    "label": "BRL",
                                    "value": "BRL"
                                },
                                {
                                    "label": "SGD",
                                    "value": "SGD"
                                },
                                {
                                    "label": "HKD",
                                    "value": "HKD"
                                },
                                {
                                    "label": "AUD",
                                    "value": "AUD"
                                },
                                {
                                    "label": "PLN",
                                    "value": "PLN"
                                },
                                {
                                    "label": "DKK",
                                    "value": "DKK"
                                },
                                {
                                    "label": "VND",
                                    "value": "VND"
                                },
                                {
                                    "label": "MYR",
                                    "value": "MYR"
                                },
                                {
                                    "label": "PHP",
                                    "value": "PHP"
                                },
                                {
                                    "label": "TRY",
                                    "value": "TRY"
                                },
                                {
                                    "label": "VEF",
                                    "value": "VEF"
                                }
                            ],
                            "default": "USD",
                            "required": false,
                            "description": "The default currency value. Defaults to \"USD\". If this is set, it will be used as a default currency value for items."
                        },
                        {
                            "key": "items",
                            "type": "string",
                            "label": "Items",
                            "secret": false,
                            "default": "{event.properties.products}",
                            "required": false,
                            "description": "Item information list related to the event."
                        },
                        {
                            "key": "page_id",
                            "type": "string",
                            "label": "Page ID",
                            "secret": false,
                            "default": "{event.properties.$pathname}",
                            "required": false,
                            "description": "A string value used to uniquely identify a page. For example: \"electronics\", \"categories/12312\", \"azd911d\" or \"/classes/foo/lectures/bar\". Either page_id or page_identifier_tokens is required."
                        },
                        {
                            "key": "page_identifier_tokens",
                            "type": "dictionary",
                            "label": "Page Identifier Tokens",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "Tokens that can be used to identify a page. Alternative to page_id with a lower priority. Either page_id or page_identifier_tokens is required."
                        },
                        {
                            "key": "referrer_page_id",
                            "type": "string",
                            "label": "Referrer Page ID",
                            "secret": false,
                            "default": "{event.properties.$referrer}",
                            "required": false,
                            "description": "Similar to referrer in HTTP, this value indicates from which page the user came to the current page."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "pageView",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Land",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event = '$pageview' and properties.name = 'Land'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "event_id",
                            "type": "string",
                            "label": "Event ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": false,
                            "description": "Unique ID generated by the client to suppress duplicate events. The length should not exceed 128 characters."
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": true,
                            "description": "Timestamp that the event happened at."
                        },
                        {
                            "key": "user_id",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": false,
                            "description": "User Identifier for the platform. The length should not exceed 128 characters."
                        },
                        {
                            "key": "device",
                            "type": "dictionary",
                            "label": "Device",
                            "secret": false,
                            "default": {
                                "ip": "{event.properties.$ip}",
                                "os": "{event.properties.$os}",
                                "ua": "{event.properties.$raw_user_agent}",
                                "model": "{event.properties.$device_model}",
                                "os_version": "{event.properties.$os_version}",
                                "advertising_id": "",
                                "unique_device_id": "{event.properties.$device_id}"
                            },
                            "required": false,
                            "description": "Device information of the event"
                        },
                        {
                            "key": "session_id",
                            "type": "string",
                            "label": "Session ID",
                            "secret": false,
                            "default": "{event.distinct_id}",
                            "required": false,
                            "description": "Identifier for tracking users regardless of sign-in status. The length should not exceed 128 characters."
                        },
                        {
                            "key": "default_currency",
                            "type": "choice",
                            "label": "Default Currency",
                            "secret": false,
                            "choices": [
                                {
                                    "label": "UNKNOWN_CURRENCY",
                                    "value": "UNKNOWN_CURRENCY"
                                },
                                {
                                    "label": "USD",
                                    "value": "USD"
                                },
                                {
                                    "label": "KRW",
                                    "value": "KRW"
                                },
                                {
                                    "label": "JPY",
                                    "value": "JPY"
                                },
                                {
                                    "label": "EUR",
                                    "value": "EUR"
                                },
                                {
                                    "label": "GBP",
                                    "value": "GBP"
                                },
                                {
                                    "label": "SEK",
                                    "value": "SEK"
                                },
                                {
                                    "label": "INR",
                                    "value": "INR"
                                },
                                {
                                    "label": "THB",
                                    "value": "THB"
                                },
                                {
                                    "label": "IDR",
                                    "value": "IDR"
                                },
                                {
                                    "label": "CNY",
                                    "value": "CNY"
                                },
                                {
                                    "label": "CAD",
                                    "value": "CAD"
                                },
                                {
                                    "label": "RUB",
                                    "value": "RUB"
                                },
                                {
                                    "label": "BRL",
                                    "value": "BRL"
                                },
                                {
                                    "label": "SGD",
                                    "value": "SGD"
                                },
                                {
                                    "label": "HKD",
                                    "value": "HKD"
                                },
                                {
                                    "label": "AUD",
                                    "value": "AUD"
                                },
                                {
                                    "label": "PLN",
                                    "value": "PLN"
                                },
                                {
                                    "label": "DKK",
                                    "value": "DKK"
                                },
                                {
                                    "label": "VND",
                                    "value": "VND"
                                },
                                {
                                    "label": "MYR",
                                    "value": "MYR"
                                },
                                {
                                    "label": "PHP",
                                    "value": "PHP"
                                },
                                {
                                    "label": "TRY",
                                    "value": "TRY"
                                },
                                {
                                    "label": "VEF",
                                    "value": "VEF"
                                }
                            ],
                            "default": "USD",
                            "required": false,
                            "description": "The default currency value. Defaults to \"USD\". If this is set, it will be used as a default currency value for items."
                        },
                        {
                            "key": "items",
                            "type": "string",
                            "label": "Items",
                            "secret": false,
                            "default": "{event.properties.products}",
                            "required": false,
                            "description": "Item information list related to the event."
                        },
                        {
                            "key": "page_id",
                            "type": "string",
                            "label": "Page ID",
                            "secret": false,
                            "default": "{event.properties.$pathname}",
                            "required": false,
                            "description": "A string value used to uniquely identify a page. For example: \"electronics\", \"categories/12312\", \"azd911d\" or \"/classes/foo/lectures/bar\"."
                        },
                        {
                            "key": "page_identifier_tokens",
                            "type": "dictionary",
                            "label": "Page Identifier Tokens",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "Tokens that can be used to identify a page. Alternative to page_id with a lower priority."
                        },
                        {
                            "key": "referrer_page_id",
                            "type": "string",
                            "label": "Referrer Page ID",
                            "secret": false,
                            "default": "{event.properties.$referrer}",
                            "required": true,
                            "description": "Similar to referrer in HTTP, this value indicates from which page the user came to the current page."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "land",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Item Page View",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify') and event = 'Product Viewed'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "event_id",
                            "type": "string",
                            "label": "Event ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": false,
                            "description": "Unique ID generated by the client to suppress duplicate events. The length should not exceed 128 characters."
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": true,
                            "description": "Timestamp that the event happened at."
                        },
                        {
                            "key": "user_id",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": false,
                            "description": "User Identifier for the platform. The length should not exceed 128 characters."
                        },
                        {
                            "key": "device",
                            "type": "dictionary",
                            "label": "Device",
                            "secret": false,
                            "default": {
                                "ip": "{event.properties.$ip}",
                                "os": "{event.properties.$os}",
                                "ua": "{event.properties.$raw_user_agent}",
                                "model": "{event.properties.$device_model}",
                                "os_version": "{event.properties.$os_version}",
                                "advertising_id": "",
                                "unique_device_id": "{event.properties.$device_id}"
                            },
                            "required": false,
                            "description": "Device information of the event"
                        },
                        {
                            "key": "session_id",
                            "type": "string",
                            "label": "Session ID",
                            "secret": false,
                            "default": "{event.distinct_id}",
                            "required": false,
                            "description": "Identifier for tracking users regardless of sign-in status. The length should not exceed 128 characters."
                        },
                        {
                            "key": "default_currency",
                            "type": "choice",
                            "label": "Default Currency",
                            "secret": false,
                            "choices": [
                                {
                                    "label": "UNKNOWN_CURRENCY",
                                    "value": "UNKNOWN_CURRENCY"
                                },
                                {
                                    "label": "USD",
                                    "value": "USD"
                                },
                                {
                                    "label": "KRW",
                                    "value": "KRW"
                                },
                                {
                                    "label": "JPY",
                                    "value": "JPY"
                                },
                                {
                                    "label": "EUR",
                                    "value": "EUR"
                                },
                                {
                                    "label": "GBP",
                                    "value": "GBP"
                                },
                                {
                                    "label": "SEK",
                                    "value": "SEK"
                                },
                                {
                                    "label": "INR",
                                    "value": "INR"
                                },
                                {
                                    "label": "THB",
                                    "value": "THB"
                                },
                                {
                                    "label": "IDR",
                                    "value": "IDR"
                                },
                                {
                                    "label": "CNY",
                                    "value": "CNY"
                                },
                                {
                                    "label": "CAD",
                                    "value": "CAD"
                                },
                                {
                                    "label": "RUB",
                                    "value": "RUB"
                                },
                                {
                                    "label": "BRL",
                                    "value": "BRL"
                                },
                                {
                                    "label": "SGD",
                                    "value": "SGD"
                                },
                                {
                                    "label": "HKD",
                                    "value": "HKD"
                                },
                                {
                                    "label": "AUD",
                                    "value": "AUD"
                                },
                                {
                                    "label": "PLN",
                                    "value": "PLN"
                                },
                                {
                                    "label": "DKK",
                                    "value": "DKK"
                                },
                                {
                                    "label": "VND",
                                    "value": "VND"
                                },
                                {
                                    "label": "MYR",
                                    "value": "MYR"
                                },
                                {
                                    "label": "PHP",
                                    "value": "PHP"
                                },
                                {
                                    "label": "TRY",
                                    "value": "TRY"
                                },
                                {
                                    "label": "VEF",
                                    "value": "VEF"
                                }
                            ],
                            "default": "USD",
                            "required": false,
                            "description": "The default currency value. Defaults to \"USD\". If this is set, it will be used as a default currency value for items."
                        },
                        {
                            "key": "items",
                            "type": "string",
                            "label": "Items",
                            "secret": false,
                            "default": "{event.properties}",
                            "required": true,
                            "description": "Item information list related to the event."
                        },
                        {
                            "key": "page_id",
                            "type": "string",
                            "label": "Page ID",
                            "secret": false,
                            "default": "{event.properties.$pathname}",
                            "required": false,
                            "description": "A string value used to uniquely identify a page. For example: \"electronics\", \"categories/12312\", \"azd911d\" or \"/classes/foo/lectures/bar\"."
                        },
                        {
                            "key": "page_identifier_tokens",
                            "type": "dictionary",
                            "label": "Page Identifier Tokens",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "Tokens that can be used to identify a page. Alternative to page_id with a lower priority."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "itemPageView",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Home",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event = '$pageview' and properties.name = 'Home'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "event_id",
                            "type": "string",
                            "label": "Event ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": false,
                            "description": "Unique ID generated by the client to suppress duplicate events. The length should not exceed 128 characters."
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": true,
                            "description": "Timestamp that the event happened at."
                        },
                        {
                            "key": "user_id",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": false,
                            "description": "User Identifier for the platform. The length should not exceed 128 characters."
                        },
                        {
                            "key": "device",
                            "type": "dictionary",
                            "label": "Device",
                            "secret": false,
                            "default": {
                                "ip": "{event.properties.$ip}",
                                "os": "{event.properties.$os}",
                                "ua": "{event.properties.$raw_user_agent}",
                                "model": "{event.properties.$device_model}",
                                "os_version": "{event.properties.$os_version}",
                                "advertising_id": "",
                                "unique_device_id": "{event.properties.$device_id}"
                            },
                            "required": false,
                            "description": "Device information of the event"
                        },
                        {
                            "key": "session_id",
                            "type": "string",
                            "label": "Session ID",
                            "secret": false,
                            "default": "{event.distinct_id}",
                            "required": false,
                            "description": "Identifier for tracking users regardless of sign-in status. The length should not exceed 128 characters."
                        },
                        {
                            "key": "default_currency",
                            "type": "choice",
                            "label": "Default Currency",
                            "secret": false,
                            "choices": [
                                {
                                    "label": "UNKNOWN_CURRENCY",
                                    "value": "UNKNOWN_CURRENCY"
                                },
                                {
                                    "label": "USD",
                                    "value": "USD"
                                },
                                {
                                    "label": "KRW",
                                    "value": "KRW"
                                },
                                {
                                    "label": "JPY",
                                    "value": "JPY"
                                },
                                {
                                    "label": "EUR",
                                    "value": "EUR"
                                },
                                {
                                    "label": "GBP",
                                    "value": "GBP"
                                },
                                {
                                    "label": "SEK",
                                    "value": "SEK"
                                },
                                {
                                    "label": "INR",
                                    "value": "INR"
                                },
                                {
                                    "label": "THB",
                                    "value": "THB"
                                },
                                {
                                    "label": "IDR",
                                    "value": "IDR"
                                },
                                {
                                    "label": "CNY",
                                    "value": "CNY"
                                },
                                {
                                    "label": "CAD",
                                    "value": "CAD"
                                },
                                {
                                    "label": "RUB",
                                    "value": "RUB"
                                },
                                {
                                    "label": "BRL",
                                    "value": "BRL"
                                },
                                {
                                    "label": "SGD",
                                    "value": "SGD"
                                },
                                {
                                    "label": "HKD",
                                    "value": "HKD"
                                },
                                {
                                    "label": "AUD",
                                    "value": "AUD"
                                },
                                {
                                    "label": "PLN",
                                    "value": "PLN"
                                },
                                {
                                    "label": "DKK",
                                    "value": "DKK"
                                },
                                {
                                    "label": "VND",
                                    "value": "VND"
                                },
                                {
                                    "label": "MYR",
                                    "value": "MYR"
                                },
                                {
                                    "label": "PHP",
                                    "value": "PHP"
                                },
                                {
                                    "label": "TRY",
                                    "value": "TRY"
                                },
                                {
                                    "label": "VEF",
                                    "value": "VEF"
                                }
                            ],
                            "default": "USD",
                            "required": false,
                            "description": "The default currency value. Defaults to \"USD\". If this is set, it will be used as a default currency value for items."
                        },
                        {
                            "key": "items",
                            "type": "string",
                            "label": "Items",
                            "secret": false,
                            "default": "{event.properties.products}",
                            "required": false,
                            "description": "Item information list related to the event."
                        },
                        {
                            "key": "page_id",
                            "type": "string",
                            "label": "Page ID",
                            "secret": false,
                            "default": "{event.properties.$pathname}",
                            "required": false,
                            "description": "A string value used to uniquely identify a page. For example: \"electronics\", \"categories/12312\", \"azd911d\" or \"/classes/foo/lectures/bar\"."
                        },
                        {
                            "key": "page_identifier_tokens",
                            "type": "dictionary",
                            "label": "Page Identifier Tokens",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "Tokens that can be used to identify a page. Alternative to page_id with a lower priority."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "home",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Add to Wishlist",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify') and event = 'Product Added to Wishlist'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "event_id",
                            "type": "string",
                            "label": "Event ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": false,
                            "description": "Unique ID generated by the client to suppress duplicate events. The length should not exceed 128 characters."
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": true,
                            "description": "Timestamp that the event happened at."
                        },
                        {
                            "key": "user_id",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": false,
                            "description": "User Identifier for the platform. The length should not exceed 128 characters."
                        },
                        {
                            "key": "device",
                            "type": "dictionary",
                            "label": "Device",
                            "secret": false,
                            "default": {
                                "ip": "{event.properties.$ip}",
                                "os": "{event.properties.$os}",
                                "ua": "{event.properties.$raw_user_agent}",
                                "model": "{event.properties.$device_model}",
                                "os_version": "{event.properties.$os_version}",
                                "advertising_id": "",
                                "unique_device_id": "{event.properties.$device_id}"
                            },
                            "required": false,
                            "description": "Device information of the event"
                        },
                        {
                            "key": "session_id",
                            "type": "string",
                            "label": "Session ID",
                            "secret": false,
                            "default": "{event.distinct_id}",
                            "required": false,
                            "description": "Identifier for tracking users regardless of sign-in status. The length should not exceed 128 characters."
                        },
                        {
                            "key": "default_currency",
                            "type": "choice",
                            "label": "Default Currency",
                            "secret": false,
                            "choices": [
                                {
                                    "label": "UNKNOWN_CURRENCY",
                                    "value": "UNKNOWN_CURRENCY"
                                },
                                {
                                    "label": "USD",
                                    "value": "USD"
                                },
                                {
                                    "label": "KRW",
                                    "value": "KRW"
                                },
                                {
                                    "label": "JPY",
                                    "value": "JPY"
                                },
                                {
                                    "label": "EUR",
                                    "value": "EUR"
                                },
                                {
                                    "label": "GBP",
                                    "value": "GBP"
                                },
                                {
                                    "label": "SEK",
                                    "value": "SEK"
                                },
                                {
                                    "label": "INR",
                                    "value": "INR"
                                },
                                {
                                    "label": "THB",
                                    "value": "THB"
                                },
                                {
                                    "label": "IDR",
                                    "value": "IDR"
                                },
                                {
                                    "label": "CNY",
                                    "value": "CNY"
                                },
                                {
                                    "label": "CAD",
                                    "value": "CAD"
                                },
                                {
                                    "label": "RUB",
                                    "value": "RUB"
                                },
                                {
                                    "label": "BRL",
                                    "value": "BRL"
                                },
                                {
                                    "label": "SGD",
                                    "value": "SGD"
                                },
                                {
                                    "label": "HKD",
                                    "value": "HKD"
                                },
                                {
                                    "label": "AUD",
                                    "value": "AUD"
                                },
                                {
                                    "label": "PLN",
                                    "value": "PLN"
                                },
                                {
                                    "label": "DKK",
                                    "value": "DKK"
                                },
                                {
                                    "label": "VND",
                                    "value": "VND"
                                },
                                {
                                    "label": "MYR",
                                    "value": "MYR"
                                },
                                {
                                    "label": "PHP",
                                    "value": "PHP"
                                },
                                {
                                    "label": "TRY",
                                    "value": "TRY"
                                },
                                {
                                    "label": "VEF",
                                    "value": "VEF"
                                }
                            ],
                            "default": "USD",
                            "required": false,
                            "description": "The default currency value. Defaults to \"USD\". If this is set, it will be used as a default currency value for items."
                        },
                        {
                            "key": "items",
                            "type": "string",
                            "label": "Items",
                            "secret": false,
                            "default": "{event.properties}",
                            "required": true,
                            "description": "Item information list related to the event."
                        },
                        {
                            "key": "revenue",
                            "type": "dictionary",
                            "label": "Revenue",
                            "secret": false,
                            "default": {
                                "price": "{event.properties.revenue}",
                                "currency": "{event.properties.currency}"
                            },
                            "required": false,
                            "description": "Revenue of the event"
                        },
                        {
                            "key": "page_id",
                            "type": "string",
                            "label": "Page ID",
                            "secret": false,
                            "default": "{event.properties.$pathname}",
                            "required": false,
                            "description": "A string value used to uniquely identify a page. For example: \"electronics\", \"categories/12312\", \"azd911d\" or \"/classes/foo/lectures/bar\"."
                        },
                        {
                            "key": "page_identifier_tokens",
                            "type": "dictionary",
                            "label": "Page Identifier Tokens",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "Tokens that can be used to identify a page. Alternative to page_id with a lower priority."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "addToWishlist",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Add to Cart",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify') and event = 'Product Added'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "event_id",
                            "type": "string",
                            "label": "Event ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": false,
                            "description": "Unique ID generated by the client to suppress duplicate events. The length should not exceed 128 characters."
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": true,
                            "description": "Timestamp that the event happened at."
                        },
                        {
                            "key": "user_id",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": false,
                            "description": "User Identifier for the platform. The length should not exceed 128 characters."
                        },
                        {
                            "key": "device",
                            "type": "dictionary",
                            "label": "Device",
                            "secret": false,
                            "default": {
                                "ip": "{event.properties.$ip}",
                                "os": "{event.properties.$os}",
                                "ua": "{event.properties.$raw_user_agent}",
                                "model": "{event.properties.$device_model}",
                                "os_version": "{event.properties.$os_version}",
                                "advertising_id": "",
                                "unique_device_id": "{event.properties.$device_id}"
                            },
                            "required": false,
                            "description": "Device information of the event"
                        },
                        {
                            "key": "session_id",
                            "type": "string",
                            "label": "Session ID",
                            "secret": false,
                            "default": "{event.distinct_id}",
                            "required": false,
                            "description": "Identifier for tracking users regardless of sign-in status. The length should not exceed 128 characters."
                        },
                        {
                            "key": "default_currency",
                            "type": "choice",
                            "label": "Default Currency",
                            "secret": false,
                            "choices": [
                                {
                                    "label": "UNKNOWN_CURRENCY",
                                    "value": "UNKNOWN_CURRENCY"
                                },
                                {
                                    "label": "USD",
                                    "value": "USD"
                                },
                                {
                                    "label": "KRW",
                                    "value": "KRW"
                                },
                                {
                                    "label": "JPY",
                                    "value": "JPY"
                                },
                                {
                                    "label": "EUR",
                                    "value": "EUR"
                                },
                                {
                                    "label": "GBP",
                                    "value": "GBP"
                                },
                                {
                                    "label": "SEK",
                                    "value": "SEK"
                                },
                                {
                                    "label": "INR",
                                    "value": "INR"
                                },
                                {
                                    "label": "THB",
                                    "value": "THB"
                                },
                                {
                                    "label": "IDR",
                                    "value": "IDR"
                                },
                                {
                                    "label": "CNY",
                                    "value": "CNY"
                                },
                                {
                                    "label": "CAD",
                                    "value": "CAD"
                                },
                                {
                                    "label": "RUB",
                                    "value": "RUB"
                                },
                                {
                                    "label": "BRL",
                                    "value": "BRL"
                                },
                                {
                                    "label": "SGD",
                                    "value": "SGD"
                                },
                                {
                                    "label": "HKD",
                                    "value": "HKD"
                                },
                                {
                                    "label": "AUD",
                                    "value": "AUD"
                                },
                                {
                                    "label": "PLN",
                                    "value": "PLN"
                                },
                                {
                                    "label": "DKK",
                                    "value": "DKK"
                                },
                                {
                                    "label": "VND",
                                    "value": "VND"
                                },
                                {
                                    "label": "MYR",
                                    "value": "MYR"
                                },
                                {
                                    "label": "PHP",
                                    "value": "PHP"
                                },
                                {
                                    "label": "TRY",
                                    "value": "TRY"
                                },
                                {
                                    "label": "VEF",
                                    "value": "VEF"
                                }
                            ],
                            "default": "USD",
                            "required": false,
                            "description": "The default currency value. Defaults to \"USD\". If this is set, it will be used as a default currency value for items."
                        },
                        {
                            "key": "items",
                            "type": "string",
                            "label": "Items",
                            "secret": false,
                            "default": "{event.properties}",
                            "required": true,
                            "description": "Item information list related to the event."
                        },
                        {
                            "key": "page_id",
                            "type": "string",
                            "label": "Page ID",
                            "secret": false,
                            "default": "{event.properties.$pathname}",
                            "required": false,
                            "description": "A string value used to uniquely identify a page. For example: \"electronics\", \"categories/12312\", \"azd911d\" or \"/classes/foo/lectures/bar\"."
                        },
                        {
                            "key": "page_identifier_tokens",
                            "type": "dictionary",
                            "label": "Page Identifier Tokens",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "Tokens that can be used to identify a page. Alternative to page_id with a lower priority."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "addToCart",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                }
            ],
            "mappings": null,
            "status": "alpha",
            "free": false,
            "type": "destination",
            "id": "segment-actions-moloco-rmp",
            "name": "Moloco MCM",
            "hog": "return event",
            "inputs_schema": [
                {
                    "key": "platformId",
                    "type": "string",
                    "label": "Platform ID",
                    "secret": false,
                    "required": true,
                    "description": "ID of the platform"
                },
                {
                    "key": "platformName",
                    "type": "string",
                    "label": "Platform Name",
                    "secret": false,
                    "default": "",
                    "required": false,
                    "description": "Name of the platform (default to the `Platform ID`)"
                },
                {
                    "key": "apiKey",
                    "type": "string",
                    "label": "API Key",
                    "secret": true,
                    "required": true,
                    "description": "The API key for the platform"
                },
                {
                    "key": "channel_type",
                    "type": "choice",
                    "label": "Channel Type",
                    "secret": false,
                    "choices": [
                        {
                            "label": "App",
                            "value": "APP"
                        },
                        {
                            "label": "Site",
                            "value": "SITE"
                        }
                    ],
                    "required": true,
                    "description": "Type of channel, either APP or SITE. Defaults to SITE."
                },
                {
                    "key": "debug_mode",
                    "type": "boolean",
                    "label": "Debug Mode",
                    "default": false,
                    "description": "Will log configuration and request details"
                }
            ],
            "category": [],
            "code_language": "hog",
            "description": "Send event data to Moloco MCM",
            "filters": null,
            "masking": null,
            "icon_url": "/static/services/moloco.com.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-monday",
            "name": "Monday",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Productivity"],
            "code_language": "hog",
            "description": "Send events to Monday.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Monday.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-monetate",
            "name": "Monetate",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["A/B Testing & Feature Experimentation"],
            "code_language": "hog",
            "description": "Send events to Monetate.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Monetate.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-mouseflow",
            "name": "Mouseflow",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Heatmap Recording"],
            "code_language": "hog",
            "description": "Send events to Mouseflow.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Mouseflow.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-mousestats",
            "name": "MouseStats",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Heatmap Recording"],
            "code_language": "hog",
            "description": "Send events to MouseStats.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/MouseStats.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-ms-sql-server",
            "name": "MS SQL Server",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Databases & Object Storage"],
            "code_language": "hog",
            "description": "Send events to MS SQL Server.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/MS_SQL_Server.png"
        },
        {
            "mapping_templates": [
                {
                    "name": "Aquisition",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": "$pageview",
                                "type": "events"
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "eventType",
                            "type": "string",
                            "label": "Event Type",
                            "default": "acquisition",
                            "required": true,
                            "description": "The destination's event type"
                        },
                        {
                            "key": "payload",
                            "type": "json",
                            "label": "Payload",
                            "secret": false,
                            "default": {
                                "event": "{event}",
                                "person": "{person}"
                            },
                            "required": true,
                            "description": "Payload sent to the destination."
                        }
                    ]
                },
                {
                    "name": "Conversion",
                    "include_by_default": null,
                    "filters": {
                        "events": [
                            {
                                "id": "$autocapture",
                                "type": "events"
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "eventType",
                            "type": "string",
                            "label": "Event Type",
                            "default": "conversion",
                            "required": true,
                            "description": "The destination's event type"
                        },
                        {
                            "key": "payload",
                            "type": "json",
                            "label": "Payload",
                            "secret": false,
                            "default": {
                                "event": "{event}",
                                "person": "{person}"
                            },
                            "required": true,
                            "description": "Payload sent to the destination."
                        }
                    ]
                },
                {
                    "name": "Retention",
                    "include_by_default": null,
                    "filters": {
                        "events": [
                            {
                                "id": "$pageleave",
                                "type": "events"
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "eventType",
                            "type": "string",
                            "label": "Event Type",
                            "default": "retention",
                            "required": true,
                            "description": "The destination's event type"
                        },
                        {
                            "key": "payload",
                            "type": "json",
                            "label": "Payload",
                            "secret": false,
                            "default": {
                                "event": "{event}",
                                "person": "{person}"
                            },
                            "required": true,
                            "description": "Payload sent to the destination."
                        }
                    ]
                }
            ],
            "mappings": null,
            "status": "beta",
            "free": true,
            "type": "site_destination",
            "id": "template-blank-site-destination",
            "name": "New client-side destination",
            "hog": "export async function onLoad({ inputs, posthog }) {\n    console.log('🦔 Loading (takes 1 sec)', { inputs })\n    // onEvent will not be called until this function resolves\n    await new Promise((resolve) => window.setTimeout(resolve, 1000))\n    console.log(\"🦔 Script loaded\")\n}\nexport function onEvent({ inputs, posthog }) {\n    console.log(`🦔 Sending event of type ${inputs.eventType}`, inputs.payload)\n    // fetch('url', { method: 'POST', body: JSON.stringify(inputs.payload) })\n}",
            "inputs_schema": [
                {
                    "key": "name",
                    "type": "string",
                    "label": "Name",
                    "default": "Max",
                    "description": "What's your name?"
                },
                {
                    "key": "userId",
                    "type": "string",
                    "label": "User ID",
                    "secret": false,
                    "default": "{event.distinct_id}",
                    "required": true,
                    "description": "User ID"
                },
                {
                    "key": "additionalProperties",
                    "type": "json",
                    "label": "Additional properties",
                    "secret": false,
                    "default": {
                        "email": "{person.properties.email}",
                        "browser": "{event.properties.$browser}"
                    },
                    "required": true,
                    "description": "Additional properties for the Exported Object."
                }
            ],
            "category": ["Custom", "Analytics"],
            "code_language": "javascript",
            "description": "New destination with complex event mapping. Works only with posthog-js when opt_in_site_apps is set to true.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/hedgehog/builder-hog-01.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-new-relic",
            "name": "New Relic",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Error Reporting & Monitoring"],
            "code_language": "hog",
            "description": "Send events to New Relic.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/New_Relic.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-nielsen-dcr",
            "name": "Nielsen DCR",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Attribution Platforms"],
            "code_language": "hog",
            "description": "Send events to Nielsen DCR.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Nielsen_DCR.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-ninetailed",
            "name": "Ninetailed",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["A/B Testing & Feature Experimentation"],
            "code_language": "hog",
            "description": "Send events to Ninetailed.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Ninetailed.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-olark",
            "name": "Olark",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Customer Service"],
            "code_language": "hog",
            "description": "Send events to Olark.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Olark.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-ometria",
            "name": "Ometria",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Marketing"],
            "code_language": "hog",
            "description": "Send events to Ometria.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Ometria.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-onesignal",
            "name": "OneSignal",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Marketing"],
            "code_language": "hog",
            "description": "Send events to OneSignal.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/OneSignal.svg"
        },
        {
            "mapping_templates": [
                {
                    "name": "Product Viewed",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify') and event = 'Product Viewed'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "user_identifiers",
                            "type": "dictionary",
                            "label": "User identifiers",
                            "secret": false,
                            "default": {
                                "email": "{event.properties.email ?? person.properties.email}",
                                "userId": "{person.id}",
                                "fs_user_id": "{person.id}",
                                "anonymousId": "{event.distinct_id}",
                                "web_user_id": "{person.id}",
                                "optimizely_vuid": "{event.properties.optimizely_vuid ?? person.properties.optimizely_vuid}"
                            },
                            "required": true,
                            "description": "User identifier details to send to Optimizely. "
                        },
                        {
                            "key": "event_type",
                            "type": "string",
                            "label": "Optimizely Event Type",
                            "secret": false,
                            "default": "product",
                            "required": false,
                            "description": "The Optimizely Event Type. Defaults to \"custom\" if not provided"
                        },
                        {
                            "key": "event_action",
                            "type": "string",
                            "label": "Optimizely Event Action",
                            "secret": false,
                            "default": "detail",
                            "required": true,
                            "description": "The name of the Optimizely Event Action."
                        },
                        {
                            "key": "products",
                            "type": "string",
                            "label": "Product details",
                            "secret": false,
                            "default": "{event.properties}",
                            "required": false,
                            "description": "Product details to associate with the event. Product ID field is required for each product"
                        },
                        {
                            "key": "order_id",
                            "type": "string",
                            "label": "Order ID",
                            "secret": false,
                            "default": "{event.properties.order_id}",
                            "required": false,
                            "description": "Identifier for the order"
                        },
                        {
                            "key": "total",
                            "type": "string",
                            "label": "Order Total",
                            "secret": false,
                            "default": "{event.properties.total}",
                            "required": false,
                            "description": "Total value of the order"
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": true,
                            "description": "Event timestamp"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "customEvent",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Product Added",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify') and event = 'Product Added'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "user_identifiers",
                            "type": "dictionary",
                            "label": "User identifiers",
                            "secret": false,
                            "default": {
                                "email": "{event.properties.email ?? person.properties.email}",
                                "userId": "{person.id}",
                                "fs_user_id": "{person.id}",
                                "anonymousId": "{event.distinct_id}",
                                "web_user_id": "{person.id}",
                                "optimizely_vuid": "{event.properties.optimizely_vuid ?? person.properties.optimizely_vuid}"
                            },
                            "required": true,
                            "description": "User identifier details to send to Optimizely. "
                        },
                        {
                            "key": "event_type",
                            "type": "string",
                            "label": "Optimizely Event Type",
                            "secret": false,
                            "default": "product",
                            "required": false,
                            "description": "The Optimizely Event Type. Defaults to \"custom\" if not provided"
                        },
                        {
                            "key": "event_action",
                            "type": "string",
                            "label": "Optimizely Event Action",
                            "secret": false,
                            "default": "add_to_cart",
                            "required": true,
                            "description": "The name of the Optimizely Event Action."
                        },
                        {
                            "key": "products",
                            "type": "string",
                            "label": "Product details",
                            "secret": false,
                            "default": "{event.properties}",
                            "required": false,
                            "description": "Product details to associate with the event. Product ID field is required for each product"
                        },
                        {
                            "key": "order_id",
                            "type": "string",
                            "label": "Order ID",
                            "secret": false,
                            "default": "{event.properties.order_id}",
                            "required": false,
                            "description": "Identifier for the order"
                        },
                        {
                            "key": "total",
                            "type": "string",
                            "label": "Order Total",
                            "secret": false,
                            "default": "{event.properties.total}",
                            "required": false,
                            "description": "Total value of the order"
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": true,
                            "description": "Event timestamp"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "customEvent",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Product Removed",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify') and event = 'Product Removed'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "user_identifiers",
                            "type": "dictionary",
                            "label": "User identifiers",
                            "secret": false,
                            "default": {
                                "email": "{event.properties.email ?? person.properties.email}",
                                "userId": "{person.id}",
                                "fs_user_id": "{person.id}",
                                "anonymousId": "{event.distinct_id}",
                                "web_user_id": "{person.id}",
                                "optimizely_vuid": "{event.properties.optimizely_vuid ?? person.properties.optimizely_vuid}"
                            },
                            "required": true,
                            "description": "User identifier details to send to Optimizely. "
                        },
                        {
                            "key": "event_type",
                            "type": "string",
                            "label": "Optimizely Event Type",
                            "secret": false,
                            "default": "product",
                            "required": false,
                            "description": "The Optimizely Event Type. Defaults to \"custom\" if not provided"
                        },
                        {
                            "key": "event_action",
                            "type": "string",
                            "label": "Optimizely Event Action",
                            "secret": false,
                            "default": "remove_from_cart",
                            "required": true,
                            "description": "The name of the Optimizely Event Action."
                        },
                        {
                            "key": "products",
                            "type": "string",
                            "label": "Product details",
                            "secret": false,
                            "default": "{event.properties}",
                            "required": false,
                            "description": "Product details to associate with the event. Product ID field is required for each product"
                        },
                        {
                            "key": "order_id",
                            "type": "string",
                            "label": "Order ID",
                            "secret": false,
                            "default": "{event.properties.order_id}",
                            "required": false,
                            "description": "Identifier for the order"
                        },
                        {
                            "key": "total",
                            "type": "string",
                            "label": "Order Total",
                            "secret": false,
                            "default": "{event.properties.total}",
                            "required": false,
                            "description": "Total value of the order"
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": true,
                            "description": "Event timestamp"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "customEvent",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Order Completed",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify') and event = 'Order Completed'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "user_identifiers",
                            "type": "dictionary",
                            "label": "User identifiers",
                            "secret": false,
                            "default": {
                                "email": "{event.properties.email ?? person.properties.email}",
                                "userId": "{person.id}",
                                "fs_user_id": "{person.id}",
                                "anonymousId": "{event.distinct_id}",
                                "web_user_id": "{person.id}",
                                "optimizely_vuid": "{event.properties.optimizely_vuid ?? person.properties.optimizely_vuid}"
                            },
                            "required": true,
                            "description": "User identifier details to send to Optimizely. "
                        },
                        {
                            "key": "event_type",
                            "type": "string",
                            "label": "Optimizely Event Type",
                            "secret": false,
                            "default": "order",
                            "required": false,
                            "description": "The Optimizely Event Type. Defaults to \"custom\" if not provided"
                        },
                        {
                            "key": "event_action",
                            "type": "string",
                            "label": "Optimizely Event Action",
                            "secret": false,
                            "default": "purchase",
                            "required": true,
                            "description": "The name of the Optimizely Event Action."
                        },
                        {
                            "key": "products",
                            "type": "string",
                            "label": "Product details",
                            "secret": false,
                            "default": "{event.properties.products}",
                            "required": false,
                            "description": "Product details to associate with the event. Product ID field is required for each product"
                        },
                        {
                            "key": "order_id",
                            "type": "string",
                            "label": "Order ID",
                            "secret": false,
                            "default": "{event.properties.order_id}",
                            "required": false,
                            "description": "Identifier for the order"
                        },
                        {
                            "key": "total",
                            "type": "string",
                            "label": "Order Total",
                            "secret": false,
                            "default": "{event.properties.total}",
                            "required": false,
                            "description": "Total value of the order"
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": true,
                            "description": "Event timestamp"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "customEvent",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Email Sent",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify') and event = 'Email Sent'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "user_identifiers",
                            "type": "dictionary",
                            "label": "User identifiers",
                            "secret": false,
                            "default": {
                                "email": "{event.properties.email ?? person.properties.email}",
                                "userId": "{person.id}",
                                "fs_user_id": "{person.id}",
                                "anonymousId": "{event.distinct_id}",
                                "web_user_id": "{person.id}",
                                "optimizely_vuid": "{event.properties.optimizely_vuid ?? person.properties.optimizely_vuid}"
                            },
                            "required": true,
                            "description": "User identifier details to send to Optimizely. "
                        },
                        {
                            "key": "event_action",
                            "type": "string",
                            "label": "Optimizely Event Action",
                            "secret": false,
                            "default": "sent",
                            "required": true,
                            "description": "The name of the Optimizely Event Action."
                        },
                        {
                            "key": "campaign",
                            "type": "string",
                            "label": "Campaign Name",
                            "secret": false,
                            "default": "{event.properties.campaign_name}",
                            "required": true,
                            "description": "The campaign name"
                        },
                        {
                            "key": "campaign_id",
                            "type": "string",
                            "label": "Campaign ID",
                            "secret": false,
                            "default": "{event.properties.campaign_id}",
                            "required": false,
                            "description": "The campaign unique identifier"
                        },
                        {
                            "key": "link_url",
                            "type": "string",
                            "label": "Link URL",
                            "secret": false,
                            "default": "{event.properties.link_url}",
                            "required": false,
                            "description": "URL of the link which was clicked"
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": true,
                            "description": "Event timestamp"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "emailEvent",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Email Link Clicked",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify') and event = 'Email Link Clicked'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "user_identifiers",
                            "type": "dictionary",
                            "label": "User identifiers",
                            "secret": false,
                            "default": {
                                "email": "{event.properties.email ?? person.properties.email}",
                                "userId": "{person.id}",
                                "fs_user_id": "{person.id}",
                                "anonymousId": "{event.distinct_id}",
                                "web_user_id": "{person.id}",
                                "optimizely_vuid": "{event.properties.optimizely_vuid ?? person.properties.optimizely_vuid}"
                            },
                            "required": true,
                            "description": "User identifier details to send to Optimizely. "
                        },
                        {
                            "key": "event_action",
                            "type": "string",
                            "label": "Optimizely Event Action",
                            "secret": false,
                            "default": "click",
                            "required": true,
                            "description": "The name of the Optimizely Event Action."
                        },
                        {
                            "key": "campaign",
                            "type": "string",
                            "label": "Campaign Name",
                            "secret": false,
                            "default": "{event.properties.campaign_name}",
                            "required": true,
                            "description": "The campaign name"
                        },
                        {
                            "key": "campaign_id",
                            "type": "string",
                            "label": "Campaign ID",
                            "secret": false,
                            "default": "{event.properties.campaign_id}",
                            "required": false,
                            "description": "The campaign unique identifier"
                        },
                        {
                            "key": "link_url",
                            "type": "string",
                            "label": "Link URL",
                            "secret": false,
                            "default": "{event.properties.link_url}",
                            "required": false,
                            "description": "URL of the link which was clicked"
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": true,
                            "description": "Event timestamp"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "emailEvent",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Email Opened",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify') and event = 'Email Opened'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "user_identifiers",
                            "type": "dictionary",
                            "label": "User identifiers",
                            "secret": false,
                            "default": {
                                "email": "{event.properties.email ?? person.properties.email}",
                                "userId": "{person.id}",
                                "fs_user_id": "{person.id}",
                                "anonymousId": "{event.distinct_id}",
                                "web_user_id": "{person.id}",
                                "optimizely_vuid": "{event.properties.optimizely_vuid ?? person.properties.optimizely_vuid}"
                            },
                            "required": true,
                            "description": "User identifier details to send to Optimizely. "
                        },
                        {
                            "key": "event_action",
                            "type": "string",
                            "label": "Optimizely Event Action",
                            "secret": false,
                            "default": "open",
                            "required": true,
                            "description": "The name of the Optimizely Event Action."
                        },
                        {
                            "key": "campaign",
                            "type": "string",
                            "label": "Campaign Name",
                            "secret": false,
                            "default": "{event.properties.campaign_name}",
                            "required": true,
                            "description": "The campaign name"
                        },
                        {
                            "key": "campaign_id",
                            "type": "string",
                            "label": "Campaign ID",
                            "secret": false,
                            "default": "{event.properties.campaign_id}",
                            "required": false,
                            "description": "The campaign unique identifier"
                        },
                        {
                            "key": "link_url",
                            "type": "string",
                            "label": "Link URL",
                            "secret": false,
                            "default": "{event.properties.link_url}",
                            "required": false,
                            "description": "URL of the link which was clicked"
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": true,
                            "description": "Event timestamp"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "emailEvent",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Unsubscribed",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify') and event = 'Unsubscribed'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "user_identifiers",
                            "type": "dictionary",
                            "label": "User identifiers",
                            "secret": false,
                            "default": {
                                "email": "{event.properties.email ?? person.properties.email}",
                                "userId": "{person.id}",
                                "fs_user_id": "{person.id}",
                                "anonymousId": "{event.distinct_id}",
                                "web_user_id": "{person.id}",
                                "optimizely_vuid": "{event.properties.optimizely_vuid ?? person.properties.optimizely_vuid}"
                            },
                            "required": true,
                            "description": "User identifier details to send to Optimizely. "
                        },
                        {
                            "key": "event_action",
                            "type": "string",
                            "label": "Optimizely Event Action",
                            "secret": false,
                            "default": "unsubscribe",
                            "required": true,
                            "description": "The name of the Optimizely Event Action."
                        },
                        {
                            "key": "campaign",
                            "type": "string",
                            "label": "Campaign Name",
                            "secret": false,
                            "default": "{event.properties.campaign_name}",
                            "required": true,
                            "description": "The campaign name"
                        },
                        {
                            "key": "campaign_id",
                            "type": "string",
                            "label": "Campaign ID",
                            "secret": false,
                            "default": "{event.properties.campaign_id}",
                            "required": false,
                            "description": "The campaign unique identifier"
                        },
                        {
                            "key": "link_url",
                            "type": "string",
                            "label": "Link URL",
                            "secret": false,
                            "default": "{event.properties.link_url}",
                            "required": false,
                            "description": "URL of the link which was clicked"
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": true,
                            "description": "Event timestamp"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "emailEvent",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Email Marked as Spam",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify') and event = 'Email Marked as Spam'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "user_identifiers",
                            "type": "dictionary",
                            "label": "User identifiers",
                            "secret": false,
                            "default": {
                                "email": "{event.properties.email ?? person.properties.email}",
                                "userId": "{person.id}",
                                "fs_user_id": "{person.id}",
                                "anonymousId": "{event.distinct_id}",
                                "web_user_id": "{person.id}",
                                "optimizely_vuid": "{event.properties.optimizely_vuid ?? person.properties.optimizely_vuid}"
                            },
                            "required": true,
                            "description": "User identifier details to send to Optimizely. "
                        },
                        {
                            "key": "event_action",
                            "type": "string",
                            "label": "Optimizely Event Action",
                            "secret": false,
                            "default": "spam_report",
                            "required": true,
                            "description": "The name of the Optimizely Event Action."
                        },
                        {
                            "key": "campaign",
                            "type": "string",
                            "label": "Campaign Name",
                            "secret": false,
                            "default": "{event.properties.campaign_name}",
                            "required": true,
                            "description": "The campaign name"
                        },
                        {
                            "key": "campaign_id",
                            "type": "string",
                            "label": "Campaign ID",
                            "secret": false,
                            "default": "{event.properties.campaign_id}",
                            "required": false,
                            "description": "The campaign unique identifier"
                        },
                        {
                            "key": "link_url",
                            "type": "string",
                            "label": "Link URL",
                            "secret": false,
                            "default": "{event.properties.link_url}",
                            "required": false,
                            "description": "URL of the link which was clicked"
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": true,
                            "description": "Event timestamp"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "emailEvent",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                }
            ],
            "mappings": null,
            "status": "alpha",
            "free": false,
            "type": "destination",
            "id": "segment-actions-optimizely-data-platform",
            "name": "Optimizely Data Platform",
            "hog": "return event",
            "inputs_schema": [
                {
                    "key": "apiKey",
                    "type": "string",
                    "label": "Api Key",
                    "secret": true,
                    "required": true,
                    "description": "Api Key used for Optimizely API authorization when sending events"
                },
                {
                    "key": "region",
                    "type": "choice",
                    "label": "Region",
                    "secret": false,
                    "choices": [
                        {
                            "label": "US",
                            "value": "US"
                        },
                        {
                            "label": "Europe",
                            "value": "EU"
                        },
                        {
                            "label": "Australia",
                            "value": "AU"
                        }
                    ],
                    "default": "US",
                    "required": true,
                    "description": "Optimizely Region to sync data to. Default is US"
                },
                {
                    "key": "debug_mode",
                    "type": "boolean",
                    "label": "Debug Mode",
                    "default": false,
                    "description": "Will log configuration and request details"
                }
            ],
            "category": [],
            "code_language": "hog",
            "description": "Send event data to Optimizely Data Platform",
            "filters": null,
            "masking": null,
            "icon_url": "/static/services/optimizely.com.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-ortto-autopilot",
            "name": "Ortto (Autopilot)",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Marketing"],
            "code_language": "hog",
            "description": "Send events to Ortto (Autopilot).",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Ortto_Autopilot_.svg"
        },
        {
            "mapping_templates": [
                {
                    "name": "Track Events",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify')",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "action",
                            "type": "string",
                            "label": "Action name",
                            "secret": false,
                            "default": "track",
                            "required": true,
                            "description": "Indicates which action was triggered"
                        },
                        {
                            "key": "event_name",
                            "type": "string",
                            "label": "Event name",
                            "secret": false,
                            "default": "{event.event}",
                            "required": true,
                            "description": "The name of the event that occured"
                        },
                        {
                            "key": "user_id",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": false,
                            "description": "The identifier of the user who performed the event"
                        },
                        {
                            "key": "anonymous_id",
                            "type": "string",
                            "label": "Anonymous ID",
                            "secret": false,
                            "default": "{event.distinct_id}",
                            "required": false,
                            "description": "Anonymous ID of the user"
                        },
                        {
                            "key": "group_id",
                            "type": "string",
                            "label": "Group ID",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "The identifier of the group where user belongs to"
                        },
                        {
                            "key": "email",
                            "type": "string",
                            "label": "Email Address",
                            "secret": false,
                            "default": "{person.properties.email ?? event.properties.email}",
                            "required": false,
                            "description": "Email address of the user who performed the event"
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Event timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": true,
                            "description": "The time the event occured in UTC"
                        },
                        {
                            "key": "properties",
                            "type": "dictionary",
                            "label": "Event properties",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.properties}"
                            },
                            "required": false,
                            "description": "Optional metadata describing the event"
                        },
                        {
                            "key": "context",
                            "type": "dictionary",
                            "label": "Event context",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.context}"
                            },
                            "required": false,
                            "description": "Event context"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "forwardTrackEvent",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Identify Events",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event in ('$identify', '$set')",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "action",
                            "type": "string",
                            "label": "Action name",
                            "secret": false,
                            "default": "identify",
                            "required": true,
                            "description": "Indicates which action was triggered"
                        },
                        {
                            "key": "user_id",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": false,
                            "description": "The identifier of the user"
                        },
                        {
                            "key": "anonymous_id",
                            "type": "string",
                            "label": "Anonymous ID",
                            "secret": false,
                            "default": "{event.distinct_id}",
                            "required": false,
                            "description": "Anonymous ID of the user"
                        },
                        {
                            "key": "email",
                            "type": "string",
                            "label": "Email Address",
                            "secret": false,
                            "default": "{person.properties.email}",
                            "required": true,
                            "description": "Email address of the user who performed the event"
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Event timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": true,
                            "description": "The time the event occured in UTC"
                        },
                        {
                            "key": "traits",
                            "type": "dictionary",
                            "label": "User traits",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{person.properties}"
                            },
                            "required": false,
                            "description": "Optional metadata describing the user"
                        },
                        {
                            "key": "context",
                            "type": "dictionary",
                            "label": "Event context",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.context}"
                            },
                            "required": false,
                            "description": "Event context"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "forwardIdentifyEvent",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Group Events",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event = '$groupidentify'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "action",
                            "type": "string",
                            "label": "Action name",
                            "secret": false,
                            "default": "group",
                            "required": true,
                            "description": "Indicates which action was triggered"
                        },
                        {
                            "key": "user_id",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": false,
                            "description": "The identifier of the user"
                        },
                        {
                            "key": "anonymous_id",
                            "type": "string",
                            "label": "Anonymous ID",
                            "secret": false,
                            "default": "{event.distinct_id}",
                            "required": false,
                            "description": "Anonymous ID of the user"
                        },
                        {
                            "key": "group_id",
                            "type": "string",
                            "label": "Group ID",
                            "secret": false,
                            "default": "{event.groupId}",
                            "required": false,
                            "description": "ID of the group"
                        },
                        {
                            "key": "group_name",
                            "type": "string",
                            "label": "Group name",
                            "secret": false,
                            "default": "{person.properties.name}",
                            "required": false,
                            "description": "Name of the group where user belongs to"
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Event timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": true,
                            "description": "The time the event occured in UTC"
                        },
                        {
                            "key": "traits",
                            "type": "dictionary",
                            "label": "Group traits",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{person.properties}"
                            },
                            "required": false,
                            "description": "Group traits"
                        },
                        {
                            "key": "context",
                            "type": "dictionary",
                            "label": "Event context",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.context}"
                            },
                            "required": false,
                            "description": "Event context"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "forwardGroupEvent",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                }
            ],
            "mappings": null,
            "status": "alpha",
            "free": false,
            "type": "destination",
            "id": "segment-outfunnel",
            "name": "Outfunnel",
            "hog": "return event",
            "inputs_schema": [
                {
                    "key": "userId",
                    "type": "string",
                    "label": "Outfunnel User Id",
                    "secret": false,
                    "required": true,
                    "description": "Outfunnel User ID. This is found under Account"
                },
                {
                    "key": "apiToken",
                    "type": "string",
                    "label": "API Token",
                    "secret": false,
                    "required": true,
                    "description": "Outfunnel API Token. This is found under Account"
                },
                {
                    "key": "debug_mode",
                    "type": "boolean",
                    "label": "Debug Mode",
                    "default": false,
                    "description": "Will log configuration and request details"
                }
            ],
            "category": [],
            "code_language": "hog",
            "description": "Send event data to Outfunnel",
            "filters": null,
            "masking": null,
            "icon_url": "/static/services/outfunnel.com.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-parse-ly",
            "name": "Parse.ly",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Analytics"],
            "code_language": "hog",
            "description": "Send events to Parse.ly.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Parse.ly.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-pendo",
            "name": "Pendo",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Analytics"],
            "code_language": "hog",
            "description": "Send events to Pendo.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Pendo.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-persistiq-cloud-mode",
            "name": "PersistIQ Cloud Mode",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Marketing"],
            "code_language": "hog",
            "description": "Send events to PersistIQ Cloud Mode.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/PersistIQ_Cloud_Mode.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-pingdom",
            "name": "Pingdom",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Error Reporting & Monitoring"],
            "code_language": "hog",
            "description": "Send events to Pingdom.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Pingdom.svg"
        },
        {
            "mapping_templates": [
                {
                    "name": "Add to Cart",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify') AND event = 'Product Added'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "event_name",
                            "type": "choice",
                            "label": "Event Name",
                            "secret": false,
                            "choices": [
                                {
                                    "label": "Add to Cart",
                                    "value": "add_to_cart"
                                },
                                {
                                    "label": "Checkout",
                                    "value": "checkout"
                                },
                                {
                                    "label": "Lead",
                                    "value": "lead"
                                },
                                {
                                    "label": "Page Visit",
                                    "value": "page_visit"
                                },
                                {
                                    "label": "Search",
                                    "value": "search"
                                },
                                {
                                    "label": "Sign Up",
                                    "value": "signup"
                                },
                                {
                                    "label": "View Category",
                                    "value": "view_category"
                                },
                                {
                                    "label": "Watch Video",
                                    "value": "watch_video"
                                },
                                {
                                    "label": "Custom",
                                    "value": "custom"
                                }
                            ],
                            "default": "add_to_cart",
                            "required": true,
                            "description": "The conversion event type. For custom events, you must use the predefined event name \"custom\". Please refer to the possible event types in [Pinterest API docs](https://developers.pinterest.com/docs/api/v5/#operation/events/create)."
                        },
                        {
                            "key": "action_source",
                            "type": "choice",
                            "label": "Action Source",
                            "secret": false,
                            "choices": [
                                {
                                    "label": "App Android",
                                    "value": "app_android"
                                },
                                {
                                    "label": "App IOS",
                                    "value": "app_ios"
                                },
                                {
                                    "label": "Web",
                                    "value": "web"
                                },
                                {
                                    "label": "Offline",
                                    "value": "offline"
                                }
                            ],
                            "default": "web",
                            "required": true,
                            "description": "The source indicating where the conversion event occurred. This must be app_android, app_ios , web or offline."
                        },
                        {
                            "key": "event_time",
                            "type": "string",
                            "label": "Event Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": true,
                            "description": "Device IDs can be used to add and remove only anonymous users to/from a cohort. However, users with an assigned User ID cannot use Device ID to sync to a cohort."
                        },
                        {
                            "key": "event_id",
                            "type": "string",
                            "label": "Event ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": true,
                            "description": "A unique id string that identifies this event and can be used for deduping between events ingested via both the conversion API and Pinterest tracking."
                        },
                        {
                            "key": "event_source_url",
                            "type": "string",
                            "label": "Event Source URL",
                            "secret": false,
                            "default": "{event.properties.$current_url}",
                            "required": false,
                            "description": "URL of the web conversion event."
                        },
                        {
                            "key": "opt_out",
                            "type": "string",
                            "label": "Opt Out",
                            "secret": false,
                            "default": "true",
                            "required": false,
                            "description": "When action_source is web or offline, it defines whether the user has opted out of tracking for web conversion events. While when action_source is app_android or app_ios, it defines whether the user has enabled Limit Ad Tracking on their iOS device, or opted out of Ads Personalization on their Android device."
                        },
                        {
                            "key": "user_data",
                            "type": "dictionary",
                            "label": "User Data",
                            "secret": false,
                            "default": {
                                "email": "{[event.properties.email ?? person.properties.email]}",
                                "client_ip_address": "{event.properties.$ip}",
                                "client_user_agent": "{event.properties.$raw_user_agent}"
                            },
                            "required": false,
                            "description": "Object containing customer information data. Note, It is required at least one of 1) em, 2) hashed_maids or 3) pair client_ip_address + client_user_agent.."
                        },
                        {
                            "key": "custom_data",
                            "type": "dictionary",
                            "label": "Custom Data",
                            "secret": false,
                            "default": {
                                "value": "{event.properties.price ?? event.properties.value}",
                                "currency": "{event.properties.currency}",
                                "order_id": "{event.properties.order_id}",
                                "search_string": "{event.properties.query}"
                            },
                            "required": false,
                            "description": "Object containing customer information data."
                        },
                        {
                            "key": "app_id",
                            "type": "string",
                            "label": "App ID",
                            "secret": false,
                            "default": "{event.properties.app.id}",
                            "required": false,
                            "description": "The app store app ID."
                        },
                        {
                            "key": "app_name",
                            "type": "string",
                            "label": "App Name",
                            "secret": false,
                            "default": "{event.event.properties.$app_name}",
                            "required": true,
                            "description": "Name of the app. "
                        },
                        {
                            "key": "app_version",
                            "type": "string",
                            "label": "App Version",
                            "secret": false,
                            "default": "{event.event.properties.$app_version}",
                            "required": false,
                            "description": "Version of the app."
                        },
                        {
                            "key": "device_brand",
                            "type": "string",
                            "label": "Device Brand",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "Brand of the user device."
                        },
                        {
                            "key": "device_carrier",
                            "type": "string",
                            "label": "Device Carrier",
                            "secret": false,
                            "default": "{event.properties.device.carrier}",
                            "required": false,
                            "description": "User device’s mobile carrier. "
                        },
                        {
                            "key": "device_model",
                            "type": "string",
                            "label": "Device Model",
                            "secret": false,
                            "default": "{event.properties.$device_model}",
                            "required": false,
                            "description": "Model of the user device."
                        },
                        {
                            "key": "device_type",
                            "type": "string",
                            "label": "Device Type",
                            "secret": false,
                            "default": "{event.properties.$device_type}",
                            "required": false,
                            "description": "Type of the user device."
                        },
                        {
                            "key": "os_version",
                            "type": "string",
                            "label": "OS Version",
                            "secret": false,
                            "default": "{event.properties.$os_version}",
                            "required": false,
                            "description": "Version of the device operating system."
                        },
                        {
                            "key": "wifi",
                            "type": "string",
                            "label": "Wifi",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "Whether the event occurred when the user device was connected to wifi."
                        },
                        {
                            "key": "language",
                            "type": "string",
                            "label": "Language",
                            "secret": false,
                            "required": false,
                            "description": "Two-character ISO-639-1 language code indicating the user's language."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "reportConversionEvent",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Checkout",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify') AND event = 'Checkout'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "event_name",
                            "type": "choice",
                            "label": "Event Name",
                            "secret": false,
                            "choices": [
                                {
                                    "label": "Add to Cart",
                                    "value": "add_to_cart"
                                },
                                {
                                    "label": "Checkout",
                                    "value": "checkout"
                                },
                                {
                                    "label": "Lead",
                                    "value": "lead"
                                },
                                {
                                    "label": "Page Visit",
                                    "value": "page_visit"
                                },
                                {
                                    "label": "Search",
                                    "value": "search"
                                },
                                {
                                    "label": "Sign Up",
                                    "value": "signup"
                                },
                                {
                                    "label": "View Category",
                                    "value": "view_category"
                                },
                                {
                                    "label": "Watch Video",
                                    "value": "watch_video"
                                },
                                {
                                    "label": "Custom",
                                    "value": "custom"
                                }
                            ],
                            "default": "checkout",
                            "required": true,
                            "description": "The conversion event type. For custom events, you must use the predefined event name \"custom\". Please refer to the possible event types in [Pinterest API docs](https://developers.pinterest.com/docs/api/v5/#operation/events/create)."
                        },
                        {
                            "key": "action_source",
                            "type": "choice",
                            "label": "Action Source",
                            "secret": false,
                            "choices": [
                                {
                                    "label": "App Android",
                                    "value": "app_android"
                                },
                                {
                                    "label": "App IOS",
                                    "value": "app_ios"
                                },
                                {
                                    "label": "Web",
                                    "value": "web"
                                },
                                {
                                    "label": "Offline",
                                    "value": "offline"
                                }
                            ],
                            "default": "web",
                            "required": true,
                            "description": "The source indicating where the conversion event occurred. This must be app_android, app_ios , web or offline."
                        },
                        {
                            "key": "event_time",
                            "type": "string",
                            "label": "Event Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": true,
                            "description": "Device IDs can be used to add and remove only anonymous users to/from a cohort. However, users with an assigned User ID cannot use Device ID to sync to a cohort."
                        },
                        {
                            "key": "event_id",
                            "type": "string",
                            "label": "Event ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": true,
                            "description": "A unique id string that identifies this event and can be used for deduping between events ingested via both the conversion API and Pinterest tracking."
                        },
                        {
                            "key": "event_source_url",
                            "type": "string",
                            "label": "Event Source URL",
                            "secret": false,
                            "default": "{event.properties.$current_url}",
                            "required": false,
                            "description": "URL of the web conversion event."
                        },
                        {
                            "key": "opt_out",
                            "type": "string",
                            "label": "Opt Out",
                            "secret": false,
                            "default": "true",
                            "required": false,
                            "description": "When action_source is web or offline, it defines whether the user has opted out of tracking for web conversion events. While when action_source is app_android or app_ios, it defines whether the user has enabled Limit Ad Tracking on their iOS device, or opted out of Ads Personalization on their Android device."
                        },
                        {
                            "key": "user_data",
                            "type": "dictionary",
                            "label": "User Data",
                            "secret": false,
                            "default": {
                                "email": "{[event.properties.email ?? person.properties.email]}",
                                "client_ip_address": "{event.properties.$ip}",
                                "client_user_agent": "{event.properties.$raw_user_agent}"
                            },
                            "required": false,
                            "description": "Object containing customer information data. Note, It is required at least one of 1) em, 2) hashed_maids or 3) pair client_ip_address + client_user_agent.."
                        },
                        {
                            "key": "custom_data",
                            "type": "dictionary",
                            "label": "Custom Data",
                            "secret": false,
                            "default": {
                                "value": "{event.properties.price ?? event.properties.value}",
                                "currency": "{event.properties.currency}",
                                "order_id": "{event.properties.order_id}",
                                "search_string": "{event.properties.query}"
                            },
                            "required": false,
                            "description": "Object containing customer information data."
                        },
                        {
                            "key": "app_id",
                            "type": "string",
                            "label": "App ID",
                            "secret": false,
                            "default": "{event.properties.app.id}",
                            "required": false,
                            "description": "The app store app ID."
                        },
                        {
                            "key": "app_name",
                            "type": "string",
                            "label": "App Name",
                            "secret": false,
                            "default": "{event.event.properties.$app_name}",
                            "required": true,
                            "description": "Name of the app. "
                        },
                        {
                            "key": "app_version",
                            "type": "string",
                            "label": "App Version",
                            "secret": false,
                            "default": "{event.event.properties.$app_version}",
                            "required": false,
                            "description": "Version of the app."
                        },
                        {
                            "key": "device_brand",
                            "type": "string",
                            "label": "Device Brand",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "Brand of the user device."
                        },
                        {
                            "key": "device_carrier",
                            "type": "string",
                            "label": "Device Carrier",
                            "secret": false,
                            "default": "{event.properties.device.carrier}",
                            "required": false,
                            "description": "User device’s mobile carrier. "
                        },
                        {
                            "key": "device_model",
                            "type": "string",
                            "label": "Device Model",
                            "secret": false,
                            "default": "{event.properties.$device_model}",
                            "required": false,
                            "description": "Model of the user device."
                        },
                        {
                            "key": "device_type",
                            "type": "string",
                            "label": "Device Type",
                            "secret": false,
                            "default": "{event.properties.$device_type}",
                            "required": false,
                            "description": "Type of the user device."
                        },
                        {
                            "key": "os_version",
                            "type": "string",
                            "label": "OS Version",
                            "secret": false,
                            "default": "{event.properties.$os_version}",
                            "required": false,
                            "description": "Version of the device operating system."
                        },
                        {
                            "key": "wifi",
                            "type": "string",
                            "label": "Wifi",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "Whether the event occurred when the user device was connected to wifi."
                        },
                        {
                            "key": "language",
                            "type": "string",
                            "label": "Language",
                            "secret": false,
                            "required": false,
                            "description": "Two-character ISO-639-1 language code indicating the user's language."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "reportConversionEvent",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Lead",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify') AND event = 'Generate Lead'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "event_name",
                            "type": "choice",
                            "label": "Event Name",
                            "secret": false,
                            "choices": [
                                {
                                    "label": "Add to Cart",
                                    "value": "add_to_cart"
                                },
                                {
                                    "label": "Checkout",
                                    "value": "checkout"
                                },
                                {
                                    "label": "Lead",
                                    "value": "lead"
                                },
                                {
                                    "label": "Page Visit",
                                    "value": "page_visit"
                                },
                                {
                                    "label": "Search",
                                    "value": "search"
                                },
                                {
                                    "label": "Sign Up",
                                    "value": "signup"
                                },
                                {
                                    "label": "View Category",
                                    "value": "view_category"
                                },
                                {
                                    "label": "Watch Video",
                                    "value": "watch_video"
                                },
                                {
                                    "label": "Custom",
                                    "value": "custom"
                                }
                            ],
                            "default": "lead",
                            "required": true,
                            "description": "The conversion event type. For custom events, you must use the predefined event name \"custom\". Please refer to the possible event types in [Pinterest API docs](https://developers.pinterest.com/docs/api/v5/#operation/events/create)."
                        },
                        {
                            "key": "action_source",
                            "type": "choice",
                            "label": "Action Source",
                            "secret": false,
                            "choices": [
                                {
                                    "label": "App Android",
                                    "value": "app_android"
                                },
                                {
                                    "label": "App IOS",
                                    "value": "app_ios"
                                },
                                {
                                    "label": "Web",
                                    "value": "web"
                                },
                                {
                                    "label": "Offline",
                                    "value": "offline"
                                }
                            ],
                            "default": "web",
                            "required": true,
                            "description": "The source indicating where the conversion event occurred. This must be app_android, app_ios , web or offline."
                        },
                        {
                            "key": "event_time",
                            "type": "string",
                            "label": "Event Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": true,
                            "description": "Device IDs can be used to add and remove only anonymous users to/from a cohort. However, users with an assigned User ID cannot use Device ID to sync to a cohort."
                        },
                        {
                            "key": "event_id",
                            "type": "string",
                            "label": "Event ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": true,
                            "description": "A unique id string that identifies this event and can be used for deduping between events ingested via both the conversion API and Pinterest tracking."
                        },
                        {
                            "key": "event_source_url",
                            "type": "string",
                            "label": "Event Source URL",
                            "secret": false,
                            "default": "{event.properties.$current_url}",
                            "required": false,
                            "description": "URL of the web conversion event."
                        },
                        {
                            "key": "opt_out",
                            "type": "string",
                            "label": "Opt Out",
                            "secret": false,
                            "default": "true",
                            "required": false,
                            "description": "When action_source is web or offline, it defines whether the user has opted out of tracking for web conversion events. While when action_source is app_android or app_ios, it defines whether the user has enabled Limit Ad Tracking on their iOS device, or opted out of Ads Personalization on their Android device."
                        },
                        {
                            "key": "user_data",
                            "type": "dictionary",
                            "label": "User Data",
                            "secret": false,
                            "default": {
                                "email": "{[event.properties.email ?? person.properties.email]}",
                                "client_ip_address": "{event.properties.$ip}",
                                "client_user_agent": "{event.properties.$raw_user_agent}"
                            },
                            "required": false,
                            "description": "Object containing customer information data. Note, It is required at least one of 1) em, 2) hashed_maids or 3) pair client_ip_address + client_user_agent.."
                        },
                        {
                            "key": "custom_data",
                            "type": "dictionary",
                            "label": "Custom Data",
                            "secret": false,
                            "default": {
                                "value": "{event.properties.price ?? event.properties.value}",
                                "currency": "{event.properties.currency}",
                                "order_id": "{event.properties.order_id}",
                                "search_string": "{event.properties.query}"
                            },
                            "required": false,
                            "description": "Object containing customer information data."
                        },
                        {
                            "key": "app_id",
                            "type": "string",
                            "label": "App ID",
                            "secret": false,
                            "default": "{event.properties.app.id}",
                            "required": false,
                            "description": "The app store app ID."
                        },
                        {
                            "key": "app_name",
                            "type": "string",
                            "label": "App Name",
                            "secret": false,
                            "default": "{event.event.properties.$app_name}",
                            "required": true,
                            "description": "Name of the app. "
                        },
                        {
                            "key": "app_version",
                            "type": "string",
                            "label": "App Version",
                            "secret": false,
                            "default": "{event.event.properties.$app_version}",
                            "required": false,
                            "description": "Version of the app."
                        },
                        {
                            "key": "device_brand",
                            "type": "string",
                            "label": "Device Brand",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "Brand of the user device."
                        },
                        {
                            "key": "device_carrier",
                            "type": "string",
                            "label": "Device Carrier",
                            "secret": false,
                            "default": "{event.properties.device.carrier}",
                            "required": false,
                            "description": "User device’s mobile carrier. "
                        },
                        {
                            "key": "device_model",
                            "type": "string",
                            "label": "Device Model",
                            "secret": false,
                            "default": "{event.properties.$device_model}",
                            "required": false,
                            "description": "Model of the user device."
                        },
                        {
                            "key": "device_type",
                            "type": "string",
                            "label": "Device Type",
                            "secret": false,
                            "default": "{event.properties.$device_type}",
                            "required": false,
                            "description": "Type of the user device."
                        },
                        {
                            "key": "os_version",
                            "type": "string",
                            "label": "OS Version",
                            "secret": false,
                            "default": "{event.properties.$os_version}",
                            "required": false,
                            "description": "Version of the device operating system."
                        },
                        {
                            "key": "wifi",
                            "type": "string",
                            "label": "Wifi",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "Whether the event occurred when the user device was connected to wifi."
                        },
                        {
                            "key": "language",
                            "type": "string",
                            "label": "Language",
                            "secret": false,
                            "required": false,
                            "description": "Two-character ISO-639-1 language code indicating the user's language."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "reportConversionEvent",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Page Visit",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event = '$pageview'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "event_name",
                            "type": "choice",
                            "label": "Event Name",
                            "secret": false,
                            "choices": [
                                {
                                    "label": "Add to Cart",
                                    "value": "add_to_cart"
                                },
                                {
                                    "label": "Checkout",
                                    "value": "checkout"
                                },
                                {
                                    "label": "Lead",
                                    "value": "lead"
                                },
                                {
                                    "label": "Page Visit",
                                    "value": "page_visit"
                                },
                                {
                                    "label": "Search",
                                    "value": "search"
                                },
                                {
                                    "label": "Sign Up",
                                    "value": "signup"
                                },
                                {
                                    "label": "View Category",
                                    "value": "view_category"
                                },
                                {
                                    "label": "Watch Video",
                                    "value": "watch_video"
                                },
                                {
                                    "label": "Custom",
                                    "value": "custom"
                                }
                            ],
                            "default": "page_visit",
                            "required": true,
                            "description": "The conversion event type. For custom events, you must use the predefined event name \"custom\". Please refer to the possible event types in [Pinterest API docs](https://developers.pinterest.com/docs/api/v5/#operation/events/create)."
                        },
                        {
                            "key": "action_source",
                            "type": "choice",
                            "label": "Action Source",
                            "secret": false,
                            "choices": [
                                {
                                    "label": "App Android",
                                    "value": "app_android"
                                },
                                {
                                    "label": "App IOS",
                                    "value": "app_ios"
                                },
                                {
                                    "label": "Web",
                                    "value": "web"
                                },
                                {
                                    "label": "Offline",
                                    "value": "offline"
                                }
                            ],
                            "default": "web",
                            "required": true,
                            "description": "The source indicating where the conversion event occurred. This must be app_android, app_ios , web or offline."
                        },
                        {
                            "key": "event_time",
                            "type": "string",
                            "label": "Event Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": true,
                            "description": "Device IDs can be used to add and remove only anonymous users to/from a cohort. However, users with an assigned User ID cannot use Device ID to sync to a cohort."
                        },
                        {
                            "key": "event_id",
                            "type": "string",
                            "label": "Event ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": true,
                            "description": "A unique id string that identifies this event and can be used for deduping between events ingested via both the conversion API and Pinterest tracking."
                        },
                        {
                            "key": "event_source_url",
                            "type": "string",
                            "label": "Event Source URL",
                            "secret": false,
                            "default": "{event.properties.$current_url}",
                            "required": false,
                            "description": "URL of the web conversion event."
                        },
                        {
                            "key": "opt_out",
                            "type": "string",
                            "label": "Opt Out",
                            "secret": false,
                            "default": "true",
                            "required": false,
                            "description": "When action_source is web or offline, it defines whether the user has opted out of tracking for web conversion events. While when action_source is app_android or app_ios, it defines whether the user has enabled Limit Ad Tracking on their iOS device, or opted out of Ads Personalization on their Android device."
                        },
                        {
                            "key": "user_data",
                            "type": "dictionary",
                            "label": "User Data",
                            "secret": false,
                            "default": {
                                "email": "{[event.properties.email ?? person.properties.email]}",
                                "client_ip_address": "{event.properties.$ip}",
                                "client_user_agent": "{event.properties.$raw_user_agent}"
                            },
                            "required": false,
                            "description": "Object containing customer information data. Note, It is required at least one of 1) em, 2) hashed_maids or 3) pair client_ip_address + client_user_agent.."
                        },
                        {
                            "key": "custom_data",
                            "type": "dictionary",
                            "label": "Custom Data",
                            "secret": false,
                            "default": {
                                "value": "{event.properties.price ?? event.properties.value}",
                                "currency": "{event.properties.currency}",
                                "order_id": "{event.properties.order_id}",
                                "search_string": "{event.properties.query}"
                            },
                            "required": false,
                            "description": "Object containing customer information data."
                        },
                        {
                            "key": "app_id",
                            "type": "string",
                            "label": "App ID",
                            "secret": false,
                            "default": "{event.properties.app.id}",
                            "required": false,
                            "description": "The app store app ID."
                        },
                        {
                            "key": "app_name",
                            "type": "string",
                            "label": "App Name",
                            "secret": false,
                            "default": "{event.event.properties.$app_name}",
                            "required": true,
                            "description": "Name of the app. "
                        },
                        {
                            "key": "app_version",
                            "type": "string",
                            "label": "App Version",
                            "secret": false,
                            "default": "{event.event.properties.$app_version}",
                            "required": false,
                            "description": "Version of the app."
                        },
                        {
                            "key": "device_brand",
                            "type": "string",
                            "label": "Device Brand",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "Brand of the user device."
                        },
                        {
                            "key": "device_carrier",
                            "type": "string",
                            "label": "Device Carrier",
                            "secret": false,
                            "default": "{event.properties.device.carrier}",
                            "required": false,
                            "description": "User device’s mobile carrier. "
                        },
                        {
                            "key": "device_model",
                            "type": "string",
                            "label": "Device Model",
                            "secret": false,
                            "default": "{event.properties.$device_model}",
                            "required": false,
                            "description": "Model of the user device."
                        },
                        {
                            "key": "device_type",
                            "type": "string",
                            "label": "Device Type",
                            "secret": false,
                            "default": "{event.properties.$device_type}",
                            "required": false,
                            "description": "Type of the user device."
                        },
                        {
                            "key": "os_version",
                            "type": "string",
                            "label": "OS Version",
                            "secret": false,
                            "default": "{event.properties.$os_version}",
                            "required": false,
                            "description": "Version of the device operating system."
                        },
                        {
                            "key": "wifi",
                            "type": "string",
                            "label": "Wifi",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "Whether the event occurred when the user device was connected to wifi."
                        },
                        {
                            "key": "language",
                            "type": "string",
                            "label": "Language",
                            "secret": false,
                            "required": false,
                            "description": "Two-character ISO-639-1 language code indicating the user's language."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "reportConversionEvent",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Search",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify') AND event = 'Products Searched'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "event_name",
                            "type": "choice",
                            "label": "Event Name",
                            "secret": false,
                            "choices": [
                                {
                                    "label": "Add to Cart",
                                    "value": "add_to_cart"
                                },
                                {
                                    "label": "Checkout",
                                    "value": "checkout"
                                },
                                {
                                    "label": "Lead",
                                    "value": "lead"
                                },
                                {
                                    "label": "Page Visit",
                                    "value": "page_visit"
                                },
                                {
                                    "label": "Search",
                                    "value": "search"
                                },
                                {
                                    "label": "Sign Up",
                                    "value": "signup"
                                },
                                {
                                    "label": "View Category",
                                    "value": "view_category"
                                },
                                {
                                    "label": "Watch Video",
                                    "value": "watch_video"
                                },
                                {
                                    "label": "Custom",
                                    "value": "custom"
                                }
                            ],
                            "default": "search",
                            "required": true,
                            "description": "The conversion event type. For custom events, you must use the predefined event name \"custom\". Please refer to the possible event types in [Pinterest API docs](https://developers.pinterest.com/docs/api/v5/#operation/events/create)."
                        },
                        {
                            "key": "action_source",
                            "type": "choice",
                            "label": "Action Source",
                            "secret": false,
                            "choices": [
                                {
                                    "label": "App Android",
                                    "value": "app_android"
                                },
                                {
                                    "label": "App IOS",
                                    "value": "app_ios"
                                },
                                {
                                    "label": "Web",
                                    "value": "web"
                                },
                                {
                                    "label": "Offline",
                                    "value": "offline"
                                }
                            ],
                            "default": "web",
                            "required": true,
                            "description": "The source indicating where the conversion event occurred. This must be app_android, app_ios , web or offline."
                        },
                        {
                            "key": "event_time",
                            "type": "string",
                            "label": "Event Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": true,
                            "description": "Device IDs can be used to add and remove only anonymous users to/from a cohort. However, users with an assigned User ID cannot use Device ID to sync to a cohort."
                        },
                        {
                            "key": "event_id",
                            "type": "string",
                            "label": "Event ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": true,
                            "description": "A unique id string that identifies this event and can be used for deduping between events ingested via both the conversion API and Pinterest tracking."
                        },
                        {
                            "key": "event_source_url",
                            "type": "string",
                            "label": "Event Source URL",
                            "secret": false,
                            "default": "{event.properties.$current_url}",
                            "required": false,
                            "description": "URL of the web conversion event."
                        },
                        {
                            "key": "opt_out",
                            "type": "string",
                            "label": "Opt Out",
                            "secret": false,
                            "default": "true",
                            "required": false,
                            "description": "When action_source is web or offline, it defines whether the user has opted out of tracking for web conversion events. While when action_source is app_android or app_ios, it defines whether the user has enabled Limit Ad Tracking on their iOS device, or opted out of Ads Personalization on their Android device."
                        },
                        {
                            "key": "user_data",
                            "type": "dictionary",
                            "label": "User Data",
                            "secret": false,
                            "default": {
                                "email": "{[event.properties.email ?? person.properties.email]}",
                                "client_ip_address": "{event.properties.$ip}",
                                "client_user_agent": "{event.properties.$raw_user_agent}"
                            },
                            "required": false,
                            "description": "Object containing customer information data. Note, It is required at least one of 1) em, 2) hashed_maids or 3) pair client_ip_address + client_user_agent.."
                        },
                        {
                            "key": "custom_data",
                            "type": "dictionary",
                            "label": "Custom Data",
                            "secret": false,
                            "default": {
                                "value": "{event.properties.price ?? event.properties.value}",
                                "currency": "{event.properties.currency}",
                                "order_id": "{event.properties.order_id}",
                                "search_string": "{event.properties.query}"
                            },
                            "required": false,
                            "description": "Object containing customer information data."
                        },
                        {
                            "key": "app_id",
                            "type": "string",
                            "label": "App ID",
                            "secret": false,
                            "default": "{event.properties.app.id}",
                            "required": false,
                            "description": "The app store app ID."
                        },
                        {
                            "key": "app_name",
                            "type": "string",
                            "label": "App Name",
                            "secret": false,
                            "default": "{event.event.properties.$app_name}",
                            "required": true,
                            "description": "Name of the app. "
                        },
                        {
                            "key": "app_version",
                            "type": "string",
                            "label": "App Version",
                            "secret": false,
                            "default": "{event.event.properties.$app_version}",
                            "required": false,
                            "description": "Version of the app."
                        },
                        {
                            "key": "device_brand",
                            "type": "string",
                            "label": "Device Brand",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "Brand of the user device."
                        },
                        {
                            "key": "device_carrier",
                            "type": "string",
                            "label": "Device Carrier",
                            "secret": false,
                            "default": "{event.properties.device.carrier}",
                            "required": false,
                            "description": "User device’s mobile carrier. "
                        },
                        {
                            "key": "device_model",
                            "type": "string",
                            "label": "Device Model",
                            "secret": false,
                            "default": "{event.properties.$device_model}",
                            "required": false,
                            "description": "Model of the user device."
                        },
                        {
                            "key": "device_type",
                            "type": "string",
                            "label": "Device Type",
                            "secret": false,
                            "default": "{event.properties.$device_type}",
                            "required": false,
                            "description": "Type of the user device."
                        },
                        {
                            "key": "os_version",
                            "type": "string",
                            "label": "OS Version",
                            "secret": false,
                            "default": "{event.properties.$os_version}",
                            "required": false,
                            "description": "Version of the device operating system."
                        },
                        {
                            "key": "wifi",
                            "type": "string",
                            "label": "Wifi",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "Whether the event occurred when the user device was connected to wifi."
                        },
                        {
                            "key": "language",
                            "type": "string",
                            "label": "Language",
                            "secret": false,
                            "required": false,
                            "description": "Two-character ISO-639-1 language code indicating the user's language."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "reportConversionEvent",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Sign Up",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify') AND event = 'Signed Up'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "event_name",
                            "type": "choice",
                            "label": "Event Name",
                            "secret": false,
                            "choices": [
                                {
                                    "label": "Add to Cart",
                                    "value": "add_to_cart"
                                },
                                {
                                    "label": "Checkout",
                                    "value": "checkout"
                                },
                                {
                                    "label": "Lead",
                                    "value": "lead"
                                },
                                {
                                    "label": "Page Visit",
                                    "value": "page_visit"
                                },
                                {
                                    "label": "Search",
                                    "value": "search"
                                },
                                {
                                    "label": "Sign Up",
                                    "value": "signup"
                                },
                                {
                                    "label": "View Category",
                                    "value": "view_category"
                                },
                                {
                                    "label": "Watch Video",
                                    "value": "watch_video"
                                },
                                {
                                    "label": "Custom",
                                    "value": "custom"
                                }
                            ],
                            "default": "signup",
                            "required": true,
                            "description": "The conversion event type. For custom events, you must use the predefined event name \"custom\". Please refer to the possible event types in [Pinterest API docs](https://developers.pinterest.com/docs/api/v5/#operation/events/create)."
                        },
                        {
                            "key": "action_source",
                            "type": "choice",
                            "label": "Action Source",
                            "secret": false,
                            "choices": [
                                {
                                    "label": "App Android",
                                    "value": "app_android"
                                },
                                {
                                    "label": "App IOS",
                                    "value": "app_ios"
                                },
                                {
                                    "label": "Web",
                                    "value": "web"
                                },
                                {
                                    "label": "Offline",
                                    "value": "offline"
                                }
                            ],
                            "default": "web",
                            "required": true,
                            "description": "The source indicating where the conversion event occurred. This must be app_android, app_ios , web or offline."
                        },
                        {
                            "key": "event_time",
                            "type": "string",
                            "label": "Event Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": true,
                            "description": "Device IDs can be used to add and remove only anonymous users to/from a cohort. However, users with an assigned User ID cannot use Device ID to sync to a cohort."
                        },
                        {
                            "key": "event_id",
                            "type": "string",
                            "label": "Event ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": true,
                            "description": "A unique id string that identifies this event and can be used for deduping between events ingested via both the conversion API and Pinterest tracking."
                        },
                        {
                            "key": "event_source_url",
                            "type": "string",
                            "label": "Event Source URL",
                            "secret": false,
                            "default": "{event.properties.$current_url}",
                            "required": false,
                            "description": "URL of the web conversion event."
                        },
                        {
                            "key": "opt_out",
                            "type": "string",
                            "label": "Opt Out",
                            "secret": false,
                            "default": "true",
                            "required": false,
                            "description": "When action_source is web or offline, it defines whether the user has opted out of tracking for web conversion events. While when action_source is app_android or app_ios, it defines whether the user has enabled Limit Ad Tracking on their iOS device, or opted out of Ads Personalization on their Android device."
                        },
                        {
                            "key": "user_data",
                            "type": "dictionary",
                            "label": "User Data",
                            "secret": false,
                            "default": {
                                "email": "{[event.properties.email ?? person.properties.email]}",
                                "client_ip_address": "{event.properties.$ip}",
                                "client_user_agent": "{event.properties.$raw_user_agent}"
                            },
                            "required": false,
                            "description": "Object containing customer information data. Note, It is required at least one of 1) em, 2) hashed_maids or 3) pair client_ip_address + client_user_agent.."
                        },
                        {
                            "key": "custom_data",
                            "type": "dictionary",
                            "label": "Custom Data",
                            "secret": false,
                            "default": {
                                "value": "{event.properties.price ?? event.properties.value}",
                                "currency": "{event.properties.currency}",
                                "order_id": "{event.properties.order_id}",
                                "search_string": "{event.properties.query}"
                            },
                            "required": false,
                            "description": "Object containing customer information data."
                        },
                        {
                            "key": "app_id",
                            "type": "string",
                            "label": "App ID",
                            "secret": false,
                            "default": "{event.properties.app.id}",
                            "required": false,
                            "description": "The app store app ID."
                        },
                        {
                            "key": "app_name",
                            "type": "string",
                            "label": "App Name",
                            "secret": false,
                            "default": "{event.event.properties.$app_name}",
                            "required": true,
                            "description": "Name of the app. "
                        },
                        {
                            "key": "app_version",
                            "type": "string",
                            "label": "App Version",
                            "secret": false,
                            "default": "{event.event.properties.$app_version}",
                            "required": false,
                            "description": "Version of the app."
                        },
                        {
                            "key": "device_brand",
                            "type": "string",
                            "label": "Device Brand",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "Brand of the user device."
                        },
                        {
                            "key": "device_carrier",
                            "type": "string",
                            "label": "Device Carrier",
                            "secret": false,
                            "default": "{event.properties.device.carrier}",
                            "required": false,
                            "description": "User device’s mobile carrier. "
                        },
                        {
                            "key": "device_model",
                            "type": "string",
                            "label": "Device Model",
                            "secret": false,
                            "default": "{event.properties.$device_model}",
                            "required": false,
                            "description": "Model of the user device."
                        },
                        {
                            "key": "device_type",
                            "type": "string",
                            "label": "Device Type",
                            "secret": false,
                            "default": "{event.properties.$device_type}",
                            "required": false,
                            "description": "Type of the user device."
                        },
                        {
                            "key": "os_version",
                            "type": "string",
                            "label": "OS Version",
                            "secret": false,
                            "default": "{event.properties.$os_version}",
                            "required": false,
                            "description": "Version of the device operating system."
                        },
                        {
                            "key": "wifi",
                            "type": "string",
                            "label": "Wifi",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "Whether the event occurred when the user device was connected to wifi."
                        },
                        {
                            "key": "language",
                            "type": "string",
                            "label": "Language",
                            "secret": false,
                            "required": false,
                            "description": "Two-character ISO-639-1 language code indicating the user's language."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "reportConversionEvent",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "View Category",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify') AND event = 'Product Category Viewed'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "event_name",
                            "type": "choice",
                            "label": "Event Name",
                            "secret": false,
                            "choices": [
                                {
                                    "label": "Add to Cart",
                                    "value": "add_to_cart"
                                },
                                {
                                    "label": "Checkout",
                                    "value": "checkout"
                                },
                                {
                                    "label": "Lead",
                                    "value": "lead"
                                },
                                {
                                    "label": "Page Visit",
                                    "value": "page_visit"
                                },
                                {
                                    "label": "Search",
                                    "value": "search"
                                },
                                {
                                    "label": "Sign Up",
                                    "value": "signup"
                                },
                                {
                                    "label": "View Category",
                                    "value": "view_category"
                                },
                                {
                                    "label": "Watch Video",
                                    "value": "watch_video"
                                },
                                {
                                    "label": "Custom",
                                    "value": "custom"
                                }
                            ],
                            "default": "view_category",
                            "required": true,
                            "description": "The conversion event type. For custom events, you must use the predefined event name \"custom\". Please refer to the possible event types in [Pinterest API docs](https://developers.pinterest.com/docs/api/v5/#operation/events/create)."
                        },
                        {
                            "key": "action_source",
                            "type": "choice",
                            "label": "Action Source",
                            "secret": false,
                            "choices": [
                                {
                                    "label": "App Android",
                                    "value": "app_android"
                                },
                                {
                                    "label": "App IOS",
                                    "value": "app_ios"
                                },
                                {
                                    "label": "Web",
                                    "value": "web"
                                },
                                {
                                    "label": "Offline",
                                    "value": "offline"
                                }
                            ],
                            "default": "web",
                            "required": true,
                            "description": "The source indicating where the conversion event occurred. This must be app_android, app_ios , web or offline."
                        },
                        {
                            "key": "event_time",
                            "type": "string",
                            "label": "Event Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": true,
                            "description": "Device IDs can be used to add and remove only anonymous users to/from a cohort. However, users with an assigned User ID cannot use Device ID to sync to a cohort."
                        },
                        {
                            "key": "event_id",
                            "type": "string",
                            "label": "Event ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": true,
                            "description": "A unique id string that identifies this event and can be used for deduping between events ingested via both the conversion API and Pinterest tracking."
                        },
                        {
                            "key": "event_source_url",
                            "type": "string",
                            "label": "Event Source URL",
                            "secret": false,
                            "default": "{event.properties.$current_url}",
                            "required": false,
                            "description": "URL of the web conversion event."
                        },
                        {
                            "key": "opt_out",
                            "type": "string",
                            "label": "Opt Out",
                            "secret": false,
                            "default": "true",
                            "required": false,
                            "description": "When action_source is web or offline, it defines whether the user has opted out of tracking for web conversion events. While when action_source is app_android or app_ios, it defines whether the user has enabled Limit Ad Tracking on their iOS device, or opted out of Ads Personalization on their Android device."
                        },
                        {
                            "key": "user_data",
                            "type": "dictionary",
                            "label": "User Data",
                            "secret": false,
                            "default": {
                                "email": "{[event.properties.email ?? person.properties.email]}",
                                "client_ip_address": "{event.properties.$ip}",
                                "client_user_agent": "{event.properties.$raw_user_agent}"
                            },
                            "required": false,
                            "description": "Object containing customer information data. Note, It is required at least one of 1) em, 2) hashed_maids or 3) pair client_ip_address + client_user_agent.."
                        },
                        {
                            "key": "custom_data",
                            "type": "dictionary",
                            "label": "Custom Data",
                            "secret": false,
                            "default": {
                                "value": "{event.properties.price ?? event.properties.value}",
                                "currency": "{event.properties.currency}",
                                "order_id": "{event.properties.order_id}",
                                "search_string": "{event.properties.query}"
                            },
                            "required": false,
                            "description": "Object containing customer information data."
                        },
                        {
                            "key": "app_id",
                            "type": "string",
                            "label": "App ID",
                            "secret": false,
                            "default": "{event.properties.app.id}",
                            "required": false,
                            "description": "The app store app ID."
                        },
                        {
                            "key": "app_name",
                            "type": "string",
                            "label": "App Name",
                            "secret": false,
                            "default": "{event.event.properties.$app_name}",
                            "required": true,
                            "description": "Name of the app. "
                        },
                        {
                            "key": "app_version",
                            "type": "string",
                            "label": "App Version",
                            "secret": false,
                            "default": "{event.event.properties.$app_version}",
                            "required": false,
                            "description": "Version of the app."
                        },
                        {
                            "key": "device_brand",
                            "type": "string",
                            "label": "Device Brand",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "Brand of the user device."
                        },
                        {
                            "key": "device_carrier",
                            "type": "string",
                            "label": "Device Carrier",
                            "secret": false,
                            "default": "{event.properties.device.carrier}",
                            "required": false,
                            "description": "User device’s mobile carrier. "
                        },
                        {
                            "key": "device_model",
                            "type": "string",
                            "label": "Device Model",
                            "secret": false,
                            "default": "{event.properties.$device_model}",
                            "required": false,
                            "description": "Model of the user device."
                        },
                        {
                            "key": "device_type",
                            "type": "string",
                            "label": "Device Type",
                            "secret": false,
                            "default": "{event.properties.$device_type}",
                            "required": false,
                            "description": "Type of the user device."
                        },
                        {
                            "key": "os_version",
                            "type": "string",
                            "label": "OS Version",
                            "secret": false,
                            "default": "{event.properties.$os_version}",
                            "required": false,
                            "description": "Version of the device operating system."
                        },
                        {
                            "key": "wifi",
                            "type": "string",
                            "label": "Wifi",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "Whether the event occurred when the user device was connected to wifi."
                        },
                        {
                            "key": "language",
                            "type": "string",
                            "label": "Language",
                            "secret": false,
                            "required": false,
                            "description": "Two-character ISO-639-1 language code indicating the user's language."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "reportConversionEvent",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Watch Video",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify') AND event = 'Product Video Watched'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "event_name",
                            "type": "choice",
                            "label": "Event Name",
                            "secret": false,
                            "choices": [
                                {
                                    "label": "Add to Cart",
                                    "value": "add_to_cart"
                                },
                                {
                                    "label": "Checkout",
                                    "value": "checkout"
                                },
                                {
                                    "label": "Lead",
                                    "value": "lead"
                                },
                                {
                                    "label": "Page Visit",
                                    "value": "page_visit"
                                },
                                {
                                    "label": "Search",
                                    "value": "search"
                                },
                                {
                                    "label": "Sign Up",
                                    "value": "signup"
                                },
                                {
                                    "label": "View Category",
                                    "value": "view_category"
                                },
                                {
                                    "label": "Watch Video",
                                    "value": "watch_video"
                                },
                                {
                                    "label": "Custom",
                                    "value": "custom"
                                }
                            ],
                            "default": "watch_video",
                            "required": true,
                            "description": "The conversion event type. For custom events, you must use the predefined event name \"custom\". Please refer to the possible event types in [Pinterest API docs](https://developers.pinterest.com/docs/api/v5/#operation/events/create)."
                        },
                        {
                            "key": "action_source",
                            "type": "choice",
                            "label": "Action Source",
                            "secret": false,
                            "choices": [
                                {
                                    "label": "App Android",
                                    "value": "app_android"
                                },
                                {
                                    "label": "App IOS",
                                    "value": "app_ios"
                                },
                                {
                                    "label": "Web",
                                    "value": "web"
                                },
                                {
                                    "label": "Offline",
                                    "value": "offline"
                                }
                            ],
                            "default": "web",
                            "required": true,
                            "description": "The source indicating where the conversion event occurred. This must be app_android, app_ios , web or offline."
                        },
                        {
                            "key": "event_time",
                            "type": "string",
                            "label": "Event Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": true,
                            "description": "Device IDs can be used to add and remove only anonymous users to/from a cohort. However, users with an assigned User ID cannot use Device ID to sync to a cohort."
                        },
                        {
                            "key": "event_id",
                            "type": "string",
                            "label": "Event ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": true,
                            "description": "A unique id string that identifies this event and can be used for deduping between events ingested via both the conversion API and Pinterest tracking."
                        },
                        {
                            "key": "event_source_url",
                            "type": "string",
                            "label": "Event Source URL",
                            "secret": false,
                            "default": "{event.properties.$current_url}",
                            "required": false,
                            "description": "URL of the web conversion event."
                        },
                        {
                            "key": "opt_out",
                            "type": "string",
                            "label": "Opt Out",
                            "secret": false,
                            "default": "true",
                            "required": false,
                            "description": "When action_source is web or offline, it defines whether the user has opted out of tracking for web conversion events. While when action_source is app_android or app_ios, it defines whether the user has enabled Limit Ad Tracking on their iOS device, or opted out of Ads Personalization on their Android device."
                        },
                        {
                            "key": "user_data",
                            "type": "dictionary",
                            "label": "User Data",
                            "secret": false,
                            "default": {
                                "email": "{[event.properties.email ?? person.properties.email]}",
                                "client_ip_address": "{event.properties.$ip}",
                                "client_user_agent": "{event.properties.$raw_user_agent}"
                            },
                            "required": false,
                            "description": "Object containing customer information data. Note, It is required at least one of 1) em, 2) hashed_maids or 3) pair client_ip_address + client_user_agent.."
                        },
                        {
                            "key": "custom_data",
                            "type": "dictionary",
                            "label": "Custom Data",
                            "secret": false,
                            "default": {
                                "value": "{event.properties.price ?? event.properties.value}",
                                "currency": "{event.properties.currency}",
                                "order_id": "{event.properties.order_id}",
                                "search_string": "{event.properties.query}"
                            },
                            "required": false,
                            "description": "Object containing customer information data."
                        },
                        {
                            "key": "app_id",
                            "type": "string",
                            "label": "App ID",
                            "secret": false,
                            "default": "{event.properties.app.id}",
                            "required": false,
                            "description": "The app store app ID."
                        },
                        {
                            "key": "app_name",
                            "type": "string",
                            "label": "App Name",
                            "secret": false,
                            "default": "{event.event.properties.$app_name}",
                            "required": true,
                            "description": "Name of the app. "
                        },
                        {
                            "key": "app_version",
                            "type": "string",
                            "label": "App Version",
                            "secret": false,
                            "default": "{event.event.properties.$app_version}",
                            "required": false,
                            "description": "Version of the app."
                        },
                        {
                            "key": "device_brand",
                            "type": "string",
                            "label": "Device Brand",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "Brand of the user device."
                        },
                        {
                            "key": "device_carrier",
                            "type": "string",
                            "label": "Device Carrier",
                            "secret": false,
                            "default": "{event.properties.device.carrier}",
                            "required": false,
                            "description": "User device’s mobile carrier. "
                        },
                        {
                            "key": "device_model",
                            "type": "string",
                            "label": "Device Model",
                            "secret": false,
                            "default": "{event.properties.$device_model}",
                            "required": false,
                            "description": "Model of the user device."
                        },
                        {
                            "key": "device_type",
                            "type": "string",
                            "label": "Device Type",
                            "secret": false,
                            "default": "{event.properties.$device_type}",
                            "required": false,
                            "description": "Type of the user device."
                        },
                        {
                            "key": "os_version",
                            "type": "string",
                            "label": "OS Version",
                            "secret": false,
                            "default": "{event.properties.$os_version}",
                            "required": false,
                            "description": "Version of the device operating system."
                        },
                        {
                            "key": "wifi",
                            "type": "string",
                            "label": "Wifi",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "Whether the event occurred when the user device was connected to wifi."
                        },
                        {
                            "key": "language",
                            "type": "string",
                            "label": "Language",
                            "secret": false,
                            "required": false,
                            "description": "Two-character ISO-639-1 language code indicating the user's language."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "reportConversionEvent",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                }
            ],
            "mappings": null,
            "status": "alpha",
            "free": false,
            "type": "destination",
            "id": "segment-actions-pinterest-conversions-api",
            "name": "Pinterest Conversions API",
            "hog": "return event",
            "inputs_schema": [
                {
                    "key": "ad_account_id",
                    "type": "string",
                    "label": "Ad Account ID",
                    "secret": false,
                    "required": true,
                    "description": "Unique identifier of an ad account. This can be found in the Pinterest UI by following the steps mentioned [here](https://developers.pinterest.com/docs/conversions/conversions/#Find%20your%20%2Cad_account_id)."
                },
                {
                    "key": "conversion_token",
                    "type": "string",
                    "label": "Conversion Token",
                    "secret": true,
                    "required": true,
                    "description": "The conversion token for your Pinterest account. This can be found in the Pinterest UI by following the steps mentioned [here](https://developers.pinterest.com/docs/conversions/conversions/#Get%20the%20conversion%20token)."
                },
                {
                    "key": "debug_mode",
                    "type": "boolean",
                    "label": "Debug Mode",
                    "default": false,
                    "description": "Will log configuration and request details"
                }
            ],
            "category": [],
            "code_language": "hog",
            "description": "Send event data to Pinterest Conversions API",
            "filters": null,
            "masking": null,
            "icon_url": "/static/services/pinterest.com.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-pipedream",
            "name": "PipeDream",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Automation"],
            "code_language": "hog",
            "description": "Send events to PipeDream.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/PipeDream.svg"
        },
        {
            "mapping_templates": [
                {
                    "name": "Create or Update a Person",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event in ('$identify', '$set')",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "match_field",
                            "type": "string",
                            "label": "Match field",
                            "secret": false,
                            "required": false,
                            "description": "If present, used instead of field in settings to find existing person in Pipedrive."
                        },
                        {
                            "key": "match_value",
                            "type": "string",
                            "label": "Match value",
                            "secret": false,
                            "default": "{person.id}",
                            "required": true,
                            "description": "Value to find existing person by"
                        },
                        {
                            "key": "name",
                            "type": "string",
                            "label": "Person Name",
                            "secret": false,
                            "default": "{person.properties.name}",
                            "required": false,
                            "description": "Name of the person"
                        },
                        {
                            "key": "email",
                            "type": "string",
                            "label": "Email Address",
                            "secret": false,
                            "default": "{[person.properties.email]}",
                            "required": false,
                            "description": "Email addresses for this person."
                        },
                        {
                            "key": "phone",
                            "type": "string",
                            "label": "Phone Number",
                            "secret": false,
                            "default": "{[person.properties.phone]}",
                            "required": false,
                            "description": "Phone numbers for the person."
                        },
                        {
                            "key": "visible_to",
                            "type": "choice",
                            "label": "Visible To",
                            "secret": false,
                            "choices": [
                                {
                                    "label": "Owner & followers (private)",
                                    "value": "1"
                                },
                                {
                                    "label": "Entire company (shared)",
                                    "value": "3"
                                },
                                {
                                    "label": "Owner's visibility group and sub-groups",
                                    "value": "5"
                                },
                                {
                                    "label": "Entire company",
                                    "value": "7"
                                }
                            ],
                            "required": false,
                            "description": "Visibility of the Person. If omitted, visibility will be set to the default visibility setting of this item type for the authorized user. 'Owner's visibility group and sub-groups' and 'Entire company' options only available with Professional or Enterprise plans"
                        },
                        {
                            "key": "add_time",
                            "type": "string",
                            "label": "Created At",
                            "secret": false,
                            "required": false,
                            "description": "If the person is created, use this timestamp as the creation timestamp. Format: YYY-MM-DD HH:MM:SS"
                        },
                        {
                            "key": "custom_fields",
                            "type": "dictionary",
                            "label": "Custom fields",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "New values for custom fields."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "createUpdatePerson",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Create or Update an Organization",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event = '$groupidentify'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "match_field",
                            "type": "string",
                            "label": "Match field",
                            "secret": false,
                            "required": false,
                            "description": "If present, used instead of field in settings to find existing organization in Pipedrive."
                        },
                        {
                            "key": "match_value",
                            "type": "string",
                            "label": "Match value",
                            "secret": false,
                            "default": "{event.groupId}",
                            "required": true,
                            "description": "Value to find existing organization by"
                        },
                        {
                            "key": "name",
                            "type": "string",
                            "label": "Organization Name",
                            "secret": false,
                            "default": "{person.properties.name}",
                            "required": false,
                            "description": "Name of the organization"
                        },
                        {
                            "key": "visible_to",
                            "type": "choice",
                            "label": "Visible To",
                            "secret": false,
                            "choices": [
                                {
                                    "label": "Owner & followers (private)",
                                    "value": "1"
                                },
                                {
                                    "label": "Entire company (shared)",
                                    "value": "3"
                                },
                                {
                                    "label": "Owner's visibility group and sub-groups",
                                    "value": "5"
                                },
                                {
                                    "label": "Entire company",
                                    "value": "7"
                                }
                            ],
                            "required": false,
                            "description": "Visibility of the Organization. If omitted, visibility will be set to the default visibility setting of this item type for the authorized user. 'Owner's visibility group and sub-groups' and 'Entire company' options only available with Professional or Enterprise plans"
                        },
                        {
                            "key": "add_time",
                            "type": "string",
                            "label": "Created At",
                            "secret": false,
                            "required": false,
                            "description": "If the organization is created, use this timestamp as the creation timestamp. Format: YYY-MM-DD HH:MM:SS"
                        },
                        {
                            "key": "custom_fields",
                            "type": "dictionary",
                            "label": "Custom fields",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "New values for custom fields."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "createUpdateOrganization",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Create or Update an Activity",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify') and event = 'Activity Upserted'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "activity_id",
                            "type": "string",
                            "label": "Activity ID",
                            "secret": false,
                            "default": "{event.properties.activity_id}",
                            "required": false,
                            "description": "ID of Activity in Pipedrive to Update. If left empty, a new one will be created"
                        },
                        {
                            "key": "person_match_field",
                            "type": "string",
                            "label": "Person match field",
                            "secret": false,
                            "required": false,
                            "description": "If present, used instead of field in settings to find existing person in Pipedrive."
                        },
                        {
                            "key": "person_match_value",
                            "type": "string",
                            "label": "Person match value",
                            "secret": false,
                            "default": "{person.id}",
                            "required": false,
                            "description": "Value to find existing person by"
                        },
                        {
                            "key": "organization_match_field",
                            "type": "string",
                            "label": "Organization match field",
                            "secret": false,
                            "required": false,
                            "description": "If present, used instead of field in settings to find existing organization in Pipedrive."
                        },
                        {
                            "key": "organization_match_value",
                            "type": "string",
                            "label": "Organization match value",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "Value to find existing organization by"
                        },
                        {
                            "key": "deal_match_field",
                            "type": "string",
                            "label": "Deal match field",
                            "secret": false,
                            "required": false,
                            "description": "If present, used instead of field in settings to find existing deal in Pipedrive."
                        },
                        {
                            "key": "deal_match_value",
                            "type": "string",
                            "label": "Deal match value",
                            "secret": false,
                            "default": "{event.properties.deal_id}",
                            "required": false,
                            "description": "Value to find existing deal by"
                        },
                        {
                            "key": "subject",
                            "type": "string",
                            "label": "Activity Subject",
                            "secret": false,
                            "default": "{event.properties.subject}",
                            "required": false,
                            "description": "Subject of the Activity. When value for subject is not set, it will be given a default value `Call`."
                        },
                        {
                            "key": "type",
                            "type": "string",
                            "label": "Type",
                            "secret": false,
                            "default": "{event.properties.type}",
                            "required": false,
                            "description": "Type of the Activity. This is in correlation with the key_string parameter of ActivityTypes. When value for type is not set, it will be given a default value `Call`"
                        },
                        {
                            "key": "description",
                            "type": "string",
                            "label": "Description",
                            "secret": false,
                            "default": "{event.properties.description}",
                            "required": false,
                            "description": "Additional details about the Activity that is synced to your external calendar. Unlike the note added to the Activity, the description is publicly visible to any guests added to the Activity."
                        },
                        {
                            "key": "note",
                            "type": "string",
                            "label": "Note",
                            "secret": false,
                            "default": "{event.properties.note}",
                            "required": false,
                            "description": "Note of the Activity (Accepts plain text and HTML)"
                        },
                        {
                            "key": "due_date",
                            "type": "string",
                            "label": "Due Date",
                            "secret": false,
                            "default": "{event.properties.due_date}",
                            "required": false,
                            "description": "Due date of the Activity. Format: YYYY-MM-DD"
                        },
                        {
                            "key": "due_time",
                            "type": "string",
                            "label": "Due Time",
                            "secret": false,
                            "default": "{event.properties.due_time}",
                            "required": false,
                            "description": "Due time of the Activity. Format: HH:MM"
                        },
                        {
                            "key": "duration",
                            "type": "string",
                            "label": "Duration",
                            "secret": false,
                            "default": "{event.properties.duration}",
                            "required": false,
                            "description": "Duration of the Activity. Format: HH:MM"
                        },
                        {
                            "key": "done",
                            "type": "string",
                            "label": "Done",
                            "secret": false,
                            "default": "{event.properties.done}",
                            "required": false,
                            "description": "Whether the Activity is done or not."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "createUpdateActivity",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                }
            ],
            "mappings": null,
            "status": "beta",
            "free": false,
            "type": "destination",
            "id": "segment-actions-pipedrive",
            "name": "Pipedrive",
            "hog": "return event",
            "inputs_schema": [
                {
                    "key": "domain",
                    "type": "string",
                    "label": "Domain",
                    "secret": false,
                    "required": true,
                    "description": "Pipedrive domain. This is found in Pipedrive in Settings > Company settings > Company domain."
                },
                {
                    "key": "apiToken",
                    "type": "string",
                    "label": "API Token",
                    "secret": false,
                    "required": true,
                    "description": "Pipedrive API token. This is found in Pipedrive in Settings > Personal preferences > API > Your personal API token."
                },
                {
                    "key": "personField",
                    "type": "string",
                    "label": "External ID field for a Person in Pipedrive",
                    "secret": false,
                    "default": "id",
                    "required": false,
                    "description": "This is a key by which a Person in Pipedrive will be searched. It can be either Person id or has of a custom field containing external id. Default value is `person_id`."
                },
                {
                    "key": "organizationField",
                    "type": "string",
                    "label": "External ID field for an Organization in Pipedrive",
                    "secret": false,
                    "default": "id",
                    "required": false,
                    "description": "This is a key by which an Organization in Pipedrive will be searched. It can be either Organization id or has of a custom field containing external id. Default value is `org_id`."
                },
                {
                    "key": "dealField",
                    "type": "string",
                    "label": "External ID field for a Deal in Pipedrive",
                    "secret": false,
                    "default": "id",
                    "required": false,
                    "description": "This is a key by which a Deal in Pipedrive will be searched. It can be either Deal id or has of a custom field containing external id. Default value is `deal_id`."
                },
                {
                    "key": "debug_mode",
                    "type": "boolean",
                    "label": "Debug Mode",
                    "default": false,
                    "description": "Will log configuration and request details"
                }
            ],
            "category": [],
            "code_language": "hog",
            "description": "Send event data to Pipedrive",
            "filters": null,
            "masking": null,
            "icon_url": "/static/services/pipedrive.com.png"
        },
        {
            "mapping_templates": [
                {
                    "name": "Track Event",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify') or event = '$pageview' or event = '$screen'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "trackEvent",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Identify User",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event in ('$identify', '$set') or event = '$groupidentify' or event = '$alias'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "identifyUser",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                }
            ],
            "mappings": null,
            "status": "alpha",
            "free": false,
            "type": "destination",
            "id": "segment-actions-playerzero-cloud",
            "name": "PlayerZero Cloud",
            "hog": "return event",
            "inputs_schema": [
                {
                    "key": "projectToken",
                    "type": "string",
                    "label": "PlayerZero Project Token",
                    "secret": false,
                    "required": true,
                    "description": "The Project Token for the PlayerZero project you want to send data to. You can find this Token on the [Segment (Cloud) Connector](https://go.playerzero.app/connector/segment-cloud) page."
                },
                {
                    "key": "debug_mode",
                    "type": "boolean",
                    "label": "Debug Mode",
                    "default": false,
                    "description": "Will log configuration and request details"
                }
            ],
            "category": [],
            "code_language": "hog",
            "description": "Send event data to PlayerZero Cloud",
            "filters": null,
            "masking": null,
            "icon_url": "/static/services/playerzero.ai.png"
        },
        {
            "mapping_templates": [
                {
                    "name": "Order Completed Calls",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify') and event = 'Order Completed'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "anonymousId",
                            "type": "string",
                            "label": "Anonymous ID",
                            "secret": false,
                            "default": "{event.distinct_id}",
                            "required": false,
                            "description": "The anonymous ID associated with the user"
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": true,
                            "description": "The timestamp of the event"
                        },
                        {
                            "key": "referrer",
                            "type": "string",
                            "label": "Page Referrer",
                            "secret": false,
                            "default": "{event.properties.$referrer ?? event.properties.referrer}",
                            "required": false,
                            "description": "The page referrer"
                        },
                        {
                            "key": "url",
                            "type": "string",
                            "label": "Page URL",
                            "secret": false,
                            "default": "{event.properties.$current_url ?? event.properties.url}",
                            "required": false,
                            "description": "The page URL"
                        },
                        {
                            "key": "ip",
                            "type": "string",
                            "label": "User IP address",
                            "secret": false,
                            "default": "{event.properties.$ip}",
                            "required": true,
                            "description": "The IP address of the device sending the event."
                        },
                        {
                            "key": "library",
                            "type": "dictionary",
                            "label": "Segment Library",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.context.library}"
                            },
                            "required": false,
                            "description": "The library sending the event."
                        },
                        {
                            "key": "userAgent",
                            "type": "string",
                            "label": "User Agent",
                            "secret": false,
                            "default": "{event.properties.$raw_user_agent}",
                            "required": false,
                            "description": "The user agent of the device sending the event."
                        },
                        {
                            "key": "email",
                            "type": "string",
                            "label": "Email address",
                            "secret": false,
                            "default": "{person.properties.email ?? event.properties.email}",
                            "required": false,
                            "description": "Email address of the user"
                        },
                        {
                            "key": "properties",
                            "type": "dictionary",
                            "label": "Event properties",
                            "secret": false,
                            "default": {
                                "total": "{event.properties.total}",
                                "coupon": "{event.properties.coupon}",
                                "currency": "{event.properties.currency}",
                                "order_id": "{event.properties.order_id}",
                                "is_new_customer": "{event.properties.is_new_customer}",
                                "is_subscription": "{event.properties.is_subscription}",
                                "num_items_purchased": "{event.properties.num_items_purchased}"
                            },
                            "required": false,
                            "description": "Properties to send with the event"
                        },
                        {
                            "key": "podscribeEvent",
                            "type": "string",
                            "label": "Podscribe event type",
                            "secret": false,
                            "default": "purchase",
                            "required": true,
                            "description": "Podscribe type of event to send"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "track",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Signed Up Calls",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify') and event = 'Signed Up'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "anonymousId",
                            "type": "string",
                            "label": "Anonymous ID",
                            "secret": false,
                            "default": "{event.distinct_id}",
                            "required": false,
                            "description": "The anonymous ID associated with the user"
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": true,
                            "description": "The timestamp of the event"
                        },
                        {
                            "key": "referrer",
                            "type": "string",
                            "label": "Page Referrer",
                            "secret": false,
                            "default": "{event.properties.$referrer ?? event.properties.referrer}",
                            "required": false,
                            "description": "The page referrer"
                        },
                        {
                            "key": "url",
                            "type": "string",
                            "label": "Page URL",
                            "secret": false,
                            "default": "{event.properties.$current_url ?? event.properties.url}",
                            "required": false,
                            "description": "The page URL"
                        },
                        {
                            "key": "ip",
                            "type": "string",
                            "label": "User IP address",
                            "secret": false,
                            "default": "{event.properties.$ip}",
                            "required": true,
                            "description": "The IP address of the device sending the event."
                        },
                        {
                            "key": "library",
                            "type": "dictionary",
                            "label": "Segment Library",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.context.library}"
                            },
                            "required": false,
                            "description": "The library sending the event."
                        },
                        {
                            "key": "userAgent",
                            "type": "string",
                            "label": "User Agent",
                            "secret": false,
                            "default": "{event.properties.$raw_user_agent}",
                            "required": false,
                            "description": "The user agent of the device sending the event."
                        },
                        {
                            "key": "email",
                            "type": "string",
                            "label": "Email address",
                            "secret": false,
                            "default": "{person.properties.email ?? event.properties.email}",
                            "required": false,
                            "description": "Email address of the user"
                        },
                        {
                            "key": "properties",
                            "type": "dictionary",
                            "label": "Event properties",
                            "secret": false,
                            "default": {
                                "total": "{event.properties.total}",
                                "coupon": "{event.properties.coupon}",
                                "currency": "{event.properties.currency}",
                                "order_id": "{event.properties.order_id}",
                                "is_new_customer": "{event.properties.is_new_customer}",
                                "is_subscription": "{event.properties.is_subscription}",
                                "num_items_purchased": "{event.properties.num_items_purchased}"
                            },
                            "required": false,
                            "description": "Properties to send with the event"
                        },
                        {
                            "key": "podscribeEvent",
                            "type": "string",
                            "label": "Podscribe event type",
                            "secret": false,
                            "default": "signup",
                            "required": true,
                            "description": "Podscribe type of event to send"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "track",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Page Calls",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event = '$pageview'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "anonymousId",
                            "type": "string",
                            "label": "Anonymous ID",
                            "secret": false,
                            "default": "{event.distinct_id}",
                            "required": false,
                            "description": "The anonymous ID associated with the user"
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": true,
                            "description": "The timestamp of the event"
                        },
                        {
                            "key": "referrer",
                            "type": "string",
                            "label": "Page Referrer",
                            "secret": false,
                            "default": "{event.properties.$referrer ?? event.properties.referrer}",
                            "required": false,
                            "description": "The page referrer"
                        },
                        {
                            "key": "url",
                            "type": "string",
                            "label": "Page URL",
                            "secret": false,
                            "default": "{event.properties.$current_url ?? event.properties.url}",
                            "required": false,
                            "description": "The page URL"
                        },
                        {
                            "key": "ip",
                            "type": "string",
                            "label": "User IP address",
                            "secret": false,
                            "default": "{event.properties.$ip}",
                            "required": true,
                            "description": "The IP address of the device sending the event."
                        },
                        {
                            "key": "library",
                            "type": "dictionary",
                            "label": "Segment Library",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.context.library}"
                            },
                            "required": false,
                            "description": "The library sending the event."
                        },
                        {
                            "key": "userAgent",
                            "type": "string",
                            "label": "User Agent",
                            "secret": false,
                            "default": "{event.properties.$raw_user_agent}",
                            "required": false,
                            "description": "The user agent of the device sending the event."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "page",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                }
            ],
            "mappings": null,
            "status": "alpha",
            "free": false,
            "type": "destination",
            "id": "segment-actions-podscribe",
            "name": "Podscribe",
            "hog": "return event",
            "inputs_schema": [
                {
                    "key": "advertiser",
                    "type": "string",
                    "label": "Advertiser",
                    "secret": false,
                    "required": true,
                    "description": "Podscribe advertiser lookup key"
                },
                {
                    "key": "userId",
                    "type": "string",
                    "label": "User ID",
                    "secret": false,
                    "required": false,
                    "description": "Podscribe user ID"
                },
                {
                    "key": "debug_mode",
                    "type": "boolean",
                    "label": "Debug Mode",
                    "default": false,
                    "description": "Will log configuration and request details"
                }
            ],
            "category": [],
            "code_language": "hog",
            "description": "Send event data to Podscribe",
            "filters": null,
            "masking": null,
            "icon_url": "/static/services/podscribe.com.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-post-affiliate-pro",
            "name": "Post Affiliate Pro",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Marketing"],
            "code_language": "hog",
            "description": "Send events to Post Affiliate Pro.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Post_Affiliate_Pro.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "stable",
            "free": false,
            "type": "destination",
            "id": "template-posthog-replicator",
            "name": "PostHog",
            "hog": "let host := inputs.host\nlet token := inputs.token\nlet include_all_properties := inputs.include_all_properties\nlet propertyOverrides := inputs.properties\nlet properties := include_all_properties ? event.properties : {}\n\nfor (let key, value in propertyOverrides) {\n    properties[key] := value\n}\n\nfetch(f'{host}/e', {\n    'method': 'POST',\n    'headers': {\n        'Content-Type': 'application/json'\n    },\n    'body': {\n        'token': token,\n        'event': event.event,\n        'timestamp': event.timestamp,\n        'distinct_id': event.distinct_id,\n        'elements_chain': event.elements_chain,\n        'properties': properties\n    }\n})",
            "inputs_schema": [
                {
                    "key": "host",
                    "type": "string",
                    "label": "PostHog host",
                    "secret": false,
                    "default": "https://us.i.posthog.com",
                    "required": true,
                    "description": "For cloud accounts this is either https://us.i.posthog.com or https://eu.i.posthog.com"
                },
                {
                    "key": "token",
                    "type": "string",
                    "label": "PostHog API key",
                    "secret": false,
                    "required": true
                },
                {
                    "key": "include_all_properties",
                    "type": "boolean",
                    "label": "Include all properties by default",
                    "secret": false,
                    "default": true,
                    "required": true,
                    "description": "If set, all event properties will be included in the payload. Individual properties can be overridden below."
                },
                {
                    "key": "properties",
                    "type": "dictionary",
                    "label": "Property overrides",
                    "secret": false,
                    "default": {},
                    "required": false,
                    "description": "Provided values will override the event properties."
                }
            ],
            "category": ["Custom", "Analytics"],
            "code_language": "hog",
            "description": "Send a copy of the incoming data in realtime to another PostHog instance",
            "filters": null,
            "masking": null,
            "icon_url": "/static/posthog-icon.svg"
        },
        {
            "mapping_templates": [
                {
                    "name": "Track Calls",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify')",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "event",
                            "type": "string",
                            "label": "Event Name",
                            "secret": false,
                            "default": "{event.event}",
                            "required": true,
                            "description": "The event name"
                        },
                        {
                            "key": "properties",
                            "type": "dictionary",
                            "label": "Event properties",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.properties}"
                            },
                            "required": false,
                            "description": "Properties to send with the event"
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": true,
                            "description": "The timestamp of the event"
                        },
                        {
                            "key": "anonymousId",
                            "type": "string",
                            "label": "Anonymous ID",
                            "secret": false,
                            "default": "{event.distinct_id}",
                            "required": false,
                            "description": "The anonymous ID associated with the user"
                        },
                        {
                            "key": "userId",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": false,
                            "description": "The ID associated with the user"
                        },
                        {
                            "key": "context",
                            "type": "dictionary",
                            "label": "Context properties",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.context}"
                            },
                            "required": false,
                            "description": "Context properties to send with the event"
                        },
                        {
                            "key": "messageId",
                            "type": "string",
                            "label": "MessageId",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": true,
                            "description": "The Segment messageId"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "track",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Page Calls",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event = '$pageview'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "anonymousId",
                            "type": "string",
                            "label": "Anonymous ID",
                            "secret": false,
                            "default": "{event.distinct_id}",
                            "required": false,
                            "description": "An anonymous identifier"
                        },
                        {
                            "key": "userId",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": false,
                            "description": "The ID associated with the user"
                        },
                        {
                            "key": "properties",
                            "type": "dictionary",
                            "label": "Properties",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.properties}"
                            },
                            "required": false,
                            "description": "Page properties"
                        },
                        {
                            "key": "name",
                            "type": "string",
                            "label": "Page Name",
                            "secret": false,
                            "default": "{event.properties.name}",
                            "required": false,
                            "description": "The name of the page"
                        },
                        {
                            "key": "context",
                            "type": "dictionary",
                            "label": "Context properties",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.context}"
                            },
                            "required": false,
                            "description": "Context properties to send with the event"
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": true,
                            "description": "The timestamp of the event"
                        },
                        {
                            "key": "messageId",
                            "type": "string",
                            "label": "MessageId",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": false,
                            "description": "The Segment messageId"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "page",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Identify Calls",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event in ('$identify', '$set')",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "anonymousId",
                            "type": "string",
                            "label": "Anonymous ID",
                            "secret": false,
                            "default": "{event.distinct_id}",
                            "required": false,
                            "description": "An anonymous identifier"
                        },
                        {
                            "key": "userId",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": false,
                            "description": "The ID associated with the user"
                        },
                        {
                            "key": "traits",
                            "type": "dictionary",
                            "label": "Traits",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{person.properties}"
                            },
                            "required": false,
                            "description": "Traits to associate with the user"
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": true,
                            "description": "The timestamp of the event"
                        },
                        {
                            "key": "messageId",
                            "type": "string",
                            "label": "MessageId",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": true,
                            "description": "The Segment messageId"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "identify",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Group Calls",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event = '$groupidentify'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "anonymousId",
                            "type": "string",
                            "label": "Anonymous ID",
                            "secret": false,
                            "default": "{event.distinct_id}",
                            "required": false,
                            "description": "Anonymous id"
                        },
                        {
                            "key": "userId",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": false,
                            "description": "The ID associated with the user"
                        },
                        {
                            "key": "groupId",
                            "type": "string",
                            "label": "Group ID",
                            "secret": false,
                            "default": "{event.groupId}",
                            "required": true,
                            "description": "The group id"
                        },
                        {
                            "key": "traits",
                            "type": "dictionary",
                            "label": "Traits",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{person.properties}"
                            },
                            "required": false,
                            "description": "Traits to associate with the group"
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": true,
                            "description": "The timestamp of the event"
                        },
                        {
                            "key": "messageId",
                            "type": "string",
                            "label": "MessageId",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": true,
                            "description": "The Segment messageId"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "group",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                }
            ],
            "mappings": null,
            "status": "alpha",
            "free": false,
            "type": "destination",
            "id": "segment-actions-prodeology",
            "name": "Prodeology",
            "hog": "return event",
            "inputs_schema": [
                {
                    "key": "apiKey",
                    "type": "string",
                    "label": "API Key",
                    "secret": true,
                    "required": true,
                    "description": "Your Prodeology API Key"
                },
                {
                    "key": "debug_mode",
                    "type": "boolean",
                    "label": "Debug Mode",
                    "default": false,
                    "description": "Will log configuration and request details"
                }
            ],
            "category": [],
            "code_language": "hog",
            "description": "Send event data to Prodeology",
            "filters": null,
            "masking": null,
            "icon_url": "/static/services/prodeology.com.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-profitwell",
            "name": "ProfitWell",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Analytics"],
            "code_language": "hog",
            "description": "Send events to ProfitWell.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/ProfitWell.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-promoter-io",
            "name": "Promoter.io",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Surveys"],
            "code_language": "hog",
            "description": "Send events to Promoter.io.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Promoter.io.png"
        },
        {
            "mapping_templates": [
                {
                    "name": "Track Events",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify') or event = '$pageview' or event = '$screen'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "external_id",
                            "type": "string",
                            "label": "External User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": true,
                            "description": "The unique user identifier"
                        },
                        {
                            "key": "device_id",
                            "type": "string",
                            "label": "Device ID",
                            "secret": false,
                            "default": "{event.properties.$device_id}",
                            "required": false,
                            "description": "Device ID"
                        },
                        {
                            "key": "device_platform",
                            "type": "string",
                            "label": "Device Platform",
                            "secret": false,
                            "default": "{event.properties.$device_type}",
                            "required": false,
                            "description": "Device Platform"
                        },
                        {
                            "key": "name",
                            "type": "string",
                            "label": "Name",
                            "secret": false,
                            "default": "{event.event ?? event.event}",
                            "required": true,
                            "description": "Event Name"
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": true,
                            "description": "When the event occurred."
                        },
                        {
                            "key": "properties",
                            "type": "dictionary",
                            "label": "Event Properties",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.properties}"
                            },
                            "required": false,
                            "description": "Properties of the event"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "trackEvent",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Create or Update User Profile",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event in ('$identify', '$set')",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "external_id",
                            "type": "string",
                            "label": "External User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": false,
                            "description": "The unique user identifier"
                        },
                        {
                            "key": "email",
                            "type": "string",
                            "label": "Email",
                            "secret": false,
                            "default": "{person.properties.email}",
                            "required": false,
                            "description": "The user's email"
                        },
                        {
                            "key": "app_version",
                            "type": "string",
                            "label": "App Version",
                            "secret": false,
                            "default": "{event.event.properties.$app_version}",
                            "required": false,
                            "description": "Version of the app"
                        },
                        {
                            "key": "device_id",
                            "type": "string",
                            "label": "Device ID",
                            "secret": false,
                            "default": "{event.properties.$device_id}",
                            "required": false,
                            "description": "Device ID"
                        },
                        {
                            "key": "device_model",
                            "type": "string",
                            "label": "Device Model",
                            "secret": false,
                            "default": "{event.properties.$device_model}",
                            "required": false,
                            "description": "Device Model"
                        },
                        {
                            "key": "device_platform",
                            "type": "string",
                            "label": "Device Platform",
                            "secret": false,
                            "default": "{event.properties.$device_type}",
                            "required": false,
                            "description": "Device Platform"
                        },
                        {
                            "key": "device_token",
                            "type": "string",
                            "label": "Device Token",
                            "secret": false,
                            "default": "{event.context.device.token}",
                            "required": false,
                            "description": "Device Token. This is not automatically collected by Segment Mobile SDKs. Add it into the Segment payload if needed"
                        },
                        {
                            "key": "language",
                            "type": "string",
                            "label": "Language",
                            "secret": false,
                            "default": "{event.properties.$locale}",
                            "required": false,
                            "description": "Language"
                        },
                        {
                            "key": "country",
                            "type": "string",
                            "label": "Country",
                            "secret": false,
                            "default": "{event.properties.$geoip_country_name}",
                            "required": false,
                            "description": "The country code of the user"
                        },
                        {
                            "key": "city",
                            "type": "string",
                            "label": "City",
                            "secret": false,
                            "default": "{event.properties.$geoip_city_name}",
                            "required": false,
                            "description": "The city of the user"
                        },
                        {
                            "key": "current_location",
                            "type": "dictionary",
                            "label": "Current Location",
                            "secret": false,
                            "default": {
                                "latitude": "{event.properties.$geoip_latitude}",
                                "longitude": "{event.properties.$geoip_longitude}"
                            },
                            "required": false,
                            "description": "The user's current longitude/latitude."
                        },
                        {
                            "key": "device_os_version",
                            "type": "string",
                            "label": "Device OS Version",
                            "secret": false,
                            "default": "{event.properties.$os_version}",
                            "required": false,
                            "description": "The version of the device OS"
                        },
                        {
                            "key": "timezone",
                            "type": "string",
                            "label": "Timezone",
                            "secret": false,
                            "default": "{event.properties.$timezone}",
                            "required": false,
                            "description": "The timezone of the user"
                        },
                        {
                            "key": "user_agent",
                            "type": "string",
                            "label": "User Agent",
                            "secret": false,
                            "default": "{event.properties.$raw_user_agent}",
                            "required": false,
                            "description": "User agent of the device"
                        },
                        {
                            "key": "custom_attributes",
                            "type": "dictionary",
                            "label": "Custom Attributes",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{person.properties}"
                            },
                            "required": false,
                            "description": "Custom attributes to send to Pushwoosh"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "updateUserProfile",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                }
            ],
            "mappings": null,
            "status": "beta",
            "free": false,
            "type": "destination",
            "id": "segment-actions-pushwoosh",
            "name": "Pushwoosh",
            "hog": "return event",
            "inputs_schema": [
                {
                    "key": "pushwooshAPIKey",
                    "type": "string",
                    "label": "Pushwoosh API Key",
                    "secret": true,
                    "required": true,
                    "description": "Pushwoosh API Key from Pushwoosh Control Panel"
                },
                {
                    "key": "pushwooshAppCode",
                    "type": "string",
                    "label": "Pushwoosh Application Code",
                    "secret": false,
                    "required": true,
                    "description": "Pushwoosh Application Code from Pushwoosh Control Panel"
                },
                {
                    "key": "debug_mode",
                    "type": "boolean",
                    "label": "Debug Mode",
                    "default": false,
                    "description": "Will log configuration and request details"
                }
            ],
            "category": [],
            "code_language": "hog",
            "description": "Send event data to Pushwoosh",
            "filters": null,
            "masking": null,
            "icon_url": "/static/services/pushwoosh.com.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-qualaroo",
            "name": "Qualaroo",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Customer Service"],
            "code_language": "hog",
            "description": "Send events to Qualaroo.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Qualaroo.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-qualtrics-website-feedback",
            "name": "Qualtrics Website Feedback",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Marketing"],
            "code_language": "hog",
            "description": "Send events to Qualtrics Website Feedback.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Qualtrics_Website_Feedback.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-quantum-metric",
            "name": "Quantum Metric",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Analytics"],
            "code_language": "hog",
            "description": "Send events to Quantum Metric.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Quantum_Metric.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-quora",
            "name": "Quora",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Advertising"],
            "code_language": "hog",
            "description": "Send events to Quora.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Quora.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-rakuten",
            "name": "Rakuten",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Marketing"],
            "code_language": "hog",
            "description": "Send events to Rakuten.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Rakuten.svg"
        },
        {
            "mapping_templates": [
                {
                    "name": "Page - Viewed",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event = '$pageview'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "userId",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id ?? event.distinct_id}",
                            "required": true,
                            "description": "The ID of the user who viewed the item."
                        },
                        {
                            "key": "itemId",
                            "type": "string",
                            "label": "Item ID",
                            "secret": false,
                            "default": "{event.event}",
                            "required": true,
                            "description": "The viewed item."
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": false,
                            "description": "The UTC timestamp of when the view occurred."
                        },
                        {
                            "key": "duration",
                            "type": "string",
                            "label": "Duration",
                            "secret": false,
                            "required": false,
                            "description": "The duration of the view in seconds."
                        },
                        {
                            "key": "recommId",
                            "type": "string",
                            "label": "Recommendation ID",
                            "secret": false,
                            "default": "{event.properties.recomm_id}",
                            "required": false,
                            "description": "The ID of the clicked recommendation (if the view is based on a recommendation request)."
                        },
                        {
                            "key": "additionalData",
                            "type": "dictionary",
                            "label": "Additional Data",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "Additional data to be stored with the view. *Keep this field empty unless instructed by the Recombee Support team.*"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "addDetailView",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Ecommerce - Product Viewed",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify') and event = 'Product Viewed'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "userId",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id ?? event.distinct_id}",
                            "required": true,
                            "description": "The ID of the user who viewed the item."
                        },
                        {
                            "key": "itemId",
                            "type": "string",
                            "label": "Item ID",
                            "secret": false,
                            "default": "{event.properties.product_id ?? event.properties.sku}",
                            "required": true,
                            "description": "The viewed item."
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": false,
                            "description": "The UTC timestamp of when the view occurred."
                        },
                        {
                            "key": "duration",
                            "type": "string",
                            "label": "Duration",
                            "secret": false,
                            "required": false,
                            "description": "The duration of the view in seconds."
                        },
                        {
                            "key": "recommId",
                            "type": "string",
                            "label": "Recommendation ID",
                            "secret": false,
                            "default": "{event.properties.recomm_id}",
                            "required": false,
                            "description": "The ID of the clicked recommendation (if the view is based on a recommendation request)."
                        },
                        {
                            "key": "additionalData",
                            "type": "dictionary",
                            "label": "Additional Data",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "Additional data to be stored with the view. *Keep this field empty unless instructed by the Recombee Support team.*"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "addDetailView",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Ecommerce - Product Added",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify') and event = 'Product Added'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "userId",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id ?? event.distinct_id}",
                            "required": true,
                            "description": "The ID of the user who added the item to the cart."
                        },
                        {
                            "key": "item",
                            "type": "dictionary",
                            "label": "Item",
                            "secret": false,
                            "default": {
                                "price": "{event.properties.price}",
                                "amount": "{event.properties.quantity}",
                                "itemId": "{event.properties.product_id ?? event.properties.sku}"
                            },
                            "required": true,
                            "description": "The item that was added to the cart."
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": false,
                            "description": "The UTC timestamp of when the cart addition occurred."
                        },
                        {
                            "key": "recommId",
                            "type": "string",
                            "label": "Recommendation ID",
                            "secret": false,
                            "default": "{event.properties.recomm_id}",
                            "required": false,
                            "description": "The ID of the clicked recommendation (if the cart addition is based on a recommendation request)."
                        },
                        {
                            "key": "additionalData",
                            "type": "dictionary",
                            "label": "Additional Data",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "Additional data to be stored with the cart addition. *Keep this field empty unless instructed by the Recombee Support team.*"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "addCartAddition",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Ecommerce - Product Removed",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify') and event = 'Product Removed'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "userId",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id ?? event.distinct_id}",
                            "required": true,
                            "description": "The ID of the user who added the item to the cart."
                        },
                        {
                            "key": "itemId",
                            "type": "string",
                            "label": "Item ID",
                            "secret": false,
                            "default": "{event.properties.product_id ?? event.properties.sku}",
                            "required": true,
                            "description": "The item that was added to the cart."
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "required": false,
                            "description": "The UTC timestamp of when the cart addition occurred. If the timestamp is omitted, then all the cart additions with the given `userId` and `itemId` are deleted."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "deleteCartAddition",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Ecommerce - Order Completed",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify') and event = 'Order Completed'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "userId",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id ?? event.distinct_id}",
                            "required": true,
                            "description": "The ID of the user who purchased the item(s)."
                        },
                        {
                            "key": "items",
                            "type": "string",
                            "label": "Items",
                            "secret": false,
                            "default": "{event.properties.products}",
                            "required": true,
                            "description": "The items that were purchased."
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": false,
                            "description": "The UTC timestamp of when the purchase occurred."
                        },
                        {
                            "key": "recommId",
                            "type": "string",
                            "label": "Recommendation ID",
                            "secret": false,
                            "default": "{event.properties.recomm_id}",
                            "required": false,
                            "description": "The ID of the clicked recommendation (if the purchase is based on a recommendation request)."
                        },
                        {
                            "key": "additionalData",
                            "type": "dictionary",
                            "label": "Additional Data",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "Additional data to be stored with the purchase. *Keep this field empty unless instructed by the Recombee Support team.*"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "addPurchase",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Ecommerce - Product Added to Wishlist",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify') and event = 'Product Added to Wishlist'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "userId",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id ?? event.distinct_id}",
                            "required": true,
                            "description": "The ID of the user who bookmarked the item."
                        },
                        {
                            "key": "itemId",
                            "type": "string",
                            "label": "Item ID",
                            "secret": false,
                            "default": "{event.properties.product_id ?? event.properties.sku}",
                            "required": true,
                            "description": "The bookmarked item."
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": false,
                            "description": "The UTC timestamp of when the bookmark event occurred."
                        },
                        {
                            "key": "recommId",
                            "type": "string",
                            "label": "Recommendation ID",
                            "secret": false,
                            "default": "{event.properties.recomm_id}",
                            "required": false,
                            "description": "The ID of the clicked recommendation (if the bookmark is based on a recommendation request)."
                        },
                        {
                            "key": "additionalData",
                            "type": "dictionary",
                            "label": "Additional Data",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "Additional data to be stored with the bookmark. *Keep this field empty unless instructed by the Recombee Support team.*"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "addBookmark",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Ecommerce - Product Removed from Wishlist",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify') and event = 'Product Removed from Wishlist'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "userId",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id ?? event.distinct_id}",
                            "required": true,
                            "description": "The ID of the user who bookmarked the item."
                        },
                        {
                            "key": "itemId",
                            "type": "string",
                            "label": "Item ID",
                            "secret": false,
                            "default": "{event.properties.product_id ?? event.properties.sku}",
                            "required": true,
                            "description": "The item that was bookmarked."
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "required": false,
                            "description": "The UTC timestamp of when the bookmark occurred. If the timestamp is omitted, then all the bookmarks with the given `userId` and `itemId` are deleted."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "deleteBookmark",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Ecommerce - Product Shared",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify') and event = 'Product Shared'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "userId",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id ?? event.distinct_id}",
                            "required": true,
                            "description": "The ID of the user who bookmarked the item."
                        },
                        {
                            "key": "itemId",
                            "type": "string",
                            "label": "Item ID",
                            "secret": false,
                            "default": "{event.properties.product_id ?? event.properties.sku}",
                            "required": true,
                            "description": "The bookmarked item."
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": false,
                            "description": "The UTC timestamp of when the bookmark event occurred."
                        },
                        {
                            "key": "recommId",
                            "type": "string",
                            "label": "Recommendation ID",
                            "secret": false,
                            "default": "{event.properties.recomm_id}",
                            "required": false,
                            "description": "The ID of the clicked recommendation (if the bookmark is based on a recommendation request)."
                        },
                        {
                            "key": "additionalData",
                            "type": "dictionary",
                            "label": "Additional Data",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "Additional data to be stored with the bookmark. *Keep this field empty unless instructed by the Recombee Support team.*"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "addBookmark",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Video - Playback Started",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify') and event = 'Video Playback Started'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "userId",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id ?? event.distinct_id}",
                            "required": true,
                            "description": "The ID of the user who viewed a portion of the item."
                        },
                        {
                            "key": "itemId",
                            "type": "string",
                            "label": "Item ID",
                            "secret": false,
                            "default": "{event.properties.content_asset_id ?? event.properties.content_asset_ids[0]}",
                            "required": true,
                            "description": "The viewed item."
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": false,
                            "description": "The UTC timestamp of when the view portion occurred."
                        },
                        {
                            "key": "portion",
                            "type": "string",
                            "label": "Portion",
                            "secret": false,
                            "default": "0",
                            "required": true,
                            "description": "The viewed portion of the item as a number in the interval [0.0,1.0], where 0.0 means the user viewed nothing and 1.0 means the full item was viewed. It should be the actual viewed part of the item, no matter the seeking. For example, if the user seeked immediately to half of the item and then viewed 10% of the item, the `portion` should still be `0.1`."
                        },
                        {
                            "key": "sessionId",
                            "type": "string",
                            "label": "Session ID",
                            "secret": false,
                            "default": "{event.properties.session}",
                            "required": false,
                            "description": "The ID of the session in which the user viewed the item."
                        },
                        {
                            "key": "recommId",
                            "type": "string",
                            "label": "Recommendation ID",
                            "secret": false,
                            "default": "{event.properties.recomm_id}",
                            "required": false,
                            "description": "The ID of the clicked recommendation (if the view portion is based on a recommendation request)."
                        },
                        {
                            "key": "additionalData",
                            "type": "dictionary",
                            "label": "Additional Data",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "Additional data to be stored with the view portion. *Keep this field empty unless instructed by the Recombee Support team.*"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "setViewPortion",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Video - Content Playing",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify') and event = 'Video Content Playing'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "userId",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id ?? event.distinct_id}",
                            "required": true,
                            "description": "The ID of the user who viewed a portion of the item."
                        },
                        {
                            "key": "itemId",
                            "type": "string",
                            "label": "Item ID",
                            "secret": false,
                            "default": "{event.properties.content_asset_id ?? event.properties.content_asset_ids[0]}",
                            "required": true,
                            "description": "The viewed item."
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": false,
                            "description": "The UTC timestamp of when the view portion occurred."
                        },
                        {
                            "key": "portion",
                            "type": "dictionary",
                            "label": "Portion",
                            "secret": false,
                            "default": {
                                "watchTime": "{event.properties.position}",
                                "totalLength": "{event.properties.total_length}"
                            },
                            "required": true,
                            "description": "The portion of the item that the user viewed."
                        },
                        {
                            "key": "sessionId",
                            "type": "string",
                            "label": "Session ID",
                            "secret": false,
                            "default": "{event.properties.session}",
                            "required": false,
                            "description": "The ID of the session in which the user viewed the item."
                        },
                        {
                            "key": "recommId",
                            "type": "string",
                            "label": "Recommendation ID",
                            "secret": false,
                            "default": "{event.properties.recomm_id}",
                            "required": false,
                            "description": "The ID of the clicked recommendation (if the view portion is based on a recommendation request)."
                        },
                        {
                            "key": "additionalData",
                            "type": "dictionary",
                            "label": "Additional Data",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "Additional data to be stored with the view portion. *Keep this field empty unless instructed by the Recombee Support team.*"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "setViewPortionFromWatchTime",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Video - Playback Paused",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify') and event = 'Video Playback Paused'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "userId",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id ?? event.distinct_id}",
                            "required": true,
                            "description": "The ID of the user who viewed a portion of the item."
                        },
                        {
                            "key": "itemId",
                            "type": "string",
                            "label": "Item ID",
                            "secret": false,
                            "default": "{event.properties.content_asset_id}",
                            "required": true,
                            "description": "The viewed item."
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": false,
                            "description": "The UTC timestamp of when the view portion occurred."
                        },
                        {
                            "key": "portion",
                            "type": "dictionary",
                            "label": "Portion",
                            "secret": false,
                            "default": {
                                "watchTime": "{event.properties.position}",
                                "totalLength": "{event.properties.total_length}"
                            },
                            "required": true,
                            "description": "The portion of the item that the user viewed."
                        },
                        {
                            "key": "sessionId",
                            "type": "string",
                            "label": "Session ID",
                            "secret": false,
                            "default": "{event.properties.session}",
                            "required": false,
                            "description": "The ID of the session in which the user viewed the item."
                        },
                        {
                            "key": "recommId",
                            "type": "string",
                            "label": "Recommendation ID",
                            "secret": false,
                            "default": "{event.properties.recomm_id}",
                            "required": false,
                            "description": "The ID of the clicked recommendation (if the view portion is based on a recommendation request)."
                        },
                        {
                            "key": "additionalData",
                            "type": "dictionary",
                            "label": "Additional Data",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "Additional data to be stored with the view portion. *Keep this field empty unless instructed by the Recombee Support team.*"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "setViewPortionFromWatchTime",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Video - Playback Completed",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify') and event = 'Video Playback Completed'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "userId",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id ?? event.distinct_id}",
                            "required": true,
                            "description": "The ID of the user who viewed a portion of the item."
                        },
                        {
                            "key": "itemId",
                            "type": "string",
                            "label": "Item ID",
                            "secret": false,
                            "default": "{event.properties.content_asset_id ?? event.properties.content_asset_ids[0]}",
                            "required": true,
                            "description": "The viewed item."
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": false,
                            "description": "The UTC timestamp of when the view portion occurred."
                        },
                        {
                            "key": "portion",
                            "type": "string",
                            "label": "Portion",
                            "secret": false,
                            "default": "1",
                            "required": true,
                            "description": "The viewed portion of the item as a number in the interval [0.0,1.0], where 0.0 means the user viewed nothing and 1.0 means the full item was viewed. It should be the actual viewed part of the item, no matter the seeking. For example, if the user seeked immediately to half of the item and then viewed 10% of the item, the `portion` should still be `0.1`."
                        },
                        {
                            "key": "sessionId",
                            "type": "string",
                            "label": "Session ID",
                            "secret": false,
                            "default": "{event.properties.session}",
                            "required": false,
                            "description": "The ID of the session in which the user viewed the item."
                        },
                        {
                            "key": "recommId",
                            "type": "string",
                            "label": "Recommendation ID",
                            "secret": false,
                            "default": "{event.properties.recomm_id}",
                            "required": false,
                            "description": "The ID of the clicked recommendation (if the view portion is based on a recommendation request)."
                        },
                        {
                            "key": "additionalData",
                            "type": "dictionary",
                            "label": "Additional Data",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "Additional data to be stored with the view portion. *Keep this field empty unless instructed by the Recombee Support team.*"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "setViewPortion",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Screen - Viewed",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event = '$screen'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "userId",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id ?? event.distinct_id}",
                            "required": true,
                            "description": "The ID of the user who viewed the item."
                        },
                        {
                            "key": "itemId",
                            "type": "string",
                            "label": "Item ID",
                            "secret": false,
                            "default": "{event.event}",
                            "required": true,
                            "description": "The viewed item."
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": false,
                            "description": "The UTC timestamp of when the view occurred."
                        },
                        {
                            "key": "duration",
                            "type": "string",
                            "label": "Duration",
                            "secret": false,
                            "required": false,
                            "description": "The duration of the view in seconds."
                        },
                        {
                            "key": "recommId",
                            "type": "string",
                            "label": "Recommendation ID",
                            "secret": false,
                            "default": "{event.properties.recomm_id}",
                            "required": false,
                            "description": "The ID of the clicked recommendation (if the view is based on a recommendation request)."
                        },
                        {
                            "key": "additionalData",
                            "type": "dictionary",
                            "label": "Additional Data",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "Additional data to be stored with the view. *Keep this field empty unless instructed by the Recombee Support team.*"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "addDetailView",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Alias",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event = '$alias'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "targetUserId",
                            "type": "string",
                            "label": "Target User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": true,
                            "description": "The ID of the target user that will be **kept** after the merge."
                        },
                        {
                            "key": "sourceUserId",
                            "type": "string",
                            "label": "Source User ID",
                            "secret": false,
                            "default": "{event.previousId}",
                            "required": true,
                            "description": "The ID of the source user that will be **deleted** after the merge."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "mergeUsers",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                }
            ],
            "mappings": null,
            "status": "alpha",
            "free": false,
            "type": "destination",
            "id": "segment-actions-recombee",
            "name": "Recombee",
            "hog": "return event",
            "inputs_schema": [
                {
                    "key": "databaseId",
                    "type": "string",
                    "label": "Database ID",
                    "secret": false,
                    "required": true,
                    "description": "The ID of the Recombee Database into which the interactions will be sent."
                },
                {
                    "key": "privateToken",
                    "type": "string",
                    "label": "Private Token",
                    "secret": true,
                    "required": true,
                    "description": "The private token for the Recombee Database used."
                },
                {
                    "key": "databaseRegion",
                    "type": "choice",
                    "label": "Database Region",
                    "secret": false,
                    "choices": [
                        {
                            "label": "EU",
                            "value": "eu-west"
                        },
                        {
                            "label": "Canada (East Coast)",
                            "value": "ca-east"
                        },
                        {
                            "label": "Australia",
                            "value": "ap-se"
                        },
                        {
                            "label": "US (West Coast)",
                            "value": "us-west"
                        },
                        {
                            "label": "Custom",
                            "value": "custom"
                        }
                    ],
                    "default": "eu-west",
                    "required": true,
                    "description": "The Recombee cluster where your Database is located. [Learn more](https://docs.recombee.com/regions)"
                },
                {
                    "key": "apiUri",
                    "type": "string",
                    "label": "API URI",
                    "secret": false,
                    "required": false,
                    "description": "URI of the Recombee API that should be used. *Keep this field empty unless you are calling the Recombee cluster based in a specific region or you were assigned a custom URI by the Recombee Support team.*"
                },
                {
                    "key": "debug_mode",
                    "type": "boolean",
                    "label": "Debug Mode",
                    "default": false,
                    "description": "Will log configuration and request details"
                }
            ],
            "category": [],
            "code_language": "hog",
            "description": "Send event data to Recombee",
            "filters": null,
            "masking": null,
            "icon_url": "/static/services/recombee.com.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-redash",
            "name": "Redash",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Analytics"],
            "code_language": "hog",
            "description": "Send events to Redash.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Redash.svg"
        },
        {
            "mapping_templates": [
                {
                    "name": "Page Visit",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": "$pageview",
                                "name": "Pageview",
                                "type": "events"
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "eventType",
                            "type": "string",
                            "label": "Event Type",
                            "default": "PageVisit",
                            "required": true,
                            "description": "Check out this page for possible event types: https://business.reddithelp.com/s/article/manual-conversion-events-with-the-reddit-pixel"
                        },
                        {
                            "key": "rdt_cid",
                            "type": "string",
                            "label": "Reddit Click ID (rdt_cid)",
                            "secret": false,
                            "default": "{person.properties.rdt_cid ?? person.properties.$initial_rdt_cid}",
                            "required": false,
                            "description": "The Reddit click ID (rdt_cid) associated with this conversion."
                        },
                        {
                            "key": "eventProperties",
                            "type": "dictionary",
                            "label": "Event parameters",
                            "secret": false,
                            "default": {
                                "value": "{toFloat(event.properties.value ?? event.properties.revenue ?? event.properties.price)}",
                                "currency": "{event.properties.currency}",
                                "products": "{event.properties.products ? arrayMap(product -> ({'id': product.product_id, 'category': product.category, 'name': product.name}), event.properties.products) : event.properties.product_id ? [{'id': event.properties.product_id, 'category': event.properties.category, 'name': event.properties.name}] : null}",
                                "conversion_id": "{event.uuid}"
                            },
                            "required": false,
                            "description": "Map of Reddit event attributes and their values. Check out these pages for more details: https://business.reddithelp.com/s/article/manual-conversion-events-with-the-reddit-pixel and https://business.reddithelp.com/s/article/about-event-metadata"
                        }
                    ]
                },
                {
                    "name": "Search",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": "Products Searched",
                                "type": "events"
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "eventType",
                            "type": "string",
                            "label": "Event Type",
                            "default": "Search",
                            "required": true,
                            "description": "Check out this page for possible event types: https://business.reddithelp.com/s/article/manual-conversion-events-with-the-reddit-pixel"
                        },
                        {
                            "key": "rdt_cid",
                            "type": "string",
                            "label": "Reddit Click ID (rdt_cid)",
                            "secret": false,
                            "default": "{person.properties.rdt_cid ?? person.properties.$initial_rdt_cid}",
                            "required": false,
                            "description": "The Reddit click ID (rdt_cid) associated with this conversion."
                        },
                        {
                            "key": "eventProperties",
                            "type": "dictionary",
                            "label": "Event parameters",
                            "secret": false,
                            "default": {
                                "value": "{toFloat(event.properties.value ?? event.properties.revenue ?? event.properties.price)}",
                                "currency": "{event.properties.currency}",
                                "products": "{event.properties.products ? arrayMap(product -> ({'id': product.product_id, 'category': product.category, 'name': product.name}), event.properties.products) : event.properties.product_id ? [{'id': event.properties.product_id, 'category': event.properties.category, 'name': event.properties.name}] : null}",
                                "conversion_id": "{event.uuid}"
                            },
                            "required": false,
                            "description": "Map of Reddit event attributes and their values. Check out these pages for more details: https://business.reddithelp.com/s/article/manual-conversion-events-with-the-reddit-pixel and https://business.reddithelp.com/s/article/about-event-metadata"
                        }
                    ]
                },
                {
                    "name": "Product Added",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": "Product Added",
                                "type": "events"
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "eventType",
                            "type": "string",
                            "label": "Event Type",
                            "default": "AddToCart",
                            "required": true,
                            "description": "Check out this page for possible event types: https://business.reddithelp.com/s/article/manual-conversion-events-with-the-reddit-pixel"
                        },
                        {
                            "key": "rdt_cid",
                            "type": "string",
                            "label": "Reddit Click ID (rdt_cid)",
                            "secret": false,
                            "default": "{person.properties.rdt_cid ?? person.properties.$initial_rdt_cid}",
                            "required": false,
                            "description": "The Reddit click ID (rdt_cid) associated with this conversion."
                        },
                        {
                            "key": "eventProperties",
                            "type": "dictionary",
                            "label": "Event parameters",
                            "secret": false,
                            "default": {
                                "value": "{toFloat(event.properties.value ?? event.properties.revenue ?? event.properties.price)}",
                                "currency": "{event.properties.currency}",
                                "products": "{event.properties.products ? arrayMap(product -> ({'id': product.product_id, 'category': product.category, 'name': product.name}), event.properties.products) : event.properties.product_id ? [{'id': event.properties.product_id, 'category': event.properties.category, 'name': event.properties.name}] : null}",
                                "conversion_id": "{event.uuid}"
                            },
                            "required": false,
                            "description": "Map of Reddit event attributes and their values. Check out these pages for more details: https://business.reddithelp.com/s/article/manual-conversion-events-with-the-reddit-pixel and https://business.reddithelp.com/s/article/about-event-metadata"
                        }
                    ]
                },
                {
                    "name": "Product Added to Wishlist",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": "Product Added to Wishlist",
                                "type": "events"
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "eventType",
                            "type": "string",
                            "label": "Event Type",
                            "default": "AddToWishlist",
                            "required": true,
                            "description": "Check out this page for possible event types: https://business.reddithelp.com/s/article/manual-conversion-events-with-the-reddit-pixel"
                        },
                        {
                            "key": "rdt_cid",
                            "type": "string",
                            "label": "Reddit Click ID (rdt_cid)",
                            "secret": false,
                            "default": "{person.properties.rdt_cid ?? person.properties.$initial_rdt_cid}",
                            "required": false,
                            "description": "The Reddit click ID (rdt_cid) associated with this conversion."
                        },
                        {
                            "key": "eventProperties",
                            "type": "dictionary",
                            "label": "Event parameters",
                            "secret": false,
                            "default": {
                                "value": "{toFloat(event.properties.value ?? event.properties.revenue ?? event.properties.price)}",
                                "currency": "{event.properties.currency}",
                                "products": "{event.properties.products ? arrayMap(product -> ({'id': product.product_id, 'category': product.category, 'name': product.name}), event.properties.products) : event.properties.product_id ? [{'id': event.properties.product_id, 'category': event.properties.category, 'name': event.properties.name}] : null}",
                                "conversion_id": "{event.uuid}"
                            },
                            "required": false,
                            "description": "Map of Reddit event attributes and their values. Check out these pages for more details: https://business.reddithelp.com/s/article/manual-conversion-events-with-the-reddit-pixel and https://business.reddithelp.com/s/article/about-event-metadata"
                        }
                    ]
                },
                {
                    "name": "Order Completed",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": "Order Completed",
                                "type": "events"
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "eventType",
                            "type": "string",
                            "label": "Event Type",
                            "default": "Purchase",
                            "required": true,
                            "description": "Check out this page for possible event types: https://business.reddithelp.com/s/article/manual-conversion-events-with-the-reddit-pixel"
                        },
                        {
                            "key": "rdt_cid",
                            "type": "string",
                            "label": "Reddit Click ID (rdt_cid)",
                            "secret": false,
                            "default": "{person.properties.rdt_cid ?? person.properties.$initial_rdt_cid}",
                            "required": false,
                            "description": "The Reddit click ID (rdt_cid) associated with this conversion."
                        },
                        {
                            "key": "eventProperties",
                            "type": "dictionary",
                            "label": "Event parameters",
                            "secret": false,
                            "default": {
                                "value": "{toFloat(event.properties.value ?? event.properties.revenue ?? event.properties.price)}",
                                "currency": "{event.properties.currency}",
                                "products": "{event.properties.products ? arrayMap(product -> ({'id': product.product_id, 'category': product.category, 'name': product.name}), event.properties.products) : event.properties.product_id ? [{'id': event.properties.product_id, 'category': event.properties.category, 'name': event.properties.name}] : null}",
                                "conversion_id": "{event.uuid}"
                            },
                            "required": false,
                            "description": "Map of Reddit event attributes and their values. Check out these pages for more details: https://business.reddithelp.com/s/article/manual-conversion-events-with-the-reddit-pixel and https://business.reddithelp.com/s/article/about-event-metadata"
                        }
                    ]
                },
                {
                    "name": "Product Viewed",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": "Product Viewed",
                                "type": "events"
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "eventType",
                            "type": "string",
                            "label": "Event Type",
                            "default": "ViewContent",
                            "required": true,
                            "description": "Check out this page for possible event types: https://business.reddithelp.com/s/article/manual-conversion-events-with-the-reddit-pixel"
                        },
                        {
                            "key": "rdt_cid",
                            "type": "string",
                            "label": "Reddit Click ID (rdt_cid)",
                            "secret": false,
                            "default": "{person.properties.rdt_cid ?? person.properties.$initial_rdt_cid}",
                            "required": false,
                            "description": "The Reddit click ID (rdt_cid) associated with this conversion."
                        },
                        {
                            "key": "eventProperties",
                            "type": "dictionary",
                            "label": "Event parameters",
                            "secret": false,
                            "default": {
                                "value": "{toFloat(event.properties.value ?? event.properties.revenue ?? event.properties.price)}",
                                "currency": "{event.properties.currency}",
                                "products": "{event.properties.products ? arrayMap(product -> ({'id': product.product_id, 'category': product.category, 'name': product.name}), event.properties.products) : event.properties.product_id ? [{'id': event.properties.product_id, 'category': event.properties.category, 'name': event.properties.name}] : null}",
                                "conversion_id": "{event.uuid}"
                            },
                            "required": false,
                            "description": "Map of Reddit event attributes and their values. Check out these pages for more details: https://business.reddithelp.com/s/article/manual-conversion-events-with-the-reddit-pixel and https://business.reddithelp.com/s/article/about-event-metadata"
                        }
                    ]
                },
                {
                    "name": "Lead Generated",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": "Lead Generated",
                                "type": "events"
                            }
                        ],
                        "bytecode": ["_H", 1, 32, "Lead Generated", 32, "event", 1, 1, 11, 3, 1, 4, 1]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "eventType",
                            "type": "string",
                            "label": "Event Type",
                            "default": "Lead",
                            "required": true,
                            "description": "Check out this page for possible event types: https://business.reddithelp.com/s/article/manual-conversion-events-with-the-reddit-pixel"
                        },
                        {
                            "key": "rdt_cid",
                            "type": "string",
                            "label": "Reddit Click ID (rdt_cid)",
                            "secret": false,
                            "default": "{person.properties.rdt_cid ?? person.properties.$initial_rdt_cid}",
                            "required": false,
                            "description": "The Reddit click ID (rdt_cid) associated with this conversion."
                        },
                        {
                            "key": "eventProperties",
                            "type": "dictionary",
                            "label": "Event parameters",
                            "secret": false,
                            "default": {
                                "value": "{toFloat(event.properties.value ?? event.properties.revenue ?? event.properties.price)}",
                                "currency": "{event.properties.currency}",
                                "products": "{event.properties.products ? arrayMap(product -> ({'id': product.product_id, 'category': product.category, 'name': product.name}), event.properties.products) : event.properties.product_id ? [{'id': event.properties.product_id, 'category': event.properties.category, 'name': event.properties.name}] : null}",
                                "conversion_id": "{event.uuid}"
                            },
                            "required": false,
                            "description": "Map of Reddit event attributes and their values. Check out these pages for more details: https://business.reddithelp.com/s/article/manual-conversion-events-with-the-reddit-pixel and https://business.reddithelp.com/s/article/about-event-metadata"
                        }
                    ]
                },
                {
                    "name": "Signed Up",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": "Signed Up",
                                "type": "events"
                            }
                        ],
                        "bytecode": ["_H", 1, 32, "Signed Up", 32, "event", 1, 1, 11, 3, 1, 4, 1]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "eventType",
                            "type": "string",
                            "label": "Event Type",
                            "default": "SignUp",
                            "required": true,
                            "description": "Check out this page for possible event types: https://business.reddithelp.com/s/article/manual-conversion-events-with-the-reddit-pixel"
                        },
                        {
                            "key": "rdt_cid",
                            "type": "string",
                            "label": "Reddit Click ID (rdt_cid)",
                            "secret": false,
                            "default": "{person.properties.rdt_cid ?? person.properties.$initial_rdt_cid}",
                            "required": false,
                            "description": "The Reddit click ID (rdt_cid) associated with this conversion."
                        },
                        {
                            "key": "eventProperties",
                            "type": "dictionary",
                            "label": "Event parameters",
                            "secret": false,
                            "default": {
                                "value": "{toFloat(event.properties.value ?? event.properties.revenue ?? event.properties.price)}",
                                "currency": "{event.properties.currency}",
                                "products": "{event.properties.products ? arrayMap(product -> ({'id': product.product_id, 'category': product.category, 'name': product.name}), event.properties.products) : event.properties.product_id ? [{'id': event.properties.product_id, 'category': event.properties.category, 'name': event.properties.name}] : null}",
                                "conversion_id": "{event.uuid}"
                            },
                            "required": false,
                            "description": "Map of Reddit event attributes and their values. Check out these pages for more details: https://business.reddithelp.com/s/article/manual-conversion-events-with-the-reddit-pixel and https://business.reddithelp.com/s/article/about-event-metadata"
                        }
                    ]
                }
            ],
            "mappings": null,
            "status": "alpha",
            "free": false,
            "type": "destination",
            "id": "template-reddit-conversions-api",
            "name": "Reddit Conversions API",
            "hog": "if (empty(inputs.accountId) or empty(inputs.conversionsAccessToken)) {\n    throw Error('Account ID and access token are required')\n}\n\nlet RDT_ALLOWED_EVENT_NAMES := [\n    'PageVisit',\n    'Search',\n    'AddToCart',\n    'AddToWishlist',\n    'Purchase',\n    'ViewContent',\n    'Lead',\n    'SignUp',\n    'Custom',\n];\n\nlet eventProperties := {};\nfor (let key, value in inputs.eventProperties) {\n    if (not empty(value)) {\n        eventProperties[key] := value;\n    }\n}\n\nlet userProperties := {};\nfor (let key, value in inputs.userProperties) {\n    if (not empty(value)) {\n        userProperties[key] := value;\n    }\n}\n\nlet eventType := {'tracking_type': inputs.eventType};\nif (not has(RDT_ALLOWED_EVENT_NAMES, inputs.eventType)) {\n    eventType.tracking_type := 'Custom';\n    eventType.custom_event_name := inputs.eventType;\n}\n\nlet eventData := {\n    'event_at': event.timestamp,\n    'event_type': eventType,\n    'user': userProperties,\n    'event_metadata': eventProperties,\n};\n\nif (not empty(inputs.rdt_cid)) {\n    eventData['click_id'] := inputs.rdt_cid;\n}\n\nlet events := [eventData];\n\nlet body := {\n    'test_mode': false,\n    'events': events,\n};\n\nlet url := f'https://ads-api.reddit.com/api/v2.0/conversions/events/{inputs.accountId}';\nlet userAgent := 'hog:com.posthog.cdp:0.0.1 (by /u/PostHogTeam)';\nlet headers := {\n        'Content-Type': 'application/json',\n        'Authorization': f'Bearer {inputs.conversionsAccessToken}',\n        'User-Agent': userAgent,\n    };\n\nlet res := fetch(url, {\n    'method': 'POST',\n    'headers': headers,\n    'body': body,\n});\nif (res.status >= 400) {\n    throw Error(f'Error from https://ads-api.reddit.com (status {res.status}): {res.body}')\n}",
            "inputs_schema": [
                {
                    "key": "accountId",
                    "type": "string",
                    "label": "Reddit Ads account ID",
                    "secret": false,
                    "default": "",
                    "required": true,
                    "description": "The ID of the Reddit Ads account that the conversion event belongs to. Your account ID may or may not contain the t2_ prefix."
                },
                {
                    "key": "conversionsAccessToken",
                    "type": "string",
                    "label": "Conversion Access Token",
                    "secret": true,
                    "default": "",
                    "required": true,
                    "description": "You must obtain a Conversion Access Token."
                },
                {
                    "key": "userProperties",
                    "type": "dictionary",
                    "label": "User parameters",
                    "secret": false,
                    "default": {
                        "ip": "{sha256Hex(event.properties.$ip)}",
                        "email": "{person.properties.email}",
                        "user_agent": "{person.properties.$raw_user_agent}",
                        "screen_dimensions": "{{'width': person.properties.$screen_width, 'height': person.properties.$screen_height}}"
                    },
                    "required": false,
                    "description": "Map of Reddit user parameters and their values. Check out this page for more details: https://business.reddithelp.com/s/article/manual-conversion-events-with-the-reddit-pixel"
                }
            ],
            "category": ["Advertisement"],
            "code_language": "hog",
            "description": "Track how many Reddit users interact with your website.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/services/reddit.png"
        },
        {
            "mapping_templates": [
                {
                    "name": "Page Visit",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": "$pageview",
                                "name": "Pageview",
                                "type": "events"
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "eventType",
                            "type": "string",
                            "label": "Event Type",
                            "default": "PageVisit",
                            "required": true,
                            "description": "Check out this page for possible event types: https://business.reddithelp.com/s/article/manual-conversion-events-with-the-reddit-pixel"
                        },
                        {
                            "key": "eventProperties",
                            "type": "dictionary",
                            "label": "Event parameters",
                            "secret": false,
                            "default": {
                                "value": "{toFloat(event.properties.value ?? event.properties.revenue ?? event.properties.price)}",
                                "currency": "{event.properties.currency}",
                                "products": "{event.properties.products ? arrayMap(product -> ({'id': product.product_id, 'category': product.category, 'name': product.name}), event.properties.products) : event.properties.product_id ? [{'id': event.properties.product_id, 'category': event.properties.category, 'name': event.properties.name}] : undefined}",
                                "conversion_id": "{event.uuid}"
                            },
                            "required": false,
                            "description": "Map of Reddit event attributes and their values. Check out these pages for more details: https://business.reddithelp.com/s/article/manual-conversion-events-with-the-reddit-pixel and https://business.reddithelp.com/s/article/about-event-metadata"
                        }
                    ]
                },
                {
                    "name": "Search",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": "Products Searched",
                                "name": "Products Searched",
                                "type": "events"
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "eventType",
                            "type": "string",
                            "label": "Event Type",
                            "default": "Search",
                            "required": true,
                            "description": "Check out this page for possible event types: https://business.reddithelp.com/s/article/manual-conversion-events-with-the-reddit-pixel"
                        },
                        {
                            "key": "eventProperties",
                            "type": "dictionary",
                            "label": "Event parameters",
                            "secret": false,
                            "default": {
                                "value": "{toFloat(event.properties.value ?? event.properties.revenue ?? event.properties.price)}",
                                "currency": "{event.properties.currency}",
                                "products": "{event.properties.products ? arrayMap(product -> ({'id': product.product_id, 'category': product.category, 'name': product.name}), event.properties.products) : event.properties.product_id ? [{'id': event.properties.product_id, 'category': event.properties.category, 'name': event.properties.name}] : undefined}",
                                "conversion_id": "{event.uuid}"
                            },
                            "required": false,
                            "description": "Map of Reddit event attributes and their values. Check out these pages for more details: https://business.reddithelp.com/s/article/manual-conversion-events-with-the-reddit-pixel and https://business.reddithelp.com/s/article/about-event-metadata"
                        }
                    ]
                },
                {
                    "name": "Product Added",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": "Product Added",
                                "name": "Product Added",
                                "type": "events"
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "eventType",
                            "type": "string",
                            "label": "Event Type",
                            "default": "AddToCart",
                            "required": true,
                            "description": "Check out this page for possible event types: https://business.reddithelp.com/s/article/manual-conversion-events-with-the-reddit-pixel"
                        },
                        {
                            "key": "eventProperties",
                            "type": "dictionary",
                            "label": "Event parameters",
                            "secret": false,
                            "default": {
                                "value": "{toFloat(event.properties.value ?? event.properties.revenue ?? event.properties.price)}",
                                "currency": "{event.properties.currency}",
                                "products": "{event.properties.products ? arrayMap(product -> ({'id': product.product_id, 'category': product.category, 'name': product.name}), event.properties.products) : event.properties.product_id ? [{'id': event.properties.product_id, 'category': event.properties.category, 'name': event.properties.name}] : undefined}",
                                "conversion_id": "{event.uuid}"
                            },
                            "required": false,
                            "description": "Map of Reddit event attributes and their values. Check out these pages for more details: https://business.reddithelp.com/s/article/manual-conversion-events-with-the-reddit-pixel and https://business.reddithelp.com/s/article/about-event-metadata"
                        }
                    ]
                },
                {
                    "name": "Product Added to Wishlist",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": "Product Added to Wishlist",
                                "name": "Product Added to Wishlist",
                                "type": "events"
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "eventType",
                            "type": "string",
                            "label": "Event Type",
                            "default": "AddToWishlist",
                            "required": true,
                            "description": "Check out this page for possible event types: https://business.reddithelp.com/s/article/manual-conversion-events-with-the-reddit-pixel"
                        },
                        {
                            "key": "eventProperties",
                            "type": "dictionary",
                            "label": "Event parameters",
                            "secret": false,
                            "default": {
                                "value": "{toFloat(event.properties.value ?? event.properties.revenue ?? event.properties.price)}",
                                "currency": "{event.properties.currency}",
                                "products": "{event.properties.products ? arrayMap(product -> ({'id': product.product_id, 'category': product.category, 'name': product.name}), event.properties.products) : event.properties.product_id ? [{'id': event.properties.product_id, 'category': event.properties.category, 'name': event.properties.name}] : undefined}",
                                "conversion_id": "{event.uuid}"
                            },
                            "required": false,
                            "description": "Map of Reddit event attributes and their values. Check out these pages for more details: https://business.reddithelp.com/s/article/manual-conversion-events-with-the-reddit-pixel and https://business.reddithelp.com/s/article/about-event-metadata"
                        }
                    ]
                },
                {
                    "name": "Order Completed",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": "Order Completed",
                                "name": "Order Completed",
                                "type": "events"
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "eventType",
                            "type": "string",
                            "label": "Event Type",
                            "default": "Purchase",
                            "required": true,
                            "description": "Check out this page for possible event types: https://business.reddithelp.com/s/article/manual-conversion-events-with-the-reddit-pixel"
                        },
                        {
                            "key": "eventProperties",
                            "type": "dictionary",
                            "label": "Event parameters",
                            "secret": false,
                            "default": {
                                "value": "{toFloat(event.properties.value ?? event.properties.revenue ?? event.properties.price)}",
                                "currency": "{event.properties.currency}",
                                "products": "{event.properties.products ? arrayMap(product -> ({'id': product.product_id, 'category': product.category, 'name': product.name}), event.properties.products) : event.properties.product_id ? [{'id': event.properties.product_id, 'category': event.properties.category, 'name': event.properties.name}] : undefined}",
                                "conversion_id": "{event.uuid}"
                            },
                            "required": false,
                            "description": "Map of Reddit event attributes and their values. Check out these pages for more details: https://business.reddithelp.com/s/article/manual-conversion-events-with-the-reddit-pixel and https://business.reddithelp.com/s/article/about-event-metadata"
                        }
                    ]
                },
                {
                    "name": "Product Viewed",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": "Product Viewed",
                                "name": "Product Viewed",
                                "type": "events"
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "eventType",
                            "type": "string",
                            "label": "Event Type",
                            "default": "ViewContent",
                            "required": true,
                            "description": "Check out this page for possible event types: https://business.reddithelp.com/s/article/manual-conversion-events-with-the-reddit-pixel"
                        },
                        {
                            "key": "eventProperties",
                            "type": "dictionary",
                            "label": "Event parameters",
                            "secret": false,
                            "default": {
                                "value": "{toFloat(event.properties.value ?? event.properties.revenue ?? event.properties.price)}",
                                "currency": "{event.properties.currency}",
                                "products": "{event.properties.products ? arrayMap(product -> ({'id': product.product_id, 'category': product.category, 'name': product.name}), event.properties.products) : event.properties.product_id ? [{'id': event.properties.product_id, 'category': event.properties.category, 'name': event.properties.name}] : undefined}",
                                "conversion_id": "{event.uuid}"
                            },
                            "required": false,
                            "description": "Map of Reddit event attributes and their values. Check out these pages for more details: https://business.reddithelp.com/s/article/manual-conversion-events-with-the-reddit-pixel and https://business.reddithelp.com/s/article/about-event-metadata"
                        }
                    ]
                },
                {
                    "name": "Lead Generated",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": "Lead Generated",
                                "name": "Lead Generated",
                                "type": "events"
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "eventType",
                            "type": "string",
                            "label": "Event Type",
                            "default": "Lead",
                            "required": true,
                            "description": "Check out this page for possible event types: https://business.reddithelp.com/s/article/manual-conversion-events-with-the-reddit-pixel"
                        },
                        {
                            "key": "eventProperties",
                            "type": "dictionary",
                            "label": "Event parameters",
                            "secret": false,
                            "default": {
                                "value": "{toFloat(event.properties.value ?? event.properties.revenue ?? event.properties.price)}",
                                "currency": "{event.properties.currency}",
                                "products": "{event.properties.products ? arrayMap(product -> ({'id': product.product_id, 'category': product.category, 'name': product.name}), event.properties.products) : event.properties.product_id ? [{'id': event.properties.product_id, 'category': event.properties.category, 'name': event.properties.name}] : undefined}",
                                "conversion_id": "{event.uuid}"
                            },
                            "required": false,
                            "description": "Map of Reddit event attributes and their values. Check out these pages for more details: https://business.reddithelp.com/s/article/manual-conversion-events-with-the-reddit-pixel and https://business.reddithelp.com/s/article/about-event-metadata"
                        }
                    ]
                },
                {
                    "name": "Signed Up",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": "Signed Up",
                                "name": "Signed Up",
                                "type": "events"
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "eventType",
                            "type": "string",
                            "label": "Event Type",
                            "default": "SignUp",
                            "required": true,
                            "description": "Check out this page for possible event types: https://business.reddithelp.com/s/article/manual-conversion-events-with-the-reddit-pixel"
                        },
                        {
                            "key": "eventProperties",
                            "type": "dictionary",
                            "label": "Event parameters",
                            "secret": false,
                            "default": {
                                "value": "{toFloat(event.properties.value ?? event.properties.revenue ?? event.properties.price)}",
                                "currency": "{event.properties.currency}",
                                "products": "{event.properties.products ? arrayMap(product -> ({'id': product.product_id, 'category': product.category, 'name': product.name}), event.properties.products) : event.properties.product_id ? [{'id': event.properties.product_id, 'category': event.properties.category, 'name': event.properties.name}] : undefined}",
                                "conversion_id": "{event.uuid}"
                            },
                            "required": false,
                            "description": "Map of Reddit event attributes and their values. Check out these pages for more details: https://business.reddithelp.com/s/article/manual-conversion-events-with-the-reddit-pixel and https://business.reddithelp.com/s/article/about-event-metadata"
                        }
                    ]
                }
            ],
            "mappings": null,
            "status": "alpha",
            "free": false,
            "type": "site_destination",
            "id": "template-reddit-pixel",
            "name": "Reddit Pixel",
            "hog": "// Adds window.rdt and lazily loads the Reddit Pixel script\nfunction initSnippet() {\n    !function(w,d){if(!w.rdt){var p=w.rdt=function(){p.sendEvent?p.sendEvent.apply(p,arguments):p.callQueue.push(arguments)};p.callQueue=[];var t=d.createElement(\"script\");t.src=\"https://www.redditstatic.com/ads/pixel.js\",t.async=!0;var s=d.getElementsByTagName(\"script\")[0];s.parentNode.insertBefore(t,s)}}(window,document);\n}\n\n// These are the event names which we are allowed to call rdt with. If we want to send a different event name, we will\n// need to use the 'Custom' event name, and pass original event name as 'customEventName' in event properties.\nconst RDT_ALLOWED_EVENT_NAMES = [\n    'PageVisit',\n    'Search',\n    'AddToCart',\n    'AddToWishlist',\n    'Purchase',\n    'ViewContent',\n    'Lead',\n    'SignUp',\n    'Custom',\n];\n\nexport function onLoad({ inputs, posthog }) {\n    initSnippet();\n    let userProperties = {};\n    for (const [key, value] of Object.entries(inputs.userProperties)) {\n        if (value) {\n            userProperties[key] = value;\n        }\n    };\n    if (posthog.config.debug) {\n        console.log('[PostHog] rdt init', inputs.pixelId, userProperties);\n    }\n    rdt('init', inputs.pixelId, userProperties);\n}\nexport function onEvent({ inputs, posthog }) {\n\n    let eventProperties = {};\n    for (const [key, value] of Object.entries(inputs.eventProperties)) {\n        if (value) {\n            eventProperties[key] = value;\n        }\n    };\n    let eventName;\n    if (RDT_ALLOWED_EVENT_NAMES.includes(inputs.eventType)) {\n        eventName = inputs.eventType;\n    } else {\n        eventName = 'Custom';\n        eventProperties.customEventName = inputs.eventType;\n    }\n    if (posthog.config.debug) {\n        console.log('[PostHog] rdt track', eventName, eventProperties);\n    }\n    rdt('track', eventName, eventProperties);\n}",
            "inputs_schema": [
                {
                    "key": "pixelId",
                    "type": "string",
                    "label": "Pixel ID",
                    "secret": false,
                    "default": "",
                    "required": true,
                    "description": "You must obtain a Pixel ID to use the Reddit Pixel. If you've already set up a Pixel for your website, we recommend that you use the same Pixel ID for your browser and server events."
                },
                {
                    "key": "userProperties",
                    "type": "dictionary",
                    "label": "User parameters",
                    "secret": false,
                    "default": {
                        "email": "{person.properties.email}"
                    },
                    "required": false,
                    "description": "Map of Reddit user parameters and their values. Check out this page for more details: https://business.reddithelp.com/s/article/manual-conversion-events-with-the-reddit-pixel"
                }
            ],
            "category": ["Advertisement"],
            "code_language": "javascript",
            "description": "Track how many Reddit users interact with your website. Note that this destination will set third-party cookies.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/services/reddit.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-refersion",
            "name": "Refersion",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Marketing"],
            "code_language": "hog",
            "description": "Send events to Refersion.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Refersion.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-refiner",
            "name": "Refiner",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Customer Service"],
            "code_language": "hog",
            "description": "Send events to Refiner.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Refiner.svg"
        },
        {
            "mapping_templates": [
                {
                    "name": "Send Revx Ping",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify') or type ='screen'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "os",
                            "type": "string",
                            "label": "Platform",
                            "secret": false,
                            "default": "{event.properties.$device_type}",
                            "required": true,
                            "description": "Platform of the device."
                        },
                        {
                            "key": "advertising_id",
                            "type": "string",
                            "label": "Identifier For Advertiser (IDFA/GAID)",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "Identifier For Advertiser (IDFA/GAID)"
                        },
                        {
                            "key": "event_name",
                            "type": "string",
                            "label": "Event name",
                            "secret": false,
                            "default": "{event.event ?? event.event}",
                            "required": false,
                            "description": "A unique identifier for your event."
                        },
                        {
                            "key": "type",
                            "type": "string",
                            "label": "Request type",
                            "secret": false,
                            "default": "{event.event == '$pageview' ? 'page' : event.event == '$screen' ? 'screen' : event.event == '$groupidentify' ? 'group' : event.event in ('$identify', '$set') ? 'identify' : event.event == '$alias' ? 'alias' : 'track'}",
                            "required": false,
                            "description": "A unique identifier for your request type."
                        },
                        {
                            "key": "idfv",
                            "type": "string",
                            "label": "Identifier For Vendor (IDFV)",
                            "secret": false,
                            "default": "{event.properties.$device_id}",
                            "required": false,
                            "description": "Identifier for Device Id for IOS and Android"
                        },
                        {
                            "key": "time",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": false,
                            "description": "The timestamp of the event. If time is not sent with the event, it will be set to the request upload time."
                        },
                        {
                            "key": "event_properties",
                            "type": "dictionary",
                            "label": "Event Properties",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.properties}"
                            },
                            "required": false,
                            "description": "An object of key-value pairs that represent additional data to be sent along with the event."
                        },
                        {
                            "key": "user_properties",
                            "type": "dictionary",
                            "label": "User Properties",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{person.properties}"
                            },
                            "required": false,
                            "description": "An object of key-value pairs that represent additional data tied to the user"
                        },
                        {
                            "key": "app_version",
                            "type": "string",
                            "label": "App Version",
                            "secret": false,
                            "default": "{event.event.properties.$app_version}",
                            "required": false,
                            "description": "The current version of your application."
                        },
                        {
                            "key": "os_name",
                            "type": "string",
                            "label": "OS Name",
                            "secret": false,
                            "default": "{event.properties.$os}",
                            "required": false,
                            "description": "The name of the mobile operating system or browser that the user is using."
                        },
                        {
                            "key": "os_version",
                            "type": "string",
                            "label": "OS Version",
                            "secret": false,
                            "default": "{event.properties.$os_version}",
                            "required": false,
                            "description": "The version of the mobile operating system or browser the user is using."
                        },
                        {
                            "key": "device_brand",
                            "type": "string",
                            "label": "Device Brand",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "The device brand that the user is using."
                        },
                        {
                            "key": "device_manufacturer",
                            "type": "string",
                            "label": "Device Manufacturer",
                            "secret": false,
                            "default": "{event.properties.$device_manufacturer}",
                            "required": false,
                            "description": "The device manufacturer that the user is using."
                        },
                        {
                            "key": "device_model",
                            "type": "string",
                            "label": "Device Model",
                            "secret": false,
                            "default": "{event.properties.$device_model}",
                            "required": false,
                            "description": "The device model that the user is using."
                        },
                        {
                            "key": "carrier",
                            "type": "string",
                            "label": "Carrier",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "The carrier that the user is using."
                        },
                        {
                            "key": "country",
                            "type": "string",
                            "label": "Country",
                            "secret": false,
                            "default": "{event.properties.$geoip_country_name}",
                            "required": false,
                            "description": "The current country of the user."
                        },
                        {
                            "key": "region",
                            "type": "string",
                            "label": "Region",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "The current region of the user."
                        },
                        {
                            "key": "city",
                            "type": "string",
                            "label": "City",
                            "secret": false,
                            "default": "{event.properties.$geoip_city_name}",
                            "required": false,
                            "description": "The current city of the user."
                        },
                        {
                            "key": "dma",
                            "type": "string",
                            "label": "Designated Market Area",
                            "secret": false,
                            "required": false,
                            "description": "The current Designated Market Area of the user."
                        },
                        {
                            "key": "language",
                            "type": "string",
                            "label": "Language",
                            "secret": false,
                            "default": "{event.properties.$locale}",
                            "required": false,
                            "description": "The language set by the user."
                        },
                        {
                            "key": "product",
                            "type": "dictionary",
                            "label": "Product",
                            "secret": false,
                            "default": {
                                "price": "{event.properties.price}",
                                "quantity": "{event.properties.quantity}",
                                "productId": "{event.properties.product_id}"
                            },
                            "required": false,
                            "description": "The single product viewed or Added to cart."
                        },
                        {
                            "key": "products",
                            "type": "string",
                            "label": "Products",
                            "secret": false,
                            "default": "{event.properties.products}",
                            "required": false,
                            "description": "The list of products purchased."
                        },
                        {
                            "key": "location_lat",
                            "type": "string",
                            "label": "Latitude",
                            "secret": false,
                            "default": "{event.properties.$geoip_latitude}",
                            "required": false,
                            "description": "The current Latitude of the user."
                        },
                        {
                            "key": "location_lng",
                            "type": "string",
                            "label": "Longtitude",
                            "secret": false,
                            "default": "{event.properties.$geoip_longitude}",
                            "required": false,
                            "description": "The current Longitude of the user."
                        },
                        {
                            "key": "ip",
                            "type": "string",
                            "label": "IP Address",
                            "secret": false,
                            "default": "{event.properties.$ip}",
                            "required": false,
                            "description": "The IP address of the user. Use \"$remote\" to use the IP address on the upload request. "
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "sendRevxPing",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                }
            ],
            "mappings": null,
            "status": "alpha",
            "free": false,
            "type": "destination",
            "id": "segment-actions-revx",
            "name": "RevX Cloud",
            "hog": "return event",
            "inputs_schema": [
                {
                    "key": "client_id",
                    "type": "string",
                    "label": "Revx Client ID",
                    "secret": false,
                    "required": true,
                    "description": "Revx specific client id. This can be found by contacting the RevX support team"
                },
                {
                    "key": "debug_mode",
                    "type": "boolean",
                    "label": "Debug Mode",
                    "default": false,
                    "description": "Will log configuration and request details"
                }
            ],
            "category": [],
            "code_language": "hog",
            "description": "Send event data to RevX Cloud",
            "filters": null,
            "masking": null,
            "icon_url": "/static/services/revx.io.png"
        },
        {
            "mapping_templates": [
                {
                    "name": "Group user",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event = '$groupidentify'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "anonymousId",
                            "type": "string",
                            "label": "Anonymous ID",
                            "secret": false,
                            "default": "{event.distinct_id}",
                            "required": false,
                            "description": "Anonymous id"
                        },
                        {
                            "key": "userId",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": false,
                            "description": "The ID associated with the user"
                        },
                        {
                            "key": "groupId",
                            "type": "string",
                            "label": "Group ID",
                            "secret": false,
                            "default": "{event.groupId}",
                            "required": true,
                            "description": "The group id"
                        },
                        {
                            "key": "context",
                            "type": "dictionary",
                            "label": "Context",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.context}"
                            },
                            "required": false,
                            "description": "Device context"
                        },
                        {
                            "key": "traits",
                            "type": "dictionary",
                            "label": "Traits",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{person.properties}"
                            },
                            "required": false,
                            "description": "Traits to associate with the group"
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": false,
                            "description": "The timestamp of the event"
                        },
                        {
                            "key": "messageId",
                            "type": "string",
                            "label": "MessageId",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": false,
                            "description": "The Segment messageId"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "group",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Identify user",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event in ('$identify', '$set')",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "anonymousId",
                            "type": "string",
                            "label": "Anonymous ID",
                            "secret": false,
                            "default": "{event.distinct_id}",
                            "required": false,
                            "description": "An anonymous identifier"
                        },
                        {
                            "key": "userId",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": false,
                            "description": "The ID associated with the user"
                        },
                        {
                            "key": "context",
                            "type": "dictionary",
                            "label": "Context",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.context}"
                            },
                            "required": false,
                            "description": "Device context"
                        },
                        {
                            "key": "traits",
                            "type": "dictionary",
                            "label": "Traits",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{person.properties}"
                            },
                            "required": false,
                            "description": "Traits to associate with the user"
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": false,
                            "description": "The timestamp of the event"
                        },
                        {
                            "key": "messageId",
                            "type": "string",
                            "label": "MessageId",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": false,
                            "description": "The Segment messageId"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "identify",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Page view",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event = '$pageview'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "anonymousId",
                            "type": "string",
                            "label": "Anonymous ID",
                            "secret": false,
                            "default": "{event.distinct_id}",
                            "required": false,
                            "description": "An anonymous identifier"
                        },
                        {
                            "key": "userId",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": false,
                            "description": "The ID associated with the user"
                        },
                        {
                            "key": "context",
                            "type": "dictionary",
                            "label": "Context",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.context}"
                            },
                            "required": false,
                            "description": "Device context"
                        },
                        {
                            "key": "properties",
                            "type": "dictionary",
                            "label": "Properties",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.properties}"
                            },
                            "required": false,
                            "description": "Page properties"
                        },
                        {
                            "key": "name",
                            "type": "string",
                            "label": "Page Name",
                            "secret": false,
                            "default": "{event.properties.name}",
                            "required": false,
                            "description": "The name of the page"
                        },
                        {
                            "key": "url",
                            "type": "string",
                            "label": "Page URL",
                            "secret": false,
                            "default": "{event.properties.$current_url ?? event.properties.url}",
                            "required": false,
                            "description": "The page URL"
                        },
                        {
                            "key": "path",
                            "type": "string",
                            "label": "Page Path",
                            "secret": false,
                            "default": "{event.properties.$pathname ?? event.properties.path}",
                            "required": false,
                            "description": "The page path"
                        },
                        {
                            "key": "search",
                            "type": "string",
                            "label": "Page Query String",
                            "secret": false,
                            "default": "{event.properties.search}",
                            "required": false,
                            "description": "URL query string"
                        },
                        {
                            "key": "referrer",
                            "type": "string",
                            "label": "Page Referrer",
                            "secret": false,
                            "default": "{event.properties.$referrer ?? event.properties.referrer}",
                            "required": false,
                            "description": "The page referrer"
                        },
                        {
                            "key": "title",
                            "type": "string",
                            "label": "Page Title",
                            "secret": false,
                            "default": "{event.properties.title ?? event.properties.title}",
                            "required": false,
                            "description": "The page title"
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": false,
                            "description": "The timestamp of the event"
                        },
                        {
                            "key": "messageId",
                            "type": "string",
                            "label": "MessageId",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": false,
                            "description": "The Segment messageId"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "page",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Track event",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify')",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "anonymousId",
                            "type": "string",
                            "label": "Anonymous ID",
                            "secret": false,
                            "default": "{event.distinct_id}",
                            "required": false,
                            "description": "An anonymous identifier"
                        },
                        {
                            "key": "userId",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": false,
                            "description": "The ID associated with the user"
                        },
                        {
                            "key": "event",
                            "type": "string",
                            "label": "Event Name",
                            "secret": false,
                            "default": "{event.event}",
                            "required": true,
                            "description": "The event name"
                        },
                        {
                            "key": "context",
                            "type": "dictionary",
                            "label": "Context",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.context}"
                            },
                            "required": false,
                            "description": "Device context"
                        },
                        {
                            "key": "properties",
                            "type": "dictionary",
                            "label": "Event properties",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.properties}"
                            },
                            "required": false,
                            "description": "Properties to send with the event"
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": false,
                            "description": "The timestamp of the event"
                        },
                        {
                            "key": "messageId",
                            "type": "string",
                            "label": "MessageId",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": false,
                            "description": "The Segment messageId"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "track",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                }
            ],
            "mappings": null,
            "status": "alpha",
            "free": false,
            "type": "destination",
            "id": "segment-actions-ripe-cloud",
            "name": "Ripe Cloud Mode",
            "hog": "return event",
            "inputs_schema": [
                {
                    "key": "apiKey",
                    "type": "string",
                    "label": "API Key",
                    "secret": false,
                    "required": true,
                    "description": "The Ripe API key found in the Ripe App"
                },
                {
                    "key": "endpoint",
                    "type": "string",
                    "label": "API Endpoint",
                    "secret": false,
                    "default": "https://api.getripe.com/event",
                    "required": false,
                    "description": "The Ripe API endpoint (do not change this unless you know what you're doing)"
                },
                {
                    "key": "debug_mode",
                    "type": "boolean",
                    "label": "Debug Mode",
                    "default": false,
                    "description": "Will log configuration and request details"
                }
            ],
            "category": [],
            "code_language": "hog",
            "description": "Send event data to Ripe Cloud Mode",
            "filters": null,
            "masking": null,
            "icon_url": "/static/services/ripe.com.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-rockerbox",
            "name": "Rockerbox",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Attribution Platforms"],
            "code_language": "hog",
            "description": "Send events to Rockerbox.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Rockerbox.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-roku",
            "name": "Roku",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Streaming Platforms"],
            "code_language": "hog",
            "description": "Send events to Roku.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Roku.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-rollbar",
            "name": "Rollbar",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Error Reporting & Monitoring"],
            "code_language": "hog",
            "description": "Send events to Rollbar.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Rollbar.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "beta",
            "free": false,
            "type": "destination",
            "id": "template-rudderstack",
            "name": "RudderStack",
            "hog": "fun getPayload() {\n    let rudderPayload := {\n        'context': {\n            'app': {\n                'name': 'PostHogPlugin',\n            },\n            'os': {},\n            'page': {},\n            'screen': {},\n            'library': {},\n        },\n        'channel': 's2s',\n        'type': 'track',\n        'properties': {},\n    }\n\n    if (not empty(event.properties.$os)) rudderPayload.context.os.name := event.properties.$os\n    if (not empty(event.properties.$browser)) rudderPayload.context.browser := event.properties.$browser\n    if (not empty(event.properties.$browser_version)) rudderPayload.context.browser_version := event.properties.$browser_version\n    if (not empty(event.properties.$host)) rudderPayload.context.page.host := event.properties.$host\n    if (not empty(event.properties.$current_url)) rudderPayload.context.page.url := event.properties.$current_url\n    if (not empty(event.properties.$path)) rudderPayload.context.page.path := event.properties.$path\n    if (not empty(event.properties.$referrer)) rudderPayload.context.page.referrer := event.properties.$referrer\n    if (not empty(event.properties.$initial_referrer)) rudderPayload.context.page.initial_referrer := event.properties.$initial_referrer\n    if (not empty(event.properties.$referring_domain)) rudderPayload.context.page.referring_domain := event.properties.$referring_domain\n    if (not empty(event.properties.$initial_referring_domain)) rudderPayload.context.page.initial_referring_domain := event.properties.$initial_referring_domain\n    if (not empty(event.properties.$screen_height)) rudderPayload.context.screen.height := event.properties.$screen_height\n    if (not empty(event.properties.$screen_width)) rudderPayload.context.screen.width := event.properties.$screen_width\n    if (not empty(event.properties.$lib)) rudderPayload.context.library.name := event.properties.$lib\n    if (not empty(event.properties.$lib_version)) rudderPayload.context.library.version := event.properties.$lib_version\n    if (not empty(event.$ip)) rudderPayload.context.ip := event.$ip\n    if (not empty(event.properties.$active_feature_flags)) rudderPayload.context.active_feature_flags := event.properties.$active_feature_flags\n    if (not empty(event.properties.token)) rudderPayload.context.token := event.properties.token\n    if (not empty(event.uuid)) rudderPayload.messageId := event.uuid\n    if (not empty(event.timestamp)) rudderPayload.originalTimestamp := event.timestamp\n    if (not empty(inputs.identifier)) rudderPayload.userId := inputs.identifier\n    if (not empty(event.properties.$anon_distinct_id ?? event.properties.$device_id ?? event.properties.distinct_id)) rudderPayload.anonymousId := event.properties.$anon_distinct_id ?? event.properties.$device_id ?? event.properties.distinct_id\n\n    if (event.event in ('$identify', '$set')) {\n        rudderPayload.type := 'identify'\n        if (not empty(event.properties.$set)) rudderPayload.context.trait := event.properties.$set\n        if (not empty(event.properties.$set)) rudderPayload.traits := event.properties.$set\n    } else if (event.event == '$create_alias') {\n        rudderPayload.type := 'alias'\n        if (not empty(event.properties.alias)) rudderPayload.userId := event.properties.alias\n        if (not empty(event.distinct_id)) rudderPayload.previousId := event.distinct_id\n    } else if (event.event == '$pageview') {\n        rudderPayload.type := 'page'\n        if (not empty(event.properties.name)) rudderPayload.name := event.properties.name\n        if (not empty(event.properties.$host)) rudderPayload.properties.host := event.properties.$host\n        if (not empty(event.properties.$current_url)) rudderPayload.properties.url := event.properties.$current_url\n        if (not empty(event.properties.$pathname)) rudderPayload.properties.path := event.properties.$pathname\n        if (not empty(event.properties.$referrer)) rudderPayload.properties.referrer := event.properties.$referrer\n        if (not empty(event.properties.$initial_referrer)) rudderPayload.properties.initial_referrer := event.properties.$initial_referrer\n        if (not empty(event.properties.$referring_domain)) rudderPayload.properties.referring_domain := event.properties.$referring_domain\n        if (not empty(event.properties.$initial_referring_domain)) rudderPayload.properties.initial_referring_domain := event.properties.$initial_referring_domain\n    } else if (event.event == '$autocapture') {\n        rudderPayload.type := 'track'\n        if (not empty(event.properties.$event_type)) rudderPayload.event := event.properties.$event_type\n    } else {\n        rudderPayload.type := 'track'\n        if (not empty(event.event)) rudderPayload.event := event.event\n    }\n\n    for (let key, value in event.properties) {\n        if (value != null and not key like '$%') {\n            rudderPayload.properties[key] := value\n        }\n    }\n\n    return {\n        'method': 'POST',\n        'headers': {\n            'Content-Type': 'application/json',\n            'Authorization': f'Basic {base64Encode(f'{inputs.token}:')}',\n        },\n        'body': {\n            'batch': [rudderPayload],\n            'sentAt': now()\n        }\n    }\n}\n\nfetch(f'{replaceAll(inputs.host, '/v1/batch', '')}/v1/batch', getPayload())",
            "inputs_schema": [
                {
                    "key": "host",
                    "type": "string",
                    "label": "Rudderstack host",
                    "secret": false,
                    "default": "https://hosted.rudderlabs.com",
                    "required": true,
                    "description": "The Rudderstack destination instance"
                },
                {
                    "key": "token",
                    "type": "string",
                    "label": "Write API key",
                    "secret": true,
                    "required": true,
                    "description": "RudderStack Source Writekey"
                },
                {
                    "key": "identifier",
                    "type": "string",
                    "label": "Identifier",
                    "secret": false,
                    "default": "{person.id}",
                    "required": true
                }
            ],
            "category": ["Custom"],
            "code_language": "hog",
            "description": "Send data to RudderStack",
            "filters": null,
            "masking": null,
            "icon_url": "/static/services/rudderstack.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-saasquatch",
            "name": "SaaSquatch",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Marketing"],
            "code_language": "hog",
            "description": "Send events to SaaSquatch.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/SaaSquatch.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "beta",
            "free": false,
            "type": "destination",
            "id": "template-salesforce-create",
            "name": "Salesforce",
            "hog": "let getPayload := () -> {\n  let properties := {}\n  if (inputs.include_all_event_properties) {\n    if (not empty(event.elements_chain)) {\n      properties['$elements_chain'] := event.elements_chain\n    }\n    for (let key, value in event.properties) {\n      properties[key] := value\n    }\n  }\n  if (inputs.include_all_person_properties) {\n    for (let key, value in person.properties) {\n      properties[key] := value\n    }\n  }\n  for (let key, value in inputs.properties) {\n    properties[key] := value\n  }\n  return properties\n}\n\nlet res := fetch(f'{inputs.oauth.instance_url}/services/data/v61.0/sobjects/{inputs.path}', {\n  'body': getPayload(),\n  'method': 'POST',\n  'headers': {\n    'Authorization': f'Bearer {inputs.oauth.access_token}',\n    'Content-Type': 'application/json'\n  }\n});\n\nif (res.status >= 400) {\n  throw Error(f'Salesforce request failed with status {res.status}: {res.body}');\n} else {\n  print(res.status, res.body)\n}",
            "inputs_schema": [
                {
                    "key": "oauth",
                    "type": "integration",
                    "label": "Salesforce account",
                    "secret": false,
                    "required": true,
                    "integration": "salesforce",
                    "requiredScopes": "refresh_token full"
                },
                {
                    "key": "path",
                    "type": "string",
                    "label": "Object path",
                    "secret": false,
                    "default": "Contact",
                    "required": true,
                    "description": "The path to the object you want to create."
                },
                {
                    "key": "include_all_event_properties",
                    "type": "boolean",
                    "label": "Include all event properties as attributes",
                    "secret": false,
                    "default": false,
                    "required": true,
                    "description": "If set, all event properties will be included as attributes. Individual attributes can be overridden below."
                },
                {
                    "key": "include_all_person_properties",
                    "type": "boolean",
                    "label": "Include all person properties as attributes",
                    "secret": false,
                    "default": false,
                    "required": true,
                    "description": "If set, all person properties will be included as attributes. Individual attributes can be overridden below."
                },
                {
                    "key": "properties",
                    "type": "json",
                    "label": "Additional properties",
                    "secret": false,
                    "default": {
                        "email": "{person.properties.email}"
                    },
                    "required": true,
                    "description": "Additional properties for the Salesforce Object."
                }
            ],
            "category": ["CRM", "Customer Success"],
            "code_language": "hog",
            "description": "Create objects in Salesforce",
            "filters": {
                "events": [
                    {
                        "id": "$identify",
                        "name": "$identify",
                        "type": "events",
                        "order": 0
                    }
                ],
                "actions": [],
                "filter_test_accounts": true
            },
            "masking": null,
            "icon_url": "/static/services/salesforce.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "beta",
            "free": false,
            "type": "destination",
            "id": "template-salesforce-update",
            "name": "Salesforce",
            "hog": "let getPayload := () -> {\n  let properties := {}\n  if (inputs.include_all_event_properties) {\n    for (let key, value in event.properties) {\n      properties[key] := value\n    }\n  }\n  if (inputs.include_all_person_properties) {\n    for (let key, value in person.properties) {\n      properties[key] := value\n    }\n  }\n  for (let key, value in inputs.properties) {\n    properties[key] := value\n  }\n  return properties\n}\n\nlet res := fetch(f'{inputs.oauth.instance_url}/services/data/v61.0/sobjects/{inputs.path}', {\n  'body': getPayload(),\n  'method': 'PATCH',\n  'headers': {\n    'Authorization': f'Bearer {inputs.oauth.access_token}',\n    'Content-Type': 'application/json'\n  }\n});\n\nif (res.status >= 400) {\n  throw Error(f'Salesforce request failed with status {res.status}: {res.body}');\n} else {\n  print(res.status, res.body)\n}",
            "inputs_schema": [
                {
                    "key": "oauth",
                    "type": "integration",
                    "label": "Salesforce account",
                    "secret": false,
                    "required": true,
                    "integration": "salesforce",
                    "requiredScopes": "refresh_token full"
                },
                {
                    "key": "path",
                    "type": "string",
                    "label": "Object path",
                    "secret": false,
                    "default": "Leads/Email/{person.properties.email}",
                    "required": true,
                    "description": "The path to the object you want to create or update. This can be a standard object like 'Contact' for creating records or `Lead/Email/{person.properties.email}` for updating a lead by email. See https://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/dome_upsert.htm for more information."
                },
                {
                    "key": "include_all_event_properties",
                    "type": "boolean",
                    "label": "Include all event properties as attributes",
                    "secret": false,
                    "default": false,
                    "required": true,
                    "description": "If set, all event properties will be included as attributes. Individual attributes can be overridden below."
                },
                {
                    "key": "include_all_person_properties",
                    "type": "boolean",
                    "label": "Include all person properties as attributes",
                    "secret": false,
                    "default": false,
                    "required": true,
                    "description": "If set, all person properties will be included as attributes. Individual attributes can be overridden below."
                },
                {
                    "key": "properties",
                    "type": "json",
                    "label": "Additional properties",
                    "secret": false,
                    "default": {
                        "email": "{person.properties.email}",
                        "browser": "{event.properties.$browser}"
                    },
                    "required": true,
                    "description": "Additional properties for the Salesforce Object."
                }
            ],
            "category": ["CRM", "Customer Success"],
            "code_language": "hog",
            "description": "Update objects in Salesforce",
            "filters": {
                "events": [
                    {
                        "id": "$identify",
                        "name": "$identify",
                        "type": "events",
                        "order": 0
                    }
                ],
                "actions": [],
                "filter_test_accounts": true
            },
            "masking": null,
            "icon_url": "/static/services/salesforce.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-salesforce-marketing-cloud",
            "name": "Salesforce Marketing Cloud",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Marketing"],
            "code_language": "hog",
            "description": "Send events to Salesforce Marketing Cloud.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Salesforce_Marketing_Cloud.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-salesforce-pardot",
            "name": "Salesforce Pardot",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Marketing"],
            "code_language": "hog",
            "description": "Send events to Salesforce Pardot.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Salesforce_Pardot.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-salesmachine",
            "name": "Salesmachine",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Customer Service"],
            "code_language": "hog",
            "description": "Send events to Salesmachine.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Salesmachine.png"
        },
        {
            "mapping_templates": [
                {
                    "name": "Submit Track Event",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify')",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "kind",
                            "type": "string",
                            "label": "Custom Event Kind",
                            "secret": false,
                            "default": "Track",
                            "required": true,
                            "description": "Type of the SalesWings custom event (a custom event is visualized in SalesWings cockpit and SalesForce Lead Intent View as \"[[Kind]] Data\")."
                        },
                        {
                            "key": "data",
                            "type": "string",
                            "label": "Custom Event Data",
                            "secret": false,
                            "default": "{event.event}",
                            "required": true,
                            "description": "String description of the SalesWings custom event payload (a custom event is visualized in SalesWings cockpit and SalesForce Lead Intent View as \"[[Kind]] Data\")."
                        },
                        {
                            "key": "userID",
                            "type": "string",
                            "label": "Segment User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": false,
                            "description": "Permanent identifier of a Segment user the event is attributed to."
                        },
                        {
                            "key": "anonymousID",
                            "type": "string",
                            "label": "Segment Anonymous User ID",
                            "secret": false,
                            "default": "{event.distinct_id}",
                            "required": false,
                            "description": "A pseudo-unique substitute for a Segment user ID the event is attributed to."
                        },
                        {
                            "key": "email",
                            "type": "string",
                            "label": "Email",
                            "secret": false,
                            "default": "{person.properties.email ?? event.properties.email}",
                            "required": false,
                            "description": "Identified email of the Segment User."
                        },
                        {
                            "key": "url",
                            "type": "string",
                            "label": "URL",
                            "secret": false,
                            "default": "{event.properties.url ?? event.properties.$current_url}",
                            "required": false,
                            "description": "URL associated with the event."
                        },
                        {
                            "key": "referrerUrl",
                            "type": "string",
                            "label": "Referrer URL",
                            "secret": false,
                            "default": "{event.properties.referrer ?? event.properties.$referrer}",
                            "required": false,
                            "description": "Referrer URL associated with the event."
                        },
                        {
                            "key": "userAgent",
                            "type": "string",
                            "label": "User Agent",
                            "secret": false,
                            "default": "{event.properties.$raw_user_agent}",
                            "required": false,
                            "description": "User Agent associated with the event."
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Event Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": false,
                            "description": "When the event was sent."
                        },
                        {
                            "key": "values",
                            "type": "dictionary",
                            "label": "Custom Attribute Values",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.properties}"
                            },
                            "required": false,
                            "description": "Custom attribute values associated with the SalesWings custom event."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "submitTrackEvent",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Submit Identify Event",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event in ('$identify', '$set')",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "kind",
                            "type": "string",
                            "label": "Custom Event Kind",
                            "secret": false,
                            "default": "Identify",
                            "required": true,
                            "description": "Type of the SalesWings custom event (a custom event is visualized in SalesWings cockpit and SalesForce Lead Intent View as \"[[Kind]] Data\")."
                        },
                        {
                            "key": "data",
                            "type": "string",
                            "label": "Custom Event Data",
                            "secret": false,
                            "default": "{person.properties.email}",
                            "required": true,
                            "description": "String description of the SalesWings custom event payload (a custom event is visualized in SalesWings cockpit and SalesForce Lead Intent View as \"[[Kind]] Data\")."
                        },
                        {
                            "key": "userID",
                            "type": "string",
                            "label": "Segment User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": false,
                            "description": "Permanent identifier of a Segment user the event is attributed to."
                        },
                        {
                            "key": "anonymousID",
                            "type": "string",
                            "label": "Segment Anonymous User ID",
                            "secret": false,
                            "default": "{event.distinct_id}",
                            "required": false,
                            "description": "A pseudo-unique substitute for a Segment user ID the event is attributed to."
                        },
                        {
                            "key": "email",
                            "type": "string",
                            "label": "Email",
                            "secret": false,
                            "default": "{person.properties.email ?? event.properties.email}",
                            "required": true,
                            "description": "Identified email of the Segment User."
                        },
                        {
                            "key": "url",
                            "type": "string",
                            "label": "URL",
                            "secret": false,
                            "default": "{event.properties.url ?? event.properties.$current_url}",
                            "required": false,
                            "description": "URL associated with the event."
                        },
                        {
                            "key": "referrerUrl",
                            "type": "string",
                            "label": "Referrer URL",
                            "secret": false,
                            "default": "{event.properties.referrer ?? event.properties.$referrer}",
                            "required": false,
                            "description": "Referrer URL associated with the event."
                        },
                        {
                            "key": "userAgent",
                            "type": "string",
                            "label": "User Agent",
                            "secret": false,
                            "default": "{event.properties.$raw_user_agent}",
                            "required": false,
                            "description": "User Agent associated with the event."
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Event Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": false,
                            "description": "When the event was sent."
                        },
                        {
                            "key": "values",
                            "type": "dictionary",
                            "label": "Custom Attribute Values",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{person.properties}"
                            },
                            "required": false,
                            "description": "Custom attribute values associated with the SalesWings custom event."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "submitIdentifyEvent",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Submit Page Event",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event = '$pageview'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "userID",
                            "type": "string",
                            "label": "Segment User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": false,
                            "description": "Permanent identifier of a Segment user the event is attributed to."
                        },
                        {
                            "key": "anonymousID",
                            "type": "string",
                            "label": "Segment Anonymous User ID",
                            "secret": false,
                            "default": "{event.distinct_id}",
                            "required": false,
                            "description": "A pseudo-unique substitute for a Segment user ID the event is attributed to."
                        },
                        {
                            "key": "url",
                            "type": "string",
                            "label": "URL",
                            "secret": false,
                            "default": "{event.properties.url ?? event.properties.$current_url}",
                            "required": true,
                            "description": "URL associated with the event."
                        },
                        {
                            "key": "referrerUrl",
                            "type": "string",
                            "label": "Referrer URL",
                            "secret": false,
                            "default": "{event.properties.referrer ?? event.properties.$referrer}",
                            "required": false,
                            "description": "Referrer URL associated with the event."
                        },
                        {
                            "key": "userAgent",
                            "type": "string",
                            "label": "User Agent",
                            "secret": false,
                            "default": "{event.properties.$raw_user_agent}",
                            "required": false,
                            "description": "User Agent associated with the event."
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Event Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": false,
                            "description": "When the event was sent."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "submitPageEvent",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Submit Screen Event",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event = '$screen'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "kind",
                            "type": "string",
                            "label": "Custom Event Kind",
                            "secret": false,
                            "default": "Screen",
                            "required": true,
                            "description": "Type of the SalesWings custom event (a custom event is visualized in SalesWings cockpit and SalesForce Lead Intent View as \"[[Kind]] Data\")."
                        },
                        {
                            "key": "data",
                            "type": "string",
                            "label": "Custom Event Data",
                            "secret": false,
                            "default": "{event.event}",
                            "required": true,
                            "description": "String description of the SalesWings custom event payload (a custom event is visualized in SalesWings cockpit and SalesForce Lead Intent View as \"[[Kind]] Data\")."
                        },
                        {
                            "key": "userID",
                            "type": "string",
                            "label": "Segment User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": false,
                            "description": "Permanent identifier of a Segment user the event is attributed to."
                        },
                        {
                            "key": "anonymousID",
                            "type": "string",
                            "label": "Segment Anonymous User ID",
                            "secret": false,
                            "default": "{event.distinct_id}",
                            "required": false,
                            "description": "A pseudo-unique substitute for a Segment user ID the event is attributed to."
                        },
                        {
                            "key": "email",
                            "type": "string",
                            "label": "Email",
                            "secret": false,
                            "default": "{person.properties.email ?? event.properties.email}",
                            "required": false,
                            "description": "Identified email of the Segment User."
                        },
                        {
                            "key": "url",
                            "type": "string",
                            "label": "URL",
                            "secret": false,
                            "default": "{event.properties.url ?? event.properties.$current_url}",
                            "required": false,
                            "description": "URL associated with the event."
                        },
                        {
                            "key": "referrerUrl",
                            "type": "string",
                            "label": "Referrer URL",
                            "secret": false,
                            "default": "{event.properties.referrer ?? event.properties.$referrer}",
                            "required": false,
                            "description": "Referrer URL associated with the event."
                        },
                        {
                            "key": "userAgent",
                            "type": "string",
                            "label": "User Agent",
                            "secret": false,
                            "default": "{event.properties.$raw_user_agent}",
                            "required": false,
                            "description": "User Agent associated with the event."
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Event Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": false,
                            "description": "When the event was sent."
                        },
                        {
                            "key": "values",
                            "type": "dictionary",
                            "label": "Custom Attribute Values",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.properties}"
                            },
                            "required": false,
                            "description": "Custom attribute values associated with the SalesWings custom event."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "submitScreenEvent",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                }
            ],
            "mappings": null,
            "status": "alpha",
            "free": false,
            "type": "destination",
            "id": "segment-actions-saleswings",
            "name": "Saleswings",
            "hog": "return event",
            "inputs_schema": [
                {
                    "key": "apiKey",
                    "type": "string",
                    "label": "API Key",
                    "secret": true,
                    "required": true,
                    "description": "Segment.io API key for your SalesWings project."
                },
                {
                    "key": "environment",
                    "type": "choice",
                    "label": "Environment",
                    "secret": false,
                    "choices": [
                        {
                            "label": "Helium (live environment)",
                            "value": "helium"
                        },
                        {
                            "label": "Ozone (test environment)",
                            "value": "ozone"
                        }
                    ],
                    "default": "helium",
                    "required": true,
                    "description": "SalesWings environment this destination is connected with."
                },
                {
                    "key": "debug_mode",
                    "type": "boolean",
                    "label": "Debug Mode",
                    "default": false,
                    "description": "Will log configuration and request details"
                }
            ],
            "category": [],
            "code_language": "hog",
            "description": "Send event data to Saleswings",
            "filters": null,
            "masking": null,
            "icon_url": "/static/services/saleswingsapp.com.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-satismeter",
            "name": "SatisMeter",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Customer Service"],
            "code_language": "hog",
            "description": "Send events to SatisMeter.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/SatisMeter.svg"
        },
        {
            "mapping_templates": [
                {
                    "name": "Track Event",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify')",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "event_name",
                            "type": "string",
                            "label": "Event name",
                            "secret": false,
                            "default": "{event.event}",
                            "required": true,
                            "description": "Name of event (this will be snake cased in request)"
                        },
                        {
                            "key": "company_keys",
                            "type": "dictionary",
                            "label": "Company keys",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "Key-value pairs associated with a company (e.g. organization_id: 123456)"
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": true,
                            "description": "Time the event took place"
                        },
                        {
                            "key": "user_keys",
                            "type": "dictionary",
                            "label": "User keys",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "Key-value pairs associated with a user (e.g. email: example@example.com)"
                        },
                        {
                            "key": "traits",
                            "type": "dictionary",
                            "label": "Traits",
                            "secret": false,
                            "default": {
                                "raw_event_name": "{event.event}"
                            },
                            "required": false,
                            "description": "Additional properties to send with event"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "trackEvent",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Identify User",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event in ('$identify', '$set')",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "company_keys",
                            "type": "dictionary",
                            "label": "Company keys",
                            "secret": false,
                            "default": {},
                            "required": true,
                            "description": "Key-value pairs associated with a company (e.g. organization_id: 123456)"
                        },
                        {
                            "key": "company_name",
                            "type": "string",
                            "label": "Company name",
                            "secret": false,
                            "default": "{person.properties.company_name}",
                            "required": false,
                            "description": "Name of company"
                        },
                        {
                            "key": "company_traits",
                            "type": "dictionary",
                            "label": "Company traits",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "Properties associated with company"
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": true,
                            "description": "Time the event took place"
                        },
                        {
                            "key": "user_keys",
                            "type": "dictionary",
                            "label": "User keys",
                            "secret": false,
                            "default": {},
                            "required": true,
                            "description": "Key-value pairs associated with a user (e.g. email: example@example.com)"
                        },
                        {
                            "key": "user_name",
                            "type": "string",
                            "label": "User name",
                            "secret": false,
                            "default": "{person.properties.name}",
                            "required": false,
                            "description": "User's full name"
                        },
                        {
                            "key": "user_traits",
                            "type": "dictionary",
                            "label": "User traits",
                            "secret": false,
                            "default": {},
                            "required": false,
                            "description": "Properties associated with user"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "identifyUser",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                }
            ],
            "mappings": null,
            "status": "beta",
            "free": false,
            "type": "destination",
            "id": "segment-actions-schematic",
            "name": "Schematic",
            "hog": "return event",
            "inputs_schema": [
                {
                    "key": "apiKey",
                    "type": "string",
                    "label": "API Key",
                    "secret": false,
                    "required": true,
                    "description": "Found on your settings page."
                },
                {
                    "key": "debug_mode",
                    "type": "boolean",
                    "label": "Debug Mode",
                    "default": false,
                    "description": "Will log configuration and request details"
                }
            ],
            "category": [],
            "code_language": "hog",
            "description": "Send event data to Schematic",
            "filters": null,
            "masking": null,
            "icon_url": "/static/services/schematichq.com.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "beta",
            "free": false,
            "type": "destination",
            "id": "template-sendgrid",
            "name": "Sendgrid",
            "hog": "if (empty(inputs.email)) {\n    print('`email` input is empty. Not updating contacts.')\n    return\n}\n\nlet contact := {\n  'email': inputs.email,\n}\n\nfor (let key, value in inputs.properties) {\n    if (not empty(value)) {\n        contact[key] := value\n    }\n}\n\nlet headers :=  {\n    'Authorization': f'Bearer {inputs.api_key}',\n    'Content-Type': 'application/json'\n}\n\nif (not empty(inputs.custom_fields)) {\n    let response := fetch('https://api.sendgrid.com/v3/marketing/field_definitions', {\n        'method': 'GET',\n        'headers': headers\n    })\n    if (response.status != 200) {\n        throw Error(f'Could not fetch custom fields. Status: {response.status}')\n    }\n    contact['custom_fields'] := {}\n    for (let obj in response.body?.custom_fields ?? {}) {\n        let inputValue := inputs.custom_fields[obj.name]\n        if (not empty(inputValue)) {\n            contact['custom_fields'][obj.id] := inputValue\n        }\n    }\n}\n\nlet res := fetch('https://api.sendgrid.com/v3/marketing/contacts', {\n    'method': 'PUT',\n    'headers': headers,\n    'body': { 'contacts': [contact] }\n})\n\nif (res.status > 300) {\n    throw Error(f'Error from api.sendgrid.com (status {res.status}): {res.body}')\n}",
            "inputs_schema": [
                {
                    "key": "api_key",
                    "type": "string",
                    "label": "Sendgrid API Key",
                    "secret": true,
                    "required": true,
                    "description": "See https://app.sendgrid.com/settings/api_keys"
                },
                {
                    "key": "email",
                    "type": "string",
                    "label": "The email of the user",
                    "secret": false,
                    "default": "{person.properties.email}",
                    "required": true
                },
                {
                    "key": "properties",
                    "type": "dictionary",
                    "label": "Reserved fields",
                    "secret": false,
                    "default": {
                        "city": "{person.properties.city}",
                        "country": "{person.properties.country}",
                        "last_name": "{person.properties.last_name}",
                        "first_name": "{person.properties.first_name}",
                        "postal_code": "{person.properties.postal_code}"
                    },
                    "required": true,
                    "description": "The following field names are allowed: address_line_1, address_line_2, alternate_emails, anonymous_id, city, country, email, external_id, facebook, first_name, last_name, phone_number_id, postal_code, state_province_region, unique_name, whatsapp."
                },
                {
                    "key": "custom_fields",
                    "type": "dictionary",
                    "label": "Custom fields",
                    "secret": false,
                    "default": {},
                    "required": false,
                    "description": "Configure custom fields in SendGrid before using them here: https://mc.sendgrid.com/custom-fields"
                }
            ],
            "category": ["Email Marketing"],
            "code_language": "hog",
            "description": "Update marketing contacts in Sendgrid",
            "filters": {
                "events": [
                    {
                        "id": "$identify",
                        "name": "$identify",
                        "type": "events",
                        "order": 0
                    }
                ],
                "actions": [],
                "filter_test_accounts": true
            },
            "masking": null,
            "icon_url": "/static/services/sendgrid.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-sentry",
            "name": "Sentry",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Error Reporting & Monitoring"],
            "code_language": "hog",
            "description": "Send events to Sentry.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Sentry.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-serenytics",
            "name": "Serenytics",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Analytics"],
            "code_language": "hog",
            "description": "Send events to Serenytics.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Serenytics.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-shynet",
            "name": "Shynet",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Analytics"],
            "code_language": "hog",
            "description": "Send events to Shynet.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Shynet.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-signl4",
            "name": "SIGNL4",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Incident Management"],
            "code_language": "hog",
            "description": "Send events to SIGNL4.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/SIGNL4.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-singular",
            "name": "Singular",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Marketing"],
            "code_language": "hog",
            "description": "Send events to Singular.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Singular.svg"
        },
        {
            "mapping_templates": [
                {
                    "name": "Page viewed",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": "$pageview",
                                "name": "Pageview",
                                "type": "events"
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "eventType",
                            "type": "string",
                            "label": "Event Type",
                            "default": "PAGE_VIEW",
                            "required": true,
                            "description": "Check out this page for possible event types: https://businesshelp.snapchat.com/s/article/pixel-direct-implementation"
                        },
                        {
                            "key": "eventId",
                            "type": "string",
                            "label": "Event ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": true,
                            "description": "The ID of the event"
                        },
                        {
                            "key": "eventTime",
                            "type": "string",
                            "label": "Event time",
                            "secret": false,
                            "default": "{floor(toUnixTimestamp(event.timestamp))}",
                            "required": true,
                            "description": "A Unix timestamp in seconds indicating when the actual event occurred"
                        },
                        {
                            "key": "eventSourceUrl",
                            "type": "string",
                            "label": "Event source URL",
                            "secret": false,
                            "default": "{event.properties.$current_url}",
                            "required": true,
                            "description": "The URL of the web page where the event took place"
                        },
                        {
                            "key": "actionSource",
                            "type": "choice",
                            "label": "Action source",
                            "secret": false,
                            "choices": [
                                {
                                    "label": "WEB - Conversion was made on your website.",
                                    "value": "WEB"
                                },
                                {
                                    "label": "MOBILE_APP - Conversion was made on your mobile app.",
                                    "value": "MOBILE_APP"
                                },
                                {
                                    "label": "OFFLINE - Conversion happened in a way that is not listed.",
                                    "value": "OFFLINE"
                                }
                            ],
                            "default": "WEB",
                            "required": true,
                            "description": "This field allows you to specify where your conversions occurred. Knowing where your events took place helps ensure your ads go to the right people."
                        },
                        {
                            "key": "customData",
                            "type": "dictionary",
                            "label": "Custom data",
                            "secret": false,
                            "default": {
                                "value": "{toFloat(event.properties.price ?? event.properties.value ?? event.properties.revenue)}",
                                "contents": "{(not empty(event.properties.price) and not empty(event.properties.sku) and not empty(event.properties.quantity) ? [{'item_price': event.properties.price, 'id': event.properties.sku, 'quantity': event.properties.quantity, 'delivery_category': 'normal'}] : [])}",
                                "currency": "{event.properties.currency}",
                                "event_id": "{event.uuid}",
                                "order_id": "{event.properties.orderId ?? event.properties.transactionId ?? event.properties.transaction_id}",
                                "num_items": "{event.properties.quantity}",
                                "content_ids": "{event.properties.sku}",
                                "search_string": "{event.properties.search_string ?? event.properties.query}",
                                "content_category": "{event.properties.category}"
                            },
                            "required": true,
                            "description": "A map that contains custom data. See this page for options: https://developers.snap.com/api/marketing-api/Conversions-API/Parameters#custom-data-parameters"
                        }
                    ]
                },
                {
                    "name": "Order Completed",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": "Order Completed",
                                "type": "events"
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "eventType",
                            "type": "string",
                            "label": "Event Type",
                            "default": "PURCHASE",
                            "required": true,
                            "description": "Check out this page for possible event types: https://businesshelp.snapchat.com/s/article/pixel-direct-implementation"
                        },
                        {
                            "key": "eventId",
                            "type": "string",
                            "label": "Event ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": true,
                            "description": "The ID of the event"
                        },
                        {
                            "key": "eventTime",
                            "type": "string",
                            "label": "Event time",
                            "secret": false,
                            "default": "{floor(toUnixTimestamp(event.timestamp))}",
                            "required": true,
                            "description": "A Unix timestamp in seconds indicating when the actual event occurred"
                        },
                        {
                            "key": "eventSourceUrl",
                            "type": "string",
                            "label": "Event source URL",
                            "secret": false,
                            "default": "{event.properties.$current_url}",
                            "required": true,
                            "description": "The URL of the web page where the event took place"
                        },
                        {
                            "key": "actionSource",
                            "type": "choice",
                            "label": "Action source",
                            "secret": false,
                            "choices": [
                                {
                                    "label": "WEB - Conversion was made on your website.",
                                    "value": "WEB"
                                },
                                {
                                    "label": "MOBILE_APP - Conversion was made on your mobile app.",
                                    "value": "MOBILE_APP"
                                },
                                {
                                    "label": "OFFLINE - Conversion happened in a way that is not listed.",
                                    "value": "OFFLINE"
                                }
                            ],
                            "default": "WEB",
                            "required": true,
                            "description": "This field allows you to specify where your conversions occurred. Knowing where your events took place helps ensure your ads go to the right people."
                        },
                        {
                            "key": "customData",
                            "type": "dictionary",
                            "label": "Custom data",
                            "secret": false,
                            "default": {
                                "value": "{toFloat(event.properties.price ?? event.properties.value ?? event.properties.revenue)}",
                                "contents": "{arrayMap(x -> ({'item_price': x.price, 'id': x.sku, 'quantity': x.quantity, 'delivery_category': 'normal'}), event.properties.products ?? [])}",
                                "currency": "{event.properties.currency}",
                                "event_id": "{event.uuid}",
                                "order_id": "{event.properties.orderId ?? event.properties.transactionId ?? event.properties.transaction_id}",
                                "num_items": "{arrayReduce((acc, curr) -> acc + curr.quantity, event.properties.products ?? [], 0)}",
                                "content_ids": "{arrayMap(x -> x.sku, event.properties.products ?? [])}",
                                "search_string": "{event.properties.search_string ?? event.properties.query}",
                                "content_category": "{arrayMap(x -> x.category, event.properties.products ?? [])}"
                            },
                            "required": true,
                            "description": "A map that contains custom data. See this page for options: https://developers.snap.com/api/marketing-api/Conversions-API/Parameters#custom-data-parameters"
                        }
                    ]
                },
                {
                    "name": "Checkout Started",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": "Checkout Started",
                                "type": "events"
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "eventType",
                            "type": "string",
                            "label": "Event Type",
                            "default": "START_CHECKOUT",
                            "required": true,
                            "description": "Check out this page for possible event types: https://businesshelp.snapchat.com/s/article/pixel-direct-implementation"
                        },
                        {
                            "key": "eventId",
                            "type": "string",
                            "label": "Event ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": true,
                            "description": "The ID of the event"
                        },
                        {
                            "key": "eventTime",
                            "type": "string",
                            "label": "Event time",
                            "secret": false,
                            "default": "{floor(toUnixTimestamp(event.timestamp))}",
                            "required": true,
                            "description": "A Unix timestamp in seconds indicating when the actual event occurred"
                        },
                        {
                            "key": "eventSourceUrl",
                            "type": "string",
                            "label": "Event source URL",
                            "secret": false,
                            "default": "{event.properties.$current_url}",
                            "required": true,
                            "description": "The URL of the web page where the event took place"
                        },
                        {
                            "key": "actionSource",
                            "type": "choice",
                            "label": "Action source",
                            "secret": false,
                            "choices": [
                                {
                                    "label": "WEB - Conversion was made on your website.",
                                    "value": "WEB"
                                },
                                {
                                    "label": "MOBILE_APP - Conversion was made on your mobile app.",
                                    "value": "MOBILE_APP"
                                },
                                {
                                    "label": "OFFLINE - Conversion happened in a way that is not listed.",
                                    "value": "OFFLINE"
                                }
                            ],
                            "default": "WEB",
                            "required": true,
                            "description": "This field allows you to specify where your conversions occurred. Knowing where your events took place helps ensure your ads go to the right people."
                        },
                        {
                            "key": "customData",
                            "type": "dictionary",
                            "label": "Custom data",
                            "secret": false,
                            "default": {
                                "value": "{toFloat(event.properties.price ?? event.properties.value ?? event.properties.revenue)}",
                                "contents": "{arrayMap(x -> ({'item_price': x.price, 'id': x.sku, 'quantity': x.quantity, 'delivery_category': 'normal'}), event.properties.products ?? [])}",
                                "currency": "{event.properties.currency}",
                                "event_id": "{event.uuid}",
                                "order_id": "{event.properties.orderId ?? event.properties.transactionId ?? event.properties.transaction_id}",
                                "num_items": "{arrayReduce((acc, curr) -> acc + curr.quantity, event.properties.products ?? [], 0)}",
                                "content_ids": "{arrayMap(x -> x.sku, event.properties.products ?? [])}",
                                "search_string": "{event.properties.search_string ?? event.properties.query}",
                                "content_category": "{arrayMap(x -> x.category, event.properties.products ?? [])}"
                            },
                            "required": true,
                            "description": "A map that contains custom data. See this page for options: https://developers.snap.com/api/marketing-api/Conversions-API/Parameters#custom-data-parameters"
                        }
                    ]
                },
                {
                    "name": "Product Added",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": "Product Added",
                                "type": "events"
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "eventType",
                            "type": "string",
                            "label": "Event Type",
                            "default": "ADD_CART",
                            "required": true,
                            "description": "Check out this page for possible event types: https://businesshelp.snapchat.com/s/article/pixel-direct-implementation"
                        },
                        {
                            "key": "eventId",
                            "type": "string",
                            "label": "Event ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": true,
                            "description": "The ID of the event"
                        },
                        {
                            "key": "eventTime",
                            "type": "string",
                            "label": "Event time",
                            "secret": false,
                            "default": "{floor(toUnixTimestamp(event.timestamp))}",
                            "required": true,
                            "description": "A Unix timestamp in seconds indicating when the actual event occurred"
                        },
                        {
                            "key": "eventSourceUrl",
                            "type": "string",
                            "label": "Event source URL",
                            "secret": false,
                            "default": "{event.properties.$current_url}",
                            "required": true,
                            "description": "The URL of the web page where the event took place"
                        },
                        {
                            "key": "actionSource",
                            "type": "choice",
                            "label": "Action source",
                            "secret": false,
                            "choices": [
                                {
                                    "label": "WEB - Conversion was made on your website.",
                                    "value": "WEB"
                                },
                                {
                                    "label": "MOBILE_APP - Conversion was made on your mobile app.",
                                    "value": "MOBILE_APP"
                                },
                                {
                                    "label": "OFFLINE - Conversion happened in a way that is not listed.",
                                    "value": "OFFLINE"
                                }
                            ],
                            "default": "WEB",
                            "required": true,
                            "description": "This field allows you to specify where your conversions occurred. Knowing where your events took place helps ensure your ads go to the right people."
                        },
                        {
                            "key": "customData",
                            "type": "dictionary",
                            "label": "Custom data",
                            "secret": false,
                            "default": {
                                "value": "{toFloat(event.properties.price ?? event.properties.value ?? event.properties.revenue)}",
                                "contents": "{(not empty(event.properties.price) and not empty(event.properties.sku) and not empty(event.properties.quantity) ? [{'item_price': event.properties.price, 'id': event.properties.sku, 'quantity': event.properties.quantity, 'delivery_category': 'normal'}] : [])}",
                                "currency": "{event.properties.currency}",
                                "event_id": "{event.uuid}",
                                "order_id": "{event.properties.orderId ?? event.properties.transactionId ?? event.properties.transaction_id}",
                                "num_items": "{event.properties.quantity}",
                                "content_ids": "{event.properties.sku}",
                                "search_string": "{event.properties.search_string ?? event.properties.query}",
                                "content_category": "{event.properties.category}"
                            },
                            "required": true,
                            "description": "A map that contains custom data. See this page for options: https://developers.snap.com/api/marketing-api/Conversions-API/Parameters#custom-data-parameters"
                        }
                    ]
                },
                {
                    "name": "Payment Info Entered",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": "Payment Info Entered",
                                "type": "events"
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "eventType",
                            "type": "string",
                            "label": "Event Type",
                            "default": "ADD_BILLING",
                            "required": true,
                            "description": "Check out this page for possible event types: https://businesshelp.snapchat.com/s/article/pixel-direct-implementation"
                        },
                        {
                            "key": "eventId",
                            "type": "string",
                            "label": "Event ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": true,
                            "description": "The ID of the event"
                        },
                        {
                            "key": "eventTime",
                            "type": "string",
                            "label": "Event time",
                            "secret": false,
                            "default": "{floor(toUnixTimestamp(event.timestamp))}",
                            "required": true,
                            "description": "A Unix timestamp in seconds indicating when the actual event occurred"
                        },
                        {
                            "key": "eventSourceUrl",
                            "type": "string",
                            "label": "Event source URL",
                            "secret": false,
                            "default": "{event.properties.$current_url}",
                            "required": true,
                            "description": "The URL of the web page where the event took place"
                        },
                        {
                            "key": "actionSource",
                            "type": "choice",
                            "label": "Action source",
                            "secret": false,
                            "choices": [
                                {
                                    "label": "WEB - Conversion was made on your website.",
                                    "value": "WEB"
                                },
                                {
                                    "label": "MOBILE_APP - Conversion was made on your mobile app.",
                                    "value": "MOBILE_APP"
                                },
                                {
                                    "label": "OFFLINE - Conversion happened in a way that is not listed.",
                                    "value": "OFFLINE"
                                }
                            ],
                            "default": "WEB",
                            "required": true,
                            "description": "This field allows you to specify where your conversions occurred. Knowing where your events took place helps ensure your ads go to the right people."
                        },
                        {
                            "key": "customData",
                            "type": "dictionary",
                            "label": "Custom data",
                            "secret": false,
                            "default": {
                                "value": "{toFloat(event.properties.price ?? event.properties.value ?? event.properties.revenue)}",
                                "contents": "{(not empty(event.properties.price) and not empty(event.properties.sku) and not empty(event.properties.quantity) ? [{'item_price': event.properties.price, 'id': event.properties.sku, 'quantity': event.properties.quantity, 'delivery_category': 'normal'}] : [])}",
                                "currency": "{event.properties.currency}",
                                "event_id": "{event.uuid}",
                                "order_id": "{event.properties.orderId ?? event.properties.transactionId ?? event.properties.transaction_id}",
                                "num_items": "{event.properties.quantity}",
                                "content_ids": "{event.properties.sku}",
                                "search_string": "{event.properties.search_string ?? event.properties.query}",
                                "content_category": "{event.properties.category}"
                            },
                            "required": true,
                            "description": "A map that contains custom data. See this page for options: https://developers.snap.com/api/marketing-api/Conversions-API/Parameters#custom-data-parameters"
                        }
                    ]
                },
                {
                    "name": "Promotion Clicked",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": "Promotion Clicked",
                                "type": "events"
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "eventType",
                            "type": "string",
                            "label": "Event Type",
                            "default": "AD_CLICK",
                            "required": true,
                            "description": "Check out this page for possible event types: https://businesshelp.snapchat.com/s/article/pixel-direct-implementation"
                        },
                        {
                            "key": "eventId",
                            "type": "string",
                            "label": "Event ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": true,
                            "description": "The ID of the event"
                        },
                        {
                            "key": "eventTime",
                            "type": "string",
                            "label": "Event time",
                            "secret": false,
                            "default": "{floor(toUnixTimestamp(event.timestamp))}",
                            "required": true,
                            "description": "A Unix timestamp in seconds indicating when the actual event occurred"
                        },
                        {
                            "key": "eventSourceUrl",
                            "type": "string",
                            "label": "Event source URL",
                            "secret": false,
                            "default": "{event.properties.$current_url}",
                            "required": true,
                            "description": "The URL of the web page where the event took place"
                        },
                        {
                            "key": "actionSource",
                            "type": "choice",
                            "label": "Action source",
                            "secret": false,
                            "choices": [
                                {
                                    "label": "WEB - Conversion was made on your website.",
                                    "value": "WEB"
                                },
                                {
                                    "label": "MOBILE_APP - Conversion was made on your mobile app.",
                                    "value": "MOBILE_APP"
                                },
                                {
                                    "label": "OFFLINE - Conversion happened in a way that is not listed.",
                                    "value": "OFFLINE"
                                }
                            ],
                            "default": "WEB",
                            "required": true,
                            "description": "This field allows you to specify where your conversions occurred. Knowing where your events took place helps ensure your ads go to the right people."
                        },
                        {
                            "key": "customData",
                            "type": "dictionary",
                            "label": "Custom data",
                            "secret": false,
                            "default": {
                                "value": "{toFloat(event.properties.price ?? event.properties.value ?? event.properties.revenue)}",
                                "contents": "{(not empty(event.properties.price) and not empty(event.properties.sku) and not empty(event.properties.quantity) ? [{'item_price': event.properties.price, 'id': event.properties.sku, 'quantity': event.properties.quantity, 'delivery_category': 'normal'}] : [])}",
                                "currency": "{event.properties.currency}",
                                "event_id": "{event.uuid}",
                                "order_id": "{event.properties.orderId ?? event.properties.transactionId ?? event.properties.transaction_id}",
                                "num_items": "{event.properties.quantity}",
                                "content_ids": "{event.properties.sku}",
                                "search_string": "{event.properties.search_string ?? event.properties.query}",
                                "content_category": "{event.properties.category}"
                            },
                            "required": true,
                            "description": "A map that contains custom data. See this page for options: https://developers.snap.com/api/marketing-api/Conversions-API/Parameters#custom-data-parameters"
                        }
                    ]
                },
                {
                    "name": "Promotion Viewed",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": "Promotion Viewed",
                                "type": "events"
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "eventType",
                            "type": "string",
                            "label": "Event Type",
                            "default": "AD_VIEW",
                            "required": true,
                            "description": "Check out this page for possible event types: https://businesshelp.snapchat.com/s/article/pixel-direct-implementation"
                        },
                        {
                            "key": "eventId",
                            "type": "string",
                            "label": "Event ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": true,
                            "description": "The ID of the event"
                        },
                        {
                            "key": "eventTime",
                            "type": "string",
                            "label": "Event time",
                            "secret": false,
                            "default": "{floor(toUnixTimestamp(event.timestamp))}",
                            "required": true,
                            "description": "A Unix timestamp in seconds indicating when the actual event occurred"
                        },
                        {
                            "key": "eventSourceUrl",
                            "type": "string",
                            "label": "Event source URL",
                            "secret": false,
                            "default": "{event.properties.$current_url}",
                            "required": true,
                            "description": "The URL of the web page where the event took place"
                        },
                        {
                            "key": "actionSource",
                            "type": "choice",
                            "label": "Action source",
                            "secret": false,
                            "choices": [
                                {
                                    "label": "WEB - Conversion was made on your website.",
                                    "value": "WEB"
                                },
                                {
                                    "label": "MOBILE_APP - Conversion was made on your mobile app.",
                                    "value": "MOBILE_APP"
                                },
                                {
                                    "label": "OFFLINE - Conversion happened in a way that is not listed.",
                                    "value": "OFFLINE"
                                }
                            ],
                            "default": "WEB",
                            "required": true,
                            "description": "This field allows you to specify where your conversions occurred. Knowing where your events took place helps ensure your ads go to the right people."
                        },
                        {
                            "key": "customData",
                            "type": "dictionary",
                            "label": "Custom data",
                            "secret": false,
                            "default": {
                                "value": "{toFloat(event.properties.price ?? event.properties.value ?? event.properties.revenue)}",
                                "contents": "{(not empty(event.properties.price) and not empty(event.properties.sku) and not empty(event.properties.quantity) ? [{'item_price': event.properties.price, 'id': event.properties.sku, 'quantity': event.properties.quantity, 'delivery_category': 'normal'}] : [])}",
                                "currency": "{event.properties.currency}",
                                "event_id": "{event.uuid}",
                                "order_id": "{event.properties.orderId ?? event.properties.transactionId ?? event.properties.transaction_id}",
                                "num_items": "{event.properties.quantity}",
                                "content_ids": "{event.properties.sku}",
                                "search_string": "{event.properties.search_string ?? event.properties.query}",
                                "content_category": "{event.properties.category}"
                            },
                            "required": true,
                            "description": "A map that contains custom data. See this page for options: https://developers.snap.com/api/marketing-api/Conversions-API/Parameters#custom-data-parameters"
                        }
                    ]
                },
                {
                    "name": "Product Added to Wishlist",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": "Product Added to Wishlist",
                                "type": "events"
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "eventType",
                            "type": "string",
                            "label": "Event Type",
                            "default": "ADD_TO_WISHLIST",
                            "required": true,
                            "description": "Check out this page for possible event types: https://businesshelp.snapchat.com/s/article/pixel-direct-implementation"
                        },
                        {
                            "key": "eventId",
                            "type": "string",
                            "label": "Event ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": true,
                            "description": "The ID of the event"
                        },
                        {
                            "key": "eventTime",
                            "type": "string",
                            "label": "Event time",
                            "secret": false,
                            "default": "{floor(toUnixTimestamp(event.timestamp))}",
                            "required": true,
                            "description": "A Unix timestamp in seconds indicating when the actual event occurred"
                        },
                        {
                            "key": "eventSourceUrl",
                            "type": "string",
                            "label": "Event source URL",
                            "secret": false,
                            "default": "{event.properties.$current_url}",
                            "required": true,
                            "description": "The URL of the web page where the event took place"
                        },
                        {
                            "key": "actionSource",
                            "type": "choice",
                            "label": "Action source",
                            "secret": false,
                            "choices": [
                                {
                                    "label": "WEB - Conversion was made on your website.",
                                    "value": "WEB"
                                },
                                {
                                    "label": "MOBILE_APP - Conversion was made on your mobile app.",
                                    "value": "MOBILE_APP"
                                },
                                {
                                    "label": "OFFLINE - Conversion happened in a way that is not listed.",
                                    "value": "OFFLINE"
                                }
                            ],
                            "default": "WEB",
                            "required": true,
                            "description": "This field allows you to specify where your conversions occurred. Knowing where your events took place helps ensure your ads go to the right people."
                        },
                        {
                            "key": "customData",
                            "type": "dictionary",
                            "label": "Custom data",
                            "secret": false,
                            "default": {
                                "value": "{toFloat(event.properties.price ?? event.properties.value ?? event.properties.revenue)}",
                                "contents": "{(not empty(event.properties.price) and not empty(event.properties.sku) and not empty(event.properties.quantity) ? [{'item_price': event.properties.price, 'id': event.properties.sku, 'quantity': event.properties.quantity, 'delivery_category': 'normal'}] : [])}",
                                "currency": "{event.properties.currency}",
                                "event_id": "{event.uuid}",
                                "order_id": "{event.properties.orderId ?? event.properties.transactionId ?? event.properties.transaction_id}",
                                "num_items": "{event.properties.quantity}",
                                "content_ids": "{event.properties.sku}",
                                "search_string": "{event.properties.search_string ?? event.properties.query}",
                                "content_category": "{event.properties.category}"
                            },
                            "required": true,
                            "description": "A map that contains custom data. See this page for options: https://developers.snap.com/api/marketing-api/Conversions-API/Parameters#custom-data-parameters"
                        }
                    ]
                },
                {
                    "name": "Product Viewed",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": "Product Viewed",
                                "type": "events"
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "eventType",
                            "type": "string",
                            "label": "Event Type",
                            "default": "VIEW_CONTENT",
                            "required": true,
                            "description": "Check out this page for possible event types: https://businesshelp.snapchat.com/s/article/pixel-direct-implementation"
                        },
                        {
                            "key": "eventId",
                            "type": "string",
                            "label": "Event ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": true,
                            "description": "The ID of the event"
                        },
                        {
                            "key": "eventTime",
                            "type": "string",
                            "label": "Event time",
                            "secret": false,
                            "default": "{floor(toUnixTimestamp(event.timestamp))}",
                            "required": true,
                            "description": "A Unix timestamp in seconds indicating when the actual event occurred"
                        },
                        {
                            "key": "eventSourceUrl",
                            "type": "string",
                            "label": "Event source URL",
                            "secret": false,
                            "default": "{event.properties.$current_url}",
                            "required": true,
                            "description": "The URL of the web page where the event took place"
                        },
                        {
                            "key": "actionSource",
                            "type": "choice",
                            "label": "Action source",
                            "secret": false,
                            "choices": [
                                {
                                    "label": "WEB - Conversion was made on your website.",
                                    "value": "WEB"
                                },
                                {
                                    "label": "MOBILE_APP - Conversion was made on your mobile app.",
                                    "value": "MOBILE_APP"
                                },
                                {
                                    "label": "OFFLINE - Conversion happened in a way that is not listed.",
                                    "value": "OFFLINE"
                                }
                            ],
                            "default": "WEB",
                            "required": true,
                            "description": "This field allows you to specify where your conversions occurred. Knowing where your events took place helps ensure your ads go to the right people."
                        },
                        {
                            "key": "customData",
                            "type": "dictionary",
                            "label": "Custom data",
                            "secret": false,
                            "default": {
                                "value": "{toFloat(event.properties.price ?? event.properties.value ?? event.properties.revenue)}",
                                "contents": "{(not empty(event.properties.price) and not empty(event.properties.sku) and not empty(event.properties.quantity) ? [{'item_price': event.properties.price, 'id': event.properties.sku, 'quantity': event.properties.quantity, 'delivery_category': 'normal'}] : [])}",
                                "currency": "{event.properties.currency}",
                                "event_id": "{event.uuid}",
                                "order_id": "{event.properties.orderId ?? event.properties.transactionId ?? event.properties.transaction_id}",
                                "num_items": "{event.properties.quantity}",
                                "content_ids": "{event.properties.sku}",
                                "search_string": "{event.properties.search_string ?? event.properties.query}",
                                "content_category": "{event.properties.category}"
                            },
                            "required": true,
                            "description": "A map that contains custom data. See this page for options: https://developers.snap.com/api/marketing-api/Conversions-API/Parameters#custom-data-parameters"
                        }
                    ]
                },
                {
                    "name": "Product List Viewed",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": "Product List Viewed",
                                "type": "events"
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "eventType",
                            "type": "string",
                            "label": "Event Type",
                            "default": "VIEW_CONTENT",
                            "required": true,
                            "description": "Check out this page for possible event types: https://businesshelp.snapchat.com/s/article/pixel-direct-implementation"
                        },
                        {
                            "key": "eventId",
                            "type": "string",
                            "label": "Event ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": true,
                            "description": "The ID of the event"
                        },
                        {
                            "key": "eventTime",
                            "type": "string",
                            "label": "Event time",
                            "secret": false,
                            "default": "{floor(toUnixTimestamp(event.timestamp))}",
                            "required": true,
                            "description": "A Unix timestamp in seconds indicating when the actual event occurred"
                        },
                        {
                            "key": "eventSourceUrl",
                            "type": "string",
                            "label": "Event source URL",
                            "secret": false,
                            "default": "{event.properties.$current_url}",
                            "required": true,
                            "description": "The URL of the web page where the event took place"
                        },
                        {
                            "key": "actionSource",
                            "type": "choice",
                            "label": "Action source",
                            "secret": false,
                            "choices": [
                                {
                                    "label": "WEB - Conversion was made on your website.",
                                    "value": "WEB"
                                },
                                {
                                    "label": "MOBILE_APP - Conversion was made on your mobile app.",
                                    "value": "MOBILE_APP"
                                },
                                {
                                    "label": "OFFLINE - Conversion happened in a way that is not listed.",
                                    "value": "OFFLINE"
                                }
                            ],
                            "default": "WEB",
                            "required": true,
                            "description": "This field allows you to specify where your conversions occurred. Knowing where your events took place helps ensure your ads go to the right people."
                        },
                        {
                            "key": "customData",
                            "type": "dictionary",
                            "label": "Custom data",
                            "secret": false,
                            "default": {
                                "value": "{toFloat(event.properties.price ?? event.properties.value ?? event.properties.revenue)}",
                                "contents": "{(not empty(event.properties.price) and not empty(event.properties.sku) and not empty(event.properties.quantity) ? [{'item_price': event.properties.price, 'id': event.properties.sku, 'quantity': event.properties.quantity, 'delivery_category': 'normal'}] : [])}",
                                "currency": "{event.properties.currency}",
                                "event_id": "{event.uuid}",
                                "order_id": "{event.properties.orderId ?? event.properties.transactionId ?? event.properties.transaction_id}",
                                "num_items": "{event.properties.quantity}",
                                "content_ids": "{event.properties.sku}",
                                "search_string": "{event.properties.search_string ?? event.properties.query}",
                                "content_category": "{event.properties.category}"
                            },
                            "required": true,
                            "description": "A map that contains custom data. See this page for options: https://developers.snap.com/api/marketing-api/Conversions-API/Parameters#custom-data-parameters"
                        }
                    ]
                },
                {
                    "name": "Products Searched",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": "Products Searched",
                                "type": "events"
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "eventType",
                            "type": "string",
                            "label": "Event Type",
                            "default": "SEARCH",
                            "required": true,
                            "description": "Check out this page for possible event types: https://businesshelp.snapchat.com/s/article/pixel-direct-implementation"
                        },
                        {
                            "key": "eventId",
                            "type": "string",
                            "label": "Event ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": true,
                            "description": "The ID of the event"
                        },
                        {
                            "key": "eventTime",
                            "type": "string",
                            "label": "Event time",
                            "secret": false,
                            "default": "{floor(toUnixTimestamp(event.timestamp))}",
                            "required": true,
                            "description": "A Unix timestamp in seconds indicating when the actual event occurred"
                        },
                        {
                            "key": "eventSourceUrl",
                            "type": "string",
                            "label": "Event source URL",
                            "secret": false,
                            "default": "{event.properties.$current_url}",
                            "required": true,
                            "description": "The URL of the web page where the event took place"
                        },
                        {
                            "key": "actionSource",
                            "type": "choice",
                            "label": "Action source",
                            "secret": false,
                            "choices": [
                                {
                                    "label": "WEB - Conversion was made on your website.",
                                    "value": "WEB"
                                },
                                {
                                    "label": "MOBILE_APP - Conversion was made on your mobile app.",
                                    "value": "MOBILE_APP"
                                },
                                {
                                    "label": "OFFLINE - Conversion happened in a way that is not listed.",
                                    "value": "OFFLINE"
                                }
                            ],
                            "default": "WEB",
                            "required": true,
                            "description": "This field allows you to specify where your conversions occurred. Knowing where your events took place helps ensure your ads go to the right people."
                        },
                        {
                            "key": "customData",
                            "type": "dictionary",
                            "label": "Custom data",
                            "secret": false,
                            "default": {
                                "value": "{toFloat(event.properties.price ?? event.properties.value ?? event.properties.revenue)}",
                                "contents": "{(not empty(event.properties.price) and not empty(event.properties.sku) and not empty(event.properties.quantity) ? [{'item_price': event.properties.price, 'id': event.properties.sku, 'quantity': event.properties.quantity, 'delivery_category': 'normal'}] : [])}",
                                "currency": "{event.properties.currency}",
                                "event_id": "{event.uuid}",
                                "order_id": "{event.properties.orderId ?? event.properties.transactionId ?? event.properties.transaction_id}",
                                "num_items": "{event.properties.quantity}",
                                "content_ids": "{event.properties.sku}",
                                "search_string": "{event.properties.search_string ?? event.properties.query}",
                                "content_category": "{event.properties.category}"
                            },
                            "required": true,
                            "description": "A map that contains custom data. See this page for options: https://developers.snap.com/api/marketing-api/Conversions-API/Parameters#custom-data-parameters"
                        }
                    ]
                }
            ],
            "mappings": null,
            "status": "alpha",
            "free": false,
            "type": "destination",
            "id": "template-snapchat-ads",
            "name": "Snapchat Ads Conversions",
            "hog": "if (empty(inputs.pixelId) or empty(inputs.oauth.access_token)) {\n    throw Error('Pixel ID and access token are required')\n}\n\nlet body := {\n    'data': [\n        {\n            'event_name': inputs.eventType,\n            'action_source': inputs.actionSource,\n            'event_time': inputs.eventTime,\n            'event_source_url': inputs.eventSourceUrl,\n            'user_data': {},\n            'custom_data': {}\n        }\n    ]\n}\n\nfor (let key, value in inputs.userData) {\n    if (not empty(value)) {\n        body.data.1.user_data[key] := value\n    }\n}\n\nfor (let key, value in inputs.customData) {\n    if (not empty(value)) {\n        body.data.1.custom_data[key] := value\n    }\n}\n\nif (not (not empty(body.data.1.user_data.em) or not empty(body.data.1.user_data.ph) or ( not empty(body.data.1.user_data.client_ip_address) and not empty(body.data.1.user_data.client_user_agent) ))) {\n    return\n}\n\nlet res := fetch(f'https://tr.snapchat.com/v3/{inputs.pixelId}/events{inputs.testEventMode ? '/validate' : ''}?access_token={inputs.oauth.access_token}', {\n    'method': 'POST',\n    'headers': {\n        'Content-Type': 'application/json',\n    },\n    'body': body\n})\nif (res.status >= 400) {\n    throw Error(f'Error from tr.snapchat.com (status {res.status}): {res.body}')\n}",
            "inputs_schema": [
                {
                    "key": "oauth",
                    "type": "integration",
                    "label": "Snapchat account",
                    "secret": false,
                    "required": true,
                    "integration": "snapchat",
                    "requiredScopes": "snapchat-offline-conversions-api snapchat-marketing-api"
                },
                {
                    "key": "pixelId",
                    "type": "string",
                    "label": "Pixel ID",
                    "secret": false,
                    "required": true,
                    "description": "You must obtain a Pixel ID to use the Conversions API. If you've already set up a Pixel for your website, we recommend that you use the same Pixel ID for your browser and server events."
                },
                {
                    "key": "userData",
                    "type": "dictionary",
                    "label": "User data",
                    "secret": false,
                    "default": {
                        "ct": "{not empty(person.properties.$geoip_city_name) ? sha256Hex(replaceAll(lower(person.properties.$geoip_city_name), ' ', '')) : null}",
                        "em": "{sha256Hex(lower(person.properties.email))}",
                        "fn": "{sha256Hex(lower(person.properties.first_name))}",
                        "ln": "{sha256Hex(lower(person.properties.last_name))}",
                        "ph": "{not empty(person.properties.phone) ? sha256Hex(replaceAll(person.properties.phone, '+', '')) : null}",
                        "st": "{sha256Hex(lower(person.properties.$geoip_subdivision_1_code))}",
                        "zp": "{not empty (person.properties.$geoip_postal_code) ? sha256Hex(replaceAll(lower(person.properties.$geoip_postal_code), ' ', '')) : null}",
                        "country": "{sha256Hex(lower(person.properties.$geoip_country_code))}",
                        "external_id": "{sha256Hex(person.id)}",
                        "sc_click_id": "{person.properties.sccid ?? person.properties.$initial_sccid}",
                        "client_ip_address": "{event.properties.$ip}",
                        "client_user_agent": "{event.properties.$raw_user_agent}"
                    },
                    "required": true,
                    "description": "A map that contains customer information data. See this page for options: https://developers.snap.com/api/marketing-api/Conversions-API/Parameters#user-data-parameters"
                },
                {
                    "key": "testEventMode",
                    "type": "boolean",
                    "label": "Test Event Mode",
                    "secret": false,
                    "default": false,
                    "required": false,
                    "description": "Use this field to specify that events should be test events rather than actual traffic. You'll want to disable this field when sending real traffic through this integration."
                }
            ],
            "category": ["Advertisement"],
            "code_language": "hog",
            "description": "Send conversion events to Snapchat Ads",
            "filters": null,
            "masking": null,
            "icon_url": "/static/services/snapchat.png"
        },
        {
            "mapping_templates": [
                {
                    "name": "Page Viewed",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": "$pageview",
                                "name": "Pageview",
                                "type": "events"
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "eventType",
                            "type": "string",
                            "label": "Event Type",
                            "default": "PAGE_VIEW",
                            "required": true,
                            "description": "Check out this page for possible event types: https://businesshelp.snapchat.com/s/article/pixel-direct-implementation"
                        },
                        {
                            "key": "eventProperties",
                            "type": "dictionary",
                            "label": "Event parameters",
                            "secret": false,
                            "default": {
                                "price": "{toFloat(event.properties.price ?? event.properties.value ?? event.properties.revenue)}",
                                "brands": "{event.properties.brands}",
                                "success": "{toInt(event.properties.success) in (0, 1) ? toInt(event.properties.success) : null}",
                                "currency": "{event.properties.currency}",
                                "item_ids": "{event.properties.sku}",
                                "description": "{event.properties.description}",
                                "number_items": "{event.properties.quantity}",
                                "item_category": "{event.properties.category}",
                                "search_string": "{event.properties.search_string}",
                                "sign_up_method": "{event.properties.sign_up_method}",
                                "transaction_id": "{event.properties.orderId ?? event.properties.transactionId ?? event.properties.transaction_id}",
                                "client_dedup_id": "{event.uuid}",
                                "payment_info_available": "{toInt(event.properties.payment_info_available)}"
                            },
                            "required": false,
                            "description": "Map of Snapchat event attributes and their values. Check out this page for more details: https://businesshelp.snapchat.com/s/article/pixel-direct-implementation"
                        }
                    ]
                },
                {
                    "name": "Order Completed",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": "Order Completed",
                                "type": "events"
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "eventType",
                            "type": "string",
                            "label": "Event Type",
                            "default": "PURCHASE",
                            "required": true,
                            "description": "Check out this page for possible event types: https://businesshelp.snapchat.com/s/article/pixel-direct-implementation"
                        },
                        {
                            "key": "eventProperties",
                            "type": "dictionary",
                            "label": "Event parameters",
                            "secret": false,
                            "default": {
                                "price": "{toFloat(event.properties.price ?? event.properties.value ?? event.properties.revenue)}",
                                "brands": "{arrayMap(x -> x.brands, event.properties.products ?? [])}",
                                "success": "{toInt(event.properties.success) in (0, 1) ? toInt(event.properties.success) : null}",
                                "currency": "{event.properties.currency}",
                                "item_ids": "{arrayMap(x -> x.sku, event.properties.products ?? [])}",
                                "description": "{event.properties.description}",
                                "number_items": "{arrayReduce((acc, curr) -> acc + curr.quantity, event.properties.products ?? [], 0)}",
                                "item_category": "{arrayMap(x -> x.category, event.properties.products ?? [])}",
                                "search_string": "{event.properties.search_string}",
                                "sign_up_method": "{event.properties.sign_up_method}",
                                "transaction_id": "{event.properties.orderId ?? event.properties.transactionId ?? event.properties.transaction_id}",
                                "client_dedup_id": "{event.uuid}",
                                "payment_info_available": "{toInt(event.properties.payment_info_available)}"
                            },
                            "required": false,
                            "description": "Map of Snapchat event attributes and their values. Check out this page for more details: https://businesshelp.snapchat.com/s/article/pixel-direct-implementation"
                        }
                    ]
                },
                {
                    "name": "Checkout Started",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": "Checkout Started",
                                "type": "events"
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "eventType",
                            "type": "string",
                            "label": "Event Type",
                            "default": "START_CHECKOUT",
                            "required": true,
                            "description": "Check out this page for possible event types: https://businesshelp.snapchat.com/s/article/pixel-direct-implementation"
                        },
                        {
                            "key": "eventProperties",
                            "type": "dictionary",
                            "label": "Event parameters",
                            "secret": false,
                            "default": {
                                "price": "{toFloat(event.properties.price ?? event.properties.value ?? event.properties.revenue)}",
                                "brands": "{arrayMap(x -> x.brands, event.properties.products ?? [])}",
                                "success": "{toInt(event.properties.success) in (0, 1) ? toInt(event.properties.success) : null}",
                                "currency": "{event.properties.currency}",
                                "item_ids": "{arrayMap(x -> x.sku, event.properties.products ?? [])}",
                                "description": "{event.properties.description}",
                                "number_items": "{arrayReduce((acc, curr) -> acc + curr.quantity, event.properties.products ?? [], 0)}",
                                "item_category": "{arrayMap(x -> x.category, event.properties.products ?? [])}",
                                "search_string": "{event.properties.search_string}",
                                "sign_up_method": "{event.properties.sign_up_method}",
                                "transaction_id": "{event.properties.orderId ?? event.properties.transactionId ?? event.properties.transaction_id}",
                                "client_dedup_id": "{event.uuid}",
                                "payment_info_available": "{toInt(event.properties.payment_info_available)}"
                            },
                            "required": false,
                            "description": "Map of Snapchat event attributes and their values. Check out this page for more details: https://businesshelp.snapchat.com/s/article/pixel-direct-implementation"
                        }
                    ]
                },
                {
                    "name": "Product Added",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": "Product Added",
                                "type": "events"
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "eventType",
                            "type": "string",
                            "label": "Event Type",
                            "default": "ADD_CART",
                            "required": true,
                            "description": "Check out this page for possible event types: https://businesshelp.snapchat.com/s/article/pixel-direct-implementation"
                        },
                        {
                            "key": "eventProperties",
                            "type": "dictionary",
                            "label": "Event parameters",
                            "secret": false,
                            "default": {
                                "price": "{toFloat(event.properties.price ?? event.properties.value ?? event.properties.revenue)}",
                                "brands": "{event.properties.brands}",
                                "success": "{toInt(event.properties.success) in (0, 1) ? toInt(event.properties.success) : null}",
                                "currency": "{event.properties.currency}",
                                "item_ids": "{event.properties.sku}",
                                "description": "{event.properties.description}",
                                "number_items": "{event.properties.quantity}",
                                "item_category": "{event.properties.category}",
                                "search_string": "{event.properties.search_string}",
                                "sign_up_method": "{event.properties.sign_up_method}",
                                "transaction_id": "{event.properties.orderId ?? event.properties.transactionId ?? event.properties.transaction_id}",
                                "client_dedup_id": "{event.uuid}",
                                "payment_info_available": "{toInt(event.properties.payment_info_available)}"
                            },
                            "required": false,
                            "description": "Map of Snapchat event attributes and their values. Check out this page for more details: https://businesshelp.snapchat.com/s/article/pixel-direct-implementation"
                        }
                    ]
                },
                {
                    "name": "Payment Info Entered",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": "Payment Info Entered",
                                "type": "events"
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "eventType",
                            "type": "string",
                            "label": "Event Type",
                            "default": "ADD_BILLING",
                            "required": true,
                            "description": "Check out this page for possible event types: https://businesshelp.snapchat.com/s/article/pixel-direct-implementation"
                        },
                        {
                            "key": "eventProperties",
                            "type": "dictionary",
                            "label": "Event parameters",
                            "secret": false,
                            "default": {
                                "price": "{toFloat(event.properties.price ?? event.properties.value ?? event.properties.revenue)}",
                                "brands": "{event.properties.brands}",
                                "success": "{toInt(event.properties.success) in (0, 1) ? toInt(event.properties.success) : null}",
                                "currency": "{event.properties.currency}",
                                "item_ids": "{event.properties.sku}",
                                "description": "{event.properties.description}",
                                "number_items": "{event.properties.quantity}",
                                "item_category": "{event.properties.category}",
                                "search_string": "{event.properties.search_string}",
                                "sign_up_method": "{event.properties.sign_up_method}",
                                "transaction_id": "{event.properties.orderId ?? event.properties.transactionId ?? event.properties.transaction_id}",
                                "client_dedup_id": "{event.uuid}",
                                "payment_info_available": "{toInt(event.properties.payment_info_available)}"
                            },
                            "required": false,
                            "description": "Map of Snapchat event attributes and their values. Check out this page for more details: https://businesshelp.snapchat.com/s/article/pixel-direct-implementation"
                        }
                    ]
                },
                {
                    "name": "Promotion Clicked",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": "Promotion Clicked",
                                "type": "events"
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "eventType",
                            "type": "string",
                            "label": "Event Type",
                            "default": "AD_CLICK",
                            "required": true,
                            "description": "Check out this page for possible event types: https://businesshelp.snapchat.com/s/article/pixel-direct-implementation"
                        },
                        {
                            "key": "eventProperties",
                            "type": "dictionary",
                            "label": "Event parameters",
                            "secret": false,
                            "default": {
                                "price": "{toFloat(event.properties.price ?? event.properties.value ?? event.properties.revenue)}",
                                "brands": "{event.properties.brands}",
                                "success": "{toInt(event.properties.success) in (0, 1) ? toInt(event.properties.success) : null}",
                                "currency": "{event.properties.currency}",
                                "item_ids": "{event.properties.sku}",
                                "description": "{event.properties.description}",
                                "number_items": "{event.properties.quantity}",
                                "item_category": "{event.properties.category}",
                                "search_string": "{event.properties.search_string}",
                                "sign_up_method": "{event.properties.sign_up_method}",
                                "transaction_id": "{event.properties.orderId ?? event.properties.transactionId ?? event.properties.transaction_id}",
                                "client_dedup_id": "{event.uuid}",
                                "payment_info_available": "{toInt(event.properties.payment_info_available)}"
                            },
                            "required": false,
                            "description": "Map of Snapchat event attributes and their values. Check out this page for more details: https://businesshelp.snapchat.com/s/article/pixel-direct-implementation"
                        }
                    ]
                },
                {
                    "name": "Promotion Viewed",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": "Promotion Viewed",
                                "type": "events"
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "eventType",
                            "type": "string",
                            "label": "Event Type",
                            "default": "AD_VIEW",
                            "required": true,
                            "description": "Check out this page for possible event types: https://businesshelp.snapchat.com/s/article/pixel-direct-implementation"
                        },
                        {
                            "key": "eventProperties",
                            "type": "dictionary",
                            "label": "Event parameters",
                            "secret": false,
                            "default": {
                                "price": "{toFloat(event.properties.price ?? event.properties.value ?? event.properties.revenue)}",
                                "brands": "{event.properties.brands}",
                                "success": "{toInt(event.properties.success) in (0, 1) ? toInt(event.properties.success) : null}",
                                "currency": "{event.properties.currency}",
                                "item_ids": "{event.properties.sku}",
                                "description": "{event.properties.description}",
                                "number_items": "{event.properties.quantity}",
                                "item_category": "{event.properties.category}",
                                "search_string": "{event.properties.search_string}",
                                "sign_up_method": "{event.properties.sign_up_method}",
                                "transaction_id": "{event.properties.orderId ?? event.properties.transactionId ?? event.properties.transaction_id}",
                                "client_dedup_id": "{event.uuid}",
                                "payment_info_available": "{toInt(event.properties.payment_info_available)}"
                            },
                            "required": false,
                            "description": "Map of Snapchat event attributes and their values. Check out this page for more details: https://businesshelp.snapchat.com/s/article/pixel-direct-implementation"
                        }
                    ]
                },
                {
                    "name": "Product Added to Wishlist",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": "Product Added to Wishlist",
                                "type": "events"
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "eventType",
                            "type": "string",
                            "label": "Event Type",
                            "default": "ADD_TO_WISHLIST",
                            "required": true,
                            "description": "Check out this page for possible event types: https://businesshelp.snapchat.com/s/article/pixel-direct-implementation"
                        },
                        {
                            "key": "eventProperties",
                            "type": "dictionary",
                            "label": "Event parameters",
                            "secret": false,
                            "default": {
                                "price": "{toFloat(event.properties.price ?? event.properties.value ?? event.properties.revenue)}",
                                "brands": "{event.properties.brands}",
                                "success": "{toInt(event.properties.success) in (0, 1) ? toInt(event.properties.success) : null}",
                                "currency": "{event.properties.currency}",
                                "item_ids": "{event.properties.sku}",
                                "description": "{event.properties.description}",
                                "number_items": "{event.properties.quantity}",
                                "item_category": "{event.properties.category}",
                                "search_string": "{event.properties.search_string}",
                                "sign_up_method": "{event.properties.sign_up_method}",
                                "transaction_id": "{event.properties.orderId ?? event.properties.transactionId ?? event.properties.transaction_id}",
                                "client_dedup_id": "{event.uuid}",
                                "payment_info_available": "{toInt(event.properties.payment_info_available)}"
                            },
                            "required": false,
                            "description": "Map of Snapchat event attributes and their values. Check out this page for more details: https://businesshelp.snapchat.com/s/article/pixel-direct-implementation"
                        }
                    ]
                },
                {
                    "name": "Product Viewed",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": "Product Viewed",
                                "type": "events"
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "eventType",
                            "type": "string",
                            "label": "Event Type",
                            "default": "VIEW_CONTENT",
                            "required": true,
                            "description": "Check out this page for possible event types: https://businesshelp.snapchat.com/s/article/pixel-direct-implementation"
                        },
                        {
                            "key": "eventProperties",
                            "type": "dictionary",
                            "label": "Event parameters",
                            "secret": false,
                            "default": {
                                "price": "{toFloat(event.properties.price ?? event.properties.value ?? event.properties.revenue)}",
                                "brands": "{event.properties.brands}",
                                "success": "{toInt(event.properties.success) in (0, 1) ? toInt(event.properties.success) : null}",
                                "currency": "{event.properties.currency}",
                                "item_ids": "{event.properties.sku}",
                                "description": "{event.properties.description}",
                                "number_items": "{event.properties.quantity}",
                                "item_category": "{event.properties.category}",
                                "search_string": "{event.properties.search_string}",
                                "sign_up_method": "{event.properties.sign_up_method}",
                                "transaction_id": "{event.properties.orderId ?? event.properties.transactionId ?? event.properties.transaction_id}",
                                "client_dedup_id": "{event.uuid}",
                                "payment_info_available": "{toInt(event.properties.payment_info_available)}"
                            },
                            "required": false,
                            "description": "Map of Snapchat event attributes and their values. Check out this page for more details: https://businesshelp.snapchat.com/s/article/pixel-direct-implementation"
                        }
                    ]
                },
                {
                    "name": "Product List Viewed",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": "Product List Viewed",
                                "type": "events"
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "eventType",
                            "type": "string",
                            "label": "Event Type",
                            "default": "VIEW_CONTENT",
                            "required": true,
                            "description": "Check out this page for possible event types: https://businesshelp.snapchat.com/s/article/pixel-direct-implementation"
                        },
                        {
                            "key": "eventProperties",
                            "type": "dictionary",
                            "label": "Event parameters",
                            "secret": false,
                            "default": {
                                "price": "{toFloat(event.properties.price ?? event.properties.value ?? event.properties.revenue)}",
                                "brands": "{event.properties.brands}",
                                "success": "{toInt(event.properties.success) in (0, 1) ? toInt(event.properties.success) : null}",
                                "currency": "{event.properties.currency}",
                                "item_ids": "{event.properties.sku}",
                                "description": "{event.properties.description}",
                                "number_items": "{event.properties.quantity}",
                                "item_category": "{event.properties.category}",
                                "search_string": "{event.properties.search_string}",
                                "sign_up_method": "{event.properties.sign_up_method}",
                                "transaction_id": "{event.properties.orderId ?? event.properties.transactionId ?? event.properties.transaction_id}",
                                "client_dedup_id": "{event.uuid}",
                                "payment_info_available": "{toInt(event.properties.payment_info_available)}"
                            },
                            "required": false,
                            "description": "Map of Snapchat event attributes and their values. Check out this page for more details: https://businesshelp.snapchat.com/s/article/pixel-direct-implementation"
                        }
                    ]
                },
                {
                    "name": "Products Searched",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": "Products Searched",
                                "type": "events"
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "eventType",
                            "type": "string",
                            "label": "Event Type",
                            "default": "SEARCH",
                            "required": true,
                            "description": "Check out this page for possible event types: https://businesshelp.snapchat.com/s/article/pixel-direct-implementation"
                        },
                        {
                            "key": "eventProperties",
                            "type": "dictionary",
                            "label": "Event parameters",
                            "secret": false,
                            "default": {
                                "price": "{toFloat(event.properties.price ?? event.properties.value ?? event.properties.revenue)}",
                                "brands": "{event.properties.brands}",
                                "success": "{toInt(event.properties.success) in (0, 1) ? toInt(event.properties.success) : null}",
                                "currency": "{event.properties.currency}",
                                "item_ids": "{event.properties.sku}",
                                "description": "{event.properties.description}",
                                "number_items": "{event.properties.quantity}",
                                "item_category": "{event.properties.category}",
                                "search_string": "{event.properties.search_string}",
                                "sign_up_method": "{event.properties.sign_up_method}",
                                "transaction_id": "{event.properties.orderId ?? event.properties.transactionId ?? event.properties.transaction_id}",
                                "client_dedup_id": "{event.uuid}",
                                "payment_info_available": "{toInt(event.properties.payment_info_available)}"
                            },
                            "required": false,
                            "description": "Map of Snapchat event attributes and their values. Check out this page for more details: https://businesshelp.snapchat.com/s/article/pixel-direct-implementation"
                        }
                    ]
                }
            ],
            "mappings": null,
            "status": "alpha",
            "free": false,
            "type": "site_destination",
            "id": "template-snapchat-pixel",
            "name": "Snapchat Pixel",
            "hog": "// Adds window.snaptr and lazily loads the Snapchat Pixel script\nfunction initSnippet() {\n    (function(e,t,n){if(e.snaptr)return;var a=e.snaptr=function()\n    {a.handleRequest?a.handleRequest.apply(a,arguments):a.queue.push(arguments)};\n    a.queue=[];var s='script';r=t.createElement(s);r.async=!0;\n    r.src=n;var u=t.getElementsByTagName(s)[0];\n    u.parentNode.insertBefore(r,u);})(window,document,\n    'https://sc-static.net/scevent.min.js');\n}\n\nexport function onLoad({ inputs, posthog }) {\n    initSnippet();\n    let userProperties = {};\n    for (const [key, value] of Object.entries(inputs.userProperties)) {\n        if (value) {\n            userProperties[key] = value;\n        }\n    };\n    if (posthog.config.debug) {\n        console.log('[PostHog] snaptr init', inputs.pixelId, userProperties);\n    }\n    snaptr('init', inputs.pixelId, userProperties);\n}\nexport function onEvent({ inputs, posthog }) {\n    let eventProperties = {};\n    for (const [key, value] of Object.entries(inputs.eventProperties)) {\n        if (value) {\n            eventProperties[key] = value;\n        }\n    };\n    if (posthog.config.debug) {\n        console.log('[PostHog] snaptr track', inputs.eventType, eventProperties);\n    }\n    snaptr('track', inputs.eventType, eventProperties);\n}",
            "inputs_schema": [
                {
                    "key": "pixelId",
                    "type": "string",
                    "label": "Pixel ID",
                    "secret": false,
                    "default": "",
                    "required": true,
                    "description": "You must obtain a Pixel ID to use the Snapchat Pixel. If you've already set up a Pixel for your website, we recommend that you use the same Pixel ID for your browser and server events."
                },
                {
                    "key": "userProperties",
                    "type": "dictionary",
                    "label": "User parameters",
                    "secret": false,
                    "default": {
                        "user_email": "{person.properties.email}",
                        "user_phone_number": "{person.properties.phone}"
                    },
                    "required": false,
                    "description": "Map of Snapchat user parameters and their values. Check out this page for more details: https://businesshelp.snapchat.com/s/article/pixel-direct-implementation"
                }
            ],
            "category": ["Advertisement"],
            "code_language": "javascript",
            "description": "Track how many Snapchat users interact with your website. Note that this destination will set third-party cookies.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/services/snapchat.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-snapengage",
            "name": "SnapEngage",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Business Messaging"],
            "code_language": "hog",
            "description": "Send events to SnapEngage.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/SnapEngage.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-split",
            "name": "Split",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["A/B Testing & Feature Experimentation"],
            "code_language": "hog",
            "description": "Send events to Split.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Split.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-spotify-pixel",
            "name": "Spotify Pixel",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Advertising"],
            "code_language": "hog",
            "description": "Send events to Spotify Pixel.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Spotify_Pixel.svg"
        },
        {
            "mapping_templates": [
                {
                    "name": "Track Event",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify')",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "eventName",
                            "type": "string",
                            "label": "Event Name",
                            "secret": false,
                            "default": "{event.event}",
                            "required": true,
                            "description": "The event to be sent to Sprig."
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Event Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": true,
                            "description": "The timestamp of the event."
                        },
                        {
                            "key": "userId",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": true,
                            "description": "The userId of the identified user."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "trackEvent",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Identify User",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event in ('$identify', '$set')",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "userId",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": true,
                            "description": "The userId of the identified user."
                        },
                        {
                            "key": "attributes",
                            "type": "dictionary",
                            "label": "Attributes",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{person.properties}"
                            },
                            "required": false,
                            "description": "The traits to attribute to the userId."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "identifyUser",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Screen Event",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event = '$screen'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "eventName",
                            "type": "string",
                            "label": "Event Name",
                            "secret": false,
                            "default": "{event.event}",
                            "required": true,
                            "description": "The event to be sent to Sprig."
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Event Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": true,
                            "description": "The timestamp of the event."
                        },
                        {
                            "key": "userId",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": true,
                            "description": "The userId of the identified user."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "trackEvent",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                }
            ],
            "mappings": null,
            "status": "alpha",
            "free": false,
            "type": "destination",
            "id": "segment-actions-sprig",
            "name": "Sprig Cloud",
            "hog": "return event",
            "inputs_schema": [
                {
                    "key": "apiKey",
                    "type": "string",
                    "label": "API Key",
                    "secret": false,
                    "required": true,
                    "description": "Sprig API key."
                },
                {
                    "key": "debug_mode",
                    "type": "boolean",
                    "label": "Debug Mode",
                    "default": false,
                    "description": "Will log configuration and request details"
                }
            ],
            "category": [],
            "code_language": "hog",
            "description": "Send event data to Sprig Cloud",
            "filters": null,
            "masking": null,
            "icon_url": "/static/services/sprig.com.png"
        },
        {
            "mapping_templates": [
                {
                    "name": "Forward Event",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event in ('$identify', '$set') or event = '$pageview' or event = '$screen' or event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify')",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "user_id",
                            "type": "string",
                            "label": "Segment User ID",
                            "secret": false,
                            "default": "{person.id ?? event.distinct_id}",
                            "required": false,
                            "description": "The ID of the user in Segment"
                        },
                        {
                            "key": "event_type",
                            "type": "string",
                            "label": "Event Type",
                            "secret": false,
                            "default": "{event.event == '$pageview' ? 'page' : event.event == '$screen' ? 'screen' : event.event == '$groupidentify' ? 'group' : event.event in ('$identify', '$set') ? 'identify' : event.event == '$alias' ? 'alias' : 'track'}",
                            "required": false,
                            "description": "The Segment event type (page, track, etc.)"
                        },
                        {
                            "key": "action",
                            "type": "string",
                            "label": "Event Name",
                            "secret": false,
                            "default": "{event.event}",
                            "required": false,
                            "description": "The event name (e.g. Order Completed)"
                        },
                        {
                            "key": "ip_fwd",
                            "type": "string",
                            "label": "IP Address",
                            "secret": false,
                            "default": "{event.properties.$ip}",
                            "required": true,
                            "description": "IP address of the user"
                        },
                        {
                            "key": "title",
                            "type": "string",
                            "label": "Page Title",
                            "secret": false,
                            "default": "{event.properties.title}",
                            "required": false,
                            "description": "The title of the page where the event occurred."
                        },
                        {
                            "key": "url",
                            "type": "string",
                            "label": "URL",
                            "secret": false,
                            "default": "{event.properties.$current_url}",
                            "required": false,
                            "description": "The URL of the page where the event occurred."
                        },
                        {
                            "key": "referrer",
                            "type": "string",
                            "label": "Referrer",
                            "secret": false,
                            "default": "{event.properties.$referrer}",
                            "required": false,
                            "description": "The referrer of the page where the event occurred."
                        },
                        {
                            "key": "utm_source",
                            "type": "string",
                            "label": "UTM Source",
                            "secret": false,
                            "default": "{event.properties.utm_source}",
                            "required": false,
                            "description": "UTM source parameter associated with event"
                        },
                        {
                            "key": "user_agent",
                            "type": "string",
                            "label": "User Agent",
                            "secret": false,
                            "default": "{event.properties.$raw_user_agent}",
                            "required": true,
                            "description": "User-Agent of the user"
                        },
                        {
                            "key": "email",
                            "type": "string",
                            "label": "Email",
                            "secret": false,
                            "default": "{person.properties.email ?? event.properties.email}",
                            "required": false,
                            "description": "Email address of the individual who triggered the event."
                        },
                        {
                            "key": "phone",
                            "type": "string",
                            "label": "Phone Number",
                            "secret": false,
                            "default": "{person.properties.phone ?? event.properties.phone}",
                            "required": false,
                            "description": "Phone number of the individual who triggered the event"
                        },
                        {
                            "key": "first_name",
                            "type": "string",
                            "label": "First Name",
                            "secret": false,
                            "default": "{person.properties.first_name ?? event.properties.first_name}",
                            "required": false,
                            "description": "First name of the individual who triggered the event."
                        },
                        {
                            "key": "last_name",
                            "type": "string",
                            "label": "Last Name",
                            "secret": false,
                            "default": "{person.properties.last_name ?? event.properties.last_name}",
                            "required": false,
                            "description": "Last name of the individual who triggered the event."
                        },
                        {
                            "key": "ecommerce_data",
                            "type": "dictionary",
                            "label": "Ecommerce Data",
                            "secret": false,
                            "default": {
                                "revenue": "{event.properties.revenue}",
                                "order_id": "{event.properties.order_id}",
                                "product_id": "{event.properties.product_id}",
                                "product_name": "{event.properties.name}",
                                "product_price": "{event.properties.price}",
                                "product_category": "{event.properties.category}",
                                "product_quantity": "{event.properties.quantity}"
                            },
                            "required": false,
                            "description": "Additional ecommerce fields that are included in the pixel payload."
                        },
                        {
                            "key": "ecommerce_products",
                            "type": "string",
                            "label": "Products",
                            "secret": false,
                            "default": "{event.properties.products}",
                            "required": false,
                            "description": "The list of products associated with the event (for events with multiple products, such as Order Completed)"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "forwardEvent",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                }
            ],
            "mappings": null,
            "status": "alpha",
            "free": false,
            "type": "destination",
            "id": "segment-actions-stackadapt-cloud",
            "name": "StackAdapt",
            "hog": "return event",
            "inputs_schema": [
                {
                    "key": "pixelId",
                    "type": "string",
                    "label": "Universal Pixel ID",
                    "secret": false,
                    "required": true,
                    "description": "Your StackAdapt Universal Pixel ID"
                },
                {
                    "key": "debug_mode",
                    "type": "boolean",
                    "label": "Debug Mode",
                    "default": false,
                    "description": "Will log configuration and request details"
                }
            ],
            "category": [],
            "code_language": "hog",
            "description": "Send event data to StackAdapt",
            "filters": null,
            "masking": null,
            "icon_url": "/static/services/stackadapt.com.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-statsig",
            "name": "Statsig",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["A/B Testing & Feature Experimentation"],
            "code_language": "hog",
            "description": "Send events to Statsig.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Statsig.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-stitch-data",
            "name": "Stitch Data",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["ETL Platforms"],
            "code_language": "hog",
            "description": "Send events to Stitch Data.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Stitch_Data.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-tableau",
            "name": "Tableau",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Analytics"],
            "code_language": "hog",
            "description": "Send events to Tableau.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Tableau.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-talkable",
            "name": "Talkable",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Marketing"],
            "code_language": "hog",
            "description": "Send events to Talkable.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Talkable.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-taplytics",
            "name": "Taplytics",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["A/B Testing & Feature Experimentation"],
            "code_language": "hog",
            "description": "Send events to Taplytics.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Taplytics.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-tapstream",
            "name": "Tapstream",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Attribution Platforms"],
            "code_language": "hog",
            "description": "Send events to Tapstream.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Tapstream.png"
        },
        {
            "mapping_templates": [
                {
                    "name": "Page Viewed",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": "$pageview",
                                "name": "Pageview",
                                "type": "events"
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "eventName",
                            "type": "string",
                            "label": "Event name",
                            "secret": false,
                            "default": "Pageview",
                            "required": true,
                            "description": "A standard event or custom event name."
                        },
                        {
                            "key": "eventId",
                            "type": "string",
                            "label": "Event ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": true,
                            "description": "The ID of the event."
                        },
                        {
                            "key": "eventTimestamp",
                            "type": "string",
                            "label": "Event timestamp",
                            "secret": false,
                            "default": "{toUnixTimestamp(event.timestamp)}",
                            "required": true,
                            "description": "A Unix timestamp in seconds indicating when the actual event occurred."
                        },
                        {
                            "key": "propertyProperties",
                            "type": "dictionary",
                            "label": "Property properties",
                            "secret": false,
                            "default": {
                                "value": "{toFloat(event.properties.value ?? event.properties.revenue ?? event.properties.price)}",
                                "shop_id": "{event.properties.shop_id}",
                                "contents": "{(not empty(event.properties.sku) and not empty(event.properties.price) and not empty(event.properties.category) and not empty(event.properties.name) and not empty(event.properties.brand) ? [{'price': event.properties.price, 'content_id': event.properties.sku, 'content_category': event.properties.category, 'content_name': event.properties.name, 'brand': event.properties.brand}] : [])}",
                                "currency": "{event.properties.currency ?? 'USD'}",
                                "order_id": "{event.properties.order_id}",
                                "num_items": "{event.properties.quantity}",
                                "content_ids": "{not empty(event.properties.sku) ? [event.properties.sku] : []}",
                                "description": "",
                                "content_type": "product",
                                "search_string": "{event.properties.query}"
                            },
                            "required": true,
                            "description": "A map that contains customer information data. See this page for options: https://business-api.tiktok.com/portal/docs?id=1771101151059969#item-link-properties%20parameters"
                        },
                        {
                            "key": "pageProperties",
                            "type": "dictionary",
                            "label": "Page properties",
                            "secret": false,
                            "default": {
                                "url": "{event.properties.$current_url}",
                                "referrer": "{event.properties.$referrer}"
                            },
                            "required": true,
                            "description": "A map that contains page information data. See this page for options: https://business-api.tiktok.com/portal/docs?id=1771101151059969#item-link-page%20parameters"
                        }
                    ]
                },
                {
                    "name": "Payment Info Entered",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": "Payment Info Entered",
                                "type": "events"
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "eventName",
                            "type": "string",
                            "label": "Event name",
                            "secret": false,
                            "default": "AddPaymentInfo",
                            "required": true,
                            "description": "A standard event or custom event name."
                        },
                        {
                            "key": "eventId",
                            "type": "string",
                            "label": "Event ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": true,
                            "description": "The ID of the event."
                        },
                        {
                            "key": "eventTimestamp",
                            "type": "string",
                            "label": "Event timestamp",
                            "secret": false,
                            "default": "{toUnixTimestamp(event.timestamp)}",
                            "required": true,
                            "description": "A Unix timestamp in seconds indicating when the actual event occurred."
                        },
                        {
                            "key": "propertyProperties",
                            "type": "dictionary",
                            "label": "Property properties",
                            "secret": false,
                            "default": {
                                "value": "{toFloat(event.properties.value ?? event.properties.revenue ?? event.properties.price)}",
                                "shop_id": "{event.properties.shop_id}",
                                "contents": "{(not empty(event.properties.sku) and not empty(event.properties.price) and not empty(event.properties.category) and not empty(event.properties.name) and not empty(event.properties.brand) ? [{'price': event.properties.price, 'content_id': event.properties.sku, 'content_category': event.properties.category, 'content_name': event.properties.name, 'brand': event.properties.brand}] : [])}",
                                "currency": "{event.properties.currency ?? 'USD'}",
                                "order_id": "{event.properties.order_id}",
                                "num_items": "{event.properties.quantity}",
                                "content_ids": "{not empty(event.properties.sku) ? [event.properties.sku] : []}",
                                "description": "",
                                "content_type": "product",
                                "search_string": "{event.properties.query}"
                            },
                            "required": true,
                            "description": "A map that contains customer information data. See this page for options: https://business-api.tiktok.com/portal/docs?id=1771101151059969#item-link-properties%20parameters"
                        },
                        {
                            "key": "pageProperties",
                            "type": "dictionary",
                            "label": "Page properties",
                            "secret": false,
                            "default": {
                                "url": "{event.properties.$current_url}",
                                "referrer": "{event.properties.$referrer}"
                            },
                            "required": true,
                            "description": "A map that contains page information data. See this page for options: https://business-api.tiktok.com/portal/docs?id=1771101151059969#item-link-page%20parameters"
                        }
                    ]
                },
                {
                    "name": "Product Added",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": "Product Added",
                                "type": "events"
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "eventName",
                            "type": "string",
                            "label": "Event name",
                            "secret": false,
                            "default": "AddToCart",
                            "required": true,
                            "description": "A standard event or custom event name."
                        },
                        {
                            "key": "eventId",
                            "type": "string",
                            "label": "Event ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": true,
                            "description": "The ID of the event."
                        },
                        {
                            "key": "eventTimestamp",
                            "type": "string",
                            "label": "Event timestamp",
                            "secret": false,
                            "default": "{toUnixTimestamp(event.timestamp)}",
                            "required": true,
                            "description": "A Unix timestamp in seconds indicating when the actual event occurred."
                        },
                        {
                            "key": "propertyProperties",
                            "type": "dictionary",
                            "label": "Property properties",
                            "secret": false,
                            "default": {
                                "value": "{toFloat(event.properties.value ?? event.properties.revenue ?? event.properties.price)}",
                                "shop_id": "{event.properties.shop_id}",
                                "contents": "{(not empty(event.properties.sku) and not empty(event.properties.price) and not empty(event.properties.category) and not empty(event.properties.name) and not empty(event.properties.brand) ? [{'price': event.properties.price, 'content_id': event.properties.sku, 'content_category': event.properties.category, 'content_name': event.properties.name, 'brand': event.properties.brand}] : [])}",
                                "currency": "{event.properties.currency ?? 'USD'}",
                                "order_id": "{event.properties.order_id}",
                                "num_items": "{event.properties.quantity}",
                                "content_ids": "{not empty(event.properties.sku) ? [event.properties.sku] : []}",
                                "description": "",
                                "content_type": "product",
                                "search_string": "{event.properties.query}"
                            },
                            "required": true,
                            "description": "A map that contains customer information data. See this page for options: https://business-api.tiktok.com/portal/docs?id=1771101151059969#item-link-properties%20parameters"
                        },
                        {
                            "key": "pageProperties",
                            "type": "dictionary",
                            "label": "Page properties",
                            "secret": false,
                            "default": {
                                "url": "{event.properties.$current_url}",
                                "referrer": "{event.properties.$referrer}"
                            },
                            "required": true,
                            "description": "A map that contains page information data. See this page for options: https://business-api.tiktok.com/portal/docs?id=1771101151059969#item-link-page%20parameters"
                        }
                    ]
                },
                {
                    "name": "Product Added to Wishlist",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": "Product Added to Wishlist",
                                "type": "events"
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "eventName",
                            "type": "string",
                            "label": "Event name",
                            "secret": false,
                            "default": "AddToWishlist",
                            "required": true,
                            "description": "A standard event or custom event name."
                        },
                        {
                            "key": "eventId",
                            "type": "string",
                            "label": "Event ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": true,
                            "description": "The ID of the event."
                        },
                        {
                            "key": "eventTimestamp",
                            "type": "string",
                            "label": "Event timestamp",
                            "secret": false,
                            "default": "{toUnixTimestamp(event.timestamp)}",
                            "required": true,
                            "description": "A Unix timestamp in seconds indicating when the actual event occurred."
                        },
                        {
                            "key": "propertyProperties",
                            "type": "dictionary",
                            "label": "Property properties",
                            "secret": false,
                            "default": {
                                "value": "{toFloat(event.properties.value ?? event.properties.revenue ?? event.properties.price)}",
                                "shop_id": "{event.properties.shop_id}",
                                "contents": "{(not empty(event.properties.sku) and not empty(event.properties.price) and not empty(event.properties.category) and not empty(event.properties.name) and not empty(event.properties.brand) ? [{'price': event.properties.price, 'content_id': event.properties.sku, 'content_category': event.properties.category, 'content_name': event.properties.name, 'brand': event.properties.brand}] : [])}",
                                "currency": "{event.properties.currency ?? 'USD'}",
                                "order_id": "{event.properties.order_id}",
                                "num_items": "{event.properties.quantity}",
                                "content_ids": "{not empty(event.properties.sku) ? [event.properties.sku] : []}",
                                "description": "",
                                "content_type": "product",
                                "search_string": "{event.properties.query}"
                            },
                            "required": true,
                            "description": "A map that contains customer information data. See this page for options: https://business-api.tiktok.com/portal/docs?id=1771101151059969#item-link-properties%20parameters"
                        },
                        {
                            "key": "pageProperties",
                            "type": "dictionary",
                            "label": "Page properties",
                            "secret": false,
                            "default": {
                                "url": "{event.properties.$current_url}",
                                "referrer": "{event.properties.$referrer}"
                            },
                            "required": true,
                            "description": "A map that contains page information data. See this page for options: https://business-api.tiktok.com/portal/docs?id=1771101151059969#item-link-page%20parameters"
                        }
                    ]
                },
                {
                    "name": "Product Clicked",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": "Product Clicked",
                                "type": "events"
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "eventName",
                            "type": "string",
                            "label": "Event name",
                            "secret": false,
                            "default": "ClickButton",
                            "required": true,
                            "description": "A standard event or custom event name."
                        },
                        {
                            "key": "eventId",
                            "type": "string",
                            "label": "Event ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": true,
                            "description": "The ID of the event."
                        },
                        {
                            "key": "eventTimestamp",
                            "type": "string",
                            "label": "Event timestamp",
                            "secret": false,
                            "default": "{toUnixTimestamp(event.timestamp)}",
                            "required": true,
                            "description": "A Unix timestamp in seconds indicating when the actual event occurred."
                        },
                        {
                            "key": "propertyProperties",
                            "type": "dictionary",
                            "label": "Property properties",
                            "secret": false,
                            "default": {
                                "value": "{toFloat(event.properties.value ?? event.properties.revenue ?? event.properties.price)}",
                                "shop_id": "{event.properties.shop_id}",
                                "contents": "{(not empty(event.properties.sku) and not empty(event.properties.price) and not empty(event.properties.category) and not empty(event.properties.name) and not empty(event.properties.brand) ? [{'price': event.properties.price, 'content_id': event.properties.sku, 'content_category': event.properties.category, 'content_name': event.properties.name, 'brand': event.properties.brand}] : [])}",
                                "currency": "{event.properties.currency ?? 'USD'}",
                                "order_id": "{event.properties.order_id}",
                                "num_items": "{event.properties.quantity}",
                                "content_ids": "{not empty(event.properties.sku) ? [event.properties.sku] : []}",
                                "description": "",
                                "content_type": "product",
                                "search_string": "{event.properties.query}"
                            },
                            "required": true,
                            "description": "A map that contains customer information data. See this page for options: https://business-api.tiktok.com/portal/docs?id=1771101151059969#item-link-properties%20parameters"
                        },
                        {
                            "key": "pageProperties",
                            "type": "dictionary",
                            "label": "Page properties",
                            "secret": false,
                            "default": {
                                "url": "{event.properties.$current_url}",
                                "referrer": "{event.properties.$referrer}"
                            },
                            "required": true,
                            "description": "A map that contains page information data. See this page for options: https://business-api.tiktok.com/portal/docs?id=1771101151059969#item-link-page%20parameters"
                        }
                    ]
                },
                {
                    "name": "Order Placed",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": "Order Placed",
                                "type": "events"
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "eventName",
                            "type": "string",
                            "label": "Event name",
                            "secret": false,
                            "default": "PlaceAnOrder",
                            "required": true,
                            "description": "A standard event or custom event name."
                        },
                        {
                            "key": "eventId",
                            "type": "string",
                            "label": "Event ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": true,
                            "description": "The ID of the event."
                        },
                        {
                            "key": "eventTimestamp",
                            "type": "string",
                            "label": "Event timestamp",
                            "secret": false,
                            "default": "{toUnixTimestamp(event.timestamp)}",
                            "required": true,
                            "description": "A Unix timestamp in seconds indicating when the actual event occurred."
                        },
                        {
                            "key": "propertyProperties",
                            "type": "dictionary",
                            "label": "Property properties",
                            "secret": false,
                            "default": {
                                "value": "{toFloat(event.properties.value ?? event.properties.revenue ?? event.properties.price)}",
                                "shop_id": "{event.properties.shop_id}",
                                "contents": "{arrayMap(x -> ({'price': x.price, 'content_id': x.sku, 'content_category': x.category, 'content_name': x.name, 'brand': x.brand}), event.properties.products ?? [])}",
                                "currency": "{event.properties.currency ?? 'USD'}",
                                "order_id": "{event.properties.order_id}",
                                "num_items": "{arrayReduce((acc, curr) -> acc + curr.quantity, event.properties.products ?? [], 0)}",
                                "content_ids": "{arrayMap(x -> x.sku, event.properties.products ?? [])}",
                                "description": "",
                                "content_type": "product",
                                "search_string": "{event.properties.query}"
                            },
                            "required": true,
                            "description": "A map that contains customer information data. See this page for options: https://business-api.tiktok.com/portal/docs?id=1771101151059969#item-link-properties%20parameters"
                        },
                        {
                            "key": "pageProperties",
                            "type": "dictionary",
                            "label": "Page properties",
                            "secret": false,
                            "default": {
                                "url": "{event.properties.$current_url}",
                                "referrer": "{event.properties.$referrer}"
                            },
                            "required": true,
                            "description": "A map that contains page information data. See this page for options: https://business-api.tiktok.com/portal/docs?id=1771101151059969#item-link-page%20parameters"
                        }
                    ]
                },
                {
                    "name": "Signed Up",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": "Signed Up",
                                "type": "events"
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "eventName",
                            "type": "string",
                            "label": "Event name",
                            "secret": false,
                            "default": "CompleteRegistration",
                            "required": true,
                            "description": "A standard event or custom event name."
                        },
                        {
                            "key": "eventId",
                            "type": "string",
                            "label": "Event ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": true,
                            "description": "The ID of the event."
                        },
                        {
                            "key": "eventTimestamp",
                            "type": "string",
                            "label": "Event timestamp",
                            "secret": false,
                            "default": "{toUnixTimestamp(event.timestamp)}",
                            "required": true,
                            "description": "A Unix timestamp in seconds indicating when the actual event occurred."
                        },
                        {
                            "key": "propertyProperties",
                            "type": "dictionary",
                            "label": "Property properties",
                            "secret": false,
                            "default": {
                                "value": "{toFloat(event.properties.value ?? event.properties.revenue ?? event.properties.price)}",
                                "shop_id": "{event.properties.shop_id}",
                                "contents": "{(not empty(event.properties.sku) and not empty(event.properties.price) and not empty(event.properties.category) and not empty(event.properties.name) and not empty(event.properties.brand) ? [{'price': event.properties.price, 'content_id': event.properties.sku, 'content_category': event.properties.category, 'content_name': event.properties.name, 'brand': event.properties.brand}] : [])}",
                                "currency": "{event.properties.currency ?? 'USD'}",
                                "order_id": "{event.properties.order_id}",
                                "num_items": "{event.properties.quantity}",
                                "content_ids": "{not empty(event.properties.sku) ? [event.properties.sku] : []}",
                                "description": "",
                                "content_type": "product",
                                "search_string": "{event.properties.query}"
                            },
                            "required": true,
                            "description": "A map that contains customer information data. See this page for options: https://business-api.tiktok.com/portal/docs?id=1771101151059969#item-link-properties%20parameters"
                        },
                        {
                            "key": "pageProperties",
                            "type": "dictionary",
                            "label": "Page properties",
                            "secret": false,
                            "default": {
                                "url": "{event.properties.$current_url}",
                                "referrer": "{event.properties.$referrer}"
                            },
                            "required": true,
                            "description": "A map that contains page information data. See this page for options: https://business-api.tiktok.com/portal/docs?id=1771101151059969#item-link-page%20parameters"
                        }
                    ]
                },
                {
                    "name": "Checkout Started",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": "Checkout Started",
                                "type": "events"
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "eventName",
                            "type": "string",
                            "label": "Event name",
                            "secret": false,
                            "default": "InitiateCheckout",
                            "required": true,
                            "description": "A standard event or custom event name."
                        },
                        {
                            "key": "eventId",
                            "type": "string",
                            "label": "Event ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": true,
                            "description": "The ID of the event."
                        },
                        {
                            "key": "eventTimestamp",
                            "type": "string",
                            "label": "Event timestamp",
                            "secret": false,
                            "default": "{toUnixTimestamp(event.timestamp)}",
                            "required": true,
                            "description": "A Unix timestamp in seconds indicating when the actual event occurred."
                        },
                        {
                            "key": "propertyProperties",
                            "type": "dictionary",
                            "label": "Property properties",
                            "secret": false,
                            "default": {
                                "value": "{toFloat(event.properties.value ?? event.properties.revenue ?? event.properties.price)}",
                                "shop_id": "{event.properties.shop_id}",
                                "contents": "{arrayMap(x -> ({'price': x.price, 'content_id': x.sku, 'content_category': x.category, 'content_name': x.name, 'brand': x.brand}), event.properties.products ?? [])}",
                                "currency": "{event.properties.currency ?? 'USD'}",
                                "order_id": "{event.properties.order_id}",
                                "num_items": "{arrayReduce((acc, curr) -> acc + curr.quantity, event.properties.products ?? [], 0)}",
                                "content_ids": "{arrayMap(x -> x.sku, event.properties.products ?? [])}",
                                "description": "",
                                "content_type": "product",
                                "search_string": "{event.properties.query}"
                            },
                            "required": true,
                            "description": "A map that contains customer information data. See this page for options: https://business-api.tiktok.com/portal/docs?id=1771101151059969#item-link-properties%20parameters"
                        },
                        {
                            "key": "pageProperties",
                            "type": "dictionary",
                            "label": "Page properties",
                            "secret": false,
                            "default": {
                                "url": "{event.properties.$current_url}",
                                "referrer": "{event.properties.$referrer}"
                            },
                            "required": true,
                            "description": "A map that contains page information data. See this page for options: https://business-api.tiktok.com/portal/docs?id=1771101151059969#item-link-page%20parameters"
                        }
                    ]
                },
                {
                    "name": "Order Completed",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": "Order Completed",
                                "type": "events"
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "eventName",
                            "type": "string",
                            "label": "Event name",
                            "secret": false,
                            "default": "CompletePayment",
                            "required": true,
                            "description": "A standard event or custom event name."
                        },
                        {
                            "key": "eventId",
                            "type": "string",
                            "label": "Event ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": true,
                            "description": "The ID of the event."
                        },
                        {
                            "key": "eventTimestamp",
                            "type": "string",
                            "label": "Event timestamp",
                            "secret": false,
                            "default": "{toUnixTimestamp(event.timestamp)}",
                            "required": true,
                            "description": "A Unix timestamp in seconds indicating when the actual event occurred."
                        },
                        {
                            "key": "propertyProperties",
                            "type": "dictionary",
                            "label": "Property properties",
                            "secret": false,
                            "default": {
                                "value": "{toFloat(event.properties.value ?? event.properties.revenue ?? event.properties.price)}",
                                "shop_id": "{event.properties.shop_id}",
                                "contents": "{arrayMap(x -> ({'price': x.price, 'content_id': x.sku, 'content_category': x.category, 'content_name': x.name, 'brand': x.brand}), event.properties.products ?? [])}",
                                "currency": "{event.properties.currency ?? 'USD'}",
                                "order_id": "{event.properties.order_id}",
                                "num_items": "{arrayReduce((acc, curr) -> acc + curr.quantity, event.properties.products ?? [], 0)}",
                                "content_ids": "{arrayMap(x -> x.sku, event.properties.products ?? [])}",
                                "description": "",
                                "content_type": "product",
                                "search_string": "{event.properties.query}"
                            },
                            "required": true,
                            "description": "A map that contains customer information data. See this page for options: https://business-api.tiktok.com/portal/docs?id=1771101151059969#item-link-properties%20parameters"
                        },
                        {
                            "key": "pageProperties",
                            "type": "dictionary",
                            "label": "Page properties",
                            "secret": false,
                            "default": {
                                "url": "{event.properties.$current_url}",
                                "referrer": "{event.properties.$referrer}"
                            },
                            "required": true,
                            "description": "A map that contains page information data. See this page for options: https://business-api.tiktok.com/portal/docs?id=1771101151059969#item-link-page%20parameters"
                        }
                    ]
                },
                {
                    "name": "Products Searched",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": "Products Searched",
                                "type": "events"
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "eventName",
                            "type": "string",
                            "label": "Event name",
                            "secret": false,
                            "default": "Search",
                            "required": true,
                            "description": "A standard event or custom event name."
                        },
                        {
                            "key": "eventId",
                            "type": "string",
                            "label": "Event ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": true,
                            "description": "The ID of the event."
                        },
                        {
                            "key": "eventTimestamp",
                            "type": "string",
                            "label": "Event timestamp",
                            "secret": false,
                            "default": "{toUnixTimestamp(event.timestamp)}",
                            "required": true,
                            "description": "A Unix timestamp in seconds indicating when the actual event occurred."
                        },
                        {
                            "key": "propertyProperties",
                            "type": "dictionary",
                            "label": "Property properties",
                            "secret": false,
                            "default": {
                                "value": "{toFloat(event.properties.value ?? event.properties.revenue ?? event.properties.price)}",
                                "shop_id": "{event.properties.shop_id}",
                                "contents": "{(not empty(event.properties.sku) and not empty(event.properties.price) and not empty(event.properties.category) and not empty(event.properties.name) and not empty(event.properties.brand) ? [{'price': event.properties.price, 'content_id': event.properties.sku, 'content_category': event.properties.category, 'content_name': event.properties.name, 'brand': event.properties.brand}] : [])}",
                                "currency": "{event.properties.currency ?? 'USD'}",
                                "order_id": "{event.properties.order_id}",
                                "num_items": "{event.properties.quantity}",
                                "content_ids": "{not empty(event.properties.sku) ? [event.properties.sku] : []}",
                                "description": "",
                                "content_type": "product",
                                "search_string": "{event.properties.query}"
                            },
                            "required": true,
                            "description": "A map that contains customer information data. See this page for options: https://business-api.tiktok.com/portal/docs?id=1771101151059969#item-link-properties%20parameters"
                        },
                        {
                            "key": "pageProperties",
                            "type": "dictionary",
                            "label": "Page properties",
                            "secret": false,
                            "default": {
                                "url": "{event.properties.$current_url}",
                                "referrer": "{event.properties.$referrer}"
                            },
                            "required": true,
                            "description": "A map that contains page information data. See this page for options: https://business-api.tiktok.com/portal/docs?id=1771101151059969#item-link-page%20parameters"
                        }
                    ]
                },
                {
                    "name": "Product Viewed",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": "Product Viewed",
                                "type": "events"
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "eventName",
                            "type": "string",
                            "label": "Event name",
                            "secret": false,
                            "default": "ViewContent",
                            "required": true,
                            "description": "A standard event or custom event name."
                        },
                        {
                            "key": "eventId",
                            "type": "string",
                            "label": "Event ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": true,
                            "description": "The ID of the event."
                        },
                        {
                            "key": "eventTimestamp",
                            "type": "string",
                            "label": "Event timestamp",
                            "secret": false,
                            "default": "{toUnixTimestamp(event.timestamp)}",
                            "required": true,
                            "description": "A Unix timestamp in seconds indicating when the actual event occurred."
                        },
                        {
                            "key": "propertyProperties",
                            "type": "dictionary",
                            "label": "Property properties",
                            "secret": false,
                            "default": {
                                "value": "{toFloat(event.properties.value ?? event.properties.revenue ?? event.properties.price)}",
                                "shop_id": "{event.properties.shop_id}",
                                "contents": "{(not empty(event.properties.sku) and not empty(event.properties.price) and not empty(event.properties.category) and not empty(event.properties.name) and not empty(event.properties.brand) ? [{'price': event.properties.price, 'content_id': event.properties.sku, 'content_category': event.properties.category, 'content_name': event.properties.name, 'brand': event.properties.brand}] : [])}",
                                "currency": "{event.properties.currency ?? 'USD'}",
                                "order_id": "{event.properties.order_id}",
                                "num_items": "{event.properties.quantity}",
                                "content_ids": "{not empty(event.properties.sku) ? [event.properties.sku] : []}",
                                "description": "",
                                "content_type": "product",
                                "search_string": "{event.properties.query}"
                            },
                            "required": true,
                            "description": "A map that contains customer information data. See this page for options: https://business-api.tiktok.com/portal/docs?id=1771101151059969#item-link-properties%20parameters"
                        },
                        {
                            "key": "pageProperties",
                            "type": "dictionary",
                            "label": "Page properties",
                            "secret": false,
                            "default": {
                                "url": "{event.properties.$current_url}",
                                "referrer": "{event.properties.$referrer}"
                            },
                            "required": true,
                            "description": "A map that contains page information data. See this page for options: https://business-api.tiktok.com/portal/docs?id=1771101151059969#item-link-page%20parameters"
                        }
                    ]
                }
            ],
            "mappings": null,
            "status": "alpha",
            "free": false,
            "type": "destination",
            "id": "template-tiktok-ads",
            "name": "TikTok Ads Conversions",
            "hog": "if (empty(inputs.pixelId) or empty(inputs.accessToken)) {\n    throw Error('Pixel ID and access token are required')\n}\n\nlet body := {\n    'event_source': 'web',\n    'event_source_id': inputs.pixelId,\n    'data': [\n        {\n            'event': inputs.eventName,\n            'event_time': inputs.eventTimestamp,\n            'event_id': inputs.eventId,\n            'user': {},\n            'properties': {},\n            'page': {}\n        }\n    ]\n}\n\nif (not empty(inputs.testEventCode)) {\n    body.test_event_code := inputs.testEventCode\n}\n\nfor (let key, value in inputs.userProperties) {\n    if (not empty(value) or value == '') {\n        body.data.1.user[key] := value\n    }\n}\n\nfor (let key, value in inputs.propertyProperties) {\n    if (not empty(value)) {\n        body.data.1.properties[key] := value\n    }\n}\n\nfor (let key, value in inputs.pageProperties) {\n    if (not empty(value)) {\n        body.data.1.page[key] := value\n    }\n}\n\nlet res := fetch(f'https://business-api.tiktok.com/open_api/v1.3/event/track/', {\n    'method': 'POST',\n    'headers': {\n        'Content-Type': 'application/json',\n        'Access-Token': inputs.accessToken\n    },\n    'body': body\n})\nif (res.status >= 400) {\n    throw Error(f'Error from business-api.tiktok.com (status {res.status}): {res.body}')\n}",
            "inputs_schema": [
                {
                    "key": "accessToken",
                    "type": "string",
                    "label": "Access token",
                    "secret": true,
                    "required": true,
                    "description": "Check out this page on how to obtain such a token: https://business-api.tiktok.com/portal/docs?id=1771101027431425"
                },
                {
                    "key": "pixelId",
                    "type": "string",
                    "label": "Pixel ID",
                    "secret": false,
                    "required": true,
                    "description": "You must obtain a Pixel ID to use the Conversions API. If you've already set up a Pixel for your website, we recommend that you use the same Pixel ID for your browser and server events."
                },
                {
                    "key": "userProperties",
                    "type": "dictionary",
                    "label": "User properties",
                    "secret": false,
                    "default": {
                        "ip": "{event.properties.$ip}",
                        "city": "{not empty(person.properties.$geoip_city_name) ? replaceAll(lower(person.properties.$geoip_city_name), ' ', '') : null}",
                        "email": "{not empty(person.properties.email) ? sha256Hex(lower(person.properties.email)) : ''}",
                        "phone": "{not empty(person.properties.phone) ? sha256Hex(person.properties.phone) : ''}",
                        "state": "{lower(person.properties.$geoip_subdivision_1_code)}",
                        "ttclid": "{person.properties.ttclid ?? person.properties.$initial_ttclid}",
                        "country": "{lower(person.properties.$geoip_country_code)}",
                        "zip_code": "{not empty (person.properties.$geoip_postal_code) ? sha256Hex(replaceAll(lower(person.properties.$geoip_postal_code), ' ', '')) : null}",
                        "last_name": "{not empty(person.properties.last_name) ? sha256Hex(lower(person.properties.last_name)) : ''}",
                        "first_name": "{not empty(person.properties.first_name) ? sha256Hex(lower(person.properties.first_name)) : ''}",
                        "user_agent": "{event.properties.$raw_user_agent}",
                        "external_id": "{not empty(person.id) ? sha256Hex(person.id) : ''}"
                    },
                    "required": true,
                    "description": "A map that contains customer information data. See this page for options: https://business-api.tiktok.com/portal/docs?id=1771101151059969#item-link-user%20parameters"
                },
                {
                    "key": "testEventCode",
                    "type": "string",
                    "label": "Test Event Code",
                    "secret": false,
                    "default": "",
                    "required": false,
                    "description": "Use this field to specify that events should be test events rather than actual traffic. You'll want to remove your Test Event Code when sending real traffic through this integration."
                }
            ],
            "category": ["Advertisement"],
            "code_language": "hog",
            "description": "Send conversion events to TikTok Ads",
            "filters": null,
            "masking": null,
            "icon_url": "/static/services/tiktok.png"
        },
        {
            "mapping_templates": [
                {
                    "name": "Page Viewed",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": "$pageview",
                                "name": "Pageview",
                                "type": "events"
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "eventType",
                            "type": "string",
                            "label": "Event Type",
                            "default": "Pageview",
                            "required": true,
                            "description": "Check out this page for possible event types: https://business-api.tiktok.com/portal/docs?id=1739585702922241#item-link-Event%20codes"
                        },
                        {
                            "key": "eventProperties",
                            "type": "dictionary",
                            "label": "Event parameters",
                            "secret": false,
                            "default": {
                                "value": "{toFloat(event.properties.value ?? event.properties.revenue ?? event.properties.price)}",
                                "contents": "{[{ 'content_id': event.properties.product_id, 'price': event.properties.price, 'content_category': event.properties.category, 'content_name': event.properties.name, 'brand': event.properties.brand, 'quantity': event.properties.quantity }]}",
                                "currency": "{event.properties.currency ?? 'USD'}",
                                "num_items": "{event.properties.quantity}",
                                "content_ids": "{event.properties.product_id ? [event.properties.product_id] : null}",
                                "description": "",
                                "search_string": "{event.properties.query}"
                            },
                            "required": false,
                            "description": "Map of TikTok event attributes and their values. Check out this page for more details: https://business-api.tiktok.com/portal/docs?id=1739585702922241#item-link-Parameters"
                        },
                        {
                            "key": "contentType",
                            "type": "choice",
                            "label": "Content Type",
                            "secret": false,
                            "choices": [
                                {
                                    "label": "Product",
                                    "value": "product"
                                },
                                {
                                    "label": "Product Group",
                                    "value": "product_group"
                                }
                            ],
                            "default": "product",
                            "required": true,
                            "description": "Type of the product item. When the content_id in the Contents field is specified as a sku_id, set this field to product. When the content_id in the Contents field is specified as an item_group_id, set this field to product_group."
                        },
                        {
                            "key": "eventId",
                            "type": "string",
                            "label": "Event ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": true,
                            "description": "The ID of the event. This will be used for deduplication. Check out this page for more details: https://business-api.tiktok.com/portal/docs?id=1771100965992450"
                        }
                    ]
                },
                {
                    "name": "Order Completed",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": "Order Completed",
                                "type": "events"
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "eventType",
                            "type": "string",
                            "label": "Event Type",
                            "default": "CompletePayment",
                            "required": true,
                            "description": "Check out this page for possible event types: https://business-api.tiktok.com/portal/docs?id=1739585702922241#item-link-Event%20codes"
                        },
                        {
                            "key": "eventProperties",
                            "type": "dictionary",
                            "label": "Event parameters",
                            "secret": false,
                            "default": {
                                "value": "{toFloat(event.properties.value ?? event.properties.revenue ?? event.properties.price)}",
                                "contents": "{arrayMap(product -> ({ 'content_id': product.product_id, 'price': product.price, 'content_category': product.category, 'content_name': product.name, 'brand': product.brand, 'quantity': product.quantity }), event.properties.products ?? [])}",
                                "currency": "{event.properties.currency ?? 'USD'}",
                                "num_items": "{arrayReduce((acc, curr) -> acc + curr.quantity, event.properties.products ?? [], 0)}",
                                "content_ids": "{arrayMap(product -> product.product_id, event.properties.products ?? [])}",
                                "description": "",
                                "search_string": "{event.properties.query}"
                            },
                            "required": false,
                            "description": "Map of TikTok event attributes and their values. Check out this page for more details: https://business-api.tiktok.com/portal/docs?id=1739585702922241#item-link-Parameters"
                        },
                        {
                            "key": "contentType",
                            "type": "choice",
                            "label": "Content Type",
                            "secret": false,
                            "choices": [
                                {
                                    "label": "Product",
                                    "value": "product"
                                },
                                {
                                    "label": "Product Group",
                                    "value": "product_group"
                                }
                            ],
                            "default": "product_group",
                            "required": true,
                            "description": "Type of the product item. When the content_id in the Contents field is specified as a sku_id, set this field to product. When the content_id in the Contents field is specified as an item_group_id, set this field to product_group."
                        },
                        {
                            "key": "eventId",
                            "type": "string",
                            "label": "Event ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": true,
                            "description": "The ID of the event. This will be used for deduplication. Check out this page for more details: https://business-api.tiktok.com/portal/docs?id=1771100965992450"
                        }
                    ]
                },
                {
                    "name": "Product Viewed",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": "Product Viewed",
                                "type": "events"
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "eventType",
                            "type": "string",
                            "label": "Event Type",
                            "default": "ViewContent",
                            "required": true,
                            "description": "Check out this page for possible event types: https://business-api.tiktok.com/portal/docs?id=1739585702922241#item-link-Event%20codes"
                        },
                        {
                            "key": "eventProperties",
                            "type": "dictionary",
                            "label": "Event parameters",
                            "secret": false,
                            "default": {
                                "value": "{toFloat(event.properties.value ?? event.properties.revenue ?? event.properties.price)}",
                                "contents": "{[{ 'content_id': event.properties.product_id, 'price': event.properties.price, 'content_category': event.properties.category, 'content_name': event.properties.name, 'brand': event.properties.brand, 'quantity': event.properties.quantity }]}",
                                "currency": "{event.properties.currency ?? 'USD'}",
                                "num_items": "{event.properties.quantity}",
                                "content_ids": "{event.properties.product_id ? [event.properties.product_id] : null}",
                                "description": "",
                                "search_string": "{event.properties.query}"
                            },
                            "required": false,
                            "description": "Map of TikTok event attributes and their values. Check out this page for more details: https://business-api.tiktok.com/portal/docs?id=1739585702922241#item-link-Parameters"
                        },
                        {
                            "key": "contentType",
                            "type": "choice",
                            "label": "Content Type",
                            "secret": false,
                            "choices": [
                                {
                                    "label": "Product",
                                    "value": "product"
                                },
                                {
                                    "label": "Product Group",
                                    "value": "product_group"
                                }
                            ],
                            "default": "product",
                            "required": true,
                            "description": "Type of the product item. When the content_id in the Contents field is specified as a sku_id, set this field to product. When the content_id in the Contents field is specified as an item_group_id, set this field to product_group."
                        },
                        {
                            "key": "eventId",
                            "type": "string",
                            "label": "Event ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": true,
                            "description": "The ID of the event. This will be used for deduplication. Check out this page for more details: https://business-api.tiktok.com/portal/docs?id=1771100965992450"
                        }
                    ]
                },
                {
                    "name": "Product Clicked",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": "Product Clicked",
                                "type": "events"
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "eventType",
                            "type": "string",
                            "label": "Event Type",
                            "default": "ClickButton",
                            "required": true,
                            "description": "Check out this page for possible event types: https://business-api.tiktok.com/portal/docs?id=1739585702922241#item-link-Event%20codes"
                        },
                        {
                            "key": "eventProperties",
                            "type": "dictionary",
                            "label": "Event parameters",
                            "secret": false,
                            "default": {
                                "value": "{toFloat(event.properties.value ?? event.properties.revenue ?? event.properties.price)}",
                                "contents": "{[{ 'content_id': event.properties.product_id, 'price': event.properties.price, 'content_category': event.properties.category, 'content_name': event.properties.name, 'brand': event.properties.brand, 'quantity': event.properties.quantity }]}",
                                "currency": "{event.properties.currency ?? 'USD'}",
                                "num_items": "{event.properties.quantity}",
                                "content_ids": "{event.properties.product_id ? [event.properties.product_id] : null}",
                                "description": "",
                                "search_string": "{event.properties.query}"
                            },
                            "required": false,
                            "description": "Map of TikTok event attributes and their values. Check out this page for more details: https://business-api.tiktok.com/portal/docs?id=1739585702922241#item-link-Parameters"
                        },
                        {
                            "key": "contentType",
                            "type": "choice",
                            "label": "Content Type",
                            "secret": false,
                            "choices": [
                                {
                                    "label": "Product",
                                    "value": "product"
                                },
                                {
                                    "label": "Product Group",
                                    "value": "product_group"
                                }
                            ],
                            "default": "product",
                            "required": true,
                            "description": "Type of the product item. When the content_id in the Contents field is specified as a sku_id, set this field to product. When the content_id in the Contents field is specified as an item_group_id, set this field to product_group."
                        },
                        {
                            "key": "eventId",
                            "type": "string",
                            "label": "Event ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": true,
                            "description": "The ID of the event. This will be used for deduplication. Check out this page for more details: https://business-api.tiktok.com/portal/docs?id=1771100965992450"
                        }
                    ]
                },
                {
                    "name": "Products Searched",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": "Products Searched",
                                "type": "events"
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "eventType",
                            "type": "string",
                            "label": "Event Type",
                            "default": "Search",
                            "required": true,
                            "description": "Check out this page for possible event types: https://business-api.tiktok.com/portal/docs?id=1739585702922241#item-link-Event%20codes"
                        },
                        {
                            "key": "eventProperties",
                            "type": "dictionary",
                            "label": "Event parameters",
                            "secret": false,
                            "default": {
                                "value": "{toFloat(event.properties.value ?? event.properties.revenue ?? event.properties.price)}",
                                "contents": "{[{ 'content_id': event.properties.product_id, 'price': event.properties.price, 'content_category': event.properties.category, 'content_name': event.properties.name, 'brand': event.properties.brand, 'quantity': event.properties.quantity }]}",
                                "currency": "{event.properties.currency ?? 'USD'}",
                                "num_items": "{event.properties.quantity}",
                                "content_ids": "{event.properties.product_id ? [event.properties.product_id] : null}",
                                "description": "",
                                "search_string": "{event.properties.query}"
                            },
                            "required": false,
                            "description": "Map of TikTok event attributes and their values. Check out this page for more details: https://business-api.tiktok.com/portal/docs?id=1739585702922241#item-link-Parameters"
                        },
                        {
                            "key": "contentType",
                            "type": "choice",
                            "label": "Content Type",
                            "secret": false,
                            "choices": [
                                {
                                    "label": "Product",
                                    "value": "product"
                                },
                                {
                                    "label": "Product Group",
                                    "value": "product_group"
                                }
                            ],
                            "default": "product",
                            "required": true,
                            "description": "Type of the product item. When the content_id in the Contents field is specified as a sku_id, set this field to product. When the content_id in the Contents field is specified as an item_group_id, set this field to product_group."
                        },
                        {
                            "key": "eventId",
                            "type": "string",
                            "label": "Event ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": true,
                            "description": "The ID of the event. This will be used for deduplication. Check out this page for more details: https://business-api.tiktok.com/portal/docs?id=1771100965992450"
                        }
                    ]
                },
                {
                    "name": "Add to Wishlist",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": "Add to Wishlist",
                                "type": "events"
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "eventType",
                            "type": "string",
                            "label": "Event Type",
                            "default": "AddToWishlist",
                            "required": true,
                            "description": "Check out this page for possible event types: https://business-api.tiktok.com/portal/docs?id=1739585702922241#item-link-Event%20codes"
                        },
                        {
                            "key": "eventProperties",
                            "type": "dictionary",
                            "label": "Event parameters",
                            "secret": false,
                            "default": {
                                "value": "{toFloat(event.properties.value ?? event.properties.revenue ?? event.properties.price)}",
                                "contents": "{[{ 'content_id': event.properties.product_id, 'price': event.properties.price, 'content_category': event.properties.category, 'content_name': event.properties.name, 'brand': event.properties.brand, 'quantity': event.properties.quantity }]}",
                                "currency": "{event.properties.currency ?? 'USD'}",
                                "num_items": "{event.properties.quantity}",
                                "content_ids": "{event.properties.product_id ? [event.properties.product_id] : null}",
                                "description": "",
                                "search_string": "{event.properties.query}"
                            },
                            "required": false,
                            "description": "Map of TikTok event attributes and their values. Check out this page for more details: https://business-api.tiktok.com/portal/docs?id=1739585702922241#item-link-Parameters"
                        },
                        {
                            "key": "contentType",
                            "type": "choice",
                            "label": "Content Type",
                            "secret": false,
                            "choices": [
                                {
                                    "label": "Product",
                                    "value": "product"
                                },
                                {
                                    "label": "Product Group",
                                    "value": "product_group"
                                }
                            ],
                            "default": "product",
                            "required": true,
                            "description": "Type of the product item. When the content_id in the Contents field is specified as a sku_id, set this field to product. When the content_id in the Contents field is specified as an item_group_id, set this field to product_group."
                        },
                        {
                            "key": "eventId",
                            "type": "string",
                            "label": "Event ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": true,
                            "description": "The ID of the event. This will be used for deduplication. Check out this page for more details: https://business-api.tiktok.com/portal/docs?id=1771100965992450"
                        }
                    ]
                },
                {
                    "name": "Product Added",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": "Product Added",
                                "type": "events"
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "eventType",
                            "type": "string",
                            "label": "Event Type",
                            "default": "AddToCart",
                            "required": true,
                            "description": "Check out this page for possible event types: https://business-api.tiktok.com/portal/docs?id=1739585702922241#item-link-Event%20codes"
                        },
                        {
                            "key": "eventProperties",
                            "type": "dictionary",
                            "label": "Event parameters",
                            "secret": false,
                            "default": {
                                "value": "{toFloat(event.properties.value ?? event.properties.revenue ?? event.properties.price)}",
                                "contents": "{[{ 'content_id': event.properties.product_id, 'price': event.properties.price, 'content_category': event.properties.category, 'content_name': event.properties.name, 'brand': event.properties.brand, 'quantity': event.properties.quantity }]}",
                                "currency": "{event.properties.currency ?? 'USD'}",
                                "num_items": "{event.properties.quantity}",
                                "content_ids": "{event.properties.product_id ? [event.properties.product_id] : null}",
                                "description": "",
                                "search_string": "{event.properties.query}"
                            },
                            "required": false,
                            "description": "Map of TikTok event attributes and their values. Check out this page for more details: https://business-api.tiktok.com/portal/docs?id=1739585702922241#item-link-Parameters"
                        },
                        {
                            "key": "contentType",
                            "type": "choice",
                            "label": "Content Type",
                            "secret": false,
                            "choices": [
                                {
                                    "label": "Product",
                                    "value": "product"
                                },
                                {
                                    "label": "Product Group",
                                    "value": "product_group"
                                }
                            ],
                            "default": "product",
                            "required": true,
                            "description": "Type of the product item. When the content_id in the Contents field is specified as a sku_id, set this field to product. When the content_id in the Contents field is specified as an item_group_id, set this field to product_group."
                        },
                        {
                            "key": "eventId",
                            "type": "string",
                            "label": "Event ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": true,
                            "description": "The ID of the event. This will be used for deduplication. Check out this page for more details: https://business-api.tiktok.com/portal/docs?id=1771100965992450"
                        }
                    ]
                },
                {
                    "name": "Checkout Started",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": "Checkout Started",
                                "type": "events"
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "eventType",
                            "type": "string",
                            "label": "Event Type",
                            "default": "InitiateCheckout",
                            "required": true,
                            "description": "Check out this page for possible event types: https://business-api.tiktok.com/portal/docs?id=1739585702922241#item-link-Event%20codes"
                        },
                        {
                            "key": "eventProperties",
                            "type": "dictionary",
                            "label": "Event parameters",
                            "secret": false,
                            "default": {
                                "value": "{toFloat(event.properties.value ?? event.properties.revenue ?? event.properties.price)}",
                                "contents": "{arrayMap(product -> ({ 'content_id': product.product_id, 'price': product.price, 'content_category': product.category, 'content_name': product.name, 'brand': product.brand, 'quantity': product.quantity }), event.properties.products ?? [])}",
                                "currency": "{event.properties.currency ?? 'USD'}",
                                "num_items": "{arrayReduce((acc, curr) -> acc + curr.quantity, event.properties.products ?? [], 0)}",
                                "content_ids": "{arrayMap(product -> product.product_id, event.properties.products ?? [])}",
                                "description": "",
                                "search_string": "{event.properties.query}"
                            },
                            "required": false,
                            "description": "Map of TikTok event attributes and their values. Check out this page for more details: https://business-api.tiktok.com/portal/docs?id=1739585702922241#item-link-Parameters"
                        },
                        {
                            "key": "contentType",
                            "type": "choice",
                            "label": "Content Type",
                            "secret": false,
                            "choices": [
                                {
                                    "label": "Product",
                                    "value": "product"
                                },
                                {
                                    "label": "Product Group",
                                    "value": "product_group"
                                }
                            ],
                            "default": "product_group",
                            "required": true,
                            "description": "Type of the product item. When the content_id in the Contents field is specified as a sku_id, set this field to product. When the content_id in the Contents field is specified as an item_group_id, set this field to product_group."
                        },
                        {
                            "key": "eventId",
                            "type": "string",
                            "label": "Event ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": true,
                            "description": "The ID of the event. This will be used for deduplication. Check out this page for more details: https://business-api.tiktok.com/portal/docs?id=1771100965992450"
                        }
                    ]
                },
                {
                    "name": "Add Payment Info",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": "Add Payment Info",
                                "type": "events"
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "eventType",
                            "type": "string",
                            "label": "Event Type",
                            "default": "AddPaymentInfo",
                            "required": true,
                            "description": "Check out this page for possible event types: https://business-api.tiktok.com/portal/docs?id=1739585702922241#item-link-Event%20codes"
                        },
                        {
                            "key": "eventProperties",
                            "type": "dictionary",
                            "label": "Event parameters",
                            "secret": false,
                            "default": {
                                "value": "{toFloat(event.properties.value ?? event.properties.revenue ?? event.properties.price)}",
                                "contents": "{arrayMap(product -> ({ 'content_id': product.product_id, 'price': product.price, 'content_category': product.category, 'content_name': product.name, 'brand': product.brand, 'quantity': product.quantity }), event.properties.products ?? [])}",
                                "currency": "{event.properties.currency ?? 'USD'}",
                                "num_items": "{arrayReduce((acc, curr) -> acc + curr.quantity, event.properties.products ?? [], 0)}",
                                "content_ids": "{arrayMap(product -> product.product_id, event.properties.products ?? [])}",
                                "description": "",
                                "search_string": "{event.properties.query}"
                            },
                            "required": false,
                            "description": "Map of TikTok event attributes and their values. Check out this page for more details: https://business-api.tiktok.com/portal/docs?id=1739585702922241#item-link-Parameters"
                        },
                        {
                            "key": "contentType",
                            "type": "choice",
                            "label": "Content Type",
                            "secret": false,
                            "choices": [
                                {
                                    "label": "Product",
                                    "value": "product"
                                },
                                {
                                    "label": "Product Group",
                                    "value": "product_group"
                                }
                            ],
                            "default": "product_group",
                            "required": true,
                            "description": "Type of the product item. When the content_id in the Contents field is specified as a sku_id, set this field to product. When the content_id in the Contents field is specified as an item_group_id, set this field to product_group."
                        },
                        {
                            "key": "eventId",
                            "type": "string",
                            "label": "Event ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": true,
                            "description": "The ID of the event. This will be used for deduplication. Check out this page for more details: https://business-api.tiktok.com/portal/docs?id=1771100965992450"
                        }
                    ]
                },
                {
                    "name": "Order Placed",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": "Order Placed",
                                "type": "events"
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "eventType",
                            "type": "string",
                            "label": "Event Type",
                            "default": "PlaceAnOrder",
                            "required": true,
                            "description": "Check out this page for possible event types: https://business-api.tiktok.com/portal/docs?id=1739585702922241#item-link-Event%20codes"
                        },
                        {
                            "key": "eventProperties",
                            "type": "dictionary",
                            "label": "Event parameters",
                            "secret": false,
                            "default": {
                                "value": "{toFloat(event.properties.value ?? event.properties.revenue ?? event.properties.price)}",
                                "contents": "{arrayMap(product -> ({ 'content_id': product.product_id, 'price': product.price, 'content_category': product.category, 'content_name': product.name, 'brand': product.brand, 'quantity': product.quantity }), event.properties.products ?? [])}",
                                "currency": "{event.properties.currency ?? 'USD'}",
                                "num_items": "{arrayReduce((acc, curr) -> acc + curr.quantity, event.properties.products ?? [], 0)}",
                                "content_ids": "{arrayMap(product -> product.product_id, event.properties.products ?? [])}",
                                "description": "",
                                "search_string": "{event.properties.query}"
                            },
                            "required": false,
                            "description": "Map of TikTok event attributes and their values. Check out this page for more details: https://business-api.tiktok.com/portal/docs?id=1739585702922241#item-link-Parameters"
                        },
                        {
                            "key": "contentType",
                            "type": "choice",
                            "label": "Content Type",
                            "secret": false,
                            "choices": [
                                {
                                    "label": "Product",
                                    "value": "product"
                                },
                                {
                                    "label": "Product Group",
                                    "value": "product_group"
                                }
                            ],
                            "default": "product_group",
                            "required": true,
                            "description": "Type of the product item. When the content_id in the Contents field is specified as a sku_id, set this field to product. When the content_id in the Contents field is specified as an item_group_id, set this field to product_group."
                        },
                        {
                            "key": "eventId",
                            "type": "string",
                            "label": "Event ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": true,
                            "description": "The ID of the event. This will be used for deduplication. Check out this page for more details: https://business-api.tiktok.com/portal/docs?id=1771100965992450"
                        }
                    ]
                },
                {
                    "name": "Signed Up",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": "Signed Up",
                                "type": "events"
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "eventType",
                            "type": "string",
                            "label": "Event Type",
                            "default": "CompleteRegistration",
                            "required": true,
                            "description": "Check out this page for possible event types: https://business-api.tiktok.com/portal/docs?id=1739585702922241#item-link-Event%20codes"
                        },
                        {
                            "key": "eventProperties",
                            "type": "dictionary",
                            "label": "Event parameters",
                            "secret": false,
                            "default": {
                                "value": "{toFloat(event.properties.value ?? event.properties.revenue ?? event.properties.price)}",
                                "contents": "{arrayMap(product -> ({ 'content_id': product.product_id, 'price': product.price, 'content_category': product.category, 'content_name': product.name, 'brand': product.brand, 'quantity': product.quantity }), event.properties.products ?? [])}",
                                "currency": "{event.properties.currency ?? 'USD'}",
                                "num_items": "{arrayReduce((acc, curr) -> acc + curr.quantity, event.properties.products ?? [], 0)}",
                                "content_ids": "{arrayMap(product -> product.product_id, event.properties.products ?? [])}",
                                "description": "",
                                "search_string": "{event.properties.query}"
                            },
                            "required": false,
                            "description": "Map of TikTok event attributes and their values. Check out this page for more details: https://business-api.tiktok.com/portal/docs?id=1739585702922241#item-link-Parameters"
                        },
                        {
                            "key": "contentType",
                            "type": "choice",
                            "label": "Content Type",
                            "secret": false,
                            "choices": [
                                {
                                    "label": "Product",
                                    "value": "product"
                                },
                                {
                                    "label": "Product Group",
                                    "value": "product_group"
                                }
                            ],
                            "default": "product_group",
                            "required": true,
                            "description": "Type of the product item. When the content_id in the Contents field is specified as a sku_id, set this field to product. When the content_id in the Contents field is specified as an item_group_id, set this field to product_group."
                        },
                        {
                            "key": "eventId",
                            "type": "string",
                            "label": "Event ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": true,
                            "description": "The ID of the event. This will be used for deduplication. Check out this page for more details: https://business-api.tiktok.com/portal/docs?id=1771100965992450"
                        }
                    ]
                }
            ],
            "mappings": null,
            "status": "alpha",
            "free": false,
            "type": "site_destination",
            "id": "template-tiktok-pixel",
            "name": "TikTok Pixel",
            "hog": "// Adds window.snaptr and lazily loads the TikTok Pixel script\nfunction initSnippet() {\n    !function (w, d, t) {\n    w.TiktokAnalyticsObject=t;var ttq=w[t]=w[t]||[];ttq.methods=[\"page\",\"track\",\"identify\",\"instances\",\"debug\",\"on\",\"off\",\"once\",\"ready\",\"alias\",\"group\",\"enableCookie\",\"disableCookie\",\"holdConsent\",\"revokeConsent\",\"grantConsent\"],ttq.setAndDefer=function(t,e){t[e]=function(){t.push([e].concat(Array.prototype.slice.call(arguments,0)))}};for(var i=0;i<ttq.methods.length;i++)ttq.setAndDefer(ttq,ttq.methods[i]);ttq.instance=function(t){for(\n    var e=ttq._i[t]||[],n=0;n<ttq.methods.length;n++)ttq.setAndDefer(e,ttq.methods[n]);return e},ttq.load=function(e,n){var r=\"https://analytics.tiktok.com/i18n/pixel/events.js\",o=n&&n.partner;ttq._i=ttq._i||{},ttq._i[e]=[],ttq._i[e]._u=r,ttq._t=ttq._t||{},ttq._t[e]=+new Date,ttq._o=ttq._o||{},ttq._o[e]=n||{};n=document.createElement(\"script\")\n    ;n.type=\"text/javascript\",n.async=!0,n.src=r+\"?sdkid=\"+e+\"&lib=\"+t;e=document.getElementsByTagName(\"script\")[0];e.parentNode.insertBefore(n,e)};\n    }(window, document, 'ttq')\n}\n\nexport function onLoad({ inputs }) {\n    initSnippet();\n    ttq.load(inputs.pixelId);\n\n    let userProperties = {};\n    for (const [key, value] of Object.entries(inputs.userProperties)) {\n        if (value || value === '') {\n            userProperties[key] = value;\n        }\n    };\n    ttq.instance(inputs.pixelId).identify(userProperties);\n}\nexport function onEvent({ inputs }) {\n    let eventProperties = {};\n\n    for (const [key, value] of Object.entries(inputs.eventProperties)) {\n        if (value !== undefined) {\n            eventProperties[key] = value;\n        }\n    };\n\n    if (inputs.contentType !== undefined) {\n        eventProperties.content_type = inputs.contentType;\n    }\n\n    ttq.instance(inputs.pixelId).track(\n        inputs.eventType,\n        eventProperties,\n        {\n            event_id: inputs.eventId\n        }\n    );\n}",
            "inputs_schema": [
                {
                    "key": "pixelId",
                    "type": "string",
                    "label": "Pixel ID",
                    "secret": false,
                    "default": "",
                    "required": true,
                    "description": "You must obtain a Pixel ID to use the TikTok Pixel. If you've already set up a Pixel for your website, we recommend that you use the same Pixel ID for your browser and server events."
                },
                {
                    "key": "userProperties",
                    "type": "dictionary",
                    "label": "User parameters",
                    "secret": false,
                    "default": {
                        "ip": "{event.properties.$ip}",
                        "city": "{not empty(person.properties.$geoip_city_name) ? replaceAll(lower(person.properties.$geoip_city_name), ' ', '') : null}",
                        "email": "{not empty(person.properties.email) ? sha256Hex(lower(person.properties.email)) : ''}",
                        "phone": "{not empty(person.properties.phone) ? sha256Hex(person.properties.phone) : ''}",
                        "state": "{lower(person.properties.$geoip_subdivision_1_code)}",
                        "ttclid": "{person.properties.ttclid ?? person.properties.$initial_ttclid}",
                        "country": "{lower(person.properties.$geoip_country_code)}",
                        "zip_code": "{not empty (person.properties.$geoip_postal_code) ? sha256Hex(replaceAll(lower(person.properties.$geoip_postal_code), ' ', '')) : null}",
                        "last_name": "{not empty(person.properties.last_name) ? sha256Hex(lower(person.properties.last_name)) : ''}",
                        "first_name": "{not empty(person.properties.first_name) ? sha256Hex(lower(person.properties.first_name)) : ''}",
                        "user_agent": "{event.properties.$raw_user_agent}",
                        "external_id": "{not empty(person.id) ? sha256Hex(person.id) : ''}"
                    },
                    "required": false,
                    "description": "Map of TikTok user parameters and their values. Check out this page for more details: https://business-api.tiktok.com/portal/docs?id=1739585700402178#item-link-Identity%20information%20supported"
                }
            ],
            "category": ["Advertisement"],
            "code_language": "javascript",
            "description": "Track how many TikTok users interact with your website. Note that this destination will set third-party cookies.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/services/tiktok.png"
        },
        {
            "mapping_templates": [
                {
                    "name": "Impression",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify') and event = 'Product Viewed'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "id",
                            "type": "string",
                            "label": "Event ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": true,
                            "description": "Unique ID generated by the client to suppress duplicate events. The length should not exceed 128 characters."
                        },
                        {
                            "key": "occurredAt",
                            "type": "string",
                            "label": "Occurred At",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": true,
                            "description": "Timestamp that the event happened at."
                        },
                        {
                            "key": "opaqueUserId",
                            "type": "string",
                            "label": "Opaque User ID",
                            "secret": false,
                            "default": "{event.distinct_id}",
                            "required": true,
                            "description": "Identifier for tracking users regardless of sign-in status. The length should not exceed 128 characters."
                        },
                        {
                            "key": "resolvedBidId",
                            "type": "string",
                            "label": "Resolved Bid ID",
                            "secret": false,
                            "default": "{event.properties.resolvedBidId}",
                            "required": true,
                            "description": "Identifier of an instance of a resolved auction for a determined product. The length should not exceed 128 characters."
                        },
                        {
                            "key": "additionalAttribution",
                            "type": "dictionary",
                            "label": "Additional Attribution",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.properties.additionalAttribution}"
                            },
                            "required": false,
                            "description": "Additional attribution information."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "impression",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Click",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify') and event = 'Product Clicked'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "id",
                            "type": "string",
                            "label": "Event ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": true,
                            "description": "Unique ID generated by the client to suppress duplicate events. The length should not exceed 128 characters."
                        },
                        {
                            "key": "occurredAt",
                            "type": "string",
                            "label": "Occurred At",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": true,
                            "description": "Timestamp that the event happened at."
                        },
                        {
                            "key": "opaqueUserId",
                            "type": "string",
                            "label": "Opaque User ID",
                            "secret": false,
                            "default": "{event.distinct_id}",
                            "required": true,
                            "description": "Identifier for tracking users regardless of sign-in status. The length should not exceed 128 characters."
                        },
                        {
                            "key": "resolvedBidId",
                            "type": "string",
                            "label": "Resolved Bid ID",
                            "secret": false,
                            "default": "{event.properties.resolvedBidId}",
                            "required": true,
                            "description": "Identifier of an instance of a resolved auction for a determined product. The length should not exceed 128 characters."
                        },
                        {
                            "key": "additionalAttribution",
                            "type": "dictionary",
                            "label": "Additional Attribution",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.properties.additionalAttribution}"
                            },
                            "required": false,
                            "description": "Additional attribution information."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "click",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Purchase",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify') and event = 'Order Completed'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "id",
                            "type": "string",
                            "label": "Event ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": true,
                            "description": "Unique ID generated by the client to suppress duplicate events. The length should not exceed 128 characters."
                        },
                        {
                            "key": "occurredAt",
                            "type": "string",
                            "label": "Occurred At",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": true,
                            "description": "Timestamp that the event happened at."
                        },
                        {
                            "key": "opaqueUserId",
                            "type": "string",
                            "label": "Opaque User ID",
                            "secret": false,
                            "default": "{event.distinct_id}",
                            "required": true,
                            "description": "Identifier for tracking users regardless of sign-in status. The length should not exceed 128 characters."
                        },
                        {
                            "key": "items",
                            "type": "string",
                            "label": "Items",
                            "secret": false,
                            "default": "{event.properties.products}",
                            "required": true,
                            "description": "Item information list related to the event."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "purchase",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Banner Impression",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify') and event = 'Banner Impression'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "id",
                            "type": "string",
                            "label": "Event ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": true,
                            "description": "Unique ID generated by the client to suppress duplicate events. The length should not exceed 128 characters."
                        },
                        {
                            "key": "occurredAt",
                            "type": "string",
                            "label": "Occurred At",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": true,
                            "description": "Timestamp that the event happened at."
                        },
                        {
                            "key": "opaqueUserId",
                            "type": "string",
                            "label": "Opaque User ID",
                            "secret": false,
                            "default": "{event.distinct_id}",
                            "required": true,
                            "description": "Identifier for tracking users regardless of sign-in status. The length should not exceed 128 characters."
                        },
                        {
                            "key": "resolvedBidId",
                            "type": "string",
                            "label": "Resolved Bid ID",
                            "secret": false,
                            "default": "{event.properties.resolvedBidId}",
                            "required": true,
                            "description": "Identifier of an instance of a resolved auction for a determined product. The length should not exceed 128 characters."
                        },
                        {
                            "key": "additionalAttribution",
                            "type": "dictionary",
                            "label": "Additional Attribution",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.properties.additionalAttribution}"
                            },
                            "required": false,
                            "description": "Additional attribution information."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "impression",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Banner Click",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify') and event = 'Banner Click'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "id",
                            "type": "string",
                            "label": "Event ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": true,
                            "description": "Unique ID generated by the client to suppress duplicate events. The length should not exceed 128 characters."
                        },
                        {
                            "key": "occurredAt",
                            "type": "string",
                            "label": "Occurred At",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": true,
                            "description": "Timestamp that the event happened at."
                        },
                        {
                            "key": "opaqueUserId",
                            "type": "string",
                            "label": "Opaque User ID",
                            "secret": false,
                            "default": "{event.distinct_id}",
                            "required": true,
                            "description": "Identifier for tracking users regardless of sign-in status. The length should not exceed 128 characters."
                        },
                        {
                            "key": "resolvedBidId",
                            "type": "string",
                            "label": "Resolved Bid ID",
                            "secret": false,
                            "default": "{event.properties.resolvedBidId}",
                            "required": true,
                            "description": "Identifier of an instance of a resolved auction for a determined product. The length should not exceed 128 characters."
                        },
                        {
                            "key": "additionalAttribution",
                            "type": "dictionary",
                            "label": "Additional Attribution",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.properties.additionalAttribution}"
                            },
                            "required": false,
                            "description": "Additional attribution information."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "click",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                }
            ],
            "mappings": null,
            "status": "alpha",
            "free": false,
            "type": "destination",
            "id": "segment-actions-topsort",
            "name": "Topsort",
            "hog": "return event",
            "inputs_schema": [
                {
                    "key": "api_key",
                    "type": "string",
                    "label": "API Key",
                    "secret": true,
                    "required": true,
                    "description": "Created under Settings > API Integration in the Topsort Manager Platform."
                },
                {
                    "key": "debug_mode",
                    "type": "boolean",
                    "label": "Debug Mode",
                    "default": false,
                    "description": "Will log configuration and request details"
                }
            ],
            "category": [],
            "code_language": "hog",
            "description": "Send event data to Topsort",
            "filters": null,
            "masking": null,
            "icon_url": "/static/services/topsort.com.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-trackjs",
            "name": "TrackJS",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Error Reporting & Monitoring"],
            "code_language": "hog",
            "description": "Send events to TrackJS.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/TrackJS.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-tradedesk",
            "name": "Tradedesk",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Advertising"],
            "code_language": "hog",
            "description": "Send events to Tradedesk.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Tradedesk.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-tradedesk-audience",
            "name": "Tradedesk Audience",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Advertising"],
            "code_language": "hog",
            "description": "Send events to Tradedesk Audience.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Tradedesk_Audience.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-trafficguard",
            "name": "TrafficGuard",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Authentication Platforms"],
            "code_language": "hog",
            "description": "Send events to TrafficGuard.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/TrafficGuard.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-tray-io",
            "name": "Tray.io",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Automation"],
            "code_language": "hog",
            "description": "Send events to Tray.io.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Tray.io.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-trengo",
            "name": "Trengo",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Customer Service"],
            "code_language": "hog",
            "description": "Send events to Trengo.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Trengo.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-tune",
            "name": "Tune",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Marketing"],
            "code_language": "hog",
            "description": "Send events to Tune.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Tune.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-tvsquared",
            "name": "TVSquared",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Attribution Platforms"],
            "code_language": "hog",
            "description": "Send events to TVSquared.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/TVSquared.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "beta",
            "free": false,
            "type": "destination",
            "id": "template-twilio",
            "name": "Twilio",
            "hog": "let encodedTo := encodeURLComponent(inputs.phoneNumber)\nlet encodedFrom := encodeURLComponent(inputs.fromPhoneNumber)\nlet encodedSmsBody := encodeURLComponent(f'{inputs.smsBody} - Event: {event.event} at {toDate(event.timestamp)}')\nlet base64EncodedAuth := base64Encode(f'{inputs.accountSid}:{inputs.authToken}')\n\nlet res := fetch(\n    f'https://api.twilio.com/2010-04-01/Accounts/{inputs.accountSid}/Messages.json',\n    {\n        'method': 'POST',\n        'headers': {\n            'Authorization': f'Basic {base64EncodedAuth}',\n            'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        'body': f'To={encodedTo}&From={encodedFrom}&Body={encodedSmsBody}'\n    }\n)\n\nif (res.status >= 200 and res.status < 300) {\n    print('SMS sent successfully via Twilio!')\n} else {\n    throw Error('Error sending SMS', res)\n}",
            "inputs_schema": [
                {
                    "key": "accountSid",
                    "type": "string",
                    "label": "Account SID",
                    "secret": false,
                    "required": true
                },
                {
                    "key": "authToken",
                    "type": "string",
                    "label": "Auth Token",
                    "secret": true,
                    "required": true
                },
                {
                    "key": "fromPhoneNumber",
                    "type": "string",
                    "label": "From Phone Number",
                    "secret": false,
                    "required": true,
                    "description": "Your Twilio phone number (e.g. +12292109687)"
                },
                {
                    "key": "phoneNumber",
                    "type": "string",
                    "label": "Recipient Phone Number",
                    "secret": false,
                    "required": true,
                    "description": "The phone number to send SMS to (e.g. +491633950489)"
                },
                {
                    "key": "smsBody",
                    "type": "string",
                    "label": "SMS Body Template",
                    "secret": false,
                    "default": "Event Notification: {event.event} occurred.",
                    "required": true,
                    "description": "Limited to 1600 characters - exceeding this will cause failures."
                }
            ],
            "category": ["Custom"],
            "code_language": "hog",
            "description": "Send SMS via Twilio when an event occurs.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/services/twilio.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-user-com",
            "name": "User.com",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Business Messaging"],
            "code_language": "hog",
            "description": "Send events to User.com.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/User.com.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-userlist",
            "name": "Userlist",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Marketing"],
            "code_language": "hog",
            "description": "Send events to Userlist.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Userlist.png"
        },
        {
            "mapping_templates": [
                {
                    "name": "Track Event",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify')",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "event",
                            "type": "string",
                            "label": "Event Name",
                            "secret": false,
                            "default": "{event.event}",
                            "required": true,
                            "description": "The event name"
                        },
                        {
                            "key": "event_attributes",
                            "type": "dictionary",
                            "label": "Event Attributes",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.properties}"
                            },
                            "required": false,
                            "description": "Attributes associated with the event"
                        },
                        {
                            "key": "user_id",
                            "type": "string",
                            "label": "User id",
                            "secret": false,
                            "default": "{person.id}",
                            "required": false,
                            "description": "The user id, to uniquely identify the user"
                        },
                        {
                            "key": "user_email",
                            "type": "string",
                            "label": "Email address",
                            "secret": false,
                            "default": "{event.properties.email ?? person.properties.email}",
                            "required": false,
                            "description": "The user email address"
                        },
                        {
                            "key": "user_created_at",
                            "type": "string",
                            "label": "Created at",
                            "secret": false,
                            "default": "{event.properties.created_at ?? person.properties.created_at}",
                            "required": false,
                            "description": "The timestamp when the user was created"
                        },
                        {
                            "key": "user_anonymous_id",
                            "type": "string",
                            "label": "Anonymous ID",
                            "secret": false,
                            "default": "{event.distinct_id}",
                            "required": false,
                            "description": "User Anonymous id"
                        },
                        {
                            "key": "event_id",
                            "type": "string",
                            "label": "Event ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": false,
                            "description": "The ID of the event."
                        },
                        {
                            "key": "doc_path",
                            "type": "string",
                            "label": "Document Path",
                            "secret": false,
                            "default": "{event.properties.$pathname}",
                            "required": false,
                            "description": "The path of the document."
                        },
                        {
                            "key": "doc_search",
                            "type": "string",
                            "label": "Document Search",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "The search query of the document."
                        },
                        {
                            "key": "event_type",
                            "type": "string",
                            "label": "Event Type",
                            "secret": false,
                            "default": "{event.event == '$pageview' ? 'page' : event.event == '$screen' ? 'screen' : event.event == '$groupidentify' ? 'group' : event.event in ('$identify', '$set') ? 'identify' : event.event == '$alias' ? 'alias' : 'track'}",
                            "required": false,
                            "description": "The type of the event."
                        },
                        {
                            "key": "page_title",
                            "type": "string",
                            "label": "Page Title",
                            "secret": false,
                            "default": "{event.properties.title}",
                            "required": false,
                            "description": "The title of the page where the event occurred."
                        },
                        {
                            "key": "referer",
                            "type": "string",
                            "label": "Referrer",
                            "secret": false,
                            "default": "{event.properties.$referrer}",
                            "required": false,
                            "description": "The referrer of the page where the event occurred."
                        },
                        {
                            "key": "url",
                            "type": "string",
                            "label": "URL",
                            "secret": false,
                            "default": "{event.properties.$current_url}",
                            "required": false,
                            "description": "The URL of the page where the event occurred."
                        },
                        {
                            "key": "user_agent",
                            "type": "string",
                            "label": "User Agent",
                            "secret": false,
                            "default": "{event.properties.$raw_user_agent}",
                            "required": false,
                            "description": "The user agent of the browser."
                        },
                        {
                            "key": "user_language",
                            "type": "string",
                            "label": "User Language",
                            "secret": false,
                            "default": "{event.properties.$locale}",
                            "required": false,
                            "description": "The language of the browser."
                        },
                        {
                            "key": "utc_time",
                            "type": "string",
                            "label": "UTC Time",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": false,
                            "description": "The time of the event in UTC."
                        },
                        {
                            "key": "utm",
                            "type": "dictionary",
                            "label": "UTM",
                            "secret": false,
                            "default": {
                                "name": "{event.properties.utm_campaign}",
                                "term": "{event.properties.utm_term}",
                                "medium": "{event.properties.utm_medium}",
                                "source": "{event.properties.utm_source}",
                                "content": "{event.properties.utm_content}"
                            },
                            "required": false,
                            "description": "Information about the UTM parameters."
                        },
                        {
                            "key": "screen",
                            "type": "dictionary",
                            "label": "Screen",
                            "secret": false,
                            "default": {
                                "width": "{event.context.screen.width}",
                                "height": "{event.context.screen.height}",
                                "density": ""
                            },
                            "required": false,
                            "description": "Information about the screen."
                        },
                        {
                            "key": "timezone",
                            "type": "string",
                            "label": "Timezone",
                            "secret": false,
                            "default": "{event.properties.timezone ?? person.properties.timezone}",
                            "required": false,
                            "description": "The timezone of the browser."
                        },
                        {
                            "key": "source_ip",
                            "type": "string",
                            "label": "IP Address",
                            "secret": false,
                            "default": "{event.properties.$ip}",
                            "required": false,
                            "description": "The IP address of the user."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "track",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Identify User",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event in ('$identify', '$set')",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "user_id",
                            "type": "string",
                            "label": "User id",
                            "secret": false,
                            "default": "{person.id}",
                            "required": true,
                            "description": "The user id, to uniquely identify the user"
                        },
                        {
                            "key": "user_email",
                            "type": "string",
                            "label": "Email address",
                            "secret": false,
                            "default": "{person.properties.email ?? event.properties.email}",
                            "required": true,
                            "description": "The user email address"
                        },
                        {
                            "key": "user_created_at",
                            "type": "string",
                            "label": "Created at",
                            "secret": false,
                            "default": "{person.properties.created_at}",
                            "required": false,
                            "description": "The timestamp when the user was created"
                        },
                        {
                            "key": "user_first_name",
                            "type": "string",
                            "label": "First name",
                            "secret": false,
                            "default": "{person.properties.first_name ?? event.properties.first_name}",
                            "required": false,
                            "description": "The user first name"
                        },
                        {
                            "key": "user_last_name",
                            "type": "string",
                            "label": "Last name",
                            "secret": false,
                            "default": "{person.properties.last_name ?? event.properties.last_name}",
                            "required": false,
                            "description": "The user last name"
                        },
                        {
                            "key": "user_custom_attributes",
                            "type": "dictionary",
                            "label": "Custom attributes",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{person.properties}"
                            },
                            "required": false,
                            "description": "The user custom attributes"
                        },
                        {
                            "key": "user_anonymous_id",
                            "type": "string",
                            "label": "Anonymous ID",
                            "secret": false,
                            "default": "{event.distinct_id}",
                            "required": false,
                            "description": "User Anonymous id"
                        },
                        {
                            "key": "event_id",
                            "type": "string",
                            "label": "Event ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": false,
                            "description": "The ID of the event."
                        },
                        {
                            "key": "doc_path",
                            "type": "string",
                            "label": "Document Path",
                            "secret": false,
                            "default": "{event.properties.$pathname}",
                            "required": false,
                            "description": "The path of the document."
                        },
                        {
                            "key": "doc_search",
                            "type": "string",
                            "label": "Document Search",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "The search query of the document."
                        },
                        {
                            "key": "event_type",
                            "type": "string",
                            "label": "Event Type",
                            "secret": false,
                            "default": "{event.event == '$pageview' ? 'page' : event.event == '$screen' ? 'screen' : event.event == '$groupidentify' ? 'group' : event.event in ('$identify', '$set') ? 'identify' : event.event == '$alias' ? 'alias' : 'track'}",
                            "required": false,
                            "description": "The type of the event."
                        },
                        {
                            "key": "page_title",
                            "type": "string",
                            "label": "Page Title",
                            "secret": false,
                            "default": "{event.properties.title}",
                            "required": false,
                            "description": "The title of the page where the event occurred."
                        },
                        {
                            "key": "referer",
                            "type": "string",
                            "label": "Referrer",
                            "secret": false,
                            "default": "{event.properties.$referrer}",
                            "required": false,
                            "description": "The referrer of the page where the event occurred."
                        },
                        {
                            "key": "url",
                            "type": "string",
                            "label": "URL",
                            "secret": false,
                            "default": "{event.properties.$current_url}",
                            "required": false,
                            "description": "The URL of the page where the event occurred."
                        },
                        {
                            "key": "user_agent",
                            "type": "string",
                            "label": "User Agent",
                            "secret": false,
                            "default": "{event.properties.$raw_user_agent}",
                            "required": false,
                            "description": "The user agent of the browser."
                        },
                        {
                            "key": "user_language",
                            "type": "string",
                            "label": "User Language",
                            "secret": false,
                            "default": "{event.properties.$locale}",
                            "required": false,
                            "description": "The language of the browser."
                        },
                        {
                            "key": "utc_time",
                            "type": "string",
                            "label": "UTC Time",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": false,
                            "description": "The time of the event in UTC."
                        },
                        {
                            "key": "utm",
                            "type": "dictionary",
                            "label": "UTM",
                            "secret": false,
                            "default": {
                                "name": "{event.properties.utm_campaign}",
                                "term": "{event.properties.utm_term}",
                                "medium": "{event.properties.utm_medium}",
                                "source": "{event.properties.utm_source}",
                                "content": "{event.properties.utm_content}"
                            },
                            "required": false,
                            "description": "Information about the UTM parameters."
                        },
                        {
                            "key": "screen",
                            "type": "dictionary",
                            "label": "Screen",
                            "secret": false,
                            "default": {
                                "width": "{event.context.screen.width}",
                                "height": "{event.context.screen.height}",
                                "density": ""
                            },
                            "required": false,
                            "description": "Information about the screen."
                        },
                        {
                            "key": "timezone",
                            "type": "string",
                            "label": "Timezone",
                            "secret": false,
                            "default": "{event.properties.timezone ?? person.properties.timezone}",
                            "required": false,
                            "description": "The timezone of the browser."
                        },
                        {
                            "key": "source_ip",
                            "type": "string",
                            "label": "IP Address",
                            "secret": false,
                            "default": "{event.properties.$ip}",
                            "required": false,
                            "description": "The IP address of the user."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "identify",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Group",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event = '$groupidentify'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "company_id",
                            "type": "string",
                            "label": "Company id",
                            "secret": false,
                            "default": "{event.groupId}",
                            "required": true,
                            "description": "The company id, to uniquely identify the company"
                        },
                        {
                            "key": "user_id",
                            "type": "string",
                            "label": "User id",
                            "secret": false,
                            "default": "{person.id}",
                            "required": true,
                            "description": "The user id, to uniquely identify the user"
                        },
                        {
                            "key": "company_name",
                            "type": "string",
                            "label": "Company name",
                            "secret": false,
                            "default": "{person.properties.name}",
                            "required": false,
                            "description": "The company name"
                        },
                        {
                            "key": "company_created_at",
                            "type": "string",
                            "label": "Company created at",
                            "secret": false,
                            "default": "{person.properties.created_at}",
                            "required": false,
                            "description": "The timestamp when the company was created"
                        },
                        {
                            "key": "company_custom_attributes",
                            "type": "dictionary",
                            "label": "Company custom attributes",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{person.properties}"
                            },
                            "required": false,
                            "description": "The company custom attributes"
                        },
                        {
                            "key": "user_anonymous_id",
                            "type": "string",
                            "label": "Anonymous ID",
                            "secret": false,
                            "default": "{event.distinct_id}",
                            "required": false,
                            "description": "User Anonymous id"
                        },
                        {
                            "key": "event_id",
                            "type": "string",
                            "label": "Event ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": false,
                            "description": "The ID of the event."
                        },
                        {
                            "key": "doc_path",
                            "type": "string",
                            "label": "Document Path",
                            "secret": false,
                            "default": "{event.properties.$pathname}",
                            "required": false,
                            "description": "The path of the document."
                        },
                        {
                            "key": "doc_search",
                            "type": "string",
                            "label": "Document Search",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "The search query of the document."
                        },
                        {
                            "key": "event_type",
                            "type": "string",
                            "label": "Event Type",
                            "secret": false,
                            "default": "{event.event == '$pageview' ? 'page' : event.event == '$screen' ? 'screen' : event.event == '$groupidentify' ? 'group' : event.event in ('$identify', '$set') ? 'identify' : event.event == '$alias' ? 'alias' : 'track'}",
                            "required": false,
                            "description": "The type of the event."
                        },
                        {
                            "key": "page_title",
                            "type": "string",
                            "label": "Page Title",
                            "secret": false,
                            "default": "{event.properties.title}",
                            "required": false,
                            "description": "The title of the page where the event occurred."
                        },
                        {
                            "key": "referer",
                            "type": "string",
                            "label": "Referrer",
                            "secret": false,
                            "default": "{event.properties.$referrer}",
                            "required": false,
                            "description": "The referrer of the page where the event occurred."
                        },
                        {
                            "key": "url",
                            "type": "string",
                            "label": "URL",
                            "secret": false,
                            "default": "{event.properties.$current_url}",
                            "required": false,
                            "description": "The URL of the page where the event occurred."
                        },
                        {
                            "key": "user_agent",
                            "type": "string",
                            "label": "User Agent",
                            "secret": false,
                            "default": "{event.properties.$raw_user_agent}",
                            "required": false,
                            "description": "The user agent of the browser."
                        },
                        {
                            "key": "user_language",
                            "type": "string",
                            "label": "User Language",
                            "secret": false,
                            "default": "{event.properties.$locale}",
                            "required": false,
                            "description": "The language of the browser."
                        },
                        {
                            "key": "utc_time",
                            "type": "string",
                            "label": "UTC Time",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": false,
                            "description": "The time of the event in UTC."
                        },
                        {
                            "key": "utm",
                            "type": "dictionary",
                            "label": "UTM",
                            "secret": false,
                            "default": {
                                "name": "{event.properties.utm_campaign}",
                                "term": "{event.properties.utm_term}",
                                "medium": "{event.properties.utm_medium}",
                                "source": "{event.properties.utm_source}",
                                "content": "{event.properties.utm_content}"
                            },
                            "required": false,
                            "description": "Information about the UTM parameters."
                        },
                        {
                            "key": "screen",
                            "type": "dictionary",
                            "label": "Screen",
                            "secret": false,
                            "default": {
                                "width": "{event.context.screen.width}",
                                "height": "{event.context.screen.height}",
                                "density": ""
                            },
                            "required": false,
                            "description": "Information about the screen."
                        },
                        {
                            "key": "timezone",
                            "type": "string",
                            "label": "Timezone",
                            "secret": false,
                            "default": "{event.properties.timezone ?? person.properties.timezone}",
                            "required": false,
                            "description": "The timezone of the browser."
                        },
                        {
                            "key": "source_ip",
                            "type": "string",
                            "label": "IP Address",
                            "secret": false,
                            "default": "{event.properties.$ip}",
                            "required": false,
                            "description": "The IP address of the user."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "group",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Page",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event = '$pageview'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "user_id",
                            "type": "string",
                            "label": "User id",
                            "secret": false,
                            "default": "{person.id}",
                            "required": false,
                            "description": "The user id, to uniquely identify the user"
                        },
                        {
                            "key": "user_email",
                            "type": "string",
                            "label": "Email address",
                            "secret": false,
                            "default": "{event.properties.email ?? person.properties.email}",
                            "required": false,
                            "description": "The user email address"
                        },
                        {
                            "key": "user_created_at",
                            "type": "string",
                            "label": "Created at",
                            "secret": false,
                            "default": "{event.properties.created_at ?? person.properties.created_at}",
                            "required": false,
                            "description": "The timestamp when the user was created"
                        },
                        {
                            "key": "page_name",
                            "type": "string",
                            "label": "Page Name",
                            "secret": false,
                            "default": "{event.properties.name}",
                            "required": false,
                            "description": "The name of the page"
                        },
                        {
                            "key": "user_anonymous_id",
                            "type": "string",
                            "label": "Anonymous ID",
                            "secret": false,
                            "default": "{event.distinct_id}",
                            "required": false,
                            "description": "User Anonymous id"
                        },
                        {
                            "key": "event_id",
                            "type": "string",
                            "label": "Event ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": false,
                            "description": "The ID of the event."
                        },
                        {
                            "key": "doc_path",
                            "type": "string",
                            "label": "Document Path",
                            "secret": false,
                            "default": "{event.properties.$pathname}",
                            "required": false,
                            "description": "The path of the document."
                        },
                        {
                            "key": "doc_search",
                            "type": "string",
                            "label": "Document Search",
                            "secret": false,
                            "default": "",
                            "required": false,
                            "description": "The search query of the document."
                        },
                        {
                            "key": "event_type",
                            "type": "string",
                            "label": "Event Type",
                            "secret": false,
                            "default": "{event.event == '$pageview' ? 'page' : event.event == '$screen' ? 'screen' : event.event == '$groupidentify' ? 'group' : event.event in ('$identify', '$set') ? 'identify' : event.event == '$alias' ? 'alias' : 'track'}",
                            "required": false,
                            "description": "The type of the event."
                        },
                        {
                            "key": "page_title",
                            "type": "string",
                            "label": "Page Title",
                            "secret": false,
                            "default": "{event.properties.title}",
                            "required": false,
                            "description": "The title of the page where the event occurred."
                        },
                        {
                            "key": "referer",
                            "type": "string",
                            "label": "Referrer",
                            "secret": false,
                            "default": "{event.properties.$referrer}",
                            "required": false,
                            "description": "The referrer of the page where the event occurred."
                        },
                        {
                            "key": "url",
                            "type": "string",
                            "label": "URL",
                            "secret": false,
                            "default": "{event.properties.$current_url}",
                            "required": false,
                            "description": "The URL of the page where the event occurred."
                        },
                        {
                            "key": "user_agent",
                            "type": "string",
                            "label": "User Agent",
                            "secret": false,
                            "default": "{event.properties.$raw_user_agent}",
                            "required": false,
                            "description": "The user agent of the browser."
                        },
                        {
                            "key": "user_language",
                            "type": "string",
                            "label": "User Language",
                            "secret": false,
                            "default": "{event.properties.$locale}",
                            "required": false,
                            "description": "The language of the browser."
                        },
                        {
                            "key": "utc_time",
                            "type": "string",
                            "label": "UTC Time",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": false,
                            "description": "The time of the event in UTC."
                        },
                        {
                            "key": "utm",
                            "type": "dictionary",
                            "label": "UTM",
                            "secret": false,
                            "default": {
                                "name": "{event.properties.utm_campaign}",
                                "term": "{event.properties.utm_term}",
                                "medium": "{event.properties.utm_medium}",
                                "source": "{event.properties.utm_source}",
                                "content": "{event.properties.utm_content}"
                            },
                            "required": false,
                            "description": "Information about the UTM parameters."
                        },
                        {
                            "key": "screen",
                            "type": "dictionary",
                            "label": "Screen",
                            "secret": false,
                            "default": {
                                "width": "{event.context.screen.width}",
                                "height": "{event.context.screen.height}",
                                "density": ""
                            },
                            "required": false,
                            "description": "Information about the screen."
                        },
                        {
                            "key": "timezone",
                            "type": "string",
                            "label": "Timezone",
                            "secret": false,
                            "default": "{event.properties.timezone ?? person.properties.timezone}",
                            "required": false,
                            "description": "The timezone of the browser."
                        },
                        {
                            "key": "source_ip",
                            "type": "string",
                            "label": "IP Address",
                            "secret": false,
                            "default": "{event.properties.$ip}",
                            "required": false,
                            "description": "The IP address of the user."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "page",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                }
            ],
            "mappings": null,
            "status": "alpha",
            "free": false,
            "type": "destination",
            "id": "segment-actions-usermaven",
            "name": "Usermaven",
            "hog": "return event",
            "inputs_schema": [
                {
                    "key": "api_key",
                    "type": "string",
                    "label": "API Key",
                    "secret": false,
                    "required": true,
                    "description": "Found on your general settings page."
                },
                {
                    "key": "server_token",
                    "type": "string",
                    "label": "Server Token",
                    "secret": false,
                    "required": true,
                    "description": "Found on your general settings page."
                },
                {
                    "key": "debug_mode",
                    "type": "boolean",
                    "label": "Debug Mode",
                    "default": false,
                    "description": "Will log configuration and request details"
                }
            ],
            "category": [],
            "code_language": "hog",
            "description": "Send event data to Usermaven",
            "filters": null,
            "masking": null,
            "icon_url": "/static/services/usermaven.com.png"
        },
        {
            "mapping_templates": [
                {
                    "name": "Identify User",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event in ('$identify', '$set')",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "userId",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": true,
                            "description": "A identifier for a known user."
                        },
                        {
                            "key": "anonymousId",
                            "type": "string",
                            "label": "Anonymous ID",
                            "secret": false,
                            "default": "{event.distinct_id}",
                            "required": false,
                            "description": "An identifier for an anonymous user"
                        },
                        {
                            "key": "email",
                            "type": "string",
                            "label": "Email",
                            "secret": false,
                            "default": "{person.properties.email ?? event.email}",
                            "required": true,
                            "description": "The email address of the identified user"
                        },
                        {
                            "key": "traits",
                            "type": "dictionary",
                            "label": "Traits",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{person.properties}"
                            },
                            "required": false,
                            "description": "Traits to associate with the user"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "identify",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Identify Group",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event = '$groupidentify'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "userId",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": false,
                            "description": "A identifier for a known user."
                        },
                        {
                            "key": "anonymousId",
                            "type": "string",
                            "label": "Anonymous ID",
                            "secret": false,
                            "default": "{event.distinct_id}",
                            "required": false,
                            "description": "An identifier for an anonymous user"
                        },
                        {
                            "key": "groupId",
                            "type": "string",
                            "label": "Group ID",
                            "secret": false,
                            "default": "{event.groupId}",
                            "required": true,
                            "description": "A identifier for a known company."
                        },
                        {
                            "key": "traits",
                            "type": "dictionary",
                            "label": "Traits",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{person.properties}"
                            },
                            "required": false,
                            "description": "Traits to associate with the company"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "group",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Track Analytics Event",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify') or event = '$pageview'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "userId",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": false,
                            "description": "A identifier for a known user."
                        },
                        {
                            "key": "anonymousId",
                            "type": "string",
                            "label": "Anonymous ID",
                            "secret": false,
                            "default": "{event.distinct_id}",
                            "required": false,
                            "description": "An identifier for an anonymous user"
                        },
                        {
                            "key": "eventName",
                            "type": "string",
                            "label": "Event Name",
                            "secret": false,
                            "default": "{event.event ?? 'pageview'}",
                            "required": true,
                            "description": "The name of the track() event or page() event"
                        },
                        {
                            "key": "context",
                            "type": "dictionary",
                            "label": "Context properties",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.context}"
                            },
                            "required": false,
                            "description": "Context properties to send with the event"
                        },
                        {
                            "key": "properties",
                            "type": "dictionary",
                            "label": "Event Properties",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.properties}"
                            },
                            "required": false,
                            "description": "Properties to send with the event."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "track",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                }
            ],
            "mappings": null,
            "status": "beta",
            "free": false,
            "type": "destination",
            "id": "segment-actions-usermotion",
            "name": "UserMotion",
            "hog": "return event",
            "inputs_schema": [
                {
                    "key": "apiKey",
                    "type": "string",
                    "label": "API Key",
                    "secret": false,
                    "required": true,
                    "description": "Your UserMotion API Key"
                },
                {
                    "key": "debug_mode",
                    "type": "boolean",
                    "label": "Debug Mode",
                    "default": false,
                    "description": "Will log configuration and request details"
                }
            ],
            "category": [],
            "code_language": "hog",
            "description": "Send event data to UserMotion",
            "filters": null,
            "masking": null,
            "icon_url": "/static/services/usermotion.com.png"
        },
        {
            "mapping_templates": [
                {
                    "name": "Identify User",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event in ('$identify', '$set')",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "userId",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id ?? event.distinct_id}",
                            "required": true,
                            "description": "The ID of the logged-in user."
                        },
                        {
                            "key": "createdAt",
                            "type": "string",
                            "label": "User Created At Date",
                            "secret": false,
                            "default": "{person.properties.createdAt}",
                            "required": false,
                            "description": "The date the user profile was created at"
                        },
                        {
                            "key": "traits",
                            "type": "dictionary",
                            "label": "Traits",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{person.properties}"
                            },
                            "required": false,
                            "description": "Segment traits"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "identifyUser",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Identify Company",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event = '$groupidentify'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "groupId",
                            "type": "string",
                            "label": "Company ID",
                            "secret": false,
                            "default": "{event.groupId}",
                            "required": true,
                            "description": "The ID of the company."
                        },
                        {
                            "key": "createdAt",
                            "type": "string",
                            "label": "Company Created At Date",
                            "secret": false,
                            "default": "{person.properties.createdAt}",
                            "required": false,
                            "description": "The date the company profile was created at"
                        },
                        {
                            "key": "traits",
                            "type": "dictionary",
                            "label": "Traits",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{person.properties}"
                            },
                            "required": false,
                            "description": "Segment traits"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "identifyCompany",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Track Event",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify')",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "userId",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id ?? event.distinct_id}",
                            "required": false,
                            "description": "The ID of the logged-in user."
                        },
                        {
                            "key": "name",
                            "type": "string",
                            "label": "Name",
                            "secret": false,
                            "default": "{event.event}",
                            "required": true,
                            "description": "Event name"
                        },
                        {
                            "key": "properties",
                            "type": "dictionary",
                            "label": "Properties",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.properties}"
                            },
                            "required": false,
                            "description": "Event properties"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "trackEvent",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                }
            ],
            "mappings": null,
            "status": "alpha",
            "free": false,
            "type": "destination",
            "id": "segment-actions-userpilot-cloud",
            "name": "Userpilot Cloud",
            "hog": "return event",
            "inputs_schema": [
                {
                    "key": "apiKey",
                    "type": "string",
                    "label": "API Key",
                    "secret": false,
                    "required": true,
                    "description": "Your Userpilot API key can be found in the [Userpilot environment](https://run.userpilot.io/environment) dashboard."
                },
                {
                    "key": "endpoint",
                    "type": "string",
                    "label": "API Endpoint",
                    "secret": false,
                    "default": "https://analytex.userpilot.io/",
                    "required": true,
                    "description": "Your Userpilot API endpoint can be found in the [Userpilot environment](https://run.userpilot.io/environment) dashboard."
                },
                {
                    "key": "debug_mode",
                    "type": "boolean",
                    "label": "Debug Mode",
                    "default": false,
                    "description": "Will log configuration and request details"
                }
            ],
            "category": [],
            "code_language": "hog",
            "description": "Send event data to Userpilot Cloud",
            "filters": null,
            "masking": null,
            "icon_url": "/static/services/userpilot.com.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-uservoice",
            "name": "UserVoice",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Customer Service"],
            "code_language": "hog",
            "description": "Send events to UserVoice.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/UserVoice.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-variance",
            "name": "Variance",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["CRM"],
            "code_language": "hog",
            "description": "Send events to Variance.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Variance.webp"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-vero",
            "name": "Vero",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Marketing"],
            "code_language": "hog",
            "description": "Send events to Vero.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Vero.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-vitally",
            "name": "Vitally",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Marketing"],
            "code_language": "hog",
            "description": "Send events to Vitally.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Vitally.svg"
        },
        {
            "mapping_templates": [
                {
                    "name": "Add Custom Event (Track Event)",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify')",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "customer",
                            "type": "dictionary",
                            "label": "Customer Object",
                            "secret": false,
                            "default": {
                                "email": "{event.properties.email ?? person.properties.email}",
                                "source_id": "{person.id}"
                            },
                            "required": true,
                            "description": "This is an object containing information about the [customer](https://docs.voucherify.io/reference/the-customer-object)."
                        },
                        {
                            "key": "referral",
                            "type": "dictionary",
                            "label": "Referral Object",
                            "secret": false,
                            "default": {
                                "code": "{event.properties.referral.code}",
                                "referrer_id": "{event.properties.referral.referrer_id}"
                            },
                            "required": false,
                            "description": "If a conversion event for a referral program is set to a [custom event](https://docs.voucherify.io/reference/custom-event-object), then you need to send the referral code in the payload to make a record of the conversion event."
                        },
                        {
                            "key": "loyalty",
                            "type": "dictionary",
                            "label": "Loyalty Object",
                            "secret": false,
                            "default": {
                                "code": "{event.properties.loyalty.code}"
                            },
                            "required": false,
                            "description": "If an earning rule in a loyalty program is based on a [custom event](https://docs.voucherify.io/reference/custom-event-object). This objects allows you specify the loyalty card to which the custom event should be attributed to."
                        },
                        {
                            "key": "metadata",
                            "type": "dictionary",
                            "label": "Track Event Metadata",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.properties.metadata}"
                            },
                            "required": false,
                            "description": "The metadata object stores all custom attributes assigned to the [custom event](https://docs.voucherify.io/reference/custom-event-object). A set of key/value pairs that you can attach to an event object. It can be useful for storing additional information about the event in a structured format. Event metadata schema is defined in the Dashboard > Project Settings > Event Schema > Edit particular event > Metadata property definition."
                        },
                        {
                            "key": "event",
                            "type": "string",
                            "label": "Event Name",
                            "secret": false,
                            "default": "{event.event ?? event.event}",
                            "required": false,
                            "description": "The name of the event that will be saved as a [custom event](https://docs.voucherify.io/reference/the-custom-event-object) in Voucherify."
                        },
                        {
                            "key": "type",
                            "type": "string",
                            "label": "Event Type",
                            "secret": false,
                            "default": "{event.event == '$pageview' ? 'page' : event.event == '$screen' ? 'screen' : event.event == '$groupidentify' ? 'group' : event.event in ('$identify', '$set') ? 'identify' : event.event == '$alias' ? 'alias' : 'track'}",
                            "required": true,
                            "description": "Type of the event. For example: identify, track, page, screen or group"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "addCustomEvent",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Add Custom Event (Page Event)",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event = '$pageview'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "customer",
                            "type": "dictionary",
                            "label": "Customer Object",
                            "secret": false,
                            "default": {
                                "email": "{event.properties.email ?? person.properties.email}",
                                "source_id": "{person.id}"
                            },
                            "required": true,
                            "description": "This is an object containing information about the [customer](https://docs.voucherify.io/reference/the-customer-object)."
                        },
                        {
                            "key": "referral",
                            "type": "dictionary",
                            "label": "Referral Object",
                            "secret": false,
                            "default": {
                                "code": "{event.properties.referral.code}",
                                "referrer_id": "{event.properties.referral.referrer_id}"
                            },
                            "required": false,
                            "description": "If a conversion event for a referral program is set to a [custom event](https://docs.voucherify.io/reference/custom-event-object), then you need to send the referral code in the payload to make a record of the conversion event."
                        },
                        {
                            "key": "loyalty",
                            "type": "dictionary",
                            "label": "Loyalty Object",
                            "secret": false,
                            "default": {
                                "code": "{event.properties.loyalty.code}"
                            },
                            "required": false,
                            "description": "If an earning rule in a loyalty program is based on a [custom event](https://docs.voucherify.io/reference/custom-event-object). This objects allows you specify the loyalty card to which the custom event should be attributed to."
                        },
                        {
                            "key": "metadata",
                            "type": "dictionary",
                            "label": "Track Event Metadata",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.properties.metadata}"
                            },
                            "required": false,
                            "description": "The metadata object stores all custom attributes assigned to the [custom event](https://docs.voucherify.io/reference/custom-event-object). A set of key/value pairs that you can attach to an event object. It can be useful for storing additional information about the event in a structured format. Event metadata schema is defined in the Dashboard > Project Settings > Event Schema > Edit particular event > Metadata property definition."
                        },
                        {
                            "key": "event",
                            "type": "string",
                            "label": "Event Name",
                            "secret": false,
                            "default": "{event.event ?? event.event}",
                            "required": false,
                            "description": "The name of the event that will be saved as a [custom event](https://docs.voucherify.io/reference/the-custom-event-object) in Voucherify."
                        },
                        {
                            "key": "type",
                            "type": "string",
                            "label": "Event Type",
                            "secret": false,
                            "default": "{event.event == '$pageview' ? 'page' : event.event == '$screen' ? 'screen' : event.event == '$groupidentify' ? 'group' : event.event in ('$identify', '$set') ? 'identify' : event.event == '$alias' ? 'alias' : 'track'}",
                            "required": true,
                            "description": "Type of the event. For example: identify, track, page, screen or group"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "addCustomEvent",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Add Custom Event (Screen Event)",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event = '$screen'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "customer",
                            "type": "dictionary",
                            "label": "Customer Object",
                            "secret": false,
                            "default": {
                                "email": "{event.properties.email ?? person.properties.email}",
                                "source_id": "{person.id}"
                            },
                            "required": true,
                            "description": "This is an object containing information about the [customer](https://docs.voucherify.io/reference/the-customer-object)."
                        },
                        {
                            "key": "referral",
                            "type": "dictionary",
                            "label": "Referral Object",
                            "secret": false,
                            "default": {
                                "code": "{event.properties.referral.code}",
                                "referrer_id": "{event.properties.referral.referrer_id}"
                            },
                            "required": false,
                            "description": "If a conversion event for a referral program is set to a [custom event](https://docs.voucherify.io/reference/custom-event-object), then you need to send the referral code in the payload to make a record of the conversion event."
                        },
                        {
                            "key": "loyalty",
                            "type": "dictionary",
                            "label": "Loyalty Object",
                            "secret": false,
                            "default": {
                                "code": "{event.properties.loyalty.code}"
                            },
                            "required": false,
                            "description": "If an earning rule in a loyalty program is based on a [custom event](https://docs.voucherify.io/reference/custom-event-object). This objects allows you specify the loyalty card to which the custom event should be attributed to."
                        },
                        {
                            "key": "metadata",
                            "type": "dictionary",
                            "label": "Track Event Metadata",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.properties.metadata}"
                            },
                            "required": false,
                            "description": "The metadata object stores all custom attributes assigned to the [custom event](https://docs.voucherify.io/reference/custom-event-object). A set of key/value pairs that you can attach to an event object. It can be useful for storing additional information about the event in a structured format. Event metadata schema is defined in the Dashboard > Project Settings > Event Schema > Edit particular event > Metadata property definition."
                        },
                        {
                            "key": "event",
                            "type": "string",
                            "label": "Event Name",
                            "secret": false,
                            "default": "{event.event ?? event.event}",
                            "required": false,
                            "description": "The name of the event that will be saved as a [custom event](https://docs.voucherify.io/reference/the-custom-event-object) in Voucherify."
                        },
                        {
                            "key": "type",
                            "type": "string",
                            "label": "Event Type",
                            "secret": false,
                            "default": "{event.event == '$pageview' ? 'page' : event.event == '$screen' ? 'screen' : event.event == '$groupidentify' ? 'group' : event.event in ('$identify', '$set') ? 'identify' : event.event == '$alias' ? 'alias' : 'track'}",
                            "required": true,
                            "description": "Type of the event. For example: identify, track, page, screen or group"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "addCustomEvent",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Create Or Update Customer",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event in ('$identify', '$set')",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "source_id",
                            "type": "string",
                            "label": "Source ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": true,
                            "description": "The `source_id` which identifies the [customer](https://docs.voucherify.io/reference/the-customer-object) in Voucherify."
                        },
                        {
                            "key": "name",
                            "type": "string",
                            "label": "Name",
                            "secret": false,
                            "default": "{person.properties.name}",
                            "required": false,
                            "description": "First name and last name of the [customer](https://docs.voucherify.io/reference/customer-object)."
                        },
                        {
                            "key": "first_name",
                            "type": "string",
                            "label": "First Name",
                            "secret": false,
                            "default": "{person.properties.first_name}",
                            "required": false,
                            "description": "First name of the [customer](https://docs.voucherify.io/reference/customer-object). It will be merged with `last_name` to create the `name` field."
                        },
                        {
                            "key": "last_name",
                            "type": "string",
                            "label": "Last Name",
                            "secret": false,
                            "default": "{person.properties.last_name}",
                            "required": false,
                            "description": "Last name of the [customer](https://docs.voucherify.io/reference/customer-object). It will be merged with `first_name` to create the `name` field."
                        },
                        {
                            "key": "description",
                            "type": "string",
                            "label": "Description",
                            "secret": false,
                            "default": "{person.properties.description}",
                            "required": false,
                            "description": "An arbitrary string that you can attach to a [customer](https://docs.voucherify.io/reference/customer-object) object."
                        },
                        {
                            "key": "email",
                            "type": "string",
                            "label": "Email Address",
                            "secret": false,
                            "default": "{person.properties.email}",
                            "required": false,
                            "description": "The email that identifies the [customer](https://docs.voucherify.io/reference/the-customer-object) in Voucherify."
                        },
                        {
                            "key": "phone",
                            "type": "string",
                            "label": "Phone",
                            "secret": false,
                            "default": "{person.properties.phone}",
                            "required": false,
                            "description": "Phone number of the [customer](https://docs.voucherify.io/reference/the-customer-object)."
                        },
                        {
                            "key": "birthdate",
                            "type": "string",
                            "label": "Birthdate",
                            "secret": false,
                            "default": "{person.properties.birthdate}",
                            "required": false,
                            "description": "Birthdate of the [customer](https://docs.voucherify.io/reference/the-customer-object). You can pass data here in `date` or `datetime` format (ISO 8601)."
                        },
                        {
                            "key": "address",
                            "type": "dictionary",
                            "label": "Address",
                            "secret": false,
                            "default": {
                                "city": "{person.properties.address.city}",
                                "state": "{person.properties.address.state}",
                                "street": "{person.properties.address.street}",
                                "country": "{person.properties.address.country}",
                                "postal_code": "{person.properties.address.postal_code}"
                            },
                            "required": false,
                            "description": "Address of the [customer](https://docs.voucherify.io/reference/the-customer-object)."
                        },
                        {
                            "key": "metadata",
                            "type": "dictionary",
                            "label": "Metadata",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{person.properties.metadata}"
                            },
                            "required": false,
                            "description": "A set of custom key/value pairs that you can attach to a customer. The metadata object stores all custom attributes assigned to the customer. It can be useful for storing additional information about the customer in a structured format."
                        },
                        {
                            "key": "type",
                            "type": "string",
                            "label": "Event Type",
                            "secret": false,
                            "default": "{event.event == '$pageview' ? 'page' : event.event == '$screen' ? 'screen' : event.event == '$groupidentify' ? 'group' : event.event in ('$identify', '$set') ? 'identify' : event.event == '$alias' ? 'alias' : 'track'}",
                            "required": true,
                            "description": "Type of the event. For example: identify, track, page, screen or group"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "upsertCustomer",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Assign Customer To Group",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event = '$groupidentify'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "customer",
                            "type": "dictionary",
                            "label": "Customer Object",
                            "secret": false,
                            "default": {
                                "email": "{event.email}",
                                "source_id": "{person.id}"
                            },
                            "required": true,
                            "description": "Object containing information about the [customer](https://docs.voucherify.io/reference/the-customer-object)."
                        },
                        {
                            "key": "group_id",
                            "type": "string",
                            "label": "Group ID",
                            "secret": false,
                            "default": "{event.groupId}",
                            "required": true,
                            "description": "The ID used to uniquely identify a group to which [customer](https://docs.voucherify.io/reference/the-customer-object) belongs."
                        },
                        {
                            "key": "traits",
                            "type": "dictionary",
                            "label": "Group Traits",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{person.properties}"
                            },
                            "required": false,
                            "description": "Traits of the group that will be created in customer [metadata](https://www.voucherify.io/glossary/metadata-custom-attributes)."
                        },
                        {
                            "key": "type",
                            "type": "string",
                            "label": "Event Type",
                            "secret": false,
                            "default": "{event.event == '$pageview' ? 'page' : event.event == '$screen' ? 'screen' : event.event == '$groupidentify' ? 'group' : event.event in ('$identify', '$set') ? 'identify' : event.event == '$alias' ? 'alias' : 'track'}",
                            "required": true,
                            "description": "Type of the event. For example: identify, track, page, screen or group."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "assignCustomerToGroup",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                }
            ],
            "mappings": null,
            "status": "alpha",
            "free": false,
            "type": "destination",
            "id": "segment-voucherify-actions",
            "name": "Voucherify",
            "hog": "return event",
            "inputs_schema": [
                {
                    "key": "apiKey",
                    "type": "string",
                    "label": "Application ID",
                    "secret": false,
                    "required": true,
                    "description": "Application ID can be found in [Voucherify dashboard](https://docs.voucherify.io/docs/authentication)."
                },
                {
                    "key": "secretKey",
                    "type": "string",
                    "label": "Secret Key",
                    "secret": true,
                    "required": true,
                    "description": "Secret Key can be found in [Voucherify dashboard](https://docs.voucherify.io/docs/authentication)."
                },
                {
                    "key": "customURL",
                    "type": "string",
                    "label": "Custom Voucherify URL",
                    "secret": false,
                    "required": true,
                    "description": "Check your API region in [Voucherify dashboard](https://app.voucherify.io/#/login) -> Project settings -> API endpoint. For example, if you are using a project with a URL: `https://us1.api.voucherify.io`, your Custom URL will be: `https://us1.segmentio.voucherify.io`. It also works for dedicated URLs."
                },
                {
                    "key": "debug_mode",
                    "type": "boolean",
                    "label": "Debug Mode",
                    "default": false,
                    "description": "Will log configuration and request details"
                }
            ],
            "category": [],
            "code_language": "hog",
            "description": "Send event data to Voucherify",
            "filters": null,
            "masking": null,
            "icon_url": "/static/services/voucherify.io.png"
        },
        {
            "mapping_templates": [
                {
                    "name": "Track Order Placed Event",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify')",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "DateCreated",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": true,
                            "description": "Date of cart creation. Default to current date and time."
                        },
                        {
                            "key": "OrderNumber",
                            "type": "string",
                            "label": "Order Number",
                            "secret": false,
                            "default": "{event.properties.OrderNumber}",
                            "required": false,
                            "description": "Order number from e-commerce platform."
                        },
                        {
                            "key": "SourceId",
                            "type": "string",
                            "label": "Order ID",
                            "secret": false,
                            "default": "{event.properties.SourceId}",
                            "required": false,
                            "description": "Order id from e-commerce platform (same as checkout id)."
                        },
                        {
                            "key": "TokenId",
                            "type": "string",
                            "label": "Token ID",
                            "secret": false,
                            "default": "{event.properties.TokenId}",
                            "required": false,
                            "description": "A reference to the order that is a string value."
                        },
                        {
                            "key": "CustomerId",
                            "type": "string",
                            "label": "Customer ID",
                            "secret": false,
                            "default": "{event.properties.CustomerId}",
                            "required": true,
                            "description": "Customer ID from e-commerce platform."
                        },
                        {
                            "key": "Url",
                            "type": "string",
                            "label": "Order URL",
                            "secret": false,
                            "default": "{event.properties.Url}",
                            "required": true,
                            "description": "Link for user to click on to see status."
                        },
                        {
                            "key": "OrderTotal",
                            "type": "string",
                            "label": "Order Total",
                            "secret": false,
                            "default": "{event.properties.OrderTotal}",
                            "required": true,
                            "description": "Total Order Value."
                        },
                        {
                            "key": "TotalSpent",
                            "type": "string",
                            "label": "Total Spent",
                            "secret": false,
                            "default": "{event.properties.TotalSpent}",
                            "required": true,
                            "description": "Total customer lifetime spend."
                        },
                        {
                            "key": "FirstName",
                            "type": "string",
                            "label": "First name",
                            "secret": false,
                            "default": "{event.properties.FirstName}",
                            "required": false,
                            "description": "Customer's first name."
                        },
                        {
                            "key": "lastName",
                            "type": "string",
                            "label": "Last name",
                            "secret": false,
                            "default": "{event.properties.lastName}",
                            "required": false,
                            "description": "Customer's last name."
                        },
                        {
                            "key": "Phone",
                            "type": "string",
                            "label": "Phone number",
                            "secret": false,
                            "default": "{event.properties.Phone}",
                            "required": true,
                            "description": "Customer's phone number."
                        },
                        {
                            "key": "Email",
                            "type": "string",
                            "label": "Email",
                            "secret": false,
                            "default": "{event.properties.Email}",
                            "required": false,
                            "description": "Customer's email address"
                        },
                        {
                            "key": "Zip",
                            "type": "string",
                            "label": "Zip code",
                            "secret": false,
                            "default": "{event.properties.Zip}",
                            "required": true,
                            "description": "Customer's postal code"
                        },
                        {
                            "key": "LastUpdated",
                            "type": "string",
                            "label": "Last Updated",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": false,
                            "description": "The date and time when the updates interacted with."
                        },
                        {
                            "key": "ProductImageUrl",
                            "type": "string",
                            "label": "Product Image URL",
                            "secret": false,
                            "default": "{event.properties.ProductImageUrl}",
                            "required": false,
                            "description": "URL with product image."
                        },
                        {
                            "key": "LinkReference",
                            "type": "string",
                            "label": "Link reference",
                            "secret": false,
                            "default": "{event.properties.LinkReference}",
                            "required": false,
                            "description": "Used as a key to link events together."
                        },
                        {
                            "key": "HomepageUrl",
                            "type": "string",
                            "label": "Homepage URL",
                            "secret": false,
                            "default": "{event.properties.HomepageUrl}",
                            "required": false,
                            "description": "URL of the tenant's e-commerce homepage."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "trackOrderPlaced",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                }
            ],
            "mappings": null,
            "status": "alpha",
            "free": false,
            "type": "destination",
            "id": "segment-actions-voyage",
            "name": "Voyage",
            "hog": "return event",
            "inputs_schema": [
                {
                    "key": "apiKey",
                    "type": "string",
                    "label": "API Key",
                    "secret": false,
                    "required": true,
                    "description": "Voyage API key. You can create a new API key or find your existing API key in the Advanced section of your [Settings page](https://app.voyagetext.com/dashboard/settings/advanced)."
                },
                {
                    "key": "debug_mode",
                    "type": "boolean",
                    "label": "Debug Mode",
                    "default": false,
                    "description": "Will log configuration and request details"
                }
            ],
            "category": [],
            "code_language": "hog",
            "description": "Send event data to Voyage",
            "filters": null,
            "masking": null,
            "icon_url": "/static/services/voyagesms.com.png"
        },
        {
            "mapping_templates": [
                {
                    "name": "Track Event",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify')",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "name",
                            "type": "string",
                            "label": "Name",
                            "secret": false,
                            "default": "{event.event}",
                            "required": true,
                            "description": "Name of the event"
                        },
                        {
                            "key": "properties",
                            "type": "dictionary",
                            "label": "Properties",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.properties}"
                            },
                            "required": false,
                            "description": "JSON object containing additional properties that will be associated with the event."
                        },
                        {
                            "key": "vwoUuid",
                            "type": "string",
                            "label": "VWO UUID",
                            "secret": false,
                            "default": "{event.properties.vwo_uuid}",
                            "required": true,
                            "description": "VWO UUID"
                        },
                        {
                            "key": "page",
                            "type": "dictionary",
                            "label": "Page",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.context.page}"
                            },
                            "required": false,
                            "description": "Contains context information regarding a webpage"
                        },
                        {
                            "key": "ip",
                            "type": "string",
                            "label": "IP Address",
                            "secret": false,
                            "default": "{event.properties.$ip}",
                            "required": false,
                            "description": "IP address of the user"
                        },
                        {
                            "key": "userAgent",
                            "type": "string",
                            "label": "User Agent",
                            "secret": false,
                            "default": "{event.properties.$raw_user_agent}",
                            "required": false,
                            "description": "User-Agent of the user"
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": false,
                            "description": "Timestamp on the event"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "trackEvent",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Identify User",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event in ('$identify', '$set')",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "attributes",
                            "type": "dictionary",
                            "label": "attributes",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{person.properties}"
                            },
                            "required": true,
                            "description": "Visitor's attributes to be mapped"
                        },
                        {
                            "key": "vwoUuid",
                            "type": "string",
                            "label": "VWO UUID",
                            "secret": false,
                            "default": "{person.properties.vwo_uuid}",
                            "required": true,
                            "description": "VWO UUID"
                        },
                        {
                            "key": "page",
                            "type": "dictionary",
                            "label": "Page",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.context.page}"
                            },
                            "required": false,
                            "description": "Contains context information regarding a webpage"
                        },
                        {
                            "key": "ip",
                            "type": "string",
                            "label": "IP Address",
                            "secret": false,
                            "default": "{event.properties.$ip}",
                            "required": false,
                            "description": "IP address of the user"
                        },
                        {
                            "key": "userAgent",
                            "type": "string",
                            "label": "User Agent",
                            "secret": false,
                            "default": "{event.properties.$raw_user_agent}",
                            "required": false,
                            "description": "User-Agent of the user"
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": false,
                            "description": "Timestamp on the event"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "identifyUser",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Page Visit",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event = '$pageview'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "url",
                            "type": "string",
                            "label": "Page URL",
                            "secret": false,
                            "default": "{event.properties.$current_url}",
                            "required": false,
                            "description": "URL of the webpage"
                        },
                        {
                            "key": "vwoUuid",
                            "type": "string",
                            "label": "VWO UUID",
                            "secret": false,
                            "default": "{event.properties.vwo_uuid}",
                            "required": true,
                            "description": "VWO UUID"
                        },
                        {
                            "key": "page",
                            "type": "dictionary",
                            "label": "Page",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.context.page}"
                            },
                            "required": false,
                            "description": "Contains context information regarding a webpage"
                        },
                        {
                            "key": "ip",
                            "type": "string",
                            "label": "IP Address",
                            "secret": false,
                            "default": "{event.properties.$ip}",
                            "required": false,
                            "description": "IP address of the user"
                        },
                        {
                            "key": "userAgent",
                            "type": "string",
                            "label": "User Agent",
                            "secret": false,
                            "default": "{event.properties.$raw_user_agent}",
                            "required": false,
                            "description": "User-Agent of the user"
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": false,
                            "description": "Timestamp on the event"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "pageVisit",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Sync Audience",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event = 'Audience Entered' or event = 'Audience Exited'",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "name",
                            "type": "string",
                            "label": "Event Name",
                            "secret": false,
                            "default": "{event.event}",
                            "required": true,
                            "description": "Name of the event"
                        },
                        {
                            "key": "userId",
                            "type": "string",
                            "label": "User ID",
                            "secret": false,
                            "default": "{person.id}",
                            "required": false,
                            "description": "An unique identifier for the user"
                        },
                        {
                            "key": "anonymousId",
                            "type": "string",
                            "label": "Anonymous ID",
                            "secret": false,
                            "default": "{event.distinct_id}",
                            "required": false,
                            "description": "Anonymous ID for users"
                        },
                        {
                            "key": "audienceId",
                            "type": "string",
                            "label": "Audience ID",
                            "secret": false,
                            "default": "{event.properties.audience_key}",
                            "required": true,
                            "description": "Segment's audience ID"
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "syncAudience",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                }
            ],
            "mappings": null,
            "status": "alpha",
            "free": false,
            "type": "destination",
            "id": "segment-actions-vwo-cloud",
            "name": "VWO Cloud Mode",
            "hog": "return event",
            "inputs_schema": [
                {
                    "key": "vwoAccountId",
                    "type": "string",
                    "label": "Your VWO account ID",
                    "secret": false,
                    "required": true,
                    "description": "Enter your VWO Account ID"
                },
                {
                    "key": "apikey",
                    "type": "string",
                    "label": "VWO SDK Key",
                    "secret": false,
                    "required": false,
                    "description": "VWO Fullstack SDK Key. It is mandatory when using the VWO Fullstack suite."
                },
                {
                    "key": "region",
                    "type": "choice",
                    "label": "Region",
                    "secret": false,
                    "choices": [
                        {
                            "label": "US",
                            "value": "US"
                        },
                        {
                            "label": "Europe",
                            "value": "EU"
                        },
                        {
                            "label": "Asia",
                            "value": "AS"
                        }
                    ],
                    "default": "US",
                    "required": false,
                    "description": "VWO Region to sync data to. Default is US"
                },
                {
                    "key": "debug_mode",
                    "type": "boolean",
                    "label": "Debug Mode",
                    "default": false,
                    "description": "Will log configuration and request details"
                }
            ],
            "category": [],
            "code_language": "hog",
            "description": "Send event data to VWO Cloud Mode",
            "filters": null,
            "masking": null,
            "icon_url": "/static/services/vwo.com.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-webengage",
            "name": "WebEngage",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["User Engagement Platforms"],
            "code_language": "hog",
            "description": "Send events to WebEngage.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/WebEngage.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-woopra",
            "name": "Woopra",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Analytics"],
            "code_language": "hog",
            "description": "Send events to Woopra.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Woopra.svg"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-wootric",
            "name": "Wootric",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Customer Service"],
            "code_language": "hog",
            "description": "Send events to Wootric.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Wootric.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-x-ads",
            "name": "X Ads",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Advertising"],
            "code_language": "hog",
            "description": "Send events to X Ads.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/X_Ads.svg"
        },
        {
            "mapping_templates": [
                {
                    "name": "Send Analytics Events",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$set', '$groupidentify')",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "type",
                            "type": "string",
                            "label": "Event type",
                            "secret": false,
                            "default": "{event.event == '$pageview' ? 'page' : event.event == '$screen' ? 'screen' : event.event == '$groupidentify' ? 'group' : event.event in ('$identify', '$set') ? 'identify' : event.event == '$alias' ? 'alias' : 'track'}",
                            "required": true,
                            "description": "The type of the event"
                        },
                        {
                            "key": "identifiers",
                            "type": "dictionary",
                            "label": "Identifiers",
                            "secret": false,
                            "default": {
                                "email": "{person.properties.email}",
                                "phone": "{person.properties.phone}",
                                "userId": "{person.id}",
                                "anonymousId": "{event.distinct_id}"
                            },
                            "required": false,
                            "description": "The unique identifiers for the user"
                        },
                        {
                            "key": "event",
                            "type": "string",
                            "label": "Event Name",
                            "secret": false,
                            "default": "{event.event}",
                            "required": true,
                            "description": "The name of the Segment track() event."
                        },
                        {
                            "key": "properties",
                            "type": "dictionary",
                            "label": "Event Properties",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{event.properties}"
                            },
                            "required": false,
                            "description": "The properties of the Segment track() event."
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": true,
                            "description": "The timestamp of the event."
                        },
                        {
                            "key": "messageId",
                            "type": "string",
                            "label": "Message ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": true,
                            "description": "The message ID of the event."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "track",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                },
                {
                    "name": "Send User Profile Data",
                    "include_by_default": true,
                    "filters": {
                        "events": [
                            {
                                "id": null,
                                "name": "All events",
                                "type": "events",
                                "order": 0,
                                "properties": [
                                    {
                                        "key": "event in ('$identify', '$set')",
                                        "type": "hogql",
                                        "value": null
                                    }
                                ]
                            }
                        ]
                    },
                    "inputs": null,
                    "inputs_schema": [
                        {
                            "key": "type",
                            "type": "string",
                            "label": "Event type",
                            "secret": false,
                            "default": "{event.event == '$pageview' ? 'page' : event.event == '$screen' ? 'screen' : event.event == '$groupidentify' ? 'group' : event.event in ('$identify', '$set') ? 'identify' : event.event == '$alias' ? 'alias' : 'track'}",
                            "required": true,
                            "description": "The type of the event"
                        },
                        {
                            "key": "identifiers",
                            "type": "dictionary",
                            "label": "Identifiers",
                            "secret": false,
                            "default": {
                                "email": "{person.properties.email}",
                                "phone": "{person.properties.phone}",
                                "userId": "{person.id}",
                                "anonymousId": "{event.distinct_id}"
                            },
                            "required": false,
                            "description": "The unique identifiers for the user"
                        },
                        {
                            "key": "traits",
                            "type": "dictionary",
                            "label": "User Attributes",
                            "secret": false,
                            "default": {
                                "$$_extend_object": "{person.properties}"
                            },
                            "required": false,
                            "description": "Attributes assocatiated with the user."
                        },
                        {
                            "key": "timestamp",
                            "type": "string",
                            "label": "Timestamp",
                            "secret": false,
                            "default": "{event.timestamp}",
                            "required": true,
                            "description": "The timestamp of the event."
                        },
                        {
                            "key": "messageId",
                            "type": "string",
                            "label": "Message ID",
                            "secret": false,
                            "default": "{event.uuid}",
                            "required": true,
                            "description": "The message ID of the event."
                        },
                        {
                            "key": "internal_partner_action",
                            "type": "string",
                            "label": "Partner Action",
                            "hidden": true,
                            "secret": false,
                            "default": "identify",
                            "required": true,
                            "description": "The partner action to use"
                        }
                    ]
                }
            ],
            "mappings": null,
            "status": "alpha",
            "free": false,
            "type": "destination",
            "id": "segment-actions-xtremepush",
            "name": "Xtremepush",
            "hog": "return event",
            "inputs_schema": [
                {
                    "key": "url",
                    "type": "string",
                    "label": "URL",
                    "secret": false,
                    "required": true,
                    "description": "Xtremepush integration URL can be found on the Xtremepush integration overview page"
                },
                {
                    "key": "apiKey",
                    "type": "string",
                    "label": "API Key",
                    "secret": false,
                    "required": true,
                    "description": "Auth token for API can be found on the Xtremepush integration overview page"
                },
                {
                    "key": "debug_mode",
                    "type": "boolean",
                    "label": "Debug Mode",
                    "default": false,
                    "description": "Will log configuration and request details"
                }
            ],
            "category": [],
            "code_language": "hog",
            "description": "Send event data to Xtremepush",
            "filters": null,
            "masking": null,
            "icon_url": "/static/services/xtremepush.com.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "coming_soon",
            "free": true,
            "type": "destination",
            "id": "coming-soon-youbora",
            "name": "Youbora",
            "hog": "return event;",
            "inputs_schema": [],
            "category": ["Analytics"],
            "code_language": "hog",
            "description": "Send events to Youbora.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/coming-soon-destinations/Youbora.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "stable",
            "free": true,
            "type": "destination",
            "id": "template-zapier",
            "name": "Zapier",
            "hog": "let hook_path := inputs.hook;\nlet prefix := 'https://hooks.zapier.com/';\n// Remove the prefix if it exists\nif (position(hook_path, prefix) == 1) {\n  hook_path := replaceOne(hook_path, prefix, '');\n}\n\n// Remove leading slash if present to avoid double slashes\nif (position(hook_path, '/') == 1) {\n  hook_path := replaceOne(hook_path, '/', '');\n}\n\nlet res := fetch(f'https://hooks.zapier.com/{hook_path}', {\n  'method': 'POST',\n  'body': inputs.body\n});\n\nif (inputs.debug) {\n  print('Response', res.status, res.body);\n}",
            "inputs_schema": [
                {
                    "key": "hook",
                    "type": "string",
                    "label": "Zapier hook path",
                    "hidden": false,
                    "secret": false,
                    "required": true,
                    "description": "Your Zapier webhook URL or just the path. You can create your own or use our native Zapier integration https://zapier.com/apps/posthog/integrations"
                },
                {
                    "key": "body",
                    "type": "json",
                    "label": "JSON Body",
                    "hidden": false,
                    "secret": false,
                    "default": {
                        "data": {
                            "event": "{event.event}",
                            "person": {
                                "uuid": "{person.id}",
                                "properties": "{person.properties}"
                            },
                            "teamId": "{project.id}",
                            "eventUuid": "{event.uuid}",
                            "timestamp": "{event.timestamp}",
                            "distinctId": "{event.distinct_id}",
                            "properties": "{event.properties}",
                            "elementsChain": "{event.elementsChain}"
                        },
                        "hook": {
                            "id": "{source.url}",
                            "event": "{event}",
                            "target": "https://hooks.zapier.com"
                        }
                    },
                    "required": false
                },
                {
                    "key": "debug",
                    "type": "boolean",
                    "label": "Log responses",
                    "hidden": false,
                    "secret": false,
                    "default": false,
                    "required": false,
                    "description": "Logs the response of http calls for debugging."
                }
            ],
            "category": ["Custom"],
            "code_language": "hog",
            "description": "Trigger Zaps in Zapier based on PostHog events. NOTE: Typically this is created from within Zapier using the PostHog app there.",
            "filters": null,
            "masking": null,
            "icon_url": "/static/services/zapier.png"
        },
        {
            "mapping_templates": null,
            "mappings": null,
            "status": "beta",
            "free": false,
            "type": "destination",
            "id": "template-zendesk",
            "name": "Zendesk",
            "hog": "if (empty(inputs.email) or empty(inputs.name)) {\n    print('`email` or `name` input is empty. Not creating a contact.')\n    return\n}\n\nlet body := {\n    'user': {\n        'email': inputs.email,\n        'name': inputs.name,\n        'skip_verify_email': true,\n        'user_fields': {}\n    }\n}\n\nfor (let key, value in inputs.attributes) {\n    if (not empty(value) and key != 'email' and key != 'name') {\n        body.user.user_fields[key] := value\n    }\n}\n\nfetch(f'https://{inputs.subdomain}.zendesk.com/api/v2/users/create_or_update', {\n  'headers': {\n    'Authorization': f'Basic {base64Encode(f'{inputs.admin_email}/token:{inputs.token}')}',\n    'Content-Type': 'application/json'\n  },\n  'body': body,\n  'method': 'POST'\n});",
            "inputs_schema": [
                {
                    "key": "subdomain",
                    "type": "string",
                    "label": "Zendesk subdomain",
                    "secret": false,
                    "required": true,
                    "description": "Generally, Your Zendesk URL has two parts: a subdomain name you chose when you set up your account, followed by zendesk.com (for example: mycompany.zendesk.com). Please share the subdomain name with us so we can set up your account."
                },
                {
                    "key": "admin_email",
                    "type": "string",
                    "label": "API user email",
                    "secret": true,
                    "required": true,
                    "description": "Enter the email of an admin in Zendesk. Activity using the API key will be attributed to this user."
                },
                {
                    "key": "token",
                    "hint": "Enter your Zendesk API Token",
                    "type": "string",
                    "label": "API token",
                    "secret": true,
                    "required": true
                },
                {
                    "key": "email",
                    "hint": "The email of the user you want to create or update.",
                    "type": "string",
                    "label": "User email",
                    "secret": false,
                    "default": "{person.properties.email}",
                    "required": true
                },
                {
                    "key": "name",
                    "hint": "The name of the user you want to create or update.",
                    "type": "string",
                    "label": "User name",
                    "secret": false,
                    "default": "{person.properties.name}",
                    "required": true
                },
                {
                    "key": "attributes",
                    "type": "dictionary",
                    "label": "Attribute mapping",
                    "secret": false,
                    "default": {
                        "plan": "{person.properties.plan}",
                        "phone": "{person.properties.phone}"
                    },
                    "required": false,
                    "description": "Map of Zendesk user fields and their values. You'll need to create User fields in Zendesk for these to work."
                }
            ],
            "category": ["Customer Success"],
            "code_language": "hog",
            "description": "Update contacts in Zendesk",
            "filters": {
                "events": [
                    {
                        "id": "$identify",
                        "name": "$identify",
                        "type": "events",
                        "order": 0
                    },
                    {
                        "id": "$set",
                        "name": "$set",
                        "type": "events",
                        "order": 1
                    }
                ],
                "actions": [],
                "filter_test_accounts": true
            },
            "masking": null,
            "icon_url": "/static/services/zendesk.png"
        }
    ]
}
