# Generated by Django 3.2.15 on 2022-11-04 12:42

import django.contrib.postgres.fields
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models

import posthog.models.utils


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("posthog", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="License",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("plan", models.CharField(max_length=200)),
                ("valid_until", models.DateTimeField()),
                ("key", models.CharField(max_length=200)),
                ("max_users", models.IntegerField(default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Hook",
            fields=[
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                ("event", models.CharField(db_index=True, max_length=64, verbose_name="Event")),
                ("target", models.URLField(max_length=255, verbose_name="Target URL")),
                (
                    "id",
                    models.CharField(
                        default=posthog.models.utils.generate_random_token,
                        max_length=50,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("resource_id", models.IntegerField(blank=True, null=True)),
                (
                    "team",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="rest_hooks", to="posthog.team"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rest_hooks",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ExplicitTeamMembership",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=posthog.models.utils.UUIDT, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ("level", models.PositiveSmallIntegerField(choices=[(1, "member"), (8, "administrator")], default=1)),
                ("joined_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "parent_membership",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="explicit_team_memberships",
                        related_query_name="explicit_team_membership",
                        to="posthog.organizationmembership",
                    ),
                ),
                (
                    "team",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="explicit_memberships",
                        related_query_name="explicit_membership",
                        to="posthog.team",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="EnterprisePropertyDefinition",
            fields=[
                (
                    "propertydefinition_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="posthog.propertydefinition",
                    ),
                ),
                ("description", models.TextField(blank=True, default="", null=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "deprecated_tags",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=32), blank=True, default=list, null=True, size=None
                    ),
                ),
                (
                    "deprecated_tags_v2",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=32),
                        blank=True,
                        db_column="tags",
                        default=None,
                        null=True,
                        size=None,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("posthog.propertydefinition",),
        ),
        migrations.CreateModel(
            name="EnterpriseEventDefinition",
            fields=[
                (
                    "eventdefinition_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="posthog.eventdefinition",
                    ),
                ),
                ("description", models.TextField(blank=True, default="", null=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("verified", models.BooleanField(blank=True, default=False)),
                ("verified_at", models.DateTimeField(blank=True, null=True)),
                (
                    "deprecated_tags",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=32), blank=True, default=list, null=True, size=None
                    ),
                ),
                (
                    "deprecated_tags_v2",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=32),
                        blank=True,
                        db_column="tags",
                        default=None,
                        null=True,
                        size=None,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="event_definitions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL
                    ),
                ),
                (
                    "verified_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="verifying_user",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("posthog.eventdefinition",),
        ),
        migrations.CreateModel(
            name="DashboardPrivilege",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=posthog.models.utils.UUIDT, editable=False, primary_key=True, serialize=False
                    ),
                ),
                (
                    "level",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (21, "Everyone in the project can edit"),
                            (37, "Only those invited to this dashboard can edit"),
                        ]
                    ),
                ),
                ("added_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "dashboard",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="privileges",
                        related_query_name="privilege",
                        to="posthog.dashboard",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="explicit_dashboard_privileges",
                        related_query_name="explicit_dashboard_privilege",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddConstraint(
            model_name="explicitteammembership",
            constraint=models.UniqueConstraint(
                fields=("team", "parent_membership"), name="unique_explicit_team_membership"
            ),
        ),
        migrations.AddConstraint(
            model_name="dashboardprivilege",
            constraint=models.UniqueConstraint(
                fields=("dashboard", "user"), name="unique_explicit_dashboard_privilege"
            ),
        ),
    ]
