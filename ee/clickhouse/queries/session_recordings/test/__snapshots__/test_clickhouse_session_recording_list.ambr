# name: TestClickhouseSessionRecordingsList.test_event_filter_matching_with_no_session_id
  '
  
  SELECT session_recordings.session_id,
         any(session_recordings.start_time) as start_time,
         any(session_recordings.end_time) as end_time,
         any(session_recordings.duration) as duration,
         any(session_recordings.distinct_id) as distinct_id ,
         countIf(event = '$pageview') as count_event_match_0
  FROM
    (SELECT distinct_id,
            event,
            team_id,
            timestamp ,
            "$session_id" as session_id
     FROM events
     WHERE team_id = 2
       AND event IN ['$pageview']
       AND timestamp >= '2021-01-13 12:00:00'
       AND timestamp <= '2021-01-22 11:59:59' ) AS events
  JOIN
    (SELECT session_id,
            any(window_id) as window_id,
            MIN(timestamp) AS start_time,
            MAX(timestamp) AS end_time,
            dateDiff('second', toDateTime(MIN(timestamp)), toDateTime(MAX(timestamp))) as duration,
            any(distinct_id) as distinct_id,
            SUM(has_full_snapshot) as full_snapshots
     FROM session_recording_events
     WHERE team_id = 2
       AND timestamp >= '2021-01-13 12:00:00'
       AND timestamp <= '2021-01-22 11:59:59'
     GROUP BY session_id
     HAVING full_snapshots > 0
     AND start_time >= '2021-01-14 00:00:00'
     AND start_time <= '2021-01-21 23:59:59') AS session_recordings ON session_recordings.distinct_id = events.distinct_id
  JOIN
    (SELECT distinct_id,
            argMax(person_id, version) as person_id
     FROM person_distinct_id2
     WHERE team_id = 2
     GROUP BY distinct_id
     HAVING argMax(is_deleted, version) = 0) as pdi ON pdi.distinct_id = session_recordings.distinct_id
  WHERE ((notEmpty(events.session_id)
          AND events.session_id == session_recordings.session_id)
         OR (empty(events.session_id)
             AND (events.timestamp >= session_recordings.start_time
                  AND events.timestamp <= session_recordings.end_time)))
  GROUP BY session_recordings.session_id
  HAVING 1 = 1
  AND count_event_match_0 > 0
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0
  '
---
# name: TestClickhouseSessionRecordingsList.test_event_filter_matching_with_no_session_id.1
  '
  
  SELECT session_recordings.session_id,
         any(session_recordings.start_time) as start_time,
         any(session_recordings.end_time) as end_time,
         any(session_recordings.duration) as duration,
         any(session_recordings.distinct_id) as distinct_id ,
         countIf(event = '$autocapture') as count_event_match_0
  FROM
    (SELECT distinct_id,
            event,
            team_id,
            timestamp ,
            "$session_id" as session_id
     FROM events
     WHERE team_id = 2
       AND event IN ['$autocapture']
       AND timestamp >= '2021-01-13 12:00:00'
       AND timestamp <= '2021-01-22 11:59:59' ) AS events
  JOIN
    (SELECT session_id,
            any(window_id) as window_id,
            MIN(timestamp) AS start_time,
            MAX(timestamp) AS end_time,
            dateDiff('second', toDateTime(MIN(timestamp)), toDateTime(MAX(timestamp))) as duration,
            any(distinct_id) as distinct_id,
            SUM(has_full_snapshot) as full_snapshots
     FROM session_recording_events
     WHERE team_id = 2
       AND timestamp >= '2021-01-13 12:00:00'
       AND timestamp <= '2021-01-22 11:59:59'
     GROUP BY session_id
     HAVING full_snapshots > 0
     AND start_time >= '2021-01-14 00:00:00'
     AND start_time <= '2021-01-21 23:59:59') AS session_recordings ON session_recordings.distinct_id = events.distinct_id
  JOIN
    (SELECT distinct_id,
            argMax(person_id, version) as person_id
     FROM person_distinct_id2
     WHERE team_id = 2
     GROUP BY distinct_id
     HAVING argMax(is_deleted, version) = 0) as pdi ON pdi.distinct_id = session_recordings.distinct_id
  WHERE ((notEmpty(events.session_id)
          AND events.session_id == session_recordings.session_id)
         OR (empty(events.session_id)
             AND (events.timestamp >= session_recordings.start_time
                  AND events.timestamp <= session_recordings.end_time)))
  GROUP BY session_recordings.session_id
  HAVING 1 = 1
  AND count_event_match_0 > 0
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0
  '
---
# name: TestClickhouseSessionRecordingsList.test_event_filter_with_cohort_properties
  '
  
  SELECT count(*)
  FROM
    (SELECT 1
     FROM cohortpeople
     WHERE team_id = 2
       AND cohort_id = 2
     GROUP BY person_id,
              cohort_id,
              team_id,
              version
     HAVING sum(sign) > 0)
  '
---
# name: TestClickhouseSessionRecordingsList.test_event_filter_with_cohort_properties.1
  '
  
  SELECT count(*)
  FROM
    (SELECT 1
     FROM cohortpeople
     WHERE team_id = 2
       AND cohort_id = 2
     GROUP BY person_id,
              cohort_id,
              team_id,
              version
     HAVING sum(sign) > 0)
  '
---
# name: TestClickhouseSessionRecordingsList.test_event_filter_with_cohort_properties.2
  '
  
  SELECT session_recordings.session_id,
         any(session_recordings.start_time) as start_time,
         any(session_recordings.end_time) as end_time,
         any(session_recordings.duration) as duration,
         any(session_recordings.distinct_id) as distinct_id
  FROM
    (SELECT session_id,
            any(window_id) as window_id,
            MIN(timestamp) AS start_time,
            MAX(timestamp) AS end_time,
            dateDiff('second', toDateTime(MIN(timestamp)), toDateTime(MAX(timestamp))) as duration,
            any(distinct_id) as distinct_id,
            SUM(has_full_snapshot) as full_snapshots
     FROM session_recording_events
     WHERE team_id = 2
       AND timestamp >= '2021-08-13 12:00:00'
       AND timestamp <= '2021-08-22 11:59:59'
     GROUP BY session_id
     HAVING full_snapshots > 0
     AND start_time >= '2021-08-14 00:00:00'
     AND start_time <= '2021-08-21 23:59:59') AS session_recordings
  JOIN
    (SELECT distinct_id,
            argMax(person_id, version) as person_id
     FROM person_distinct_id2
     WHERE team_id = 2
     GROUP BY distinct_id
     HAVING argMax(is_deleted, version) = 0) as pdi ON pdi.distinct_id = session_recordings.distinct_id
  INNER JOIN
    (SELECT id
     FROM person
     WHERE team_id = 2
     GROUP BY id
     HAVING max(is_deleted) = 0) person ON person.id = pdi.person_id
  WHERE 1 = 1
    AND (pdi.person_id IN
           (SELECT person_id
            FROM cohortpeople
            WHERE team_id = 2
              AND cohort_id = 2
            GROUP BY person_id,
                     cohort_id,
                     team_id,
                     version
            HAVING sum(sign) > 0))
  GROUP BY session_recordings.session_id
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0
  '
---
# name: TestClickhouseSessionRecordingsList.test_event_filter_with_matching_on_session_id
  '
  
  SELECT session_recordings.session_id,
         any(session_recordings.start_time) as start_time,
         any(session_recordings.end_time) as end_time,
         any(session_recordings.duration) as duration,
         any(session_recordings.distinct_id) as distinct_id ,
         countIf(event = '$pageview') as count_event_match_0
  FROM
    (SELECT distinct_id,
            event,
            team_id,
            timestamp ,
            "$session_id" as session_id
     FROM events
     WHERE team_id = 2
       AND event IN ['$pageview']
       AND timestamp >= '2021-01-13 12:00:00'
       AND timestamp <= '2021-01-22 11:59:59' ) AS events
  JOIN
    (SELECT session_id,
            any(window_id) as window_id,
            MIN(timestamp) AS start_time,
            MAX(timestamp) AS end_time,
            dateDiff('second', toDateTime(MIN(timestamp)), toDateTime(MAX(timestamp))) as duration,
            any(distinct_id) as distinct_id,
            SUM(has_full_snapshot) as full_snapshots
     FROM session_recording_events
     WHERE team_id = 2
       AND timestamp >= '2021-01-13 12:00:00'
       AND timestamp <= '2021-01-22 11:59:59'
     GROUP BY session_id
     HAVING full_snapshots > 0
     AND start_time >= '2021-01-14 00:00:00'
     AND start_time <= '2021-01-21 23:59:59') AS session_recordings ON session_recordings.distinct_id = events.distinct_id
  JOIN
    (SELECT distinct_id,
            argMax(person_id, version) as person_id
     FROM person_distinct_id2
     WHERE team_id = 2
     GROUP BY distinct_id
     HAVING argMax(is_deleted, version) = 0) as pdi ON pdi.distinct_id = session_recordings.distinct_id
  WHERE ((notEmpty(events.session_id)
          AND events.session_id == session_recordings.session_id)
         OR (empty(events.session_id)
             AND (events.timestamp >= session_recordings.start_time
                  AND events.timestamp <= session_recordings.end_time)))
  GROUP BY session_recordings.session_id
  HAVING 1 = 1
  AND count_event_match_0 > 0
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0
  '
---
# name: TestClickhouseSessionRecordingsList.test_event_filter_with_matching_on_session_id.1
  '
  
  SELECT session_recordings.session_id,
         any(session_recordings.start_time) as start_time,
         any(session_recordings.end_time) as end_time,
         any(session_recordings.duration) as duration,
         any(session_recordings.distinct_id) as distinct_id ,
         countIf(event = '$autocapture') as count_event_match_0
  FROM
    (SELECT distinct_id,
            event,
            team_id,
            timestamp ,
            "$session_id" as session_id
     FROM events
     WHERE team_id = 2
       AND event IN ['$autocapture']
       AND timestamp >= '2021-01-13 12:00:00'
       AND timestamp <= '2021-01-22 11:59:59' ) AS events
  JOIN
    (SELECT session_id,
            any(window_id) as window_id,
            MIN(timestamp) AS start_time,
            MAX(timestamp) AS end_time,
            dateDiff('second', toDateTime(MIN(timestamp)), toDateTime(MAX(timestamp))) as duration,
            any(distinct_id) as distinct_id,
            SUM(has_full_snapshot) as full_snapshots
     FROM session_recording_events
     WHERE team_id = 2
       AND timestamp >= '2021-01-13 12:00:00'
       AND timestamp <= '2021-01-22 11:59:59'
     GROUP BY session_id
     HAVING full_snapshots > 0
     AND start_time >= '2021-01-14 00:00:00'
     AND start_time <= '2021-01-21 23:59:59') AS session_recordings ON session_recordings.distinct_id = events.distinct_id
  JOIN
    (SELECT distinct_id,
            argMax(person_id, version) as person_id
     FROM person_distinct_id2
     WHERE team_id = 2
     GROUP BY distinct_id
     HAVING argMax(is_deleted, version) = 0) as pdi ON pdi.distinct_id = session_recordings.distinct_id
  WHERE ((notEmpty(events.session_id)
          AND events.session_id == session_recordings.session_id)
         OR (empty(events.session_id)
             AND (events.timestamp >= session_recordings.start_time
                  AND events.timestamp <= session_recordings.end_time)))
  GROUP BY session_recordings.session_id
  HAVING 1 = 1
  AND count_event_match_0 > 0
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0
  '
---
# name: TestClickhouseSessionRecordingsList.test_event_filter_with_person_properties
  '
  
  SELECT session_recordings.session_id,
         any(session_recordings.start_time) as start_time,
         any(session_recordings.end_time) as end_time,
         any(session_recordings.duration) as duration,
         any(session_recordings.distinct_id) as distinct_id
  FROM
    (SELECT session_id,
            any(window_id) as window_id,
            MIN(timestamp) AS start_time,
            MAX(timestamp) AS end_time,
            dateDiff('second', toDateTime(MIN(timestamp)), toDateTime(MAX(timestamp))) as duration,
            any(distinct_id) as distinct_id,
            SUM(has_full_snapshot) as full_snapshots
     FROM session_recording_events
     WHERE team_id = 2
       AND timestamp >= '2021-01-13 12:00:00'
       AND timestamp <= '2021-01-22 11:59:59'
     GROUP BY session_id
     HAVING full_snapshots > 0
     AND start_time >= '2021-01-14 00:00:00'
     AND start_time <= '2021-01-21 23:59:59') AS session_recordings
  JOIN
    (SELECT distinct_id,
            argMax(person_id, version) as person_id
     FROM person_distinct_id2
     WHERE team_id = 2
     GROUP BY distinct_id
     HAVING argMax(is_deleted, version) = 0) as pdi ON pdi.distinct_id = session_recordings.distinct_id
  INNER JOIN
    (SELECT id
     FROM person
     WHERE team_id = 2
     GROUP BY id
     HAVING max(is_deleted) = 0
     AND (has(['bla'], replaceRegexpAll(JSONExtractRaw(argMax(person.properties, _timestamp), 'email'), '^"|"$', '')))) person ON person.id = pdi.person_id
  WHERE 1 = 1
  GROUP BY session_recordings.session_id
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0
  '
---
