# name: TestFunnelStrictStepsBreakdown.test_funnel_aggregate_by_groups_breakdown_group
  '
  
  SELECT groupArray(value)
  FROM
    (SELECT replaceRegexpAll(JSONExtractRaw(group_properties_0, 'industry'), '^"|"$', '') AS value,
            count(*) as count
     FROM events e
     INNER JOIN
       (SELECT group_key,
               argMax(group_properties, _timestamp) AS group_properties_0
        FROM groups
        WHERE team_id = 2
          AND group_type_index = 0
        GROUP BY group_key) groups_0 ON "$group_0" == groups_0.group_key
     WHERE team_id = 2
       AND event IN ['buy', 'play movie', 'sign up']
       AND timestamp >= toDateTime('2020-01-01 00:00:00')
       AND timestamp <= toDateTime('2020-01-08 23:59:59')
       AND (NOT has([''], "$group_0"))
     GROUP BY value
     ORDER BY count DESC, value DESC
     LIMIT 25
     OFFSET 0)
  '
---
# name: TestFunnelStrictStepsBreakdown.test_funnel_aggregate_by_groups_breakdown_group.1
  '
  
  SELECT countIf(steps = 1) step_1,
         countIf(steps = 2) step_2,
         countIf(steps = 3) step_3,
         avg(step_1_average_conversion_time_inner) step_1_average_conversion_time,
         avg(step_2_average_conversion_time_inner) step_2_average_conversion_time,
         median(step_1_median_conversion_time_inner) step_1_median_conversion_time,
         median(step_2_median_conversion_time_inner) step_2_median_conversion_time,
         prop
  FROM
    (SELECT aggregation_target,
            steps,
            avg(step_1_conversion_time) step_1_average_conversion_time_inner,
            avg(step_2_conversion_time) step_2_average_conversion_time_inner,
            median(step_1_conversion_time) step_1_median_conversion_time_inner,
            median(step_2_conversion_time) step_2_median_conversion_time_inner,
            prop
     FROM
       (SELECT aggregation_target,
               steps,
               max(steps) over (PARTITION BY aggregation_target,
                                             prop) as max_steps,
                               step_1_conversion_time,
                               step_2_conversion_time,
                               prop
        FROM
          (SELECT *,
                  if(latest_0 < latest_1
                     AND latest_1 <= latest_0 + INTERVAL 7 DAY
                     AND latest_1 < latest_2
                     AND latest_2 <= latest_0 + INTERVAL 7 DAY, 3, if(latest_0 < latest_1
                                                                      AND latest_1 <= latest_0 + INTERVAL 7 DAY, 2, 1)) AS steps,
                  if(isNotNull(latest_1)
                     AND latest_1 <= latest_0 + INTERVAL 7 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time,
                  if(isNotNull(latest_2)
                     AND latest_2 <= latest_1 + INTERVAL 7 DAY, dateDiff('second', toDateTime(latest_1), toDateTime(latest_2)), NULL) step_2_conversion_time
           FROM
             (SELECT aggregation_target,
                     timestamp,
                     step_0,
                     latest_0,
                     step_1,
                     min(latest_1) over (PARTITION by aggregation_target,
                                                      prop
                                         ORDER BY timestamp DESC ROWS BETWEEN 1 PRECEDING AND 1 PRECEDING) latest_1,
                                        step_2,
                                        min(latest_2) over (PARTITION by aggregation_target,
                                                                         prop
                                                            ORDER BY timestamp DESC ROWS BETWEEN 2 PRECEDING AND 2 PRECEDING) latest_2 ,
                                                           if(has(['technology', 'finance'], prop), prop, 'Other') as prop
              FROM
                (SELECT *,
                        prop_vals as prop
                 FROM
                   (SELECT aggregation_target,
                           timestamp,
                           if(event = 'sign up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'play movie', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1,
                           if(event = 'buy', 1, 0) as step_2,
                           if(step_2 = 1, timestamp, null) as latest_2,
                           replaceRegexpAll(JSONExtractRaw(group_properties_0, 'industry'), '^"|"$', '') AS prop_basic,
                           prop_basic as prop,
                           argMinIf(prop, timestamp, isNotNull(prop)) over (PARTITION by aggregation_target) as prop_vals
                    FROM
                      (SELECT e.event as event,
                              e.team_id as team_id,
                              e.distinct_id as distinct_id,
                              e.timestamp as timestamp,
                              e."$group_0" as aggregation_target,
                              e."$group_0" as "$group_0",
                              groups_0.group_properties_0 as group_properties_0
                       FROM events e
                       INNER JOIN
                         (SELECT group_key,
                                 argMax(group_properties, _timestamp) AS group_properties_0
                          FROM groups
                          WHERE team_id = 2
                            AND group_type_index = 0
                          GROUP BY group_key) groups_0 ON "$group_0" == groups_0.group_key
                       WHERE team_id = 2
                         AND timestamp >= toDateTime('2020-01-01 00:00:00')
                         AND timestamp <= toDateTime('2020-01-08 23:59:59')
                         AND (NOT has([''], "$group_0")) ) events
                    WHERE (1=1) )))
           WHERE step_0 = 1 ))
     GROUP BY aggregation_target,
              steps,
              prop
     HAVING steps = max_steps)
  GROUP BY prop SETTINGS allow_experimental_window_functions = 1
  '
---
# name: TestFunnelStrictStepsBreakdown.test_funnel_breakdown_correct_breakdown_props_are_chosen
  '
  
  SELECT groupArray(value)
  FROM
    (SELECT array(replaceRegexpAll(JSONExtractRaw(properties, '$browser'), '^"|"$', '')) AS value,
            count(*) as count
     FROM events e
     WHERE team_id = 2
       AND event IN ['buy', 'sign up']
       AND timestamp >= toDateTime('2020-01-01 00:00:00')
       AND timestamp <= toDateTime('2020-01-08 23:59:59')
     GROUP BY value
     ORDER BY count DESC, value DESC
     LIMIT 25
     OFFSET 0)
  '
---
# name: TestFunnelStrictStepsBreakdown.test_funnel_breakdown_correct_breakdown_props_are_chosen.1
  '
  
  SELECT countIf(steps = 1) step_1,
         countIf(steps = 2) step_2,
         avg(step_1_average_conversion_time_inner) step_1_average_conversion_time,
         median(step_1_median_conversion_time_inner) step_1_median_conversion_time,
         prop
  FROM
    (SELECT aggregation_target,
            steps,
            avg(step_1_conversion_time) step_1_average_conversion_time_inner,
            median(step_1_conversion_time) step_1_median_conversion_time_inner,
            prop
     FROM
       (SELECT aggregation_target,
               steps,
               max(steps) over (PARTITION BY aggregation_target,
                                             prop) as max_steps,
                               step_1_conversion_time,
                               prop
        FROM
          (SELECT *,
                  if(latest_0 < latest_1
                     AND latest_1 <= latest_0 + INTERVAL 7 DAY, 2, 1) AS steps,
                  if(isNotNull(latest_1)
                     AND latest_1 <= latest_0 + INTERVAL 7 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
           FROM
             (SELECT aggregation_target,
                     timestamp,
                     step_0,
                     latest_0,
                     step_1,
                     min(latest_1) over (PARTITION by aggregation_target,
                                                      prop
                                         ORDER BY timestamp DESC ROWS BETWEEN 1 PRECEDING AND 1 PRECEDING) latest_1 ,
                                        if(has([[''], ['Mac'], ['Chrome'], ['Safari']], prop), prop, ['Other']) as prop
              FROM
                (SELECT *,
                        if(notEmpty(arrayFilter(x -> notEmpty(x), prop_vals)), prop_vals, ['']) as prop
                 FROM
                   (SELECT aggregation_target,
                           timestamp,
                           if(event = 'sign up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'buy'
                              AND (has(['xyz'], replaceRegexpAll(JSONExtractRaw(properties, '$version'), '^"|"$', ''))), 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1,
                           array(replaceRegexpAll(JSONExtractRaw(properties, '$browser'), '^"|"$', '')) AS prop_basic,
                           prop_basic as prop,
                           argMinIf(prop, timestamp, notEmpty(arrayFilter(x -> notEmpty(x), prop))) over (PARTITION by aggregation_target) as prop_vals
                    FROM
                      (SELECT e.event as event,
                              e.team_id as team_id,
                              e.distinct_id as distinct_id,
                              e.timestamp as timestamp,
                              pdi.person_id as aggregation_target,
                              e."properties" as "properties",
                              pdi.person_id as person_id
                       FROM events e
                       INNER JOIN
                         (SELECT distinct_id,
                                 argMax(person_id, version) as person_id
                          FROM person_distinct_id2
                          WHERE team_id = 2
                          GROUP BY distinct_id
                          HAVING argMax(is_deleted, version) = 0) AS pdi ON e.distinct_id = pdi.distinct_id
                       WHERE team_id = 2
                         AND timestamp >= toDateTime('2020-01-01 00:00:00')
                         AND timestamp <= toDateTime('2020-01-08 23:59:59') ) events
                    WHERE (1=1) )))
           WHERE step_0 = 1 ))
     GROUP BY aggregation_target,
              steps,
              prop
     HAVING steps = max_steps)
  GROUP BY prop SETTINGS allow_experimental_window_functions = 1
  '
---
# name: TestFunnelStrictStepsBreakdown.test_funnel_breakdown_correct_breakdown_props_are_chosen_for_step
  '
  
  SELECT groupArray(value)
  FROM
    (SELECT array(replaceRegexpAll(JSONExtractRaw(properties, '$browser'), '^"|"$', '')) AS value,
            count(*) as count
     FROM events e
     WHERE team_id = 2
       AND event = 'buy'
       AND timestamp >= toDateTime('2020-01-01 00:00:00')
       AND timestamp <= toDateTime('2020-01-08 23:59:59')
       AND (has(['xyz'], replaceRegexpAll(JSONExtractRaw(e.properties, '$version'), '^"|"$', '')))
     GROUP BY value
     ORDER BY count DESC, value DESC
     LIMIT 25
     OFFSET 0)
  '
---
# name: TestFunnelStrictStepsBreakdown.test_funnel_breakdown_correct_breakdown_props_are_chosen_for_step.1
  '
  
  SELECT countIf(steps = 1) step_1,
         countIf(steps = 2) step_2,
         avg(step_1_average_conversion_time_inner) step_1_average_conversion_time,
         median(step_1_median_conversion_time_inner) step_1_median_conversion_time,
         prop
  FROM
    (SELECT aggregation_target,
            steps,
            avg(step_1_conversion_time) step_1_average_conversion_time_inner,
            median(step_1_conversion_time) step_1_median_conversion_time_inner,
            prop
     FROM
       (SELECT aggregation_target,
               steps,
               max(steps) over (PARTITION BY aggregation_target,
                                             prop) as max_steps,
                               step_1_conversion_time,
                               prop
        FROM
          (SELECT *,
                  if(latest_0 < latest_1
                     AND latest_1 <= latest_0 + INTERVAL 7 DAY, 2, 1) AS steps,
                  if(isNotNull(latest_1)
                     AND latest_1 <= latest_0 + INTERVAL 7 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
           FROM
             (SELECT aggregation_target,
                     timestamp,
                     step_0,
                     latest_0,
                     step_1,
                     min(latest_1) over (PARTITION by aggregation_target,
                                                      prop
                                         ORDER BY timestamp DESC ROWS BETWEEN 1 PRECEDING AND 1 PRECEDING) latest_1 ,
                                        if(has([['Safari'], ['Mac']], prop), prop, ['Other']) as prop
              FROM
                (SELECT *,
                        prop
                 FROM
                   (SELECT aggregation_target,
                           timestamp,
                           if(event = 'sign up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'buy'
                              AND (has(['xyz'], replaceRegexpAll(JSONExtractRaw(properties, '$version'), '^"|"$', ''))), 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1,
                           array(replaceRegexpAll(JSONExtractRaw(properties, '$browser'), '^"|"$', '')) AS prop_basic,
                           if(step_0 = 1, prop_basic, []) as prop_0,
                           if(step_1 = 1, prop_basic, []) as prop_1,
                           prop_1 as prop,
                           groupUniqArray(prop) over (PARTITION by aggregation_target) as prop_vals
                    FROM
                      (SELECT e.event as event,
                              e.team_id as team_id,
                              e.distinct_id as distinct_id,
                              e.timestamp as timestamp,
                              pdi.person_id as aggregation_target,
                              e."properties" as "properties",
                              pdi.person_id as person_id
                       FROM events e
                       INNER JOIN
                         (SELECT distinct_id,
                                 argMax(person_id, version) as person_id
                          FROM person_distinct_id2
                          WHERE team_id = 2
                          GROUP BY distinct_id
                          HAVING argMax(is_deleted, version) = 0) AS pdi ON e.distinct_id = pdi.distinct_id
                       WHERE team_id = 2
                         AND timestamp >= toDateTime('2020-01-01 00:00:00')
                         AND timestamp <= toDateTime('2020-01-08 23:59:59') ) events
                    WHERE (1=1) ) ARRAY
                 JOIN prop_vals as prop
                 WHERE prop != [] ))
           WHERE step_0 = 1 ))
     GROUP BY aggregation_target,
              steps,
              prop
     HAVING steps = max_steps)
  GROUP BY prop SETTINGS allow_experimental_window_functions = 1
  '
---
# name: TestFunnelStrictStepsBreakdown.test_funnel_breakdown_group
  '
  
  SELECT groupArray(value)
  FROM
    (SELECT replaceRegexpAll(JSONExtractRaw(group_properties_0, 'industry'), '^"|"$', '') AS value,
            count(*) as count
     FROM events e
     INNER JOIN
       (SELECT group_key,
               argMax(group_properties, _timestamp) AS group_properties_0
        FROM groups
        WHERE team_id = 2
          AND group_type_index = 0
        GROUP BY group_key) groups_0 ON "$group_0" == groups_0.group_key
     WHERE team_id = 2
       AND event IN ['buy', 'play movie', 'sign up']
       AND timestamp >= toDateTime('2020-01-01 00:00:00')
       AND timestamp <= toDateTime('2020-01-08 23:59:59')
     GROUP BY value
     ORDER BY count DESC, value DESC
     LIMIT 25
     OFFSET 0)
  '
---
# name: TestFunnelStrictStepsBreakdown.test_funnel_breakdown_group.1
  '
  
  SELECT countIf(steps = 1) step_1,
         countIf(steps = 2) step_2,
         countIf(steps = 3) step_3,
         avg(step_1_average_conversion_time_inner) step_1_average_conversion_time,
         avg(step_2_average_conversion_time_inner) step_2_average_conversion_time,
         median(step_1_median_conversion_time_inner) step_1_median_conversion_time,
         median(step_2_median_conversion_time_inner) step_2_median_conversion_time,
         prop
  FROM
    (SELECT aggregation_target,
            steps,
            avg(step_1_conversion_time) step_1_average_conversion_time_inner,
            avg(step_2_conversion_time) step_2_average_conversion_time_inner,
            median(step_1_conversion_time) step_1_median_conversion_time_inner,
            median(step_2_conversion_time) step_2_median_conversion_time_inner,
            prop
     FROM
       (SELECT aggregation_target,
               steps,
               max(steps) over (PARTITION BY aggregation_target,
                                             prop) as max_steps,
                               step_1_conversion_time,
                               step_2_conversion_time,
                               prop
        FROM
          (SELECT *,
                  if(latest_0 < latest_1
                     AND latest_1 <= latest_0 + INTERVAL 7 DAY
                     AND latest_1 < latest_2
                     AND latest_2 <= latest_0 + INTERVAL 7 DAY, 3, if(latest_0 < latest_1
                                                                      AND latest_1 <= latest_0 + INTERVAL 7 DAY, 2, 1)) AS steps,
                  if(isNotNull(latest_1)
                     AND latest_1 <= latest_0 + INTERVAL 7 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time,
                  if(isNotNull(latest_2)
                     AND latest_2 <= latest_1 + INTERVAL 7 DAY, dateDiff('second', toDateTime(latest_1), toDateTime(latest_2)), NULL) step_2_conversion_time
           FROM
             (SELECT aggregation_target,
                     timestamp,
                     step_0,
                     latest_0,
                     step_1,
                     min(latest_1) over (PARTITION by aggregation_target,
                                                      prop
                                         ORDER BY timestamp DESC ROWS BETWEEN 1 PRECEDING AND 1 PRECEDING) latest_1,
                                        step_2,
                                        min(latest_2) over (PARTITION by aggregation_target,
                                                                         prop
                                                            ORDER BY timestamp DESC ROWS BETWEEN 2 PRECEDING AND 2 PRECEDING) latest_2 ,
                                                           if(has(['technology', 'finance'], prop), prop, 'Other') as prop
              FROM
                (SELECT *,
                        prop_vals as prop
                 FROM
                   (SELECT aggregation_target,
                           timestamp,
                           if(event = 'sign up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'play movie', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1,
                           if(event = 'buy', 1, 0) as step_2,
                           if(step_2 = 1, timestamp, null) as latest_2,
                           replaceRegexpAll(JSONExtractRaw(group_properties_0, 'industry'), '^"|"$', '') AS prop_basic,
                           prop_basic as prop,
                           argMinIf(prop, timestamp, isNotNull(prop)) over (PARTITION by aggregation_target) as prop_vals
                    FROM
                      (SELECT e.event as event,
                              e.team_id as team_id,
                              e.distinct_id as distinct_id,
                              e.timestamp as timestamp,
                              pdi.person_id as aggregation_target,
                              pdi.person_id as person_id,
                              groups_0.group_properties_0 as group_properties_0
                       FROM events e
                       INNER JOIN
                         (SELECT distinct_id,
                                 argMax(person_id, version) as person_id
                          FROM person_distinct_id2
                          WHERE team_id = 2
                          GROUP BY distinct_id
                          HAVING argMax(is_deleted, version) = 0) AS pdi ON e.distinct_id = pdi.distinct_id
                       INNER JOIN
                         (SELECT group_key,
                                 argMax(group_properties, _timestamp) AS group_properties_0
                          FROM groups
                          WHERE team_id = 2
                            AND group_type_index = 0
                          GROUP BY group_key) groups_0 ON "$group_0" == groups_0.group_key
                       WHERE team_id = 2
                         AND timestamp >= toDateTime('2020-01-01 00:00:00')
                         AND timestamp <= toDateTime('2020-01-08 23:59:59') ) events
                    WHERE (1=1) )))
           WHERE step_0 = 1 ))
     GROUP BY aggregation_target,
              steps,
              prop
     HAVING steps = max_steps)
  GROUP BY prop SETTINGS allow_experimental_window_functions = 1
  '
---
# name: TestFunnelStrictStepsBreakdown.test_funnel_breakdown_group.2
  '
  
  SELECT groupArray(value)
  FROM
    (SELECT replaceRegexpAll(JSONExtractRaw(group_properties_0, 'industry'), '^"|"$', '') AS value,
            count(*) as count
     FROM events e
     INNER JOIN
       (SELECT group_key,
               argMax(group_properties, _timestamp) AS group_properties_0
        FROM groups
        WHERE team_id = 2
          AND group_type_index = 0
        GROUP BY group_key) groups_0 ON "$group_0" == groups_0.group_key
     WHERE team_id = 2
       AND event IN ['buy', 'play movie', 'sign up']
       AND timestamp >= toDateTime('2020-01-01 00:00:00')
       AND timestamp <= toDateTime('2020-01-08 23:59:59')
     GROUP BY value
     ORDER BY count DESC, value DESC
     LIMIT 25
     OFFSET 0)
  '
---
# name: TestFunnelStrictStepsBreakdown.test_funnel_breakdown_group.3
  '
  
  SELECT aggregation_target AS actor_id
  FROM
    (SELECT aggregation_target,
            steps,
            avg(step_1_conversion_time) step_1_average_conversion_time_inner,
            avg(step_2_conversion_time) step_2_average_conversion_time_inner,
            median(step_1_conversion_time) step_1_median_conversion_time_inner,
            median(step_2_conversion_time) step_2_median_conversion_time_inner,
            prop
     FROM
       (SELECT aggregation_target,
               steps,
               max(steps) over (PARTITION BY aggregation_target,
                                             prop) as max_steps,
                               step_1_conversion_time,
                               step_2_conversion_time,
                               prop
        FROM
          (SELECT *,
                  if(latest_0 < latest_1
                     AND latest_1 <= latest_0 + INTERVAL 7 DAY
                     AND latest_1 < latest_2
                     AND latest_2 <= latest_0 + INTERVAL 7 DAY, 3, if(latest_0 < latest_1
                                                                      AND latest_1 <= latest_0 + INTERVAL 7 DAY, 2, 1)) AS steps,
                  if(isNotNull(latest_1)
                     AND latest_1 <= latest_0 + INTERVAL 7 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time,
                  if(isNotNull(latest_2)
                     AND latest_2 <= latest_1 + INTERVAL 7 DAY, dateDiff('second', toDateTime(latest_1), toDateTime(latest_2)), NULL) step_2_conversion_time
           FROM
             (SELECT aggregation_target,
                     timestamp,
                     step_0,
                     latest_0,
                     step_1,
                     min(latest_1) over (PARTITION by aggregation_target,
                                                      prop
                                         ORDER BY timestamp DESC ROWS BETWEEN 1 PRECEDING AND 1 PRECEDING) latest_1,
                                        step_2,
                                        min(latest_2) over (PARTITION by aggregation_target,
                                                                         prop
                                                            ORDER BY timestamp DESC ROWS BETWEEN 2 PRECEDING AND 2 PRECEDING) latest_2 ,
                                                           if(has(['technology', 'finance'], prop), prop, 'Other') as prop
              FROM
                (SELECT *,
                        prop_vals as prop
                 FROM
                   (SELECT aggregation_target,
                           timestamp,
                           if(event = 'sign up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'play movie', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1,
                           if(event = 'buy', 1, 0) as step_2,
                           if(step_2 = 1, timestamp, null) as latest_2,
                           replaceRegexpAll(JSONExtractRaw(group_properties_0, 'industry'), '^"|"$', '') AS prop_basic,
                           prop_basic as prop,
                           argMinIf(prop, timestamp, isNotNull(prop)) over (PARTITION by aggregation_target) as prop_vals
                    FROM
                      (SELECT e.event as event,
                              e.team_id as team_id,
                              e.distinct_id as distinct_id,
                              e.timestamp as timestamp,
                              pdi.person_id as aggregation_target,
                              pdi.person_id as person_id,
                              groups_0.group_properties_0 as group_properties_0
                       FROM events e
                       INNER JOIN
                         (SELECT distinct_id,
                                 argMax(person_id, version) as person_id
                          FROM person_distinct_id2
                          WHERE team_id = 2
                          GROUP BY distinct_id
                          HAVING argMax(is_deleted, version) = 0) AS pdi ON e.distinct_id = pdi.distinct_id
                       INNER JOIN
                         (SELECT group_key,
                                 argMax(group_properties, _timestamp) AS group_properties_0
                          FROM groups
                          WHERE team_id = 2
                            AND group_type_index = 0
                          GROUP BY group_key) groups_0 ON "$group_0" == groups_0.group_key
                       WHERE team_id = 2
                         AND timestamp >= toDateTime('2020-01-01 00:00:00')
                         AND timestamp <= toDateTime('2020-01-08 23:59:59') ) events
                    WHERE (1=1) )))
           WHERE step_0 = 1 ))
     GROUP BY aggregation_target,
              steps,
              prop
     HAVING steps = max_steps)
  WHERE steps IN [1, 2, 3]
    AND arrayFlatten(array(prop)) = arrayFlatten(array('finance'))
  ORDER BY aggregation_target
  LIMIT 100
  OFFSET 0 SETTINGS allow_experimental_window_functions = 1
  '
---
# name: TestFunnelStrictStepsBreakdown.test_funnel_breakdown_group.4
  '
  
  SELECT groupArray(value)
  FROM
    (SELECT replaceRegexpAll(JSONExtractRaw(group_properties_0, 'industry'), '^"|"$', '') AS value,
            count(*) as count
     FROM events e
     INNER JOIN
       (SELECT group_key,
               argMax(group_properties, _timestamp) AS group_properties_0
        FROM groups
        WHERE team_id = 2
          AND group_type_index = 0
        GROUP BY group_key) groups_0 ON "$group_0" == groups_0.group_key
     WHERE team_id = 2
       AND event IN ['buy', 'play movie', 'sign up']
       AND timestamp >= toDateTime('2020-01-01 00:00:00')
       AND timestamp <= toDateTime('2020-01-08 23:59:59')
     GROUP BY value
     ORDER BY count DESC, value DESC
     LIMIT 25
     OFFSET 0)
  '
---
# name: TestFunnelStrictStepsBreakdown.test_funnel_breakdown_group.5
  '
  
  SELECT aggregation_target AS actor_id
  FROM
    (SELECT aggregation_target,
            steps,
            avg(step_1_conversion_time) step_1_average_conversion_time_inner,
            avg(step_2_conversion_time) step_2_average_conversion_time_inner,
            median(step_1_conversion_time) step_1_median_conversion_time_inner,
            median(step_2_conversion_time) step_2_median_conversion_time_inner,
            prop
     FROM
       (SELECT aggregation_target,
               steps,
               max(steps) over (PARTITION BY aggregation_target,
                                             prop) as max_steps,
                               step_1_conversion_time,
                               step_2_conversion_time,
                               prop
        FROM
          (SELECT *,
                  if(latest_0 < latest_1
                     AND latest_1 <= latest_0 + INTERVAL 7 DAY
                     AND latest_1 < latest_2
                     AND latest_2 <= latest_0 + INTERVAL 7 DAY, 3, if(latest_0 < latest_1
                                                                      AND latest_1 <= latest_0 + INTERVAL 7 DAY, 2, 1)) AS steps,
                  if(isNotNull(latest_1)
                     AND latest_1 <= latest_0 + INTERVAL 7 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time,
                  if(isNotNull(latest_2)
                     AND latest_2 <= latest_1 + INTERVAL 7 DAY, dateDiff('second', toDateTime(latest_1), toDateTime(latest_2)), NULL) step_2_conversion_time
           FROM
             (SELECT aggregation_target,
                     timestamp,
                     step_0,
                     latest_0,
                     step_1,
                     min(latest_1) over (PARTITION by aggregation_target,
                                                      prop
                                         ORDER BY timestamp DESC ROWS BETWEEN 1 PRECEDING AND 1 PRECEDING) latest_1,
                                        step_2,
                                        min(latest_2) over (PARTITION by aggregation_target,
                                                                         prop
                                                            ORDER BY timestamp DESC ROWS BETWEEN 2 PRECEDING AND 2 PRECEDING) latest_2 ,
                                                           if(has(['technology', 'finance'], prop), prop, 'Other') as prop
              FROM
                (SELECT *,
                        prop_vals as prop
                 FROM
                   (SELECT aggregation_target,
                           timestamp,
                           if(event = 'sign up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'play movie', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1,
                           if(event = 'buy', 1, 0) as step_2,
                           if(step_2 = 1, timestamp, null) as latest_2,
                           replaceRegexpAll(JSONExtractRaw(group_properties_0, 'industry'), '^"|"$', '') AS prop_basic,
                           prop_basic as prop,
                           argMinIf(prop, timestamp, isNotNull(prop)) over (PARTITION by aggregation_target) as prop_vals
                    FROM
                      (SELECT e.event as event,
                              e.team_id as team_id,
                              e.distinct_id as distinct_id,
                              e.timestamp as timestamp,
                              pdi.person_id as aggregation_target,
                              pdi.person_id as person_id,
                              groups_0.group_properties_0 as group_properties_0
                       FROM events e
                       INNER JOIN
                         (SELECT distinct_id,
                                 argMax(person_id, version) as person_id
                          FROM person_distinct_id2
                          WHERE team_id = 2
                          GROUP BY distinct_id
                          HAVING argMax(is_deleted, version) = 0) AS pdi ON e.distinct_id = pdi.distinct_id
                       INNER JOIN
                         (SELECT group_key,
                                 argMax(group_properties, _timestamp) AS group_properties_0
                          FROM groups
                          WHERE team_id = 2
                            AND group_type_index = 0
                          GROUP BY group_key) groups_0 ON "$group_0" == groups_0.group_key
                       WHERE team_id = 2
                         AND timestamp >= toDateTime('2020-01-01 00:00:00')
                         AND timestamp <= toDateTime('2020-01-08 23:59:59') ) events
                    WHERE (1=1) )))
           WHERE step_0 = 1 ))
     GROUP BY aggregation_target,
              steps,
              prop
     HAVING steps = max_steps)
  WHERE steps IN [2, 3]
    AND arrayFlatten(array(prop)) = arrayFlatten(array('finance'))
  ORDER BY aggregation_target
  LIMIT 100
  OFFSET 0 SETTINGS allow_experimental_window_functions = 1
  '
---
# name: TestFunnelStrictStepsBreakdown.test_funnel_breakdown_group.6
  '
  
  SELECT groupArray(value)
  FROM
    (SELECT replaceRegexpAll(JSONExtractRaw(group_properties_0, 'industry'), '^"|"$', '') AS value,
            count(*) as count
     FROM events e
     INNER JOIN
       (SELECT group_key,
               argMax(group_properties, _timestamp) AS group_properties_0
        FROM groups
        WHERE team_id = 2
          AND group_type_index = 0
        GROUP BY group_key) groups_0 ON "$group_0" == groups_0.group_key
     WHERE team_id = 2
       AND event IN ['buy', 'play movie', 'sign up']
       AND timestamp >= toDateTime('2020-01-01 00:00:00')
       AND timestamp <= toDateTime('2020-01-08 23:59:59')
     GROUP BY value
     ORDER BY count DESC, value DESC
     LIMIT 25
     OFFSET 0)
  '
---
# name: TestFunnelStrictStepsBreakdown.test_funnel_breakdown_group.7
  '
  
  SELECT aggregation_target AS actor_id
  FROM
    (SELECT aggregation_target,
            steps,
            avg(step_1_conversion_time) step_1_average_conversion_time_inner,
            avg(step_2_conversion_time) step_2_average_conversion_time_inner,
            median(step_1_conversion_time) step_1_median_conversion_time_inner,
            median(step_2_conversion_time) step_2_median_conversion_time_inner,
            prop
     FROM
       (SELECT aggregation_target,
               steps,
               max(steps) over (PARTITION BY aggregation_target,
                                             prop) as max_steps,
                               step_1_conversion_time,
                               step_2_conversion_time,
                               prop
        FROM
          (SELECT *,
                  if(latest_0 < latest_1
                     AND latest_1 <= latest_0 + INTERVAL 7 DAY
                     AND latest_1 < latest_2
                     AND latest_2 <= latest_0 + INTERVAL 7 DAY, 3, if(latest_0 < latest_1
                                                                      AND latest_1 <= latest_0 + INTERVAL 7 DAY, 2, 1)) AS steps,
                  if(isNotNull(latest_1)
                     AND latest_1 <= latest_0 + INTERVAL 7 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time,
                  if(isNotNull(latest_2)
                     AND latest_2 <= latest_1 + INTERVAL 7 DAY, dateDiff('second', toDateTime(latest_1), toDateTime(latest_2)), NULL) step_2_conversion_time
           FROM
             (SELECT aggregation_target,
                     timestamp,
                     step_0,
                     latest_0,
                     step_1,
                     min(latest_1) over (PARTITION by aggregation_target,
                                                      prop
                                         ORDER BY timestamp DESC ROWS BETWEEN 1 PRECEDING AND 1 PRECEDING) latest_1,
                                        step_2,
                                        min(latest_2) over (PARTITION by aggregation_target,
                                                                         prop
                                                            ORDER BY timestamp DESC ROWS BETWEEN 2 PRECEDING AND 2 PRECEDING) latest_2 ,
                                                           if(has(['technology', 'finance'], prop), prop, 'Other') as prop
              FROM
                (SELECT *,
                        prop_vals as prop
                 FROM
                   (SELECT aggregation_target,
                           timestamp,
                           if(event = 'sign up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'play movie', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1,
                           if(event = 'buy', 1, 0) as step_2,
                           if(step_2 = 1, timestamp, null) as latest_2,
                           replaceRegexpAll(JSONExtractRaw(group_properties_0, 'industry'), '^"|"$', '') AS prop_basic,
                           prop_basic as prop,
                           argMinIf(prop, timestamp, isNotNull(prop)) over (PARTITION by aggregation_target) as prop_vals
                    FROM
                      (SELECT e.event as event,
                              e.team_id as team_id,
                              e.distinct_id as distinct_id,
                              e.timestamp as timestamp,
                              pdi.person_id as aggregation_target,
                              pdi.person_id as person_id,
                              groups_0.group_properties_0 as group_properties_0
                       FROM events e
                       INNER JOIN
                         (SELECT distinct_id,
                                 argMax(person_id, version) as person_id
                          FROM person_distinct_id2
                          WHERE team_id = 2
                          GROUP BY distinct_id
                          HAVING argMax(is_deleted, version) = 0) AS pdi ON e.distinct_id = pdi.distinct_id
                       INNER JOIN
                         (SELECT group_key,
                                 argMax(group_properties, _timestamp) AS group_properties_0
                          FROM groups
                          WHERE team_id = 2
                            AND group_type_index = 0
                          GROUP BY group_key) groups_0 ON "$group_0" == groups_0.group_key
                       WHERE team_id = 2
                         AND timestamp >= toDateTime('2020-01-01 00:00:00')
                         AND timestamp <= toDateTime('2020-01-08 23:59:59') ) events
                    WHERE (1=1) )))
           WHERE step_0 = 1 ))
     GROUP BY aggregation_target,
              steps,
              prop
     HAVING steps = max_steps)
  WHERE steps IN [1, 2, 3]
    AND arrayFlatten(array(prop)) = arrayFlatten(array('technology'))
  ORDER BY aggregation_target
  LIMIT 100
  OFFSET 0 SETTINGS allow_experimental_window_functions = 1
  '
---
# name: TestFunnelStrictStepsBreakdown.test_funnel_breakdown_group.8
  '
  
  SELECT groupArray(value)
  FROM
    (SELECT replaceRegexpAll(JSONExtractRaw(group_properties_0, 'industry'), '^"|"$', '') AS value,
            count(*) as count
     FROM events e
     INNER JOIN
       (SELECT group_key,
               argMax(group_properties, _timestamp) AS group_properties_0
        FROM groups
        WHERE team_id = 2
          AND group_type_index = 0
        GROUP BY group_key) groups_0 ON "$group_0" == groups_0.group_key
     WHERE team_id = 2
       AND event IN ['buy', 'play movie', 'sign up']
       AND timestamp >= toDateTime('2020-01-01 00:00:00')
       AND timestamp <= toDateTime('2020-01-08 23:59:59')
     GROUP BY value
     ORDER BY count DESC, value DESC
     LIMIT 25
     OFFSET 0)
  '
---
# name: TestFunnelStrictStepsBreakdown.test_funnel_breakdown_group.9
  '
  
  SELECT aggregation_target AS actor_id
  FROM
    (SELECT aggregation_target,
            steps,
            avg(step_1_conversion_time) step_1_average_conversion_time_inner,
            avg(step_2_conversion_time) step_2_average_conversion_time_inner,
            median(step_1_conversion_time) step_1_median_conversion_time_inner,
            median(step_2_conversion_time) step_2_median_conversion_time_inner,
            prop
     FROM
       (SELECT aggregation_target,
               steps,
               max(steps) over (PARTITION BY aggregation_target,
                                             prop) as max_steps,
                               step_1_conversion_time,
                               step_2_conversion_time,
                               prop
        FROM
          (SELECT *,
                  if(latest_0 < latest_1
                     AND latest_1 <= latest_0 + INTERVAL 7 DAY
                     AND latest_1 < latest_2
                     AND latest_2 <= latest_0 + INTERVAL 7 DAY, 3, if(latest_0 < latest_1
                                                                      AND latest_1 <= latest_0 + INTERVAL 7 DAY, 2, 1)) AS steps,
                  if(isNotNull(latest_1)
                     AND latest_1 <= latest_0 + INTERVAL 7 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time,
                  if(isNotNull(latest_2)
                     AND latest_2 <= latest_1 + INTERVAL 7 DAY, dateDiff('second', toDateTime(latest_1), toDateTime(latest_2)), NULL) step_2_conversion_time
           FROM
             (SELECT aggregation_target,
                     timestamp,
                     step_0,
                     latest_0,
                     step_1,
                     min(latest_1) over (PARTITION by aggregation_target,
                                                      prop
                                         ORDER BY timestamp DESC ROWS BETWEEN 1 PRECEDING AND 1 PRECEDING) latest_1,
                                        step_2,
                                        min(latest_2) over (PARTITION by aggregation_target,
                                                                         prop
                                                            ORDER BY timestamp DESC ROWS BETWEEN 2 PRECEDING AND 2 PRECEDING) latest_2 ,
                                                           if(has(['technology', 'finance'], prop), prop, 'Other') as prop
              FROM
                (SELECT *,
                        prop_vals as prop
                 FROM
                   (SELECT aggregation_target,
                           timestamp,
                           if(event = 'sign up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'play movie', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1,
                           if(event = 'buy', 1, 0) as step_2,
                           if(step_2 = 1, timestamp, null) as latest_2,
                           replaceRegexpAll(JSONExtractRaw(group_properties_0, 'industry'), '^"|"$', '') AS prop_basic,
                           prop_basic as prop,
                           argMinIf(prop, timestamp, isNotNull(prop)) over (PARTITION by aggregation_target) as prop_vals
                    FROM
                      (SELECT e.event as event,
                              e.team_id as team_id,
                              e.distinct_id as distinct_id,
                              e.timestamp as timestamp,
                              pdi.person_id as aggregation_target,
                              pdi.person_id as person_id,
                              groups_0.group_properties_0 as group_properties_0
                       FROM events e
                       INNER JOIN
                         (SELECT distinct_id,
                                 argMax(person_id, version) as person_id
                          FROM person_distinct_id2
                          WHERE team_id = 2
                          GROUP BY distinct_id
                          HAVING argMax(is_deleted, version) = 0) AS pdi ON e.distinct_id = pdi.distinct_id
                       INNER JOIN
                         (SELECT group_key,
                                 argMax(group_properties, _timestamp) AS group_properties_0
                          FROM groups
                          WHERE team_id = 2
                            AND group_type_index = 0
                          GROUP BY group_key) groups_0 ON "$group_0" == groups_0.group_key
                       WHERE team_id = 2
                         AND timestamp >= toDateTime('2020-01-01 00:00:00')
                         AND timestamp <= toDateTime('2020-01-08 23:59:59') ) events
                    WHERE (1=1) )))
           WHERE step_0 = 1 ))
     GROUP BY aggregation_target,
              steps,
              prop
     HAVING steps = max_steps)
  WHERE steps IN [2, 3]
    AND arrayFlatten(array(prop)) = arrayFlatten(array('technology'))
  ORDER BY aggregation_target
  LIMIT 100
  OFFSET 0 SETTINGS allow_experimental_window_functions = 1
  '
---
# name: TestFunnelStrictStepsBreakdown.test_funnel_step_multiple_breakdown_snapshot
  '
  
  SELECT groupArray(value)
  FROM
    (SELECT array(replaceRegexpAll(JSONExtractRaw(properties, '$browser'), '^"|"$', ''), replaceRegexpAll(JSONExtractRaw(properties, '$version'), '^"|"$', '')) AS value,
            count(*) as count
     FROM events e
     WHERE team_id = 2
       AND event IN ['buy', 'sign up']
       AND timestamp >= toDateTime('2020-01-01 00:00:00')
       AND timestamp <= toDateTime('2020-01-08 23:59:59')
     GROUP BY value
     ORDER BY count DESC, value DESC
     LIMIT 25
     OFFSET 0)
  '
---
# name: TestFunnelStrictStepsBreakdown.test_funnel_step_multiple_breakdown_snapshot.1
  '
  
  SELECT countIf(steps = 1) step_1,
         countIf(steps = 2) step_2,
         avg(step_1_average_conversion_time_inner) step_1_average_conversion_time,
         median(step_1_median_conversion_time_inner) step_1_median_conversion_time,
         prop
  FROM
    (SELECT aggregation_target,
            steps,
            avg(step_1_conversion_time) step_1_average_conversion_time_inner,
            median(step_1_conversion_time) step_1_median_conversion_time_inner,
            prop
     FROM
       (SELECT aggregation_target,
               steps,
               max(steps) over (PARTITION BY aggregation_target,
                                             prop) as max_steps,
                               step_1_conversion_time,
                               prop
        FROM
          (SELECT *,
                  if(latest_0 < latest_1
                     AND latest_1 <= latest_0 + INTERVAL 7 DAY, 2, 1) AS steps,
                  if(isNotNull(latest_1)
                     AND latest_1 <= latest_0 + INTERVAL 7 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
           FROM
             (SELECT aggregation_target,
                     timestamp,
                     step_0,
                     latest_0,
                     step_1,
                     min(latest_1) over (PARTITION by aggregation_target,
                                                      prop
                                         ORDER BY timestamp DESC ROWS BETWEEN 1 PRECEDING AND 1 PRECEDING) latest_1 ,
                                        if(has([['', ''], ['alakazam', ''], ['Safari', 'xyz'], ['Mac', ''], ['Chrome', 'xyz'], ['0', '0'], ['', 'no-mac']], prop), prop, ['Other']) as prop
              FROM
                (SELECT *,
                        if(notEmpty(arrayFilter(x -> notEmpty(x), prop_vals)), prop_vals, ['','']) as prop
                 FROM
                   (SELECT aggregation_target,
                           timestamp,
                           if(event = 'sign up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'buy', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1,
                           array(replaceRegexpAll(JSONExtractRaw(properties, '$browser'), '^"|"$', ''), replaceRegexpAll(JSONExtractRaw(properties, '$version'), '^"|"$', '')) AS prop_basic,
                           prop_basic as prop,
                           argMinIf(prop, timestamp, notEmpty(arrayFilter(x -> notEmpty(x), prop))) over (PARTITION by aggregation_target) as prop_vals
                    FROM
                      (SELECT e.event as event,
                              e.team_id as team_id,
                              e.distinct_id as distinct_id,
                              e.timestamp as timestamp,
                              pdi.person_id as aggregation_target,
                              e."properties" as "properties",
                              pdi.person_id as person_id
                       FROM events e
                       INNER JOIN
                         (SELECT distinct_id,
                                 argMax(person_id, version) as person_id
                          FROM person_distinct_id2
                          WHERE team_id = 2
                          GROUP BY distinct_id
                          HAVING argMax(is_deleted, version) = 0) AS pdi ON e.distinct_id = pdi.distinct_id
                       WHERE team_id = 2
                         AND timestamp >= toDateTime('2020-01-01 00:00:00')
                         AND timestamp <= toDateTime('2020-01-08 23:59:59') ) events
                    WHERE (1=1) )))
           WHERE step_0 = 1 ))
     GROUP BY aggregation_target,
              steps,
              prop
     HAVING steps = max_steps)
  GROUP BY prop SETTINGS allow_experimental_window_functions = 1
  '
---
