# name: TestClickhouseFunnelCorrelation.test_funnel_correlation_with_events_and_groups
  '
  WITH funnel_people as
    (SELECT aggregation_target as person_id,
            timestamp,
            steps,
            final_timestamp,
            first_timestamp
     FROM
       (SELECT aggregation_target,
               steps,
               avg(step_1_conversion_time) step_1_average_conversion_time_inner,
               median(step_1_conversion_time) step_1_median_conversion_time_inner ,
               argMax(latest_0, steps) as timestamp,
               argMax(latest_1, steps) as final_timestamp,
               argMax(latest_0, steps) as first_timestamp
        FROM
          (SELECT aggregation_target,
                  steps,
                  max(steps) over (PARTITION BY aggregation_target) as max_steps,
                                  step_1_conversion_time ,
                                  latest_0,
                                  latest_1,
                                  latest_0
           FROM
             (SELECT *,
                     if(latest_0 < latest_1
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                     if(isNotNull(latest_1)
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
              FROM
                (SELECT aggregation_target,
                        timestamp,
                        step_0,
                        latest_0,
                        step_1,
                        min(latest_1) over (PARTITION by aggregation_target
                                            ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
                 FROM
                   (SELECT aggregation_target,
                           timestamp,
                           if(event = 'user signed up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'paid', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1
                    FROM
                      (SELECT e.event as event,
                              e.team_id as team_id,
                              e.distinct_id as distinct_id,
                              e.timestamp as timestamp,
                              e.$group_0 as aggregation_target
                       FROM events e
                       INNER JOIN
                         (SELECT distinct_id,
                                 argMax(person_id, _timestamp) as person_id
                          FROM
                            (SELECT distinct_id,
                                    person_id,
                                    max(_timestamp) as _timestamp
                             FROM person_distinct_id
                             WHERE team_id = 2
                             GROUP BY person_id,
                                      distinct_id,
                                      team_id
                             HAVING max(is_deleted) = 0)
                          GROUP BY distinct_id) AS pdi ON events.distinct_id = pdi.distinct_id
                       WHERE team_id = 2
                         AND event IN ['paid', 'user signed up']
                         AND timestamp >= '2020-01-01 00:00:00'
                         AND timestamp <= '2020-01-14 23:59:59' ) events
                    WHERE (step_0 = 1
                           OR step_1 = 1) ))
              WHERE step_0 = 1 SETTINGS allow_experimental_window_functions = 1 ))
        GROUP BY aggregation_target,
                 steps
        HAVING steps = max_steps SETTINGS allow_experimental_window_functions = 1)
     WHERE steps IN [1, 2]
     ORDER BY aggregation_target
     OFFSET 0 SETTINGS allow_experimental_window_functions = 1),
       toDateTime('2020-01-14 23:59:59') AS date_to,
       toDateTime('2020-01-01 00:00:00') AS date_from,
       2 AS target_step,
       ['user signed up', 'paid'] as funnel_step_names
  SELECT event.event AS name,
         countDistinctIf(person.person_id, person.steps = target_step) AS success_count,
         countDistinctIf(person.person_id, person.steps <> target_step) AS failure_count
  FROM events AS event
  JOIN funnel_people AS person ON person.person_id = events.$group_0
  WHERE event.timestamp >= date_from
    AND event.timestamp < date_to
    AND event.team_id = 2
    AND event.timestamp > person.first_timestamp
    AND event.timestamp < COALESCE(person.final_timestamp, person.first_timestamp + INTERVAL 14 DAY, date_to)
    AND event.event NOT IN funnel_step_names
    AND event.event NOT IN []
  GROUP BY name
  UNION ALL
  SELECT 'Total_Values_In_Query' as name,
         countDistinctIf(person.person_id, person.steps = target_step) AS success_count,
         countDistinctIf(person.person_id, person.steps <> target_step) AS failure_count
  FROM funnel_people AS person
  '
---
# name: TestClickhouseFunnelCorrelation.test_funnel_correlation_with_events_and_groups.1
  '
  WITH funnel_people as
    (SELECT aggregation_target as person_id,
            timestamp,
            steps,
            final_timestamp,
            first_timestamp
     FROM
       (SELECT aggregation_target,
               steps,
               avg(step_1_conversion_time) step_1_average_conversion_time_inner,
               median(step_1_conversion_time) step_1_median_conversion_time_inner ,
               argMax(latest_0, steps) as timestamp,
               argMax(latest_1, steps) as final_timestamp,
               argMax(latest_0, steps) as first_timestamp
        FROM
          (SELECT aggregation_target,
                  steps,
                  max(steps) over (PARTITION BY aggregation_target) as max_steps,
                                  step_1_conversion_time ,
                                  latest_0,
                                  latest_1,
                                  latest_0
           FROM
             (SELECT *,
                     if(latest_0 < latest_1
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                     if(isNotNull(latest_1)
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
              FROM
                (SELECT aggregation_target,
                        timestamp,
                        step_0,
                        latest_0,
                        step_1,
                        min(latest_1) over (PARTITION by aggregation_target
                                            ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
                 FROM
                   (SELECT aggregation_target,
                           timestamp,
                           if(event = 'user signed up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'paid', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1
                    FROM
                      (SELECT e.event as event,
                              e.team_id as team_id,
                              e.distinct_id as distinct_id,
                              e.timestamp as timestamp,
                              e.$group_0 as aggregation_target,
                              groups_0.group_properties_0 as group_properties_0
                       FROM events e
                       INNER JOIN
                         (SELECT distinct_id,
                                 argMax(person_id, _timestamp) as person_id
                          FROM
                            (SELECT distinct_id,
                                    person_id,
                                    max(_timestamp) as _timestamp
                             FROM person_distinct_id
                             WHERE team_id = 2
                             GROUP BY person_id,
                                      distinct_id,
                                      team_id
                             HAVING max(is_deleted) = 0)
                          GROUP BY distinct_id) AS pdi ON events.distinct_id = pdi.distinct_id
                       INNER JOIN
                         (SELECT group_key,
                                 argMax(group_properties, _timestamp) AS group_properties_0
                          FROM groups
                          WHERE team_id = 2
                            AND group_type_index = 0
                          GROUP BY group_key) groups_0 ON $group_0 == groups_0.group_key
                       WHERE team_id = 2
                         AND event IN ['paid', 'user signed up']
                         AND timestamp >= '2020-01-01 00:00:00'
                         AND timestamp <= '2020-01-14 23:59:59'
                         AND has(['finance'], trim(BOTH '"'
                                                   FROM JSONExtractRaw(group_properties_0, 'industry'))) ) events
                    WHERE (step_0 = 1
                           OR step_1 = 1) ))
              WHERE step_0 = 1 SETTINGS allow_experimental_window_functions = 1 ))
        GROUP BY aggregation_target,
                 steps
        HAVING steps = max_steps SETTINGS allow_experimental_window_functions = 1)
     WHERE steps IN [1, 2]
     ORDER BY aggregation_target
     OFFSET 0 SETTINGS allow_experimental_window_functions = 1),
       toDateTime('2020-01-14 23:59:59') AS date_to,
       toDateTime('2020-01-01 00:00:00') AS date_from,
       2 AS target_step,
       ['user signed up', 'paid'] as funnel_step_names
  SELECT event.event AS name,
         countDistinctIf(person.person_id, person.steps = target_step) AS success_count,
         countDistinctIf(person.person_id, person.steps <> target_step) AS failure_count
  FROM events AS event
  JOIN funnel_people AS person ON person.person_id = events.$group_0
  WHERE event.timestamp >= date_from
    AND event.timestamp < date_to
    AND event.team_id = 2
    AND event.timestamp > person.first_timestamp
    AND event.timestamp < COALESCE(person.final_timestamp, person.first_timestamp + INTERVAL 14 DAY, date_to)
    AND event.event NOT IN funnel_step_names
    AND event.event NOT IN []
  GROUP BY name
  UNION ALL
  SELECT 'Total_Values_In_Query' as name,
         countDistinctIf(person.person_id, person.steps = target_step) AS success_count,
         countDistinctIf(person.person_id, person.steps <> target_step) AS failure_count
  FROM funnel_people AS person
  '
---
# name: TestClickhouseFunnelCorrelation.test_funnel_correlation_with_properties_and_groups
  '
  WITH funnel_people as
    (SELECT aggregation_target as person_id,
            timestamp,
            steps,
            final_timestamp,
            first_timestamp
     FROM
       (SELECT aggregation_target,
               steps,
               avg(step_1_conversion_time) step_1_average_conversion_time_inner,
               median(step_1_conversion_time) step_1_median_conversion_time_inner ,
               argMax(latest_0, steps) as timestamp,
               argMax(latest_1, steps) as final_timestamp,
               argMax(latest_0, steps) as first_timestamp
        FROM
          (SELECT aggregation_target,
                  steps,
                  max(steps) over (PARTITION BY aggregation_target) as max_steps,
                                  step_1_conversion_time ,
                                  latest_0,
                                  latest_1,
                                  latest_0
           FROM
             (SELECT *,
                     if(latest_0 < latest_1
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                     if(isNotNull(latest_1)
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
              FROM
                (SELECT aggregation_target,
                        timestamp,
                        step_0,
                        latest_0,
                        step_1,
                        min(latest_1) over (PARTITION by aggregation_target
                                            ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
                 FROM
                   (SELECT aggregation_target,
                           timestamp,
                           if(event = 'user signed up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'paid', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1
                    FROM
                      (SELECT e.event as event,
                              e.team_id as team_id,
                              e.distinct_id as distinct_id,
                              e.timestamp as timestamp,
                              e.$group_0 as aggregation_target,
                              groups_0.group_properties_0 as group_properties_0
                       FROM events e
                       INNER JOIN
                         (SELECT distinct_id,
                                 argMax(person_id, _timestamp) as person_id
                          FROM
                            (SELECT distinct_id,
                                    person_id,
                                    max(_timestamp) as _timestamp
                             FROM person_distinct_id
                             WHERE team_id = 2
                             GROUP BY person_id,
                                      distinct_id,
                                      team_id
                             HAVING max(is_deleted) = 0)
                          GROUP BY distinct_id) AS pdi ON events.distinct_id = pdi.distinct_id
                       INNER JOIN
                         (SELECT group_key,
                                 argMax(group_properties, _timestamp) AS group_properties_0
                          FROM groups
                          WHERE team_id = 2
                            AND group_type_index = 0
                          GROUP BY group_key) groups_0 ON $group_0 == groups_0.group_key
                       WHERE team_id = 2
                         AND event IN ['paid', 'user signed up']
                         AND timestamp >= '2020-01-01 00:00:00'
                         AND timestamp <= '2020-01-14 23:59:59' ) events
                    WHERE (step_0 = 1
                           OR step_1 = 1) ))
              WHERE step_0 = 1 SETTINGS allow_experimental_window_functions = 1 ))
        GROUP BY aggregation_target,
                 steps
        HAVING steps = max_steps SETTINGS allow_experimental_window_functions = 1)
     WHERE steps IN [1, 2]
     ORDER BY aggregation_target
     OFFSET 0 SETTINGS allow_experimental_window_functions = 1),
       2 AS target_step
  SELECT concat(prop.1, '::', prop.2) as name,
         countDistinctIf(person_id, steps = target_step) AS success_count,
         countDistinctIf(person_id, steps <> target_step) AS failure_count
  FROM
    (SELECT person_id,
            funnel_people.steps as steps,
            arrayJoin(arrayZip(['industry'], [trim(BOTH '"' FROM JSONExtractRaw(groups_0.group_properties_0, 'industry'))])) as prop
     FROM funnel_people
     INNER JOIN
       (SELECT group_key,
               argMax(group_properties, _timestamp) AS group_properties_0
        FROM groups
        WHERE team_id = 2
          AND group_type_index = 0
        GROUP BY group_key) groups_0 ON funnel_people.person_id == groups_0.group_key) person_with_props
  GROUP BY prop.1,
               prop.2
  HAVING prop.1 NOT IN []
  UNION ALL
  SELECT 'Total_Values_In_Query' as name,
         countDistinctIf(person_id, steps = target_step) AS success_count,
         countDistinctIf(person_id, steps <> target_step) AS failure_count
  FROM funnel_people
  '
---
# name: TestClickhouseFunnelCorrelation.test_funnel_correlation_with_properties_and_groups_materialized
  '
  WITH funnel_people as
    (SELECT aggregation_target as person_id,
            timestamp,
            steps,
            final_timestamp,
            first_timestamp
     FROM
       (SELECT aggregation_target,
               steps,
               avg(step_1_conversion_time) step_1_average_conversion_time_inner,
               median(step_1_conversion_time) step_1_median_conversion_time_inner ,
               argMax(latest_0, steps) as timestamp,
               argMax(latest_1, steps) as final_timestamp,
               argMax(latest_0, steps) as first_timestamp
        FROM
          (SELECT aggregation_target,
                  steps,
                  max(steps) over (PARTITION BY aggregation_target) as max_steps,
                                  step_1_conversion_time ,
                                  latest_0,
                                  latest_1,
                                  latest_0
           FROM
             (SELECT *,
                     if(latest_0 < latest_1
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                     if(isNotNull(latest_1)
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
              FROM
                (SELECT aggregation_target,
                        timestamp,
                        step_0,
                        latest_0,
                        step_1,
                        min(latest_1) over (PARTITION by aggregation_target
                                            ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
                 FROM
                   (SELECT aggregation_target,
                           timestamp,
                           if(event = 'user signed up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'paid', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1
                    FROM
                      (SELECT e.event as event,
                              e.team_id as team_id,
                              e.distinct_id as distinct_id,
                              e.timestamp as timestamp,
                              e.$group_0 as aggregation_target,
                              groups_0.group_properties_0 as group_properties_0
                       FROM events e
                       INNER JOIN
                         (SELECT distinct_id,
                                 argMax(person_id, _timestamp) as person_id
                          FROM
                            (SELECT distinct_id,
                                    person_id,
                                    max(_timestamp) as _timestamp
                             FROM person_distinct_id
                             WHERE team_id = 2
                             GROUP BY person_id,
                                      distinct_id,
                                      team_id
                             HAVING max(is_deleted) = 0)
                          GROUP BY distinct_id) AS pdi ON events.distinct_id = pdi.distinct_id
                       INNER JOIN
                         (SELECT group_key,
                                 argMax(group_properties, _timestamp) AS group_properties_0
                          FROM groups
                          WHERE team_id = 2
                            AND group_type_index = 0
                          GROUP BY group_key) groups_0 ON $group_0 == groups_0.group_key
                       WHERE team_id = 2
                         AND event IN ['paid', 'user signed up']
                         AND timestamp >= '2020-01-01 00:00:00'
                         AND timestamp <= '2020-01-14 23:59:59' ) events
                    WHERE (step_0 = 1
                           OR step_1 = 1) ))
              WHERE step_0 = 1 SETTINGS allow_experimental_window_functions = 1 ))
        GROUP BY aggregation_target,
                 steps
        HAVING steps = max_steps SETTINGS allow_experimental_window_functions = 1)
     WHERE steps IN [1, 2]
     ORDER BY aggregation_target
     OFFSET 0 SETTINGS allow_experimental_window_functions = 1),
       2 AS target_step
  SELECT concat(prop.1, '::', prop.2) as name,
         countDistinctIf(person_id, steps = target_step) AS success_count,
         countDistinctIf(person_id, steps <> target_step) AS failure_count
  FROM
    (SELECT person_id,
            funnel_people.steps as steps,
            arrayJoin(arrayZip(['industry'], [trim(BOTH '"' FROM JSONExtractRaw(groups_0.group_properties_0, 'industry'))])) as prop
     FROM funnel_people
     INNER JOIN
       (SELECT group_key,
               argMax(group_properties, _timestamp) AS group_properties_0
        FROM groups
        WHERE team_id = 2
          AND group_type_index = 0
        GROUP BY group_key) groups_0 ON funnel_people.person_id == groups_0.group_key) person_with_props
  GROUP BY prop.1,
               prop.2
  HAVING prop.1 NOT IN []
  UNION ALL
  SELECT 'Total_Values_In_Query' as name,
         countDistinctIf(person_id, steps = target_step) AS success_count,
         countDistinctIf(person_id, steps <> target_step) AS failure_count
  FROM funnel_people
  '
---
