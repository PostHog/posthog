# name: TestClickhouseFunnelCorrelation.test_basic_funnel_correlation_with_properties
  '
  WITH funnel_people as
    (SELECT aggregation_target as person_id,
            timestamp,
            steps,
            final_timestamp,
            first_timestamp
     FROM
       (SELECT aggregation_target,
               steps,
               avg(step_1_conversion_time) step_1_average_conversion_time_inner,
               median(step_1_conversion_time) step_1_median_conversion_time_inner ,
               argMax(latest_0, steps) as timestamp,
               argMax(latest_1, steps) as final_timestamp,
               argMax(latest_0, steps) as first_timestamp
        FROM
          (SELECT aggregation_target,
                  steps,
                  max(steps) over (PARTITION BY aggregation_target) as max_steps,
                                  step_1_conversion_time ,
                                  latest_0,
                                  latest_1,
                                  latest_0
           FROM
             (SELECT *,
                     if(latest_0 < latest_1
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                     if(isNotNull(latest_1)
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
              FROM
                (SELECT aggregation_target,
                        timestamp,
                        step_0,
                        latest_0,
                        step_1,
                        min(latest_1) over (PARTITION by aggregation_target
                                            ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
                 FROM
                   (SELECT aggregation_target,
                           timestamp,
                           if(event = 'user signed up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'paid', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1
                    FROM
                      (SELECT e.event as event,
                              e.team_id as team_id,
                              e.distinct_id as distinct_id,
                              e.timestamp as timestamp,
                              pdi.person_id as aggregation_target
                       FROM events e
                       INNER JOIN
                         (SELECT distinct_id,
                                 argMax(person_id, _timestamp) as person_id
                          FROM
                            (SELECT distinct_id,
                                    person_id,
                                    max(_timestamp) as _timestamp
                             FROM person_distinct_id
                             WHERE team_id = 2
                             GROUP BY person_id,
                                      distinct_id,
                                      team_id
                             HAVING max(is_deleted) = 0)
                          GROUP BY distinct_id) AS pdi ON events.distinct_id = pdi.distinct_id
                       WHERE team_id = 2
                         AND event IN ['paid', 'user signed up']
                         AND timestamp >= '2020-01-01 00:00:00'
                         AND timestamp <= '2020-01-14 23:59:59' ) events
                    WHERE (step_0 = 1
                           OR step_1 = 1) ))
              WHERE step_0 = 1 SETTINGS allow_experimental_window_functions = 1 ))
        GROUP BY aggregation_target,
                 steps
        HAVING steps = max_steps SETTINGS allow_experimental_window_functions = 1)
     WHERE steps IN [1, 2]
     ORDER BY aggregation_target
     OFFSET 0 SETTINGS allow_experimental_window_functions = 1),
       2 AS target_step
  SELECT concat(prop.1, '::', prop.2) as name,
         countDistinctIf(person_id, steps = target_step) AS success_count,
         countDistinctIf(person_id, steps <> target_step) AS failure_count
  FROM
    (SELECT person_id,
            funnel_people.steps as steps,
            arrayJoin(arrayZip(['$browser'], [trim(BOTH '"' FROM JSONExtractRaw(person_props, '$browser'))])) as prop
     FROM funnel_people
     JOIN
       (SELECT id,
               argMax(properties, _timestamp) as person_props
        FROM person
        WHERE team_id = 2
        GROUP BY id
        HAVING max(is_deleted) = 0) person ON person.id = funnel_people.person_id) aggregation_target_with_props
  GROUP BY prop.1,
               prop.2
  HAVING prop.1 NOT IN []
  UNION ALL
  SELECT 'Total_Values_In_Query' as name,
         countDistinctIf(person_id, steps = target_step) AS success_count,
         countDistinctIf(person_id, steps <> target_step) AS failure_count
  FROM funnel_people
  '
---
# name: TestClickhouseFunnelCorrelation.test_basic_funnel_correlation_with_properties.1
  '
  WITH funnel_people as
    (SELECT aggregation_target as person_id,
            timestamp,
            steps,
            final_timestamp,
            first_timestamp
     FROM
       (SELECT aggregation_target,
               steps,
               avg(step_1_conversion_time) step_1_average_conversion_time_inner,
               median(step_1_conversion_time) step_1_median_conversion_time_inner ,
               argMax(latest_0, steps) as timestamp,
               argMax(latest_1, steps) as final_timestamp,
               argMax(latest_0, steps) as first_timestamp
        FROM
          (SELECT aggregation_target,
                  steps,
                  max(steps) over (PARTITION BY aggregation_target) as max_steps,
                                  step_1_conversion_time ,
                                  latest_0,
                                  latest_1,
                                  latest_0
           FROM
             (SELECT *,
                     if(latest_0 < latest_1
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                     if(isNotNull(latest_1)
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
              FROM
                (SELECT aggregation_target,
                        timestamp,
                        step_0,
                        latest_0,
                        step_1,
                        min(latest_1) over (PARTITION by aggregation_target
                                            ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
                 FROM
                   (SELECT aggregation_target,
                           timestamp,
                           if(event = 'user signed up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'paid', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1
                    FROM
                      (SELECT e.event as event,
                              e.team_id as team_id,
                              e.distinct_id as distinct_id,
                              e.timestamp as timestamp,
                              pdi.person_id as aggregation_target
                       FROM events e
                       INNER JOIN
                         (SELECT distinct_id,
                                 argMax(person_id, _timestamp) as person_id
                          FROM
                            (SELECT distinct_id,
                                    person_id,
                                    max(_timestamp) as _timestamp
                             FROM person_distinct_id
                             WHERE team_id = 2
                             GROUP BY person_id,
                                      distinct_id,
                                      team_id
                             HAVING max(is_deleted) = 0)
                          GROUP BY distinct_id) AS pdi ON events.distinct_id = pdi.distinct_id
                       WHERE team_id = 2
                         AND event IN ['paid', 'user signed up']
                         AND timestamp >= '2020-01-01 00:00:00'
                         AND timestamp <= '2020-01-14 23:59:59' ) events
                    WHERE (step_0 = 1
                           OR step_1 = 1) ))
              WHERE step_0 = 1 SETTINGS allow_experimental_window_functions = 1 ))
        GROUP BY aggregation_target,
                 steps
        HAVING steps = max_steps SETTINGS allow_experimental_window_functions = 1)
     WHERE steps IN [1, 2]
     ORDER BY aggregation_target
     OFFSET 0 SETTINGS allow_experimental_window_functions = 1),
       2 AS target_step
  SELECT DISTINCT funnel_people.person_id as person_id
  FROM funnel_people
  JOIN
    (SELECT id
     FROM person
     WHERE team_id = 2
     GROUP BY id
     HAVING max(is_deleted) = 0
     AND has(['Positive'], trim(BOTH '"'
                                FROM JSONExtractRaw(argMax(person.properties, _timestamp), '$browser')))) person ON person.id = funnel_people.person_id
  WHERE funnel_people.steps = target_step
  ORDER BY person_id
  LIMIT 100
  OFFSET 0
  '
---
# name: TestClickhouseFunnelCorrelation.test_basic_funnel_correlation_with_properties.2
  '
  WITH funnel_people as
    (SELECT aggregation_target as person_id,
            timestamp,
            steps,
            final_timestamp,
            first_timestamp
     FROM
       (SELECT aggregation_target,
               steps,
               avg(step_1_conversion_time) step_1_average_conversion_time_inner,
               median(step_1_conversion_time) step_1_median_conversion_time_inner ,
               argMax(latest_0, steps) as timestamp,
               argMax(latest_1, steps) as final_timestamp,
               argMax(latest_0, steps) as first_timestamp
        FROM
          (SELECT aggregation_target,
                  steps,
                  max(steps) over (PARTITION BY aggregation_target) as max_steps,
                                  step_1_conversion_time ,
                                  latest_0,
                                  latest_1,
                                  latest_0
           FROM
             (SELECT *,
                     if(latest_0 < latest_1
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                     if(isNotNull(latest_1)
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
              FROM
                (SELECT aggregation_target,
                        timestamp,
                        step_0,
                        latest_0,
                        step_1,
                        min(latest_1) over (PARTITION by aggregation_target
                                            ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
                 FROM
                   (SELECT aggregation_target,
                           timestamp,
                           if(event = 'user signed up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'paid', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1
                    FROM
                      (SELECT e.event as event,
                              e.team_id as team_id,
                              e.distinct_id as distinct_id,
                              e.timestamp as timestamp,
                              pdi.person_id as aggregation_target
                       FROM events e
                       INNER JOIN
                         (SELECT distinct_id,
                                 argMax(person_id, _timestamp) as person_id
                          FROM
                            (SELECT distinct_id,
                                    person_id,
                                    max(_timestamp) as _timestamp
                             FROM person_distinct_id
                             WHERE team_id = 2
                             GROUP BY person_id,
                                      distinct_id,
                                      team_id
                             HAVING max(is_deleted) = 0)
                          GROUP BY distinct_id) AS pdi ON events.distinct_id = pdi.distinct_id
                       WHERE team_id = 2
                         AND event IN ['paid', 'user signed up']
                         AND timestamp >= '2020-01-01 00:00:00'
                         AND timestamp <= '2020-01-14 23:59:59' ) events
                    WHERE (step_0 = 1
                           OR step_1 = 1) ))
              WHERE step_0 = 1 SETTINGS allow_experimental_window_functions = 1 ))
        GROUP BY aggregation_target,
                 steps
        HAVING steps = max_steps SETTINGS allow_experimental_window_functions = 1)
     WHERE steps IN [1, 2]
     ORDER BY aggregation_target
     OFFSET 0 SETTINGS allow_experimental_window_functions = 1),
       2 AS target_step
  SELECT DISTINCT funnel_people.person_id as person_id
  FROM funnel_people
  JOIN
    (SELECT id
     FROM person
     WHERE team_id = 2
     GROUP BY id
     HAVING max(is_deleted) = 0
     AND has(['Positive'], trim(BOTH '"'
                                FROM JSONExtractRaw(argMax(person.properties, _timestamp), '$browser')))) person ON person.id = funnel_people.person_id
  WHERE funnel_people.steps <> target_step
  ORDER BY person_id
  LIMIT 100
  OFFSET 0
  '
---
# name: TestClickhouseFunnelCorrelation.test_basic_funnel_correlation_with_properties.3
  '
  WITH funnel_people as
    (SELECT aggregation_target as person_id,
            timestamp,
            steps,
            final_timestamp,
            first_timestamp
     FROM
       (SELECT aggregation_target,
               steps,
               avg(step_1_conversion_time) step_1_average_conversion_time_inner,
               median(step_1_conversion_time) step_1_median_conversion_time_inner ,
               argMax(latest_0, steps) as timestamp,
               argMax(latest_1, steps) as final_timestamp,
               argMax(latest_0, steps) as first_timestamp
        FROM
          (SELECT aggregation_target,
                  steps,
                  max(steps) over (PARTITION BY aggregation_target) as max_steps,
                                  step_1_conversion_time ,
                                  latest_0,
                                  latest_1,
                                  latest_0
           FROM
             (SELECT *,
                     if(latest_0 < latest_1
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                     if(isNotNull(latest_1)
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
              FROM
                (SELECT aggregation_target,
                        timestamp,
                        step_0,
                        latest_0,
                        step_1,
                        min(latest_1) over (PARTITION by aggregation_target
                                            ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
                 FROM
                   (SELECT aggregation_target,
                           timestamp,
                           if(event = 'user signed up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'paid', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1
                    FROM
                      (SELECT e.event as event,
                              e.team_id as team_id,
                              e.distinct_id as distinct_id,
                              e.timestamp as timestamp,
                              pdi.person_id as aggregation_target
                       FROM events e
                       INNER JOIN
                         (SELECT distinct_id,
                                 argMax(person_id, _timestamp) as person_id
                          FROM
                            (SELECT distinct_id,
                                    person_id,
                                    max(_timestamp) as _timestamp
                             FROM person_distinct_id
                             WHERE team_id = 2
                             GROUP BY person_id,
                                      distinct_id,
                                      team_id
                             HAVING max(is_deleted) = 0)
                          GROUP BY distinct_id) AS pdi ON events.distinct_id = pdi.distinct_id
                       WHERE team_id = 2
                         AND event IN ['paid', 'user signed up']
                         AND timestamp >= '2020-01-01 00:00:00'
                         AND timestamp <= '2020-01-14 23:59:59' ) events
                    WHERE (step_0 = 1
                           OR step_1 = 1) ))
              WHERE step_0 = 1 SETTINGS allow_experimental_window_functions = 1 ))
        GROUP BY aggregation_target,
                 steps
        HAVING steps = max_steps SETTINGS allow_experimental_window_functions = 1)
     WHERE steps IN [1, 2]
     ORDER BY aggregation_target
     OFFSET 0 SETTINGS allow_experimental_window_functions = 1),
       2 AS target_step
  SELECT DISTINCT funnel_people.person_id as person_id
  FROM funnel_people
  JOIN
    (SELECT id
     FROM person
     WHERE team_id = 2
     GROUP BY id
     HAVING max(is_deleted) = 0
     AND has(['Negative'], trim(BOTH '"'
                                FROM JSONExtractRaw(argMax(person.properties, _timestamp), '$browser')))) person ON person.id = funnel_people.person_id
  WHERE funnel_people.steps = target_step
  ORDER BY person_id
  LIMIT 100
  OFFSET 0
  '
---
# name: TestClickhouseFunnelCorrelation.test_basic_funnel_correlation_with_properties.4
  '
  WITH funnel_people as
    (SELECT aggregation_target as person_id,
            timestamp,
            steps,
            final_timestamp,
            first_timestamp
     FROM
       (SELECT aggregation_target,
               steps,
               avg(step_1_conversion_time) step_1_average_conversion_time_inner,
               median(step_1_conversion_time) step_1_median_conversion_time_inner ,
               argMax(latest_0, steps) as timestamp,
               argMax(latest_1, steps) as final_timestamp,
               argMax(latest_0, steps) as first_timestamp
        FROM
          (SELECT aggregation_target,
                  steps,
                  max(steps) over (PARTITION BY aggregation_target) as max_steps,
                                  step_1_conversion_time ,
                                  latest_0,
                                  latest_1,
                                  latest_0
           FROM
             (SELECT *,
                     if(latest_0 < latest_1
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                     if(isNotNull(latest_1)
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
              FROM
                (SELECT aggregation_target,
                        timestamp,
                        step_0,
                        latest_0,
                        step_1,
                        min(latest_1) over (PARTITION by aggregation_target
                                            ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
                 FROM
                   (SELECT aggregation_target,
                           timestamp,
                           if(event = 'user signed up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'paid', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1
                    FROM
                      (SELECT e.event as event,
                              e.team_id as team_id,
                              e.distinct_id as distinct_id,
                              e.timestamp as timestamp,
                              pdi.person_id as aggregation_target
                       FROM events e
                       INNER JOIN
                         (SELECT distinct_id,
                                 argMax(person_id, _timestamp) as person_id
                          FROM
                            (SELECT distinct_id,
                                    person_id,
                                    max(_timestamp) as _timestamp
                             FROM person_distinct_id
                             WHERE team_id = 2
                             GROUP BY person_id,
                                      distinct_id,
                                      team_id
                             HAVING max(is_deleted) = 0)
                          GROUP BY distinct_id) AS pdi ON events.distinct_id = pdi.distinct_id
                       WHERE team_id = 2
                         AND event IN ['paid', 'user signed up']
                         AND timestamp >= '2020-01-01 00:00:00'
                         AND timestamp <= '2020-01-14 23:59:59' ) events
                    WHERE (step_0 = 1
                           OR step_1 = 1) ))
              WHERE step_0 = 1 SETTINGS allow_experimental_window_functions = 1 ))
        GROUP BY aggregation_target,
                 steps
        HAVING steps = max_steps SETTINGS allow_experimental_window_functions = 1)
     WHERE steps IN [1, 2]
     ORDER BY aggregation_target
     OFFSET 0 SETTINGS allow_experimental_window_functions = 1),
       2 AS target_step
  SELECT DISTINCT funnel_people.person_id as person_id
  FROM funnel_people
  JOIN
    (SELECT id
     FROM person
     WHERE team_id = 2
     GROUP BY id
     HAVING max(is_deleted) = 0
     AND has(['Negative'], trim(BOTH '"'
                                FROM JSONExtractRaw(argMax(person.properties, _timestamp), '$browser')))) person ON person.id = funnel_people.person_id
  WHERE funnel_people.steps <> target_step
  ORDER BY person_id
  LIMIT 100
  OFFSET 0
  '
---
# name: TestClickhouseFunnelCorrelation.test_basic_funnel_correlation_with_properties_materialized
  '
  WITH funnel_people as
    (SELECT aggregation_target as person_id,
            timestamp,
            steps,
            final_timestamp,
            first_timestamp
     FROM
       (SELECT aggregation_target,
               steps,
               avg(step_1_conversion_time) step_1_average_conversion_time_inner,
               median(step_1_conversion_time) step_1_median_conversion_time_inner ,
               argMax(latest_0, steps) as timestamp,
               argMax(latest_1, steps) as final_timestamp,
               argMax(latest_0, steps) as first_timestamp
        FROM
          (SELECT aggregation_target,
                  steps,
                  max(steps) over (PARTITION BY aggregation_target) as max_steps,
                                  step_1_conversion_time ,
                                  latest_0,
                                  latest_1,
                                  latest_0
           FROM
             (SELECT *,
                     if(latest_0 < latest_1
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                     if(isNotNull(latest_1)
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
              FROM
                (SELECT aggregation_target,
                        timestamp,
                        step_0,
                        latest_0,
                        step_1,
                        min(latest_1) over (PARTITION by aggregation_target
                                            ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
                 FROM
                   (SELECT aggregation_target,
                           timestamp,
                           if(event = 'user signed up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'paid', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1
                    FROM
                      (SELECT e.event as event,
                              e.team_id as team_id,
                              e.distinct_id as distinct_id,
                              e.timestamp as timestamp,
                              pdi.person_id as aggregation_target
                       FROM events e
                       INNER JOIN
                         (SELECT distinct_id,
                                 argMax(person_id, _timestamp) as person_id
                          FROM
                            (SELECT distinct_id,
                                    person_id,
                                    max(_timestamp) as _timestamp
                             FROM person_distinct_id
                             WHERE team_id = 2
                             GROUP BY person_id,
                                      distinct_id,
                                      team_id
                             HAVING max(is_deleted) = 0)
                          GROUP BY distinct_id) AS pdi ON events.distinct_id = pdi.distinct_id
                       WHERE team_id = 2
                         AND event IN ['paid', 'user signed up']
                         AND timestamp >= '2020-01-01 00:00:00'
                         AND timestamp <= '2020-01-14 23:59:59' ) events
                    WHERE (step_0 = 1
                           OR step_1 = 1) ))
              WHERE step_0 = 1 SETTINGS allow_experimental_window_functions = 1 ))
        GROUP BY aggregation_target,
                 steps
        HAVING steps = max_steps SETTINGS allow_experimental_window_functions = 1)
     WHERE steps IN [1, 2]
     ORDER BY aggregation_target
     OFFSET 0 SETTINGS allow_experimental_window_functions = 1),
       2 AS target_step
  SELECT concat(prop.1, '::', prop.2) as name,
         countDistinctIf(person_id, steps = target_step) AS success_count,
         countDistinctIf(person_id, steps <> target_step) AS failure_count
  FROM
    (SELECT person_id,
            funnel_people.steps as steps,
            arrayJoin(arrayZip(['$browser'], [pmat_$browser])) as prop
     FROM funnel_people
     JOIN
       (SELECT id,
               argMax(pmat_$browser, _timestamp) as pmat_$browser
        FROM person
        WHERE team_id = 2
        GROUP BY id
        HAVING max(is_deleted) = 0) person ON person.id = funnel_people.person_id) aggregation_target_with_props
  GROUP BY prop.1,
               prop.2
  HAVING prop.1 NOT IN []
  UNION ALL
  SELECT 'Total_Values_In_Query' as name,
         countDistinctIf(person_id, steps = target_step) AS success_count,
         countDistinctIf(person_id, steps <> target_step) AS failure_count
  FROM funnel_people
  '
---
# name: TestClickhouseFunnelCorrelation.test_basic_funnel_correlation_with_properties_materialized.1
  '
  WITH funnel_people as
    (SELECT aggregation_target as person_id,
            timestamp,
            steps,
            final_timestamp,
            first_timestamp
     FROM
       (SELECT aggregation_target,
               steps,
               avg(step_1_conversion_time) step_1_average_conversion_time_inner,
               median(step_1_conversion_time) step_1_median_conversion_time_inner ,
               argMax(latest_0, steps) as timestamp,
               argMax(latest_1, steps) as final_timestamp,
               argMax(latest_0, steps) as first_timestamp
        FROM
          (SELECT aggregation_target,
                  steps,
                  max(steps) over (PARTITION BY aggregation_target) as max_steps,
                                  step_1_conversion_time ,
                                  latest_0,
                                  latest_1,
                                  latest_0
           FROM
             (SELECT *,
                     if(latest_0 < latest_1
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                     if(isNotNull(latest_1)
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
              FROM
                (SELECT aggregation_target,
                        timestamp,
                        step_0,
                        latest_0,
                        step_1,
                        min(latest_1) over (PARTITION by aggregation_target
                                            ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
                 FROM
                   (SELECT aggregation_target,
                           timestamp,
                           if(event = 'user signed up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'paid', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1
                    FROM
                      (SELECT e.event as event,
                              e.team_id as team_id,
                              e.distinct_id as distinct_id,
                              e.timestamp as timestamp,
                              pdi.person_id as aggregation_target
                       FROM events e
                       INNER JOIN
                         (SELECT distinct_id,
                                 argMax(person_id, _timestamp) as person_id
                          FROM
                            (SELECT distinct_id,
                                    person_id,
                                    max(_timestamp) as _timestamp
                             FROM person_distinct_id
                             WHERE team_id = 2
                             GROUP BY person_id,
                                      distinct_id,
                                      team_id
                             HAVING max(is_deleted) = 0)
                          GROUP BY distinct_id) AS pdi ON events.distinct_id = pdi.distinct_id
                       WHERE team_id = 2
                         AND event IN ['paid', 'user signed up']
                         AND timestamp >= '2020-01-01 00:00:00'
                         AND timestamp <= '2020-01-14 23:59:59' ) events
                    WHERE (step_0 = 1
                           OR step_1 = 1) ))
              WHERE step_0 = 1 SETTINGS allow_experimental_window_functions = 1 ))
        GROUP BY aggregation_target,
                 steps
        HAVING steps = max_steps SETTINGS allow_experimental_window_functions = 1)
     WHERE steps IN [1, 2]
     ORDER BY aggregation_target
     OFFSET 0 SETTINGS allow_experimental_window_functions = 1),
       2 AS target_step
  SELECT DISTINCT funnel_people.person_id as person_id
  FROM funnel_people
  JOIN
    (SELECT id
     FROM person
     WHERE team_id = 2
     GROUP BY id
     HAVING max(is_deleted) = 0
     AND has(['Positive'], argMax(person.pmat_$browser, _timestamp))) person ON person.id = funnel_people.person_id
  WHERE funnel_people.steps = target_step
  ORDER BY person_id
  LIMIT 100
  OFFSET 0
  '
---
# name: TestClickhouseFunnelCorrelation.test_basic_funnel_correlation_with_properties_materialized.2
  '
  WITH funnel_people as
    (SELECT aggregation_target as person_id,
            timestamp,
            steps,
            final_timestamp,
            first_timestamp
     FROM
       (SELECT aggregation_target,
               steps,
               avg(step_1_conversion_time) step_1_average_conversion_time_inner,
               median(step_1_conversion_time) step_1_median_conversion_time_inner ,
               argMax(latest_0, steps) as timestamp,
               argMax(latest_1, steps) as final_timestamp,
               argMax(latest_0, steps) as first_timestamp
        FROM
          (SELECT aggregation_target,
                  steps,
                  max(steps) over (PARTITION BY aggregation_target) as max_steps,
                                  step_1_conversion_time ,
                                  latest_0,
                                  latest_1,
                                  latest_0
           FROM
             (SELECT *,
                     if(latest_0 < latest_1
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                     if(isNotNull(latest_1)
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
              FROM
                (SELECT aggregation_target,
                        timestamp,
                        step_0,
                        latest_0,
                        step_1,
                        min(latest_1) over (PARTITION by aggregation_target
                                            ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
                 FROM
                   (SELECT aggregation_target,
                           timestamp,
                           if(event = 'user signed up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'paid', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1
                    FROM
                      (SELECT e.event as event,
                              e.team_id as team_id,
                              e.distinct_id as distinct_id,
                              e.timestamp as timestamp,
                              pdi.person_id as aggregation_target
                       FROM events e
                       INNER JOIN
                         (SELECT distinct_id,
                                 argMax(person_id, _timestamp) as person_id
                          FROM
                            (SELECT distinct_id,
                                    person_id,
                                    max(_timestamp) as _timestamp
                             FROM person_distinct_id
                             WHERE team_id = 2
                             GROUP BY person_id,
                                      distinct_id,
                                      team_id
                             HAVING max(is_deleted) = 0)
                          GROUP BY distinct_id) AS pdi ON events.distinct_id = pdi.distinct_id
                       WHERE team_id = 2
                         AND event IN ['paid', 'user signed up']
                         AND timestamp >= '2020-01-01 00:00:00'
                         AND timestamp <= '2020-01-14 23:59:59' ) events
                    WHERE (step_0 = 1
                           OR step_1 = 1) ))
              WHERE step_0 = 1 SETTINGS allow_experimental_window_functions = 1 ))
        GROUP BY aggregation_target,
                 steps
        HAVING steps = max_steps SETTINGS allow_experimental_window_functions = 1)
     WHERE steps IN [1, 2]
     ORDER BY aggregation_target
     OFFSET 0 SETTINGS allow_experimental_window_functions = 1),
       2 AS target_step
  SELECT DISTINCT funnel_people.person_id as person_id
  FROM funnel_people
  JOIN
    (SELECT id
     FROM person
     WHERE team_id = 2
     GROUP BY id
     HAVING max(is_deleted) = 0
     AND has(['Positive'], argMax(person.pmat_$browser, _timestamp))) person ON person.id = funnel_people.person_id
  WHERE funnel_people.steps <> target_step
  ORDER BY person_id
  LIMIT 100
  OFFSET 0
  '
---
# name: TestClickhouseFunnelCorrelation.test_basic_funnel_correlation_with_properties_materialized.3
  '
  WITH funnel_people as
    (SELECT aggregation_target as person_id,
            timestamp,
            steps,
            final_timestamp,
            first_timestamp
     FROM
       (SELECT aggregation_target,
               steps,
               avg(step_1_conversion_time) step_1_average_conversion_time_inner,
               median(step_1_conversion_time) step_1_median_conversion_time_inner ,
               argMax(latest_0, steps) as timestamp,
               argMax(latest_1, steps) as final_timestamp,
               argMax(latest_0, steps) as first_timestamp
        FROM
          (SELECT aggregation_target,
                  steps,
                  max(steps) over (PARTITION BY aggregation_target) as max_steps,
                                  step_1_conversion_time ,
                                  latest_0,
                                  latest_1,
                                  latest_0
           FROM
             (SELECT *,
                     if(latest_0 < latest_1
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                     if(isNotNull(latest_1)
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
              FROM
                (SELECT aggregation_target,
                        timestamp,
                        step_0,
                        latest_0,
                        step_1,
                        min(latest_1) over (PARTITION by aggregation_target
                                            ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
                 FROM
                   (SELECT aggregation_target,
                           timestamp,
                           if(event = 'user signed up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'paid', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1
                    FROM
                      (SELECT e.event as event,
                              e.team_id as team_id,
                              e.distinct_id as distinct_id,
                              e.timestamp as timestamp,
                              pdi.person_id as aggregation_target
                       FROM events e
                       INNER JOIN
                         (SELECT distinct_id,
                                 argMax(person_id, _timestamp) as person_id
                          FROM
                            (SELECT distinct_id,
                                    person_id,
                                    max(_timestamp) as _timestamp
                             FROM person_distinct_id
                             WHERE team_id = 2
                             GROUP BY person_id,
                                      distinct_id,
                                      team_id
                             HAVING max(is_deleted) = 0)
                          GROUP BY distinct_id) AS pdi ON events.distinct_id = pdi.distinct_id
                       WHERE team_id = 2
                         AND event IN ['paid', 'user signed up']
                         AND timestamp >= '2020-01-01 00:00:00'
                         AND timestamp <= '2020-01-14 23:59:59' ) events
                    WHERE (step_0 = 1
                           OR step_1 = 1) ))
              WHERE step_0 = 1 SETTINGS allow_experimental_window_functions = 1 ))
        GROUP BY aggregation_target,
                 steps
        HAVING steps = max_steps SETTINGS allow_experimental_window_functions = 1)
     WHERE steps IN [1, 2]
     ORDER BY aggregation_target
     OFFSET 0 SETTINGS allow_experimental_window_functions = 1),
       2 AS target_step
  SELECT DISTINCT funnel_people.person_id as person_id
  FROM funnel_people
  JOIN
    (SELECT id
     FROM person
     WHERE team_id = 2
     GROUP BY id
     HAVING max(is_deleted) = 0
     AND has(['Negative'], argMax(person.pmat_$browser, _timestamp))) person ON person.id = funnel_people.person_id
  WHERE funnel_people.steps = target_step
  ORDER BY person_id
  LIMIT 100
  OFFSET 0
  '
---
# name: TestClickhouseFunnelCorrelation.test_basic_funnel_correlation_with_properties_materialized.4
  '
  WITH funnel_people as
    (SELECT aggregation_target as person_id,
            timestamp,
            steps,
            final_timestamp,
            first_timestamp
     FROM
       (SELECT aggregation_target,
               steps,
               avg(step_1_conversion_time) step_1_average_conversion_time_inner,
               median(step_1_conversion_time) step_1_median_conversion_time_inner ,
               argMax(latest_0, steps) as timestamp,
               argMax(latest_1, steps) as final_timestamp,
               argMax(latest_0, steps) as first_timestamp
        FROM
          (SELECT aggregation_target,
                  steps,
                  max(steps) over (PARTITION BY aggregation_target) as max_steps,
                                  step_1_conversion_time ,
                                  latest_0,
                                  latest_1,
                                  latest_0
           FROM
             (SELECT *,
                     if(latest_0 < latest_1
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                     if(isNotNull(latest_1)
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
              FROM
                (SELECT aggregation_target,
                        timestamp,
                        step_0,
                        latest_0,
                        step_1,
                        min(latest_1) over (PARTITION by aggregation_target
                                            ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
                 FROM
                   (SELECT aggregation_target,
                           timestamp,
                           if(event = 'user signed up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'paid', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1
                    FROM
                      (SELECT e.event as event,
                              e.team_id as team_id,
                              e.distinct_id as distinct_id,
                              e.timestamp as timestamp,
                              pdi.person_id as aggregation_target
                       FROM events e
                       INNER JOIN
                         (SELECT distinct_id,
                                 argMax(person_id, _timestamp) as person_id
                          FROM
                            (SELECT distinct_id,
                                    person_id,
                                    max(_timestamp) as _timestamp
                             FROM person_distinct_id
                             WHERE team_id = 2
                             GROUP BY person_id,
                                      distinct_id,
                                      team_id
                             HAVING max(is_deleted) = 0)
                          GROUP BY distinct_id) AS pdi ON events.distinct_id = pdi.distinct_id
                       WHERE team_id = 2
                         AND event IN ['paid', 'user signed up']
                         AND timestamp >= '2020-01-01 00:00:00'
                         AND timestamp <= '2020-01-14 23:59:59' ) events
                    WHERE (step_0 = 1
                           OR step_1 = 1) ))
              WHERE step_0 = 1 SETTINGS allow_experimental_window_functions = 1 ))
        GROUP BY aggregation_target,
                 steps
        HAVING steps = max_steps SETTINGS allow_experimental_window_functions = 1)
     WHERE steps IN [1, 2]
     ORDER BY aggregation_target
     OFFSET 0 SETTINGS allow_experimental_window_functions = 1),
       2 AS target_step
  SELECT DISTINCT funnel_people.person_id as person_id
  FROM funnel_people
  JOIN
    (SELECT id
     FROM person
     WHERE team_id = 2
     GROUP BY id
     HAVING max(is_deleted) = 0
     AND has(['Negative'], argMax(person.pmat_$browser, _timestamp))) person ON person.id = funnel_people.person_id
  WHERE funnel_people.steps <> target_step
  ORDER BY person_id
  LIMIT 100
  OFFSET 0
  '
---
# name: TestClickhouseFunnelCorrelation.test_funnel_correlation_with_event_properties_and_groups
  '
  WITH funnel_people as
    (SELECT aggregation_target as person_id,
            timestamp,
            steps,
            final_timestamp,
            first_timestamp
     FROM
       (SELECT aggregation_target,
               steps,
               avg(step_1_conversion_time) step_1_average_conversion_time_inner,
               median(step_1_conversion_time) step_1_median_conversion_time_inner ,
               argMax(latest_0, steps) as timestamp,
               argMax(latest_1, steps) as final_timestamp,
               argMax(latest_0, steps) as first_timestamp
        FROM
          (SELECT aggregation_target,
                  steps,
                  max(steps) over (PARTITION BY aggregation_target) as max_steps,
                                  step_1_conversion_time ,
                                  latest_0,
                                  latest_1,
                                  latest_0
           FROM
             (SELECT *,
                     if(latest_0 < latest_1
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                     if(isNotNull(latest_1)
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
              FROM
                (SELECT aggregation_target,
                        timestamp,
                        step_0,
                        latest_0,
                        step_1,
                        min(latest_1) over (PARTITION by aggregation_target
                                            ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
                 FROM
                   (SELECT aggregation_target,
                           timestamp,
                           if(event = 'user signed up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'paid', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1
                    FROM
                      (SELECT e.event as event,
                              e.team_id as team_id,
                              e.distinct_id as distinct_id,
                              e.timestamp as timestamp,
                              e.$group_1 as aggregation_target
                       FROM events e
                       INNER JOIN
                         (SELECT distinct_id,
                                 argMax(person_id, _timestamp) as person_id
                          FROM
                            (SELECT distinct_id,
                                    person_id,
                                    max(_timestamp) as _timestamp
                             FROM person_distinct_id
                             WHERE team_id = 2
                             GROUP BY person_id,
                                      distinct_id,
                                      team_id
                             HAVING max(is_deleted) = 0)
                          GROUP BY distinct_id) AS pdi ON events.distinct_id = pdi.distinct_id
                       WHERE team_id = 2
                         AND event IN ['paid', 'user signed up']
                         AND timestamp >= '2020-01-01 00:00:00'
                         AND timestamp <= '2020-01-14 23:59:59' ) events
                    WHERE (step_0 = 1
                           OR step_1 = 1) ))
              WHERE step_0 = 1 SETTINGS allow_experimental_window_functions = 1 ))
        GROUP BY aggregation_target,
                 steps
        HAVING steps = max_steps SETTINGS allow_experimental_window_functions = 1)
     WHERE steps IN [1, 2]
     ORDER BY aggregation_target
     OFFSET 0 SETTINGS allow_experimental_window_functions = 1),
       toDateTime('2020-01-14 23:59:59') AS date_to,
       toDateTime('2020-01-01 00:00:00') AS date_from,
       2 AS target_step,
       ['user signed up', 'paid'] as funnel_step_names
  SELECT concat(event_name, '::', prop.1, '::', prop.2) as name,
         countDistinctIf(person_id, steps = target_step) as success_count,
         countDistinctIf(person_id, steps <> target_step) as failure_count
  FROM
    (SELECT person.person_id as person_id,
            person.steps as steps,
            events.event as event_name,
            arrayMap(x -> x.1, JSONExtractKeysAndValuesRaw(properties)) as prop_keys,
            arrayMap(x -> trim(BOTH '"'
                               FROM JSONExtractRaw(properties, x)), prop_keys) as prop_values,
            arrayJoin(arrayZip(prop_keys, prop_values)) as prop
     FROM events AS event
     JOIN funnel_people AS person ON person.person_id = events.$group_1
     WHERE event.timestamp >= date_from
       AND event.timestamp < date_to
       AND event.team_id = 2
       AND event.timestamp > person.first_timestamp
       AND event.timestamp < COALESCE(person.final_timestamp, person.first_timestamp + INTERVAL 14 DAY, date_to)
       AND event.event NOT IN funnel_step_names
       AND event.event IN ['positively_related', 'negatively_related'] )
  GROUP BY name
  HAVING (success_count + failure_count) > 2
  AND prop.1 NOT IN []
  UNION ALL
  SELECT 'Total_Values_In_Query' as name,
         countDistinctIf(person.person_id, person.steps = target_step) AS success_count,
         countDistinctIf(person.person_id, person.steps <> target_step) AS failure_count
  FROM funnel_people AS person
  '
---
# name: TestClickhouseFunnelCorrelation.test_funnel_correlation_with_event_properties_and_groups_materialized
  '
  WITH funnel_people as
    (SELECT aggregation_target as person_id,
            timestamp,
            steps,
            final_timestamp,
            first_timestamp
     FROM
       (SELECT aggregation_target,
               steps,
               avg(step_1_conversion_time) step_1_average_conversion_time_inner,
               median(step_1_conversion_time) step_1_median_conversion_time_inner ,
               argMax(latest_0, steps) as timestamp,
               argMax(latest_1, steps) as final_timestamp,
               argMax(latest_0, steps) as first_timestamp
        FROM
          (SELECT aggregation_target,
                  steps,
                  max(steps) over (PARTITION BY aggregation_target) as max_steps,
                                  step_1_conversion_time ,
                                  latest_0,
                                  latest_1,
                                  latest_0
           FROM
             (SELECT *,
                     if(latest_0 < latest_1
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                     if(isNotNull(latest_1)
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
              FROM
                (SELECT aggregation_target,
                        timestamp,
                        step_0,
                        latest_0,
                        step_1,
                        min(latest_1) over (PARTITION by aggregation_target
                                            ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
                 FROM
                   (SELECT aggregation_target,
                           timestamp,
                           if(event = 'user signed up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'paid', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1
                    FROM
                      (SELECT e.event as event,
                              e.team_id as team_id,
                              e.distinct_id as distinct_id,
                              e.timestamp as timestamp,
                              e.$group_1 as aggregation_target
                       FROM events e
                       INNER JOIN
                         (SELECT distinct_id,
                                 argMax(person_id, _timestamp) as person_id
                          FROM
                            (SELECT distinct_id,
                                    person_id,
                                    max(_timestamp) as _timestamp
                             FROM person_distinct_id
                             WHERE team_id = 2
                             GROUP BY person_id,
                                      distinct_id,
                                      team_id
                             HAVING max(is_deleted) = 0)
                          GROUP BY distinct_id) AS pdi ON events.distinct_id = pdi.distinct_id
                       WHERE team_id = 2
                         AND event IN ['paid', 'user signed up']
                         AND timestamp >= '2020-01-01 00:00:00'
                         AND timestamp <= '2020-01-14 23:59:59' ) events
                    WHERE (step_0 = 1
                           OR step_1 = 1) ))
              WHERE step_0 = 1 SETTINGS allow_experimental_window_functions = 1 ))
        GROUP BY aggregation_target,
                 steps
        HAVING steps = max_steps SETTINGS allow_experimental_window_functions = 1)
     WHERE steps IN [1, 2]
     ORDER BY aggregation_target
     OFFSET 0 SETTINGS allow_experimental_window_functions = 1),
       toDateTime('2020-01-14 23:59:59') AS date_to,
       toDateTime('2020-01-01 00:00:00') AS date_from,
       2 AS target_step,
       ['user signed up', 'paid'] as funnel_step_names
  SELECT concat(event_name, '::', prop.1, '::', prop.2) as name,
         countDistinctIf(person_id, steps = target_step) as success_count,
         countDistinctIf(person_id, steps <> target_step) as failure_count
  FROM
    (SELECT person.person_id as person_id,
            person.steps as steps,
            events.event as event_name,
            arrayMap(x -> x.1, JSONExtractKeysAndValuesRaw(properties)) as prop_keys,
            arrayMap(x -> trim(BOTH '"'
                               FROM JSONExtractRaw(properties, x)), prop_keys) as prop_values,
            arrayJoin(arrayZip(prop_keys, prop_values)) as prop
     FROM events AS event
     JOIN funnel_people AS person ON person.person_id = events.$group_1
     WHERE event.timestamp >= date_from
       AND event.timestamp < date_to
       AND event.team_id = 2
       AND event.timestamp > person.first_timestamp
       AND event.timestamp < COALESCE(person.final_timestamp, person.first_timestamp + INTERVAL 14 DAY, date_to)
       AND event.event NOT IN funnel_step_names
       AND event.event IN ['positively_related', 'negatively_related'] )
  GROUP BY name
  HAVING (success_count + failure_count) > 2
  AND prop.1 NOT IN []
  UNION ALL
  SELECT 'Total_Values_In_Query' as name,
         countDistinctIf(person.person_id, person.steps = target_step) AS success_count,
         countDistinctIf(person.person_id, person.steps <> target_step) AS failure_count
  FROM funnel_people AS person
  '
---
# name: TestClickhouseFunnelCorrelation.test_funnel_correlation_with_events_and_groups
  '
  WITH funnel_people as
    (SELECT aggregation_target as person_id,
            timestamp,
            steps,
            final_timestamp,
            first_timestamp
     FROM
       (SELECT aggregation_target,
               steps,
               avg(step_1_conversion_time) step_1_average_conversion_time_inner,
               median(step_1_conversion_time) step_1_median_conversion_time_inner ,
               argMax(latest_0, steps) as timestamp,
               argMax(latest_1, steps) as final_timestamp,
               argMax(latest_0, steps) as first_timestamp
        FROM
          (SELECT aggregation_target,
                  steps,
                  max(steps) over (PARTITION BY aggregation_target) as max_steps,
                                  step_1_conversion_time ,
                                  latest_0,
                                  latest_1,
                                  latest_0
           FROM
             (SELECT *,
                     if(latest_0 < latest_1
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                     if(isNotNull(latest_1)
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
              FROM
                (SELECT aggregation_target,
                        timestamp,
                        step_0,
                        latest_0,
                        step_1,
                        min(latest_1) over (PARTITION by aggregation_target
                                            ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
                 FROM
                   (SELECT aggregation_target,
                           timestamp,
                           if(event = 'user signed up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'paid', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1
                    FROM
                      (SELECT e.event as event,
                              e.team_id as team_id,
                              e.distinct_id as distinct_id,
                              e.timestamp as timestamp,
                              e.$group_0 as aggregation_target
                       FROM events e
                       INNER JOIN
                         (SELECT distinct_id,
                                 argMax(person_id, _timestamp) as person_id
                          FROM
                            (SELECT distinct_id,
                                    person_id,
                                    max(_timestamp) as _timestamp
                             FROM person_distinct_id
                             WHERE team_id = 2
                             GROUP BY person_id,
                                      distinct_id,
                                      team_id
                             HAVING max(is_deleted) = 0)
                          GROUP BY distinct_id) AS pdi ON events.distinct_id = pdi.distinct_id
                       WHERE team_id = 2
                         AND event IN ['paid', 'user signed up']
                         AND timestamp >= '2020-01-01 00:00:00'
                         AND timestamp <= '2020-01-14 23:59:59' ) events
                    WHERE (step_0 = 1
                           OR step_1 = 1) ))
              WHERE step_0 = 1 SETTINGS allow_experimental_window_functions = 1 ))
        GROUP BY aggregation_target,
                 steps
        HAVING steps = max_steps SETTINGS allow_experimental_window_functions = 1)
     WHERE steps IN [1, 2]
     ORDER BY aggregation_target
     OFFSET 0 SETTINGS allow_experimental_window_functions = 1),
       toDateTime('2020-01-14 23:59:59') AS date_to,
       toDateTime('2020-01-01 00:00:00') AS date_from,
       2 AS target_step,
       ['user signed up', 'paid'] as funnel_step_names
  SELECT event.event AS name,
         countDistinctIf(person.person_id, person.steps = target_step) AS success_count,
         countDistinctIf(person.person_id, person.steps <> target_step) AS failure_count
  FROM events AS event
  JOIN funnel_people AS person ON person.person_id = events.$group_0
  WHERE event.timestamp >= date_from
    AND event.timestamp < date_to
    AND event.team_id = 2
    AND event.timestamp > person.first_timestamp
    AND event.timestamp < COALESCE(person.final_timestamp, person.first_timestamp + INTERVAL 14 DAY, date_to)
    AND event.event NOT IN funnel_step_names
    AND event.event NOT IN []
  GROUP BY name
  UNION ALL
  SELECT 'Total_Values_In_Query' as name,
         countDistinctIf(person.person_id, person.steps = target_step) AS success_count,
         countDistinctIf(person.person_id, person.steps <> target_step) AS failure_count
  FROM funnel_people AS person
  '
---
# name: TestClickhouseFunnelCorrelation.test_funnel_correlation_with_events_and_groups.1
  '
  WITH funnel_people as
    (SELECT aggregation_target as person_id,
            timestamp,
            steps,
            final_timestamp,
            first_timestamp
     FROM
       (SELECT aggregation_target,
               steps,
               avg(step_1_conversion_time) step_1_average_conversion_time_inner,
               median(step_1_conversion_time) step_1_median_conversion_time_inner ,
               argMax(latest_0, steps) as timestamp,
               argMax(latest_1, steps) as final_timestamp,
               argMax(latest_0, steps) as first_timestamp
        FROM
          (SELECT aggregation_target,
                  steps,
                  max(steps) over (PARTITION BY aggregation_target) as max_steps,
                                  step_1_conversion_time ,
                                  latest_0,
                                  latest_1,
                                  latest_0
           FROM
             (SELECT *,
                     if(latest_0 < latest_1
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                     if(isNotNull(latest_1)
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
              FROM
                (SELECT aggregation_target,
                        timestamp,
                        step_0,
                        latest_0,
                        step_1,
                        min(latest_1) over (PARTITION by aggregation_target
                                            ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
                 FROM
                   (SELECT aggregation_target,
                           timestamp,
                           if(event = 'user signed up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'paid', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1
                    FROM
                      (SELECT e.event as event,
                              e.team_id as team_id,
                              e.distinct_id as distinct_id,
                              e.timestamp as timestamp,
                              e.$group_0 as aggregation_target,
                              groups_0.group_properties_0 as group_properties_0
                       FROM events e
                       INNER JOIN
                         (SELECT distinct_id,
                                 argMax(person_id, _timestamp) as person_id
                          FROM
                            (SELECT distinct_id,
                                    person_id,
                                    max(_timestamp) as _timestamp
                             FROM person_distinct_id
                             WHERE team_id = 2
                             GROUP BY person_id,
                                      distinct_id,
                                      team_id
                             HAVING max(is_deleted) = 0)
                          GROUP BY distinct_id) AS pdi ON events.distinct_id = pdi.distinct_id
                       INNER JOIN
                         (SELECT group_key,
                                 argMax(group_properties, _timestamp) AS group_properties_0
                          FROM groups
                          WHERE team_id = 2
                            AND group_type_index = 0
                          GROUP BY group_key) groups_0 ON $group_0 == groups_0.group_key
                       WHERE team_id = 2
                         AND event IN ['paid', 'user signed up']
                         AND timestamp >= '2020-01-01 00:00:00'
                         AND timestamp <= '2020-01-14 23:59:59'
                         AND has(['finance'], trim(BOTH '"'
                                                   FROM JSONExtractRaw(group_properties_0, 'industry'))) ) events
                    WHERE (step_0 = 1
                           OR step_1 = 1) ))
              WHERE step_0 = 1 SETTINGS allow_experimental_window_functions = 1 ))
        GROUP BY aggregation_target,
                 steps
        HAVING steps = max_steps SETTINGS allow_experimental_window_functions = 1)
     WHERE steps IN [1, 2]
     ORDER BY aggregation_target
     OFFSET 0 SETTINGS allow_experimental_window_functions = 1),
       toDateTime('2020-01-14 23:59:59') AS date_to,
       toDateTime('2020-01-01 00:00:00') AS date_from,
       2 AS target_step,
       ['user signed up', 'paid'] as funnel_step_names
  SELECT event.event AS name,
         countDistinctIf(person.person_id, person.steps = target_step) AS success_count,
         countDistinctIf(person.person_id, person.steps <> target_step) AS failure_count
  FROM events AS event
  JOIN funnel_people AS person ON person.person_id = events.$group_0
  WHERE event.timestamp >= date_from
    AND event.timestamp < date_to
    AND event.team_id = 2
    AND event.timestamp > person.first_timestamp
    AND event.timestamp < COALESCE(person.final_timestamp, person.first_timestamp + INTERVAL 14 DAY, date_to)
    AND event.event NOT IN funnel_step_names
    AND event.event NOT IN []
  GROUP BY name
  UNION ALL
  SELECT 'Total_Values_In_Query' as name,
         countDistinctIf(person.person_id, person.steps = target_step) AS success_count,
         countDistinctIf(person.person_id, person.steps <> target_step) AS failure_count
  FROM funnel_people AS person
  '
---
# name: TestClickhouseFunnelCorrelation.test_funnel_correlation_with_properties_and_groups
  '
  WITH funnel_people as
    (SELECT aggregation_target as person_id,
            timestamp,
            steps,
            final_timestamp,
            first_timestamp
     FROM
       (SELECT aggregation_target,
               steps,
               avg(step_1_conversion_time) step_1_average_conversion_time_inner,
               median(step_1_conversion_time) step_1_median_conversion_time_inner ,
               argMax(latest_0, steps) as timestamp,
               argMax(latest_1, steps) as final_timestamp,
               argMax(latest_0, steps) as first_timestamp
        FROM
          (SELECT aggregation_target,
                  steps,
                  max(steps) over (PARTITION BY aggregation_target) as max_steps,
                                  step_1_conversion_time ,
                                  latest_0,
                                  latest_1,
                                  latest_0
           FROM
             (SELECT *,
                     if(latest_0 < latest_1
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                     if(isNotNull(latest_1)
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
              FROM
                (SELECT aggregation_target,
                        timestamp,
                        step_0,
                        latest_0,
                        step_1,
                        min(latest_1) over (PARTITION by aggregation_target
                                            ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
                 FROM
                   (SELECT aggregation_target,
                           timestamp,
                           if(event = 'user signed up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'paid', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1
                    FROM
                      (SELECT e.event as event,
                              e.team_id as team_id,
                              e.distinct_id as distinct_id,
                              e.timestamp as timestamp,
                              e.$group_0 as aggregation_target
                       FROM events e
                       INNER JOIN
                         (SELECT distinct_id,
                                 argMax(person_id, _timestamp) as person_id
                          FROM
                            (SELECT distinct_id,
                                    person_id,
                                    max(_timestamp) as _timestamp
                             FROM person_distinct_id
                             WHERE team_id = 2
                             GROUP BY person_id,
                                      distinct_id,
                                      team_id
                             HAVING max(is_deleted) = 0)
                          GROUP BY distinct_id) AS pdi ON events.distinct_id = pdi.distinct_id
                       WHERE team_id = 2
                         AND event IN ['paid', 'user signed up']
                         AND timestamp >= '2020-01-01 00:00:00'
                         AND timestamp <= '2020-01-14 23:59:59' ) events
                    WHERE (step_0 = 1
                           OR step_1 = 1) ))
              WHERE step_0 = 1 SETTINGS allow_experimental_window_functions = 1 ))
        GROUP BY aggregation_target,
                 steps
        HAVING steps = max_steps SETTINGS allow_experimental_window_functions = 1)
     WHERE steps IN [1, 2]
     ORDER BY aggregation_target
     OFFSET 0 SETTINGS allow_experimental_window_functions = 1),
       2 AS target_step
  SELECT concat(prop.1, '::', prop.2) as name,
         countDistinctIf(person_id, steps = target_step) AS success_count,
         countDistinctIf(person_id, steps <> target_step) AS failure_count
  FROM
    (SELECT person_id,
            funnel_people.steps as steps,
            arrayJoin(arrayZip(['industry'], [trim(BOTH '"' FROM JSONExtractRaw(groups_0.group_properties_0, 'industry'))])) as prop
     FROM funnel_people
     INNER JOIN
       (SELECT group_key,
               argMax(group_properties, _timestamp) AS group_properties_0
        FROM groups
        WHERE team_id = 2
          AND group_type_index = 0
        GROUP BY group_key) groups_0 ON funnel_people.person_id == groups_0.group_key) aggregation_target_with_props
  GROUP BY prop.1,
               prop.2
  HAVING prop.1 NOT IN []
  UNION ALL
  SELECT 'Total_Values_In_Query' as name,
         countDistinctIf(person_id, steps = target_step) AS success_count,
         countDistinctIf(person_id, steps <> target_step) AS failure_count
  FROM funnel_people
  '
---
# name: TestClickhouseFunnelCorrelation.test_funnel_correlation_with_properties_and_groups.1
  '
  WITH funnel_people as
    (SELECT aggregation_target as person_id,
            timestamp,
            steps,
            final_timestamp,
            first_timestamp
     FROM
       (SELECT aggregation_target,
               steps,
               avg(step_1_conversion_time) step_1_average_conversion_time_inner,
               median(step_1_conversion_time) step_1_median_conversion_time_inner ,
               argMax(latest_0, steps) as timestamp,
               argMax(latest_1, steps) as final_timestamp,
               argMax(latest_0, steps) as first_timestamp
        FROM
          (SELECT aggregation_target,
                  steps,
                  max(steps) over (PARTITION BY aggregation_target) as max_steps,
                                  step_1_conversion_time ,
                                  latest_0,
                                  latest_1,
                                  latest_0
           FROM
             (SELECT *,
                     if(latest_0 < latest_1
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                     if(isNotNull(latest_1)
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
              FROM
                (SELECT aggregation_target,
                        timestamp,
                        step_0,
                        latest_0,
                        step_1,
                        min(latest_1) over (PARTITION by aggregation_target
                                            ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
                 FROM
                   (SELECT aggregation_target,
                           timestamp,
                           if(event = 'user signed up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'paid', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1
                    FROM
                      (SELECT e.event as event,
                              e.team_id as team_id,
                              e.distinct_id as distinct_id,
                              e.timestamp as timestamp,
                              e.$group_0 as aggregation_target
                       FROM events e
                       INNER JOIN
                         (SELECT distinct_id,
                                 argMax(person_id, _timestamp) as person_id
                          FROM
                            (SELECT distinct_id,
                                    person_id,
                                    max(_timestamp) as _timestamp
                             FROM person_distinct_id
                             WHERE team_id = 2
                             GROUP BY person_id,
                                      distinct_id,
                                      team_id
                             HAVING max(is_deleted) = 0)
                          GROUP BY distinct_id) AS pdi ON events.distinct_id = pdi.distinct_id
                       WHERE team_id = 2
                         AND event IN ['paid', 'user signed up']
                         AND timestamp >= '2020-01-01 00:00:00'
                         AND timestamp <= '2020-01-14 23:59:59' ) events
                    WHERE (step_0 = 1
                           OR step_1 = 1) ))
              WHERE step_0 = 1 SETTINGS allow_experimental_window_functions = 1 ))
        GROUP BY aggregation_target,
                 steps
        HAVING steps = max_steps SETTINGS allow_experimental_window_functions = 1)
     WHERE steps IN [1, 2]
     ORDER BY aggregation_target
     OFFSET 0 SETTINGS allow_experimental_window_functions = 1),
       2 AS target_step
  SELECT concat(prop.1, '::', prop.2) as name,
         countDistinctIf(person_id, steps = target_step) AS success_count,
         countDistinctIf(person_id, steps <> target_step) AS failure_count
  FROM
    (SELECT person_id,
            funnel_people.steps as steps,
            arrayMap(x -> x.1, JSONExtractKeysAndValuesRaw(groups_0.group_properties_0)) as person_prop_keys,
            arrayJoin(arrayZip(person_prop_keys, arrayMap(x -> trim(BOTH '"'
                                                                    FROM JSONExtractRaw(groups_0.group_properties_0, x)), person_prop_keys))) as prop
     FROM funnel_people
     INNER JOIN
       (SELECT group_key,
               argMax(group_properties, _timestamp) AS group_properties_0
        FROM groups
        WHERE team_id = 2
          AND group_type_index = 0
        GROUP BY group_key) groups_0 ON funnel_people.person_id == groups_0.group_key) aggregation_target_with_props
  GROUP BY prop.1,
               prop.2
  HAVING prop.1 NOT IN []
  UNION ALL
  SELECT 'Total_Values_In_Query' as name,
         countDistinctIf(person_id, steps = target_step) AS success_count,
         countDistinctIf(person_id, steps <> target_step) AS failure_count
  FROM funnel_people
  '
---
# name: TestClickhouseFunnelCorrelation.test_funnel_correlation_with_properties_and_groups_materialized
  '
  WITH funnel_people as
    (SELECT aggregation_target as person_id,
            timestamp,
            steps,
            final_timestamp,
            first_timestamp
     FROM
       (SELECT aggregation_target,
               steps,
               avg(step_1_conversion_time) step_1_average_conversion_time_inner,
               median(step_1_conversion_time) step_1_median_conversion_time_inner ,
               argMax(latest_0, steps) as timestamp,
               argMax(latest_1, steps) as final_timestamp,
               argMax(latest_0, steps) as first_timestamp
        FROM
          (SELECT aggregation_target,
                  steps,
                  max(steps) over (PARTITION BY aggregation_target) as max_steps,
                                  step_1_conversion_time ,
                                  latest_0,
                                  latest_1,
                                  latest_0
           FROM
             (SELECT *,
                     if(latest_0 < latest_1
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                     if(isNotNull(latest_1)
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
              FROM
                (SELECT aggregation_target,
                        timestamp,
                        step_0,
                        latest_0,
                        step_1,
                        min(latest_1) over (PARTITION by aggregation_target
                                            ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
                 FROM
                   (SELECT aggregation_target,
                           timestamp,
                           if(event = 'user signed up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'paid', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1
                    FROM
                      (SELECT e.event as event,
                              e.team_id as team_id,
                              e.distinct_id as distinct_id,
                              e.timestamp as timestamp,
                              e.$group_0 as aggregation_target
                       FROM events e
                       INNER JOIN
                         (SELECT distinct_id,
                                 argMax(person_id, _timestamp) as person_id
                          FROM
                            (SELECT distinct_id,
                                    person_id,
                                    max(_timestamp) as _timestamp
                             FROM person_distinct_id
                             WHERE team_id = 2
                             GROUP BY person_id,
                                      distinct_id,
                                      team_id
                             HAVING max(is_deleted) = 0)
                          GROUP BY distinct_id) AS pdi ON events.distinct_id = pdi.distinct_id
                       WHERE team_id = 2
                         AND event IN ['paid', 'user signed up']
                         AND timestamp >= '2020-01-01 00:00:00'
                         AND timestamp <= '2020-01-14 23:59:59' ) events
                    WHERE (step_0 = 1
                           OR step_1 = 1) ))
              WHERE step_0 = 1 SETTINGS allow_experimental_window_functions = 1 ))
        GROUP BY aggregation_target,
                 steps
        HAVING steps = max_steps SETTINGS allow_experimental_window_functions = 1)
     WHERE steps IN [1, 2]
     ORDER BY aggregation_target
     OFFSET 0 SETTINGS allow_experimental_window_functions = 1),
       2 AS target_step
  SELECT concat(prop.1, '::', prop.2) as name,
         countDistinctIf(person_id, steps = target_step) AS success_count,
         countDistinctIf(person_id, steps <> target_step) AS failure_count
  FROM
    (SELECT person_id,
            funnel_people.steps as steps,
            arrayJoin(arrayZip(['industry'], [trim(BOTH '"' FROM JSONExtractRaw(groups_0.group_properties_0, 'industry'))])) as prop
     FROM funnel_people
     INNER JOIN
       (SELECT group_key,
               argMax(group_properties, _timestamp) AS group_properties_0
        FROM groups
        WHERE team_id = 2
          AND group_type_index = 0
        GROUP BY group_key) groups_0 ON funnel_people.person_id == groups_0.group_key) aggregation_target_with_props
  GROUP BY prop.1,
               prop.2
  HAVING prop.1 NOT IN []
  UNION ALL
  SELECT 'Total_Values_In_Query' as name,
         countDistinctIf(person_id, steps = target_step) AS success_count,
         countDistinctIf(person_id, steps <> target_step) AS failure_count
  FROM funnel_people
  '
---
# name: TestClickhouseFunnelCorrelation.test_funnel_correlation_with_properties_and_groups_materialized.1
  '
  WITH funnel_people as
    (SELECT aggregation_target as person_id,
            timestamp,
            steps,
            final_timestamp,
            first_timestamp
     FROM
       (SELECT aggregation_target,
               steps,
               avg(step_1_conversion_time) step_1_average_conversion_time_inner,
               median(step_1_conversion_time) step_1_median_conversion_time_inner ,
               argMax(latest_0, steps) as timestamp,
               argMax(latest_1, steps) as final_timestamp,
               argMax(latest_0, steps) as first_timestamp
        FROM
          (SELECT aggregation_target,
                  steps,
                  max(steps) over (PARTITION BY aggregation_target) as max_steps,
                                  step_1_conversion_time ,
                                  latest_0,
                                  latest_1,
                                  latest_0
           FROM
             (SELECT *,
                     if(latest_0 < latest_1
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                     if(isNotNull(latest_1)
                        AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
              FROM
                (SELECT aggregation_target,
                        timestamp,
                        step_0,
                        latest_0,
                        step_1,
                        min(latest_1) over (PARTITION by aggregation_target
                                            ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
                 FROM
                   (SELECT aggregation_target,
                           timestamp,
                           if(event = 'user signed up', 1, 0) as step_0,
                           if(step_0 = 1, timestamp, null) as latest_0,
                           if(event = 'paid', 1, 0) as step_1,
                           if(step_1 = 1, timestamp, null) as latest_1
                    FROM
                      (SELECT e.event as event,
                              e.team_id as team_id,
                              e.distinct_id as distinct_id,
                              e.timestamp as timestamp,
                              e.$group_0 as aggregation_target
                       FROM events e
                       INNER JOIN
                         (SELECT distinct_id,
                                 argMax(person_id, _timestamp) as person_id
                          FROM
                            (SELECT distinct_id,
                                    person_id,
                                    max(_timestamp) as _timestamp
                             FROM person_distinct_id
                             WHERE team_id = 2
                             GROUP BY person_id,
                                      distinct_id,
                                      team_id
                             HAVING max(is_deleted) = 0)
                          GROUP BY distinct_id) AS pdi ON events.distinct_id = pdi.distinct_id
                       WHERE team_id = 2
                         AND event IN ['paid', 'user signed up']
                         AND timestamp >= '2020-01-01 00:00:00'
                         AND timestamp <= '2020-01-14 23:59:59' ) events
                    WHERE (step_0 = 1
                           OR step_1 = 1) ))
              WHERE step_0 = 1 SETTINGS allow_experimental_window_functions = 1 ))
        GROUP BY aggregation_target,
                 steps
        HAVING steps = max_steps SETTINGS allow_experimental_window_functions = 1)
     WHERE steps IN [1, 2]
     ORDER BY aggregation_target
     OFFSET 0 SETTINGS allow_experimental_window_functions = 1),
       2 AS target_step
  SELECT concat(prop.1, '::', prop.2) as name,
         countDistinctIf(person_id, steps = target_step) AS success_count,
         countDistinctIf(person_id, steps <> target_step) AS failure_count
  FROM
    (SELECT person_id,
            funnel_people.steps as steps,
            arrayMap(x -> x.1, JSONExtractKeysAndValuesRaw(groups_0.group_properties_0)) as person_prop_keys,
            arrayJoin(arrayZip(person_prop_keys, arrayMap(x -> trim(BOTH '"'
                                                                    FROM JSONExtractRaw(groups_0.group_properties_0, x)), person_prop_keys))) as prop
     FROM funnel_people
     INNER JOIN
       (SELECT group_key,
               argMax(group_properties, _timestamp) AS group_properties_0
        FROM groups
        WHERE team_id = 2
          AND group_type_index = 0
        GROUP BY group_key) groups_0 ON funnel_people.person_id == groups_0.group_key) aggregation_target_with_props
  GROUP BY prop.1,
               prop.2
  HAVING prop.1 NOT IN []
  UNION ALL
  SELECT 'Total_Values_In_Query' as name,
         countDistinctIf(person_id, steps = target_step) AS success_count,
         countDistinctIf(person_id, steps <> target_step) AS failure_count
  FROM funnel_people
  '
---
