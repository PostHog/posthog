# name: TestClickhouseFunnel.test_funnel_aggregation_with_groups
  '
  
  SELECT countIf(steps = 1) step_1,
         countIf(steps = 2) step_2,
         groupArrayIf(100)(DISTINCT person_id,
                                    steps = 1) step_people_1,
                          groupArrayIf(100)(DISTINCT person_id,
                                                     steps = 2) step_people_2,
                                           avg(step_1_average_conversion_time_inner) step_1_average_conversion_time,
                                           median(step_1_median_conversion_time_inner) step_1_median_conversion_time
  FROM
    (SELECT person_id,
            steps,
            avg(step_1_conversion_time) step_1_average_conversion_time_inner,
            median(step_1_conversion_time) step_1_median_conversion_time_inner
     FROM
       (SELECT person_id,
               steps,
               max(steps) over (PARTITION BY person_id) as max_steps,
                               step_1_conversion_time
        FROM
          (SELECT *,
                  if(latest_0 < latest_1
                     AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                  if(isNotNull(latest_1)
                     AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
           FROM
             (SELECT person_id,
                     timestamp,
                     step_0,
                     latest_0,
                     step_1,
                     min(latest_1) over (PARTITION by person_id
                                         ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
              FROM
                (SELECT person_id,
                        timestamp,
                        if(event = 'user signed up', 1, 0) as step_0,
                        if(step_0 = 1, timestamp, null) as latest_0,
                        if(event = 'paid', 1, 0) as step_1,
                        if(step_1 = 1, timestamp, null) as latest_1
                 FROM
                   (SELECT e.event as event,
                           e.team_id as team_id,
                           e.distinct_id as distinct_id,
                           e.timestamp as timestamp,
                           trim(BOTH '"'
                                FROM JSONExtractRaw(e.properties, '$group_0')) as person_id,
                           e.properties as properties
                    FROM events e
                    INNER JOIN
                      (SELECT distinct_id,
                              argMax(person_id, _timestamp) as person_id
                       FROM
                         (SELECT distinct_id,
                                 person_id,
                                 max(_timestamp) as _timestamp
                          FROM person_distinct_id
                          WHERE team_id = 2
                          GROUP BY person_id,
                                   distinct_id,
                                   team_id
                          HAVING max(is_deleted) = 0)
                       GROUP BY distinct_id) AS pdi ON events.distinct_id = pdi.distinct_id
                    WHERE team_id = 2
                      AND event IN ['user signed up', 'paid']
                      AND timestamp >= '2020-01-01 00:00:00'
                      AND timestamp <= '2020-01-14 23:59:59'
                      AND NOT has([''], trim(BOTH '"'
                                             FROM JSONExtractRaw(properties, '$group_0')))
                      AND team_id = 2 ) events
                 WHERE (step_0 = 1
                        OR step_1 = 1) ))
           WHERE step_0 = 1 SETTINGS allow_experimental_window_functions = 1 ))
     GROUP BY person_id,
              steps
     HAVING steps = max_steps SETTINGS allow_experimental_window_functions = 1) SETTINGS allow_experimental_window_functions = 1
  '
---
