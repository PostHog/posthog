# name: TestClickhouseLifecycle.test_test_account_filters_with_groups
  '
  
  SELECT groupArray(day_start) as date,
         groupArray(counts) as data,
         status
  FROM
    (SELECT if(status = 'dormant', toInt64(SUM(counts)) * toInt16(-1), toInt64(SUM(counts))) as counts,
            day_start,
            status
     FROM
       (SELECT ticks.day_start as day_start,
               toUInt16(0) AS counts,
               status
        FROM
          (SELECT toStartOfDay(toDateTime('2020-01-19 23:59:59') - number * 86400) as day_start
           FROM numbers(8)
           UNION ALL SELECT toStartOfDay(toDateTime('2020-01-12 00:00:00')) as day_start) as ticks
        CROSS JOIN
          (SELECT status
           FROM
             (SELECT ['new', 'returning', 'resurrecting', 'dormant'] as status) ARRAY
           JOIN status) as sec
        ORDER BY status,
                 day_start
        UNION ALL SELECT subsequent_day,
                         count(DISTINCT person_id) counts,
                         status
        FROM
          (WITH person_activity_including_previous_period AS
             (SELECT DISTINCT person_id,
                              toStartOfDay(events.timestamp) day
              FROM events
              JOIN
                (SELECT distinct_id,
                        argMax(person_id, _timestamp) as person_id
                 FROM
                   (SELECT distinct_id,
                           person_id,
                           max(_timestamp) as _timestamp
                    FROM person_distinct_id
                    WHERE team_id = 2
                    GROUP BY person_id,
                             distinct_id,
                             team_id
                    HAVING max(is_deleted) = 0)
                 GROUP BY distinct_id) pdi ON events.distinct_id = pdi.distinct_id
              WHERE team_id = 2
                AND event = '$pageview'
                AND $group_0 IN
                  (SELECT DISTINCT group_key
                   FROM groups
                   WHERE team_id = 2
                     AND group_type_index = 0
                     AND has(['value'], trim(BOTH '"'
                                             FROM JSONExtractRaw(group_properties, 'key'))) )
              GROUP BY person_id,
                       day
              HAVING day <= toDateTime('2020-01-19 23:59:59')
              AND day >= toDateTime('2020-01-11 00:00:00')),
                person_activity_as_array AS
             (SELECT DISTINCT person_id,
                              groupArray(toStartOfDay(events.timestamp)) day
              FROM events
              JOIN
                (SELECT distinct_id,
                        argMax(person_id, _timestamp) as person_id
                 FROM
                   (SELECT distinct_id,
                           person_id,
                           max(_timestamp) as _timestamp
                    FROM person_distinct_id
                    WHERE team_id = 2
                    GROUP BY person_id,
                             distinct_id,
                             team_id
                    HAVING max(is_deleted) = 0)
                 GROUP BY distinct_id) pdi ON events.distinct_id = pdi.distinct_id
              WHERE team_id = 2
                AND event = '$pageview'
                AND $group_0 IN
                  (SELECT DISTINCT group_key
                   FROM groups
                   WHERE team_id = 2
                     AND group_type_index = 0
                     AND has(['value'], trim(BOTH '"'
                                             FROM JSONExtractRaw(group_properties, 'key'))) )
                AND toDateTime(events.timestamp) <= toDateTime('2020-01-19 23:59:59')
                AND toStartOfDay(events.timestamp) >= toDateTime('2020-01-12 00:00:00')
              GROUP BY person_id),
                period_starts AS
             (SELECT toStartOfDay(toDateTime('2020-01-19 23:59:59') - number * 86400) AS day_start
              FROM numbers(8)) SELECT activity_pairs.person_id AS person_id,
                                      activity_pairs.base_day AS base_day,
                                      activity_pairs.subsequent_day AS subsequent_day,
                                      if(base_day = toDateTime('0000-00-00 00:00:00'), 'dormant', if(subsequent_day = base_day + INTERVAL 1 DAY, 'returning', if(subsequent_day > earliest + INTERVAL 1 DAY, 'resurrecting', 'new'))) as status
           FROM
             (SELECT person_id,
                     base_day,
                     min(subsequent_day) as subsequent_day
              FROM
                (SELECT person_id,
                        base.day as base_day,
                        subsequent.day as subsequent_day
                 FROM person_activity_including_previous_period base
                 JOIN person_activity_including_previous_period subsequent ON base.person_id = subsequent.person_id
                 WHERE subsequent.day > base.day )
              GROUP BY person_id,
                       base_day
              UNION ALL SELECT base.person_id,
                               min(base.day) as base_day,
                               min(base.day) as subsequent_day
              FROM person_activity_including_previous_period base
              GROUP BY person_id
              UNION ALL SELECT person_id,
                               base_day,
                               subsequent_day
              FROM
                (SELECT person_activity.person_id AS person_id,
                        toDateTime('0000-00-00 00:00:00') as base_day,
                        period_starts.day_start as subsequent_day
                 FROM person_activity_as_array as person_activity
                 CROSS JOIN period_starts
                 WHERE has(person_activity.day, period_starts.day_start) = 0
                 ORDER BY person_id,
                          period_starts.day_start ASC)
              WHERE ((empty(toString(neighbor(person_id, -1)))
                      OR neighbor(person_id, -1) != person_id)
                     AND subsequent_day != toStartOfDay(toDateTime('2020-01-12 00:00:00') + INTERVAL 1 DAY - INTERVAL 1 HOUR))
                OR ((neighbor(person_id, -1) = person_id)
                    AND neighbor(subsequent_day, -1) < subsequent_day - INTERVAL 1 DAY) ) activity_pairs
           JOIN
             (SELECT DISTINCT person_id,
                              toStartOfDay(min(events.timestamp)) earliest
              FROM events
              JOIN
                (SELECT distinct_id,
                        argMax(person_id, _timestamp) as person_id
                 FROM
                   (SELECT distinct_id,
                           person_id,
                           max(_timestamp) as _timestamp
                    FROM person_distinct_id
                    WHERE team_id = 2
                    GROUP BY person_id,
                             distinct_id,
                             team_id
                    HAVING max(is_deleted) = 0)
                 GROUP BY distinct_id) pdi ON events.distinct_id = pdi.distinct_id
              WHERE team_id = 2
                AND event = '$pageview'
                AND $group_0 IN
                  (SELECT DISTINCT group_key
                   FROM groups
                   WHERE team_id = 2
                     AND group_type_index = 0
                     AND has(['value'], trim(BOTH '"'
                                             FROM JSONExtractRaw(group_properties, 'key'))) )
              GROUP BY person_id) earliest ON activity_pairs.person_id = earliest.person_id)
        WHERE subsequent_day <= toDateTime('2020-01-19 23:59:59')
          AND subsequent_day >= toDateTime('2020-01-12 00:00:00')
        GROUP BY subsequent_day,
                 status)
     GROUP BY day_start,
              status
     ORDER BY day_start ASC)
  GROUP BY status
  '
---
