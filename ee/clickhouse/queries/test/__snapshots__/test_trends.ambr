# name: TestClickhouseTrends.test_breakdown_by_group_props
  '
  
  SELECT groupArray(value)
  FROM
    (SELECT replaceRegexpAll(JSONExtractRaw(group_properties_0, 'industry'), '^"|"$', '') AS value,
            count(*) as count
     FROM events e
     INNER JOIN
       (SELECT group_key,
               argMax(group_properties, _timestamp) AS group_properties_0
        FROM groups
        WHERE team_id = 2
          AND group_type_index = 0
        GROUP BY group_key) groups_0 ON "$group_0" == groups_0.group_key
     WHERE team_id = 2
       AND event = 'sign up'
       AND timestamp >= toDateTime('2020-01-01 00:00:00', 'UTC')
       AND timestamp <= toDateTime('2020-01-12 23:59:59', 'UTC')
     GROUP BY value
     ORDER BY count DESC
     LIMIT 25
     OFFSET 0)
  '
---
# name: TestClickhouseTrends.test_breakdown_by_group_props.1
  '
  
  SELECT groupArray(day_start) as date,
         groupArray(count) as data,
         breakdown_value
  FROM
    (SELECT SUM(total) as count,
            day_start,
            breakdown_value
     FROM
       (SELECT *
        FROM
          (SELECT toUInt16(0) AS total,
                  ticks.day_start as day_start,
                  breakdown_value
           FROM
             (SELECT toStartOfDay(toDateTime('2020-01-12 23:59:59', 'UTC') - number * 86400) as day_start
              FROM numbers(12)
              UNION ALL SELECT toStartOfDay(toDateTime('2020-01-01 00:00:00', 'UTC')) as day_start) as ticks
           CROSS JOIN
             (SELECT breakdown_value
              FROM
                (SELECT ['finance', 'technology'] as breakdown_value) ARRAY
              JOIN breakdown_value) as sec
           ORDER BY breakdown_value,
                    day_start
           UNION ALL SELECT count(*) as total,
                            toStartOfDay(timestamp, 'UTC') as day_start,
                            replaceRegexpAll(JSONExtractRaw(group_properties_0, 'industry'), '^"|"$', '') as breakdown_value
           FROM events e
           INNER JOIN
             (SELECT group_key,
                     argMax(group_properties, _timestamp) AS group_properties_0
              FROM groups
              WHERE team_id = 2
                AND group_type_index = 0
              GROUP BY group_key) groups_0 ON "$group_0" == groups_0.group_key
           WHERE e.team_id = 2
             AND event = 'sign up'
             AND timestamp >= toStartOfDay(toDateTime('2020-01-01 00:00:00'), 'UTC')
             AND timestamp <= toDateTime('2020-01-12 23:59:59', 'UTC')
             AND replaceRegexpAll(JSONExtractRaw(group_properties_0, 'industry'), '^"|"$', '') in (['finance', 'technology'])
           GROUP BY day_start,
                    breakdown_value))
     GROUP BY day_start,
              breakdown_value
     ORDER BY breakdown_value,
              day_start)
  GROUP BY breakdown_value
  ORDER BY breakdown_value
  '
---
# name: TestClickhouseTrends.test_breakdown_by_group_props.2
  '
  
  SELECT person_id AS actor_id
  FROM
    (SELECT e.timestamp as timestamp,
            pdi.person_id as person_id,
            e.distinct_id as distinct_id,
            e.team_id as team_id
     FROM events e
     INNER JOIN
       (SELECT distinct_id,
               argMax(person_id, version) as person_id
        FROM person_distinct_id2
        WHERE team_id = 2
        GROUP BY distinct_id
        HAVING argMax(is_deleted, version) = 0) AS pdi ON e.distinct_id = pdi.distinct_id
     INNER JOIN
       (SELECT id
        FROM person
        WHERE team_id = 2
        GROUP BY id
        HAVING max(is_deleted) = 0) person ON person.id = pdi.person_id
     INNER JOIN
       (SELECT group_key,
               argMax(group_properties, _timestamp) AS group_properties_0
        FROM groups
        WHERE team_id = 2
          AND group_type_index = 0
        GROUP BY group_key) groups_0 ON "$group_0" == groups_0.group_key
     WHERE team_id = 2
       AND event = 'sign up'
       AND timestamp >= toDateTime('2020-01-02 00:00:00', 'UTC')
       AND timestamp <= toDateTime('2020-01-02 23:59:59', 'UTC')
       AND (has(['technology'], replaceRegexpAll(JSONExtractRaw(group_properties_0, 'industry'), '^"|"$', ''))) )
  GROUP BY actor_id
  LIMIT 200
  OFFSET 0
  '
---
# name: TestClickhouseTrends.test_breakdown_by_group_props_with_person_filter
  '
  
  SELECT groupArray(value)
  FROM
    (SELECT replaceRegexpAll(JSONExtractRaw(group_properties_0, 'industry'), '^"|"$', '') AS value,
            count(*) as count
     FROM events e
     INNER JOIN
       (SELECT distinct_id,
               argMax(person_id, version) as person_id
        FROM person_distinct_id2
        WHERE team_id = 2
        GROUP BY distinct_id
        HAVING argMax(is_deleted, version) = 0) AS pdi ON e.distinct_id = pdi.distinct_id
     INNER JOIN
       (SELECT id
        FROM person
        WHERE team_id = 2
        GROUP BY id
        HAVING max(is_deleted) = 0
        AND (has(['value'], replaceRegexpAll(JSONExtractRaw(argMax(person.properties, _timestamp), 'key'), '^"|"$', '')))) person ON pdi.person_id = person.id
     INNER JOIN
       (SELECT group_key,
               argMax(group_properties, _timestamp) AS group_properties_0
        FROM groups
        WHERE team_id = 2
          AND group_type_index = 0
        GROUP BY group_key) groups_0 ON "$group_0" == groups_0.group_key
     WHERE team_id = 2
       AND event = 'sign up'
       AND timestamp >= toDateTime('2020-01-01 00:00:00', 'UTC')
       AND timestamp <= toDateTime('2020-01-12 23:59:59', 'UTC')
     GROUP BY value
     ORDER BY count DESC
     LIMIT 25
     OFFSET 0)
  '
---
# name: TestClickhouseTrends.test_breakdown_by_group_props_with_person_filter.1
  '
  
  SELECT groupArray(day_start) as date,
         groupArray(count) as data,
         breakdown_value
  FROM
    (SELECT SUM(total) as count,
            day_start,
            breakdown_value
     FROM
       (SELECT *
        FROM
          (SELECT toUInt16(0) AS total,
                  ticks.day_start as day_start,
                  breakdown_value
           FROM
             (SELECT toStartOfDay(toDateTime('2020-01-12 23:59:59', 'UTC') - number * 86400) as day_start
              FROM numbers(12)
              UNION ALL SELECT toStartOfDay(toDateTime('2020-01-01 00:00:00', 'UTC')) as day_start) as ticks
           CROSS JOIN
             (SELECT breakdown_value
              FROM
                (SELECT ['finance'] as breakdown_value) ARRAY
              JOIN breakdown_value) as sec
           ORDER BY breakdown_value,
                    day_start
           UNION ALL SELECT count(*) as total,
                            toStartOfDay(timestamp, 'UTC') as day_start,
                            replaceRegexpAll(JSONExtractRaw(group_properties_0, 'industry'), '^"|"$', '') as breakdown_value
           FROM events e
           INNER JOIN
             (SELECT distinct_id,
                     argMax(person_id, version) as person_id
              FROM person_distinct_id2
              WHERE team_id = 2
              GROUP BY distinct_id
              HAVING argMax(is_deleted, version) = 0) as pdi ON events.distinct_id = pdi.distinct_id
           INNER JOIN
             (SELECT id
              FROM person
              WHERE team_id = 2
              GROUP BY id
              HAVING max(is_deleted) = 0
              AND (has(['value'], replaceRegexpAll(JSONExtractRaw(argMax(person.properties, _timestamp), 'key'), '^"|"$', '')))) person ON person.id = pdi.person_id
           INNER JOIN
             (SELECT group_key,
                     argMax(group_properties, _timestamp) AS group_properties_0
              FROM groups
              WHERE team_id = 2
                AND group_type_index = 0
              GROUP BY group_key) groups_0 ON "$group_0" == groups_0.group_key
           WHERE e.team_id = 2
             AND event = 'sign up'
             AND timestamp >= toStartOfDay(toDateTime('2020-01-01 00:00:00'), 'UTC')
             AND timestamp <= toDateTime('2020-01-12 23:59:59', 'UTC')
             AND replaceRegexpAll(JSONExtractRaw(group_properties_0, 'industry'), '^"|"$', '') in (['finance'])
           GROUP BY day_start,
                    breakdown_value))
     GROUP BY day_start,
              breakdown_value
     ORDER BY breakdown_value,
              day_start)
  GROUP BY breakdown_value
  ORDER BY breakdown_value
  '
---
# name: TestClickhouseTrends.test_breakdown_filtering_with_properties_in_new_format
  '
  
  SELECT groupArray(value)
  FROM
    (SELECT replaceRegexpAll(JSONExtractRaw(properties, '$current_url'), '^"|"$', '') AS value,
            count(*) as count
     FROM events e
     WHERE team_id = 2
       AND event = 'sign up'
       AND timestamp >= toDateTime('2019-12-22 00:00:00', 'UTC')
       AND timestamp <= toDateTime('2020-01-05 23:59:59', 'UTC')
       AND (((has(['Firefox'], replaceRegexpAll(JSONExtractRaw(e.properties, '$browser'), '^"|"$', '')))
             OR (has(['Windows'], replaceRegexpAll(JSONExtractRaw(e.properties, '$os'), '^"|"$', ''))))
            AND (has(['Mac'], replaceRegexpAll(JSONExtractRaw(e.properties, '$os'), '^"|"$', ''))))
     GROUP BY value
     ORDER BY count DESC
     LIMIT 25
     OFFSET 0)
  '
---
# name: TestClickhouseTrends.test_breakdown_filtering_with_properties_in_new_format.1
  '
  
  SELECT groupArray(day_start) as date,
         groupArray(count) as data,
         breakdown_value
  FROM
    (SELECT SUM(total) as count,
            day_start,
            breakdown_value
     FROM
       (SELECT *
        FROM
          (SELECT toUInt16(0) AS total,
                  ticks.day_start as day_start,
                  breakdown_value
           FROM
             (SELECT toStartOfDay(toDateTime('2020-01-05 23:59:59', 'UTC') - number * 86400) as day_start
              FROM numbers(15)
              UNION ALL SELECT toStartOfDay(toDateTime('2019-12-22 00:00:00', 'UTC')) as day_start) as ticks
           CROSS JOIN
             (SELECT breakdown_value
              FROM
                (SELECT ['second url'] as breakdown_value) ARRAY
              JOIN breakdown_value) as sec
           ORDER BY breakdown_value,
                    day_start
           UNION ALL SELECT count(*) as total,
                            toStartOfDay(timestamp, 'UTC') as day_start,
                            replaceRegexpAll(JSONExtractRaw(properties, '$current_url'), '^"|"$', '') as breakdown_value
           FROM events e
           WHERE e.team_id = 2
             AND event = 'sign up'
             AND (((has(['Firefox'], replaceRegexpAll(JSONExtractRaw(e.properties, '$browser'), '^"|"$', '')))
                   OR (has(['Windows'], replaceRegexpAll(JSONExtractRaw(e.properties, '$os'), '^"|"$', ''))))
                  AND (has(['Mac'], replaceRegexpAll(JSONExtractRaw(e.properties, '$os'), '^"|"$', ''))))
             AND timestamp >= toStartOfDay(toDateTime('2019-12-22 00:00:00'), 'UTC')
             AND timestamp <= toDateTime('2020-01-05 23:59:59', 'UTC')
             AND replaceRegexpAll(JSONExtractRaw(properties, '$current_url'), '^"|"$', '') in (['second url'])
           GROUP BY day_start,
                    breakdown_value))
     GROUP BY day_start,
              breakdown_value
     ORDER BY breakdown_value,
              day_start)
  GROUP BY breakdown_value
  ORDER BY breakdown_value
  '
---
# name: TestClickhouseTrends.test_breakdown_filtering_with_properties_in_new_format.2
  '
  
  SELECT groupArray(value)
  FROM
    (SELECT replaceRegexpAll(JSONExtractRaw(properties, '$current_url'), '^"|"$', '') AS value,
            count(*) as count
     FROM events e
     WHERE team_id = 2
       AND event = 'sign up'
       AND timestamp >= toDateTime('2019-12-22 00:00:00', 'UTC')
       AND timestamp <= toDateTime('2020-01-05 23:59:59', 'UTC')
       AND (((has(['Firefox'], replaceRegexpAll(JSONExtractRaw(e.properties, '$browser'), '^"|"$', '')))
             AND (has(['Windows'], replaceRegexpAll(JSONExtractRaw(e.properties, '$os'), '^"|"$', ''))))
            AND (has(['Mac'], replaceRegexpAll(JSONExtractRaw(e.properties, '$os'), '^"|"$', ''))))
     GROUP BY value
     ORDER BY count DESC
     LIMIT 25
     OFFSET 0)
  '
---
# name: TestClickhouseTrends.test_breakdown_filtering_with_properties_in_new_format.3
  '
  SELECT [now()] AS date,
         [0] AS data,
         '' AS breakdown_value
  LIMIT 0
  '
---
# name: TestClickhouseTrends.test_filtering_with_group_props
  '
  
  SELECT groupArray(day_start) as date,
         groupArray(count) as data
  FROM
    (SELECT SUM(total) AS count,
            day_start
     from
       (SELECT toUInt16(0) AS total,
               toStartOfDay(toDateTime('2020-01-12 23:59:59') - toIntervalDay(number), 'UTC') AS day_start
        FROM numbers(dateDiff('day', toStartOfDay(toDateTime('2020-01-01 00:00:00'), 'UTC'), toDateTime('2020-01-12 23:59:59'), 'UTC'))
        UNION ALL SELECT toUInt16(0) AS total,
                         toStartOfDay(toDateTime('2020-01-01 00:00:00'), 'UTC')
        UNION ALL SELECT count(*) as data,
                         toStartOfDay(toDateTime(timestamp), 'UTC') as date
        FROM
          (SELECT e.timestamp as timestamp,
                  pdi.person_id as person_id
           FROM events e
           INNER JOIN
             (SELECT distinct_id,
                     argMax(person_id, version) as person_id
              FROM person_distinct_id2
              WHERE team_id = 2
              GROUP BY distinct_id
              HAVING argMax(is_deleted, version) = 0) AS pdi ON e.distinct_id = pdi.distinct_id
           INNER JOIN
             (SELECT id
              FROM person
              WHERE team_id = 2
              GROUP BY id
              HAVING max(is_deleted) = 0
              AND ((has(['value'], replaceRegexpAll(JSONExtractRaw(argMax(person.properties, _timestamp), 'key'), '^"|"$', ''))))) person ON person.id = pdi.person_id
           INNER JOIN
             (SELECT group_key,
                     argMax(group_properties, _timestamp) AS group_properties_0
              FROM groups
              WHERE team_id = 2
                AND group_type_index = 0
              GROUP BY group_key) groups_0 ON "$group_0" == groups_0.group_key
           WHERE team_id = 2
             AND event = '$pageview'
             AND timestamp >= toStartOfDay(toDateTime('2020-01-01 00:00:00'), 'UTC')
             AND timestamp <= toDateTime('2020-01-12 23:59:59', 'UTC')
             AND ((has(['finance'], replaceRegexpAll(JSONExtractRaw(group_properties_0, 'industry'), '^"|"$', '')))) )
        GROUP BY date)
     group by day_start
     order by day_start SETTINGS allow_experimental_window_functions = 1) SETTINGS timeout_before_checking_execution_speed = 60
  '
---
# name: TestClickhouseTrends.test_trend_breakdown_user_props_with_filter_with_partial_property_pushdowns
  '
  
  SELECT groupArray(value)
  FROM
    (SELECT replaceRegexpAll(JSONExtractRaw(person_props, 'email'), '^"|"$', '') AS value,
            count(*) as count
     FROM events e
     INNER JOIN
       (SELECT distinct_id,
               argMax(person_id, version) as person_id
        FROM person_distinct_id2
        WHERE team_id = 2
        GROUP BY distinct_id
        HAVING argMax(is_deleted, version) = 0) AS pdi ON e.distinct_id = pdi.distinct_id
     INNER JOIN
       (SELECT id,
               argMax(properties, _timestamp) as person_props
        FROM person
        WHERE team_id = 2
        GROUP BY id
        HAVING max(is_deleted) = 0
        AND ((has(['android'], replaceRegexpAll(JSONExtractRaw(argMax(person.properties, _timestamp), '$os'), '^"|"$', ''))
              OR has(['safari'], replaceRegexpAll(JSONExtractRaw(argMax(person.properties, _timestamp), '$browser'), '^"|"$', ''))))) person ON pdi.person_id = person.id
     WHERE team_id = 2
       AND event = 'sign up'
       AND timestamp >= toDateTime('2020-01-01 00:00:00', 'UTC')
       AND timestamp <= toDateTime('2020-07-01 23:59:59', 'UTC')
       AND ((NOT (replaceRegexpAll(JSONExtractRaw(person_props, 'email'), '^"|"$', '') ILIKE '%@posthog.com%')
             OR has(['val'], replaceRegexpAll(JSONExtractRaw(e.properties, 'key'), '^"|"$', ''))))
     GROUP BY value
     ORDER BY count DESC
     LIMIT 25
     OFFSET 0)
  '
---
# name: TestClickhouseTrends.test_trend_breakdown_user_props_with_filter_with_partial_property_pushdowns.1
  '
  
  SELECT groupArray(day_start) as date,
         groupArray(count) as data,
         breakdown_value
  FROM
    (SELECT SUM(total) as count,
            day_start,
            breakdown_value
     FROM
       (SELECT *
        FROM
          (SELECT toUInt16(0) AS total,
                  ticks.day_start as day_start,
                  breakdown_value
           FROM
             (SELECT toStartOfDay(toDateTime('2020-07-01 23:59:59', 'UTC') - number * 86400) as day_start
              FROM numbers(183)
              UNION ALL SELECT toStartOfDay(toDateTime('2020-01-01 00:00:00', 'UTC')) as day_start) as ticks
           CROSS JOIN
             (SELECT breakdown_value
              FROM
                (SELECT ['test2@posthog.com', 'test@gmail.com', 'test5@posthog.com', 'test4@posthog.com', 'test3@posthog.com'] as breakdown_value) ARRAY
              JOIN breakdown_value) as sec
           ORDER BY breakdown_value,
                    day_start
           UNION ALL SELECT count(*) as total,
                            toStartOfDay(timestamp, 'UTC') as day_start,
                            replaceRegexpAll(JSONExtractRaw(person_props, 'email'), '^"|"$', '') as breakdown_value
           FROM events e
           INNER JOIN
             (SELECT distinct_id,
                     argMax(person_id, version) as person_id
              FROM person_distinct_id2
              WHERE team_id = 2
              GROUP BY distinct_id
              HAVING argMax(is_deleted, version) = 0) as pdi ON events.distinct_id = pdi.distinct_id
           INNER JOIN
             (SELECT id,
                     argMax(properties, _timestamp) as person_props
              FROM person
              WHERE team_id = 2
              GROUP BY id
              HAVING max(is_deleted) = 0
              AND ((has(['android'], replaceRegexpAll(JSONExtractRaw(argMax(person.properties, _timestamp), '$os'), '^"|"$', ''))
                    OR has(['safari'], replaceRegexpAll(JSONExtractRaw(argMax(person.properties, _timestamp), '$browser'), '^"|"$', ''))))) person ON person.id = pdi.person_id
           WHERE e.team_id = 2
             AND event = 'sign up'
             AND ((NOT (replaceRegexpAll(JSONExtractRaw(person_props, 'email'), '^"|"$', '') ILIKE '%@posthog.com%')
                   OR has(['val'], replaceRegexpAll(JSONExtractRaw(e.properties, 'key'), '^"|"$', ''))))
             AND timestamp >= toStartOfDay(toDateTime('2020-01-01 00:00:00'), 'UTC')
             AND timestamp <= toDateTime('2020-07-01 23:59:59', 'UTC')
             AND replaceRegexpAll(JSONExtractRaw(person_props, 'email'), '^"|"$', '') in (['test2@posthog.com', 'test@gmail.com', 'test5@posthog.com', 'test4@posthog.com', 'test3@posthog.com'])
           GROUP BY day_start,
                    breakdown_value))
     GROUP BY day_start,
              breakdown_value
     ORDER BY breakdown_value,
              day_start)
  GROUP BY breakdown_value
  ORDER BY breakdown_value
  '
---
# name: TestClickhouseTrends.test_trend_breakdown_user_props_with_filter_with_partial_property_pushdowns.2
  '
  
  SELECT groupArray(value)
  FROM
    (SELECT replaceRegexpAll(JSONExtractRaw(person_props, 'email'), '^"|"$', '') AS value,
            count(*) as count
     FROM events e
     INNER JOIN
       (SELECT distinct_id,
               argMax(person_id, version) as person_id
        FROM person_distinct_id2
        WHERE team_id = 2
        GROUP BY distinct_id
        HAVING argMax(is_deleted, version) = 0) AS pdi ON e.distinct_id = pdi.distinct_id
     INNER JOIN
       (SELECT id,
               argMax(properties, _timestamp) as person_props
        FROM person
        WHERE team_id = 2
        GROUP BY id
        HAVING max(is_deleted) = 0
        AND (((has(['android'], replaceRegexpAll(JSONExtractRaw(argMax(person.properties, _timestamp), '$os'), '^"|"$', ''))
               AND has(['chrome'], replaceRegexpAll(JSONExtractRaw(argMax(person.properties, _timestamp), '$browser'), '^"|"$', ''))))
             AND (replaceRegexpAll(JSONExtractRaw(argMax(person.properties, _timestamp), 'email'), '^"|"$', '') ILIKE '%@posthog.com%'))) person ON pdi.person_id = person.id
     WHERE team_id = 2
       AND event = 'sign up'
       AND timestamp >= toDateTime('2020-01-01 00:00:00', 'UTC')
       AND timestamp <= toDateTime('2020-07-01 23:59:59', 'UTC')
       AND ((has(['val'], replaceRegexpAll(JSONExtractRaw(e.properties, 'key'), '^"|"$', ''))))
     GROUP BY value
     ORDER BY count DESC
     LIMIT 25
     OFFSET 0)
  '
---
# name: TestClickhouseTrends.test_trend_breakdown_user_props_with_filter_with_partial_property_pushdowns.3
  '
  
  SELECT groupArray(day_start) as date,
         groupArray(count) as data,
         breakdown_value
  FROM
    (SELECT SUM(total) as count,
            day_start,
            breakdown_value
     FROM
       (SELECT *
        FROM
          (SELECT toUInt16(0) AS total,
                  ticks.day_start as day_start,
                  breakdown_value
           FROM
             (SELECT toStartOfDay(toDateTime('2020-07-01 23:59:59', 'UTC') - number * 86400) as day_start
              FROM numbers(183)
              UNION ALL SELECT toStartOfDay(toDateTime('2020-01-01 00:00:00', 'UTC')) as day_start) as ticks
           CROSS JOIN
             (SELECT breakdown_value
              FROM
                (SELECT ['test2@posthog.com'] as breakdown_value) ARRAY
              JOIN breakdown_value) as sec
           ORDER BY breakdown_value,
                    day_start
           UNION ALL SELECT count(*) as total,
                            toStartOfDay(timestamp, 'UTC') as day_start,
                            replaceRegexpAll(JSONExtractRaw(person_props, 'email'), '^"|"$', '') as breakdown_value
           FROM events e
           INNER JOIN
             (SELECT distinct_id,
                     argMax(person_id, version) as person_id
              FROM person_distinct_id2
              WHERE team_id = 2
              GROUP BY distinct_id
              HAVING argMax(is_deleted, version) = 0) as pdi ON events.distinct_id = pdi.distinct_id
           INNER JOIN
             (SELECT id,
                     argMax(properties, _timestamp) as person_props
              FROM person
              WHERE team_id = 2
              GROUP BY id
              HAVING max(is_deleted) = 0
              AND (((has(['android'], replaceRegexpAll(JSONExtractRaw(argMax(person.properties, _timestamp), '$os'), '^"|"$', ''))
                     AND has(['chrome'], replaceRegexpAll(JSONExtractRaw(argMax(person.properties, _timestamp), '$browser'), '^"|"$', ''))))
                   AND (replaceRegexpAll(JSONExtractRaw(argMax(person.properties, _timestamp), 'email'), '^"|"$', '') ILIKE '%@posthog.com%'))) person ON person.id = pdi.person_id
           WHERE e.team_id = 2
             AND event = 'sign up'
             AND ((has(['val'], replaceRegexpAll(JSONExtractRaw(e.properties, 'key'), '^"|"$', ''))))
             AND timestamp >= toStartOfDay(toDateTime('2020-01-01 00:00:00'), 'UTC')
             AND timestamp <= toDateTime('2020-07-01 23:59:59', 'UTC')
             AND replaceRegexpAll(JSONExtractRaw(person_props, 'email'), '^"|"$', '') in (['test2@posthog.com'])
           GROUP BY day_start,
                    breakdown_value))
     GROUP BY day_start,
              breakdown_value
     ORDER BY breakdown_value,
              day_start)
  GROUP BY breakdown_value
  ORDER BY breakdown_value
  '
---
