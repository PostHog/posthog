# name: TestClickhouseTrends.test_aggregating_by_group
  '
  
  SELECT groupArray(day_start) as date,
         groupArray(count) as data
  FROM
    (SELECT SUM(total) AS count,
            day_start
     from
       (SELECT toUInt16(0) AS total,
               toStartOfDay(toDateTime('2020-01-12 23:59:59') - toIntervalDay(number)) AS day_start
        FROM numbers(dateDiff('day', toDateTime('2020-01-01 00:00:00'), toDateTime('2020-01-12 23:59:59')))
        UNION ALL SELECT toUInt16(0) AS total,
                         toStartOfDay(toDateTime('2020-01-01 00:00:00'))
        UNION ALL SELECT count(DISTINCT JSONExtractString(properties, '$group_0')) as data,
                         toDateTime(toStartOfDay(timestamp), 'UTC') as date
        FROM
          (SELECT e.timestamp as timestamp,
                  e.properties as properties
           FROM events e
           WHERE team_id = 2
             AND event = '$pageview'
             AND toStartOfDay(timestamp) >= toStartOfDay(toDateTime('2020-01-01 00:00:00'))
             AND timestamp <= '2020-01-12 23:59:59'
             AND NOT has([''], trim(BOTH '"'
                                    FROM JSONExtractRaw(properties, '$group_0')))
             AND team_id = 2 )
        GROUP BY toStartOfDay(timestamp))
     group by day_start
     order by day_start)
  '
---
# name: TestClickhouseTrends.test_aggregating_by_group.1
  '
  
  SELECT groupArray(day_start) as date,
         groupArray(count) as data
  FROM
    (SELECT SUM(total) AS count,
            day_start
     from
       (SELECT toUInt16(0) AS total,
               toStartOfDay(toDateTime('2020-01-12 23:59:59') - toIntervalDay(number)) AS day_start
        FROM numbers(dateDiff('day', toDateTime('2020-01-01 00:00:00'), toDateTime('2020-01-12 23:59:59')))
        UNION ALL SELECT toUInt16(0) AS total,
                         toStartOfDay(toDateTime('2020-01-01 00:00:00'))
        UNION ALL SELECT count(DISTINCT JSONExtractString(properties, '$group_1')) as data,
                         toDateTime(toStartOfDay(timestamp), 'UTC') as date
        FROM
          (SELECT e.timestamp as timestamp,
                  e.properties as properties
           FROM events e
           WHERE team_id = 2
             AND event = '$pageview'
             AND toStartOfDay(timestamp) >= toStartOfDay(toDateTime('2020-01-01 00:00:00'))
             AND timestamp <= '2020-01-12 23:59:59'
             AND NOT has([''], trim(BOTH '"'
                                    FROM JSONExtractRaw(properties, '$group_1')))
             AND team_id = 2 )
        GROUP BY toStartOfDay(timestamp))
     group by day_start
     order by day_start)
  '
---
# name: TestClickhouseTrends.test_filtering_with_group_props
  '
  
  SELECT groupArray(day_start) as date,
         groupArray(count) as data
  FROM
    (SELECT SUM(total) AS count,
            day_start
     from
       (SELECT toUInt16(0) AS total,
               toStartOfDay(toDateTime('2020-01-12 23:59:59') - toIntervalDay(number)) AS day_start
        FROM numbers(dateDiff('day', toDateTime('2020-01-01 00:00:00'), toDateTime('2020-01-12 23:59:59')))
        UNION ALL SELECT toUInt16(0) AS total,
                         toStartOfDay(toDateTime('2020-01-01 00:00:00'))
        UNION ALL SELECT count(*) as data,
                         toDateTime(toStartOfDay(timestamp), 'UTC') as date
        FROM
          (SELECT e.timestamp as timestamp
           FROM events e
           INNER JOIN
             (SELECT group_key,
                     argMax(group_properties, _timestamp) AS group_properties_0
              FROM groups
              WHERE team_id = 2
                AND group_type_index = 0
              GROUP BY group_key) groups_0 ON JSONExtractString(properties, '$group_0') == groups_0.group_key
           WHERE team_id = 2
             AND event = '$pageview'
             AND toStartOfDay(timestamp) >= toStartOfDay(toDateTime('2020-01-01 00:00:00'))
             AND timestamp <= '2020-01-12 23:59:59'
             AND has(['finance'], trim(BOTH '"'
                                       FROM JSONExtractRaw(group_properties_0, 'industry'))) )
        GROUP BY toStartOfDay(timestamp))
     group by day_start
     order by day_start)
  '
---
