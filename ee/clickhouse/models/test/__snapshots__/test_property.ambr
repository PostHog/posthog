# name: TestPropFormat.test_parse_groups
  '
  SELECT uuid
  FROM events
  WHERE team_id = 2
    AND ((has(['val_1'], replaceRegexpAll(JSONExtractRaw(properties, 'attr_1'), '^"|"$', ''))
          AND has(['val_2'], replaceRegexpAll(JSONExtractRaw(properties, 'attr_2'), '^"|"$', '')))
         OR (has(['val_2'], replaceRegexpAll(JSONExtractRaw(properties, 'attr_1'), '^"|"$', ''))))
  '
---
# name: TestPropFormat.test_parse_groups_persons
  '
  SELECT uuid
  FROM events
  WHERE team_id = 2
    AND ((distinct_id IN
            (SELECT distinct_id
             FROM
               (SELECT distinct_id,
                       argMax(person_id, version) as person_id
                FROM person_distinct_id2
                WHERE team_id = 2
                GROUP BY distinct_id
                HAVING argMax(is_deleted, version) = 0)
             WHERE person_id IN
                 (SELECT id
                  FROM
                    (SELECT id,
                            argMax(properties, person._timestamp) as properties,
                            max(is_deleted) as is_deleted
                     FROM person
                     WHERE team_id = 2
                     GROUP BY id
                     HAVING is_deleted = 0)
                  WHERE has(['1@posthog.com'], replaceRegexpAll(JSONExtractRaw(properties, 'email'), '^"|"$', '')) ) ))
         OR (distinct_id IN
               (SELECT distinct_id
                FROM
                  (SELECT distinct_id,
                          argMax(person_id, version) as person_id
                   FROM person_distinct_id2
                   WHERE team_id = 2
                   GROUP BY distinct_id
                   HAVING argMax(is_deleted, version) = 0)
                WHERE person_id IN
                    (SELECT id
                     FROM
                       (SELECT id,
                               argMax(properties, person._timestamp) as properties,
                               max(is_deleted) as is_deleted
                        FROM person
                        WHERE team_id = 2
                        GROUP BY id
                        HAVING is_deleted = 0)
                     WHERE has(['2@posthog.com'], replaceRegexpAll(JSONExtractRaw(properties, 'email'), '^"|"$', '')) ) )))
  '
---
# name: test_parse_groups_persons_edge_case_with_single_filter
  <class 'tuple'> (
    'AND (  has(%(vglobalperson_0)s, "pmat_email"))',
    <class 'dict'> {
      'kglobalperson_0': 'email',
      'vglobalperson_0': <class 'list'> [
        '1@posthog.com',
      ],
    },
  )
---
# name: test_parse_prop_clauses_defaults
  <class 'tuple'> (
    '
      AND (   has(%(vglobal_0)s, replaceRegexpAll(JSONExtractRaw(properties, %(kglobal_0)s), '^"|"$', ''))  AND distinct_id IN (
      SELECT distinct_id
      FROM (
          
      SELECT distinct_id, argMax(person_id, version) as person_id
      FROM person_distinct_id2
      WHERE team_id = 1
      GROUP BY distinct_id
      HAVING argMax(is_deleted, version) = 0
      
      )
      WHERE person_id IN
      (
          SELECT id
          FROM (
              SELECT id, argMax(properties, person._timestamp) as properties, max(is_deleted) as is_deleted
              FROM person
              WHERE team_id = %(team_id)s
              GROUP BY id
              HAVING is_deleted = 0
          )
          WHERE   replaceRegexpAll(JSONExtractRaw(properties, %(kglobalperson_1)s), '^"|"$', '') ILIKE %(vglobalperson_1)s
      )
      ))
    ',
    <class 'dict'> {
      'kglobal_0': 'event_prop',
      'kglobalperson_1': 'email',
      'vglobal_0': <class 'list'> [
        'value',
      ],
      'vglobalperson_1': '%posthog%',
    },
  )
---
# name: test_parse_prop_clauses_defaults.1
  <class 'tuple'> (
    'AND (   has(%(vglobal_0)s, replaceRegexpAll(JSONExtractRaw(properties, %(kglobal_0)s), \'^"|"$\', \'\'))  AND replaceRegexpAll(JSONExtractRaw(person_props, %(kglobalperson_1)s), \'^"|"$\', \'\') ILIKE %(vglobalperson_1)s)',
    <class 'dict'> {
      'kglobal_0': 'event_prop',
      'kglobalperson_1': 'email',
      'vglobal_0': <class 'list'> [
        'value',
      ],
      'vglobalperson_1': '%posthog%',
    },
  )
---
# name: test_parse_prop_clauses_defaults.2
  <class 'tuple'> (
    'AND (   has(%(vglobal_0)s, replaceRegexpAll(JSONExtractRaw(properties, %(kglobal_0)s), \'^"|"$\', \'\'))  AND argMax(person."pmat_email", _timestamp) ILIKE %(vpersonquery_global_1)s)',
    <class 'dict'> {
      'kglobal_0': 'event_prop',
      'kpersonquery_global_1': 'email',
      'vglobal_0': <class 'list'> [
        'value',
      ],
      'vpersonquery_global_1': '%posthog%',
    },
  )
---
# name: test_parse_prop_clauses_funnel_step_element_prepend_regression
  <class 'tuple'> (
    'AND ( ((match(elements_chain, %(PREPEND__text_0_attributes_regex)s))))',
    <class 'dict'> {
      'PREPEND__text_0_attributes_regex': '(text="Insights1")',
    },
  )
---
