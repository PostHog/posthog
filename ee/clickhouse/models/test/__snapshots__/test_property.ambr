# name: test_parse_prop_clauses_defaults
  <class 'tuple'> (
    '
      AND has(%(vglobal_0)s, trim(BOTH '"' FROM JSONExtractRaw(properties, %(kglobal_0)s))) AND distinct_id IN (
      SELECT distinct_id
      FROM (
          
      SELECT distinct_id, argMax(person_id, _timestamp) as person_id
      FROM (
          SELECT distinct_id, person_id, max(_timestamp) as _timestamp
          FROM person_distinct_id
          WHERE team_id = %(team_id)s
          GROUP BY person_id, distinct_id, team_id
          HAVING max(is_deleted) = 0
      )
      GROUP BY distinct_id
      
      )
      WHERE person_id IN
      (
          SELECT id
          FROM (
              SELECT id, argMax(properties, person._timestamp) as properties, max(is_deleted) as is_deleted
              FROM person
              WHERE team_id = %(team_id)s
              GROUP BY id
              HAVING is_deleted = 0
          )
          WHERE 1 = 1 AND trim(BOTH '"' FROM JSONExtractRaw(properties, %(kglobalperson_1)s)) ILIKE %(vglobalperson_1)s
      )
      )
    ',
    <class 'dict'> {
      'kglobal_0': 'event_prop',
      'kglobalperson_1': 'email',
      'vglobal_0': <class 'list'> [
        'value',
      ],
      'vglobalperson_1': '%posthog%',
    },
  )
---
# name: test_parse_prop_clauses_defaults.1
  <class 'tuple'> (
    'AND has(%(vglobal_0)s, trim(BOTH \'"\' FROM JSONExtractRaw(properties, %(kglobal_0)s))) AND trim(BOTH \'"\' FROM JSONExtractRaw(person_props, %(kglobalperson_1)s)) ILIKE %(vglobalperson_1)s',
    <class 'dict'> {
      'kglobal_0': 'event_prop',
      'kglobalperson_1': 'email',
      'vglobal_0': <class 'list'> [
        'value',
      ],
      'vglobalperson_1': '%posthog%',
    },
  )
---
# name: test_parse_prop_clauses_defaults.2
  <class 'tuple'> (
    'AND has(%(vglobal_0)s, trim(BOTH \'"\' FROM JSONExtractRaw(properties, %(kglobal_0)s)))',
    <class 'dict'> {
      'kglobal_0': 'event_prop',
      'vglobal_0': <class 'list'> [
        'value',
      ],
    },
  )
---
