# name: TestCohort.test_cohortpeople_action_count.1
  '
  
  SELECT count(*)
  FROM
    (SELECT 1
     FROM cohortpeople
     WHERE team_id = 2
       AND cohort_id = 2
     GROUP BY person_id,
              cohort_id,
              team_id
     HAVING sum(sign) > 0)
  '
---
# name: TestCohort.test_cohortpeople_action_count.10
  '
  
  SELECT count(*)
  FROM
    (SELECT 1
     FROM cohortpeople
     WHERE team_id = 2
       AND cohort_id = 2
     GROUP BY person_id,
              cohort_id,
              team_id
     HAVING sum(sign) > 0)
  '
---
# name: TestCohort.test_cohortpeople_action_count.11
  '
  SELECT person_id
  FROM cohortpeople
  where cohort_id = 2
  '
---
# name: TestCohort.test_cohortpeople_action_count.2
  '
  SELECT person_id
  FROM cohortpeople
  where cohort_id = 2
  '
---
# name: TestCohort.test_cohortpeople_action_count.3
  '
  
  SELECT count(*)
  FROM
    (SELECT 1
     FROM cohortpeople
     WHERE team_id = 2
       AND cohort_id = 2
     GROUP BY person_id,
              cohort_id,
              team_id
     HAVING sum(sign) > 0)
  '
---
# name: TestCohort.test_cohortpeople_action_count.4
  '
  
  SELECT count(*)
  FROM
    (SELECT 1
     FROM cohortpeople
     WHERE team_id = 2
       AND cohort_id = 2
     GROUP BY person_id,
              cohort_id,
              team_id
     HAVING sum(sign) > 0)
  '
---
# name: TestCohort.test_cohortpeople_action_count.5
  '
  SELECT person_id
  FROM cohortpeople
  where cohort_id = 2
  '
---
# name: TestCohort.test_cohortpeople_action_count.6
  '
  
  SELECT count(*)
  FROM
    (SELECT 1
     FROM cohortpeople
     WHERE team_id = 2
       AND cohort_id = 2
     GROUP BY person_id,
              cohort_id,
              team_id
     HAVING sum(sign) > 0)
  '
---
# name: TestCohort.test_cohortpeople_action_count.7
  '
  
  SELECT count(*)
  FROM
    (SELECT 1
     FROM cohortpeople
     WHERE team_id = 2
       AND cohort_id = 2
     GROUP BY person_id,
              cohort_id,
              team_id
     HAVING sum(sign) > 0)
  '
---
# name: TestCohort.test_cohortpeople_action_count.8
  '
  SELECT person_id
  FROM cohortpeople
  where cohort_id = 2
  '
---
# name: TestCohort.test_cohortpeople_action_count.9
  '
  
  SELECT count(*)
  FROM
    (SELECT 1
     FROM cohortpeople
     WHERE team_id = 2
       AND cohort_id = 2
     GROUP BY person_id,
              cohort_id,
              team_id
     HAVING sum(sign) > 0)
  '
---
# name: TestCohort.test_query_with_multiple_new_style_cohorts
  '
  
  SELECT count(*)
  FROM
    (SELECT 1
     FROM cohortpeople
     WHERE team_id = 2
       AND cohort_id = 2
     GROUP BY person_id,
              cohort_id,
              team_id
     HAVING sum(sign) > 0)
  '
---
# name: TestCohort.test_query_with_multiple_new_style_cohorts.1
  '
  
  SELECT count(*)
  FROM
    (SELECT 1
     FROM cohortpeople
     WHERE team_id = 2
       AND cohort_id = 2
     GROUP BY person_id,
              cohort_id,
              team_id
     HAVING sum(sign) > 0)
  '
---
# name: TestCohort.test_query_with_multiple_new_style_cohorts.2
  '
  SELECT person_id
  FROM cohortpeople
  where cohort_id = 2
  '
---
# name: TestCohort.test_query_with_multiple_new_style_cohorts.3
  '
  
  SELECT person_id
  FROM
    (SELECT distinct_id,
            argMax(person_id, version) as person_id
     FROM person_distinct_id2
     WHERE team_id = 2
     GROUP BY distinct_id
     HAVING argMax(is_deleted, version) = 0)
  WHERE person_id IN
      (SELECT if(behavior_query.person_id = '00000000-0000-0000-0000-000000000000', person.person_id, behavior_query.person_id) AS id
       FROM
         (SELECT pdi.person_id AS person_id,
                 minIf(timestamp, ((replaceRegexpAll(JSONExtractRaw(properties, '$current_url'), '^"|"$', '') = 'https://posthog.com/feedback/123'
                                    AND event = '$autocapture'))) >= now() - INTERVAL 2 week
          AND minIf(timestamp, ((replaceRegexpAll(JSONExtractRaw(properties, '$current_url'), '^"|"$', '') = 'https://posthog.com/feedback/123'
                                 AND event = '$autocapture'))) < now() as first_time_condition_55_level_level_0_level_0_0
          FROM events e
          INNER JOIN
            (SELECT distinct_id,
                    argMax(person_id, version) as person_id
             FROM person_distinct_id2
             WHERE team_id = 2
             GROUP BY distinct_id
             HAVING argMax(is_deleted, version) = 0) AS pdi ON e.distinct_id = pdi.distinct_id
          WHERE team_id = 2
            AND event IN ['$pageview', '$pageview']
          GROUP BY person_id) behavior_query
       FULL OUTER JOIN
         (SELECT *,
                 id AS person_id
          FROM
            (SELECT id
             FROM person
             WHERE team_id = 2
             GROUP BY id
             HAVING max(is_deleted) = 0
             AND ((has(['test@posthog.com'], replaceRegexpAll(JSONExtractRaw(argMax(person.properties, _timestamp), 'email'), '^"|"$', '')))))) person ON person.person_id = behavior_query.person_id
       WHERE 1 = 1
         AND (((first_time_condition_55_level_level_0_level_0_0))) )
  '
---
# name: TestCohort.test_query_with_multiple_new_style_cohorts.4
  '
  
  SELECT if(behavior_query.person_id = '00000000-0000-0000-0000-000000000000', person.person_id, behavior_query.person_id) AS id
  FROM
    (SELECT pdi.person_id AS person_id,
            minIf(timestamp, ((replaceRegexpAll(JSONExtractRaw(properties, '$current_url'), '^"|"$', '') = 'https://posthog.com/feedback/123'
                               AND event = '$autocapture'))) >= now() - INTERVAL 2 week
     AND minIf(timestamp, ((replaceRegexpAll(JSONExtractRaw(properties, '$current_url'), '^"|"$', '') = 'https://posthog.com/feedback/123'
                            AND event = '$autocapture'))) < now() as first_time_condition_55_level_level_0_level_0_0
     FROM events e
     INNER JOIN
       (SELECT distinct_id,
               argMax(person_id, version) as person_id
        FROM person_distinct_id2
        WHERE team_id = 2
        GROUP BY distinct_id
        HAVING argMax(is_deleted, version) = 0) AS pdi ON e.distinct_id = pdi.distinct_id
     WHERE team_id = 2
       AND event IN ['$pageview', '$pageview']
     GROUP BY person_id) behavior_query
  FULL OUTER JOIN
    (SELECT *,
            id AS person_id
     FROM
       (SELECT id
        FROM person
        WHERE team_id = 2
        GROUP BY id
        HAVING max(is_deleted) = 0
        AND ((has(['test@posthog.com'], replaceRegexpAll(JSONExtractRaw(argMax(person.properties, _timestamp), 'email'), '^"|"$', '')))))) person ON person.person_id = behavior_query.person_id
  WHERE 1 = 1
    AND (((first_time_condition_55_level_level_0_level_0_0)))
  '
---
# name: TestCohort.test_query_with_multiple_new_style_cohorts.5
  '
  
  SELECT pdi.person_id AS person_id,
         minIf(timestamp, ((replaceRegexpAll(JSONExtractRaw(properties, '$current_url'), '^"|"$', '') = 'https://posthog.com/feedback/123'
                            AND event = '$autocapture'))) >= now() - INTERVAL 2 week
  AND minIf(timestamp, ((replaceRegexpAll(JSONExtractRaw(properties, '$current_url'), '^"|"$', '') = 'https://posthog.com/feedback/123'
                         AND event = '$autocapture'))) < now() as first_time_condition_55_level_level_0_level_0_0
  FROM events e
  INNER JOIN
    (SELECT distinct_id,
            argMax(person_id, version) as person_id
     FROM person_distinct_id2
     WHERE team_id = 2
     GROUP BY distinct_id
     HAVING argMax(is_deleted, version) = 0) AS pdi ON e.distinct_id = pdi.distinct_id
  WHERE team_id = 2
    AND event IN ['$pageview', '$pageview']
  GROUP BY person_id
  '
---
# name: TestCohort.test_query_with_multiple_new_style_cohorts.6
  '
  
  SELECT pdi.person_id,
         event
  from events e
  INNER JOIN
    (SELECT distinct_id,
            argMax(person_id, version) as person_id
     FROM person_distinct_id2
     WHERE team_id = 2
     GROUP BY distinct_id
     HAVING argMax(is_deleted, version) = 0) AS pdi ON e.distinct_id = pdi.distinct_id
  WHERE team_id = 2
    AND event IN ['$pageview', '$autocapture']
  '
---
# name: TestCohort.test_static_cohort_precalculated
  '
  
  SELECT distinct_id
  FROM
    (SELECT distinct_id,
            argMax(person_id, version) as person_id
     FROM person_distinct_id2
     WHERE team_id = 2
     GROUP BY distinct_id
     HAVING argMax(is_deleted, version) = 0)
  WHERE person_id IN
      (SELECT person_id
       FROM person_static_cohort
       WHERE cohort_id = %(_cohort_id_0)s
         AND team_id = %(team_id)s)
  '
---
