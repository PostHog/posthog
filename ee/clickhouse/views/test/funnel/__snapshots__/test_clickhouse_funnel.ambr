# name: ClickhouseTestFunnelGroups.test_funnel_aggregation_with_groups
  '
  /* request:api_projects_(?P<parent_lookup_team_id>[^_.]+)_insights_funnel_?$ (ClickhouseInsightsViewSet) */
  SELECT countIf(steps = 1) step_1,
         countIf(steps = 2) step_2,
         avg(step_1_average_conversion_time_inner) step_1_average_conversion_time,
         median(step_1_median_conversion_time_inner) step_1_median_conversion_time
  FROM
    (SELECT aggregation_target,
            steps,
            avg(step_1_conversion_time) step_1_average_conversion_time_inner,
            median(step_1_conversion_time) step_1_median_conversion_time_inner
     FROM
       (SELECT aggregation_target,
               steps,
               max(steps) over (PARTITION BY aggregation_target) as max_steps,
                               step_1_conversion_time
        FROM
          (SELECT *,
                  if(latest_0 < latest_1
                     AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                  if(isNotNull(latest_1)
                     AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
           FROM
             (SELECT aggregation_target,
                     timestamp,
                     step_0,
                     latest_0,
                     step_1,
                     min(latest_1) over (PARTITION by aggregation_target
                                         ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
              FROM
                (SELECT aggregation_target,
                        timestamp,
                        if(event = 'user signed up', 1, 0) as step_0,
                        if(step_0 = 1, timestamp, null) as latest_0,
                        if(event = 'paid', 1, 0) as step_1,
                        if(step_1 = 1, timestamp, null) as latest_1
                 FROM
                   (SELECT e.event as event,
                           e.team_id as team_id,
                           e.distinct_id as distinct_id,
                           e.timestamp as timestamp,
                           e."$group_0" as aggregation_target,
                           e."$group_0" as "$group_0"
                    FROM events e
                    WHERE team_id = 2
                      AND event IN ['paid', 'user signed up']
                      AND timestamp >= toDateTime('2020-01-01 00:00:00')
                      AND timestamp <= toDateTime('2020-01-14 23:59:59')
                      AND (NOT has([''], "$group_0")) ) events
                 WHERE (step_0 = 1
                        OR step_1 = 1) ))
           WHERE step_0 = 1 SETTINGS allow_experimental_window_functions = 1 ))
     GROUP BY aggregation_target,
              steps
     HAVING steps = max_steps SETTINGS allow_experimental_window_functions = 1) SETTINGS allow_experimental_window_functions = 1
  '
---
# name: ClickhouseTestFunnelGroups.test_funnel_aggregation_with_groups.1
  '
  /* request:api_person_funnel_?$ (LegacyEnterprisePersonViewSet) */
  SELECT aggregation_target AS actor_id
  FROM
    (SELECT aggregation_target,
            steps,
            avg(step_1_conversion_time) step_1_average_conversion_time_inner,
            median(step_1_conversion_time) step_1_median_conversion_time_inner
     FROM
       (SELECT aggregation_target,
               steps,
               max(steps) over (PARTITION BY aggregation_target) as max_steps,
                               step_1_conversion_time
        FROM
          (SELECT *,
                  if(latest_0 < latest_1
                     AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                  if(isNotNull(latest_1)
                     AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
           FROM
             (SELECT aggregation_target,
                     timestamp,
                     step_0,
                     latest_0,
                     step_1,
                     min(latest_1) over (PARTITION by aggregation_target
                                         ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
              FROM
                (SELECT aggregation_target,
                        timestamp,
                        if(event = 'user signed up', 1, 0) as step_0,
                        if(step_0 = 1, timestamp, null) as latest_0,
                        if(event = 'paid', 1, 0) as step_1,
                        if(step_1 = 1, timestamp, null) as latest_1
                 FROM
                   (SELECT e.event as event,
                           e.team_id as team_id,
                           e.distinct_id as distinct_id,
                           e.timestamp as timestamp,
                           e."$group_0" as aggregation_target,
                           e."$group_0" as "$group_0"
                    FROM events e
                    WHERE team_id = 2
                      AND event IN ['paid', 'user signed up']
                      AND timestamp >= toDateTime('2020-01-01 00:00:00')
                      AND timestamp <= toDateTime('2020-01-14 23:59:59')
                      AND ((NOT has([''], "$group_0"))
                           AND (NOT has([''], "$group_0"))) ) events
                 WHERE (step_0 = 1
                        OR step_1 = 1) ))
           WHERE step_0 = 1 SETTINGS allow_experimental_window_functions = 1 ))
     GROUP BY aggregation_target,
              steps
     HAVING steps = max_steps SETTINGS allow_experimental_window_functions = 1)
  WHERE steps IN [1, 2]
  ORDER BY aggregation_target
  LIMIT 100
  OFFSET 0 SETTINGS allow_experimental_window_functions = 1
  '
---
# name: ClickhouseTestFunnelGroups.test_funnel_group_aggregation_with_groups_entity_filtering
  '
  /* request:api_projects_(?P<parent_lookup_team_id>[^_.]+)_insights_funnel_?$ (ClickhouseInsightsViewSet) */
  SELECT countIf(steps = 1) step_1,
         countIf(steps = 2) step_2,
         avg(step_1_average_conversion_time_inner) step_1_average_conversion_time,
         median(step_1_median_conversion_time_inner) step_1_median_conversion_time
  FROM
    (SELECT aggregation_target,
            steps,
            avg(step_1_conversion_time) step_1_average_conversion_time_inner,
            median(step_1_conversion_time) step_1_median_conversion_time_inner
     FROM
       (SELECT aggregation_target,
               steps,
               max(steps) over (PARTITION BY aggregation_target) as max_steps,
                               step_1_conversion_time
        FROM
          (SELECT *,
                  if(latest_0 < latest_1
                     AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                  if(isNotNull(latest_1)
                     AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
           FROM
             (SELECT aggregation_target,
                     timestamp,
                     step_0,
                     latest_0,
                     step_1,
                     min(latest_1) over (PARTITION by aggregation_target
                                         ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
              FROM
                (SELECT aggregation_target,
                        timestamp,
                        if(event = 'user signed up'
                           AND (has(['org:5'], "$group_0")), 1, 0) as step_0,
                        if(step_0 = 1, timestamp, null) as latest_0,
                        if(event = 'paid', 1, 0) as step_1,
                        if(step_1 = 1, timestamp, null) as latest_1
                 FROM
                   (SELECT e.event as event,
                           e.team_id as team_id,
                           e.distinct_id as distinct_id,
                           e.timestamp as timestamp,
                           e."$group_0" as aggregation_target,
                           e."$group_0" as "$group_0"
                    FROM events e
                    WHERE team_id = 2
                      AND event IN ['paid', 'user signed up']
                      AND timestamp >= toDateTime('2020-01-01 00:00:00')
                      AND timestamp <= toDateTime('2020-01-14 23:59:59')
                      AND (NOT has([''], "$group_0")) ) events
                 WHERE (step_0 = 1
                        OR step_1 = 1) ))
           WHERE step_0 = 1 SETTINGS allow_experimental_window_functions = 1 ))
     GROUP BY aggregation_target,
              steps
     HAVING steps = max_steps SETTINGS allow_experimental_window_functions = 1) SETTINGS allow_experimental_window_functions = 1
  '
---
# name: ClickhouseTestFunnelGroups.test_funnel_group_aggregation_with_groups_entity_filtering.1
  '
  /* request:api_person_funnel_?$ (LegacyEnterprisePersonViewSet) */
  SELECT aggregation_target AS actor_id
  FROM
    (SELECT aggregation_target,
            steps,
            avg(step_1_conversion_time) step_1_average_conversion_time_inner,
            median(step_1_conversion_time) step_1_median_conversion_time_inner
     FROM
       (SELECT aggregation_target,
               steps,
               max(steps) over (PARTITION BY aggregation_target) as max_steps,
                               step_1_conversion_time
        FROM
          (SELECT *,
                  if(latest_0 < latest_1
                     AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                  if(isNotNull(latest_1)
                     AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
           FROM
             (SELECT aggregation_target,
                     timestamp,
                     step_0,
                     latest_0,
                     step_1,
                     min(latest_1) over (PARTITION by aggregation_target
                                         ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
              FROM
                (SELECT aggregation_target,
                        timestamp,
                        if(event = 'user signed up'
                           AND (has(['org:5'], "$group_0")), 1, 0) as step_0,
                        if(step_0 = 1, timestamp, null) as latest_0,
                        if(event = 'paid', 1, 0) as step_1,
                        if(step_1 = 1, timestamp, null) as latest_1
                 FROM
                   (SELECT e.event as event,
                           e.team_id as team_id,
                           e.distinct_id as distinct_id,
                           e.timestamp as timestamp,
                           e."$group_0" as aggregation_target,
                           e."$group_0" as "$group_0"
                    FROM events e
                    WHERE team_id = 2
                      AND event IN ['paid', 'user signed up']
                      AND timestamp >= toDateTime('2020-01-01 00:00:00')
                      AND timestamp <= toDateTime('2020-01-14 23:59:59')
                      AND ((NOT has([''], "$group_0"))
                           AND (NOT has([''], "$group_0"))) ) events
                 WHERE (step_0 = 1
                        OR step_1 = 1) ))
           WHERE step_0 = 1 SETTINGS allow_experimental_window_functions = 1 ))
     GROUP BY aggregation_target,
              steps
     HAVING steps = max_steps SETTINGS allow_experimental_window_functions = 1)
  WHERE steps IN [1, 2]
  ORDER BY aggregation_target
  LIMIT 100
  OFFSET 0 SETTINGS allow_experimental_window_functions = 1
  '
---
# name: ClickhouseTestFunnelGroups.test_funnel_with_groups_entity_filtering
  '
  /* request:api_projects_(?P<parent_lookup_team_id>[^_.]+)_insights_funnel_?$ (ClickhouseInsightsViewSet) */
  SELECT countIf(steps = 1) step_1,
         countIf(steps = 2) step_2,
         avg(step_1_average_conversion_time_inner) step_1_average_conversion_time,
         median(step_1_median_conversion_time_inner) step_1_median_conversion_time
  FROM
    (SELECT aggregation_target,
            steps,
            avg(step_1_conversion_time) step_1_average_conversion_time_inner,
            median(step_1_conversion_time) step_1_median_conversion_time_inner
     FROM
       (SELECT aggregation_target,
               steps,
               max(steps) over (PARTITION BY aggregation_target) as max_steps,
                               step_1_conversion_time
        FROM
          (SELECT *,
                  if(latest_0 < latest_1
                     AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                  if(isNotNull(latest_1)
                     AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
           FROM
             (SELECT aggregation_target,
                     timestamp,
                     step_0,
                     latest_0,
                     step_1,
                     min(latest_1) over (PARTITION by aggregation_target
                                         ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
              FROM
                (SELECT aggregation_target,
                        timestamp,
                        if(event = 'user signed up'
                           AND (has(['org:5'], "$group_0")), 1, 0) as step_0,
                        if(step_0 = 1, timestamp, null) as latest_0,
                        if(event = 'paid', 1, 0) as step_1,
                        if(step_1 = 1, timestamp, null) as latest_1
                 FROM
                   (SELECT e.event as event,
                           e.team_id as team_id,
                           e.distinct_id as distinct_id,
                           e.timestamp as timestamp,
                           pdi.person_id as aggregation_target,
                           e."$group_0" as "$group_0",
                           pdi.person_id as person_id
                    FROM events e
                    INNER JOIN
                      (SELECT distinct_id,
                              argMax(person_id, version) as person_id
                       FROM person_distinct_id2
                       WHERE team_id = 2
                       GROUP BY distinct_id
                       HAVING argMax(is_deleted, version) = 0) AS pdi ON e.distinct_id = pdi.distinct_id
                    WHERE team_id = 2
                      AND event IN ['paid', 'user signed up']
                      AND timestamp >= toDateTime('2020-01-01 00:00:00')
                      AND timestamp <= toDateTime('2020-01-14 23:59:59') ) events
                 WHERE (step_0 = 1
                        OR step_1 = 1) ))
           WHERE step_0 = 1 SETTINGS allow_experimental_window_functions = 1 ))
     GROUP BY aggregation_target,
              steps
     HAVING steps = max_steps SETTINGS allow_experimental_window_functions = 1) SETTINGS allow_experimental_window_functions = 1
  '
---
# name: ClickhouseTestFunnelGroups.test_funnel_with_groups_entity_filtering.1
  '
  /* request:api_person_funnel_?$ (LegacyEnterprisePersonViewSet) */
  SELECT aggregation_target AS actor_id
  FROM
    (SELECT aggregation_target,
            steps,
            avg(step_1_conversion_time) step_1_average_conversion_time_inner,
            median(step_1_conversion_time) step_1_median_conversion_time_inner
     FROM
       (SELECT aggregation_target,
               steps,
               max(steps) over (PARTITION BY aggregation_target) as max_steps,
                               step_1_conversion_time
        FROM
          (SELECT *,
                  if(latest_0 < latest_1
                     AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                  if(isNotNull(latest_1)
                     AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
           FROM
             (SELECT aggregation_target,
                     timestamp,
                     step_0,
                     latest_0,
                     step_1,
                     min(latest_1) over (PARTITION by aggregation_target
                                         ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
              FROM
                (SELECT aggregation_target,
                        timestamp,
                        if(event = 'user signed up'
                           AND (has(['org:5'], "$group_0")), 1, 0) as step_0,
                        if(step_0 = 1, timestamp, null) as latest_0,
                        if(event = 'paid', 1, 0) as step_1,
                        if(step_1 = 1, timestamp, null) as latest_1
                 FROM
                   (SELECT e.event as event,
                           e.team_id as team_id,
                           e.distinct_id as distinct_id,
                           e.timestamp as timestamp,
                           pdi.person_id as aggregation_target,
                           e."$group_0" as "$group_0",
                           pdi.person_id as person_id
                    FROM events e
                    INNER JOIN
                      (SELECT distinct_id,
                              argMax(person_id, version) as person_id
                       FROM person_distinct_id2
                       WHERE team_id = 2
                       GROUP BY distinct_id
                       HAVING argMax(is_deleted, version) = 0) AS pdi ON e.distinct_id = pdi.distinct_id
                    WHERE team_id = 2
                      AND event IN ['paid', 'user signed up']
                      AND timestamp >= toDateTime('2020-01-01 00:00:00')
                      AND timestamp <= toDateTime('2020-01-14 23:59:59') ) events
                 WHERE (step_0 = 1
                        OR step_1 = 1) ))
           WHERE step_0 = 1 SETTINGS allow_experimental_window_functions = 1 ))
     GROUP BY aggregation_target,
              steps
     HAVING steps = max_steps SETTINGS allow_experimental_window_functions = 1)
  WHERE steps IN [1, 2]
  ORDER BY aggregation_target
  LIMIT 100
  OFFSET 0 SETTINGS allow_experimental_window_functions = 1
  '
---
# name: ClickhouseTestFunnelGroups.test_funnel_with_groups_global_filtering
  '
  /* request:api_projects_(?P<parent_lookup_team_id>[^_.]+)_insights_funnel_?$ (ClickhouseInsightsViewSet) */
  SELECT countIf(steps = 1) step_1,
         countIf(steps = 2) step_2,
         avg(step_1_average_conversion_time_inner) step_1_average_conversion_time,
         median(step_1_median_conversion_time_inner) step_1_median_conversion_time
  FROM
    (SELECT aggregation_target,
            steps,
            avg(step_1_conversion_time) step_1_average_conversion_time_inner,
            median(step_1_conversion_time) step_1_median_conversion_time_inner
     FROM
       (SELECT aggregation_target,
               steps,
               max(steps) over (PARTITION BY aggregation_target) as max_steps,
                               step_1_conversion_time
        FROM
          (SELECT *,
                  if(latest_0 < latest_1
                     AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                  if(isNotNull(latest_1)
                     AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
           FROM
             (SELECT aggregation_target,
                     timestamp,
                     step_0,
                     latest_0,
                     step_1,
                     min(latest_1) over (PARTITION by aggregation_target
                                         ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
              FROM
                (SELECT aggregation_target,
                        timestamp,
                        if(event = 'user signed up', 1, 0) as step_0,
                        if(step_0 = 1, timestamp, null) as latest_0,
                        if(event = 'paid', 1, 0) as step_1,
                        if(step_1 = 1, timestamp, null) as latest_1
                 FROM
                   (SELECT e.event as event,
                           e.team_id as team_id,
                           e.distinct_id as distinct_id,
                           e.timestamp as timestamp,
                           pdi.person_id as aggregation_target,
                           pdi.person_id as person_id,
                           groups_0.group_properties_0 as group_properties_0
                    FROM events e
                    INNER JOIN
                      (SELECT distinct_id,
                              argMax(person_id, version) as person_id
                       FROM person_distinct_id2
                       WHERE team_id = 2
                       GROUP BY distinct_id
                       HAVING argMax(is_deleted, version) = 0) AS pdi ON e.distinct_id = pdi.distinct_id
                    INNER JOIN
                      (SELECT group_key,
                              argMax(group_properties, _timestamp) AS group_properties_0
                       FROM groups
                       WHERE team_id = 2
                         AND group_type_index = 0
                       GROUP BY group_key) groups_0 ON "$group_0" == groups_0.group_key
                    WHERE team_id = 2
                      AND event IN ['paid', 'user signed up']
                      AND timestamp >= toDateTime('2020-01-01 00:00:00')
                      AND timestamp <= toDateTime('2020-01-14 23:59:59')
                      AND (has(['finance'], replaceRegexpAll(JSONExtractRaw(group_properties_0, 'industry'), '^"|"$', ''))) ) events
                 WHERE (step_0 = 1
                        OR step_1 = 1) ))
           WHERE step_0 = 1 SETTINGS allow_experimental_window_functions = 1 ))
     GROUP BY aggregation_target,
              steps
     HAVING steps = max_steps SETTINGS allow_experimental_window_functions = 1) SETTINGS allow_experimental_window_functions = 1
  '
---
# name: ClickhouseTestFunnelGroups.test_funnel_with_groups_global_filtering.1
  '
  /* request:api_person_funnel_?$ (LegacyEnterprisePersonViewSet) */
  SELECT aggregation_target AS actor_id
  FROM
    (SELECT aggregation_target,
            steps,
            avg(step_1_conversion_time) step_1_average_conversion_time_inner,
            median(step_1_conversion_time) step_1_median_conversion_time_inner
     FROM
       (SELECT aggregation_target,
               steps,
               max(steps) over (PARTITION BY aggregation_target) as max_steps,
                               step_1_conversion_time
        FROM
          (SELECT *,
                  if(latest_0 < latest_1
                     AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                  if(isNotNull(latest_1)
                     AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time
           FROM
             (SELECT aggregation_target,
                     timestamp,
                     step_0,
                     latest_0,
                     step_1,
                     min(latest_1) over (PARTITION by aggregation_target
                                         ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1
              FROM
                (SELECT aggregation_target,
                        timestamp,
                        if(event = 'user signed up', 1, 0) as step_0,
                        if(step_0 = 1, timestamp, null) as latest_0,
                        if(event = 'paid', 1, 0) as step_1,
                        if(step_1 = 1, timestamp, null) as latest_1
                 FROM
                   (SELECT e.event as event,
                           e.team_id as team_id,
                           e.distinct_id as distinct_id,
                           e.timestamp as timestamp,
                           pdi.person_id as aggregation_target,
                           pdi.person_id as person_id,
                           groups_0.group_properties_0 as group_properties_0
                    FROM events e
                    INNER JOIN
                      (SELECT distinct_id,
                              argMax(person_id, version) as person_id
                       FROM person_distinct_id2
                       WHERE team_id = 2
                       GROUP BY distinct_id
                       HAVING argMax(is_deleted, version) = 0) AS pdi ON e.distinct_id = pdi.distinct_id
                    INNER JOIN
                      (SELECT group_key,
                              argMax(group_properties, _timestamp) AS group_properties_0
                       FROM groups
                       WHERE team_id = 2
                         AND group_type_index = 0
                       GROUP BY group_key) groups_0 ON "$group_0" == groups_0.group_key
                    WHERE team_id = 2
                      AND event IN ['paid', 'user signed up']
                      AND timestamp >= toDateTime('2020-01-01 00:00:00')
                      AND timestamp <= toDateTime('2020-01-14 23:59:59')
                      AND (has(['finance'], replaceRegexpAll(JSONExtractRaw(group_properties_0, 'industry'), '^"|"$', ''))) ) events
                 WHERE (step_0 = 1
                        OR step_1 = 1) ))
           WHERE step_0 = 1 SETTINGS allow_experimental_window_functions = 1 ))
     GROUP BY aggregation_target,
              steps
     HAVING steps = max_steps SETTINGS allow_experimental_window_functions = 1)
  WHERE steps IN [1, 2]
  ORDER BY aggregation_target
  LIMIT 100
  OFFSET 0 SETTINGS allow_experimental_window_functions = 1
  '
---
