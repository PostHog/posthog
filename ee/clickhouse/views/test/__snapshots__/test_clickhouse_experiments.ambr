# name: ClickhouseTestFunnelExperimentResults.test_experiment_flow_with_event_results
  '
  /* request:api_projects_(?P<parent_lookup_team_id>[^_.]+)_experiments_(?P<pk>[^_.]+)_results_?$ (ClickhouseExperimentsViewSet) */
  SELECT groupArray(value)
  FROM
    (SELECT array(trim(BOTH '"'
                       FROM JSONExtractRaw(properties, '$feature/a-b-test'))) AS value,
            count(*) as count
     FROM events e
     WHERE team_id = 2
       AND event = '$pageview'
       AND timestamp >= '2020-01-01 00:00:00'
       AND timestamp <= '2020-01-06 23:59:59'
       AND has(['control', 'test'], trim(BOTH '"'
                                         FROM JSONExtractRaw(e.properties, '$feature/a-b-test')))
     GROUP BY value
     ORDER BY count DESC
     LIMIT 10
     OFFSET 0)
  '
---
# name: ClickhouseTestFunnelExperimentResults.test_experiment_flow_with_event_results.1
  '
  /* request:api_projects_(?P<parent_lookup_team_id>[^_.]+)_experiments_(?P<pk>[^_.]+)_results_?$ (ClickhouseExperimentsViewSet) */
  SELECT countIf(steps = 1) step_1,
         countIf(steps = 2) step_2,
         avg(step_1_average_conversion_time_inner) step_1_average_conversion_time,
         median(step_1_median_conversion_time_inner) step_1_median_conversion_time,
         prop
  FROM
    (SELECT aggregation_target,
            steps,
            avg(step_1_conversion_time) step_1_average_conversion_time_inner,
            median(step_1_conversion_time) step_1_median_conversion_time_inner,
            prop
     FROM
       (SELECT aggregation_target,
               steps,
               max(steps) over (PARTITION BY aggregation_target,
                                             prop) as max_steps,
                               step_1_conversion_time,
                               prop
        FROM
          (SELECT *,
                  if(latest_0 < latest_1
                     AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                  if(isNotNull(latest_1)
                     AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time,
                  prop
           FROM
             (SELECT aggregation_target,
                     timestamp,
                     step_0,
                     latest_0,
                     step_1,
                     min(latest_1) over (PARTITION by aggregation_target,
                                                      prop
                                         ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1 ,
                                        if(has([['test'], ['control']], prop), prop, ['Other']) as prop
              FROM
                (SELECT aggregation_target,
                        timestamp,
                        if(event = '$pageview', 1, 0) as step_0,
                        if(step_0 = 1, timestamp, null) as latest_0,
                        if(event = '$pageleave', 1, 0) as step_1,
                        if(step_1 = 1, timestamp, null) as latest_1,
                        array(trim(BOTH '"'
                                   FROM JSONExtractRaw(properties, '$feature/a-b-test'))) AS prop
                 FROM
                   (SELECT e.event as event,
                           e.team_id as team_id,
                           e.distinct_id as distinct_id,
                           e.timestamp as timestamp,
                           pdi.person_id as aggregation_target,
                           e.properties as properties
                    FROM events e
                    INNER JOIN
                      (SELECT distinct_id,
                              argMax(person_id, version) as person_id
                       FROM person_distinct_id2
                       WHERE team_id = 2
                       GROUP BY distinct_id
                       HAVING argMax(is_deleted, version) = 0) AS pdi ON e.distinct_id = pdi.distinct_id
                    WHERE team_id = 2
                      AND event IN ['$pageleave', '$pageview']
                      AND timestamp >= '2020-01-01 00:00:00'
                      AND timestamp <= '2020-01-06 23:59:59'
                      AND has(['control', 'test'], trim(BOTH '"'
                                                        FROM JSONExtractRaw(properties, '$feature/a-b-test'))) ) events
                 WHERE (step_0 = 1
                        OR step_1 = 1) ))
           WHERE step_0 = 1 SETTINGS allow_experimental_window_functions = 1 ))
     GROUP BY aggregation_target,
              steps,
              prop
     HAVING steps = max_steps SETTINGS allow_experimental_window_functions = 1)
  GROUP BY prop SETTINGS allow_experimental_window_functions = 1
  '
---
# name: ClickhouseTestFunnelExperimentResults.test_experiment_flow_with_event_results_for_three_test_variants
  '
  /* request:api_projects_(?P<parent_lookup_team_id>[^_.]+)_experiments_(?P<pk>[^_.]+)_results_?$ (ClickhouseExperimentsViewSet) */
  SELECT groupArray(value)
  FROM
    (SELECT array(trim(BOTH '"'
                       FROM JSONExtractRaw(properties, '$feature/a-b-test'))) AS value,
            count(*) as count
     FROM events e
     WHERE team_id = 2
       AND event = '$pageview'
       AND timestamp >= '2020-01-01 00:00:00'
       AND timestamp <= '2020-01-06 23:59:59'
       AND has(['control', 'test_1', 'test_2', 'test'], trim(BOTH '"'
                                                             FROM JSONExtractRaw(e.properties, '$feature/a-b-test')))
     GROUP BY value
     ORDER BY count DESC
     LIMIT 10
     OFFSET 0)
  '
---
# name: ClickhouseTestFunnelExperimentResults.test_experiment_flow_with_event_results_for_three_test_variants.1
  '
  /* request:api_projects_(?P<parent_lookup_team_id>[^_.]+)_experiments_(?P<pk>[^_.]+)_results_?$ (ClickhouseExperimentsViewSet) */
  SELECT countIf(steps = 1) step_1,
         countIf(steps = 2) step_2,
         avg(step_1_average_conversion_time_inner) step_1_average_conversion_time,
         median(step_1_median_conversion_time_inner) step_1_median_conversion_time,
         prop
  FROM
    (SELECT aggregation_target,
            steps,
            avg(step_1_conversion_time) step_1_average_conversion_time_inner,
            median(step_1_conversion_time) step_1_median_conversion_time_inner,
            prop
     FROM
       (SELECT aggregation_target,
               steps,
               max(steps) over (PARTITION BY aggregation_target,
                                             prop) as max_steps,
                               step_1_conversion_time,
                               prop
        FROM
          (SELECT *,
                  if(latest_0 < latest_1
                     AND latest_1 <= latest_0 + INTERVAL 14 DAY, 2, 1) AS steps ,
                  if(isNotNull(latest_1)
                     AND latest_1 <= latest_0 + INTERVAL 14 DAY, dateDiff('second', toDateTime(latest_0), toDateTime(latest_1)), NULL) step_1_conversion_time,
                  prop
           FROM
             (SELECT aggregation_target,
                     timestamp,
                     step_0,
                     latest_0,
                     step_1,
                     min(latest_1) over (PARTITION by aggregation_target,
                                                      prop
                                         ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 0 PRECEDING) latest_1 ,
                                        if(has([['test_1'], ['test'], ['control'], ['test_2']], prop), prop, ['Other']) as prop
              FROM
                (SELECT aggregation_target,
                        timestamp,
                        if(event = '$pageview', 1, 0) as step_0,
                        if(step_0 = 1, timestamp, null) as latest_0,
                        if(event = '$pageleave', 1, 0) as step_1,
                        if(step_1 = 1, timestamp, null) as latest_1,
                        array(trim(BOTH '"'
                                   FROM JSONExtractRaw(properties, '$feature/a-b-test'))) AS prop
                 FROM
                   (SELECT e.event as event,
                           e.team_id as team_id,
                           e.distinct_id as distinct_id,
                           e.timestamp as timestamp,
                           pdi.person_id as aggregation_target,
                           e.properties as properties
                    FROM events e
                    INNER JOIN
                      (SELECT distinct_id,
                              argMax(person_id, version) as person_id
                       FROM person_distinct_id2
                       WHERE team_id = 2
                       GROUP BY distinct_id
                       HAVING argMax(is_deleted, version) = 0) AS pdi ON e.distinct_id = pdi.distinct_id
                    WHERE team_id = 2
                      AND event IN ['$pageleave', '$pageview']
                      AND timestamp >= '2020-01-01 00:00:00'
                      AND timestamp <= '2020-01-06 23:59:59'
                      AND has(['control', 'test_1', 'test_2', 'test'], trim(BOTH '"'
                                                                            FROM JSONExtractRaw(properties, '$feature/a-b-test'))) ) events
                 WHERE (step_0 = 1
                        OR step_1 = 1) ))
           WHERE step_0 = 1 SETTINGS allow_experimental_window_functions = 1 ))
     GROUP BY aggregation_target,
              steps,
              prop
     HAVING steps = max_steps SETTINGS allow_experimental_window_functions = 1)
  GROUP BY prop SETTINGS allow_experimental_window_functions = 1
  '
---
# name: ClickhouseTestTrendExperimentResults.test_experiment_flow_with_event_results
  '
  /* request:api_projects_(?P<parent_lookup_team_id>[^_.]+)_experiments_(?P<pk>[^_.]+)_results_?$ (ClickhouseExperimentsViewSet) */
  SELECT groupArray(value)
  FROM
    (SELECT trim(BOTH '"'
                 FROM JSONExtractRaw(properties, '$feature/a-b-test')) AS value,
            count(*) as count
     FROM events e
     WHERE team_id = 2
       AND event = '$pageview'
       AND timestamp >= '2020-01-01 00:00:00'
       AND timestamp <= '2020-01-06 23:59:59'
       AND has(['control', 'test'], trim(BOTH '"'
                                         FROM JSONExtractRaw(e.properties, '$feature/a-b-test')))
     GROUP BY value
     ORDER BY count DESC
     LIMIT 25
     OFFSET 0)
  '
---
# name: ClickhouseTestTrendExperimentResults.test_experiment_flow_with_event_results.1
  '
  /* request:api_projects_(?P<parent_lookup_team_id>[^_.]+)_experiments_(?P<pk>[^_.]+)_results_?$ (ClickhouseExperimentsViewSet) */
  SELECT groupArray(day_start) as date,
         groupArray(count) as data,
         breakdown_value
  FROM
    (SELECT SUM(total) as count,
            day_start,
            breakdown_value
     FROM
       (SELECT *
        FROM
          (SELECT toUInt16(0) AS total,
                  ticks.day_start as day_start,
                  breakdown_value
           FROM
             (SELECT toStartOfDay(toDateTime('2020-01-06 23:59:59') - number * 86400) as day_start
              FROM numbers(6)
              UNION ALL SELECT toStartOfDay(toDateTime('2020-01-01 00:00:00')) as day_start) as ticks
           CROSS JOIN
             (SELECT breakdown_value
              FROM
                (SELECT ['test', 'control'] as breakdown_value) ARRAY
              JOIN breakdown_value) as sec
           ORDER BY breakdown_value,
                    day_start
           UNION ALL SELECT count(*) as total,
                            toDateTime(toStartOfDay(timestamp), 'UTC') as day_start,
                            trim(BOTH '"'
                                 FROM JSONExtractRaw(properties, '$feature/a-b-test')) as breakdown_value
           FROM events e
           WHERE e.team_id = 2
             AND event = '$pageview'
             AND has(['control', 'test'], trim(BOTH '"'
                                               FROM JSONExtractRaw(e.properties, '$feature/a-b-test')))
             AND toStartOfDay(timestamp) >= toStartOfDay(toDateTime('2020-01-01 00:00:00'))
             AND timestamp <= '2020-01-06 23:59:59'
             AND trim(BOTH '"'
                      FROM JSONExtractRaw(properties, '$feature/a-b-test')) in (['test', 'control'])
           GROUP BY day_start,
                    breakdown_value))
     GROUP BY day_start,
              breakdown_value
     ORDER BY breakdown_value,
              day_start)
  GROUP BY breakdown_value
  '
---
# name: ClickhouseTestTrendExperimentResults.test_experiment_flow_with_event_results.2
  '
  /* request:api_projects_(?P<parent_lookup_team_id>[^_.]+)_experiments_(?P<pk>[^_.]+)_results_?$ (ClickhouseExperimentsViewSet) */
  SELECT groupArray(value)
  FROM
    (SELECT trim(BOTH '"'
                 FROM JSONExtractRaw(properties, '$feature_flag_response')) AS value,
            count(*) as count
     FROM events e
     WHERE team_id = 2
       AND event = '$feature_flag_called'
       AND timestamp >= '2020-01-01 00:00:00'
       AND timestamp <= '2020-01-06 23:59:59'
       AND has(['control', 'test'], trim(BOTH '"'
                                         FROM JSONExtractRaw(e.properties, '$feature_flag_response')))
       AND has(['a-b-test'], trim(BOTH '"'
                                  FROM JSONExtractRaw(e.properties, '$feature_flag')))
     GROUP BY value
     ORDER BY count DESC
     LIMIT 25
     OFFSET 0)
  '
---
# name: ClickhouseTestTrendExperimentResults.test_experiment_flow_with_event_results.3
  '
  /* request:api_projects_(?P<parent_lookup_team_id>[^_.]+)_experiments_(?P<pk>[^_.]+)_results_?$ (ClickhouseExperimentsViewSet) */
  SELECT groupArray(day_start) as date,
         groupArray(count) as data,
         breakdown_value
  FROM
    (SELECT SUM(total) as count,
            day_start,
            breakdown_value
     FROM
       (SELECT *
        FROM
          (SELECT toUInt16(0) AS total,
                  ticks.day_start as day_start,
                  breakdown_value
           FROM
             (SELECT toStartOfDay(toDateTime('2020-01-06 23:59:59') - number * 86400) as day_start
              FROM numbers(6)
              UNION ALL SELECT toStartOfDay(toDateTime('2020-01-01 00:00:00')) as day_start) as ticks
           CROSS JOIN
             (SELECT breakdown_value
              FROM
                (SELECT ['control', 'test'] as breakdown_value) ARRAY
              JOIN breakdown_value) as sec
           ORDER BY breakdown_value,
                    day_start
           UNION ALL SELECT count(DISTINCT person_id) as total,
                            toDateTime(toStartOfDay(timestamp), 'UTC') as day_start,
                            breakdown_value
           FROM
             (SELECT person_id,
                     min(timestamp) as timestamp,
                     breakdown_value
              FROM
                (SELECT person_id,
                        timestamp,
                        trim(BOTH '"'
                             FROM JSONExtractRaw(properties, '$feature_flag_response')) as breakdown_value
                 FROM events e
                 INNER JOIN
                   (SELECT distinct_id,
                           argMax(person_id, version) as person_id
                    FROM person_distinct_id2
                    WHERE team_id = 2
                    GROUP BY distinct_id
                    HAVING argMax(is_deleted, version) = 0) as pdi ON events.distinct_id = pdi.distinct_id
                 WHERE e.team_id = 2
                   AND event = '$feature_flag_called'
                   AND has(['control', 'test'], trim(BOTH '"'
                                                     FROM JSONExtractRaw(e.properties, '$feature_flag_response')))
                   AND has(['a-b-test'], trim(BOTH '"'
                                              FROM JSONExtractRaw(e.properties, '$feature_flag')))
                   AND toStartOfDay(timestamp) >= toStartOfDay(toDateTime('2020-01-01 00:00:00'))
                   AND timestamp <= '2020-01-06 23:59:59'
                   AND trim(BOTH '"'
                            FROM JSONExtractRaw(properties, '$feature_flag_response')) in (['control', 'test']) )
              GROUP BY person_id,
                       breakdown_value)
           GROUP BY day_start,
                    breakdown_value))
     GROUP BY day_start,
              breakdown_value
     ORDER BY breakdown_value,
              day_start)
  GROUP BY breakdown_value
  '
---
# name: ClickhouseTestTrendExperimentResults.test_experiment_flow_with_event_results_for_three_test_variants
  '
  /* request:api_projects_(?P<parent_lookup_team_id>[^_.]+)_experiments_(?P<pk>[^_.]+)_results_?$ (ClickhouseExperimentsViewSet) */
  SELECT groupArray(value)
  FROM
    (SELECT trim(BOTH '"'
                 FROM JSONExtractRaw(properties, '$feature/a-b-test')) AS value,
            count(*) as count
     FROM events e
     WHERE team_id = 2
       AND event = '$pageview1'
       AND timestamp >= '2020-01-01 00:00:00'
       AND timestamp <= '2020-01-06 23:59:59'
       AND has(['control', 'test_1', 'test_2', 'test'], trim(BOTH '"'
                                                             FROM JSONExtractRaw(e.properties, '$feature/a-b-test')))
     GROUP BY value
     ORDER BY count DESC
     LIMIT 25
     OFFSET 0)
  '
---
# name: ClickhouseTestTrendExperimentResults.test_experiment_flow_with_event_results_for_three_test_variants.1
  '
  /* request:api_projects_(?P<parent_lookup_team_id>[^_.]+)_experiments_(?P<pk>[^_.]+)_results_?$ (ClickhouseExperimentsViewSet) */
  SELECT groupArray(day_start) as date,
         groupArray(count) as data,
         breakdown_value
  FROM
    (SELECT SUM(total) as count,
            day_start,
            breakdown_value
     FROM
       (SELECT *
        FROM
          (SELECT toUInt16(0) AS total,
                  ticks.day_start as day_start,
                  breakdown_value
           FROM
             (SELECT toStartOfDay(toDateTime('2020-01-06 23:59:59') - number * 86400) as day_start
              FROM numbers(6)
              UNION ALL SELECT toStartOfDay(toDateTime('2020-01-01 00:00:00')) as day_start) as ticks
           CROSS JOIN
             (SELECT breakdown_value
              FROM
                (SELECT ['control', 'test_1', 'test_2'] as breakdown_value) ARRAY
              JOIN breakdown_value) as sec
           ORDER BY breakdown_value,
                    day_start
           UNION ALL SELECT count(*) as total,
                            toDateTime(toStartOfDay(timestamp), 'UTC') as day_start,
                            trim(BOTH '"'
                                 FROM JSONExtractRaw(properties, '$feature/a-b-test')) as breakdown_value
           FROM events e
           WHERE e.team_id = 2
             AND event = '$pageview1'
             AND has(['control', 'test_1', 'test_2', 'test'], trim(BOTH '"'
                                                                   FROM JSONExtractRaw(e.properties, '$feature/a-b-test')))
             AND toStartOfDay(timestamp) >= toStartOfDay(toDateTime('2020-01-01 00:00:00'))
             AND timestamp <= '2020-01-06 23:59:59'
             AND trim(BOTH '"'
                      FROM JSONExtractRaw(properties, '$feature/a-b-test')) in (['control', 'test_1', 'test_2'])
           GROUP BY day_start,
                    breakdown_value))
     GROUP BY day_start,
              breakdown_value
     ORDER BY breakdown_value,
              day_start)
  GROUP BY breakdown_value
  '
---
# name: ClickhouseTestTrendExperimentResults.test_experiment_flow_with_event_results_for_three_test_variants.2
  '
  /* request:api_projects_(?P<parent_lookup_team_id>[^_.]+)_experiments_(?P<pk>[^_.]+)_results_?$ (ClickhouseExperimentsViewSet) */
  SELECT groupArray(value)
  FROM
    (SELECT trim(BOTH '"'
                 FROM JSONExtractRaw(properties, '$feature_flag_response')) AS value,
            count(*) as count
     FROM events e
     WHERE team_id = 2
       AND event = '$feature_flag_called'
       AND timestamp >= '2020-01-01 00:00:00'
       AND timestamp <= '2020-01-06 23:59:59'
       AND has(['control', 'test_1', 'test_2', 'test'], trim(BOTH '"'
                                                             FROM JSONExtractRaw(e.properties, '$feature_flag_response')))
       AND has(['a-b-test'], trim(BOTH '"'
                                  FROM JSONExtractRaw(e.properties, '$feature_flag')))
     GROUP BY value
     ORDER BY count DESC
     LIMIT 25
     OFFSET 0)
  '
---
# name: ClickhouseTestTrendExperimentResults.test_experiment_flow_with_event_results_for_three_test_variants.3
  '
  /* request:api_projects_(?P<parent_lookup_team_id>[^_.]+)_experiments_(?P<pk>[^_.]+)_results_?$ (ClickhouseExperimentsViewSet) */
  SELECT [now()] AS date,
         [0] AS data,
         '' AS breakdown_value
  LIMIT 0
  '
---
