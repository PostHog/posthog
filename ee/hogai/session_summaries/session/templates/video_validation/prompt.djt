<events_input_format>
You'll receive a list of events with columns:

- event_id: Unique identifier for the event - ALWAYS use this to reference specific events, NEVER generate or modify event IDs
- event_index: Index of the event in the session - helps understand sequence
- event: Type of event (e.g., $pageview, $autocapture) - signals user actions or system events
- timestamp: When the event occurred - helps track sequence and time between actions
- elements_chain_href: URL fragment interacted with - shows specific link or element targets
- elements_chain_texts: Text content of elements the user interacted with
- elements_chain_elements: Types of elements the user interacted with (clicked buttons, forms, etc.)
- $window_id: Unique identifier for browser window/tab - helps track multi-window workflows (use simplified references from window_mapping)
- $current_url: Page URL where the interaction happened on (use simplified references from url_mapping)
- $event_type: Type of interaction (e.g., click, submit) - specifies how the user interacted
- $elements_chain_ids: IDs of the elements that are part of the interaction
- $exception_types: Type of the exception occured, if applicable
- $exception_values: Short description of the exception occured, if applicable

Event columns are provided in the order the data for each event. So, the first element of the event is the event name, the second element is the timestamp, etc.

Use these events to reconstruct the user journey. Events are provided in a chronological order. Focus on what these events reveal about user intentions rather than the raw event data itself.

Don't include raw `elements_chain_texts` data in your summary, but use it to improve your understanding of user goals.
</events_input_format>

<events_input>
```
{{ EVENTS_DATA|safe }}
```
</events_input>

<url_mapping_input_format>
URLs mapping table shows the actual URLs for simplified URL references in the events data.

When analyzing events, use these mappings to understand the actual pages visited. For example, if an event shows 'url_1', refer to this mapping to find the actual URL. In your summary and tags, always use the actual page/feature names, not the simplified URL references. Always refer to the URL with the simplest version e.g. `posthog.com` or `posthog.com/replay`, instead of mentioning the full URL with long query parameters.
</url_mapping_input_format>

<url_mapping_input>
```
{{ URL_MAPPING|safe }}
```
</url_mapping_input>

<window_mapping_input_format>
Window IDs mapping table shows the actual browser windows/tabs IDs for simplified references in the events data.

Window IDs help track user activity across different browser windows or tabs. For example:

- If events switch from 'window_1' to 'window_2', the user switched to a different browser window/tab
- Multiple events with the same window ID indicate continuous activity in the same window/tab
- Frequent window switches might indicate comparing content or multitasking

Use this information to understand user navigation patterns and parallel browsing behavior.
</window_mapping_input_format>

<window_mapping_input>
```
{{ WINDOW_ID_MAPPING|safe }}
```
</window_mapping_input>

<identify_objectives_instructions>
</identify_objectives_instructions>

<output_format>
Provide your summary in YAML format using the provided example. Don't replicate the data, or comments, or logic of the example, or the number of example entries. Use it ONLY to understand the format.

IMPORTANT:
- Always use quotes around indicator strings that contain special characters
- Replace comparison operators with words:
  - Instead of ">3" use "more than 3" 
  - Instead of "<1" use "less than 1"
  - Instead of ">=5" use "5 or more"
- Avoid using special YAML characters (>, <, :, &, *, ?, |, -, @, `) at the beginning of unquoted strings
- When in doubt, wrap the entire indicator string in single or double quotes
</output_format>

<output_example>
```
{{ SUMMARY_EXAMPLE|safe }}
```
</output_example>