{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "anyOf": [
        {
            "additionalProperties": false,
            "properties": {
                "data": {
                    "additionalProperties": false,
                    "properties": {
                        "initialOffset": {
                            "additionalProperties": false,
                            "properties": {
                                "left": {
                                    "type": "number"
                                },
                                "top": {
                                    "type": "number"
                                }
                            },
                            "required": ["top", "left"],
                            "type": "object"
                        },
                        "wireframes": {
                            "description": "This mimics the RRWeb full snapshot event type, except instead of reporting a serialized DOM it reports a wireframe representation of the screen.",
                            "items": {
                                "$ref": "#/definitions/wireframe"
                            },
                            "type": "array"
                        }
                    },
                    "required": ["wireframes", "initialOffset"],
                    "type": "object"
                },
                "delay": {
                    "type": "number"
                },
                "timestamp": {
                    "type": "number"
                },
                "type": {
                    "$ref": "#/definitions/EventType.FullSnapshot"
                }
            },
            "required": ["data", "timestamp", "type"],
            "type": "object"
        },
        {
            "additionalProperties": false,
            "properties": {
                "data": {
                    "additionalProperties": false,
                    "properties": {
                        "height": {
                            "type": "number"
                        },
                        "href": {
                            "type": "string"
                        },
                        "width": {
                            "type": "number"
                        }
                    },
                    "required": ["width", "height"],
                    "type": "object"
                },
                "delay": {
                    "type": "number"
                },
                "timestamp": {
                    "type": "number"
                },
                "type": {
                    "$ref": "#/definitions/EventType.Meta"
                }
            },
            "required": ["data", "timestamp", "type"],
            "type": "object"
        },
        {
            "additionalProperties": false,
            "properties": {
                "data": {
                    "additionalProperties": false,
                    "properties": {
                        "payload": {},
                        "tag": {
                            "type": "string"
                        }
                    },
                    "required": ["tag", "payload"],
                    "type": "object"
                },
                "delay": {
                    "type": "number"
                },
                "timestamp": {
                    "type": "number"
                },
                "type": {
                    "$ref": "#/definitions/EventType.Custom"
                }
            },
            "required": ["data", "timestamp", "type"],
            "type": "object"
        },
        {
            "additionalProperties": false,
            "properties": {
                "data": {},
                "delay": {
                    "type": "number"
                },
                "timestamp": {
                    "type": "number"
                },
                "type": {
                    "$ref": "#/definitions/EventType.IncrementalSnapshot"
                }
            },
            "required": ["data", "timestamp", "type"],
            "type": "object"
        },
        {
            "additionalProperties": false,
            "properties": {
                "data": {
                    "additionalProperties": false,
                    "properties": {
                        "payload": {
                            "anyOf": [
                                {
                                    "additionalProperties": false,
                                    "properties": {
                                        "height": {
                                            "type": "number"
                                        },
                                        "open": {
                                            "const": true,
                                            "type": "boolean"
                                        },
                                        "styles": {
                                            "$ref": "#/definitions/MobileStyles"
                                        },
                                        "width": {
                                            "type": "number"
                                        },
                                        "x": {
                                            "description": "x and y are the top left corner of the element, if they are present then the element is absolutely positioned, if they are not present then the keyboard is at the bottom of the screen",
                                            "type": "number"
                                        },
                                        "y": {
                                            "type": "number"
                                        }
                                    },
                                    "required": ["open", "height"],
                                    "type": "object"
                                },
                                {
                                    "additionalProperties": false,
                                    "properties": {
                                        "open": {
                                            "const": false,
                                            "type": "boolean"
                                        }
                                    },
                                    "required": ["open"],
                                    "type": "object"
                                }
                            ]
                        },
                        "tag": {
                            "const": "keyboard",
                            "type": "string"
                        }
                    },
                    "required": ["tag", "payload"],
                    "type": "object"
                },
                "delay": {
                    "type": "number"
                },
                "timestamp": {
                    "type": "number"
                },
                "type": {
                    "$ref": "#/definitions/EventType.Custom"
                }
            },
            "required": ["data", "timestamp", "type"],
            "type": "object"
        }
    ],
    "definitions": {
        "EventType.Custom": {
            "const": 5,
            "type": "number"
        },
        "EventType.FullSnapshot": {
            "const": 2,
            "type": "number"
        },
        "EventType.IncrementalSnapshot": {
            "const": 3,
            "type": "number"
        },
        "EventType.Meta": {
            "const": 4,
            "type": "number"
        },
        "MobileNodeType": {
            "enum": ["text", "image", "rectangle", "placeholder", "web_view", "input", "div", "radio_group"],
            "type": "string"
        },
        "MobileStyles": {
            "additionalProperties": false,
            "properties": {
                "backgroundColor": {
                    "description": "maps to CSS background-color. Accepts any valid CSS color value. Expects a #RGB value e.g. #000 or #000000",
                    "type": "string"
                },
                "borderColor": {
                    "description": "if borderColor is present, then border style is assumed to be solid",
                    "type": "string"
                },
                "borderRadius": {
                    "description": "if borderRadius is present, then border style is assumed to be solid",
                    "type": ["string", "number"]
                },
                "borderWidth": {
                    "description": "if borderWidth is present, then border style is assumed to be solid",
                    "type": ["string", "number"]
                },
                "color": {
                    "description": "maps to CSS color. Accepts any valid CSS color value. Expects a #RGB value e.g. #000 or #000000",
                    "type": "string"
                },
                "fontFamily": {
                    "description": "maps to CSS font-family. Accepts any valid CSS font-family value.",
                    "type": "string"
                },
                "fontSize": {
                    "description": "maps to CSS font-size. Accepts any valid CSS font-size value. Expects a number (treated as pixels) or a string that is a number followed by px e.g. 16px",
                    "type": ["string", "number"]
                },
                "horizontalAlign": {
                    "description": "horizontal alignment with respect to its parent",
                    "enum": ["left", "right", "center"],
                    "type": "string"
                },
                "verticalAlign": {
                    "description": "vertical alignment with respect to its parent",
                    "enum": ["top", "bottom", "center"],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "wireframe": {
            "anyOf": [
                {
                    "$ref": "#/definitions/wireframeText"
                },
                {
                    "$ref": "#/definitions/wireframeImage"
                },
                {
                    "$ref": "#/definitions/wireframeRectangle"
                },
                {
                    "$ref": "#/definitions/wireframeDiv"
                },
                {
                    "$ref": "#/definitions/wireframeInputComponent"
                },
                {
                    "$ref": "#/definitions/wireframeRadioGroup"
                },
                {
                    "$ref": "#/definitions/wireframeWebView"
                },
                {
                    "$ref": "#/definitions/wireframePlaceholder"
                }
            ]
        },
        "wireframeButton": {
            "additionalProperties": false,
            "properties": {
                "childWireframes": {
                    "items": {
                        "$ref": "#/definitions/wireframe"
                    },
                    "type": "array"
                },
                "disabled": {
                    "description": "for several attributes we technically only care about true or absent as values. They are represented as bare attributes in HTML <input disabled>. When true that attribute is added to the HTML element, when absent that attribute is not added to the HTML element. When false or absent they are not added to the element.",
                    "type": "boolean"
                },
                "height": {
                    "type": "number"
                },
                "id": {
                    "type": "number"
                },
                "inputType": {
                    "const": "button",
                    "type": "string"
                },
                "style": {
                    "$ref": "#/definitions/MobileStyles"
                },
                "type": {
                    "$ref": "#/definitions/MobileNodeType"
                },
                "value": {
                    "description": "this is the text that is displayed on the button, if not sent then you must send childNodes with the button content",
                    "type": "string"
                },
                "width": {
                    "anyOf": [
                        {
                            "type": "number"
                        },
                        {
                            "const": "100vw",
                            "type": "string"
                        }
                    ]
                },
                "x": {
                    "description": "x and y are the top left corner of the element, if they are present then the element is absolutely positioned, if they are not present this is equivalent to setting them to 0",
                    "type": "number"
                },
                "y": {
                    "type": "number"
                }
            },
            "required": ["disabled", "height", "id", "inputType", "type", "width"],
            "type": "object"
        },
        "wireframeCheckBox": {
            "additionalProperties": false,
            "properties": {
                "checked": {
                    "description": "for several attributes we technically only care about true or absent as values. They are represented as bare attributes in HTML <input checked>. When true that attribute is added to the HTML element, when absent that attribute is not added to the HTML element. When false or absent they are not added to the element.",
                    "type": "boolean"
                },
                "childWireframes": {
                    "items": {
                        "$ref": "#/definitions/wireframe"
                    },
                    "type": "array"
                },
                "disabled": {
                    "description": "for several attributes we technically only care about true or absent as values. They are represented as bare attributes in HTML <input disabled>. When true that attribute is added to the HTML element, when absent that attribute is not added to the HTML element. When false or absent they are not added to the element.",
                    "type": "boolean"
                },
                "height": {
                    "type": "number"
                },
                "id": {
                    "type": "number"
                },
                "inputType": {
                    "const": "checkbox",
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "style": {
                    "$ref": "#/definitions/MobileStyles"
                },
                "type": {
                    "$ref": "#/definitions/MobileNodeType"
                },
                "width": {
                    "anyOf": [
                        {
                            "type": "number"
                        },
                        {
                            "const": "100vw",
                            "type": "string"
                        }
                    ]
                },
                "x": {
                    "description": "x and y are the top left corner of the element, if they are present then the element is absolutely positioned, if they are not present this is equivalent to setting them to 0",
                    "type": "number"
                },
                "y": {
                    "type": "number"
                }
            },
            "required": ["checked", "disabled", "height", "id", "inputType", "type", "width"],
            "type": "object"
        },
        "wireframeDiv": {
            "additionalProperties": false,
            "properties": {
                "childWireframes": {
                    "items": {
                        "$ref": "#/definitions/wireframe"
                    },
                    "type": "array"
                },
                "height": {
                    "type": "number"
                },
                "id": {
                    "type": "number"
                },
                "style": {
                    "$ref": "#/definitions/MobileStyles"
                },
                "type": {
                    "$ref": "#/definitions/MobileNodeType"
                },
                "width": {
                    "anyOf": [
                        {
                            "type": "number"
                        },
                        {
                            "const": "100vw",
                            "type": "string"
                        }
                    ]
                },
                "x": {
                    "description": "x and y are the top left corner of the element, if they are present then the element is absolutely positioned, if they are not present this is equivalent to setting them to 0",
                    "type": "number"
                },
                "y": {
                    "type": "number"
                }
            },
            "required": ["height", "id", "type", "width"],
            "type": "object"
        },
        "wireframeImage": {
            "additionalProperties": false,
            "properties": {
                "base64": {
                    "description": "this will be used as base64 encoded image source, with no other attributes it is assumed to be a PNG, if omitted a placeholder is rendered",
                    "type": "string"
                },
                "childWireframes": {
                    "items": {
                        "$ref": "#/definitions/wireframe"
                    },
                    "type": "array"
                },
                "height": {
                    "type": "number"
                },
                "id": {
                    "type": "number"
                },
                "style": {
                    "$ref": "#/definitions/MobileStyles"
                },
                "type": {
                    "$ref": "#/definitions/MobileNodeType"
                },
                "width": {
                    "anyOf": [
                        {
                            "type": "number"
                        },
                        {
                            "const": "100vw",
                            "type": "string"
                        }
                    ]
                },
                "x": {
                    "description": "x and y are the top left corner of the element, if they are present then the element is absolutely positioned, if they are not present this is equivalent to setting them to 0",
                    "type": "number"
                },
                "y": {
                    "type": "number"
                }
            },
            "required": ["height", "id", "type", "width"],
            "type": "object"
        },
        "wireframeInput": {
            "additionalProperties": false,
            "properties": {
                "childWireframes": {
                    "items": {
                        "$ref": "#/definitions/wireframe"
                    },
                    "type": "array"
                },
                "disabled": {
                    "description": "for several attributes we technically only care about true or absent as values. They are represented as bare attributes in HTML <input disabled>. When true that attribute is added to the HTML element, when absent that attribute is not added to the HTML element. When false or absent they are not added to the element.",
                    "type": "boolean"
                },
                "height": {
                    "type": "number"
                },
                "id": {
                    "type": "number"
                },
                "inputType": {
                    "enum": ["text", "password", "email", "number", "search", "tel", "url"],
                    "type": "string"
                },
                "style": {
                    "$ref": "#/definitions/MobileStyles"
                },
                "type": {
                    "$ref": "#/definitions/MobileNodeType"
                },
                "value": {
                    "type": "string"
                },
                "width": {
                    "anyOf": [
                        {
                            "type": "number"
                        },
                        {
                            "const": "100vw",
                            "type": "string"
                        }
                    ]
                },
                "x": {
                    "description": "x and y are the top left corner of the element, if they are present then the element is absolutely positioned, if they are not present this is equivalent to setting them to 0",
                    "type": "number"
                },
                "y": {
                    "type": "number"
                }
            },
            "required": ["disabled", "height", "id", "inputType", "type", "width"],
            "type": "object"
        },
        "wireframeInputComponent": {
            "anyOf": [
                {
                    "$ref": "#/definitions/wireframeCheckBox"
                },
                {
                    "$ref": "#/definitions/wireframeRadio"
                },
                {
                    "$ref": "#/definitions/wireframeInput"
                },
                {
                    "$ref": "#/definitions/wireframeSelect"
                },
                {
                    "$ref": "#/definitions/wireframeTextArea"
                },
                {
                    "$ref": "#/definitions/wireframeButton"
                },
                {
                    "$ref": "#/definitions/wireframeProgress"
                },
                {
                    "$ref": "#/definitions/wireframeToggle"
                }
            ]
        },
        "wireframePlaceholder": {
            "additionalProperties": false,
            "properties": {
                "childWireframes": {
                    "items": {
                        "$ref": "#/definitions/wireframe"
                    },
                    "type": "array"
                },
                "height": {
                    "type": "number"
                },
                "id": {
                    "type": "number"
                },
                "label": {
                    "type": "string"
                },
                "style": {
                    "$ref": "#/definitions/MobileStyles"
                },
                "type": {
                    "$ref": "#/definitions/MobileNodeType"
                },
                "width": {
                    "anyOf": [
                        {
                            "type": "number"
                        },
                        {
                            "const": "100vw",
                            "type": "string"
                        }
                    ]
                },
                "x": {
                    "description": "x and y are the top left corner of the element, if they are present then the element is absolutely positioned, if they are not present this is equivalent to setting them to 0",
                    "type": "number"
                },
                "y": {
                    "type": "number"
                }
            },
            "required": ["height", "id", "type", "width"],
            "type": "object"
        },
        "wireframeProgress": {
            "additionalProperties": false,
            "properties": {
                "childWireframes": {
                    "items": {
                        "$ref": "#/definitions/wireframe"
                    },
                    "type": "array"
                },
                "disabled": {
                    "description": "for several attributes we technically only care about true or absent as values. They are represented as bare attributes in HTML <input disabled>. When true that attribute is added to the HTML element, when absent that attribute is not added to the HTML element. When false or absent they are not added to the element.",
                    "type": "boolean"
                },
                "height": {
                    "type": "number"
                },
                "id": {
                    "type": "number"
                },
                "inputType": {
                    "const": "progress",
                    "type": "string"
                },
                "max": {
                    "description": "The max attribute, if present, must have a value greater than 0 and be a valid floating point number. The default value is 1. When bar style is rating this is the number of stars.",
                    "type": "number"
                },
                "style": {
                    "$ref": "#/definitions/MobileStyles"
                },
                "type": {
                    "$ref": "#/definitions/MobileNodeType"
                },
                "value": {
                    "description": "This attribute specifies how much of the task that has been completed. It must be a valid floating point number between 0 and max, or between 0 and 1 if max is omitted. If there is no value attribute, the progress bar is indeterminate; this indicates that an activity is ongoing with no indication of how long it is expected to take. When bar style is rating this is the number of filled stars.",
                    "type": "number"
                },
                "width": {
                    "anyOf": [
                        {
                            "type": "number"
                        },
                        {
                            "const": "100vw",
                            "type": "string"
                        }
                    ]
                },
                "x": {
                    "description": "x and y are the top left corner of the element, if they are present then the element is absolutely positioned, if they are not present this is equivalent to setting them to 0",
                    "type": "number"
                },
                "y": {
                    "type": "number"
                }
            },
            "required": ["disabled", "height", "id", "inputType", "type", "width"],
            "type": "object"
        },
        "wireframeRadio": {
            "additionalProperties": false,
            "properties": {
                "checked": {
                    "description": "for several attributes we technically only care about true or absent as values. They are represented as bare attributes in HTML <input checked>. When true that attribute is added to the HTML element, when absent that attribute is not added to the HTML element. When false or absent they are not added to the element.",
                    "type": "boolean"
                },
                "childWireframes": {
                    "items": {
                        "$ref": "#/definitions/wireframe"
                    },
                    "type": "array"
                },
                "disabled": {
                    "description": "for several attributes we technically only care about true or absent as values. They are represented as bare attributes in HTML <input disabled>. When true that attribute is added to the HTML element, when absent that attribute is not added to the HTML element. When false or absent they are not added to the element.",
                    "type": "boolean"
                },
                "height": {
                    "type": "number"
                },
                "id": {
                    "type": "number"
                },
                "inputType": {
                    "const": "radio",
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "style": {
                    "$ref": "#/definitions/MobileStyles"
                },
                "type": {
                    "$ref": "#/definitions/MobileNodeType"
                },
                "width": {
                    "anyOf": [
                        {
                            "type": "number"
                        },
                        {
                            "const": "100vw",
                            "type": "string"
                        }
                    ]
                },
                "x": {
                    "description": "x and y are the top left corner of the element, if they are present then the element is absolutely positioned, if they are not present this is equivalent to setting them to 0",
                    "type": "number"
                },
                "y": {
                    "type": "number"
                }
            },
            "required": ["checked", "disabled", "height", "id", "inputType", "type", "width"],
            "type": "object"
        },
        "wireframeRadioGroup": {
            "additionalProperties": false,
            "properties": {
                "childWireframes": {
                    "items": {
                        "$ref": "#/definitions/wireframe"
                    },
                    "type": "array"
                },
                "height": {
                    "type": "number"
                },
                "id": {
                    "type": "number"
                },
                "style": {
                    "$ref": "#/definitions/MobileStyles"
                },
                "type": {
                    "$ref": "#/definitions/MobileNodeType"
                },
                "width": {
                    "anyOf": [
                        {
                            "type": "number"
                        },
                        {
                            "const": "100vw",
                            "type": "string"
                        }
                    ]
                },
                "x": {
                    "description": "x and y are the top left corner of the element, if they are present then the element is absolutely positioned, if they are not present this is equivalent to setting them to 0",
                    "type": "number"
                },
                "y": {
                    "type": "number"
                }
            },
            "required": ["height", "id", "type", "width"],
            "type": "object"
        },
        "wireframeRectangle": {
            "additionalProperties": false,
            "properties": {
                "childWireframes": {
                    "items": {
                        "$ref": "#/definitions/wireframe"
                    },
                    "type": "array"
                },
                "height": {
                    "type": "number"
                },
                "id": {
                    "type": "number"
                },
                "style": {
                    "$ref": "#/definitions/MobileStyles"
                },
                "type": {
                    "$ref": "#/definitions/MobileNodeType"
                },
                "width": {
                    "anyOf": [
                        {
                            "type": "number"
                        },
                        {
                            "const": "100vw",
                            "type": "string"
                        }
                    ]
                },
                "x": {
                    "description": "x and y are the top left corner of the element, if they are present then the element is absolutely positioned, if they are not present this is equivalent to setting them to 0",
                    "type": "number"
                },
                "y": {
                    "type": "number"
                }
            },
            "required": ["height", "id", "type", "width"],
            "type": "object"
        },
        "wireframeSelect": {
            "additionalProperties": false,
            "properties": {
                "childWireframes": {
                    "items": {
                        "$ref": "#/definitions/wireframe"
                    },
                    "type": "array"
                },
                "disabled": {
                    "description": "for several attributes we technically only care about true or absent as values. They are represented as bare attributes in HTML <input disabled>. When true that attribute is added to the HTML element, when absent that attribute is not added to the HTML element. When false or absent they are not added to the element.",
                    "type": "boolean"
                },
                "height": {
                    "type": "number"
                },
                "id": {
                    "type": "number"
                },
                "inputType": {
                    "const": "select",
                    "type": "string"
                },
                "options": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "style": {
                    "$ref": "#/definitions/MobileStyles"
                },
                "type": {
                    "$ref": "#/definitions/MobileNodeType"
                },
                "value": {
                    "type": "string"
                },
                "width": {
                    "anyOf": [
                        {
                            "type": "number"
                        },
                        {
                            "const": "100vw",
                            "type": "string"
                        }
                    ]
                },
                "x": {
                    "description": "x and y are the top left corner of the element, if they are present then the element is absolutely positioned, if they are not present this is equivalent to setting them to 0",
                    "type": "number"
                },
                "y": {
                    "type": "number"
                }
            },
            "required": ["disabled", "height", "id", "inputType", "type", "width"],
            "type": "object"
        },
        "wireframeText": {
            "additionalProperties": false,
            "properties": {
                "childWireframes": {
                    "items": {
                        "$ref": "#/definitions/wireframe"
                    },
                    "type": "array"
                },
                "height": {
                    "type": "number"
                },
                "id": {
                    "type": "number"
                },
                "style": {
                    "$ref": "#/definitions/MobileStyles"
                },
                "text": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/MobileNodeType"
                },
                "width": {
                    "anyOf": [
                        {
                            "type": "number"
                        },
                        {
                            "const": "100vw",
                            "type": "string"
                        }
                    ]
                },
                "x": {
                    "description": "x and y are the top left corner of the element, if they are present then the element is absolutely positioned, if they are not present this is equivalent to setting them to 0",
                    "type": "number"
                },
                "y": {
                    "type": "number"
                }
            },
            "required": ["height", "id", "text", "type", "width"],
            "type": "object"
        },
        "wireframeTextArea": {
            "additionalProperties": false,
            "properties": {
                "childWireframes": {
                    "items": {
                        "$ref": "#/definitions/wireframe"
                    },
                    "type": "array"
                },
                "disabled": {
                    "description": "for several attributes we technically only care about true or absent as values. They are represented as bare attributes in HTML <input disabled>. When true that attribute is added to the HTML element, when absent that attribute is not added to the HTML element. When false or absent they are not added to the element.",
                    "type": "boolean"
                },
                "height": {
                    "type": "number"
                },
                "id": {
                    "type": "number"
                },
                "inputType": {
                    "const": "text_area",
                    "type": "string"
                },
                "style": {
                    "$ref": "#/definitions/MobileStyles"
                },
                "type": {
                    "$ref": "#/definitions/MobileNodeType"
                },
                "value": {
                    "type": "string"
                },
                "width": {
                    "anyOf": [
                        {
                            "type": "number"
                        },
                        {
                            "const": "100vw",
                            "type": "string"
                        }
                    ]
                },
                "x": {
                    "description": "x and y are the top left corner of the element, if they are present then the element is absolutely positioned, if they are not present this is equivalent to setting them to 0",
                    "type": "number"
                },
                "y": {
                    "type": "number"
                }
            },
            "required": ["disabled", "height", "id", "inputType", "type", "width"],
            "type": "object"
        },
        "wireframeToggle": {
            "additionalProperties": false,
            "properties": {
                "checked": {
                    "type": "boolean"
                },
                "childWireframes": {
                    "items": {
                        "$ref": "#/definitions/wireframe"
                    },
                    "type": "array"
                },
                "disabled": {
                    "description": "for several attributes we technically only care about true or absent as values. They are represented as bare attributes in HTML <input disabled>. When true that attribute is added to the HTML element, when absent that attribute is not added to the HTML element. When false or absent they are not added to the element.",
                    "type": "boolean"
                },
                "height": {
                    "type": "number"
                },
                "id": {
                    "type": "number"
                },
                "inputType": {
                    "const": "toggle",
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "style": {
                    "$ref": "#/definitions/MobileStyles"
                },
                "type": {
                    "$ref": "#/definitions/MobileNodeType"
                },
                "width": {
                    "anyOf": [
                        {
                            "type": "number"
                        },
                        {
                            "const": "100vw",
                            "type": "string"
                        }
                    ]
                },
                "x": {
                    "description": "x and y are the top left corner of the element, if they are present then the element is absolutely positioned, if they are not present this is equivalent to setting them to 0",
                    "type": "number"
                },
                "y": {
                    "type": "number"
                }
            },
            "required": ["checked", "disabled", "height", "id", "inputType", "type", "width"],
            "type": "object"
        },
        "wireframeWebView": {
            "additionalProperties": false,
            "properties": {
                "childWireframes": {
                    "items": {
                        "$ref": "#/definitions/wireframe"
                    },
                    "type": "array"
                },
                "height": {
                    "type": "number"
                },
                "id": {
                    "type": "number"
                },
                "style": {
                    "$ref": "#/definitions/MobileStyles"
                },
                "type": {
                    "$ref": "#/definitions/MobileNodeType"
                },
                "url": {
                    "type": "string"
                },
                "width": {
                    "anyOf": [
                        {
                            "type": "number"
                        },
                        {
                            "const": "100vw",
                            "type": "string"
                        }
                    ]
                },
                "x": {
                    "description": "x and y are the top left corner of the element, if they are present then the element is absolutely positioned, if they are not present this is equivalent to setting them to 0",
                    "type": "number"
                },
                "y": {
                    "type": "number"
                }
            },
            "required": ["height", "id", "type", "width"],
            "type": "object"
        }
    }
}
