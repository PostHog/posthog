const letterToRegionalIndicator: Record<string, string> = {
    A: 'ðŸ‡¦',
    B: 'ðŸ‡§',
    C: 'ðŸ‡¨',
    D: 'ðŸ‡©',
    E: 'ðŸ‡ª',
    F: 'ðŸ‡«',
    G: 'ðŸ‡¬',
    H: 'ðŸ‡­',
    I: 'ðŸ‡®',
    J: 'ðŸ‡¯',
    K: 'ðŸ‡°',
    L: 'ðŸ‡±',
    M: 'ðŸ‡²',
    N: 'ðŸ‡³',
    O: 'ðŸ‡´',
    P: 'ðŸ‡µ',
    Q: 'ðŸ‡¶',
    R: 'ðŸ‡·',
    S: 'ðŸ‡¸',
    T: 'ðŸ‡¹',
    U: 'ðŸ‡º',
    V: 'ðŸ‡»',
    W: 'ðŸ‡¼',
    X: 'ðŸ‡½',
    Y: 'ðŸ‡¾',
    Z: 'ðŸ‡¿',
}

/**
 * Returns country flag emoji for a given ISO 3166-1 alpha-2 country code.
 *
 * This is super simple because a country flag is in fact just the country's ISO code in _regional indicator_ form.
 * See: https://en.wikipedia.org/wiki/Regional_indicator_symbol
 */
export function countryCodeToFlag(countryCode: string): string {
    if (!countryCode) {
        return ''
    }

    if (!countryCode.length) {
        return ''
    }

    if (countryCode.length !== 2) {
        return ''
    }

    return `${letterToRegionalIndicator[countryCode[0]]}${letterToRegionalIndicator[countryCode[1]]}`
}

/**
 * Returns country flag emoji for a given ISO 639 language code.
 * This isn't needed often because the locales usually come in the nl-NL format (for dutch, for example)
 * but there are cases where we only see the first part in case the language isn't shared by more than
 * one country - such as the Netherlands.
 */
export function languageCodeToFlag(languageCode: string): string {
    return countryCodeToFlag(languageCodeToCountryCode[languageCode])
}

export const countryCodeToName: Record<string, string> = {
    AE: 'United Arab Emirates',
    AF: 'Afghanistan',
    AG: 'Antigua and Barbuda',
    AL: 'Albania',
    AM: 'Armenia',
    AO: 'Angola',
    AR: 'Argentina',
    AT: 'Austria',
    AU: 'Australia',
    AZ: 'Azerbaijan',
    BA: 'Bosnia and Herzegovina',
    BD: 'Bangladesh',
    BE: 'Belgium',
    BF: 'Burkina Faso',
    BG: 'Bulgaria',
    BI: 'Burundi',
    BJ: 'Benin',
    BN: 'Brunei',
    BO: 'Bolivia',
    BR: 'Brazil',
    BS: 'Bahamas',
    BT: 'Bhutan',
    BW: 'Botswana',
    BY: 'Belarus',
    BZ: 'Belize',
    CA: 'Canada',
    CD: 'Democratic Republic of the Congo',
    CF: 'Central African Republic',
    CG: 'Republic of the Congo',
    CH: 'Switzerland',
    CI: 'Ivory Coast',
    CL: 'Chile',
    CM: 'Cameroon',
    CN: 'China',
    CO: 'Colombia',
    CR: 'Costa Rica',
    CU: 'Cuba',
    CV: 'Cape Verde',
    CZ: 'Czech Republic',
    DE: 'Germany',
    DJ: 'Djibouti',
    DK: 'Denmark',
    DO: 'Dominican Republic',
    DZ: 'Algeria',
    EC: 'Ecuador',
    EE: 'Estonia',
    EG: 'Egypt',
    EH: 'Western Sahara',
    ER: 'Eritrea',
    ES: 'Spain',
    ET: 'Ethiopia',
    FI: 'Finland',
    FJ: 'Fiji',
    FK: 'Falkland Islands',
    FO: 'Faroe Islands',
    GA: 'Gabon',
    GB: 'United Kingdom',
    GF: 'French Guiana',
    GH: 'Ghana',
    GL: 'Greenland',
    GN: 'Guinea',
    GP: 'Guadeloupe',
    GQ: 'Equatorial Guinea',
    GR: 'Greece',
    GT: 'Guatemala',
    GW: 'Guinea-Bissau',
    GY: 'Guyana',
    HK: 'Hong Kong',
    HN: 'Honduras',
    HR: 'Croatia',
    HT: 'Haiti',
    HU: 'Hungary',
    ID: 'Indonesia',
    IE: 'Ireland',
    IN: 'India',
    IQ: 'Iraq',
    IR: 'Iran',
    IS: 'Iceland',
    IT: 'Italy',
    JO: 'Jordan',
    JP: 'Japan',
    KE: 'Kenya',
    KG: 'Kyrgyzstan',
    KH: 'Cambodia',
    KI: 'Kiribati',
    KM: 'Comoros',
    KN: 'Saint Kitts and Nevis',
    KP: 'North Korea',
    KR: 'South Korea',
    KW: 'Kuwait',
    KZ: 'Kazakhstan',
    LA: 'Laos',
    LK: 'Sri Lanka',
    LR: 'Liberia',
    LS: 'Lesotho',
    LT: 'Lithuania',
    LV: 'Latvia',
    LY: 'Libya',
    MA: 'Morocco',
    MG: 'Madagascar',
    MK: 'Macedonia',
    ML: 'Mali',
    MM: 'Myanmar',
    MN: 'Mongolia',
    MR: 'Mauritania',
    MW: 'Malawi',
    MX: 'Mexico',
    MY: 'Malaysia',
    MZ: 'Mozambique',
    NA: 'Namibia',
    NC: 'New Caledonia',
    NE: 'Niger',
    NG: 'Nigeria',
    NI: 'Nicaragua',
    NO: 'Norway',
    NP: 'Nepal',
    NZ: 'New Zealand',
    OM: 'Oman',
    PA: 'Panama',
    PE: 'Peru',
    PF: 'French Polynesia',
    PG: 'Papua New Guinea',
    PH: 'Philippines',
    PL: 'Poland',
    PS: 'Palestinian Territory',
    PT: 'Portugal',
    PY: 'Paraguay',
    RO: 'Romania',
    RU: 'Russia',
    RW: 'Rwanda',
    SA: 'Saudi Arabia',
    SB: 'Solomon Islands',
    SD: 'Sudan',
    SE: 'Sweden',
    SI: 'Slovenia',
    SK: 'Slovakia',
    SL: 'Sierra Leone',
    SN: 'Senegal',
    SR: 'Suriname',
    SS: 'South Sudan',
    ST: 'Sao Tome and Principe',
    SV: 'El Salvador',
    SY: 'Syria',
    TC: 'Turks and Caicos Islands',
    TD: 'Chad',
    TG: 'Togo',
    TH: 'Thailand',
    TJ: 'Tajikistan',
    TL: 'East Timor',
    TM: 'Turkmenistan',
    TN: 'Tunisia',
    TO: 'Tonga',
    TR: 'Turkey',
    TT: 'Trinidad and Tobago',
    TW: 'Taiwan',
    TZ: 'Tanzania',
    UG: 'Uganda',
    US: 'United States',
    UY: 'Uruguay',
    UZ: 'Uzbekistan',
    VE: 'Venezuela',
    VG: 'British Virgin Islands',
    VI: 'U.S. Virgin Islands',
    VN: 'Vietnam',
    VU: 'Vanuatu',
    WS: 'Samoa',
    YE: 'Yemen',
    ZA: 'South Africa',
    ZM: 'Zambia',
    ZW: 'Zimbabwe',
    GE: 'Georgia',
    PK: 'Pakistan',
    RS: 'Serbia',
    SO: 'Somalia',
    IL: 'Israel',
    MD: 'Moldova',
    TF: 'French Southern Territories',
    FR: 'France',
    NL: 'Netherlands',
    LB: 'Lebanon',
    ME: 'Montenegro',
    UA: 'Ukraine',
    SZ: 'Swaziland',
    GS: 'South Georgia and the South Sandwich Islands',
    GM: 'Gambia',
    QA: 'Qatar',
    JM: 'Jamaica',
    CY: 'Cyprus',
    PR: 'Puerto Rico',
    LU: 'Luxembourg',
    MU: 'Mauritius',
    CW: 'Curacao',
    SX: 'Sint Maarten',
    DM: 'Dominica',
    FM: 'Micronesia',
    BH: 'Bahrain',
    AD: 'Andorra',
    MP: 'Northern Mariana Islands',
    PW: 'Palau',
    SC: 'Seychelles',
    IO: 'British Indian Ocean Territory',
    BB: 'Barbados',
    VC: 'Saint Vincent and the Grenadines',
    LC: 'Saint Lucia',
    GD: 'Grenada',
    MT: 'Malta',
    MV: 'Maldives',
    KY: 'Cayman Islands',
    MS: 'Montserrat',
    BL: 'Saint Barthelemy',
    NU: 'Niue',
    PM: 'Saint Pierre and Miquelon',
    CK: 'Cook Islands',
    WF: 'Wallis and Futuna',
    AS: 'American Samoa',
    MH: 'Marshall Islands',
    AW: 'Aruba',
    LI: 'Liechtenstein',
    SH: 'Saint Helena',
    JE: 'Jersey',
    AI: 'Anguilla',
    MF: 'Saint Martin',
    GG: 'Guernsey',
    SM: 'San Marino',
    BM: 'Bermuda',
    TV: 'Tuvalu',
    NR: 'Nauru',
    GI: 'Gibraltar',
    PN: 'Pitcairn',
    MC: 'Monaco',
    VA: 'Vatican',
    IM: 'Isle of Man',
    GU: 'Guam',
    SG: 'Singapore',
    TK: 'Tokelau',
    XK: 'Kosovo',
    RE: 'RÃ©union',
    MO: 'Macao',
    MQ: 'Martinique',
    AX: 'Ã…land Islands',
    BQ: 'Caribbean Netherlands',
    AQ: 'Antarctica',
    BV: 'Bouvet Island',
    CC: 'Cocos (Keeling) Islands',
    CX: 'Christmas Island',
    HM: 'Heard Island and McDonald Islands',
    NF: 'Norfolk Island',
    SJ: 'Svalbard and Jan Mayen',
    UM: 'United States Minor Outlying Islands',
    YT: 'Mayotte',
}

export const languageCodeToName: Record<string, string> = {
    // Base ones came from https://en.wikipedia.org/wiki/List_of_ISO_639_language_codes
    // Code used to generate the list: Object.fromEntries([...window.Table[1].children[1].children].map(row => [row.children[1].textContent, row.children[0].textContent]))
    ab: 'Abkhazian',
    aa: 'Afar',
    af: 'Afrikaans',
    ak: 'Akan',
    sq: 'Albanian',
    am: 'Amharic',
    ar: 'Arabic',
    an: 'Aragonese',
    hy: 'Armenian',
    as: 'Assamese',
    av: 'Avaric',
    ae: 'Avestan',
    ay: 'Aymara',
    az: 'Azerbaijani',
    bm: 'Bambara',
    ba: 'Bashkir',
    eu: 'Basque',
    be: 'Belarusian',
    bn: 'Bengali',
    bi: 'Bislama',
    bs: 'Bosnian',
    br: 'Breton',
    bg: 'Bulgarian',
    my: 'Burmese',
    ca: 'Catalan',
    ch: 'Chamorro',
    ce: 'Chechen',
    ny: 'Chichewa',
    zh: 'Chinese',
    cu: 'Church Slavonic',
    cv: 'Chuvash',
    kw: 'Cornish',
    co: 'Corsican',
    cr: 'Cree',
    hr: 'Croatian',
    cs: 'Czech',
    da: 'Danish',
    dv: 'Divehi',
    nl: 'Dutch',
    dz: 'Dzongkha',
    en: 'English',
    eo: 'Esperanto',
    et: 'Estonian',
    ee: 'Ewe',
    fo: 'Faroese',
    fj: 'Fijian',
    fi: 'Finnish',
    fr: 'French',
    fy: 'Western Frisian',
    ff: 'Fulah',
    gd: 'Gaelic',
    gl: 'Galician',
    lg: 'Ganda',
    ka: 'Georgian',
    de: 'German',
    el: 'Greek',
    kl: 'Kalaallisut',
    gn: 'Guarani',
    gu: 'Gujarati',
    ht: 'Haitian',
    ha: 'Hausa',
    he: 'Hebrew',
    hz: 'Herero',
    hi: 'Hindi',
    ho: 'Hiri Motu',
    hu: 'Hungarian',
    is: 'Icelandic',
    io: 'Ido',
    ig: 'Igbo',
    id: 'Indonesian',
    ia: 'Interlingua',
    ie: 'Interlingue',
    iu: 'Inuktitut',
    ik: 'Inupiaq',
    ga: 'Irish',
    it: 'Italian',
    ja: 'Japanese',
    jv: 'Javanese',
    kn: 'Kannada',
    kr: 'Kanuri',
    ks: 'Kashmiri',
    kk: 'Kazakh',
    km: 'Central Khmer',
    ki: 'Kikuyu',
    rw: 'Kinyarwanda',
    ky: 'Kirghiz',
    kv: 'Komi',
    kg: 'Kongo',
    ko: 'Korean',
    kj: 'Kuanyama',
    ku: 'Kurdish',
    lo: 'Lao',
    la: 'Latin',
    lv: 'Latvian',
    li: 'Limburgan',
    ln: 'Lingala',
    lt: 'Lithuanian',
    lu: 'Luba-Katanga',
    lb: 'Luxembourgish',
    mk: 'Macedonian',
    mg: 'Malagasy',
    ms: 'Malay',
    ml: 'Malayalam',
    mt: 'Maltese',
    gv: 'Manx',
    mi: 'Maori',
    mr: 'Marathi',
    mh: 'Marshallese',
    mn: 'Mongolian',
    na: 'Nauru',
    nv: 'Navajo',
    nd: 'North Ndebele',
    nr: 'South Ndebele',
    ng: 'Ndonga',
    ne: 'Nepali',
    no: 'Norwegian',
    nb: 'Norwegian BokmÃ¥l',
    nn: 'Norwegian Nynorsk',
    oc: 'Occitan',
    oj: 'Ojibwa',
    or: 'Oriya',
    om: 'Oromo',
    os: 'Ossetian',
    pi: 'Pali',
    ps: 'Pashto',
    fa: 'Persian',
    pl: 'Polish',
    pt: 'Portuguese',
    pa: 'Punjabi',
    qu: 'Quechua',
    ro: 'Romanian',
    rm: 'Romansh',
    rn: 'Rundi',
    ru: 'Russian',
    se: 'Northern Sami',
    sm: 'Samoan',
    sg: 'Sango',
    sa: 'Sanskrit',
    sc: 'Sardinian',
    sr: 'Serbian',
    sn: 'Shona',
    sd: 'Sindhi',
    si: 'Sinhala',
    sk: 'Slovak',
    sl: 'Slovenian',
    so: 'Somali',
    st: 'Southern Sotho',
    es: 'Spanish',
    su: 'Sundanese',
    sw: 'Swahili',
    ss: 'Swati',
    sv: 'Swedish',
    tl: 'Tagalog',
    ty: 'Tahitian',
    tg: 'Tajik',
    ta: 'Tamil',
    tt: 'Tatar',
    te: 'Telugu',
    th: 'Thai',
    bo: 'Tibetan',
    ti: 'Tigrinya',
    to: 'Tonga',
    ts: 'Tsonga',
    tn: 'Tswana',
    tr: 'Turkish',
    tk: 'Turkmen',
    tw: 'Twi',
    ug: 'Uighur',
    uk: 'Ukrainian',
    ur: 'Urdu',
    uz: 'Uzbek',
    ve: 'Venda',
    vi: 'Vietnamese',
    vo: 'VolapÃ¼k',
    wa: 'Walloon',
    cy: 'Welsh',
    wo: 'Wolof',
    xh: 'Xhosa',
    ii: 'Sichuan Yi',
    yi: 'Yiddish',
    yo: 'Yoruba',
    za: 'Zhuang',
    zu: 'Zulu',

    // Some browsers use one-long or three-long codes so we're adding here as fallback
    h: 'Croatian',
    chr: 'Cherokee',
    cmn: 'Chinese Mandarin',
    fil: 'Filipino',
    nÃ£o: 'Norwegian',
    yue: 'Chinese Cantonese',
}

// This is only used as a fallback for some languages that don't usually
// come in the locale-country format (such as nl-NL usually being presented simply as nl)
// We'll fill this as we see fit based on the values seen in the wild
const languageCodeToCountryCode: Record<string, string> = {
    nl: 'NL',
}
