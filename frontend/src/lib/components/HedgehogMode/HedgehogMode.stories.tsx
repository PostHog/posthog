import { Meta, StoryFn } from '@storybook/react'

import { HedgehogActorAccessoryOptions, HedgehogActorColorOptions } from '@posthog/hedgehog-mode'

import { ProfilePicture } from 'lib/lemon-ui/ProfilePicture'

import { MinimalHedgehogConfig } from '~/types'

import { HedgehogModeStatic } from './HedgehogModeStatic'

const meta: Meta<typeof HedgehogModeStatic> = {
    title: 'Components/HedgehogMode',
    component: HedgehogModeStatic,
    tags: ['autodocs'],
}
export default meta

// NOTE: 100% generated by ChatGPT for fun!
function mulberry32(seed: number) {
    return function () {
        let t = (seed += 0x6d2b79f5)
        t = Math.imul(t ^ (t >>> 15), t | 1)
        t ^= t + Math.imul(t ^ (t >>> 7), t | 61)
        return ((t ^ (t >>> 14)) >>> 0) / 4294967296
    }
}

function deterministicShuffle<T>(array: T[], seed: number): T[] {
    const rng = mulberry32(seed)
    const arr = array.slice() // copy to avoid mutating original
    for (let i = arr.length - 1; i > 0; i--) {
        const j = Math.floor(rng() * (i + 1))
        ;[arr[i], arr[j]] = [arr[j], arr[i]]
    }
    return arr
}

// Generate all combinations of accessories, colors, and skins
let allCombinations = Object.values(HedgehogActorAccessoryOptions).flatMap((accessory) =>
    Object.values(HedgehogActorColorOptions).map(
        (color): MinimalHedgehogConfig => ({
            accessories: [accessory],
            color,
            skin: 'default',
            use_as_profile: true,
        })
    )
)

// Deterministically shuffle the array
allCombinations = deterministicShuffle(allCombinations, 42)

export const StaticHedgehog: StoryFn = () => {
    return (
        <div className="flex flex-wrap gap-2 w-[100rem]">
            {allCombinations.map((x, i) => (
                <HedgehogModeStatic key={i} config={x} />
            ))}
        </div>
    )
}

export const ProfilePictureHog: StoryFn = () => {
    return (
        <div className="flex flex-wrap gap-2 w-[100rem]">
            {allCombinations.map((x, i) => (
                <ProfilePicture key={i} user={{ hedgehog_config: x }} />
            ))}
        </div>
    )
}
