.LemonSegmentedButton {
    position: relative;
    flex-shrink: 0;
    width: fit-content;
    background: var(--bg-light);
    border: 1px solid var(--border);
    border-radius: var(--radius);

    > ul {
        z-index: 1; // Place above slider
        display: flex;
        align-items: stretch;
        list-style: none;
    }

    &.LemonSegmentedButton--full-width {
        width: 100%;
    }
}

.LemonSegmentedButton__slider {
    // This is a real element and not ::after to avoid initial transition from 0 width
    position: absolute;
    top: -1px; // 1px of border
    left: -1px; // 1px of border
    width: calc(var(--lemon-segmented-button-slider-width) + 2px); // 1px of border (left + right)
    height: calc(100% + 2px); // 1px of border (top + bottom)
    background: var(--primary);
    transform: translateX(var(--lemon-segmented-button-slider-offset));

    &.LemonSegmentedButton__slider--first {
        border-top-left-radius: var(--radius);
        border-bottom-left-radius: var(--radius);
    }

    &.LemonSegmentedButton__slider--last {
        border-top-right-radius: var(--radius);
        border-bottom-right-radius: var(--radius);
    }

    .LemonSegmentedButton--transitioning & {
        transition: width 200ms ease, transform 200ms ease, border-radius 200ms ease;
        will-change: width, transform, border-radius;
    }
}

.LemonSegmentedButton__option {
    display: flex;
    flex: 1;

    .LemonButton {
        min-height: calc(var(--lemon-button-height) - 2px);
        border-radius: 0;
        outline: 1px solid transparent;

        // Original transition with outline added
        transition: background-color 200ms ease, color 200ms ease, border 200ms ease, opacity 200ms ease,
            outline 200ms ease;
    }

    &:first-child,
    &:first-child .LemonButton {
        border-top-left-radius: var(--radius);
        border-bottom-left-radius: var(--radius);
    }

    &:last-child,
    &:last-child .LemonButton {
        border-top-right-radius: var(--radius);
        border-bottom-right-radius: var(--radius);
    }

    &:not(:last-child) {
        border-right: 1px solid var(--border);
    }

    &:not(.LemonSegmentedButton__option--disabled, .LemonSegmentedButton__option--selected) {
        &:hover .LemonButton {
            outline-color: var(--primary);
        }

        &:active .LemonButton {
            outline-color: var(--primary-dark);
        }
    }

    &.LemonSegmentedButton__option--selected {
        .LemonButton,
        .LemonButton__icon {
            color: #fff;
        }

        .LemonButton {
            &:hover,
            &:active {
                background: none; // Disable LemonButton's hover styles for the selected option
            }
        }
    }
}
