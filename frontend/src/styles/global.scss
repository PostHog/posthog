/* Only styles that are shared across multiple components (i.e. global) should go here, trying to keep this file
nimble to simplify maintenance. We separate variables and mixins in vars.scss to be able to import those into local
style files without adding already imported styles.

Font weights:
Only 400 (`normal`), 500 (`var(--font-medium)`), 600 (`var(--font-semibold)`), or 700 (`bold`) should be used

*/

// Global components
@import '../../../node_modules/react-toastify/dist/ReactToastify';
@import 'fonts';
@import 'functions';
@import 'mixins';
@import 'utility-legacy';
@import 'utilities';

:root {
    @include root-variables;
}

// Text styles
body b,
body strong {
    // body is specified to increase specificity â€“ otherwise Ant Design's "bolder" takes precedence over "600"
    font-weight: 600;
}

.main-app-content {
    background-color: var(--bg-light);
}

// Disable default styling for ul
ul {
    margin-bottom: 0;
    list-style: none;
    padding-left: 0;
}

// This may look odd but sets up our utility classes
* {
    border-style: solid;
    border-width: 0;
    border-color: var(--border);
}

.page-title-row {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    min-height: 2.5rem;
    gap: 0.5rem 1rem;
    margin: 1.25rem 0 0.25rem;

    @include screen($md) {
        flex-wrap: nowrap;
    }

    .ant-form-item {
        margin-bottom: 0 !important;
    }

    .posthog-3000 & {
        margin-top: 1rem;
    }
}

.page-title {
    min-width: 0;
    font-size: 28px;
    line-height: 34px;
    margin: 0;
    font-weight: 600;
}

.page-caption {
    @extend .text-sm;
    max-width: 48rem;
    margin-bottom: 1rem;
    &.tabbed {
        margin-bottom: 0.5rem;
    }
}

.page-description {
    font-style: italic;
    color: var(--muted);
}

.page-buttons {
    flex-shrink: 0;
    flex-grow: 1;
    display: flex;
    align-items: center;
    justify-content: right;
    gap: 0.5rem;
}

.secondary {
    font-size: 0.9em;
    letter-spacing: 1px;
    color: var(--primary-alt);
    font-weight: var(--font-medium);
    text-transform: uppercase;
    border: 0;
    background: none;
}

.card-secondary {
    font-size: 11px;
    color: var(--muted);
    letter-spacing: 0.5px;
    text-transform: uppercase;
    font-weight: 600;
}

mark {
    background-color: var(--mark) !important;
    border-radius: var(--radius);
}

// Supplement text, such as email under user name
.supplement {
    text-overflow: ellipsis;
    overflow: hidden;
    color: var(--muted-alt);
    font-size: 0.8125rem;

    &--danger {
        color: var(--danger);
        font-weight: 600;
    }
}

hr {
    border: 1px solid var(--border);
}

// Vendor-specific adjustments

input::-ms-clear {
    display: none; // Hide IE/Edge's clear button that can mess input sizing up
}

// Highlight background blink

@keyframes highlight {
    0% {
        background-color: var(--mark);
    }

    100% {
        background-color: initial;
    }
}

// Generic 360 spin

@keyframes spin {
    0% {
        transform: rotateZ(0deg);
    }

    100% {
        transform: rotateZ(360deg);
    }
}

// Toasts

.Toastify__toast {
    align-items: center;
    opacity: 1 !important;
    padding: 0.75rem;
    margin-bottom: 0.5rem;
    border-radius: var(--radius);
    font-family: var(--font-sans);
    border: 1px solid var(--border);
    box-shadow: var(--shadow-elevation);
    font-size: 1rem;
    cursor: unset;
}

.Toastify__toast-container {
    padding: 0;
}

.Toastify__toast-body {
    @extend .text-sm;
    @extend .text-default;
    font-weight: 500;
    padding: 0;

    b,
    strong {
        font-weight: 700;
    }

    button {
        margin: 0 0.75rem;
    }
}

.Toastify__toast-icon {
    color: var(--muted-alt);
    width: 1.5rem;
    height: 1.5rem;
    margin-right: 0.75rem;
    font-size: 1.5rem;

    .Toastify__toast--success & {
        color: var(--toastify-color-success);
    }

    .Toastify__toast--warning & {
        color: var(--toastify-color-warning);
    }

    .Toastify__toast--error & {
        color: var(--toastify-color-error);
    }
}

.Toastify__progress-bar {
    height: var(--radius);
}

// Horizontal scrollability indication

.scrollable {
    &::before,
    &::after {
        z-index: 1;
        transition: opacity 200ms ease;
        opacity: 0;
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        pointer-events: none;
    }

    &::before {
        box-shadow: 16px 0 16px -16px rgba(0, 0, 0, 0.25) inset;
    }

    &::after {
        box-shadow: -16px 0 16px -16px rgba(0, 0, 0, 0.25) inset;
    }

    &.scrollable--right::after,
    &.scrollable--left::before {
        opacity: 1;
    }
}

.scrollable__inner {
    width: 100%;
    height: 100%;
    overflow: auto;
}

// Form & input styles

.input-set {
    padding-bottom: 1rem;
    color: var(--default);

    label {
        font-weight: bold;
        @extend .text-sm;
    }

    .caption {
        color: var(--muted);
        @extend .text-sm;
    }

    .ant-radio-button-wrapper {
        // To properly handle label styles above
        font-weight: normal !important;
        line-height: 30px !important;
    }

    &.errored {
        .caption {
            color: var(--danger);
        }

        input[type='password'],
        input[type='text'] {
            border-color: var(--danger) !important;
        }
    }
}

.error-on-blur {
    &.errored:not(:focus) {
        border-color: var(--danger) !important;
    }
}

// Button styles

.btn-close {
    color: var(--muted);
}

.info-indicator {
    color: var(--primary-alt) !important;
    cursor: pointer;
    margin-left: 4px;

    &.left {
        margin-left: 0;
        margin-right: 4px;
    }
}

.title-icon {
    margin-left: 0.375rem;
    font-size: 1rem;
    line-height: 0;
}

.btn-lg-2x {
    font-size: 1.5rem !important;
    line-height: 1 !important;

    svg {
        width: 1.5rem !important;
        height: 1.5rem !important;
    }
}

// Graph series glyph

.graph-series-glyph {
    border-radius: 50%;
    border: 2px solid var(--default);
    font-weight: bold;
    font-size: 12px;
    height: 22px;
    width: 22px;
    display: flex;
    align-items: center;
    justify-content: center;
    pointer-events: none;
    flex-shrink: 0;

    // variants
    &.funnel-step-glyph {
        border-color: var(--border);
        background-color: white;
        color: var(--primary-alt);
        height: 23px;
        width: 23px;
        font-size: unset;
    }
}

// Bottom notice (DEBUG=1 mode)

#bottom-notice {
    z-index: var(--z-bottom-notice);
    display: flex !important;
    flex-direction: row;
    position: fixed;
    width: 100%;
    bottom: 0;
    left: 0;
    background: #000;
    color: #fff;
    font-size: 0.75rem;
    line-height: 1.5rem;

    code {
        color: inherit;
        font-size: inherit;
    }

    &.warning div {
        height: auto;
        background: var(--danger);
    }

    &.tricolor {
        cursor: pointer;

        div:nth-child(1) {
            background: var(--primary);
        }

        div:nth-child(2) {
            background: var(--danger);
        }

        div:nth-child(3) {
            background: var(--warning);
        }

        span {
            cursor: text;
        }
    }

    div {
        flex-basis: 0;
        flex-grow: 1;
        height: 1.5rem;
        text-align: center;
    }

    span {
        display: none;
    }

    button {
        border: none;
        background: transparent;
        color: inherit;
        width: 1.5rem;
        height: 1.5rem;
        padding: 0;
        font-size: 1rem;
        font-weight: bold;
        cursor: pointer;
    }

    @media screen and (min-width: 750px) {
        font-size: 1rem;
        line-height: 2rem;

        div {
            height: 2rem;
        }

        span {
            display: inline;
        }

        button {
            width: 2rem;
            height: 2rem;
            font-size: 1.25rem;
        }
    }
}

// Overlays

.overlay__parent {
    position: relative;
}

.overlay__child {
    transition: opacity 0.25s ease;
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;

    .overlay--danger & {
        background: repeating-linear-gradient(
            -45deg,
            rgba(255, 255, 255, 0.5),
            rgba(255, 255, 255, 0.5) 0.75rem,
            var(--danger) 0.5rem,
            var(--danger) 20px
        );
    }
}

// Stateful badges

.stateful-badge {
    padding: 2px 8px;
    border-radius: 2px;
    font-weight: bold;

    &.or {
        background-color: #d2dbff;
        text-align: center;
        max-width: 50px;
    }

    &.or-light-grey {
        font-family: var(--font-sans);
        background-color: var(--mid);
        text-align: center;
        max-width: 50px;
    }

    &.width-locked {
        width: 40px;
        text-align: center;
    }

    &.and {
        background-color: var(--mark);
        color: var(--primary-alt);
    }

    &.pos-center-end {
        position: absolute;
        top: 50%;
        left: -30px;
    }
}

// Tags

.simple-tag {
    border-radius: var(--radius);
    padding: 2px 6px;

    &.tag-light-blue {
        background-color: var(--primary-highlight);
    }
}

.lemonade-tag {
    color: var(--primary-alt) !important;
    background-color: var(--mid) !important;
    border-color: var(--border) !important;
}

// Main app/body styles

.fullscreen-scroll {
    overflow-y: auto;
}

.main-app-content {
    position: relative; // So that scene-level <SpinnerOverlay /> is positioned correctly.
    min-width: 0;
    width: 100%;
    padding: 0 1rem 1rem;
    flex: 1;

    @include screen($sm) {
        padding: 0 1rem 2rem;
    }

    @include screen($lg) {
        padding: 0 2rem 4rem;
    }

    &.main-app-content--plain {
        padding: 0;
    }

    &.main-app-content--container {
        max-width: 72rem;
        align-self: center;
    }
}

// AntD overrrides, placed inside `body` to increase specifity (nicely avoiding the need for !important)
body {
    // Until we have 3000 rolled out we fallback to standard colors
    --text-3000: var(--default);
    --muted-3000: var(--muted);
    --trace-3000: var(--trace-3000-light);
    --primary-3000: var(--primary);
    --primary-3000-hover: var(--primary-light);
    --secondary-3000: var(--secondary);
    --secondary-3000-hover: var(--secondary-light);
    --accent-3000: var(--side);
    --bg-3000: var(--bg-light);
    --border-3000: var(--border);
    --border-bold-3000: var(--border);
    --glass-bg-3000: var(--bg-light);
    --glass-border-3000: var(--border);
    --bg-light: #fff;
    --link: var(--primary);

    &.posthog-3000[theme='light'] {
        --text-3000: var(--text-3000-light);
        --muted-3000: var(--muted-3000-light);
        --trace-3000: var(--trace-3000-light);
        --primary-3000: var(--primary-3000-light);
        --primary-3000-hover: var(--primary-3000-hover-light);
        --secondary-3000: var(--secondary-3000-light);
        --secondary-3000-hover: var(--secondary-3000-hover-light);
        --accent-3000: var(--accent-3000-light);
        --bg-3000: var(--bg-3000-light);
        --border-3000: var(--border-3000-light);
        --border-bold-3000: var(--border-bold-3000-light);
        --glass-bg-3000: var(--glass-bg-3000-light);
        --glass-border-3000: var(--glass-border-3000-light);
        --bg-light: #fff;
        --link: var(--link-3000-light);
    }

    &.posthog-3000[theme='dark'] {
        --text-3000: var(--text-3000-dark);
        --muted-3000: var(--muted-3000-dark);
        --trace-3000: var(--trace-3000-dark);
        --primary-3000: var(--primary-3000-dark);
        --primary-3000-hover: var(--primary-3000-hover-dark);
        --secondary-3000: var(--secondary-3000-dark);
        --secondary-3000-hover: var(--secondary-3000-hover-dark);
        --accent-3000: var(--accent-3000-dark);
        --bg-3000: var(--bg-3000-dark);
        --border-3000: var(--border-3000-dark);
        --border-bold-3000: var(--border-bold-3000-dark);
        --glass-bg-3000: var(--glass-bg-3000-dark);
        --glass-border-3000: var(--glass-border-3000-dark);
        --bg-light: var(--accent-3000);
        --brand-key: #fff; // In dark mode the black in PostHog's logo is replaced with white for proper contrast
        --link: var(--link-3000-dark);
    }

    &.posthog-3000 {
        --default: var(--text-3000);
        --muted: var(--muted-3000);
        --muted-alt: var(--muted-3000);
        --primary-alt: var(--text-3000);
        --border: var(--border-3000);
        --border-bold: var(--border-bold-3000);
        --mid: var(--bg-3000);
        --side: var(--bg-3000);
        background: var(--bg-3000);
        user-select: none; // Make the app feel less page-like and more app-like - apps scarcely allow text selection

        * > {
            ::-webkit-scrollbar {
                width: 0.5rem;
                height: 0.5rem;
            }
            ::-webkit-scrollbar-track {
                background: var(--accent-3000);
            }
            ::-webkit-scrollbar-thumb {
                border-radius: 0.25rem;
                background: var(--trace-3000);
                &:hover {
                    background: var(--muted-3000);
                }
            }
        }
    }

    h1,
    h2,
    h3,
    h4 {
        color: var(--default);
    }

    h5 {
        font-size: 0.6875rem;
        font-weight: 600;
        color: var(--muted-alt);
        text-transform: uppercase;
        letter-spacing: 0.5px;
        margin-bottom: 0.25rem;
        line-height: 1.5rem;
    }

    pre,
    code,
    kbd,
    samp {
        font-family: var(--font-mono);
    }

    a {
        color: var(--link);
    }

    // AntD uses its own border color for the bottom of tab lists, but we want to use `var(--border)`
    .ant-tabs-top,
    .ant-tabs-bottom {
        &,
        & > div {
            & > .ant-tabs-nav::before {
                border-bottom-color: var(--border);
            }
        }
    }

    .ant-dropdown {
        border-radius: var(--radius);
        color: var(--default);
    }

    .ant-dropdown-menu {
        border-radius: var(--radius);
    }

    .ant-modal-content {
        box-shadow: var(--shadow-elevation);
    }

    .ant-modal-mask {
        z-index: var(--z-ant-modal-mask);
    }
    .ant-modal-wrap {
        z-index: var(--z-ant-modal-wrap);
    }
    .ant-message {
        z-index: var(--z-ant-message);
    }
    .ant-select-dropdown {
        z-index: var(--z-ant-select-dropdown);
    }

    .ant-picker-dropdown {
        z-index: var(--z-ant-select-dropdown);
    }

    .ant-popconfirm {
        z-index: var(--z-bottom-notice);
    }

    .ant-card-bordered {
        border-color: var(--border);
    }

    .ant-card-body > :first-child {
        margin-top: 0;
    }

    .ant-form-item-label {
        > label {
            font-weight: 600;

            .ant-form-item-optional {
                font-weight: 400;
                color: var(--muted);
            }
        }
    }

    .ant-form-item {
        margin-bottom: 1rem;

        &:last-child {
            margin-bottom: 0;
        }
    }

    // Tooltip styles
    .ant-tooltip-inner {
        background-color: var(--bg-charcoal);
    }

    .ant-tooltip {
        max-width: 350px;
    }

    .ant-table-thead > tr > th,
    .ant-table-small .ant-table-thead > tr > th {
        background: var(--mid);
    }
    .ant-table-tbody > tr > td {
        border-bottom-color: var(--border);
    }

    .ant-table-tbody > tr.ant-table-placeholder:hover > td {
        background: inherit;
    }
}

.storybook-test-runner {
    // Only use this class in visual regression tests
    *,
    *::before,
    *::after {
        transition-duration: 0ms !important;
        animation-fill-mode: forwards !important;
        animation-duration: 0ms !important;
        animation-iteration-count: 1 !important;
    }
    // Hide some parts of the UI that were causing flakiness
    ::-webkit-scrollbar, // Scrollbar in WebKit/Blink browsers 
    .LemonTabs__bar::after, // Active tab slider
    .scrollable::after, // Scrollability indicators
    .scrollable::before {
        display: none;
    }
}

.posthog-3000 {
    .ant-radio-button-wrapper {
        background: var(--secondary-3000);
        border-color: transparent;
    }
}
