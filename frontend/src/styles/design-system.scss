// Primitive colors
// We shouldn't use these directly in our app, instead we should use the semantic colors below
// Note: We use SCSS -> CSS variables, so we can manipulate these variables later if needed.
// //////////////////////////////////////////////////////////
// $primitive-white: white;
// $primitive-black: black;
// $primitive-transparent: hsl(0deg 0% 0% / 0%);
// $primitive-3000: (
//     25: hsl(75deg 14% 96.5%),
//     50: hsl(75deg 14% 95%),
//     100: hsl(70deg 16% 93%),
//     /* 100 mapped (From Figma): light background */ 150: hsl(77deg 13% 89%),
//     /* 150 mapped (From Figma): medium accent */ 200: hsl(78deg 13% 85%),
//     250: hsl(67deg 8% 80%),
//     /* 250 mapped (From Figma): light border */ 300: hsl(72deg 8% 76%),
//     350: hsl(70deg 8% 71%),
//     400: hsl(69deg 8% 65%),
//     450: hsl(67deg 8% 60%),
//     500: hsl(67deg 8% 55%),
// );
// $primitive-neutral: (
//     50: hsl(0deg 0% 95%),
//     100: hsl(0deg 0% 90%),
//     150: hsl(0deg 0% 85%),
//     200: hsl(0deg 0% 80%),
//     250: hsl(0deg 0% 75%),
//     300: hsl(0deg 0% 70%),
//     350: hsl(0deg 0% 65%),
//     400: hsl(0deg 0% 60%),
//     450: hsl(0deg 0% 55%),
//     500: hsl(0deg 0% 50%),
//     550: hsl(0deg 0% 45%),
//     600: hsl(0deg 0% 40%),
//     650: hsl(0deg 0% 35%),
//     700: hsl(0deg 0% 30%),
//     750: hsl(0deg 0% 25%),
//     800: hsl(0deg 0% 20%),
//     850: hsl(0deg 0% 15%),
//     900: hsl(0deg 0% 10%),
//     950: hsl(0deg 0% 5%),
// );
// $primitive-neutral-cool: (
//     50: hsl(240deg 8% 95%),
//     75: hsl(236deg 8% 92.5%),
//     100: hsl(232deg 8% 90%),
//     150: hsl(232.5deg 8% 85%),
//     200: hsl(233deg 8% 80%),
//     250: hsl(231.5deg 8% 75%),
//     300: hsl(230deg 8% 70%),
//     350: hsl(230.5deg 8% 65%),
//     400: hsl(231deg 8% 60%),
//     450: hsl(231deg 8% 55%),
//     500: hsl(231deg 8% 50%),
//     550: hsl(230.5deg 8% 45%),
//     600: hsl(230deg 8% 40%),
//     650: hsl(230deg 8% 35%),
//     700: hsl(230deg 8% 30%),
//     750: hsl(235deg 8% 25%),
//     800: hsl(230deg 8% 20%),
//     850: hsl(235deg 8% 15%),
//     900: hsl(240deg 8% 10%),
//     950: hsl(240deg 8% 8%),
// );

// :root {
//     // Primitive colors (mapped to css custom properties)
//     // //////////////////////////////////////////////////////////
//     --primitive-transparent: #{$primitive-transparent};
//     --primitive-white: #{$primitive-white};
//     --primitive-black: #{$primitive-black};

//     // PostHog brand colors
//     // Split into hue, saturation, lightness to make it easier to change the brand colors
//     // //////////////////////////////////////////////////////////
//     --primitive-posthog-brand-orange-hue: 19;
//     --primitive-posthog-brand-orange-saturation: 100%;
//     --primitive-posthog-brand-orange-lightness: 48%;
//     --primitive-posthog-brand-blue-hue: 228;
//     --primitive-posthog-brand-blue-saturation: 100%;
//     --primitive-posthog-brand-blue-lightness: 56%;
//     --primitive-posthog-brand-yellow-hue: 43;
//     --primitive-posthog-brand-yellow-saturation: 94%;
//     --primitive-posthog-brand-yellow-lightness: 57%;

//     // Generic brand color assignments
//     // Change these to change the brand colors
//     // //////////////////////////////////////////////////////////
//     --brand-primary-hue: var(--primitive-posthog-brand-orange-hue);
//     --brand-primary-saturation: var(--primitive-posthog-brand-orange-saturation);
//     --brand-primary-lightness: var(--primitive-posthog-brand-orange-lightness);
//     --brand-secondary-hue: var(--primitive-posthog-brand-blue-hue);
//     --brand-secondary-saturation: var(--primitive-posthog-brand-blue-saturation);
//     --brand-secondary-lightness: var(--primitive-posthog-brand-blue-lightness);

//     // Accent colors (accents can be changed to change the brand colors)
//     // Used for interactive elements and highlights, inputs, toggles, charts, etc.
//     // //////////////////////////////////////////////////////////
//     --accent-primary: hsl(var(--brand-primary-hue), var(--brand-primary-saturation), var(--brand-primary-lightness));
//     --accent-primary-hover: hsl(
//         var(--brand-primary-hue),
//         var(--brand-primary-saturation),
//         calc(var(--brand-primary-lightness) + 10%)
//     );
//     --accent-primary-active: hsl(
//         var(--brand-primary-hue),
//         var(--brand-primary-saturation),
//         calc(var(--brand-primary-lightness) + 15%)
//     );
//     --accent-primary-highlight: hsla(
//         var(--brand-primary-hue),
//         var(--brand-primary-saturation),
//         var(--brand-primary-lightness),
//         10%
//     );
//     --accent-secondary: hsl(
//         var(--brand-secondary-hue),
//         var(--brand-secondary-saturation),
//         var(--brand-secondary-lightness)
//     );
//     --accent-secondary-hover: hsl(
//         var(--brand-secondary-hue),
//         var(--brand-secondary-saturation),
//         calc(var(--brand-secondary-lightness) + 10%)
//     );
//     --accent-secondary-active: hsl(
//         var(--brand-secondary-hue),
//         var(--brand-secondary-saturation),
//         calc(var(--brand-secondary-lightness) + 15%)
//     );
//     --accent-secondary-highlight: hsla(
//         var(--brand-secondary-hue),
//         var(--brand-secondary-saturation),
//         var(--brand-secondary-lightness),
//         10%
//     );

//     // Backgrounds
//     // Behind surfaces, large areas: app scenes, etc.
//     // //////////////////////////////////////////////////////////
//     --bg-primary: var(--primitive-3000-50); /* Most prominent/used background (replaces --bg-3000) */

//     // Surfaces
//     // Above backgrounds, smaller areas: Cards, Tables, stuff that stands out
//     // //////////////////////////////////////////////////////////
//     --surface-primary: var(--primitive-white); /* Most prominent surface (Cards, tables, etc.) */
//     --surface-secondary: var(--primitive-3000-100); /* Second most prominent surface (Toolbars) */
//     --surface-tertiary: var(--primitive-3000-150); /* Most prominent surface (Cards, tables, etc.) */

//     // Content (text, icons)
//     // //////////////////////////////////////////////////////////
//     --text-primary: var(--primitive-neutral-950); /* Text on primary surface/background */

//     // Fills
//     // Small colourful areas: banners, pills, buttons, etc.
//     // //////////////////////////////////////////////////////////
//     --bg-fill-primary: var(--primitive-white);
//     --bg-fill-secondary: var(--primitive-3000-25);
//     --bg-fill-tertiary: var(--primitive-3000-50);
//     --bg-fill-info-secondary: var(--primitive-blue-100); /* promonent bg for info blocks */
//     --bg-fill-info-tertiary: var(--primitive-blue-50); /* subtle bg for info blocks */
//     --bg-fill-warning-secondary: var(--primitive-orange-100); /* prominent bg for warning blocks */
//     --bg-fill-warning-tertiary: var(--primitive-orange-50); /* subtle bg for warning blocks */
//     --bg-fill-error-secondary: var(--primitive-red-100); /* prominent bg for error blocks */
//     --bg-fill-error-tertiary: var(--primitive-red-50); /* subtle bg for error blocks */
//     --bg-fill-success-secondary: var(--primitive-green-100); /* promonent bg for success blocks */
//     --bg-fill-success-tertiary: var(--primitive-green-50); /* subtle bg for success blocks */

//     // Content on fills
//     // Texts which are on colourful fills, ensures contrast
//     // //////////////////////////////////////////////////////////
//     --text-warning-on-bg-fill: var(--primitive-orange-800); /* On-fill text for warning */
//     --text-error-on-bg-fill: var(--primitive-red-800); /* On-fill text for error */
//     --text-success-on-bg-fill: var(--primitive-green-800); /* On-fill text for success */

//     // Borders
//     // Borders for surfaces/fills (TODO: perhaps we need to do border-fill-primary, border-fill-warning, etc.)
//     // //////////////////////////////////////////////////////////
//     --border-primary: var(--primitive-3000-200);
//     --border-info: var(--primitive-blue-400);
//     --border-warning: var(--primitive-orange-400); /* Border for warning */
//     --border-error: var(--primitive-red-400); /* Border for error */
//     --border-success: var(--primitive-green-400); /* Border for success */

//     @each $name, $value in $primitive-3000 {
//         --primitive-3000-#{$name}: #{$value};
//     }

//     @each $name, $value in $primitive-neutral {
//         --primitive-neutral-#{$name}: #{$value};
//     }

//     @each $name, $value in $primitive-neutral-cool {
//         --primitive-neutral-cool-#{$name}: #{$value};
//     }

//     @each $name, $value in $primitive-stone {
//         --primitive-stone-#{$name}: #{$value};
//     }

//     @each $name, $value in $primitive-red {
//         --primitive-red-#{$name}: #{$value};
//     }

//     @each $name, $value in $primitive-orange {
//         --primitive-orange-#{$name}: #{$value};
//     }

//     @each $name, $value in $primitive-amber {
//         --primitive-amber-#{$name}: #{$value};
//     }

//     @each $name, $value in $primitive-yellow {
//         --primitive-yellow-#{$name}: #{$value};
//     }

//     @each $name, $value in $primitive-lime {
//         --primitive-lime-#{$name}: #{$value};
//     }

//     @each $name, $value in $primitive-green {
//         --primitive-green-#{$name}: #{$value};
//     }

//     @each $name, $value in $primitive-emerald {
//         --primitive-emerald-#{$name}: #{$value};
//     }

//     @each $name, $value in $primitive-teal {
//         --primitive-teal-#{$name}: #{$value};
//     }

//     @each $name, $value in $primitive-cyan {
//         --primitive-cyan-#{$name}: #{$value};
//     }

//     @each $name, $value in $primitive-sky {
//         --primitive-sky-#{$name}: #{$value};
//     }

//     @each $name, $value in $primitive-blue {
//         --primitive-blue-#{$name}: #{$value};
//     }

//     @each $name, $value in $primitive-indigo {
//         --primitive-indigo-#{$name}: #{$value};
//     }

//     @each $name, $value in $primitive-violet {
//         --primitive-violet-#{$name}: #{$value};
//     }

//     @each $name, $value in $primitive-purple {
//         --primitive-purple-#{$name}: #{$value};
//     }

//     @each $name, $value in $primitive-fuchsia {
//         --primitive-fuchsia-#{$name}: #{$value};
//     }

//     @each $name, $value in $primitive-pink {
//         --primitive-pink-#{$name}: #{$value};
//     }

//     @each $name, $value in $primitive-rose {
//         --primitive-rose-#{$name}: #{$value};
//     }
// }

// [theme='dark'] {
// --brand-primary-hue: var(--primitive-posthog-brand-yellow-hue);
// --brand-primary-saturation: var(--primitive-posthog-brand-yellow-saturation);
// --brand-primary-lightness: var(--primitive-posthog-brand-yellow-lightness);

// // Accent colors
// // //////////////////////////////////////////////////////////
// --accent-primary: hsl(var(--brand-primary-hue), var(--brand-primary-saturation), var(--brand-primary-lightness));
// --accent-primary-hover: hsl(
//     var(--brand-primary-hue),
//     var(--brand-primary-saturation),
//     calc(var(--brand-primary-lightness) + 10%)
// );
// --accent-primary-active: hsl(
//     var(--brand-primary-hue),
//     var(--brand-primary-saturation),
//     calc(var(--brand-primary-lightness) + 15%)
// );
// --accent-primary-highlight: hsla(
//     var(--brand-primary-hue),
//     var(--brand-primary-saturation),
//     var(--brand-primary-lightness),
//     10%
// );
// --accent-secondary: hsl(
//     var(--brand-secondary-hue),
//     var(--brand-secondary-saturation),
//     var(--brand-secondary-lightness)
// );
// --accent-secondary-hover: hsl(
//     var(--brand-secondary-hue),
//     var(--brand-secondary-saturation),
//     calc(var(--brand-secondary-lightness) + 10%)
// );
// --accent-secondary-active: hsl(
//     var(--brand-secondary-hue),
//     var(--brand-secondary-saturation),
//     calc(var(--brand-secondary-lightness) + 15%)
// );
// --accent-secondary-highlight: hsla(
//     var(--brand-secondary-hue),
//     var(--brand-secondary-saturation),
//     var(--brand-secondary-lightness),
//     10%
// );

// // Backgrounds
// // //////////////////////////////////////////////////////////
// --bg-primary: var(--primitive-neutral-cool-950);

// // Surfaces
// // //////////////////////////////////////////////////////////
// --surface-primary: var(--primitive-neutral-cool-850);
// --surface-secondary: var(--primitive-neutral-cool-900);
// --surface-tertiary: var(--primitive-neutral-cool-950);

// // Fills
// // //////////////////////////////////////////////////////////
// --bg-fill-primary: var(--primitive-neutral-cool-900);
// --bg-fill-secondary: var(--primitive-neutral-cool-850);
// --bg-fill-tertiary: var(--primitive-neutral-cool-800);
// --bg-fill-info-secondary: var(--primitive-blue-950);
// --bg-fill-info-tertiary: #{rgba(map.get($primitive-blue, 950), 0.5)};
// --bg-fill-warning-secondary: var(--primitive-yellow-950);
// TODO: --bg-fill-warning-tertiary: #{rgba(map.get($primitive-yellow, 950), 0.5)};
// --bg-fill-error-secondary: var(--primitive-red-950);
// TODO: --bg-fill-error-tertiary: #{rgba(map.get($primitive-red, 950), 0.5)};
// --bg-fill-success-secondary: var(--primitive-green-950);
// TODO: --bg-fill-success-tertiary: #{rgba(map.get($primitive-green, 950), 0.5)};

// // Contents
// // //////////////////////////////////////////////////////////
// --text-primary: var(--primitive-neutral-100);

// // Content on fills
// // //////////////////////////////////////////////////////////
// --text-warning-on-bg-fill: var(--primitive-orange-50);
// --text-error-on-bg-fill: var(--primitive-red-50);
// --text-success-on-bg-fill: var(--primitive-green-50);

// // Borders
// // //////////////////////////////////////////////////////////
// --border-primary: var(--primitive-neutral-cool-800);
// --border-info: var(--primitive-blue-900);
// --border-warning: var(--primitive-orange-900);
// --border-error: var(--primitive-red-900);
// --border-success: var(--primitive-green-900);
// }
