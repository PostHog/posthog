{
    "elements": {
        "href": {
            "description": "Filter on the `href` attribute of the element.",
            "examples": ["https://posthog.com/about"],
            "label": "Target (href)"
        },
        "selector": {
            "description": "Select any element by CSS selector.",
            "examples": ["div > a", "table td:nth-child(2)", ".my-class"],
            "label": "CSS selector"
        },
        "tag_name": {
            "description": "HTML tag name of the element which you want to filter.",
            "examples": ["a", "button", "input"],
            "label": "Tag name"
        },
        "text": {
            "description": "Filter on the inner text of the HTML element.",
            "label": "Text"
        }
    },
    "error_tracking_issue_properties": {
        "$exception_functions": {
            "description": "A function contained in the exception.",
            "label": "Exception function"
        },
        "$exception_messages": {
            "description": "The description of the exception.",
            "label": "Exception message"
        },
        "$exception_sources": {
            "description": "A source file included in the exception.",
            "label": "Exception source"
        },
        "$exception_types": {
            "description": "The type of the exception.",
            "label": "Exception type"
        }
    },
    "error_tracking_issues": {
        "assignee": {
            "description": "The current assignee of an issue.",
            "label": "Issue assignee"
        },
        "issue_description": {
            "description": "The description of an issue.",
            "label": "Issue description"
        },
        "name": {
            "description": "The name of an issue.",
            "label": "Issue name"
        }
    },
    "event_metadata": {
        "distinct_id": {
            "description": "The current distinct ID of the user.",
            "examples": ["16ff262c4301e5-0aa346c03894bc-39667c0e-1aeaa0-16ff262c431767"],
            "label": "Distinct ID"
        },
        "event": {
            "description": "The name of the event.",
            "examples": ["$pageview"],
            "ignored_in_assistant": true,
            "label": "Event",
            "system": true
        },
        "person_id": {
            "description": "The ID of the person, depending on the person properties mode.",
            "examples": ["16ff262c4301e5-0aa346c03894bc-39667c0e-1aeaa0-16ff262c431767"],
            "label": "Person ID"
        },
        "timestamp": {
            "description": "Time the event happened.",
            "examples": ["2023-05-20T15:30:00Z"],
            "ignored_in_assistant": true,
            "label": "Timestamp",
            "system": true
        }
    },
    "event_properties": {
        "$$plugin_metrics": {
            "description": "Performance metrics for a given plugin.",
            "label": "Plugin metric"
        },
        "$active_feature_flags": {
            "description": "Keys of the feature flags that were active while this event was sent.",
            "examples": ["['beta-feature']"],
            "label": "Active feature flags"
        },
        "$ai_base_url": {
            "description": "The base URL of the request made to the LLM API.",
            "examples": ["https://api.openai.com/v1/"],
            "label": "AI base URL (LLM)"
        },
        "$ai_cache_creation_input_tokens": {
            "description": "The number of tokens created in the cache for the input prompt (anthropic only).",
            "examples": [23],
            "label": "AI cache creation input tokens (LLM)"
        },
        "$ai_cache_read_input_tokens": {
            "description": "The number of tokens read from the cache for the input prompt.",
            "examples": [23],
            "label": "AI cache read input tokens (LLM)"
        },
        "$ai_feedback_text": {
            "description": "The text provided by the user for feedback on the LLM trace.",
            "examples": ["\"The response was helpful, but it did not use the provided context.\""],
            "label": "AI Feedback Text (LLM)"
        },
        "$ai_http_status": {
            "description": "The HTTP status code of the request made to the LLM API.",
            "examples": [200, 429],
            "label": "AI HTTP status (LLM)"
        },
        "$ai_input": {
            "description": "The input JSON that was sent to the LLM API.",
            "examples": ["{\"content\": \"Explain quantum computing in simple terms.\", \"role\": \"user\"}"],
            "label": "AI input (LLM)"
        },
        "$ai_input_cost_usd": {
            "description": "The cost in USD of the input tokens sent to the LLM API.",
            "examples": [0.0017],
            "label": "AI input cost USD (LLM)"
        },
        "$ai_input_state": {
            "description": "Input state of the LLM agent.",
            "label": "AI Input State (LLM)"
        },
        "$ai_input_tokens": {
            "description": "The number of tokens in the input prompt that was sent to the LLM API.",
            "examples": [23],
            "label": "AI input tokens (LLM)"
        },
        "$ai_latency": {
            "description": "The latency of the request made to the LLM API, in seconds.",
            "examples": [0.361],
            "label": "AI latency (LLM)"
        },
        "$ai_metric_name": {
            "description": "The name assigned to the metric used to evaluate the LLM trace.",
            "examples": ["rating", "accuracy"],
            "label": "AI Metric Name (LLM)"
        },
        "$ai_metric_value": {
            "description": "The value assigned to the metric used to evaluate the LLM trace.",
            "examples": ["negative", "95"],
            "label": "AI Metric Value (LLM)"
        },
        "$ai_model": {
            "description": "The model used to generate the output from the LLM API.",
            "examples": ["gpt-4o-mini"],
            "label": "AI model (LLM)"
        },
        "$ai_model_parameters": {
            "description": "The parameters used to configure the model in the LLM API, in JSON.",
            "examples": ["{\"temperature\": 0.5, \"max_tokens\": 50}"],
            "label": "AI model parameters (LLM)"
        },
        "$ai_output": {
            "description": "The output JSON that was received from the LLM API.",
            "examples": [
                "{\"choices\": [{\"text\": \"Quantum computing is a type of computing that harnesses the power of quantum mechanics to perform operations on data.\"}]}"
            ],
            "label": "AI output (LLM)"
        },
        "$ai_output_choices": {
            "description": "The output message choices JSON that was received from the LLM API.",
            "examples": [
                "{\"choices\": [{\"text\": \"Quantum computing is a type of computing that harnesses the power of quantum mechanics to perform operations on data.\"}]}"
            ],
            "label": "AI output (LLM)"
        },
        "$ai_output_cost_usd": {
            "description": "The cost in USD of the output tokens received from the LLM API.",
            "examples": [0.0024],
            "label": "AI output cost USD (LLM)"
        },
        "$ai_output_state": {
            "description": "Output state of the LLM agent.",
            "label": "AI Output State (LLM)"
        },
        "$ai_output_tokens": {
            "description": "The number of tokens in the output from the LLM API.",
            "examples": [23],
            "label": "AI output tokens (LLM)"
        },
        "$ai_parent_id": {
            "description": "The parent span ID of a span or generation, used to group a trace into a tree view.",
            "examples": ["bdf42359-9364-4db7-8958-c001f28c9255"],
            "label": "AI Parent ID (LLM)"
        },
        "$ai_provider": {
            "description": "The provider of the AI model used to generate the output from the LLM API.",
            "examples": ["openai"],
            "label": "AI Provider (LLM)"
        },
        "$ai_reasoning_tokens": {
            "description": "The number of tokens in the reasoning output from the LLM API.",
            "examples": [23],
            "label": "AI reasoning tokens (LLM)"
        },
        "$ai_request_url": {
            "description": "The full URL of the request made to the LLM API.",
            "examples": ["https://api.openai.com/v1/chat/completions"],
            "label": "AI Request URL (LLM)"
        },
        "$ai_span_id": {
            "description": "The unique identifier for a LLM trace, generation, or span.",
            "examples": ["bdf42359-9364-4db7-8958-c001f28c9255"],
            "label": "AI Span ID (LLM)"
        },
        "$ai_span_name": {
            "description": "The name given to this LLM trace, generation, or span.",
            "examples": ["summarize_text"],
            "label": "AI Span Name (LLM)"
        },
        "$ai_stream": {
            "description": "Whether the response from the LLM API was streamed.",
            "examples": ["true", "false"],
            "label": "AI stream (LLM)"
        },
        "$ai_temperature": {
            "description": "The temperature parameter used in the request to the LLM API.",
            "examples": [0.7, 1.0],
            "label": "AI temperature (LLM)"
        },
        "$ai_tools": {
            "description": "The tools available to the LLM.",
            "examples": [
                "[{\"type\": \"function\", \"function\": {\"name\": \"tool1\", \"arguments\": {\"arg1\": \"value1\", \"arg2\": \"value2\"}}}]"
            ],
            "label": "AI tools (LLM)"
        },
        "$ai_total_cost_usd": {
            "description": "The total cost in USD of the request made to the LLM API (input + output costs).",
            "examples": [0.0041],
            "label": "AI total cost USD (LLM)"
        },
        "$ai_trace_id": {
            "description": "The trace ID of the request made to the LLM API. Used to group together multiple generations into a single trace.",
            "examples": ["c9222e05-8708-41b8-98ea-d4a21849e761"],
            "label": "AI Trace ID (LLM)"
        },
        "$anon_distinct_id": {
            "description": "If the user was previously anonymous, their anonymous ID will be set here.",
            "examples": ["16ff262c4301e5-0aa346c03894bc-39667c0e-1aeaa0-16ff262c431767"],
            "label": "Anon distinct ID",
            "system": true
        },
        "$app_build": {
            "description": "The build number for the app.",
            "label": "App build"
        },
        "$app_name": {
            "description": "The name of the app.",
            "label": "App name"
        },
        "$app_namespace": {
            "description": "The namespace of the app as identified in the app store.",
            "examples": ["com.posthog.app"],
            "label": "App namespace"
        },
        "$app_version": {
            "description": "The version of the app.",
            "label": "App version"
        },
        "$autocapture_disabled_server_side": {
            "description": "If autocapture has been disabled server-side.",
            "ignored_in_assistant": true,
            "label": "Autocapture disabled server-side",
            "system": true
        },
        "$browser": {
            "description": "Name of the browser the user has used.",
            "examples": ["Chrome", "Firefox"],
            "label": "Browser"
        },
        "$browser_language": {
            "description": "Language.",
            "examples": ["en", "en-US", "cn", "pl-PL"],
            "label": "Browser language"
        },
        "$browser_language_prefix": {
            "description": "Language prefix.",
            "examples": ["en", "ja"],
            "label": "Browser language prefix"
        },
        "$browser_type": {
            "description": "This is only added when posthog-js config.opt_out_useragent_filter is true.",
            "examples": ["browser", "bot"],
            "label": "Browser type"
        },
        "$browser_version": {
            "description": "The version of the browser that was used. Used in combination with Browser.",
            "examples": ["70", "79"],
            "label": "Browser version"
        },
        "$capture_failed_request": {
            "description": "",
            "ignored_in_assistant": true,
            "label": "Capture failed request"
        },
        "$ce_version": {
            "description": "",
            "label": "$ce_version",
            "system": true
        },
        "$client_session_initial_pathname": {
            "description": "Path that the user started their session on. (First-touch, session-scoped)",
            "examples": ["/register", "/some/landing/page"],
            "label": "Initial path"
        },
        "$client_session_initial_referring_host": {
            "description": "Host that the user came from. (First-touch, session-scoped)",
            "examples": ["google.com", "facebook.com"],
            "label": "Referrer host"
        },
        "$client_session_initial_utm_campaign": {
            "description": "UTM Campaign. (First-touch, session-scoped)",
            "examples": ["feature launch", "discount"],
            "label": "Initial UTM campaign"
        },
        "$client_session_initial_utm_content": {
            "description": "UTM Source. (First-touch, session-scoped)",
            "examples": ["bottom link", "second button"],
            "label": "Initial UTM source"
        },
        "$client_session_initial_utm_medium": {
            "description": "UTM Medium. (First-touch, session-scoped)",
            "examples": ["Social", "Organic", "Paid", "Email"],
            "label": "Initial UTM medium"
        },
        "$client_session_initial_utm_source": {
            "description": "UTM Source. (First-touch, session-scoped)",
            "examples": ["Google", "Bing", "Twitter", "Facebook"],
            "label": "Initial UTM source"
        },
        "$client_session_initial_utm_term": {
            "description": "UTM term. (First-touch, session-scoped)",
            "examples": ["free goodies"],
            "label": "Initial UTM term"
        },
        "$configured_session_timeout_ms": {
            "description": "Configured session timeout in milliseconds.",
            "examples": ["1800000"],
            "label": "Configured session timeout",
            "system": true
        },
        "$console_log_recording_enabled_server_side": {
            "description": "If console log recording has been enabled server-side.",
            "ignored_in_assistant": true,
            "label": "Console log recording enabled server-side",
            "system": true
        },
        "$copy_type": {
            "description": "Type of copy event.",
            "examples": ["copy", "cut"],
            "ignored_in_assistant": true,
            "label": "Copy type"
        },
        "$creator_event_uuid": {
            "description": "Unique ID for the event, which created this person.",
            "examples": ["16ff262c4301e5-0aa346c03894bc-39667c0e-1aeaa0-16ff262c431767"],
            "label": "Creator event ID"
        },
        "$current_url": {
            "description": "The URL visited at the time of the event.",
            "examples": ["https://example.com/interesting-article?parameter=true"],
            "label": "Current URL"
        },
        "$cymbal_errors": {
            "description": "Errors encountered while trying to process exceptions.",
            "label": "Exception processing errors",
            "system": true
        },
        "$dead_click_absolute_delay_ms": {
            "description": "The delay between a click and having seen no activity at all",
            "label": "Dead click absolute delay in milliseconds",
            "system": true
        },
        "$dead_click_absolute_timeout": {
            "description": "whether the dead click autocapture passed the threshold for waiting for any activity",
            "label": "Dead click absolute timeout",
            "system": true
        },
        "$dead_click_event_timestamp": {
            "description": "debug signal time of the event that triggered dead click autocapture",
            "label": "Dead click event timestamp",
            "system": true
        },
        "$dead_click_last_mutation_timestamp": {
            "description": "debug signal time of the last mutation seen by dead click autocapture",
            "label": "Dead click last mutation timestamp",
            "system": true
        },
        "$dead_click_mutation_delay_ms": {
            "description": "The delay between a click and the next mutation event",
            "label": "Dead click mutation delay in milliseconds",
            "system": true
        },
        "$dead_click_mutation_timeout": {
            "description": "whether the dead click autocapture passed the threshold for waiting for a mutation event",
            "label": "Dead click mutation timeout",
            "system": true
        },
        "$dead_click_scroll_delay_ms": {
            "description": "The delay between a click and the next scroll event",
            "label": "Dead click scroll delay in milliseconds",
            "system": true
        },
        "$dead_click_scroll_timeout": {
            "description": "whether the dead click autocapture passed the threshold for waiting for a scroll event",
            "label": "Dead click scroll timeout"
        },
        "$dead_click_selection_changed_delay_ms": {
            "description": "The delay between a click and the next text selection change event",
            "label": "Dead click selection changed delay in milliseconds",
            "system": true
        },
        "$dead_click_selection_changed_timeout": {
            "description": "whether the dead click autocapture passed the threshold for waiting for a text selection change event",
            "label": "Dead click selection changed timeout",
            "system": true
        },
        "$dead_clicks_enabled_server_side": {
            "description": "Whether dead clicks were enabled in remote config",
            "label": "Dead clicks enabled server side",
            "system": true
        },
        "$device": {
            "description": "The mobile device that was used.",
            "examples": ["iPad", "iPhone", "Android"],
            "label": "Device"
        },
        "$device_id": {
            "description": "Unique ID for that device, consistent even if users are logging in/out.",
            "examples": ["16ff262c4301e5-0aa346c03894bc-39667c0e-1aeaa0-16ff262c431767"],
            "label": "Device ID",
            "system": true
        },
        "$device_manufacturer": {
            "description": "The manufacturer of the device",
            "examples": ["Apple", "Samsung"],
            "label": "Device manufacturer"
        },
        "$device_model": {
            "description": "The model of the device that was used.",
            "examples": ["iPhone9,3", "SM-G965W"],
            "label": "Device model"
        },
        "$device_name": {
            "description": "Name of the device",
            "examples": ["iPhone 12 Pro", "Samsung Galaxy 10"],
            "label": "Device name"
        },
        "$device_type": {
            "description": "The type of device that was used.",
            "examples": ["Mobile", "Tablet", "Desktop"],
            "label": "Device type"
        },
        "$el_text": {
            "description": "The text of the element that was clicked. Only sent with Autocapture events.",
            "examples": ["Click here!"],
            "label": "Element text"
        },
        "$enabled_feature_flags": {
            "description": "Keys and multivariate values of the feature flags that were active while this event was sent.",
            "examples": ["{\"flag\": \"value\"}"],
            "label": "Enabled feature flags"
        },
        "$event_type": {
            "description": "When the event is an $autocapture event, this specifies what the action was against the element.",
            "examples": ["click", "submit", "change"],
            "label": "Event type"
        },
        "$exception_DOMException_code": {
            "description": "If a DOMException was thrown, it also has a DOMException code.",
            "label": "DOMException code"
        },
        "$exception_capture_enabled_server_side": {
            "description": "Whether exception autocapture was enabled in remote config.",
            "label": "Exception capture enabled server side"
        },
        "$exception_capture_endpoint": {
            "description": "Endpoint used by posthog-js exception autocapture.",
            "examples": ["/e/"],
            "label": "Exception capture endpoint"
        },
        "$exception_capture_endpoint_suffix": {
            "description": "Endpoint used by posthog-js exception autocapture.",
            "examples": ["/e/"],
            "label": "Exception capture endpoint suffix"
        },
        "$exception_colno": {
            "description": "Which column of the line in the exception source that caused the exception.",
            "label": "Exception source column number"
        },
        "$exception_fingerprint": {
            "description": "A fingerprint used to group issues, can be set clientside.",
            "label": "Exception fingerprint"
        },
        "$exception_handled": {
            "description": "Whether this was a handled or unhandled exception.",
            "label": "Exception was handled"
        },
        "$exception_is_synthetic": {
            "description": "Whether this was detected as a synthetic exception.",
            "label": "Exception is synthetic"
        },
        "$exception_issue_id": {
            "description": "The id of the issue the fingerprint was associated with at ingest time.",
            "label": "Exception issue ID"
        },
        "$exception_level": {
            "description": "Exception categorized by severity.",
            "examples": ["error"],
            "label": "Exception level"
        },
        "$exception_lineno": {
            "description": "Which line in the exception source that caused the exception.",
            "label": "Exception source line number"
        },
        "$exception_list": {
            "description": "List of one or more associated exceptions.",
            "label": "Exception list",
            "system": true
        },
        "$exception_message": {
            "description": "The message detected on the error.",
            "label": "Exception message"
        },
        "$exception_personURL": {
            "description": "The PostHog person that experienced the exception.",
            "label": "Exception person URL"
        },
        "$exception_proposed_fingerprint": {
            "description": "The fingerprint used to group issues. Auto generated unless provided clientside.",
            "label": "Exception proposed fingerprint"
        },
        "$exception_source": {
            "description": "The source of the exception.",
            "examples": ["JS file"],
            "label": "Exception source"
        },
        "$exception_stack_trace_raw": {
            "description": "The exceptions stack trace, as a string.",
            "label": "Exception raw stack trace"
        },
        "$exception_type": {
            "description": "Exception categorized into types.",
            "examples": ["Error"],
            "label": "Exception type"
        },
        "$feature_flag": {
            "description": "The feature flag that was called.\n\nWarning! This only works in combination with the $feature_flag_called event. If you want to filter other events, try \"Active feature flags\".",
            "examples": ["beta-feature"],
            "label": "Feature flag"
        },
        "$feature_flag_payload": {
            "description": "The JSON payload that the call to feature flag responded with (if any)",
            "examples": ["{\"variant\": \"test\"}"],
            "label": "Feature flag response payload"
        },
        "$feature_flag_payloads": {
            "description": "Feature flag payloads active in the environment.",
            "ignored_in_assistant": true,
            "label": "Feature flag payloads"
        },
        "$feature_flag_reason": {
            "description": "The reason the feature flag was matched or not matched.",
            "examples": ["Matched condition set 1"],
            "label": "Feature flag evaluation reason"
        },
        "$feature_flag_request_id": {
            "description": "The unique identifier for the request that retrieved this feature flag result.\n\nNote: Primarily used by PostHog support for debugging issues with feature flags.",
            "examples": ["01234567-89ab-cdef-0123-456789abcdef"],
            "label": "Feature flag request ID"
        },
        "$feature_flag_response": {
            "description": "What the call to feature flag responded with.",
            "examples": ["true", "false"],
            "label": "Feature flag response"
        },
        "$feature_flag_version": {
            "description": "The version of the feature flag that was called.",
            "examples": ["3"],
            "label": "Feature flag version"
        },
        "$geoip_accuracy_radius": {
            "description": "Accuracy radius of the location matched to this event's IP address (in kilometers).",
            "examples": ["50"],
            "label": "GeoIP detection accuracy radius"
        },
        "$geoip_city_confidence": {
            "description": "Confidence level of the city matched to this event's IP address.",
            "examples": ["0.5"],
            "label": "GeoIP detection city confidence"
        },
        "$geoip_city_name": {
            "description": "Name of the city matched to this event's IP address.",
            "examples": ["Sydney", "Chennai", "Brooklyn"],
            "label": "City name"
        },
        "$geoip_continent_code": {
            "description": "Code of the continent matched to this event's IP address.",
            "examples": ["OC", "AS", "NA"],
            "label": "Continent code"
        },
        "$geoip_continent_name": {
            "description": "Name of the continent matched to this event's IP address.",
            "examples": ["Oceania", "Asia", "North America"],
            "label": "Continent name"
        },
        "$geoip_country_code": {
            "description": "Code of the country matched to this event's IP address.",
            "examples": ["AU", "IN", "US"],
            "label": "Country code"
        },
        "$geoip_country_confidence": {
            "description": "Confidence level of the country matched to this event's IP address.",
            "examples": ["0.5"],
            "label": "GeoIP detection country confidence"
        },
        "$geoip_country_name": {
            "description": "Name of the country matched to this event's IP address.",
            "examples": ["Australia", "India", "United States"],
            "label": "Country name"
        },
        "$geoip_disable": {
            "description": "Whether to skip GeoIP processing for the event.",
            "label": "GeoIP disabled"
        },
        "$geoip_latitude": {
            "description": "Approximated latitude matched to this event's IP address.",
            "examples": ["-33.8591", "13.1337", "40.7"],
            "label": "Latitude"
        },
        "$geoip_longitude": {
            "description": "Approximated longitude matched to this event's IP address.",
            "examples": ["151.2", "80.8008", "-73.9"],
            "label": "Longitude"
        },
        "$geoip_postal_code": {
            "description": "Approximated postal code matched to this event's IP address.",
            "examples": ["2000", "600004", "11211"],
            "label": "Postal code"
        },
        "$geoip_postal_code_confidence": {
            "description": "If provided by the licensed geoip database",
            "examples": ["null", "0.1"],
            "ignored_in_assistant": true,
            "label": "Postal code identification confidence score",
            "system": true
        },
        "$geoip_subdivision_1_code": {
            "description": "Code of the subdivision matched to this event's IP address.",
            "examples": ["NSW", "TN", "NY"],
            "label": "Subdivision 1 code"
        },
        "$geoip_subdivision_1_confidence": {
            "description": "Confidence level of the first subdivision matched to this event's IP address.",
            "examples": ["0.5"],
            "label": "GeoIP detection subdivision 1 confidence"
        },
        "$geoip_subdivision_1_name": {
            "description": "Name of the subdivision matched to this event's IP address.",
            "examples": ["New South Wales", "Tamil Nadu", "New York"],
            "label": "Subdivision 1 name"
        },
        "$geoip_subdivision_2_code": {
            "description": "Code of the second subdivision matched to this event's IP address.",
            "label": "Subdivision 2 code"
        },
        "$geoip_subdivision_2_confidence": {
            "description": "If provided by the licensed geoip database",
            "examples": ["null", "0.1"],
            "ignored_in_assistant": true,
            "label": "Subdivision 2 identification confidence score",
            "system": true
        },
        "$geoip_subdivision_2_name": {
            "description": "Name of the second subdivision matched to this event's IP address.",
            "label": "Subdivision 2 name"
        },
        "$geoip_subdivision_3_code": {
            "description": "Code of the third subdivision matched to this event's IP address.",
            "label": "Subdivision 3 code"
        },
        "$geoip_subdivision_3_name": {
            "description": "Name of the third subdivision matched to this event's IP address.",
            "label": "Subdivision 3 name"
        },
        "$geoip_time_zone": {
            "description": "Timezone matched to this event's IP address.",
            "examples": ["Australia/Sydney", "Asia/Kolkata", "America/New_York"],
            "label": "Timezone"
        },
        "$group_0": {
            "label": "Group 1",
            "system": true
        },
        "$group_1": {
            "label": "Group 2",
            "system": true
        },
        "$group_2": {
            "label": "Group 3",
            "system": true
        },
        "$group_3": {
            "label": "Group 4",
            "system": true
        },
        "$group_4": {
            "label": "Group 5",
            "system": true
        },
        "$group_key": {
            "description": "Specified group key",
            "label": "Group key"
        },
        "$group_set": {
            "description": "Group properties to be set",
            "label": "Group set"
        },
        "$group_type": {
            "description": "Specified group type",
            "label": "Group type"
        },
        "$groups": {
            "description": "Relevant groups",
            "label": "Groups"
        },
        "$had_persisted_distinct_id": {
            "description": "",
            "label": "$had_persisted_distinct_id",
            "system": true
        },
        "$host": {
            "description": "The hostname of the Current URL.",
            "examples": ["example.com", "localhost:8000"],
            "label": "Host"
        },
        "$initial_person_info": {
            "description": "posthog-js initial person information. used in the $set_once flow",
            "label": "Initial person info",
            "system": true
        },
        "$initial_utm_source": {
            "description": "UTM source tag.",
            "examples": ["Google", "Bing", "Twitter", "Facebook"],
            "label": "Initial UTM source"
        },
        "$insert_id": {
            "description": "Unique insert ID for the event.",
            "label": "Insert ID",
            "system": true
        },
        "$ip": {
            "description": "IP address for this user when the event was sent.",
            "examples": ["203.0.113.0"],
            "label": "IP address"
        },
        "$is_emulator": {
            "description": "Indicates whether the app is running on an emulator or a physical device",
            "examples": ["true", "false"],
            "label": "Is emulator"
        },
        "$is_identified": {
            "description": "When the person was identified",
            "label": "Is identified"
        },
        "$is_ios_running_on_mac": {
            "description": "Indicates whether the app is an iOS app running on macOS (Apple Silicon)",
            "examples": ["true", "false"],
            "label": "Is iOS app running on Mac"
        },
        "$is_mac_catalyst_app": {
            "description": "Indicates whether the app is a Mac Catalyst app running on macOS",
            "examples": ["true", "false"],
            "label": "Is Mac Catalyst app"
        },
        "$last_posthog_reset": {
            "description": "The timestamp of the last call to `Reset` in the web SDK. This can be useful for debugging.",
            "ignored_in_assistant": true,
            "label": "Timestamp of last call to `Reset` in the web sdk",
            "system": true
        },
        "$lib": {
            "description": "What library was used to send the event.",
            "examples": ["web", "posthog-ios"],
            "label": "Library"
        },
        "$lib_custom_api_host": {
            "description": "The custom API host used to send the event.",
            "examples": ["https://ph.example.com"],
            "label": "Library custom API host"
        },
        "$lib_rate_limit_remaining_tokens": {
            "description": "Remaining rate limit tokens for the posthog-js library client-side rate limiting implementation.",
            "examples": ["100"],
            "ignored_in_assistant": true,
            "label": "Clientside rate limit remaining tokens"
        },
        "$lib_version": {
            "description": "Version of the library used to send the event. Used in combination with Library.",
            "examples": ["1.0.3"],
            "label": "Library version"
        },
        "$lib_version__major": {
            "description": "Major version of the library used to send the event.",
            "examples": [1],
            "label": "Library version (major)"
        },
        "$lib_version__minor": {
            "description": "Minor version of the library used to send the event.",
            "examples": [0],
            "label": "Library version (minor)"
        },
        "$lib_version__patch": {
            "description": "Patch version of the library used to send the event.",
            "examples": [3],
            "label": "Library version (patch)"
        },
        "$locale": {
            "description": "The locale of the device",
            "examples": ["en-US", "de-DE"],
            "label": "Locale"
        },
        "$network_bluetooth": {
            "description": "Whether the user was on Bluetooth when the event was sent.",
            "examples": ["true", "false"],
            "label": "Network Bluetooth"
        },
        "$network_carrier": {
            "description": "The network carrier that the user is on.",
            "examples": ["cricket", "telecom"],
            "label": "Network carrier"
        },
        "$network_cellular": {
            "description": "Whether the user was on cellular when the event was sent.",
            "examples": ["true", "false"],
            "label": "Network Cellular"
        },
        "$network_wifi": {
            "description": "Whether the user was on WiFi when the event was sent.",
            "examples": ["true", "false"],
            "label": "Network WiFi"
        },
        "$os": {
            "description": "The operating system of the user.",
            "examples": ["Windows", "Mac OS X"],
            "label": "OS"
        },
        "$os_name": {
            "description": "The Operating System name",
            "examples": ["iOS", "Android"],
            "label": "OS name"
        },
        "$os_version": {
            "description": "The Operating System version.",
            "examples": ["15.5"],
            "label": "OS version"
        },
        "$pageview_id": {
            "description": "PostHog's internal ID for matching events to a pageview.",
            "ignored_in_assistant": true,
            "label": "Pageview ID",
            "system": true
        },
        "$pathname": {
            "description": "The path of the Current URL, which means everything in the url after the domain.",
            "examples": ["/pricing", "/about-us/team"],
            "label": "Path name"
        },
        "$performance_page_loaded": {
            "description": "The time taken until the browser's page load event in milliseconds.",
            "label": "Page loaded"
        },
        "$performance_raw": {
            "description": "The browser performance entries for navigation (the page), paint, and resources. That were available when the page view event fired",
            "label": "Browser performance",
            "system": true
        },
        "$plugins_deferred": {
            "description": "Plugins to which the event was handed off post-ingestion, e.g. for export (plugin method `onEvent`).",
            "label": "Plugins deferred"
        },
        "$plugins_failed": {
            "description": "Plugins that failed to process the event (plugin method `processEvent`).",
            "label": "Plugins failed"
        },
        "$plugins_succeeded": {
            "description": "Plugins that successfully processed the event, e.g. edited properties (plugin method `processEvent`).",
            "label": "Plugins succeeded"
        },
        "$prev_pageview_duration": {
            "description": "posthog-js adds these to the page leave event, they are used in web analytics calculations",
            "examples": [0],
            "label": "Previous pageview duration"
        },
        "$prev_pageview_id": {
            "description": "posthog-js adds these to the page leave event, they are used in web analytics calculations",
            "examples": ["1"],
            "label": "Previous pageview ID",
            "system": true
        },
        "$prev_pageview_last_content": {
            "description": "posthog-js adds these to the page leave event, they are used in web analytics calculations",
            "examples": [0],
            "label": "Previous pageview last content"
        },
        "$prev_pageview_last_content_percentage": {
            "description": "posthog-js adds these to the page leave event, they are used in web analytics calculations",
            "examples": [0],
            "label": "Previous pageview last content percentage"
        },
        "$prev_pageview_last_scroll": {
            "description": "posthog-js adds these to the page leave event, they are used in web analytics calculations",
            "examples": [0],
            "label": "Previous pageview last scroll"
        },
        "$prev_pageview_last_scroll_percentage": {
            "description": "posthog-js adds these to the page leave event, they are used in web analytics calculations",
            "examples": [0],
            "label": "Previous pageview last scroll percentage"
        },
        "$prev_pageview_max_content": {
            "description": "posthog-js adds these to the page leave event, they are used in web analytics calculations",
            "examples": [0],
            "label": "Previous pageview max content"
        },
        "$prev_pageview_max_content_percentage": {
            "description": "posthog-js adds these to the page leave event, they are used in web analytics calculations",
            "examples": [0],
            "label": "Previous pageview max content percentage"
        },
        "$prev_pageview_max_scroll": {
            "description": "posthog-js adds these to the page leave event, they are used in web analytics calculations",
            "examples": [0],
            "label": "Previous pageview max scroll"
        },
        "$prev_pageview_max_scroll_percentage": {
            "description": "posthog-js adds these to the page leave event, they are used in web analytics calculations",
            "examples": [0],
            "label": "Previous pageview max scroll percentage"
        },
        "$prev_pageview_pathname": {
            "description": "posthog-js adds these to the page leave event, they are used in web analytics calculations",
            "examples": ["/pricing", "/about-us/team"],
            "label": "Previous pageview pathname"
        },
        "$process_person_profile": {
            "description": "The setting from an SDK to control whether an event has person processing enabled",
            "label": "Person profile processing flag",
            "system": true
        },
        "$python_runtime": {
            "description": "The Python runtime that was used to capture the event.",
            "examples": ["CPython"],
            "ignored_in_assistant": true,
            "label": "Python runtime",
            "system": true
        },
        "$python_version": {
            "description": "The Python version that was used to capture the event.",
            "examples": ["3.11.5"],
            "ignored_in_assistant": true,
            "label": "Python version",
            "system": true
        },
        "$raw_user_agent": {
            "description": "PostHog process information like browser, OS, and device type from the user agent string. This is the raw user agent string.",
            "examples": ["Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko)"],
            "label": "Raw user agent"
        },
        "$recording_status": {
            "description": "The status of session recording at the time the event was captured",
            "label": "Session recording status",
            "system": true
        },
        "$referrer": {
            "description": "URL of where the user came from.",
            "examples": ["https://google.com/search?q=posthog&rlz=1C..."],
            "label": "Referrer URL"
        },
        "$referring_domain": {
            "description": "Domain of where the user came from.",
            "examples": ["google.com", "facebook.com"],
            "label": "Referring domain"
        },
        "$replay_minimum_duration": {
            "description": "Config for minimum duration before emitting a session recording.",
            "examples": ["1000"],
            "label": "Replay config - minimum duration",
            "system": true
        },
        "$replay_sample_rate": {
            "description": "Config for sampling rate of session recordings.",
            "examples": ["0.1"],
            "label": "Replay config - sample rate",
            "system": true
        },
        "$replay_script_config": {
            "description": "Sets an alternative recorder script for the web sdk.",
            "examples": ["{\"script\": \"recorder-next\"}"],
            "label": "Replay script config",
            "system": true
        },
        "$screen_density": {
            "description": "The logical density of the display. This is a scaling factor for the Density Independent Pixel unit, where one DIP is one pixel on an approximately 160 dpi screen (for example a 240x320, 1.5\"x2\" screen), providing the baseline of the system's display. Thus on a 160dpi screen this density value will be 1; on a 120 dpi screen it would be .75; etc.",
            "examples": [2.75],
            "label": "Screen density"
        },
        "$screen_height": {
            "description": "The height of the user's entire screen (in pixels).",
            "examples": ["2160", "1050"],
            "label": "Screen height"
        },
        "$screen_name": {
            "description": "The name of the active screen.",
            "label": "Screen name"
        },
        "$screen_width": {
            "description": "The width of the user's entire screen (in pixels).",
            "examples": ["1440", "1920"],
            "label": "Screen width"
        },
        "$sdk_debug_replay_internal_buffer_length": {
            "description": "Useful for debugging. The internal buffer length for replay.",
            "examples": ["100"],
            "ignored_in_assistant": true,
            "label": "Replay internal buffer length",
            "system": true
        },
        "$sdk_debug_replay_internal_buffer_size": {
            "description": "Useful for debugging. The internal buffer size for replay.",
            "examples": ["100"],
            "ignored_in_assistant": true,
            "label": "Replay internal buffer size",
            "system": true
        },
        "$sdk_debug_retry_queue_size": {
            "description": "Useful for debugging. The size of the retry queue.",
            "examples": ["100"],
            "ignored_in_assistant": true,
            "label": "Retry queue size",
            "system": true
        },
        "$search_engine": {
            "description": "The search engine the user came in from (if any).",
            "examples": ["Google", "DuckDuckGo"],
            "label": "Search engine"
        },
        "$selected_content": {
            "description": "The content that was selected when the user copied or cut.",
            "ignored_in_assistant": true,
            "label": "Copied content"
        },
        "$sent_at": {
            "description": "Time the event was sent to PostHog. Used for correcting the event timestamp when the device clock is off.",
            "examples": ["2023-05-20T15:31:00Z"],
            "label": "Sent at"
        },
        "$sentry_event_id": {
            "description": "This is the Sentry key for an event.",
            "examples": ["byroc2ar9ee4ijqp"],
            "label": "Sentry event ID",
            "system": true
        },
        "$sentry_exception": {
            "description": "Raw Sentry exception data.",
            "label": "Sentry exception",
            "system": true
        },
        "$sentry_exception_message": {
            "label": "Sentry exception message"
        },
        "$sentry_exception_type": {
            "description": "Class name of the exception object.",
            "label": "Sentry exception type"
        },
        "$sentry_tags": {
            "description": "Tags sent to Sentry along with the exception.",
            "label": "Sentry tags"
        },
        "$sentry_url": {
            "description": "Direct link to the exception in Sentry",
            "examples": ["https://sentry.io/..."],
            "label": "Sentry URL"
        },
        "$session_entry__kx": {
            "description": "Klaviyo Tracking ID Captured at the start of the session and remains constant for the duration of the session.",
            "label": "Session entry _kx"
        },
        "$session_entry_dclid": {
            "description": "DoubleClick ID Captured at the start of the session and remains constant for the duration of the session.",
            "label": "Session entry dclid"
        },
        "$session_entry_epik": {
            "description": "Pinterest Click ID Captured at the start of the session and remains constant for the duration of the session.",
            "label": "Session entry epik"
        },
        "$session_entry_fbclid": {
            "description": "Facebook Click ID Captured at the start of the session and remains constant for the duration of the session.",
            "label": "Session entry fbclid"
        },
        "$session_entry_gad_source": {
            "description": "Google Ads Source Captured at the start of the session and remains constant for the duration of the session.",
            "label": "Session entry gad_source"
        },
        "$session_entry_gbraid": {
            "description": "Google Ads, web to app Captured at the start of the session and remains constant for the duration of the session.",
            "label": "Session entry gbraid"
        },
        "$session_entry_gclid": {
            "description": "Google Click ID Captured at the start of the session and remains constant for the duration of the session.",
            "label": "Session entry gclid"
        },
        "$session_entry_gclsrc": {
            "description": "Google Click Source Captured at the start of the session and remains constant for the duration of the session.",
            "label": "Session entry gclsrc"
        },
        "$session_entry_host": {
            "description": "The hostname of the Current URL. Captured at the start of the session and remains constant for the duration of the session.",
            "examples": ["example.com", "localhost:8000"],
            "label": "Session entry Host"
        },
        "$session_entry_igshid": {
            "description": "Instagram Share ID Captured at the start of the session and remains constant for the duration of the session.",
            "label": "Session entry igshid"
        },
        "$session_entry_irclid": {
            "description": "Impact Click ID Captured at the start of the session and remains constant for the duration of the session.",
            "label": "Session entry irclid"
        },
        "$session_entry_li_fat_id": {
            "description": "LinkedIn First-Party Ad Tracking ID Captured at the start of the session and remains constant for the duration of the session.",
            "label": "Session entry li_fat_id"
        },
        "$session_entry_mc_cid": {
            "description": "Mailchimp Campaign ID Captured at the start of the session and remains constant for the duration of the session.",
            "label": "Session entry mc_cid"
        },
        "$session_entry_msclkid": {
            "description": "Microsoft Click ID Captured at the start of the session and remains constant for the duration of the session.",
            "label": "Session entry msclkid"
        },
        "$session_entry_pathname": {
            "description": "The path of the Current URL, which means everything in the url after the domain. Captured at the start of the session and remains constant for the duration of the session.",
            "examples": ["/pricing", "/about-us/team"],
            "label": "Session entry Path name"
        },
        "$session_entry_qclid": {
            "description": "Quora Click ID Captured at the start of the session and remains constant for the duration of the session.",
            "label": "Session entry qclid"
        },
        "$session_entry_rdt_cid": {
            "description": "Reddit Click ID Captured at the start of the session and remains constant for the duration of the session.",
            "label": "Session entry rdt_cid"
        },
        "$session_entry_referrer": {
            "description": "URL of where the user came from. Captured at the start of the session and remains constant for the duration of the session.",
            "examples": ["https://google.com/search?q=posthog&rlz=1C..."],
            "label": "Session entry Referrer URL"
        },
        "$session_entry_referring_domain": {
            "description": "Domain of where the user came from. Captured at the start of the session and remains constant for the duration of the session.",
            "examples": ["google.com", "facebook.com"],
            "label": "Session entry Referring domain"
        },
        "$session_entry_sccid": {
            "description": "Snapchat Click ID Captured at the start of the session and remains constant for the duration of the session.",
            "label": "Session entry sccid"
        },
        "$session_entry_ttclid": {
            "description": "TikTok Click ID Captured at the start of the session and remains constant for the duration of the session.",
            "label": "Session entry ttclid"
        },
        "$session_entry_twclid": {
            "description": "Twitter Click ID Captured at the start of the session and remains constant for the duration of the session.",
            "label": "Session entry twclid"
        },
        "$session_entry_url": {
            "description": "The URL visited at the time of the event. Captured at the start of the session and remains constant for the duration of the session.",
            "examples": ["https://example.com/interesting-article?parameter=true"],
            "label": "Session entry Current URL"
        },
        "$session_entry_utm_campaign": {
            "description": "UTM campaign tag. Captured at the start of the session and remains constant for the duration of the session.",
            "examples": ["feature launch", "discount"],
            "label": "Session entry UTM campaign"
        },
        "$session_entry_utm_content": {
            "description": "UTM content tag. Captured at the start of the session and remains constant for the duration of the session.",
            "examples": ["bottom link", "second button"],
            "label": "Session entry UTM content"
        },
        "$session_entry_utm_medium": {
            "description": "UTM medium tag. Captured at the start of the session and remains constant for the duration of the session.",
            "examples": ["Social", "Organic", "Paid", "Email"],
            "label": "Session entry UTM medium"
        },
        "$session_entry_utm_source": {
            "description": "UTM source tag. Captured at the start of the session and remains constant for the duration of the session.",
            "examples": ["Google", "Bing", "Twitter", "Facebook"],
            "label": "Session entry UTM source"
        },
        "$session_entry_utm_term": {
            "description": "UTM term tag. Captured at the start of the session and remains constant for the duration of the session.",
            "examples": ["free goodies"],
            "label": "Session entry UTM term"
        },
        "$session_entry_wbraid": {
            "description": "Google Ads, app to web Captured at the start of the session and remains constant for the duration of the session.",
            "label": "Session entry wbraid"
        },
        "$session_id": {
            "description": "Unique session ID for session recording disambiguation",
            "label": "Session ID",
            "system": true
        },
        "$session_is_sampled": {
            "description": "Whether the session is sampled for session recording.",
            "examples": ["true", "false"],
            "ignored_in_assistant": true,
            "label": "Whether the session is sampled",
            "system": true
        },
        "$session_recording_canvas_recording": {
            "description": "Session recording canvas capture config.",
            "examples": ["{\"enabled\": false}"],
            "label": "Session recording canvas recording",
            "system": true
        },
        "$session_recording_network_payload_capture": {
            "description": "Session recording network payload capture config.",
            "examples": ["{\"recordHeaders\": false}"],
            "label": "Session recording network payload capture",
            "system": true
        },
        "$session_recording_recorder_version_server_side": {
            "description": "The version of the session recording recorder that is enabled server-side.",
            "examples": ["v2"],
            "ignored_in_assistant": true,
            "label": "Session recording recorder version server-side",
            "system": true
        },
        "$session_recording_start_reason": {
            "description": "Reason for starting the session recording. Useful for e.g. if you have sampling enabled and want to see on batch exported events which sessions have recordings available.",
            "examples": ["sampling_override", "recording_initialized", "linked_flag_match"],
            "label": "Session recording start reason",
            "system": true
        },
        "$session_recording_url_trigger_activated_session": {
            "description": "Session recording URL trigger activated session config. Used by posthog-js to track URL activation of session replay.",
            "label": "Session recording URL trigger activated session",
            "system": true
        },
        "$session_recording_url_trigger_status": {
            "description": "Session recording URL trigger status. Used by posthog-js to track URL activation of session replay.",
            "label": "Session recording URL trigger status",
            "system": true
        },
        "$set": {
            "description": "Person properties to be set. Sent as `$set`.",
            "ignored_in_assistant": true,
            "label": "Set person properties"
        },
        "$set_once": {
            "description": "Person properties to be set if not set already (i.e. first-touch). Sent as `$set_once`.",
            "ignored_in_assistant": true,
            "label": "Set person properties once"
        },
        "$survey_completed": {
            "description": "If a survey was fully completed (all questions answered), this will be true.",
            "label": "Survey completed"
        },
        "$survey_id": {
            "description": "The unique identifier for the survey.",
            "label": "Survey ID"
        },
        "$survey_iteration": {
            "description": "The iteration number for the survey.",
            "label": "Survey iteration number"
        },
        "$survey_iteration_start_date": {
            "description": "The start date for the current iteration of the survey.",
            "label": "Survey iteration start date"
        },
        "$survey_name": {
            "description": "The name of the survey.",
            "examples": ["Product Feedback for New Product", "Home page NPS"],
            "label": "Survey name"
        },
        "$survey_partially_completed": {
            "description": "If a survey was partially completed (some questions answered) on dismissal, this will be true.",
            "label": "Survey partially completed"
        },
        "$survey_questions": {
            "description": "The questions asked in the survey.",
            "label": "Survey questions"
        },
        "$survey_response": {
            "description": "The response value for the first question in the survey.",
            "examples": ["I love it!", 5, "['choice 1', 'choice 3']"],
            "label": "Survey response"
        },
        "$survey_submission_id": {
            "description": "The unique identifier for the survey submission. Relevant for partial submissions, as they submit multiple 'survey sent' events. This is what allows us to count them as a single submission.",
            "label": "Survey submission ID"
        },
        "$surveys_activated": {
            "description": "The surveys that were activated for this event.",
            "label": "Surveys activated"
        },
        "$time": {
            "description": "Use the SQL field `timestamp` instead. This field was previously set on some client side events.",
            "examples": ["1681211521.345"],
            "label": "$time (deprecated)",
            "system": true
        },
        "$timestamp": {
            "description": "Use the SQL field `timestamp` instead. This field was previously set on some client side events.",
            "examples": ["2023-05-20T15:30:00Z"],
            "label": "Timestamp (deprecated)",
            "system": true
        },
        "$timezone": {
            "description": "The timezone as reported by the device",
            "label": "Timezone"
        },
        "$touch_x": {
            "description": "The location of a Touch event on the X axis",
            "label": "Touch X"
        },
        "$touch_y": {
            "description": "The location of a Touch event on the Y axis",
            "label": "Touch Y"
        },
        "$user_agent": {
            "description": "Some SDKs (like Android) send the raw user agent as $user_agent.",
            "examples": ["Dalvik/2.1.0 (Linux; U; Android 11; Pixel 3 Build/RQ2A.210505.002)"],
            "label": "Raw user agent"
        },
        "$user_id": {
            "description": "This variable will be set to the distinct ID if you've called `posthog.identify('distinct id')`. If the user is anonymous, it'll be empty.",
            "label": "User ID"
        },
        "$viewport_height": {
            "description": "The height of the user's actual browser window (in pixels).",
            "examples": ["2094", "1031"],
            "label": "Viewport height"
        },
        "$viewport_width": {
            "description": "The width of the user's actual browser window (in pixels).",
            "examples": ["1439", "1915"],
            "label": "Viewport width"
        },
        "$web_vitals_CLS_event": {
            "label": "Web vitals CLS measure event details"
        },
        "$web_vitals_CLS_value": {
            "label": "Web vitals CLS value"
        },
        "$web_vitals_FCP_event": {
            "label": "Web vitals FCP measure event details"
        },
        "$web_vitals_FCP_value": {
            "label": "Web vitals FCP value"
        },
        "$web_vitals_INP_event": {
            "label": "Web vitals INP measure event details"
        },
        "$web_vitals_INP_value": {
            "label": "Web vitals INP value"
        },
        "$web_vitals_LCP_event": {
            "label": "Web vitals LCP measure event details"
        },
        "$web_vitals_LCP_value": {
            "label": "Web vitals LCP value"
        },
        "$web_vitals_allowed_metrics": {
            "description": "Allowed web vitals metrics config.",
            "examples": ["[\"LCP\", \"CLS\"]"],
            "label": "Web vitals allowed metrics",
            "system": true
        },
        "$web_vitals_enabled_server_side": {
            "description": "Whether web vitals was enabled in remote config",
            "label": "Web vitals enabled server side"
        },
        "$window_id": {
            "description": "Unique window ID for session recording disambiguation",
            "label": "Window ID",
            "system": true
        },
        "_kx": {
            "description": "Klaviyo Tracking ID",
            "label": "_kx"
        },
        "build": {
            "description": "The build number for the app",
            "examples": ["1"],
            "label": "App build"
        },
        "currency": {
            "description": "The currency code associated with the event.",
            "examples": ["USD", "EUR", "GBP", "CAD"],
            "label": "Currency"
        },
        "dclid": {
            "description": "DoubleClick ID",
            "label": "dclid"
        },
        "distinct_id": {
            "description": "The current distinct ID of the user.",
            "examples": ["16ff262c4301e5-0aa346c03894bc-39667c0e-1aeaa0-16ff262c431767"],
            "label": "Distinct ID"
        },
        "epik": {
            "description": "Pinterest Click ID",
            "label": "epik"
        },
        "fbclid": {
            "description": "Facebook Click ID",
            "label": "fbclid"
        },
        "from_background": {
            "description": "Whether the app was opened for the first time or from the background.",
            "examples": ["true", "false"],
            "label": "From background"
        },
        "gad_source": {
            "description": "Google Ads Source",
            "label": "gad_source"
        },
        "gbraid": {
            "description": "Google Ads, web to app",
            "label": "gbraid"
        },
        "gclid": {
            "description": "Google Click ID",
            "label": "gclid"
        },
        "gclsrc": {
            "description": "Google Click Source",
            "label": "gclsrc"
        },
        "igshid": {
            "description": "Instagram Share ID",
            "label": "igshid"
        },
        "irclid": {
            "description": "Impact Click ID",
            "label": "irclid"
        },
        "li_fat_id": {
            "description": "LinkedIn First-Party Ad Tracking ID",
            "label": "li_fat_id"
        },
        "mc_cid": {
            "description": "Mailchimp Campaign ID",
            "label": "mc_cid"
        },
        "msclkid": {
            "description": "Microsoft Click ID",
            "label": "msclkid"
        },
        "previous_build": {
            "description": "The previous build number for the app",
            "examples": ["1"],
            "label": "App previous build"
        },
        "previous_version": {
            "description": "The previous version of the app",
            "examples": ["1.0.0"],
            "label": "App previous version"
        },
        "qclid": {
            "description": "Quora Click ID",
            "label": "qclid"
        },
        "rdt_cid": {
            "description": "Reddit Click ID",
            "label": "rdt_cid"
        },
        "referring_application": {
            "description": "The namespace of the app that made the request.",
            "examples": ["com.posthog.app"],
            "label": "Referrer application"
        },
        "revenue": {
            "description": "The revenue associated with the event. By default, this is in USD, but the currency property can be used to specify a different currency.",
            "examples": [10.0],
            "label": "Revenue"
        },
        "sccid": {
            "description": "Snapchat Click ID",
            "label": "sccid"
        },
        "token": {
            "description": "Token used for authentication.",
            "examples": ["ph_abcdefg"],
            "ignored_in_assistant": true,
            "label": "Token"
        },
        "ttclid": {
            "description": "TikTok Click ID",
            "label": "ttclid"
        },
        "twclid": {
            "description": "Twitter Click ID",
            "label": "twclid"
        },
        "url": {
            "description": "The deep link URL that the app was opened from.",
            "examples": ["https://open.my.app"],
            "label": "URL"
        },
        "utm_campaign": {
            "description": "UTM campaign tag.",
            "examples": ["feature launch", "discount"],
            "label": "UTM campaign"
        },
        "utm_content": {
            "description": "UTM content tag.",
            "examples": ["bottom link", "second button"],
            "label": "UTM content"
        },
        "utm_medium": {
            "description": "UTM medium tag.",
            "examples": ["Social", "Organic", "Paid", "Email"],
            "label": "UTM medium"
        },
        "utm_name": {
            "description": "UTM campaign tag, sent via Segment.",
            "examples": ["feature launch", "discount"],
            "label": "UTM name"
        },
        "utm_source": {
            "description": "UTM source tag.",
            "examples": ["Google", "Bing", "Twitter", "Facebook"],
            "label": "UTM source"
        },
        "utm_term": {
            "description": "UTM term tag.",
            "examples": ["free goodies"],
            "label": "UTM term"
        },
        "version": {
            "description": "The version of the app",
            "examples": ["1.0.0"],
            "label": "App version"
        },
        "wbraid": {
            "description": "Google Ads, app to web",
            "label": "wbraid"
        }
    },
    "events": {
        "$$heatmap": {
            "description": "Heatmap events carry heatmap data to the backend, they do not contribute to event counts.",
            "ignored_in_assistant": true,
            "label": "Heatmap"
        },
        "$ai_embedding": {
            "description": "A call to an embedding model.",
            "label": "AI embedding (LLM)"
        },
        "$ai_feedback": {
            "description": "User-provided feedback for a trace of a generative AI model (LLM).",
            "label": "AI feedback (LLM)"
        },
        "$ai_generation": {
            "description": "A call to an LLM model. Contains the input prompt, output, model used and costs.",
            "label": "AI generation (LLM)"
        },
        "$ai_metric": {
            "description": "An evaluation metric for a trace of a generative AI model (LLM). Contains the trace ID, metric name, and metric value.",
            "label": "AI metric (LLM)"
        },
        "$ai_span": {
            "description": "A generative AI span. Usually a span tracks a unit of work for a trace of generative AI models (LLMs).",
            "label": "AI span (LLM)"
        },
        "$ai_trace": {
            "description": "A generative AI trace. Usually a trace tracks a single user interaction and contains one or more AI generation calls.",
            "label": "AI trace (LLM)"
        },
        "$autocapture": {
            "description": "User interactions that were automatically captured.",
            "examples": ["clicked button"],
            "ignored_in_assistant": true,
            "label": "Autocapture"
        },
        "$capture_metrics": {
            "description": "Metrics captured with values pertaining to your systems at a specific point in time.",
            "ignored_in_assistant": true,
            "label": "Capture metrics"
        },
        "$copy_autocapture": {
            "description": "Selected text automatically captured when a user copies or cuts.",
            "ignored_in_assistant": true,
            "label": "Clipboard autocapture"
        },
        "$create_alias": {
            "description": "An alias ID has been added to a user.",
            "ignored_in_assistant": true,
            "label": "Alias"
        },
        "$dead_click": {
            "description": "A user has clicked on something that is probably not clickable.",
            "label": "Dead click"
        },
        "$exception": {
            "description": "An unexpected error or unhandled exception in your application.",
            "label": "Exception"
        },
        "$feature_enrollment_update": {
            "description": "When a user enrolls with a feature.",
            "description_llm": "When a user opts in or out of a beta feature. This event is specific to the PostHog Early Access Features product, and is only relevant if the project is using this product.",
            "label": "Feature enrollment"
        },
        "$feature_flag_called": {
            "description": "The feature flag that was called.\n\nWarning! This only works in combination with the $feature_flag event. If you want to filter other events, try \"Active feature flags\".",
            "examples": ["beta-feature"],
            "ignored_in_assistant": true,
            "label": "Feature flag called"
        },
        "$feature_interaction": {
            "description": "When a user interacts with a feature.",
            "ignored_in_assistant": true,
            "label": "Feature interaction"
        },
        "$feature_view": {
            "description": "When a user views a feature.",
            "ignored_in_assistant": true,
            "label": "Feature view"
        },
        "$groupidentify": {
            "description": "A group has been identified with properties.",
            "ignored_in_assistant": true,
            "label": "Group identify"
        },
        "$identify": {
            "description": "A user has been identified with properties.",
            "description_llm": "Identifies an anonymous user. The event shows how many users used an account, so do not use it for active users metrics because a user may skip identification.",
            "label": "Identify"
        },
        "$merge_dangerously": {
            "description": "An alias ID has been added to a user.",
            "ignored_in_assistant": true,
            "label": "Merge"
        },
        "$opt_in": {
            "description": "When a user opts into analytics.",
            "ignored_in_assistant": true,
            "label": "Opt in"
        },
        "$pageleave": {
            "description": "When a user leaves a page.",
            "ignored_in_assistant": true,
            "label": "Pageleave"
        },
        "$pageview": {
            "description": "When a user loads (or reloads) a page.",
            "label": "Pageview"
        },
        "$rageclick": {
            "description": "A user has rapidly and repeatedly clicked in a single place.",
            "label": "Rageclick"
        },
        "$screen": {
            "description": "When a user loads a screen in a mobile app.",
            "label": "Screen"
        },
        "$set": {
            "description": "Setting person properties. Sent as `$set`.",
            "ignored_in_assistant": true,
            "label": "Set person properties"
        },
        "$web_vitals": {
            "description": "Automatically captured web vitals data.",
            "label": "Web vitals"
        },
        "All events": {
            "description": "This is a wildcard that matches all events.",
            "label": "All events"
        },
        "Application backgrounded": {
            "description": "When a user puts the mobile app in the background.",
            "label": "Application backgrounded"
        },
        "Application became active": {
            "description": "When a user puts the mobile app in the foreground.",
            "label": "Application became active"
        },
        "Application installed": {
            "description": "When a user installs the mobile app.",
            "label": "Application installed"
        },
        "Application opened": {
            "description": "When a user opens the mobile app either for the first time or from the foreground.",
            "label": "Application opened"
        },
        "Application updated": {
            "description": "When a user upgrades the mobile app.",
            "label": "Application updated"
        },
        "Deep link opened": {
            "description": "When a user opens the mobile app via a deep link.",
            "label": "Deep link opened"
        }
    },
    "groups": {
        "$group_key": {
            "description": "Specified group key",
            "label": "Group key"
        }
    },
    "log_entries": {
        "level": {
            "description": "Level of the ",
            "examples": ["info", "warn", "error"],
            "label": "Console log level"
        },
        "message": {
            "description": "The contents of the log message",
            "label": "Console log message"
        }
    },
    "metadata": {
        "distinct_id": {
            "description": "The current distinct ID of the user.",
            "examples": ["16ff262c4301e5-0aa346c03894bc-39667c0e-1aeaa0-16ff262c431767"],
            "label": "Distinct ID"
        },
        "event": {
            "description": "The name of the event.",
            "examples": ["$pageview"],
            "ignored_in_assistant": true,
            "label": "Event",
            "system": true
        },
        "person_id": {
            "description": "The ID of the person, depending on the person properties mode.",
            "examples": ["16ff262c4301e5-0aa346c03894bc-39667c0e-1aeaa0-16ff262c431767"],
            "label": "Person ID"
        },
        "timestamp": {
            "description": "Time the event happened.",
            "examples": ["2023-05-20T15:30:00Z"],
            "ignored_in_assistant": true,
            "label": "Timestamp",
            "system": true
        }
    },
    "numerical_event_properties": {},
    "person_properties": {
        "$$plugin_metrics": {
            "description": "Performance metrics for a given plugin.",
            "label": "Plugin metric"
        },
        "$active_feature_flags": {
            "description": "Keys of the feature flags that were active while this event was sent.",
            "examples": ["['beta-feature']"],
            "label": "Active feature flags"
        },
        "$ai_base_url": {
            "description": "The base URL of the request made to the LLM API.",
            "examples": ["https://api.openai.com/v1/"],
            "label": "AI base URL (LLM)"
        },
        "$ai_cache_creation_input_tokens": {
            "description": "The number of tokens created in the cache for the input prompt (anthropic only).",
            "examples": [23],
            "label": "AI cache creation input tokens (LLM)"
        },
        "$ai_cache_read_input_tokens": {
            "description": "The number of tokens read from the cache for the input prompt.",
            "examples": [23],
            "label": "AI cache read input tokens (LLM)"
        },
        "$ai_feedback_text": {
            "description": "The text provided by the user for feedback on the LLM trace.",
            "examples": ["\"The response was helpful, but it did not use the provided context.\""],
            "label": "AI Feedback Text (LLM)"
        },
        "$ai_http_status": {
            "description": "The HTTP status code of the request made to the LLM API.",
            "examples": [200, 429],
            "label": "AI HTTP status (LLM)"
        },
        "$ai_input": {
            "description": "The input JSON that was sent to the LLM API.",
            "examples": ["{\"content\": \"Explain quantum computing in simple terms.\", \"role\": \"user\"}"],
            "label": "AI input (LLM)"
        },
        "$ai_input_cost_usd": {
            "description": "The cost in USD of the input tokens sent to the LLM API.",
            "examples": [0.0017],
            "label": "AI input cost USD (LLM)"
        },
        "$ai_input_state": {
            "description": "Input state of the LLM agent.",
            "label": "AI Input State (LLM)"
        },
        "$ai_input_tokens": {
            "description": "The number of tokens in the input prompt that was sent to the LLM API.",
            "examples": [23],
            "label": "AI input tokens (LLM)"
        },
        "$ai_latency": {
            "description": "The latency of the request made to the LLM API, in seconds.",
            "examples": [0.361],
            "label": "AI latency (LLM)"
        },
        "$ai_metric_name": {
            "description": "The name assigned to the metric used to evaluate the LLM trace.",
            "examples": ["rating", "accuracy"],
            "label": "AI Metric Name (LLM)"
        },
        "$ai_metric_value": {
            "description": "The value assigned to the metric used to evaluate the LLM trace.",
            "examples": ["negative", "95"],
            "label": "AI Metric Value (LLM)"
        },
        "$ai_model": {
            "description": "The model used to generate the output from the LLM API.",
            "examples": ["gpt-4o-mini"],
            "label": "AI model (LLM)"
        },
        "$ai_model_parameters": {
            "description": "The parameters used to configure the model in the LLM API, in JSON.",
            "examples": ["{\"temperature\": 0.5, \"max_tokens\": 50}"],
            "label": "AI model parameters (LLM)"
        },
        "$ai_output": {
            "description": "The output JSON that was received from the LLM API.",
            "examples": [
                "{\"choices\": [{\"text\": \"Quantum computing is a type of computing that harnesses the power of quantum mechanics to perform operations on data.\"}]}"
            ],
            "label": "AI output (LLM)"
        },
        "$ai_output_choices": {
            "description": "The output message choices JSON that was received from the LLM API.",
            "examples": [
                "{\"choices\": [{\"text\": \"Quantum computing is a type of computing that harnesses the power of quantum mechanics to perform operations on data.\"}]}"
            ],
            "label": "AI output (LLM)"
        },
        "$ai_output_cost_usd": {
            "description": "The cost in USD of the output tokens received from the LLM API.",
            "examples": [0.0024],
            "label": "AI output cost USD (LLM)"
        },
        "$ai_output_state": {
            "description": "Output state of the LLM agent.",
            "label": "AI Output State (LLM)"
        },
        "$ai_output_tokens": {
            "description": "The number of tokens in the output from the LLM API.",
            "examples": [23],
            "label": "AI output tokens (LLM)"
        },
        "$ai_parent_id": {
            "description": "The parent span ID of a span or generation, used to group a trace into a tree view.",
            "examples": ["bdf42359-9364-4db7-8958-c001f28c9255"],
            "label": "AI Parent ID (LLM)"
        },
        "$ai_provider": {
            "description": "The provider of the AI model used to generate the output from the LLM API.",
            "examples": ["openai"],
            "label": "AI Provider (LLM)"
        },
        "$ai_reasoning_tokens": {
            "description": "The number of tokens in the reasoning output from the LLM API.",
            "examples": [23],
            "label": "AI reasoning tokens (LLM)"
        },
        "$ai_request_url": {
            "description": "The full URL of the request made to the LLM API.",
            "examples": ["https://api.openai.com/v1/chat/completions"],
            "label": "AI Request URL (LLM)"
        },
        "$ai_span_id": {
            "description": "The unique identifier for a LLM trace, generation, or span.",
            "examples": ["bdf42359-9364-4db7-8958-c001f28c9255"],
            "label": "AI Span ID (LLM)"
        },
        "$ai_span_name": {
            "description": "The name given to this LLM trace, generation, or span.",
            "examples": ["summarize_text"],
            "label": "AI Span Name (LLM)"
        },
        "$ai_stream": {
            "description": "Whether the response from the LLM API was streamed.",
            "examples": ["true", "false"],
            "label": "AI stream (LLM)"
        },
        "$ai_temperature": {
            "description": "The temperature parameter used in the request to the LLM API.",
            "examples": [0.7, 1.0],
            "label": "AI temperature (LLM)"
        },
        "$ai_tools": {
            "description": "The tools available to the LLM.",
            "examples": [
                "[{\"type\": \"function\", \"function\": {\"name\": \"tool1\", \"arguments\": {\"arg1\": \"value1\", \"arg2\": \"value2\"}}}]"
            ],
            "label": "AI tools (LLM)"
        },
        "$ai_total_cost_usd": {
            "description": "The total cost in USD of the request made to the LLM API (input + output costs).",
            "examples": [0.0041],
            "label": "AI total cost USD (LLM)"
        },
        "$ai_trace_id": {
            "description": "The trace ID of the request made to the LLM API. Used to group together multiple generations into a single trace.",
            "examples": ["c9222e05-8708-41b8-98ea-d4a21849e761"],
            "label": "AI Trace ID (LLM)"
        },
        "$anon_distinct_id": {
            "description": "If the user was previously anonymous, their anonymous ID will be set here.",
            "examples": ["16ff262c4301e5-0aa346c03894bc-39667c0e-1aeaa0-16ff262c431767"],
            "label": "Anon distinct ID",
            "system": true
        },
        "$app_build": {
            "description": "The build number for the app. Data from the last time this user was seen.",
            "label": "Latest app build"
        },
        "$app_name": {
            "description": "The name of the app. Data from the last time this user was seen.",
            "label": "Latest app name"
        },
        "$app_namespace": {
            "description": "The namespace of the app as identified in the app store. Data from the last time this user was seen.",
            "examples": ["com.posthog.app"],
            "label": "Latest app namespace"
        },
        "$app_version": {
            "description": "The version of the app. Data from the last time this user was seen.",
            "label": "Latest app version"
        },
        "$autocapture_disabled_server_side": {
            "description": "If autocapture has been disabled server-side.",
            "ignored_in_assistant": true,
            "label": "Autocapture disabled server-side",
            "system": true
        },
        "$browser": {
            "description": "Name of the browser the user has used. Data from the last time this user was seen.",
            "examples": ["Chrome", "Firefox"],
            "label": "Latest browser"
        },
        "$browser_language": {
            "description": "Language.",
            "examples": ["en", "en-US", "cn", "pl-PL"],
            "label": "Browser language"
        },
        "$browser_language_prefix": {
            "description": "Language prefix.",
            "examples": ["en", "ja"],
            "label": "Browser language prefix"
        },
        "$browser_type": {
            "description": "This is only added when posthog-js config.opt_out_useragent_filter is true.",
            "examples": ["browser", "bot"],
            "label": "Browser type"
        },
        "$browser_version": {
            "description": "The version of the browser that was used. Used in combination with Browser. Data from the last time this user was seen.",
            "examples": ["70", "79"],
            "label": "Latest browser version"
        },
        "$capture_failed_request": {
            "description": "",
            "ignored_in_assistant": true,
            "label": "Capture failed request"
        },
        "$ce_version": {
            "description": "",
            "label": "$ce_version",
            "system": true
        },
        "$client_session_initial_pathname": {
            "description": "Path that the user started their session on. (First-touch, session-scoped)",
            "examples": ["/register", "/some/landing/page"],
            "label": "Initial path"
        },
        "$client_session_initial_referring_host": {
            "description": "Host that the user came from. (First-touch, session-scoped)",
            "examples": ["google.com", "facebook.com"],
            "label": "Referrer host"
        },
        "$client_session_initial_utm_campaign": {
            "description": "UTM Campaign. (First-touch, session-scoped)",
            "examples": ["feature launch", "discount"],
            "label": "Initial UTM campaign"
        },
        "$client_session_initial_utm_content": {
            "description": "UTM Source. (First-touch, session-scoped)",
            "examples": ["bottom link", "second button"],
            "label": "Initial UTM source"
        },
        "$client_session_initial_utm_medium": {
            "description": "UTM Medium. (First-touch, session-scoped)",
            "examples": ["Social", "Organic", "Paid", "Email"],
            "label": "Initial UTM medium"
        },
        "$client_session_initial_utm_source": {
            "description": "UTM Source. (First-touch, session-scoped)",
            "examples": ["Google", "Bing", "Twitter", "Facebook"],
            "label": "Initial UTM source"
        },
        "$client_session_initial_utm_term": {
            "description": "UTM term. (First-touch, session-scoped)",
            "examples": ["free goodies"],
            "label": "Initial UTM term"
        },
        "$configured_session_timeout_ms": {
            "description": "Configured session timeout in milliseconds.",
            "examples": ["1800000"],
            "label": "Configured session timeout",
            "system": true
        },
        "$console_log_recording_enabled_server_side": {
            "description": "If console log recording has been enabled server-side.",
            "ignored_in_assistant": true,
            "label": "Console log recording enabled server-side",
            "system": true
        },
        "$copy_type": {
            "description": "Type of copy event.",
            "examples": ["copy", "cut"],
            "ignored_in_assistant": true,
            "label": "Copy type"
        },
        "$creator_event_uuid": {
            "description": "Unique ID for the event, which created this person.",
            "examples": ["16ff262c4301e5-0aa346c03894bc-39667c0e-1aeaa0-16ff262c431767"],
            "label": "Creator event ID"
        },
        "$current_url": {
            "description": "The URL visited at the time of the event. Data from the last time this user was seen.",
            "examples": ["https://example.com/interesting-article?parameter=true"],
            "label": "Latest current URL"
        },
        "$cymbal_errors": {
            "description": "Errors encountered while trying to process exceptions.",
            "label": "Exception processing errors",
            "system": true
        },
        "$dead_click_absolute_delay_ms": {
            "description": "The delay between a click and having seen no activity at all",
            "label": "Dead click absolute delay in milliseconds",
            "system": true
        },
        "$dead_click_absolute_timeout": {
            "description": "whether the dead click autocapture passed the threshold for waiting for any activity",
            "label": "Dead click absolute timeout",
            "system": true
        },
        "$dead_click_event_timestamp": {
            "description": "debug signal time of the event that triggered dead click autocapture",
            "label": "Dead click event timestamp",
            "system": true
        },
        "$dead_click_last_mutation_timestamp": {
            "description": "debug signal time of the last mutation seen by dead click autocapture",
            "label": "Dead click last mutation timestamp",
            "system": true
        },
        "$dead_click_mutation_delay_ms": {
            "description": "The delay between a click and the next mutation event",
            "label": "Dead click mutation delay in milliseconds",
            "system": true
        },
        "$dead_click_mutation_timeout": {
            "description": "whether the dead click autocapture passed the threshold for waiting for a mutation event",
            "label": "Dead click mutation timeout",
            "system": true
        },
        "$dead_click_scroll_delay_ms": {
            "description": "The delay between a click and the next scroll event",
            "label": "Dead click scroll delay in milliseconds",
            "system": true
        },
        "$dead_click_scroll_timeout": {
            "description": "whether the dead click autocapture passed the threshold for waiting for a scroll event",
            "label": "Dead click scroll timeout"
        },
        "$dead_click_selection_changed_delay_ms": {
            "description": "The delay between a click and the next text selection change event",
            "label": "Dead click selection changed delay in milliseconds",
            "system": true
        },
        "$dead_click_selection_changed_timeout": {
            "description": "whether the dead click autocapture passed the threshold for waiting for a text selection change event",
            "label": "Dead click selection changed timeout",
            "system": true
        },
        "$dead_clicks_enabled_server_side": {
            "description": "Whether dead clicks were enabled in remote config",
            "label": "Dead clicks enabled server side",
            "system": true
        },
        "$device": {
            "description": "The mobile device that was used.",
            "examples": ["iPad", "iPhone", "Android"],
            "label": "Device"
        },
        "$device_id": {
            "description": "Unique ID for that device, consistent even if users are logging in/out.",
            "examples": ["16ff262c4301e5-0aa346c03894bc-39667c0e-1aeaa0-16ff262c431767"],
            "label": "Device ID",
            "system": true
        },
        "$device_manufacturer": {
            "description": "The manufacturer of the device",
            "examples": ["Apple", "Samsung"],
            "label": "Device manufacturer"
        },
        "$device_model": {
            "description": "The model of the device that was used.",
            "examples": ["iPhone9,3", "SM-G965W"],
            "label": "Device model"
        },
        "$device_name": {
            "description": "Name of the device",
            "examples": ["iPhone 12 Pro", "Samsung Galaxy 10"],
            "label": "Device name"
        },
        "$device_type": {
            "description": "The type of device that was used. Data from the last time this user was seen.",
            "examples": ["Mobile", "Tablet", "Desktop"],
            "label": "Latest device type"
        },
        "$el_text": {
            "description": "The text of the element that was clicked. Only sent with Autocapture events.",
            "examples": ["Click here!"],
            "label": "Element text"
        },
        "$enabled_feature_flags": {
            "description": "Keys and multivariate values of the feature flags that were active while this event was sent.",
            "examples": ["{\"flag\": \"value\"}"],
            "label": "Enabled feature flags"
        },
        "$event_type": {
            "description": "When the event is an $autocapture event, this specifies what the action was against the element.",
            "examples": ["click", "submit", "change"],
            "label": "Event type"
        },
        "$exception_DOMException_code": {
            "description": "If a DOMException was thrown, it also has a DOMException code.",
            "label": "DOMException code"
        },
        "$exception_capture_enabled_server_side": {
            "description": "Whether exception autocapture was enabled in remote config.",
            "label": "Exception capture enabled server side"
        },
        "$exception_capture_endpoint": {
            "description": "Endpoint used by posthog-js exception autocapture.",
            "examples": ["/e/"],
            "label": "Exception capture endpoint"
        },
        "$exception_capture_endpoint_suffix": {
            "description": "Endpoint used by posthog-js exception autocapture.",
            "examples": ["/e/"],
            "label": "Exception capture endpoint suffix"
        },
        "$exception_colno": {
            "description": "Which column of the line in the exception source that caused the exception.",
            "label": "Exception source column number"
        },
        "$exception_fingerprint": {
            "description": "A fingerprint used to group issues, can be set clientside.",
            "label": "Exception fingerprint"
        },
        "$exception_handled": {
            "description": "Whether this was a handled or unhandled exception.",
            "label": "Exception was handled"
        },
        "$exception_is_synthetic": {
            "description": "Whether this was detected as a synthetic exception.",
            "label": "Exception is synthetic"
        },
        "$exception_issue_id": {
            "description": "The id of the issue the fingerprint was associated with at ingest time.",
            "label": "Exception issue ID"
        },
        "$exception_level": {
            "description": "Exception categorized by severity.",
            "examples": ["error"],
            "label": "Exception level"
        },
        "$exception_lineno": {
            "description": "Which line in the exception source that caused the exception.",
            "label": "Exception source line number"
        },
        "$exception_list": {
            "description": "List of one or more associated exceptions.",
            "label": "Exception list",
            "system": true
        },
        "$exception_message": {
            "description": "The message detected on the error.",
            "label": "Exception message"
        },
        "$exception_personURL": {
            "description": "The PostHog person that experienced the exception.",
            "label": "Exception person URL"
        },
        "$exception_proposed_fingerprint": {
            "description": "The fingerprint used to group issues. Auto generated unless provided clientside.",
            "label": "Exception proposed fingerprint"
        },
        "$exception_source": {
            "description": "The source of the exception.",
            "examples": ["JS file"],
            "label": "Exception source"
        },
        "$exception_stack_trace_raw": {
            "description": "The exceptions stack trace, as a string.",
            "label": "Exception raw stack trace"
        },
        "$exception_type": {
            "description": "Exception categorized into types.",
            "examples": ["Error"],
            "label": "Exception type"
        },
        "$feature_flag": {
            "description": "The feature flag that was called.\n\nWarning! This only works in combination with the $feature_flag_called event. If you want to filter other events, try \"Active feature flags\".",
            "examples": ["beta-feature"],
            "label": "Feature flag"
        },
        "$feature_flag_payload": {
            "description": "The JSON payload that the call to feature flag responded with (if any)",
            "examples": ["{\"variant\": \"test\"}"],
            "label": "Feature flag response payload"
        },
        "$feature_flag_payloads": {
            "description": "Feature flag payloads active in the environment.",
            "ignored_in_assistant": true,
            "label": "Feature flag payloads"
        },
        "$feature_flag_reason": {
            "description": "The reason the feature flag was matched or not matched.",
            "examples": ["Matched condition set 1"],
            "label": "Feature flag evaluation reason"
        },
        "$feature_flag_request_id": {
            "description": "The unique identifier for the request that retrieved this feature flag result.\n\nNote: Primarily used by PostHog support for debugging issues with feature flags.",
            "examples": ["01234567-89ab-cdef-0123-456789abcdef"],
            "label": "Feature flag request ID"
        },
        "$feature_flag_response": {
            "description": "What the call to feature flag responded with.",
            "examples": ["true", "false"],
            "label": "Feature flag response"
        },
        "$feature_flag_version": {
            "description": "The version of the feature flag that was called.",
            "examples": ["3"],
            "label": "Feature flag version"
        },
        "$geoip_accuracy_radius": {
            "description": "Accuracy radius of the location matched to this event's IP address (in kilometers). Data from the last time this user was seen.",
            "examples": ["50"],
            "label": "Latest GeoIP detection accuracy radius"
        },
        "$geoip_city_confidence": {
            "description": "Confidence level of the city matched to this event's IP address. Data from the last time this user was seen.",
            "examples": ["0.5"],
            "label": "Latest GeoIP detection city confidence"
        },
        "$geoip_city_name": {
            "description": "Name of the city matched to this event's IP address. Data from the last time this user was seen.",
            "examples": ["Sydney", "Chennai", "Brooklyn"],
            "label": "Latest city name"
        },
        "$geoip_continent_code": {
            "description": "Code of the continent matched to this event's IP address. Data from the last time this user was seen.",
            "examples": ["OC", "AS", "NA"],
            "label": "Latest continent code"
        },
        "$geoip_continent_name": {
            "description": "Name of the continent matched to this event's IP address. Data from the last time this user was seen.",
            "examples": ["Oceania", "Asia", "North America"],
            "label": "Latest continent name"
        },
        "$geoip_country_code": {
            "description": "Code of the country matched to this event's IP address. Data from the last time this user was seen.",
            "examples": ["AU", "IN", "US"],
            "label": "Latest country code"
        },
        "$geoip_country_confidence": {
            "description": "Confidence level of the country matched to this event's IP address. Data from the last time this user was seen.",
            "examples": ["0.5"],
            "label": "Latest GeoIP detection country confidence"
        },
        "$geoip_country_name": {
            "description": "Name of the country matched to this event's IP address. Data from the last time this user was seen.",
            "examples": ["Australia", "India", "United States"],
            "label": "Latest country name"
        },
        "$geoip_disable": {
            "description": "Whether to skip GeoIP processing for the event. Data from the last time this user was seen.",
            "label": "Latest GeoIP disabled"
        },
        "$geoip_latitude": {
            "description": "Approximated latitude matched to this event's IP address. Data from the last time this user was seen.",
            "examples": ["-33.8591", "13.1337", "40.7"],
            "label": "Latest latitude"
        },
        "$geoip_longitude": {
            "description": "Approximated longitude matched to this event's IP address. Data from the last time this user was seen.",
            "examples": ["151.2", "80.8008", "-73.9"],
            "label": "Latest longitude"
        },
        "$geoip_postal_code": {
            "description": "Approximated postal code matched to this event's IP address. Data from the last time this user was seen.",
            "examples": ["2000", "600004", "11211"],
            "label": "Latest postal code"
        },
        "$geoip_postal_code_confidence": {
            "description": "If provided by the licensed geoip database Data from the last time this user was seen.",
            "examples": ["null", "0.1"],
            "ignored_in_assistant": true,
            "label": "Latest postal code identification confidence score",
            "system": true
        },
        "$geoip_subdivision_1_code": {
            "description": "Code of the subdivision matched to this event's IP address. Data from the last time this user was seen.",
            "examples": ["NSW", "TN", "NY"],
            "label": "Latest subdivision 1 code"
        },
        "$geoip_subdivision_1_confidence": {
            "description": "Confidence level of the first subdivision matched to this event's IP address. Data from the last time this user was seen.",
            "examples": ["0.5"],
            "label": "Latest GeoIP detection subdivision 1 confidence"
        },
        "$geoip_subdivision_1_name": {
            "description": "Name of the subdivision matched to this event's IP address. Data from the last time this user was seen.",
            "examples": ["New South Wales", "Tamil Nadu", "New York"],
            "label": "Latest subdivision 1 name"
        },
        "$geoip_subdivision_2_code": {
            "description": "Code of the second subdivision matched to this event's IP address. Data from the last time this user was seen.",
            "label": "Latest subdivision 2 code"
        },
        "$geoip_subdivision_2_confidence": {
            "description": "If provided by the licensed geoip database Data from the last time this user was seen.",
            "examples": ["null", "0.1"],
            "ignored_in_assistant": true,
            "label": "Latest subdivision 2 identification confidence score",
            "system": true
        },
        "$geoip_subdivision_2_name": {
            "description": "Name of the second subdivision matched to this event's IP address. Data from the last time this user was seen.",
            "label": "Latest subdivision 2 name"
        },
        "$geoip_subdivision_3_code": {
            "description": "Code of the third subdivision matched to this event's IP address. Data from the last time this user was seen.",
            "label": "Latest subdivision 3 code"
        },
        "$geoip_subdivision_3_name": {
            "description": "Name of the third subdivision matched to this event's IP address. Data from the last time this user was seen.",
            "label": "Latest subdivision 3 name"
        },
        "$geoip_time_zone": {
            "description": "Timezone matched to this event's IP address. Data from the last time this user was seen.",
            "examples": ["Australia/Sydney", "Asia/Kolkata", "America/New_York"],
            "label": "Latest timezone"
        },
        "$group_0": {
            "label": "Group 1",
            "system": true
        },
        "$group_1": {
            "label": "Group 2",
            "system": true
        },
        "$group_2": {
            "label": "Group 3",
            "system": true
        },
        "$group_3": {
            "label": "Group 4",
            "system": true
        },
        "$group_4": {
            "label": "Group 5",
            "system": true
        },
        "$group_key": {
            "description": "Specified group key",
            "label": "Group key"
        },
        "$group_set": {
            "description": "Group properties to be set",
            "label": "Group set"
        },
        "$group_type": {
            "description": "Specified group type",
            "label": "Group type"
        },
        "$groups": {
            "description": "Relevant groups",
            "label": "Groups"
        },
        "$had_persisted_distinct_id": {
            "description": "",
            "label": "$had_persisted_distinct_id",
            "system": true
        },
        "$host": {
            "description": "The hostname of the Current URL.",
            "examples": ["example.com", "localhost:8000"],
            "label": "Host"
        },
        "$initial__kx": {
            "description": "Klaviyo Tracking ID Data from the first time this user was seen.",
            "label": "Initial _kx"
        },
        "$initial_app_build": {
            "description": "The build number for the app. Data from the first time this user was seen.",
            "label": "Initial app build"
        },
        "$initial_app_name": {
            "description": "The name of the app. Data from the first time this user was seen.",
            "label": "Initial app name"
        },
        "$initial_app_namespace": {
            "description": "The namespace of the app as identified in the app store. Data from the first time this user was seen.",
            "examples": ["com.posthog.app"],
            "label": "Initial app namespace"
        },
        "$initial_app_version": {
            "description": "The version of the app. Data from the first time this user was seen.",
            "label": "Initial app version"
        },
        "$initial_browser": {
            "description": "Name of the browser the user has used. Data from the first time this user was seen.",
            "examples": ["Chrome", "Firefox"],
            "label": "Initial browser"
        },
        "$initial_browser_version": {
            "description": "The version of the browser that was used. Used in combination with Browser. Data from the first time this user was seen.",
            "examples": ["70", "79"],
            "label": "Initial browser version"
        },
        "$initial_current_url": {
            "description": "The URL visited at the time of the event. Data from the first time this user was seen.",
            "examples": ["https://example.com/interesting-article?parameter=true"],
            "label": "Initial current URL"
        },
        "$initial_dclid": {
            "description": "DoubleClick ID Data from the first time this user was seen.",
            "label": "Initial dclid"
        },
        "$initial_device_type": {
            "description": "The type of device that was used. Data from the first time this user was seen.",
            "examples": ["Mobile", "Tablet", "Desktop"],
            "label": "Initial device type"
        },
        "$initial_epik": {
            "description": "Pinterest Click ID Data from the first time this user was seen.",
            "label": "Initial epik"
        },
        "$initial_fbclid": {
            "description": "Facebook Click ID Data from the first time this user was seen.",
            "label": "Initial fbclid"
        },
        "$initial_gad_source": {
            "description": "Google Ads Source Data from the first time this user was seen.",
            "label": "Initial gad_source"
        },
        "$initial_gbraid": {
            "description": "Google Ads, web to app Data from the first time this user was seen.",
            "label": "Initial gbraid"
        },
        "$initial_gclid": {
            "description": "Google Click ID Data from the first time this user was seen.",
            "label": "Initial gclid"
        },
        "$initial_gclsrc": {
            "description": "Google Click Source Data from the first time this user was seen.",
            "label": "Initial gclsrc"
        },
        "$initial_geoip_accuracy_radius": {
            "description": "Accuracy radius of the location matched to this event's IP address (in kilometers). Data from the first time this user was seen.",
            "examples": ["50"],
            "label": "Initial GeoIP detection accuracy radius"
        },
        "$initial_geoip_city_confidence": {
            "description": "Confidence level of the city matched to this event's IP address. Data from the first time this user was seen.",
            "examples": ["0.5"],
            "label": "Initial GeoIP detection city confidence"
        },
        "$initial_geoip_city_name": {
            "description": "Name of the city matched to this event's IP address. Data from the first time this user was seen.",
            "examples": ["Sydney", "Chennai", "Brooklyn"],
            "label": "Initial city name"
        },
        "$initial_geoip_continent_code": {
            "description": "Code of the continent matched to this event's IP address. Data from the first time this user was seen.",
            "examples": ["OC", "AS", "NA"],
            "label": "Initial continent code"
        },
        "$initial_geoip_continent_name": {
            "description": "Name of the continent matched to this event's IP address. Data from the first time this user was seen.",
            "examples": ["Oceania", "Asia", "North America"],
            "label": "Initial continent name"
        },
        "$initial_geoip_country_code": {
            "description": "Code of the country matched to this event's IP address. Data from the first time this user was seen.",
            "examples": ["AU", "IN", "US"],
            "label": "Initial country code"
        },
        "$initial_geoip_country_confidence": {
            "description": "Confidence level of the country matched to this event's IP address. Data from the first time this user was seen.",
            "examples": ["0.5"],
            "label": "Initial GeoIP detection country confidence"
        },
        "$initial_geoip_country_name": {
            "description": "Name of the country matched to this event's IP address. Data from the first time this user was seen.",
            "examples": ["Australia", "India", "United States"],
            "label": "Initial country name"
        },
        "$initial_geoip_disable": {
            "description": "Whether to skip GeoIP processing for the event. Data from the first time this user was seen.",
            "label": "Initial GeoIP disabled"
        },
        "$initial_geoip_latitude": {
            "description": "Approximated latitude matched to this event's IP address. Data from the first time this user was seen.",
            "examples": ["-33.8591", "13.1337", "40.7"],
            "label": "Initial latitude"
        },
        "$initial_geoip_longitude": {
            "description": "Approximated longitude matched to this event's IP address. Data from the first time this user was seen.",
            "examples": ["151.2", "80.8008", "-73.9"],
            "label": "Initial longitude"
        },
        "$initial_geoip_postal_code": {
            "description": "Approximated postal code matched to this event's IP address. Data from the first time this user was seen.",
            "examples": ["2000", "600004", "11211"],
            "label": "Initial postal code"
        },
        "$initial_geoip_postal_code_confidence": {
            "description": "If provided by the licensed geoip database Data from the first time this user was seen.",
            "examples": ["null", "0.1"],
            "ignored_in_assistant": true,
            "label": "Initial postal code identification confidence score",
            "system": true
        },
        "$initial_geoip_subdivision_1_code": {
            "description": "Code of the subdivision matched to this event's IP address. Data from the first time this user was seen.",
            "examples": ["NSW", "TN", "NY"],
            "label": "Initial subdivision 1 code"
        },
        "$initial_geoip_subdivision_1_confidence": {
            "description": "Confidence level of the first subdivision matched to this event's IP address. Data from the first time this user was seen.",
            "examples": ["0.5"],
            "label": "Initial GeoIP detection subdivision 1 confidence"
        },
        "$initial_geoip_subdivision_1_name": {
            "description": "Name of the subdivision matched to this event's IP address. Data from the first time this user was seen.",
            "examples": ["New South Wales", "Tamil Nadu", "New York"],
            "label": "Initial subdivision 1 name"
        },
        "$initial_geoip_subdivision_2_code": {
            "description": "Code of the second subdivision matched to this event's IP address. Data from the first time this user was seen.",
            "label": "Initial subdivision 2 code"
        },
        "$initial_geoip_subdivision_2_confidence": {
            "description": "If provided by the licensed geoip database Data from the first time this user was seen.",
            "examples": ["null", "0.1"],
            "ignored_in_assistant": true,
            "label": "Initial subdivision 2 identification confidence score",
            "system": true
        },
        "$initial_geoip_subdivision_2_name": {
            "description": "Name of the second subdivision matched to this event's IP address. Data from the first time this user was seen.",
            "label": "Initial subdivision 2 name"
        },
        "$initial_geoip_subdivision_3_code": {
            "description": "Code of the third subdivision matched to this event's IP address. Data from the first time this user was seen.",
            "label": "Initial subdivision 3 code"
        },
        "$initial_geoip_subdivision_3_name": {
            "description": "Name of the third subdivision matched to this event's IP address. Data from the first time this user was seen.",
            "label": "Initial subdivision 3 name"
        },
        "$initial_geoip_time_zone": {
            "description": "Timezone matched to this event's IP address. Data from the first time this user was seen.",
            "examples": ["Australia/Sydney", "Asia/Kolkata", "America/New_York"],
            "label": "Initial timezone"
        },
        "$initial_igshid": {
            "description": "Instagram Share ID Data from the first time this user was seen.",
            "label": "Initial igshid"
        },
        "$initial_irclid": {
            "description": "Impact Click ID Data from the first time this user was seen.",
            "label": "Initial irclid"
        },
        "$initial_li_fat_id": {
            "description": "LinkedIn First-Party Ad Tracking ID Data from the first time this user was seen.",
            "label": "Initial li_fat_id"
        },
        "$initial_mc_cid": {
            "description": "Mailchimp Campaign ID Data from the first time this user was seen.",
            "label": "Initial mc_cid"
        },
        "$initial_msclkid": {
            "description": "Microsoft Click ID Data from the first time this user was seen.",
            "label": "Initial msclkid"
        },
        "$initial_os": {
            "description": "The operating system of the user. Data from the first time this user was seen.",
            "examples": ["Windows", "Mac OS X"],
            "label": "Initial OS"
        },
        "$initial_os_version": {
            "description": "The Operating System version. Data from the first time this user was seen.",
            "examples": ["15.5"],
            "label": "Initial OS version"
        },
        "$initial_pathname": {
            "description": "The path of the Current URL, which means everything in the url after the domain. Data from the first time this user was seen.",
            "examples": ["/pricing", "/about-us/team"],
            "label": "Initial path name"
        },
        "$initial_person_info": {
            "description": "posthog-js initial person information. used in the $set_once flow",
            "label": "Initial person info",
            "system": true
        },
        "$initial_qclid": {
            "description": "Quora Click ID Data from the first time this user was seen.",
            "label": "Initial qclid"
        },
        "$initial_raw_user_agent": {
            "description": "PostHog process information like browser, OS, and device type from the user agent string. This is the raw user agent string. Data from the first time this user was seen.",
            "examples": ["Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko)"],
            "label": "Initial raw user agent"
        },
        "$initial_rdt_cid": {
            "description": "Reddit Click ID Data from the first time this user was seen.",
            "label": "Initial rdt_cid"
        },
        "$initial_referrer": {
            "description": "URL of where the user came from. Data from the first time this user was seen.",
            "examples": ["https://google.com/search?q=posthog&rlz=1C..."],
            "label": "Initial referrer URL"
        },
        "$initial_referring_domain": {
            "description": "Domain of where the user came from. Data from the first time this user was seen.",
            "examples": ["google.com", "facebook.com"],
            "label": "Initial referring domain"
        },
        "$initial_sccid": {
            "description": "Snapchat Click ID Data from the first time this user was seen.",
            "label": "Initial sccid"
        },
        "$initial_screen_height": {
            "description": "The height of the user's entire screen (in pixels). Data from the first time this user was seen.",
            "examples": ["2160", "1050"],
            "label": "Initial screen height"
        },
        "$initial_screen_width": {
            "description": "The width of the user's entire screen (in pixels). Data from the first time this user was seen.",
            "examples": ["1440", "1920"],
            "label": "Initial screen width"
        },
        "$initial_ttclid": {
            "description": "TikTok Click ID Data from the first time this user was seen.",
            "label": "Initial ttclid"
        },
        "$initial_twclid": {
            "description": "Twitter Click ID Data from the first time this user was seen.",
            "label": "Initial twclid"
        },
        "$initial_utm_campaign": {
            "description": "UTM campaign tag. Data from the first time this user was seen.",
            "examples": ["feature launch", "discount"],
            "label": "Initial UTM campaign"
        },
        "$initial_utm_content": {
            "description": "UTM content tag. Data from the first time this user was seen.",
            "examples": ["bottom link", "second button"],
            "label": "Initial UTM content"
        },
        "$initial_utm_medium": {
            "description": "UTM medium tag. Data from the first time this user was seen.",
            "examples": ["Social", "Organic", "Paid", "Email"],
            "label": "Initial UTM medium"
        },
        "$initial_utm_source": {
            "description": "UTM source tag.",
            "examples": ["Google", "Bing", "Twitter", "Facebook"],
            "label": "Initial UTM source"
        },
        "$initial_utm_term": {
            "description": "UTM term tag. Data from the first time this user was seen.",
            "examples": ["free goodies"],
            "label": "Initial UTM term"
        },
        "$initial_viewport_height": {
            "description": "The height of the user's actual browser window (in pixels). Data from the first time this user was seen.",
            "examples": ["2094", "1031"],
            "label": "Initial viewport height"
        },
        "$initial_viewport_width": {
            "description": "The width of the user's actual browser window (in pixels). Data from the first time this user was seen.",
            "examples": ["1439", "1915"],
            "label": "Initial viewport width"
        },
        "$initial_wbraid": {
            "description": "Google Ads, app to web Data from the first time this user was seen.",
            "label": "Initial wbraid"
        },
        "$insert_id": {
            "description": "Unique insert ID for the event.",
            "label": "Insert ID",
            "system": true
        },
        "$ip": {
            "description": "IP address for this user when the event was sent.",
            "examples": ["203.0.113.0"],
            "label": "IP address"
        },
        "$is_emulator": {
            "description": "Indicates whether the app is running on an emulator or a physical device",
            "examples": ["true", "false"],
            "label": "Is emulator"
        },
        "$is_identified": {
            "description": "When the person was identified",
            "label": "Is identified"
        },
        "$is_ios_running_on_mac": {
            "description": "Indicates whether the app is an iOS app running on macOS (Apple Silicon)",
            "examples": ["true", "false"],
            "label": "Is iOS app running on Mac"
        },
        "$is_mac_catalyst_app": {
            "description": "Indicates whether the app is a Mac Catalyst app running on macOS",
            "examples": ["true", "false"],
            "label": "Is Mac Catalyst app"
        },
        "$last_posthog_reset": {
            "description": "The timestamp of the last call to `Reset` in the web SDK. This can be useful for debugging.",
            "ignored_in_assistant": true,
            "label": "Timestamp of last call to `Reset` in the web sdk",
            "system": true
        },
        "$lib": {
            "description": "What library was used to send the event.",
            "examples": ["web", "posthog-ios"],
            "label": "Library"
        },
        "$lib_custom_api_host": {
            "description": "The custom API host used to send the event.",
            "examples": ["https://ph.example.com"],
            "label": "Library custom API host"
        },
        "$lib_rate_limit_remaining_tokens": {
            "description": "Remaining rate limit tokens for the posthog-js library client-side rate limiting implementation.",
            "examples": ["100"],
            "ignored_in_assistant": true,
            "label": "Clientside rate limit remaining tokens"
        },
        "$lib_version": {
            "description": "Version of the library used to send the event. Used in combination with Library.",
            "examples": ["1.0.3"],
            "label": "Library version"
        },
        "$lib_version__major": {
            "description": "Major version of the library used to send the event.",
            "examples": [1],
            "label": "Library version (major)"
        },
        "$lib_version__minor": {
            "description": "Minor version of the library used to send the event.",
            "examples": [0],
            "label": "Library version (minor)"
        },
        "$lib_version__patch": {
            "description": "Patch version of the library used to send the event.",
            "examples": [3],
            "label": "Library version (patch)"
        },
        "$locale": {
            "description": "The locale of the device",
            "examples": ["en-US", "de-DE"],
            "label": "Locale"
        },
        "$network_bluetooth": {
            "description": "Whether the user was on Bluetooth when the event was sent.",
            "examples": ["true", "false"],
            "label": "Network Bluetooth"
        },
        "$network_carrier": {
            "description": "The network carrier that the user is on.",
            "examples": ["cricket", "telecom"],
            "label": "Network carrier"
        },
        "$network_cellular": {
            "description": "Whether the user was on cellular when the event was sent.",
            "examples": ["true", "false"],
            "label": "Network Cellular"
        },
        "$network_wifi": {
            "description": "Whether the user was on WiFi when the event was sent.",
            "examples": ["true", "false"],
            "label": "Network WiFi"
        },
        "$os": {
            "description": "The operating system of the user. Data from the last time this user was seen.",
            "examples": ["Windows", "Mac OS X"],
            "label": "Latest OS"
        },
        "$os_name": {
            "description": "The Operating System name",
            "examples": ["iOS", "Android"],
            "label": "OS name"
        },
        "$os_version": {
            "description": "The Operating System version. Data from the last time this user was seen.",
            "examples": ["15.5"],
            "label": "Latest OS version"
        },
        "$pageview_id": {
            "description": "PostHog's internal ID for matching events to a pageview.",
            "ignored_in_assistant": true,
            "label": "Pageview ID",
            "system": true
        },
        "$pathname": {
            "description": "The path of the Current URL, which means everything in the url after the domain. Data from the last time this user was seen.",
            "examples": ["/pricing", "/about-us/team"],
            "label": "Latest path name"
        },
        "$performance_page_loaded": {
            "description": "The time taken until the browser's page load event in milliseconds.",
            "label": "Page loaded"
        },
        "$performance_raw": {
            "description": "The browser performance entries for navigation (the page), paint, and resources. That were available when the page view event fired",
            "label": "Browser performance",
            "system": true
        },
        "$plugins_deferred": {
            "description": "Plugins to which the event was handed off post-ingestion, e.g. for export (plugin method `onEvent`).",
            "label": "Plugins deferred"
        },
        "$plugins_failed": {
            "description": "Plugins that failed to process the event (plugin method `processEvent`).",
            "label": "Plugins failed"
        },
        "$plugins_succeeded": {
            "description": "Plugins that successfully processed the event, e.g. edited properties (plugin method `processEvent`).",
            "label": "Plugins succeeded"
        },
        "$prev_pageview_duration": {
            "description": "posthog-js adds these to the page leave event, they are used in web analytics calculations",
            "examples": [0],
            "label": "Previous pageview duration"
        },
        "$prev_pageview_id": {
            "description": "posthog-js adds these to the page leave event, they are used in web analytics calculations",
            "examples": ["1"],
            "label": "Previous pageview ID",
            "system": true
        },
        "$prev_pageview_last_content": {
            "description": "posthog-js adds these to the page leave event, they are used in web analytics calculations",
            "examples": [0],
            "label": "Previous pageview last content"
        },
        "$prev_pageview_last_content_percentage": {
            "description": "posthog-js adds these to the page leave event, they are used in web analytics calculations",
            "examples": [0],
            "label": "Previous pageview last content percentage"
        },
        "$prev_pageview_last_scroll": {
            "description": "posthog-js adds these to the page leave event, they are used in web analytics calculations",
            "examples": [0],
            "label": "Previous pageview last scroll"
        },
        "$prev_pageview_last_scroll_percentage": {
            "description": "posthog-js adds these to the page leave event, they are used in web analytics calculations",
            "examples": [0],
            "label": "Previous pageview last scroll percentage"
        },
        "$prev_pageview_max_content": {
            "description": "posthog-js adds these to the page leave event, they are used in web analytics calculations",
            "examples": [0],
            "label": "Previous pageview max content"
        },
        "$prev_pageview_max_content_percentage": {
            "description": "posthog-js adds these to the page leave event, they are used in web analytics calculations",
            "examples": [0],
            "label": "Previous pageview max content percentage"
        },
        "$prev_pageview_max_scroll": {
            "description": "posthog-js adds these to the page leave event, they are used in web analytics calculations",
            "examples": [0],
            "label": "Previous pageview max scroll"
        },
        "$prev_pageview_max_scroll_percentage": {
            "description": "posthog-js adds these to the page leave event, they are used in web analytics calculations",
            "examples": [0],
            "label": "Previous pageview max scroll percentage"
        },
        "$prev_pageview_pathname": {
            "description": "posthog-js adds these to the page leave event, they are used in web analytics calculations",
            "examples": ["/pricing", "/about-us/team"],
            "label": "Previous pageview pathname"
        },
        "$process_person_profile": {
            "description": "The setting from an SDK to control whether an event has person processing enabled",
            "label": "Person profile processing flag",
            "system": true
        },
        "$python_runtime": {
            "description": "The Python runtime that was used to capture the event.",
            "examples": ["CPython"],
            "ignored_in_assistant": true,
            "label": "Python runtime",
            "system": true
        },
        "$python_version": {
            "description": "The Python version that was used to capture the event.",
            "examples": ["3.11.5"],
            "ignored_in_assistant": true,
            "label": "Python version",
            "system": true
        },
        "$raw_user_agent": {
            "description": "PostHog process information like browser, OS, and device type from the user agent string. This is the raw user agent string. Data from the last time this user was seen.",
            "examples": ["Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko)"],
            "label": "Latest raw user agent"
        },
        "$recording_status": {
            "description": "The status of session recording at the time the event was captured",
            "label": "Session recording status",
            "system": true
        },
        "$referrer": {
            "description": "URL of where the user came from. Data from the last time this user was seen.",
            "examples": ["https://google.com/search?q=posthog&rlz=1C..."],
            "label": "Latest referrer URL"
        },
        "$referring_domain": {
            "description": "Domain of where the user came from. Data from the last time this user was seen.",
            "examples": ["google.com", "facebook.com"],
            "label": "Latest referring domain"
        },
        "$replay_minimum_duration": {
            "description": "Config for minimum duration before emitting a session recording.",
            "examples": ["1000"],
            "label": "Replay config - minimum duration",
            "system": true
        },
        "$replay_sample_rate": {
            "description": "Config for sampling rate of session recordings.",
            "examples": ["0.1"],
            "label": "Replay config - sample rate",
            "system": true
        },
        "$replay_script_config": {
            "description": "Sets an alternative recorder script for the web sdk.",
            "examples": ["{\"script\": \"recorder-next\"}"],
            "label": "Replay script config",
            "system": true
        },
        "$screen_density": {
            "description": "The logical density of the display. This is a scaling factor for the Density Independent Pixel unit, where one DIP is one pixel on an approximately 160 dpi screen (for example a 240x320, 1.5\"x2\" screen), providing the baseline of the system's display. Thus on a 160dpi screen this density value will be 1; on a 120 dpi screen it would be .75; etc.",
            "examples": [2.75],
            "label": "Screen density"
        },
        "$screen_height": {
            "description": "The height of the user's entire screen (in pixels). Data from the last time this user was seen.",
            "examples": ["2160", "1050"],
            "label": "Latest screen height"
        },
        "$screen_name": {
            "description": "The name of the active screen.",
            "label": "Screen name"
        },
        "$screen_width": {
            "description": "The width of the user's entire screen (in pixels). Data from the last time this user was seen.",
            "examples": ["1440", "1920"],
            "label": "Latest screen width"
        },
        "$sdk_debug_replay_internal_buffer_length": {
            "description": "Useful for debugging. The internal buffer length for replay.",
            "examples": ["100"],
            "ignored_in_assistant": true,
            "label": "Replay internal buffer length",
            "system": true
        },
        "$sdk_debug_replay_internal_buffer_size": {
            "description": "Useful for debugging. The internal buffer size for replay.",
            "examples": ["100"],
            "ignored_in_assistant": true,
            "label": "Replay internal buffer size",
            "system": true
        },
        "$sdk_debug_retry_queue_size": {
            "description": "Useful for debugging. The size of the retry queue.",
            "examples": ["100"],
            "ignored_in_assistant": true,
            "label": "Retry queue size",
            "system": true
        },
        "$search_engine": {
            "description": "The search engine the user came in from (if any).",
            "examples": ["Google", "DuckDuckGo"],
            "label": "Search engine"
        },
        "$selected_content": {
            "description": "The content that was selected when the user copied or cut.",
            "ignored_in_assistant": true,
            "label": "Copied content"
        },
        "$sent_at": {
            "description": "Time the event was sent to PostHog. Used for correcting the event timestamp when the device clock is off.",
            "examples": ["2023-05-20T15:31:00Z"],
            "label": "Sent at"
        },
        "$sentry_event_id": {
            "description": "This is the Sentry key for an event.",
            "examples": ["byroc2ar9ee4ijqp"],
            "label": "Sentry event ID",
            "system": true
        },
        "$sentry_exception": {
            "description": "Raw Sentry exception data.",
            "label": "Sentry exception",
            "system": true
        },
        "$sentry_exception_message": {
            "label": "Sentry exception message"
        },
        "$sentry_exception_type": {
            "description": "Class name of the exception object.",
            "label": "Sentry exception type"
        },
        "$sentry_tags": {
            "description": "Tags sent to Sentry along with the exception.",
            "label": "Sentry tags"
        },
        "$sentry_url": {
            "description": "Direct link to the exception in Sentry",
            "examples": ["https://sentry.io/..."],
            "label": "Sentry URL"
        },
        "$session_id": {
            "description": "Unique session ID for session recording disambiguation",
            "label": "Session ID",
            "system": true
        },
        "$session_is_sampled": {
            "description": "Whether the session is sampled for session recording.",
            "examples": ["true", "false"],
            "ignored_in_assistant": true,
            "label": "Whether the session is sampled",
            "system": true
        },
        "$session_recording_canvas_recording": {
            "description": "Session recording canvas capture config.",
            "examples": ["{\"enabled\": false}"],
            "label": "Session recording canvas recording",
            "system": true
        },
        "$session_recording_network_payload_capture": {
            "description": "Session recording network payload capture config.",
            "examples": ["{\"recordHeaders\": false}"],
            "label": "Session recording network payload capture",
            "system": true
        },
        "$session_recording_recorder_version_server_side": {
            "description": "The version of the session recording recorder that is enabled server-side.",
            "examples": ["v2"],
            "ignored_in_assistant": true,
            "label": "Session recording recorder version server-side",
            "system": true
        },
        "$session_recording_start_reason": {
            "description": "Reason for starting the session recording. Useful for e.g. if you have sampling enabled and want to see on batch exported events which sessions have recordings available.",
            "examples": ["sampling_override", "recording_initialized", "linked_flag_match"],
            "label": "Session recording start reason",
            "system": true
        },
        "$session_recording_url_trigger_activated_session": {
            "description": "Session recording URL trigger activated session config. Used by posthog-js to track URL activation of session replay.",
            "label": "Session recording URL trigger activated session",
            "system": true
        },
        "$session_recording_url_trigger_status": {
            "description": "Session recording URL trigger status. Used by posthog-js to track URL activation of session replay.",
            "label": "Session recording URL trigger status",
            "system": true
        },
        "$set": {
            "description": "Person properties to be set. Sent as `$set`.",
            "ignored_in_assistant": true,
            "label": "Set person properties"
        },
        "$set_once": {
            "description": "Person properties to be set if not set already (i.e. first-touch). Sent as `$set_once`.",
            "ignored_in_assistant": true,
            "label": "Set person properties once"
        },
        "$survey_completed": {
            "description": "If a survey was fully completed (all questions answered), this will be true.",
            "label": "Survey completed"
        },
        "$survey_id": {
            "description": "The unique identifier for the survey.",
            "label": "Survey ID"
        },
        "$survey_iteration": {
            "description": "The iteration number for the survey.",
            "label": "Survey iteration number"
        },
        "$survey_iteration_start_date": {
            "description": "The start date for the current iteration of the survey.",
            "label": "Survey iteration start date"
        },
        "$survey_name": {
            "description": "The name of the survey.",
            "examples": ["Product Feedback for New Product", "Home page NPS"],
            "label": "Survey name"
        },
        "$survey_partially_completed": {
            "description": "If a survey was partially completed (some questions answered) on dismissal, this will be true.",
            "label": "Survey partially completed"
        },
        "$survey_questions": {
            "description": "The questions asked in the survey.",
            "label": "Survey questions"
        },
        "$survey_response": {
            "description": "The response value for the first question in the survey.",
            "examples": ["I love it!", 5, "['choice 1', 'choice 3']"],
            "label": "Survey response"
        },
        "$survey_submission_id": {
            "description": "The unique identifier for the survey submission. Relevant for partial submissions, as they submit multiple 'survey sent' events. This is what allows us to count them as a single submission.",
            "label": "Survey submission ID"
        },
        "$surveys_activated": {
            "description": "The surveys that were activated for this event.",
            "label": "Surveys activated"
        },
        "$time": {
            "description": "Use the SQL field `timestamp` instead. This field was previously set on some client side events.",
            "examples": ["1681211521.345"],
            "label": "$time (deprecated)",
            "system": true
        },
        "$timestamp": {
            "description": "Use the SQL field `timestamp` instead. This field was previously set on some client side events.",
            "examples": ["2023-05-20T15:30:00Z"],
            "label": "Timestamp (deprecated)",
            "system": true
        },
        "$timezone": {
            "description": "The timezone as reported by the device",
            "label": "Timezone"
        },
        "$touch_x": {
            "description": "The location of a Touch event on the X axis",
            "label": "Touch X"
        },
        "$touch_y": {
            "description": "The location of a Touch event on the Y axis",
            "label": "Touch Y"
        },
        "$user_agent": {
            "description": "Some SDKs (like Android) send the raw user agent as $user_agent.",
            "examples": ["Dalvik/2.1.0 (Linux; U; Android 11; Pixel 3 Build/RQ2A.210505.002)"],
            "label": "Raw user agent"
        },
        "$user_id": {
            "description": "This variable will be set to the distinct ID if you've called `posthog.identify('distinct id')`. If the user is anonymous, it'll be empty.",
            "label": "User ID"
        },
        "$viewport_height": {
            "description": "The height of the user's actual browser window (in pixels). Data from the last time this user was seen.",
            "examples": ["2094", "1031"],
            "label": "Latest viewport height"
        },
        "$viewport_width": {
            "description": "The width of the user's actual browser window (in pixels). Data from the last time this user was seen.",
            "examples": ["1439", "1915"],
            "label": "Latest viewport width"
        },
        "$web_vitals_CLS_event": {
            "label": "Web vitals CLS measure event details"
        },
        "$web_vitals_CLS_value": {
            "label": "Web vitals CLS value"
        },
        "$web_vitals_FCP_event": {
            "label": "Web vitals FCP measure event details"
        },
        "$web_vitals_FCP_value": {
            "label": "Web vitals FCP value"
        },
        "$web_vitals_INP_event": {
            "label": "Web vitals INP measure event details"
        },
        "$web_vitals_INP_value": {
            "label": "Web vitals INP value"
        },
        "$web_vitals_LCP_event": {
            "label": "Web vitals LCP measure event details"
        },
        "$web_vitals_LCP_value": {
            "label": "Web vitals LCP value"
        },
        "$web_vitals_allowed_metrics": {
            "description": "Allowed web vitals metrics config.",
            "examples": ["[\"LCP\", \"CLS\"]"],
            "label": "Web vitals allowed metrics",
            "system": true
        },
        "$web_vitals_enabled_server_side": {
            "description": "Whether web vitals was enabled in remote config",
            "label": "Web vitals enabled server side"
        },
        "$window_id": {
            "description": "Unique window ID for session recording disambiguation",
            "label": "Window ID",
            "system": true
        },
        "_kx": {
            "description": "Klaviyo Tracking ID Data from the last time this user was seen.",
            "label": "Latest _kx"
        },
        "build": {
            "description": "The build number for the app",
            "examples": ["1"],
            "label": "App build"
        },
        "currency": {
            "description": "The currency code associated with the event.",
            "examples": ["USD", "EUR", "GBP", "CAD"],
            "label": "Currency"
        },
        "dclid": {
            "description": "DoubleClick ID Data from the last time this user was seen.",
            "label": "Latest dclid"
        },
        "distinct_id": {
            "description": "The current distinct ID of the user.",
            "examples": ["16ff262c4301e5-0aa346c03894bc-39667c0e-1aeaa0-16ff262c431767"],
            "label": "Distinct ID"
        },
        "epik": {
            "description": "Pinterest Click ID Data from the last time this user was seen.",
            "label": "Latest epik"
        },
        "fbclid": {
            "description": "Facebook Click ID Data from the last time this user was seen.",
            "label": "Latest fbclid"
        },
        "from_background": {
            "description": "Whether the app was opened for the first time or from the background.",
            "examples": ["true", "false"],
            "label": "From background"
        },
        "gad_source": {
            "description": "Google Ads Source Data from the last time this user was seen.",
            "label": "Latest gad_source"
        },
        "gbraid": {
            "description": "Google Ads, web to app Data from the last time this user was seen.",
            "label": "Latest gbraid"
        },
        "gclid": {
            "description": "Google Click ID Data from the last time this user was seen.",
            "label": "Latest gclid"
        },
        "gclsrc": {
            "description": "Google Click Source Data from the last time this user was seen.",
            "label": "Latest gclsrc"
        },
        "igshid": {
            "description": "Instagram Share ID Data from the last time this user was seen.",
            "label": "Latest igshid"
        },
        "irclid": {
            "description": "Impact Click ID Data from the last time this user was seen.",
            "label": "Latest irclid"
        },
        "li_fat_id": {
            "description": "LinkedIn First-Party Ad Tracking ID Data from the last time this user was seen.",
            "label": "Latest li_fat_id"
        },
        "mc_cid": {
            "description": "Mailchimp Campaign ID Data from the last time this user was seen.",
            "label": "Latest mc_cid"
        },
        "msclkid": {
            "description": "Microsoft Click ID Data from the last time this user was seen.",
            "label": "Latest msclkid"
        },
        "previous_build": {
            "description": "The previous build number for the app",
            "examples": ["1"],
            "label": "App previous build"
        },
        "previous_version": {
            "description": "The previous version of the app",
            "examples": ["1.0.0"],
            "label": "App previous version"
        },
        "qclid": {
            "description": "Quora Click ID Data from the last time this user was seen.",
            "label": "Latest qclid"
        },
        "rdt_cid": {
            "description": "Reddit Click ID Data from the last time this user was seen.",
            "label": "Latest rdt_cid"
        },
        "referring_application": {
            "description": "The namespace of the app that made the request.",
            "examples": ["com.posthog.app"],
            "label": "Referrer application"
        },
        "revenue": {
            "description": "The revenue associated with the event. By default, this is in USD, but the currency property can be used to specify a different currency.",
            "examples": [10.0],
            "label": "Revenue"
        },
        "sccid": {
            "description": "Snapchat Click ID Data from the last time this user was seen.",
            "label": "Latest sccid"
        },
        "token": {
            "description": "Token used for authentication.",
            "examples": ["ph_abcdefg"],
            "ignored_in_assistant": true,
            "label": "Token"
        },
        "ttclid": {
            "description": "TikTok Click ID Data from the last time this user was seen.",
            "label": "Latest ttclid"
        },
        "twclid": {
            "description": "Twitter Click ID Data from the last time this user was seen.",
            "label": "Latest twclid"
        },
        "url": {
            "description": "The deep link URL that the app was opened from.",
            "examples": ["https://open.my.app"],
            "label": "URL"
        },
        "utm_campaign": {
            "description": "UTM campaign tag. Data from the last time this user was seen.",
            "examples": ["feature launch", "discount"],
            "label": "Latest UTM campaign"
        },
        "utm_content": {
            "description": "UTM content tag. Data from the last time this user was seen.",
            "examples": ["bottom link", "second button"],
            "label": "Latest UTM content"
        },
        "utm_medium": {
            "description": "UTM medium tag. Data from the last time this user was seen.",
            "examples": ["Social", "Organic", "Paid", "Email"],
            "label": "Latest UTM medium"
        },
        "utm_name": {
            "description": "UTM campaign tag, sent via Segment.",
            "examples": ["feature launch", "discount"],
            "label": "UTM name"
        },
        "utm_source": {
            "description": "UTM source tag. Data from the last time this user was seen.",
            "examples": ["Google", "Bing", "Twitter", "Facebook"],
            "label": "Latest UTM source"
        },
        "utm_term": {
            "description": "UTM term tag. Data from the last time this user was seen.",
            "examples": ["free goodies"],
            "label": "Latest UTM term"
        },
        "version": {
            "description": "The version of the app",
            "examples": ["1.0.0"],
            "label": "App version"
        },
        "wbraid": {
            "description": "Google Ads, app to web Data from the last time this user was seen.",
            "label": "Latest wbraid"
        }
    },
    "replay": {
        "click_count": {
            "description": "Number of clicks during the session",
            "label": "Clicks"
        },
        "console_error_count": {
            "description": "Number of console errors during the session",
            "label": "Errors"
        },
        "console_log_level": {
            "description": "Level of console logs captured",
            "examples": ["info", "warn", "error"],
            "label": "Log level"
        },
        "console_log_query": {
            "description": "Text of console logs captured",
            "label": "Console log"
        },
        "keypress_count": {
            "description": "Number of key presses during the session",
            "label": "Key presses"
        },
        "snapshot_source": {
            "description": "Platform the session was recorded on",
            "examples": ["web", "mobile"],
            "label": "Platform"
        },
        "visited_page": {
            "description": "URL a user visited during their session",
            "label": "Visited page"
        }
    },
    "session_properties": {
        "$autocapture_count": {
            "description": "The number of autocapture events in this session.",
            "examples": ["123"],
            "label": "Autocapture count",
            "type": "Numeric"
        },
        "$channel_type": {
            "description": "What type of acquisition channel this traffic came from.",
            "examples": ["Paid Search", "Organic Video", "Direct"],
            "label": "Channel type",
            "type": "String"
        },
        "$end_current_url": {
            "description": "The last URL visited in this session.",
            "examples": ["https://example.com/interesting-article?parameter=true"],
            "label": "End URL",
            "type": "String"
        },
        "$end_pathname": {
            "description": "The last pathname visited in this session.",
            "examples": ["/interesting-article?parameter=true"],
            "label": "End pathname",
            "type": "String"
        },
        "$end_timestamp": {
            "description": "The timestamp of the last event from this session.",
            "examples": ["2023-05-20T16:30:00Z"],
            "label": "End timestamp",
            "type": "DateTime"
        },
        "$entry__kx": {
            "description": "Klaviyo Tracking ID Data from the first event in this session.",
            "label": "Entry _kx"
        },
        "$entry_current_url": {
            "description": "The first URL visited in this session.",
            "examples": ["https://example.com/interesting-article?parameter=true"],
            "label": "Entry URL",
            "type": "String"
        },
        "$entry_dclid": {
            "description": "DoubleClick ID Data from the first event in this session.",
            "label": "Entry dclid"
        },
        "$entry_epik": {
            "description": "Pinterest Click ID Data from the first event in this session.",
            "label": "Entry epik"
        },
        "$entry_fbclid": {
            "description": "Facebook Click ID Data from the first event in this session.",
            "label": "Entry fbclid"
        },
        "$entry_gad_source": {
            "description": "Google Ads Source Data from the first event in this session.",
            "label": "Entry gad_source"
        },
        "$entry_gbraid": {
            "description": "Google Ads, web to app Data from the first event in this session.",
            "label": "Entry gbraid"
        },
        "$entry_gclid": {
            "description": "Google Click ID Data from the first event in this session.",
            "label": "Entry gclid"
        },
        "$entry_gclsrc": {
            "description": "Google Click Source Data from the first event in this session.",
            "label": "Entry gclsrc"
        },
        "$entry_igshid": {
            "description": "Instagram Share ID Data from the first event in this session.",
            "label": "Entry igshid"
        },
        "$entry_irclid": {
            "description": "Impact Click ID Data from the first event in this session.",
            "label": "Entry irclid"
        },
        "$entry_li_fat_id": {
            "description": "LinkedIn First-Party Ad Tracking ID Data from the first event in this session.",
            "label": "Entry li_fat_id"
        },
        "$entry_mc_cid": {
            "description": "Mailchimp Campaign ID Data from the first event in this session.",
            "label": "Entry mc_cid"
        },
        "$entry_msclkid": {
            "description": "Microsoft Click ID Data from the first event in this session.",
            "label": "Entry msclkid"
        },
        "$entry_pathname": {
            "description": "The first pathname visited in this session.",
            "examples": ["/interesting-article?parameter=true"],
            "label": "Entry pathname",
            "type": "String"
        },
        "$entry_qclid": {
            "description": "Quora Click ID Data from the first event in this session.",
            "label": "Entry qclid"
        },
        "$entry_rdt_cid": {
            "description": "Reddit Click ID Data from the first event in this session.",
            "label": "Entry rdt_cid"
        },
        "$entry_referring_domain": {
            "description": "Domain of where the user came from. Data from the first event in this session.",
            "examples": ["google.com", "facebook.com"],
            "label": "Entry referring domain"
        },
        "$entry_sccid": {
            "description": "Snapchat Click ID Data from the first event in this session.",
            "label": "Entry sccid"
        },
        "$entry_ttclid": {
            "description": "TikTok Click ID Data from the first event in this session.",
            "label": "Entry ttclid"
        },
        "$entry_twclid": {
            "description": "Twitter Click ID Data from the first event in this session.",
            "label": "Entry twclid"
        },
        "$entry_utm_campaign": {
            "description": "UTM campaign tag. Data from the first event in this session.",
            "examples": ["feature launch", "discount"],
            "label": "Entry UTM campaign"
        },
        "$entry_utm_content": {
            "description": "UTM content tag. Data from the first event in this session.",
            "examples": ["bottom link", "second button"],
            "label": "Entry UTM content"
        },
        "$entry_utm_medium": {
            "description": "UTM medium tag. Data from the first event in this session.",
            "examples": ["Social", "Organic", "Paid", "Email"],
            "label": "Entry UTM medium"
        },
        "$entry_utm_source": {
            "description": "UTM source tag. Data from the first event in this session.",
            "examples": ["Google", "Bing", "Twitter", "Facebook"],
            "label": "Entry UTM source"
        },
        "$entry_utm_term": {
            "description": "UTM term tag. Data from the first event in this session.",
            "examples": ["free goodies"],
            "label": "Entry UTM term"
        },
        "$entry_wbraid": {
            "description": "Google Ads, app to web Data from the first event in this session.",
            "label": "Entry wbraid"
        },
        "$exit_current_url": {
            "description": "The last URL visited in this session. (deprecated, use $end_current_url).",
            "examples": ["https://example.com/interesting-article?parameter=true"],
            "label": "Exit URL",
            "type": "String"
        },
        "$exit_pathname": {
            "description": "The last pathname visited in this session. (deprecated, use $end_pathname).",
            "examples": ["/interesting-article?parameter=true"],
            "label": "Exit pathname",
            "type": "String"
        },
        "$is_bounce": {
            "description": "Whether the session was a bounce.",
            "examples": ["true", "false"],
            "label": "Is bounce",
            "type": "Boolean"
        },
        "$last_external_click_url": {
            "description": "The last external URL clicked in this session.",
            "examples": ["https://example.com/interesting-article?parameter=true"],
            "label": "Last external click URL"
        },
        "$pageview_count": {
            "description": "The number of page view events in this session.",
            "examples": ["123"],
            "label": "Pageview count",
            "type": "Numeric"
        },
        "$screen_count": {
            "description": "The number of screen events in this session.",
            "examples": ["123"],
            "label": "Screen count",
            "type": "Numeric"
        },
        "$session_duration": {
            "description": "The duration of the session being tracked. Learn more about how PostHog tracks sessions in [our documentation](https://posthog.com/docs/user-guides/sessions).\n\nNote: If the duration is formatted as a single number (not `HH:MM:SS`), it's in seconds.",
            "examples": ["30", "146", "2"],
            "label": "Session duration",
            "type": "Numeric"
        },
        "$start_timestamp": {
            "description": "The timestamp of the first event from this session.",
            "examples": ["2023-05-20T15:30:00Z"],
            "label": "Start timestamp",
            "type": "DateTime"
        },
        "$vitals_lcp": {
            "description": "The time it took for the Largest Contentful Paint on the page. This captures the perceived load time of the page, and measure how long it took for the main content of the page to be visible to users.",
            "examples": ["2.2"],
            "label": "Web vitals LCP"
        }
    }
}
