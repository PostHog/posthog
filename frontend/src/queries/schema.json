{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "definitions": {
        "ActionsNode": {
            "additionalProperties": false,
            "properties": {
                "custom_name": {
                    "type": "string"
                },
                "fixedProperties": {
                    "description": "Fixed properties in the query, can't be edited in the interface (e.g. scoping down by person)",
                    "items": {
                        "$ref": "#/definitions/AnyPropertyFilter"
                    },
                    "type": "array"
                },
                "id": {
                    "type": "integer"
                },
                "kind": {
                    "const": "ActionsNode",
                    "type": "string"
                },
                "math": {
                    "$ref": "#/definitions/MathType"
                },
                "math_group_type_index": {
                    "enum": [0, 1, 2, 3, 4],
                    "type": "number"
                },
                "math_hogql": {
                    "type": "string"
                },
                "math_property": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "properties": {
                    "description": "Properties configurable in the interface",
                    "items": {
                        "$ref": "#/definitions/AnyPropertyFilter"
                    },
                    "type": "array"
                },
                "response": {
                    "type": "object"
                }
            },
            "required": ["id", "kind"],
            "type": "object"
        },
        "ActorsQuery": {
            "additionalProperties": false,
            "properties": {
                "fixedProperties": {
                    "items": {
                        "$ref": "#/definitions/AnyPropertyFilter"
                    },
                    "type": "array"
                },
                "kind": {
                    "const": "ActorsQuery",
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "modifiers": {
                    "$ref": "#/definitions/HogQLQueryModifiers",
                    "description": "Modifiers used when performing the query"
                },
                "offset": {
                    "type": "integer"
                },
                "orderBy": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "properties": {
                    "items": {
                        "$ref": "#/definitions/AnyPropertyFilter"
                    },
                    "type": "array"
                },
                "response": {
                    "$ref": "#/definitions/ActorsQueryResponse"
                },
                "search": {
                    "type": "string"
                },
                "select": {
                    "items": {
                        "$ref": "#/definitions/HogQLExpression"
                    },
                    "type": "array"
                },
                "source": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/InsightActorsQuery"
                        },
                        {
                            "$ref": "#/definitions/FunnelsActorsQuery"
                        },
                        {
                            "$ref": "#/definitions/FunnelCorrelationActorsQuery"
                        },
                        {
                            "$ref": "#/definitions/HogQLQuery"
                        }
                    ]
                }
            },
            "required": ["kind"],
            "type": "object"
        },
        "ActorsQueryResponse": {
            "additionalProperties": false,
            "properties": {
                "columns": {
                    "items": {},
                    "type": "array"
                },
                "error": {
                    "description": "Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",
                    "type": "string"
                },
                "hasMore": {
                    "type": "boolean"
                },
                "hogql": {
                    "description": "Generated HogQL query.",
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "missing_actors_count": {
                    "type": "integer"
                },
                "modifiers": {
                    "$ref": "#/definitions/HogQLQueryModifiers",
                    "description": "Modifiers used when performing the query"
                },
                "offset": {
                    "type": "integer"
                },
                "results": {
                    "items": {
                        "items": {},
                        "type": "array"
                    },
                    "type": "array"
                },
                "timings": {
                    "description": "Measured timings for different parts of the query generation process",
                    "items": {
                        "$ref": "#/definitions/QueryTiming"
                    },
                    "type": "array"
                },
                "types": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": ["columns", "hogql", "limit", "offset", "results", "types"],
            "type": "object"
        },
        "AggregationAxisFormat": {
            "enum": ["numeric", "duration", "duration_ms", "percentage", "percentage_scaled"],
            "type": "string"
        },
        "AnyDataNode": {
            "anyOf": [
                {
                    "$ref": "#/definitions/EventsNode"
                },
                {
                    "$ref": "#/definitions/ActionsNode"
                },
                {
                    "$ref": "#/definitions/PersonsNode"
                },
                {
                    "$ref": "#/definitions/TimeToSeeDataSessionsQuery"
                },
                {
                    "$ref": "#/definitions/EventsQuery"
                },
                {
                    "$ref": "#/definitions/ActorsQuery"
                },
                {
                    "$ref": "#/definitions/InsightActorsQuery"
                },
                {
                    "$ref": "#/definitions/InsightActorsQueryOptions"
                },
                {
                    "$ref": "#/definitions/SessionsTimelineQuery"
                },
                {
                    "$ref": "#/definitions/HogQLQuery"
                },
                {
                    "$ref": "#/definitions/HogQLMetadata"
                },
                {
                    "$ref": "#/definitions/HogQLAutocomplete"
                },
                {
                    "$ref": "#/definitions/WebOverviewQuery"
                },
                {
                    "$ref": "#/definitions/WebStatsTableQuery"
                },
                {
                    "$ref": "#/definitions/WebTopClicksQuery"
                }
            ]
        },
        "AnyEntityNode": {
            "anyOf": [
                {
                    "$ref": "#/definitions/EventsNode"
                },
                {
                    "$ref": "#/definitions/ActionsNode"
                },
                {
                    "$ref": "#/definitions/DataWarehouseNode"
                }
            ]
        },
        "AnyPropertyFilter": {
            "anyOf": [
                {
                    "$ref": "#/definitions/EventPropertyFilter"
                },
                {
                    "$ref": "#/definitions/PersonPropertyFilter"
                },
                {
                    "$ref": "#/definitions/ElementPropertyFilter"
                },
                {
                    "$ref": "#/definitions/SessionPropertyFilter"
                },
                {
                    "$ref": "#/definitions/CohortPropertyFilter"
                },
                {
                    "$ref": "#/definitions/RecordingDurationFilter"
                },
                {
                    "$ref": "#/definitions/GroupPropertyFilter"
                },
                {
                    "$ref": "#/definitions/FeaturePropertyFilter"
                },
                {
                    "$ref": "#/definitions/HogQLPropertyFilter"
                },
                {
                    "$ref": "#/definitions/EmptyPropertyFilter"
                },
                {
                    "$ref": "#/definitions/DataWarehousePropertyFilter"
                },
                {
                    "$ref": "#/definitions/DataWarehousePersonPropertyFilter"
                }
            ]
        },
        "AnyResponseType": {
            "anyOf": [
                {
                    "type": "object"
                },
                {
                    "$ref": "#/definitions/HogQLQueryResponse"
                },
                {
                    "$ref": "#/definitions/HogQLMetadataResponse"
                },
                {
                    "$ref": "#/definitions/HogQLAutocompleteResponse"
                },
                {
                    "type": "object"
                },
                {
                    "not": {}
                },
                {
                    "$ref": "#/definitions/EventsQueryResponse"
                }
            ]
        },
        "AutocompleteCompletionItem": {
            "additionalProperties": false,
            "properties": {
                "detail": {
                    "description": "A human-readable string with additional information about this item, like type or symbol information.",
                    "type": "string"
                },
                "documentation": {
                    "description": "A human-readable string that represents a doc-comment.",
                    "type": "string"
                },
                "insertText": {
                    "description": "A string or snippet that should be inserted in a document when selecting this completion.",
                    "type": "string"
                },
                "kind": {
                    "description": "The kind of this completion item. Based on the kind an icon is chosen by the editor.",
                    "enum": [
                        "Method",
                        "Function",
                        "Constructor",
                        "Field",
                        "Variable",
                        "Class",
                        "Struct",
                        "Interface",
                        "Module",
                        "Property",
                        "Event",
                        "Operator",
                        "Unit",
                        "Value",
                        "Constant",
                        "Enum",
                        "EnumMember",
                        "Keyword",
                        "Text",
                        "Color",
                        "File",
                        "Reference",
                        "Customcolor",
                        "Folder",
                        "TypeParameter",
                        "User",
                        "Issue",
                        "Snippet"
                    ],
                    "type": "string"
                },
                "label": {
                    "description": "The label of this completion item. By default this is also the text that is inserted when selecting this completion.",
                    "type": "string"
                }
            },
            "required": ["label", "insertText", "kind"],
            "type": "object"
        },
        "BaseMathType": {
            "enum": ["total", "dau", "weekly_active", "monthly_active", "unique_session"],
            "type": "string"
        },
        "BinCountValue": {
            "anyOf": [
                {
                    "type": "number"
                },
                {
                    "const": "auto",
                    "type": "string"
                }
            ]
        },
        "Breakdown": {
            "additionalProperties": false,
            "properties": {
                "normalize_url": {
                    "type": "boolean"
                },
                "property": {
                    "type": ["string", "number"]
                },
                "type": {
                    "$ref": "#/definitions/BreakdownType"
                }
            },
            "required": ["property", "type"],
            "type": "object"
        },
        "BreakdownAttributionType": {
            "enum": ["first_touch", "last_touch", "all_events", "step"],
            "type": "string"
        },
        "BreakdownFilter": {
            "additionalProperties": false,
            "properties": {
                "breakdown": {
                    "$ref": "#/definitions/BreakdownKeyType"
                },
                "breakdown_group_type_index": {
                    "anyOf": [
                        {
                            "type": "integer"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "breakdown_hide_other_aggregation": {
                    "type": ["boolean", "null"]
                },
                "breakdown_histogram_bin_count": {
                    "type": "integer"
                },
                "breakdown_limit": {
                    "type": "integer"
                },
                "breakdown_normalize_url": {
                    "type": "boolean"
                },
                "breakdown_type": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/BreakdownType"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "breakdowns": {
                    "items": {
                        "$ref": "#/definitions/Breakdown"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "BreakdownKeyType": {
            "anyOf": [
                {
                    "type": "string"
                },
                {
                    "type": "number"
                },
                {
                    "items": {
                        "type": ["string", "number"]
                    },
                    "type": "array"
                },
                {
                    "type": "null"
                }
            ]
        },
        "BreakdownType": {
            "enum": ["cohort", "person", "event", "group", "session", "hogql", "data_warehouse"],
            "type": "string"
        },
        "BreakdownValueInt": {
            "type": "integer"
        },
        "CacheMissResponse": {
            "additionalProperties": false,
            "properties": {
                "cache_key": {
                    "type": ["string", "null"]
                }
            },
            "required": ["cache_key"],
            "type": "object"
        },
        "CachedActorsQueryResponse": {
            "additionalProperties": false,
            "properties": {
                "cache_key": {
                    "type": "string"
                },
                "columns": {
                    "items": {},
                    "type": "array"
                },
                "error": {
                    "description": "Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",
                    "type": "string"
                },
                "hasMore": {
                    "type": "boolean"
                },
                "hogql": {
                    "description": "Generated HogQL query.",
                    "type": "string"
                },
                "is_cached": {
                    "type": "boolean"
                },
                "last_refresh": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "missing_actors_count": {
                    "type": "integer"
                },
                "modifiers": {
                    "$ref": "#/definitions/HogQLQueryModifiers",
                    "description": "Modifiers used when performing the query"
                },
                "next_allowed_client_refresh": {
                    "type": "string"
                },
                "offset": {
                    "type": "integer"
                },
                "results": {
                    "items": {
                        "items": {},
                        "type": "array"
                    },
                    "type": "array"
                },
                "timezone": {
                    "type": "string"
                },
                "timings": {
                    "description": "Measured timings for different parts of the query generation process",
                    "items": {
                        "$ref": "#/definitions/QueryTiming"
                    },
                    "type": "array"
                },
                "types": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "cache_key",
                "columns",
                "hogql",
                "is_cached",
                "last_refresh",
                "limit",
                "next_allowed_client_refresh",
                "offset",
                "results",
                "timezone",
                "types"
            ],
            "type": "object"
        },
        "CachedEventsQueryResponse": {
            "additionalProperties": false,
            "properties": {
                "cache_key": {
                    "type": "string"
                },
                "columns": {
                    "items": {},
                    "type": "array"
                },
                "error": {
                    "description": "Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",
                    "type": "string"
                },
                "hasMore": {
                    "type": "boolean"
                },
                "hogql": {
                    "description": "Generated HogQL query.",
                    "type": "string"
                },
                "is_cached": {
                    "type": "boolean"
                },
                "last_refresh": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "modifiers": {
                    "$ref": "#/definitions/HogQLQueryModifiers",
                    "description": "Modifiers used when performing the query"
                },
                "next_allowed_client_refresh": {
                    "type": "string"
                },
                "offset": {
                    "type": "integer"
                },
                "results": {
                    "items": {
                        "items": {},
                        "type": "array"
                    },
                    "type": "array"
                },
                "timezone": {
                    "type": "string"
                },
                "timings": {
                    "description": "Measured timings for different parts of the query generation process",
                    "items": {
                        "$ref": "#/definitions/QueryTiming"
                    },
                    "type": "array"
                },
                "types": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "cache_key",
                "columns",
                "hogql",
                "is_cached",
                "last_refresh",
                "next_allowed_client_refresh",
                "results",
                "timezone",
                "types"
            ],
            "type": "object"
        },
        "CachedFunnelCorrelationResponse": {
            "additionalProperties": false,
            "properties": {
                "cache_key": {
                    "type": "string"
                },
                "columns": {
                    "items": {},
                    "type": "array"
                },
                "error": {
                    "description": "Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",
                    "type": "string"
                },
                "hasMore": {
                    "type": "boolean"
                },
                "hogql": {
                    "description": "Generated HogQL query.",
                    "type": "string"
                },
                "is_cached": {
                    "type": "boolean"
                },
                "last_refresh": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "modifiers": {
                    "$ref": "#/definitions/HogQLQueryModifiers",
                    "description": "Modifiers used when performing the query"
                },
                "next_allowed_client_refresh": {
                    "type": "string"
                },
                "offset": {
                    "type": "integer"
                },
                "results": {
                    "$ref": "#/definitions/FunnelCorrelationResult"
                },
                "timezone": {
                    "type": "string"
                },
                "timings": {
                    "description": "Measured timings for different parts of the query generation process",
                    "items": {
                        "$ref": "#/definitions/QueryTiming"
                    },
                    "type": "array"
                },
                "types": {
                    "items": {},
                    "type": "array"
                }
            },
            "required": [
                "cache_key",
                "is_cached",
                "last_refresh",
                "next_allowed_client_refresh",
                "results",
                "timezone"
            ],
            "type": "object"
        },
        "CachedFunnelsQueryResponse": {
            "additionalProperties": false,
            "properties": {
                "cache_key": {
                    "type": "string"
                },
                "error": {
                    "description": "Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",
                    "type": "string"
                },
                "hogql": {
                    "description": "Generated HogQL query.",
                    "type": "string"
                },
                "is_cached": {
                    "type": "boolean"
                },
                "last_refresh": {
                    "type": "string"
                },
                "modifiers": {
                    "$ref": "#/definitions/HogQLQueryModifiers",
                    "description": "Modifiers used when performing the query"
                },
                "next_allowed_client_refresh": {
                    "type": "string"
                },
                "results": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/FunnelStepsResults"
                        },
                        {
                            "$ref": "#/definitions/FunnelStepsBreakdownResults"
                        },
                        {
                            "$ref": "#/definitions/FunnelTimeToConvertResults"
                        },
                        {
                            "$ref": "#/definitions/FunnelTrendsResults"
                        }
                    ]
                },
                "timezone": {
                    "type": "string"
                },
                "timings": {
                    "description": "Measured timings for different parts of the query generation process",
                    "items": {
                        "$ref": "#/definitions/QueryTiming"
                    },
                    "type": "array"
                }
            },
            "required": [
                "cache_key",
                "is_cached",
                "last_refresh",
                "next_allowed_client_refresh",
                "results",
                "timezone"
            ],
            "type": "object"
        },
        "CachedHogQLQueryResponse": {
            "additionalProperties": false,
            "properties": {
                "cache_key": {
                    "type": "string"
                },
                "clickhouse": {
                    "description": "Executed ClickHouse query",
                    "type": "string"
                },
                "columns": {
                    "description": "Returned columns",
                    "items": {},
                    "type": "array"
                },
                "error": {
                    "description": "Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",
                    "type": "string"
                },
                "explain": {
                    "description": "Query explanation output",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "hasMore": {
                    "type": "boolean"
                },
                "hogql": {
                    "description": "Generated HogQL query.",
                    "type": "string"
                },
                "is_cached": {
                    "type": "boolean"
                },
                "last_refresh": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "metadata": {
                    "$ref": "#/definitions/HogQLMetadataResponse",
                    "description": "Query metadata output"
                },
                "modifiers": {
                    "$ref": "#/definitions/HogQLQueryModifiers",
                    "description": "Modifiers used when performing the query"
                },
                "next_allowed_client_refresh": {
                    "type": "string"
                },
                "offset": {
                    "type": "integer"
                },
                "query": {
                    "description": "Input query string",
                    "type": "string"
                },
                "results": {
                    "items": {},
                    "type": "array"
                },
                "timezone": {
                    "type": "string"
                },
                "timings": {
                    "description": "Measured timings for different parts of the query generation process",
                    "items": {
                        "$ref": "#/definitions/QueryTiming"
                    },
                    "type": "array"
                },
                "types": {
                    "description": "Types of returned columns",
                    "items": {},
                    "type": "array"
                }
            },
            "required": [
                "cache_key",
                "is_cached",
                "last_refresh",
                "next_allowed_client_refresh",
                "results",
                "timezone"
            ],
            "type": "object"
        },
        "CachedInsightActorsQueryOptionsResponse": {
            "additionalProperties": false,
            "properties": {
                "breakdown": {
                    "items": {
                        "additionalProperties": false,
                        "properties": {
                            "label": {
                                "type": "string"
                            },
                            "value": {
                                "anyOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "$ref": "#/definitions/BreakdownValueInt"
                                    }
                                ]
                            }
                        },
                        "required": ["label", "value"],
                        "type": "object"
                    },
                    "type": "array"
                },
                "cache_key": {
                    "type": "string"
                },
                "compare": {
                    "items": {
                        "additionalProperties": false,
                        "properties": {
                            "label": {
                                "type": "string"
                            },
                            "value": {
                                "type": "string"
                            }
                        },
                        "required": ["label", "value"],
                        "type": "object"
                    },
                    "type": "array"
                },
                "day": {
                    "items": {
                        "additionalProperties": false,
                        "properties": {
                            "label": {
                                "type": "string"
                            },
                            "value": {
                                "anyOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "$ref": "#/definitions/DatetimeDay"
                                    },
                                    {
                                        "$ref": "#/definitions/Day"
                                    }
                                ]
                            }
                        },
                        "required": ["label", "value"],
                        "type": "object"
                    },
                    "type": "array"
                },
                "interval": {
                    "items": {
                        "additionalProperties": false,
                        "properties": {
                            "label": {
                                "type": "string"
                            },
                            "value": {
                                "description": "An interval selected out of available intervals in source query",
                                "type": "integer"
                            }
                        },
                        "required": ["label", "value"],
                        "type": "object"
                    },
                    "type": "array"
                },
                "is_cached": {
                    "type": "boolean"
                },
                "last_refresh": {
                    "type": "string"
                },
                "next_allowed_client_refresh": {
                    "type": "string"
                },
                "series": {
                    "items": {
                        "additionalProperties": false,
                        "properties": {
                            "label": {
                                "type": "string"
                            },
                            "value": {
                                "type": "integer"
                            }
                        },
                        "required": ["label", "value"],
                        "type": "object"
                    },
                    "type": "array"
                },
                "status": {
                    "items": {
                        "additionalProperties": false,
                        "properties": {
                            "label": {
                                "type": "string"
                            },
                            "value": {
                                "type": "string"
                            }
                        },
                        "required": ["label", "value"],
                        "type": "object"
                    },
                    "type": "array"
                },
                "timezone": {
                    "type": "string"
                }
            },
            "required": ["cache_key", "is_cached", "last_refresh", "next_allowed_client_refresh", "timezone"],
            "type": "object"
        },
        "CachedLifecycleQueryResponse": {
            "additionalProperties": false,
            "properties": {
                "cache_key": {
                    "type": "string"
                },
                "error": {
                    "description": "Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",
                    "type": "string"
                },
                "hogql": {
                    "description": "Generated HogQL query.",
                    "type": "string"
                },
                "is_cached": {
                    "type": "boolean"
                },
                "last_refresh": {
                    "type": "string"
                },
                "modifiers": {
                    "$ref": "#/definitions/HogQLQueryModifiers",
                    "description": "Modifiers used when performing the query"
                },
                "next_allowed_client_refresh": {
                    "type": "string"
                },
                "results": {
                    "items": {
                        "type": "object"
                    },
                    "type": "array"
                },
                "timezone": {
                    "type": "string"
                },
                "timings": {
                    "description": "Measured timings for different parts of the query generation process",
                    "items": {
                        "$ref": "#/definitions/QueryTiming"
                    },
                    "type": "array"
                }
            },
            "required": [
                "cache_key",
                "is_cached",
                "last_refresh",
                "next_allowed_client_refresh",
                "results",
                "timezone"
            ],
            "type": "object"
        },
        "CachedPathsQueryResponse": {
            "additionalProperties": false,
            "properties": {
                "cache_key": {
                    "type": "string"
                },
                "error": {
                    "description": "Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",
                    "type": "string"
                },
                "hogql": {
                    "description": "Generated HogQL query.",
                    "type": "string"
                },
                "is_cached": {
                    "type": "boolean"
                },
                "last_refresh": {
                    "type": "string"
                },
                "modifiers": {
                    "$ref": "#/definitions/HogQLQueryModifiers",
                    "description": "Modifiers used when performing the query"
                },
                "next_allowed_client_refresh": {
                    "type": "string"
                },
                "results": {
                    "items": {
                        "type": "object"
                    },
                    "type": "array"
                },
                "timezone": {
                    "type": "string"
                },
                "timings": {
                    "description": "Measured timings for different parts of the query generation process",
                    "items": {
                        "$ref": "#/definitions/QueryTiming"
                    },
                    "type": "array"
                }
            },
            "required": [
                "cache_key",
                "is_cached",
                "last_refresh",
                "next_allowed_client_refresh",
                "results",
                "timezone"
            ],
            "type": "object"
        },
        "CachedRetentionQueryResponse": {
            "additionalProperties": false,
            "properties": {
                "cache_key": {
                    "type": "string"
                },
                "error": {
                    "description": "Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",
                    "type": "string"
                },
                "hogql": {
                    "description": "Generated HogQL query.",
                    "type": "string"
                },
                "is_cached": {
                    "type": "boolean"
                },
                "last_refresh": {
                    "type": "string"
                },
                "modifiers": {
                    "$ref": "#/definitions/HogQLQueryModifiers",
                    "description": "Modifiers used when performing the query"
                },
                "next_allowed_client_refresh": {
                    "type": "string"
                },
                "results": {
                    "items": {
                        "$ref": "#/definitions/RetentionResult"
                    },
                    "type": "array"
                },
                "timezone": {
                    "type": "string"
                },
                "timings": {
                    "description": "Measured timings for different parts of the query generation process",
                    "items": {
                        "$ref": "#/definitions/QueryTiming"
                    },
                    "type": "array"
                }
            },
            "required": [
                "cache_key",
                "is_cached",
                "last_refresh",
                "next_allowed_client_refresh",
                "results",
                "timezone"
            ],
            "type": "object"
        },
        "CachedSessionsTimelineQueryResponse": {
            "additionalProperties": false,
            "properties": {
                "cache_key": {
                    "type": "string"
                },
                "error": {
                    "description": "Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",
                    "type": "string"
                },
                "hasMore": {
                    "type": "boolean"
                },
                "hogql": {
                    "description": "Generated HogQL query.",
                    "type": "string"
                },
                "is_cached": {
                    "type": "boolean"
                },
                "last_refresh": {
                    "type": "string"
                },
                "modifiers": {
                    "$ref": "#/definitions/HogQLQueryModifiers",
                    "description": "Modifiers used when performing the query"
                },
                "next_allowed_client_refresh": {
                    "type": "string"
                },
                "results": {
                    "items": {
                        "$ref": "#/definitions/TimelineEntry"
                    },
                    "type": "array"
                },
                "timezone": {
                    "type": "string"
                },
                "timings": {
                    "description": "Measured timings for different parts of the query generation process",
                    "items": {
                        "$ref": "#/definitions/QueryTiming"
                    },
                    "type": "array"
                }
            },
            "required": [
                "cache_key",
                "is_cached",
                "last_refresh",
                "next_allowed_client_refresh",
                "results",
                "timezone"
            ],
            "type": "object"
        },
        "CachedStickinessQueryResponse": {
            "additionalProperties": false,
            "properties": {
                "cache_key": {
                    "type": "string"
                },
                "error": {
                    "description": "Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",
                    "type": "string"
                },
                "hogql": {
                    "description": "Generated HogQL query.",
                    "type": "string"
                },
                "is_cached": {
                    "type": "boolean"
                },
                "last_refresh": {
                    "type": "string"
                },
                "modifiers": {
                    "$ref": "#/definitions/HogQLQueryModifiers",
                    "description": "Modifiers used when performing the query"
                },
                "next_allowed_client_refresh": {
                    "type": "string"
                },
                "results": {
                    "items": {
                        "type": "object"
                    },
                    "type": "array"
                },
                "timezone": {
                    "type": "string"
                },
                "timings": {
                    "description": "Measured timings for different parts of the query generation process",
                    "items": {
                        "$ref": "#/definitions/QueryTiming"
                    },
                    "type": "array"
                }
            },
            "required": [
                "cache_key",
                "is_cached",
                "last_refresh",
                "next_allowed_client_refresh",
                "results",
                "timezone"
            ],
            "type": "object"
        },
        "CachedTrendsQueryResponse": {
            "additionalProperties": false,
            "properties": {
                "cache_key": {
                    "type": "string"
                },
                "error": {
                    "description": "Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",
                    "type": "string"
                },
                "hogql": {
                    "description": "Generated HogQL query.",
                    "type": "string"
                },
                "is_cached": {
                    "type": "boolean"
                },
                "last_refresh": {
                    "type": "string"
                },
                "modifiers": {
                    "$ref": "#/definitions/HogQLQueryModifiers",
                    "description": "Modifiers used when performing the query"
                },
                "next_allowed_client_refresh": {
                    "type": "string"
                },
                "results": {
                    "items": {
                        "type": "object"
                    },
                    "type": "array"
                },
                "timezone": {
                    "type": "string"
                },
                "timings": {
                    "description": "Measured timings for different parts of the query generation process",
                    "items": {
                        "$ref": "#/definitions/QueryTiming"
                    },
                    "type": "array"
                }
            },
            "required": [
                "cache_key",
                "is_cached",
                "last_refresh",
                "next_allowed_client_refresh",
                "results",
                "timezone"
            ],
            "type": "object"
        },
        "CachedWebOverviewQueryResponse": {
            "additionalProperties": false,
            "properties": {
                "cache_key": {
                    "type": "string"
                },
                "error": {
                    "description": "Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",
                    "type": "string"
                },
                "hogql": {
                    "description": "Generated HogQL query.",
                    "type": "string"
                },
                "is_cached": {
                    "type": "boolean"
                },
                "last_refresh": {
                    "type": "string"
                },
                "modifiers": {
                    "$ref": "#/definitions/HogQLQueryModifiers",
                    "description": "Modifiers used when performing the query"
                },
                "next_allowed_client_refresh": {
                    "type": "string"
                },
                "results": {
                    "items": {
                        "$ref": "#/definitions/WebOverviewItem"
                    },
                    "type": "array"
                },
                "samplingRate": {
                    "$ref": "#/definitions/SamplingRate"
                },
                "timezone": {
                    "type": "string"
                },
                "timings": {
                    "description": "Measured timings for different parts of the query generation process",
                    "items": {
                        "$ref": "#/definitions/QueryTiming"
                    },
                    "type": "array"
                }
            },
            "required": [
                "cache_key",
                "is_cached",
                "last_refresh",
                "next_allowed_client_refresh",
                "results",
                "timezone"
            ],
            "type": "object"
        },
        "CachedWebStatsTableQueryResponse": {
            "additionalProperties": false,
            "properties": {
                "cache_key": {
                    "type": "string"
                },
                "columns": {
                    "items": {},
                    "type": "array"
                },
                "error": {
                    "description": "Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",
                    "type": "string"
                },
                "hasMore": {
                    "type": "boolean"
                },
                "hogql": {
                    "description": "Generated HogQL query.",
                    "type": "string"
                },
                "is_cached": {
                    "type": "boolean"
                },
                "last_refresh": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "modifiers": {
                    "$ref": "#/definitions/HogQLQueryModifiers",
                    "description": "Modifiers used when performing the query"
                },
                "next_allowed_client_refresh": {
                    "type": "string"
                },
                "offset": {
                    "type": "integer"
                },
                "results": {
                    "items": {},
                    "type": "array"
                },
                "samplingRate": {
                    "$ref": "#/definitions/SamplingRate"
                },
                "timezone": {
                    "type": "string"
                },
                "timings": {
                    "description": "Measured timings for different parts of the query generation process",
                    "items": {
                        "$ref": "#/definitions/QueryTiming"
                    },
                    "type": "array"
                },
                "types": {
                    "items": {},
                    "type": "array"
                }
            },
            "required": [
                "cache_key",
                "is_cached",
                "last_refresh",
                "next_allowed_client_refresh",
                "results",
                "timezone"
            ],
            "type": "object"
        },
        "CachedWebTopClicksQueryResponse": {
            "additionalProperties": false,
            "properties": {
                "cache_key": {
                    "type": "string"
                },
                "columns": {
                    "items": {},
                    "type": "array"
                },
                "error": {
                    "description": "Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",
                    "type": "string"
                },
                "hogql": {
                    "description": "Generated HogQL query.",
                    "type": "string"
                },
                "is_cached": {
                    "type": "boolean"
                },
                "last_refresh": {
                    "type": "string"
                },
                "modifiers": {
                    "$ref": "#/definitions/HogQLQueryModifiers",
                    "description": "Modifiers used when performing the query"
                },
                "next_allowed_client_refresh": {
                    "type": "string"
                },
                "results": {
                    "items": {},
                    "type": "array"
                },
                "samplingRate": {
                    "$ref": "#/definitions/SamplingRate"
                },
                "timezone": {
                    "type": "string"
                },
                "timings": {
                    "description": "Measured timings for different parts of the query generation process",
                    "items": {
                        "$ref": "#/definitions/QueryTiming"
                    },
                    "type": "array"
                },
                "types": {
                    "items": {},
                    "type": "array"
                }
            },
            "required": [
                "cache_key",
                "is_cached",
                "last_refresh",
                "next_allowed_client_refresh",
                "results",
                "timezone"
            ],
            "type": "object"
        },
        "ChartAxis": {
            "additionalProperties": false,
            "properties": {
                "column": {
                    "type": "string"
                }
            },
            "required": ["column"],
            "type": "object"
        },
        "ChartDisplayType": {
            "enum": [
                "ActionsLineGraph",
                "ActionsBar",
                "ActionsAreaGraph",
                "ActionsLineGraphCumulative",
                "BoldNumber",
                "ActionsPie",
                "ActionsBarValue",
                "ActionsTable",
                "WorldMap"
            ],
            "type": "string"
        },
        "ClickhouseQueryStatus": {
            "additionalProperties": false,
            "properties": {
                "active_cpu_time": {
                    "type": "integer"
                },
                "bytes_read": {
                    "type": "integer"
                },
                "estimated_rows_total": {
                    "type": "integer"
                },
                "rows_read": {
                    "type": "integer"
                },
                "time_elapsed": {
                    "type": "integer"
                }
            },
            "required": ["bytes_read", "rows_read", "estimated_rows_total", "time_elapsed", "active_cpu_time"],
            "type": "object"
        },
        "CohortPropertyFilter": {
            "additionalProperties": false,
            "description": "Sync with plugin-server/src/types.ts",
            "properties": {
                "key": {
                    "const": "id",
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "type": {
                    "const": "cohort",
                    "type": "string"
                },
                "value": {
                    "type": "integer"
                }
            },
            "required": ["key", "type", "value"],
            "type": "object"
        },
        "CountPerActorMathType": {
            "enum": [
                "avg_count_per_actor",
                "min_count_per_actor",
                "max_count_per_actor",
                "median_count_per_actor",
                "p90_count_per_actor",
                "p95_count_per_actor",
                "p99_count_per_actor"
            ],
            "type": "string"
        },
        "DashboardFilter": {
            "additionalProperties": false,
            "properties": {
                "date_from": {
                    "type": ["string", "null"]
                },
                "date_to": {
                    "type": ["string", "null"]
                },
                "properties": {
                    "anyOf": [
                        {
                            "items": {
                                "$ref": "#/definitions/AnyPropertyFilter"
                            },
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ]
                }
            },
            "type": "object"
        },
        "DataTableNode": {
            "additionalProperties": false,
            "properties": {
                "allowSorting": {
                    "description": "Can the user click on column headers to sort the table? (default: true)",
                    "type": "boolean"
                },
                "columns": {
                    "description": "Columns shown in the table, unless the `source` provides them.",
                    "items": {
                        "$ref": "#/definitions/HogQLExpression"
                    },
                    "type": "array"
                },
                "embedded": {
                    "description": "Uses the embedded version of LemonTable",
                    "type": "boolean"
                },
                "expandable": {
                    "description": "Can expand row to show raw event data (default: true)",
                    "type": "boolean"
                },
                "full": {
                    "description": "Show with most visual options enabled. Used in scenes.",
                    "type": "boolean"
                },
                "hiddenColumns": {
                    "description": "Columns that aren't shown in the table, even if in columns or returned data",
                    "items": {
                        "$ref": "#/definitions/HogQLExpression"
                    },
                    "type": "array"
                },
                "kind": {
                    "const": "DataTableNode",
                    "type": "string"
                },
                "propertiesViaUrl": {
                    "description": "Link properties via the URL (default: false)",
                    "type": "boolean"
                },
                "response": {
                    "anyOf": [
                        {
                            "properties": {},
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "properties": {
                                "columns": {
                                    "items": {},
                                    "type": "array"
                                },
                                "error": {
                                    "description": "Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",
                                    "type": "string"
                                },
                                "hasMore": {
                                    "type": "boolean"
                                },
                                "hogql": {
                                    "description": "Generated HogQL query.",
                                    "type": "string"
                                },
                                "limit": {
                                    "type": "integer"
                                },
                                "modifiers": {
                                    "$ref": "#/definitions/HogQLQueryModifiers",
                                    "description": "Modifiers used when performing the query"
                                },
                                "offset": {
                                    "type": "integer"
                                },
                                "results": {
                                    "items": {
                                        "items": {},
                                        "type": "array"
                                    },
                                    "type": "array"
                                },
                                "timings": {
                                    "description": "Measured timings for different parts of the query generation process",
                                    "items": {
                                        "$ref": "#/definitions/QueryTiming"
                                    },
                                    "type": "array"
                                },
                                "types": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": ["columns", "hogql", "results", "types"],
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "properties": {
                                "columns": {
                                    "items": {},
                                    "type": "array"
                                },
                                "error": {
                                    "description": "Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",
                                    "type": "string"
                                },
                                "hasMore": {
                                    "type": "boolean"
                                },
                                "hogql": {
                                    "description": "Generated HogQL query.",
                                    "type": "string"
                                },
                                "limit": {
                                    "type": "integer"
                                },
                                "missing_actors_count": {
                                    "type": "integer"
                                },
                                "modifiers": {
                                    "$ref": "#/definitions/HogQLQueryModifiers",
                                    "description": "Modifiers used when performing the query"
                                },
                                "offset": {
                                    "type": "integer"
                                },
                                "results": {
                                    "items": {
                                        "items": {},
                                        "type": "array"
                                    },
                                    "type": "array"
                                },
                                "timings": {
                                    "description": "Measured timings for different parts of the query generation process",
                                    "items": {
                                        "$ref": "#/definitions/QueryTiming"
                                    },
                                    "type": "array"
                                },
                                "types": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": ["columns", "hogql", "limit", "offset", "results", "types"],
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "properties": {
                                "clickhouse": {
                                    "description": "Executed ClickHouse query",
                                    "type": "string"
                                },
                                "columns": {
                                    "description": "Returned columns",
                                    "items": {},
                                    "type": "array"
                                },
                                "error": {
                                    "description": "Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",
                                    "type": "string"
                                },
                                "explain": {
                                    "description": "Query explanation output",
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "hasMore": {
                                    "type": "boolean"
                                },
                                "hogql": {
                                    "description": "Generated HogQL query.",
                                    "type": "string"
                                },
                                "limit": {
                                    "type": "integer"
                                },
                                "metadata": {
                                    "$ref": "#/definitions/HogQLMetadataResponse",
                                    "description": "Query metadata output"
                                },
                                "modifiers": {
                                    "$ref": "#/definitions/HogQLQueryModifiers",
                                    "description": "Modifiers used when performing the query"
                                },
                                "offset": {
                                    "type": "integer"
                                },
                                "query": {
                                    "description": "Input query string",
                                    "type": "string"
                                },
                                "results": {
                                    "items": {},
                                    "type": "array"
                                },
                                "timings": {
                                    "description": "Measured timings for different parts of the query generation process",
                                    "items": {
                                        "$ref": "#/definitions/QueryTiming"
                                    },
                                    "type": "array"
                                },
                                "types": {
                                    "description": "Types of returned columns",
                                    "items": {},
                                    "type": "array"
                                }
                            },
                            "required": ["results"],
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "properties": {
                                "results": {
                                    "items": {
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": ["results"],
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "properties": {
                                "error": {
                                    "description": "Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",
                                    "type": "string"
                                },
                                "hogql": {
                                    "description": "Generated HogQL query.",
                                    "type": "string"
                                },
                                "modifiers": {
                                    "$ref": "#/definitions/HogQLQueryModifiers",
                                    "description": "Modifiers used when performing the query"
                                },
                                "results": {
                                    "items": {
                                        "$ref": "#/definitions/WebOverviewItem"
                                    },
                                    "type": "array"
                                },
                                "samplingRate": {
                                    "$ref": "#/definitions/SamplingRate"
                                },
                                "timings": {
                                    "description": "Measured timings for different parts of the query generation process",
                                    "items": {
                                        "$ref": "#/definitions/QueryTiming"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": ["results"],
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "properties": {
                                "columns": {
                                    "items": {},
                                    "type": "array"
                                },
                                "error": {
                                    "description": "Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",
                                    "type": "string"
                                },
                                "hasMore": {
                                    "type": "boolean"
                                },
                                "hogql": {
                                    "description": "Generated HogQL query.",
                                    "type": "string"
                                },
                                "limit": {
                                    "type": "integer"
                                },
                                "modifiers": {
                                    "$ref": "#/definitions/HogQLQueryModifiers",
                                    "description": "Modifiers used when performing the query"
                                },
                                "offset": {
                                    "type": "integer"
                                },
                                "results": {
                                    "items": {},
                                    "type": "array"
                                },
                                "samplingRate": {
                                    "$ref": "#/definitions/SamplingRate"
                                },
                                "timings": {
                                    "description": "Measured timings for different parts of the query generation process",
                                    "items": {
                                        "$ref": "#/definitions/QueryTiming"
                                    },
                                    "type": "array"
                                },
                                "types": {
                                    "items": {},
                                    "type": "array"
                                }
                            },
                            "required": ["results"],
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "properties": {
                                "columns": {
                                    "items": {},
                                    "type": "array"
                                },
                                "error": {
                                    "description": "Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",
                                    "type": "string"
                                },
                                "hogql": {
                                    "description": "Generated HogQL query.",
                                    "type": "string"
                                },
                                "modifiers": {
                                    "$ref": "#/definitions/HogQLQueryModifiers",
                                    "description": "Modifiers used when performing the query"
                                },
                                "results": {
                                    "items": {},
                                    "type": "array"
                                },
                                "samplingRate": {
                                    "$ref": "#/definitions/SamplingRate"
                                },
                                "timings": {
                                    "description": "Measured timings for different parts of the query generation process",
                                    "items": {
                                        "$ref": "#/definitions/QueryTiming"
                                    },
                                    "type": "array"
                                },
                                "types": {
                                    "items": {},
                                    "type": "array"
                                }
                            },
                            "required": ["results"],
                            "type": "object"
                        }
                    ]
                },
                "showActions": {
                    "description": "Show the kebab menu at the end of the row",
                    "type": "boolean"
                },
                "showColumnConfigurator": {
                    "description": "Show a button to configure the table's columns if possible",
                    "type": "boolean"
                },
                "showDateRange": {
                    "description": "Show date range selector",
                    "type": "boolean"
                },
                "showElapsedTime": {
                    "description": "Show the time it takes to run a query",
                    "type": "boolean"
                },
                "showEventFilter": {
                    "description": "Include an event filter above the table (EventsNode only)",
                    "type": "boolean"
                },
                "showExport": {
                    "description": "Show the export button",
                    "type": "boolean"
                },
                "showHogQLEditor": {
                    "description": "Include a HogQL query editor above HogQL tables",
                    "type": "boolean"
                },
                "showOpenEditorButton": {
                    "description": "Show a button to open the current query as a new insight. (default: true)",
                    "type": "boolean"
                },
                "showPersistentColumnConfigurator": {
                    "description": "Show a button to configure and persist the table's default columns if possible",
                    "type": "boolean"
                },
                "showPropertyFilter": {
                    "description": "Include a property filter above the table",
                    "type": "boolean"
                },
                "showReload": {
                    "description": "Show a reload button",
                    "type": "boolean"
                },
                "showResultsTable": {
                    "description": "Show a results table",
                    "type": "boolean"
                },
                "showSavedQueries": {
                    "description": "Shows a list of saved queries",
                    "type": "boolean"
                },
                "showSearch": {
                    "description": "Include a free text search field (PersonsNode only)",
                    "type": "boolean"
                },
                "showTestAccountFilters": {
                    "description": "Show filter to exclude test accounts",
                    "type": "boolean"
                },
                "showTimings": {
                    "description": "Show a detailed query timing breakdown",
                    "type": "boolean"
                },
                "source": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/EventsNode"
                        },
                        {
                            "$ref": "#/definitions/EventsQuery"
                        },
                        {
                            "$ref": "#/definitions/PersonsNode"
                        },
                        {
                            "$ref": "#/definitions/ActorsQuery"
                        },
                        {
                            "$ref": "#/definitions/HogQLQuery"
                        },
                        {
                            "$ref": "#/definitions/TimeToSeeDataSessionsQuery"
                        },
                        {
                            "$ref": "#/definitions/WebOverviewQuery"
                        },
                        {
                            "$ref": "#/definitions/WebStatsTableQuery"
                        },
                        {
                            "$ref": "#/definitions/WebTopClicksQuery"
                        }
                    ],
                    "description": "Source of the events"
                }
            },
            "required": ["kind", "source"],
            "type": "object"
        },
        "DataVisualizationNode": {
            "additionalProperties": false,
            "properties": {
                "chartSettings": {
                    "additionalProperties": false,
                    "properties": {
                        "goalLines": {
                            "items": {
                                "$ref": "#/definitions/GoalLine"
                            },
                            "type": "array"
                        },
                        "xAxis": {
                            "$ref": "#/definitions/ChartAxis"
                        },
                        "yAxis": {
                            "items": {
                                "$ref": "#/definitions/ChartAxis"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                },
                "display": {
                    "$ref": "#/definitions/ChartDisplayType"
                },
                "kind": {
                    "const": "DataVisualizationNode",
                    "type": "string"
                },
                "source": {
                    "$ref": "#/definitions/HogQLQuery"
                }
            },
            "required": ["kind", "source"],
            "type": "object"
        },
        "DataWarehouseEventsModifier": {
            "additionalProperties": false,
            "properties": {
                "distinct_id_field": {
                    "type": "string"
                },
                "id_field": {
                    "type": "string"
                },
                "table_name": {
                    "type": "string"
                },
                "timestamp_field": {
                    "type": "string"
                }
            },
            "required": ["table_name", "timestamp_field", "distinct_id_field", "id_field"],
            "type": "object"
        },
        "DataWarehouseNode": {
            "additionalProperties": false,
            "properties": {
                "custom_name": {
                    "type": "string"
                },
                "distinct_id_field": {
                    "type": "string"
                },
                "fixedProperties": {
                    "description": "Fixed properties in the query, can't be edited in the interface (e.g. scoping down by person)",
                    "items": {
                        "$ref": "#/definitions/AnyPropertyFilter"
                    },
                    "type": "array"
                },
                "id": {
                    "type": "string"
                },
                "id_field": {
                    "type": "string"
                },
                "kind": {
                    "const": "DataWarehouseNode",
                    "type": "string"
                },
                "math": {
                    "$ref": "#/definitions/MathType"
                },
                "math_group_type_index": {
                    "enum": [0, 1, 2, 3, 4],
                    "type": "number"
                },
                "math_hogql": {
                    "type": "string"
                },
                "math_property": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "properties": {
                    "description": "Properties configurable in the interface",
                    "items": {
                        "$ref": "#/definitions/AnyPropertyFilter"
                    },
                    "type": "array"
                },
                "response": {
                    "type": "object"
                },
                "table_name": {
                    "type": "string"
                },
                "timestamp_field": {
                    "type": "string"
                }
            },
            "required": ["distinct_id_field", "id", "id_field", "kind", "table_name", "timestamp_field"],
            "type": "object"
        },
        "DataWarehousePersonPropertyFilter": {
            "additionalProperties": false,
            "properties": {
                "key": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "operator": {
                    "$ref": "#/definitions/PropertyOperator"
                },
                "type": {
                    "const": "data_warehouse_person_property",
                    "type": "string"
                },
                "value": {
                    "$ref": "#/definitions/PropertyFilterValue"
                }
            },
            "required": ["key", "operator", "type"],
            "type": "object"
        },
        "DataWarehousePropertyFilter": {
            "additionalProperties": false,
            "properties": {
                "key": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "operator": {
                    "$ref": "#/definitions/PropertyOperator"
                },
                "type": {
                    "const": "data_warehouse",
                    "type": "string"
                },
                "value": {
                    "$ref": "#/definitions/PropertyFilterValue"
                }
            },
            "required": ["key", "operator", "type"],
            "type": "object"
        },
        "DatabaseSchemaQuery": {
            "additionalProperties": false,
            "properties": {
                "kind": {
                    "const": "DatabaseSchemaQuery",
                    "type": "string"
                },
                "modifiers": {
                    "$ref": "#/definitions/HogQLQueryModifiers",
                    "description": "Modifiers used when performing the query"
                },
                "response": {
                    "$ref": "#/definitions/DatabaseSchemaQueryResponse"
                }
            },
            "required": ["kind"],
            "type": "object"
        },
        "DatabaseSchemaQueryResponse": {
            "additionalProperties": {
                "items": {
                    "$ref": "#/definitions/DatabaseSchemaQueryResponseField"
                },
                "type": "array"
            },
            "type": "object"
        },
        "DatabaseSchemaQueryResponseField": {
            "additionalProperties": false,
            "properties": {
                "chain": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "fields": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "key": {
                    "type": "string"
                },
                "schema_valid": {
                    "type": "boolean"
                },
                "table": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/DatabaseSerializedFieldType"
                }
            },
            "required": ["key", "type", "schema_valid"],
            "type": "object"
        },
        "DatabaseSerializedFieldType": {
            "enum": [
                "integer",
                "float",
                "string",
                "datetime",
                "date",
                "boolean",
                "array",
                "json",
                "lazy_table",
                "virtual_table",
                "field_traverser",
                "expression",
                "view"
            ],
            "type": "string"
        },
        "DateRange": {
            "additionalProperties": false,
            "properties": {
                "date_from": {
                    "type": ["string", "null"]
                },
                "date_to": {
                    "type": ["string", "null"]
                },
                "explicitDate": {
                    "description": "Whether the date_from and date_to should be used verbatim. Disables rounding to the start and end of period.",
                    "type": ["boolean", "null"]
                }
            },
            "type": "object"
        },
        "DatetimeDay": {
            "format": "date-time",
            "type": "string"
        },
        "Day": {
            "type": "integer"
        },
        "ElementPropertyFilter": {
            "additionalProperties": false,
            "description": "Sync with plugin-server/src/types.ts",
            "properties": {
                "key": {
                    "enum": ["tag_name", "text", "href", "selector"],
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "operator": {
                    "$ref": "#/definitions/PropertyOperator"
                },
                "type": {
                    "const": "element",
                    "type": "string"
                },
                "value": {
                    "$ref": "#/definitions/PropertyFilterValue"
                }
            },
            "required": ["key", "operator", "type"],
            "type": "object"
        },
        "ElementType": {
            "additionalProperties": false,
            "properties": {
                "attr_class": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "attr_id": {
                    "type": "string"
                },
                "attributes": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "href": {
                    "type": "string"
                },
                "nth_child": {
                    "type": "number"
                },
                "nth_of_type": {
                    "type": "number"
                },
                "order": {
                    "type": "number"
                },
                "tag_name": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                }
            },
            "required": ["attributes", "tag_name"],
            "type": "object"
        },
        "EmptyPropertyFilter": {
            "additionalProperties": false,
            "type": "object"
        },
        "EntityNode": {
            "additionalProperties": false,
            "properties": {
                "custom_name": {
                    "type": "string"
                },
                "fixedProperties": {
                    "description": "Fixed properties in the query, can't be edited in the interface (e.g. scoping down by person)",
                    "items": {
                        "$ref": "#/definitions/AnyPropertyFilter"
                    },
                    "type": "array"
                },
                "kind": {
                    "$ref": "#/definitions/NodeKind"
                },
                "math": {
                    "$ref": "#/definitions/MathType"
                },
                "math_group_type_index": {
                    "enum": [0, 1, 2, 3, 4],
                    "type": "number"
                },
                "math_hogql": {
                    "type": "string"
                },
                "math_property": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "properties": {
                    "description": "Properties configurable in the interface",
                    "items": {
                        "$ref": "#/definitions/AnyPropertyFilter"
                    },
                    "type": "array"
                },
                "response": {
                    "type": "object"
                }
            },
            "required": ["kind"],
            "type": "object"
        },
        "EntityType": {
            "enum": ["actions", "events", "data_warehouse", "new_entity"],
            "type": "string"
        },
        "EventDefinition": {
            "additionalProperties": false,
            "properties": {
                "elements": {
                    "items": {},
                    "type": "array"
                },
                "event": {
                    "type": "string"
                },
                "properties": {
                    "type": "object"
                }
            },
            "required": ["event", "properties", "elements"],
            "type": "object"
        },
        "EventOddsRatioSerialized": {
            "additionalProperties": false,
            "properties": {
                "correlation_type": {
                    "enum": ["success", "failure"],
                    "type": "string"
                },
                "event": {
                    "$ref": "#/definitions/EventDefinition"
                },
                "failure_count": {
                    "type": "integer"
                },
                "odds_ratio": {
                    "type": "number"
                },
                "success_count": {
                    "type": "integer"
                }
            },
            "required": ["event", "success_count", "failure_count", "odds_ratio", "correlation_type"],
            "type": "object"
        },
        "EventPropertyFilter": {
            "additionalProperties": false,
            "description": "Sync with plugin-server/src/types.ts",
            "properties": {
                "key": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "operator": {
                    "$ref": "#/definitions/PropertyOperator",
                    "default": "exact"
                },
                "type": {
                    "const": "event",
                    "description": "Event properties",
                    "type": "string"
                },
                "value": {
                    "$ref": "#/definitions/PropertyFilterValue"
                }
            },
            "required": ["key", "operator", "type"],
            "type": "object"
        },
        "EventType": {
            "additionalProperties": false,
            "properties": {
                "distinct_id": {
                    "type": "string"
                },
                "elements": {
                    "items": {
                        "$ref": "#/definitions/ElementType"
                    },
                    "type": "array"
                },
                "elements_chain": {
                    "type": ["string", "null"]
                },
                "event": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "person": {
                    "additionalProperties": false,
                    "properties": {
                        "distinct_ids": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "is_identified": {
                            "type": "boolean"
                        },
                        "properties": {
                            "type": "object"
                        }
                    },
                    "required": ["distinct_ids", "properties"],
                    "type": "object"
                },
                "properties": {
                    "type": "object"
                },
                "timestamp": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            },
            "required": ["id", "distinct_id", "properties", "event", "timestamp", "elements"],
            "type": "object"
        },
        "EventsNode": {
            "additionalProperties": false,
            "properties": {
                "custom_name": {
                    "type": "string"
                },
                "event": {
                    "description": "The event or `null` for all events.",
                    "type": ["string", "null"]
                },
                "fixedProperties": {
                    "description": "Fixed properties in the query, can't be edited in the interface (e.g. scoping down by person)",
                    "items": {
                        "$ref": "#/definitions/AnyPropertyFilter"
                    },
                    "type": "array"
                },
                "kind": {
                    "const": "EventsNode",
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "math": {
                    "$ref": "#/definitions/MathType"
                },
                "math_group_type_index": {
                    "enum": [0, 1, 2, 3, 4],
                    "type": "number"
                },
                "math_hogql": {
                    "type": "string"
                },
                "math_property": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "orderBy": {
                    "description": "Columns to order by",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "properties": {
                    "description": "Properties configurable in the interface",
                    "items": {
                        "$ref": "#/definitions/AnyPropertyFilter"
                    },
                    "type": "array"
                },
                "response": {
                    "type": "object"
                }
            },
            "required": ["kind"],
            "type": "object"
        },
        "EventsQuery": {
            "additionalProperties": false,
            "properties": {
                "actionId": {
                    "description": "Show events matching a given action",
                    "type": "integer"
                },
                "after": {
                    "description": "Only fetch events that happened after this timestamp",
                    "type": "string"
                },
                "before": {
                    "description": "Only fetch events that happened before this timestamp",
                    "type": "string"
                },
                "event": {
                    "description": "Limit to events matching this string",
                    "type": ["string", "null"]
                },
                "filterTestAccounts": {
                    "description": "Filter test accounts",
                    "type": "boolean"
                },
                "fixedProperties": {
                    "description": "Fixed properties in the query, can't be edited in the interface (e.g. scoping down by person)",
                    "items": {
                        "$ref": "#/definitions/AnyPropertyFilter"
                    },
                    "type": "array"
                },
                "kind": {
                    "const": "EventsQuery",
                    "type": "string"
                },
                "limit": {
                    "description": "Number of rows to return",
                    "type": "integer"
                },
                "modifiers": {
                    "$ref": "#/definitions/HogQLQueryModifiers",
                    "description": "Modifiers used when performing the query"
                },
                "offset": {
                    "description": "Number of rows to skip before returning rows",
                    "type": "integer"
                },
                "orderBy": {
                    "description": "Columns to order by",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "personId": {
                    "description": "Show events for a given person",
                    "type": "string"
                },
                "properties": {
                    "description": "Properties configurable in the interface",
                    "items": {
                        "$ref": "#/definitions/AnyPropertyFilter"
                    },
                    "type": "array"
                },
                "response": {
                    "$ref": "#/definitions/EventsQueryResponse"
                },
                "select": {
                    "description": "Return a limited set of data. Required.",
                    "items": {
                        "$ref": "#/definitions/HogQLExpression"
                    },
                    "type": "array"
                },
                "where": {
                    "description": "HogQL filters to apply on returned data",
                    "items": {
                        "$ref": "#/definitions/HogQLExpression"
                    },
                    "type": "array"
                }
            },
            "required": ["kind", "select"],
            "type": "object"
        },
        "EventsQueryPersonColumn": {
            "additionalProperties": false,
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "distinct_id": {
                    "type": "string"
                },
                "properties": {
                    "additionalProperties": false,
                    "properties": {
                        "email": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "uuid": {
                    "type": "string"
                }
            },
            "required": ["uuid", "created_at", "properties", "distinct_id"],
            "type": "object"
        },
        "EventsQueryResponse": {
            "additionalProperties": false,
            "properties": {
                "columns": {
                    "items": {},
                    "type": "array"
                },
                "error": {
                    "description": "Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",
                    "type": "string"
                },
                "hasMore": {
                    "type": "boolean"
                },
                "hogql": {
                    "description": "Generated HogQL query.",
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "modifiers": {
                    "$ref": "#/definitions/HogQLQueryModifiers",
                    "description": "Modifiers used when performing the query"
                },
                "offset": {
                    "type": "integer"
                },
                "results": {
                    "items": {
                        "items": {},
                        "type": "array"
                    },
                    "type": "array"
                },
                "timings": {
                    "description": "Measured timings for different parts of the query generation process",
                    "items": {
                        "$ref": "#/definitions/QueryTiming"
                    },
                    "type": "array"
                },
                "types": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": ["columns", "hogql", "results", "types"],
            "type": "object"
        },
        "FeaturePropertyFilter": {
            "additionalProperties": false,
            "properties": {
                "key": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "operator": {
                    "$ref": "#/definitions/PropertyOperator"
                },
                "type": {
                    "const": "feature",
                    "description": "Event property with \"$feature/\" prepended",
                    "type": "string"
                },
                "value": {
                    "$ref": "#/definitions/PropertyFilterValue"
                }
            },
            "required": ["key", "operator", "type"],
            "type": "object"
        },
        "FilterLogicalOperator": {
            "enum": ["AND", "OR"],
            "type": "string"
        },
        "FilterType": {
            "additionalProperties": false,
            "properties": {
                "actions": {
                    "items": {
                        "type": "object"
                    },
                    "type": "array"
                },
                "aggregation_group_type_index": {
                    "type": "number"
                },
                "breakdown": {
                    "$ref": "#/definitions/BreakdownKeyType"
                },
                "breakdown_group_type_index": {
                    "type": ["number", "null"]
                },
                "breakdown_hide_other_aggregation": {
                    "type": ["boolean", "null"]
                },
                "breakdown_limit": {
                    "type": "integer"
                },
                "breakdown_normalize_url": {
                    "type": "boolean"
                },
                "breakdown_type": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/BreakdownType"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "breakdowns": {
                    "items": {
                        "$ref": "#/definitions/Breakdown"
                    },
                    "type": "array"
                },
                "data_warehouse": {
                    "items": {
                        "type": "object"
                    },
                    "type": "array"
                },
                "date_from": {
                    "type": ["string", "null"]
                },
                "date_to": {
                    "type": ["string", "null"]
                },
                "entity_id": {
                    "type": ["string", "number"]
                },
                "entity_math": {
                    "type": "string"
                },
                "entity_type": {
                    "$ref": "#/definitions/EntityType"
                },
                "events": {
                    "items": {
                        "type": "object"
                    },
                    "type": "array"
                },
                "explicit_date": {
                    "description": "Whether the `date_from` and `date_to` should be used verbatim. Disables rounding to the start and end of period. Strings are cast to bools, e.g. \"true\" -> true.",
                    "type": ["boolean", "string", "null"]
                },
                "filter_test_accounts": {
                    "type": "boolean"
                },
                "from_dashboard": {
                    "type": ["boolean", "number"]
                },
                "insight": {
                    "$ref": "#/definitions/InsightType"
                },
                "interval": {
                    "$ref": "#/definitions/IntervalType"
                },
                "new_entity": {
                    "items": {
                        "type": "object"
                    },
                    "type": "array"
                },
                "properties": {
                    "anyOf": [
                        {
                            "items": {
                                "$ref": "#/definitions/AnyPropertyFilter"
                            },
                            "type": "array"
                        },
                        {
                            "$ref": "#/definitions/PropertyGroupFilter"
                        }
                    ]
                },
                "sampling_factor": {
                    "type": ["number", "null"]
                }
            },
            "type": "object"
        },
        "FunnelConversionWindowTimeUnit": {
            "enum": ["second", "minute", "hour", "day", "week", "month"],
            "type": "string"
        },
        "FunnelCorrelationActorsQuery": {
            "additionalProperties": false,
            "properties": {
                "funnelCorrelationPersonConverted": {
                    "type": "boolean"
                },
                "funnelCorrelationPersonEntity": {
                    "$ref": "#/definitions/AnyEntityNode"
                },
                "funnelCorrelationPropertyValues": {
                    "items": {
                        "$ref": "#/definitions/AnyPropertyFilter"
                    },
                    "type": "array"
                },
                "includeRecordings": {
                    "type": "boolean"
                },
                "kind": {
                    "const": "FunnelCorrelationActorsQuery",
                    "type": "string"
                },
                "modifiers": {
                    "$ref": "#/definitions/HogQLQueryModifiers",
                    "description": "Modifiers used when performing the query"
                },
                "response": {
                    "$ref": "#/definitions/ActorsQueryResponse"
                },
                "source": {
                    "$ref": "#/definitions/FunnelCorrelationQuery"
                }
            },
            "required": ["kind", "source"],
            "type": "object"
        },
        "FunnelCorrelationQuery": {
            "additionalProperties": false,
            "properties": {
                "funnelCorrelationEventExcludePropertyNames": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "funnelCorrelationEventNames": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "funnelCorrelationExcludeEventNames": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "funnelCorrelationExcludeNames": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "funnelCorrelationNames": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "funnelCorrelationType": {
                    "$ref": "#/definitions/FunnelCorrelationResultsType"
                },
                "kind": {
                    "const": "FunnelCorrelationQuery",
                    "type": "string"
                },
                "response": {
                    "$ref": "#/definitions/FunnelCorrelationResponse"
                },
                "source": {
                    "$ref": "#/definitions/FunnelsActorsQuery"
                }
            },
            "required": ["funnelCorrelationType", "kind", "source"],
            "type": "object"
        },
        "FunnelCorrelationResponse": {
            "additionalProperties": false,
            "properties": {
                "columns": {
                    "items": {},
                    "type": "array"
                },
                "error": {
                    "description": "Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",
                    "type": "string"
                },
                "hasMore": {
                    "type": "boolean"
                },
                "hogql": {
                    "description": "Generated HogQL query.",
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "modifiers": {
                    "$ref": "#/definitions/HogQLQueryModifiers",
                    "description": "Modifiers used when performing the query"
                },
                "offset": {
                    "type": "integer"
                },
                "results": {
                    "$ref": "#/definitions/FunnelCorrelationResult"
                },
                "timings": {
                    "description": "Measured timings for different parts of the query generation process",
                    "items": {
                        "$ref": "#/definitions/QueryTiming"
                    },
                    "type": "array"
                },
                "types": {
                    "items": {},
                    "type": "array"
                }
            },
            "required": ["results"],
            "type": "object"
        },
        "FunnelCorrelationResult": {
            "additionalProperties": false,
            "properties": {
                "events": {
                    "items": {
                        "$ref": "#/definitions/EventOddsRatioSerialized"
                    },
                    "type": "array"
                },
                "skewed": {
                    "type": "boolean"
                }
            },
            "required": ["events", "skewed"],
            "type": "object"
        },
        "FunnelCorrelationResultsType": {
            "enum": ["events", "properties", "event_with_properties"],
            "type": "string"
        },
        "FunnelExclusion": {
            "anyOf": [
                {
                    "$ref": "#/definitions/FunnelExclusionEventsNode"
                },
                {
                    "$ref": "#/definitions/FunnelExclusionActionsNode"
                }
            ]
        },
        "FunnelExclusionActionsNode": {
            "additionalProperties": false,
            "properties": {
                "custom_name": {
                    "type": "string"
                },
                "fixedProperties": {
                    "description": "Fixed properties in the query, can't be edited in the interface (e.g. scoping down by person)",
                    "items": {
                        "$ref": "#/definitions/AnyPropertyFilter"
                    },
                    "type": "array"
                },
                "funnelFromStep": {
                    "type": "integer"
                },
                "funnelToStep": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "kind": {
                    "const": "ActionsNode",
                    "type": "string"
                },
                "math": {
                    "$ref": "#/definitions/MathType"
                },
                "math_group_type_index": {
                    "enum": [0, 1, 2, 3, 4],
                    "type": "number"
                },
                "math_hogql": {
                    "type": "string"
                },
                "math_property": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "properties": {
                    "description": "Properties configurable in the interface",
                    "items": {
                        "$ref": "#/definitions/AnyPropertyFilter"
                    },
                    "type": "array"
                },
                "response": {
                    "type": "object"
                }
            },
            "required": ["funnelFromStep", "funnelToStep", "id", "kind"],
            "type": "object"
        },
        "FunnelExclusionEventsNode": {
            "additionalProperties": false,
            "properties": {
                "custom_name": {
                    "type": "string"
                },
                "event": {
                    "description": "The event or `null` for all events.",
                    "type": ["string", "null"]
                },
                "fixedProperties": {
                    "description": "Fixed properties in the query, can't be edited in the interface (e.g. scoping down by person)",
                    "items": {
                        "$ref": "#/definitions/AnyPropertyFilter"
                    },
                    "type": "array"
                },
                "funnelFromStep": {
                    "type": "integer"
                },
                "funnelToStep": {
                    "type": "integer"
                },
                "kind": {
                    "const": "EventsNode",
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "math": {
                    "$ref": "#/definitions/MathType"
                },
                "math_group_type_index": {
                    "enum": [0, 1, 2, 3, 4],
                    "type": "number"
                },
                "math_hogql": {
                    "type": "string"
                },
                "math_property": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "orderBy": {
                    "description": "Columns to order by",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "properties": {
                    "description": "Properties configurable in the interface",
                    "items": {
                        "$ref": "#/definitions/AnyPropertyFilter"
                    },
                    "type": "array"
                },
                "response": {
                    "type": "object"
                }
            },
            "required": ["funnelFromStep", "funnelToStep", "kind"],
            "type": "object"
        },
        "FunnelExclusionLegacy": {
            "additionalProperties": false,
            "properties": {
                "custom_name": {
                    "type": ["string", "null"]
                },
                "funnel_from_step": {
                    "type": "number"
                },
                "funnel_to_step": {
                    "type": "number"
                },
                "id": {
                    "type": ["string", "number", "null"]
                },
                "index": {
                    "type": "number"
                },
                "name": {
                    "type": ["string", "null"]
                },
                "order": {
                    "type": "number"
                },
                "type": {
                    "$ref": "#/definitions/EntityType"
                }
            },
            "required": ["funnel_from_step", "funnel_to_step"],
            "type": "object"
        },
        "FunnelExclusionSteps": {
            "additionalProperties": false,
            "properties": {
                "funnelFromStep": {
                    "type": "integer"
                },
                "funnelToStep": {
                    "type": "integer"
                }
            },
            "required": ["funnelFromStep", "funnelToStep"],
            "type": "object"
        },
        "FunnelLayout": {
            "enum": ["horizontal", "vertical"],
            "type": "string"
        },
        "FunnelPathType": {
            "enum": ["funnel_path_before_step", "funnel_path_between_steps", "funnel_path_after_step"],
            "type": "string"
        },
        "FunnelPathsFilter": {
            "additionalProperties": false,
            "properties": {
                "funnelPathType": {
                    "$ref": "#/definitions/FunnelPathType"
                },
                "funnelSource": {
                    "$ref": "#/definitions/FunnelsQuery"
                },
                "funnelStep": {
                    "type": "integer"
                }
            },
            "required": ["funnelSource"],
            "type": "object"
        },
        "FunnelStepReference": {
            "enum": ["total", "previous"],
            "type": "string"
        },
        "FunnelStepsBreakdownResults": {
            "items": {
                "items": {
                    "type": "object"
                },
                "type": "array"
            },
            "type": "array"
        },
        "FunnelStepsResults": {
            "items": {
                "type": "object"
            },
            "type": "array"
        },
        "FunnelTimeToConvertResults": {
            "additionalProperties": false,
            "properties": {
                "average_conversion_time": {
                    "type": ["number", "null"]
                },
                "bins": {
                    "items": {
                        "items": {
                            "type": "integer"
                        },
                        "maxItems": 2,
                        "minItems": 2,
                        "type": "array"
                    },
                    "type": "array"
                }
            },
            "required": ["average_conversion_time", "bins"],
            "type": "object"
        },
        "FunnelTrendsResults": {
            "items": {
                "type": "object"
            },
            "type": "array"
        },
        "FunnelVizType": {
            "enum": ["steps", "time_to_convert", "trends"],
            "type": "string"
        },
        "FunnelsActorsQuery": {
            "additionalProperties": false,
            "properties": {
                "funnelCustomSteps": {
                    "description": "Custom step numbers to get persons for. This overrides `funnelStep`. Primarily for correlation use.",
                    "items": {
                        "type": "integer"
                    },
                    "type": "array"
                },
                "funnelStep": {
                    "description": "Index of the step for which we want to get the timestamp for, per person. Positive for converted persons, negative for dropped of persons.",
                    "type": "integer"
                },
                "funnelStepBreakdown": {
                    "$ref": "#/definitions/BreakdownKeyType",
                    "description": "The breakdown value for which to get persons for. This is an array for person and event properties, a string for groups and an integer for cohorts."
                },
                "funnelTrendsDropOff": {
                    "type": "boolean"
                },
                "funnelTrendsEntrancePeriodStart": {
                    "description": "Used together with `funnelTrendsDropOff` for funnels time conversion date for the persons modal.",
                    "type": "string"
                },
                "includeRecordings": {
                    "type": "boolean"
                },
                "kind": {
                    "const": "FunnelsActorsQuery",
                    "type": "string"
                },
                "modifiers": {
                    "$ref": "#/definitions/HogQLQueryModifiers",
                    "description": "Modifiers used when performing the query"
                },
                "response": {
                    "$ref": "#/definitions/ActorsQueryResponse"
                },
                "source": {
                    "$ref": "#/definitions/FunnelsQuery"
                }
            },
            "required": ["kind", "source"],
            "type": "object"
        },
        "FunnelsFilter": {
            "additionalProperties": false,
            "properties": {
                "binCount": {
                    "type": "integer"
                },
                "breakdownAttributionType": {
                    "$ref": "#/definitions/BreakdownAttributionType"
                },
                "breakdownAttributionValue": {
                    "type": "integer"
                },
                "exclusions": {
                    "items": {
                        "$ref": "#/definitions/FunnelExclusion"
                    },
                    "type": "array"
                },
                "funnelAggregateByHogQL": {
                    "type": "string"
                },
                "funnelFromStep": {
                    "type": "integer"
                },
                "funnelOrderType": {
                    "$ref": "#/definitions/StepOrderValue"
                },
                "funnelStepReference": {
                    "$ref": "#/definitions/FunnelStepReference"
                },
                "funnelToStep": {
                    "type": "integer"
                },
                "funnelVizType": {
                    "$ref": "#/definitions/FunnelVizType"
                },
                "funnelWindowInterval": {
                    "type": "integer"
                },
                "funnelWindowIntervalUnit": {
                    "$ref": "#/definitions/FunnelConversionWindowTimeUnit"
                },
                "hidden_legend_breakdowns": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "layout": {
                    "$ref": "#/definitions/FunnelLayout"
                }
            },
            "type": "object"
        },
        "FunnelsFilterLegacy": {
            "additionalProperties": false,
            "description": "`FunnelsFilterType` minus everything inherited from `FilterType` and persons modal related params and `hidden_legend_keys` replaced by `hidden_legend_breakdowns`",
            "properties": {
                "bin_count": {
                    "$ref": "#/definitions/BinCountValue"
                },
                "breakdown_attribution_type": {
                    "$ref": "#/definitions/BreakdownAttributionType"
                },
                "breakdown_attribution_value": {
                    "type": "number"
                },
                "exclusions": {
                    "items": {
                        "$ref": "#/definitions/FunnelExclusionLegacy"
                    },
                    "type": "array"
                },
                "funnel_aggregate_by_hogql": {
                    "type": "string"
                },
                "funnel_from_step": {
                    "type": "number"
                },
                "funnel_order_type": {
                    "$ref": "#/definitions/StepOrderValue"
                },
                "funnel_step_reference": {
                    "$ref": "#/definitions/FunnelStepReference"
                },
                "funnel_to_step": {
                    "type": "number"
                },
                "funnel_viz_type": {
                    "$ref": "#/definitions/FunnelVizType"
                },
                "funnel_window_interval": {
                    "type": "number"
                },
                "funnel_window_interval_unit": {
                    "$ref": "#/definitions/FunnelConversionWindowTimeUnit"
                },
                "hidden_legend_breakdowns": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "layout": {
                    "$ref": "#/definitions/FunnelLayout"
                }
            },
            "type": "object"
        },
        "FunnelsQuery": {
            "additionalProperties": false,
            "properties": {
                "aggregation_group_type_index": {
                    "description": "Groups aggregation",
                    "type": "integer"
                },
                "breakdownFilter": {
                    "$ref": "#/definitions/BreakdownFilter",
                    "description": "Breakdown of the events and actions"
                },
                "dateRange": {
                    "$ref": "#/definitions/DateRange",
                    "description": "Date range for the query"
                },
                "filterTestAccounts": {
                    "description": "Exclude internal and test users by applying the respective filters",
                    "type": "boolean"
                },
                "funnelsFilter": {
                    "$ref": "#/definitions/FunnelsFilter",
                    "description": "Properties specific to the funnels insight"
                },
                "interval": {
                    "$ref": "#/definitions/IntervalType",
                    "description": "Granularity of the response. Can be one of `hour`, `day`, `week` or `month`"
                },
                "kind": {
                    "const": "FunnelsQuery",
                    "type": "string"
                },
                "modifiers": {
                    "$ref": "#/definitions/HogQLQueryModifiers",
                    "description": "Modifiers used when performing the query"
                },
                "properties": {
                    "anyOf": [
                        {
                            "items": {
                                "$ref": "#/definitions/AnyPropertyFilter"
                            },
                            "type": "array"
                        },
                        {
                            "$ref": "#/definitions/PropertyGroupFilter"
                        }
                    ],
                    "description": "Property filters for all series"
                },
                "response": {
                    "$ref": "#/definitions/FunnelsQueryResponse"
                },
                "samplingFactor": {
                    "description": "Sampling rate",
                    "type": ["number", "null"]
                },
                "series": {
                    "description": "Events and actions to include",
                    "items": {
                        "$ref": "#/definitions/AnyEntityNode"
                    },
                    "type": "array"
                }
            },
            "required": ["kind", "series"],
            "type": "object"
        },
        "FunnelsQueryResponse": {
            "additionalProperties": false,
            "properties": {
                "error": {
                    "description": "Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",
                    "type": "string"
                },
                "hogql": {
                    "description": "Generated HogQL query.",
                    "type": "string"
                },
                "modifiers": {
                    "$ref": "#/definitions/HogQLQueryModifiers",
                    "description": "Modifiers used when performing the query"
                },
                "results": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/FunnelStepsResults"
                        },
                        {
                            "$ref": "#/definitions/FunnelStepsBreakdownResults"
                        },
                        {
                            "$ref": "#/definitions/FunnelTimeToConvertResults"
                        },
                        {
                            "$ref": "#/definitions/FunnelTrendsResults"
                        }
                    ]
                },
                "timings": {
                    "description": "Measured timings for different parts of the query generation process",
                    "items": {
                        "$ref": "#/definitions/QueryTiming"
                    },
                    "type": "array"
                }
            },
            "required": ["results"],
            "type": "object"
        },
        "GoalLine": {
            "additionalProperties": false,
            "properties": {
                "label": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            },
            "required": ["label", "value"],
            "type": "object"
        },
        "GroupMathType": {
            "const": "unique_group",
            "type": "string"
        },
        "GroupPropertyFilter": {
            "additionalProperties": false,
            "properties": {
                "group_type_index": {
                    "type": ["number", "null"]
                },
                "key": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "operator": {
                    "$ref": "#/definitions/PropertyOperator"
                },
                "type": {
                    "const": "group",
                    "type": "string"
                },
                "value": {
                    "$ref": "#/definitions/PropertyFilterValue"
                }
            },
            "required": ["key", "operator", "type"],
            "type": "object"
        },
        "HasPropertiesNode": {
            "anyOf": [
                {
                    "$ref": "#/definitions/EventsNode"
                },
                {
                    "$ref": "#/definitions/EventsQuery"
                },
                {
                    "$ref": "#/definitions/PersonsNode"
                }
            ]
        },
        "HogQLAutocomplete": {
            "additionalProperties": false,
            "properties": {
                "endPosition": {
                    "description": "End position of the editor word",
                    "type": "integer"
                },
                "filters": {
                    "$ref": "#/definitions/HogQLFilters",
                    "description": "Table to validate the expression against"
                },
                "kind": {
                    "const": "HogQLAutocomplete",
                    "type": "string"
                },
                "modifiers": {
                    "$ref": "#/definitions/HogQLQueryModifiers",
                    "description": "Modifiers used when performing the query"
                },
                "response": {
                    "$ref": "#/definitions/HogQLAutocompleteResponse"
                },
                "select": {
                    "description": "Full select query to validate",
                    "type": "string"
                },
                "startPosition": {
                    "description": "Start position of the editor word",
                    "type": "integer"
                }
            },
            "required": ["endPosition", "kind", "select", "startPosition"],
            "type": "object"
        },
        "HogQLAutocompleteResponse": {
            "additionalProperties": false,
            "properties": {
                "incomplete_list": {
                    "description": "Whether or not the suggestions returned are complete",
                    "type": "boolean"
                },
                "suggestions": {
                    "items": {
                        "$ref": "#/definitions/AutocompleteCompletionItem"
                    },
                    "type": "array"
                },
                "timings": {
                    "description": "Measured timings for different parts of the query generation process",
                    "items": {
                        "$ref": "#/definitions/QueryTiming"
                    },
                    "type": "array"
                }
            },
            "required": ["suggestions", "incomplete_list"],
            "type": "object"
        },
        "HogQLExpression": {
            "type": "string"
        },
        "HogQLFilters": {
            "additionalProperties": false,
            "description": "Filters object that will be converted to a HogQL {filters} placeholder",
            "properties": {
                "dateRange": {
                    "$ref": "#/definitions/DateRange"
                },
                "filterTestAccounts": {
                    "type": "boolean"
                },
                "properties": {
                    "items": {
                        "$ref": "#/definitions/AnyPropertyFilter"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "HogQLMathType": {
            "const": "hogql",
            "type": "string"
        },
        "HogQLMetadata": {
            "additionalProperties": false,
            "properties": {
                "debug": {
                    "description": "Enable more verbose output, usually run from the /debug page",
                    "type": "boolean"
                },
                "expr": {
                    "description": "HogQL expression to validate (use `select` or `expr`, but not both)",
                    "type": "string"
                },
                "exprSource": {
                    "$ref": "#/definitions/AnyDataNode",
                    "description": "Query within which \"expr\" is validated. Defaults to \"select * from events\""
                },
                "filters": {
                    "$ref": "#/definitions/HogQLFilters",
                    "description": "Extra filters applied to query via {filters}"
                },
                "kind": {
                    "const": "HogQLMetadata",
                    "type": "string"
                },
                "modifiers": {
                    "$ref": "#/definitions/HogQLQueryModifiers",
                    "description": "Modifiers used when performing the query"
                },
                "response": {
                    "$ref": "#/definitions/HogQLMetadataResponse"
                },
                "select": {
                    "description": "Full select query to validate (use `select` or `expr`, but not both)",
                    "type": "string"
                },
                "table": {
                    "description": "Table to validate the expression against",
                    "type": "string"
                }
            },
            "required": ["kind"],
            "type": "object"
        },
        "HogQLMetadataResponse": {
            "additionalProperties": false,
            "properties": {
                "errors": {
                    "items": {
                        "$ref": "#/definitions/HogQLNotice"
                    },
                    "type": "array"
                },
                "inputExpr": {
                    "type": "string"
                },
                "inputSelect": {
                    "type": "string"
                },
                "isValid": {
                    "type": "boolean"
                },
                "isValidView": {
                    "type": "boolean"
                },
                "notices": {
                    "items": {
                        "$ref": "#/definitions/HogQLNotice"
                    },
                    "type": "array"
                },
                "warnings": {
                    "items": {
                        "$ref": "#/definitions/HogQLNotice"
                    },
                    "type": "array"
                }
            },
            "required": ["errors", "warnings", "notices"],
            "type": "object"
        },
        "HogQLNotice": {
            "additionalProperties": false,
            "properties": {
                "end": {
                    "type": "integer"
                },
                "fix": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "start": {
                    "type": "integer"
                }
            },
            "required": ["message"],
            "type": "object"
        },
        "HogQLPropertyFilter": {
            "additionalProperties": false,
            "properties": {
                "key": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "type": {
                    "const": "hogql",
                    "type": "string"
                },
                "value": {
                    "$ref": "#/definitions/PropertyFilterValue"
                }
            },
            "required": ["key", "type"],
            "type": "object"
        },
        "HogQLQuery": {
            "additionalProperties": false,
            "properties": {
                "explain": {
                    "deprecated": "use modifiers.debug instead",
                    "type": "boolean"
                },
                "filters": {
                    "$ref": "#/definitions/HogQLFilters"
                },
                "kind": {
                    "const": "HogQLQuery",
                    "type": "string"
                },
                "modifiers": {
                    "$ref": "#/definitions/HogQLQueryModifiers",
                    "description": "Modifiers used when performing the query"
                },
                "query": {
                    "type": "string"
                },
                "response": {
                    "$ref": "#/definitions/HogQLQueryResponse"
                },
                "values": {
                    "description": "Constant values that can be referenced with the {placeholder} syntax in the query",
                    "type": "object"
                }
            },
            "required": ["kind", "query"],
            "type": "object"
        },
        "HogQLQueryModifiers": {
            "additionalProperties": false,
            "description": "HogQL Query Options are automatically set per team. However, they can be overriden in the query.",
            "properties": {
                "dataWarehouseEventsModifiers": {
                    "items": {
                        "$ref": "#/definitions/DataWarehouseEventsModifier"
                    },
                    "type": "array"
                },
                "debug": {
                    "type": "boolean"
                },
                "inCohortVia": {
                    "enum": ["auto", "leftjoin", "subquery", "leftjoin_conjoined"],
                    "type": "string"
                },
                "materializationMode": {
                    "enum": ["auto", "legacy_null_as_string", "legacy_null_as_null", "disabled"],
                    "type": "string"
                },
                "personsArgMaxVersion": {
                    "enum": ["auto", "v1", "v2"],
                    "type": "string"
                },
                "personsOnEventsMode": {
                    "enum": [
                        "disabled",
                        "person_id_no_override_properties_on_events",
                        "person_id_override_properties_on_events",
                        "person_id_override_properties_joined"
                    ],
                    "type": "string"
                },
                "s3TableUseInvalidColumns": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "HogQLQueryResponse": {
            "additionalProperties": false,
            "properties": {
                "clickhouse": {
                    "description": "Executed ClickHouse query",
                    "type": "string"
                },
                "columns": {
                    "description": "Returned columns",
                    "items": {},
                    "type": "array"
                },
                "error": {
                    "description": "Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",
                    "type": "string"
                },
                "explain": {
                    "description": "Query explanation output",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "hasMore": {
                    "type": "boolean"
                },
                "hogql": {
                    "description": "Generated HogQL query.",
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "metadata": {
                    "$ref": "#/definitions/HogQLMetadataResponse",
                    "description": "Query metadata output"
                },
                "modifiers": {
                    "$ref": "#/definitions/HogQLQueryModifiers",
                    "description": "Modifiers used when performing the query"
                },
                "offset": {
                    "type": "integer"
                },
                "query": {
                    "description": "Input query string",
                    "type": "string"
                },
                "results": {
                    "items": {},
                    "type": "array"
                },
                "timings": {
                    "description": "Measured timings for different parts of the query generation process",
                    "items": {
                        "$ref": "#/definitions/QueryTiming"
                    },
                    "type": "array"
                },
                "types": {
                    "description": "Types of returned columns",
                    "items": {},
                    "type": "array"
                }
            },
            "required": ["results"],
            "type": "object"
        },
        "InsightActorsQuery": {
            "additionalProperties": false,
            "properties": {
                "breakdown": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "$ref": "#/definitions/BreakdownValueInt"
                        }
                    ]
                },
                "compare": {
                    "enum": ["current", "previous"],
                    "type": "string"
                },
                "day": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "$ref": "#/definitions/Day"
                        }
                    ]
                },
                "includeRecordings": {
                    "type": "boolean"
                },
                "interval": {
                    "description": "An interval selected out of available intervals in source query.",
                    "type": "integer"
                },
                "kind": {
                    "const": "InsightActorsQuery",
                    "type": "string"
                },
                "modifiers": {
                    "$ref": "#/definitions/HogQLQueryModifiers",
                    "description": "Modifiers used when performing the query"
                },
                "response": {
                    "$ref": "#/definitions/ActorsQueryResponse"
                },
                "series": {
                    "type": "integer"
                },
                "source": {
                    "$ref": "#/definitions/InsightQuerySource"
                },
                "status": {
                    "type": "string"
                }
            },
            "required": ["kind", "source"],
            "type": "object"
        },
        "InsightActorsQueryBase": {
            "additionalProperties": false,
            "properties": {
                "includeRecordings": {
                    "type": "boolean"
                },
                "kind": {
                    "$ref": "#/definitions/NodeKind"
                },
                "modifiers": {
                    "$ref": "#/definitions/HogQLQueryModifiers",
                    "description": "Modifiers used when performing the query"
                },
                "response": {
                    "$ref": "#/definitions/ActorsQueryResponse"
                }
            },
            "required": ["kind"],
            "type": "object"
        },
        "InsightActorsQueryOptions": {
            "additionalProperties": false,
            "properties": {
                "kind": {
                    "const": "InsightActorsQueryOptions",
                    "type": "string"
                },
                "response": {
                    "$ref": "#/definitions/InsightActorsQueryOptionsResponse"
                },
                "source": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/InsightActorsQuery"
                        },
                        {
                            "$ref": "#/definitions/FunnelsActorsQuery"
                        },
                        {
                            "$ref": "#/definitions/FunnelCorrelationActorsQuery"
                        }
                    ]
                }
            },
            "required": ["kind", "source"],
            "type": "object"
        },
        "InsightActorsQueryOptionsResponse": {
            "additionalProperties": false,
            "properties": {
                "breakdown": {
                    "items": {
                        "additionalProperties": false,
                        "properties": {
                            "label": {
                                "type": "string"
                            },
                            "value": {
                                "anyOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "$ref": "#/definitions/BreakdownValueInt"
                                    }
                                ]
                            }
                        },
                        "required": ["label", "value"],
                        "type": "object"
                    },
                    "type": "array"
                },
                "compare": {
                    "items": {
                        "additionalProperties": false,
                        "properties": {
                            "label": {
                                "type": "string"
                            },
                            "value": {
                                "type": "string"
                            }
                        },
                        "required": ["label", "value"],
                        "type": "object"
                    },
                    "type": "array"
                },
                "day": {
                    "items": {
                        "additionalProperties": false,
                        "properties": {
                            "label": {
                                "type": "string"
                            },
                            "value": {
                                "anyOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "$ref": "#/definitions/DatetimeDay"
                                    },
                                    {
                                        "$ref": "#/definitions/Day"
                                    }
                                ]
                            }
                        },
                        "required": ["label", "value"],
                        "type": "object"
                    },
                    "type": "array"
                },
                "interval": {
                    "items": {
                        "additionalProperties": false,
                        "properties": {
                            "label": {
                                "type": "string"
                            },
                            "value": {
                                "description": "An interval selected out of available intervals in source query",
                                "type": "integer"
                            }
                        },
                        "required": ["label", "value"],
                        "type": "object"
                    },
                    "type": "array"
                },
                "series": {
                    "items": {
                        "additionalProperties": false,
                        "properties": {
                            "label": {
                                "type": "string"
                            },
                            "value": {
                                "type": "integer"
                            }
                        },
                        "required": ["label", "value"],
                        "type": "object"
                    },
                    "type": "array"
                },
                "status": {
                    "items": {
                        "additionalProperties": false,
                        "properties": {
                            "label": {
                                "type": "string"
                            },
                            "value": {
                                "type": "string"
                            }
                        },
                        "required": ["label", "value"],
                        "type": "object"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "InsightFilter": {
            "anyOf": [
                {
                    "$ref": "#/definitions/TrendsFilter"
                },
                {
                    "$ref": "#/definitions/FunnelsFilter"
                },
                {
                    "$ref": "#/definitions/RetentionFilter"
                },
                {
                    "$ref": "#/definitions/PathsFilter"
                },
                {
                    "$ref": "#/definitions/StickinessFilter"
                },
                {
                    "$ref": "#/definitions/LifecycleFilter"
                }
            ]
        },
        "InsightFilterProperty": {
            "enum": [
                "trendsFilter",
                "funnelsFilter",
                "retentionFilter",
                "pathsFilter",
                "stickinessFilter",
                "lifecycleFilter"
            ],
            "type": "string"
        },
        "InsightNodeKind": {
            "enum": [
                "TrendsQuery",
                "FunnelsQuery",
                "RetentionQuery",
                "PathsQuery",
                "StickinessQuery",
                "LifecycleQuery"
            ],
            "type": "string"
        },
        "InsightQueryNode": {
            "discriminator": {
                "propertyName": "kind"
            },
            "oneOf": [
                {
                    "$ref": "#/definitions/TrendsQuery"
                },
                {
                    "$ref": "#/definitions/FunnelsQuery"
                },
                {
                    "$ref": "#/definitions/RetentionQuery"
                },
                {
                    "$ref": "#/definitions/PathsQuery"
                },
                {
                    "$ref": "#/definitions/StickinessQuery"
                },
                {
                    "$ref": "#/definitions/LifecycleQuery"
                }
            ],
            "required": ["kind"],
            "type": "object"
        },
        "InsightQuerySource": {
            "$ref": "#/definitions/InsightQueryNode"
        },
        "InsightShortId": {
            "type": "string"
        },
        "InsightType": {
            "enum": ["TRENDS", "STICKINESS", "LIFECYCLE", "FUNNELS", "RETENTION", "PATHS", "JSON", "SQL"],
            "type": "string"
        },
        "InsightVizNode": {
            "additionalProperties": false,
            "properties": {
                "embedded": {
                    "description": "Query is embedded inside another bordered component",
                    "type": "boolean"
                },
                "full": {
                    "description": "Show with most visual options enabled. Used in insight scene.",
                    "type": "boolean"
                },
                "hidePersonsModal": {
                    "type": "boolean"
                },
                "kind": {
                    "const": "InsightVizNode",
                    "type": "string"
                },
                "showCorrelationTable": {
                    "type": "boolean"
                },
                "showFilters": {
                    "type": "boolean"
                },
                "showHeader": {
                    "type": "boolean"
                },
                "showLastComputation": {
                    "type": "boolean"
                },
                "showLastComputationRefresh": {
                    "type": "boolean"
                },
                "showResults": {
                    "type": "boolean"
                },
                "showTable": {
                    "type": "boolean"
                },
                "source": {
                    "$ref": "#/definitions/InsightQueryNode"
                },
                "suppressSessionAnalysisWarning": {
                    "type": "boolean"
                },
                "vizSpecificOptions": {
                    "$ref": "#/definitions/VizSpecificOptions"
                }
            },
            "required": ["kind", "source"],
            "type": "object"
        },
        "InsightsQueryBase<FunnelsQueryResponse>": {
            "additionalProperties": false,
            "description": "Base class for insight query nodes. Should not be used directly.",
            "properties": {
                "aggregation_group_type_index": {
                    "description": "Groups aggregation",
                    "type": "integer"
                },
                "dateRange": {
                    "$ref": "#/definitions/DateRange",
                    "description": "Date range for the query"
                },
                "filterTestAccounts": {
                    "description": "Exclude internal and test users by applying the respective filters",
                    "type": "boolean"
                },
                "kind": {
                    "$ref": "#/definitions/NodeKind"
                },
                "modifiers": {
                    "$ref": "#/definitions/HogQLQueryModifiers",
                    "description": "Modifiers used when performing the query"
                },
                "properties": {
                    "anyOf": [
                        {
                            "items": {
                                "$ref": "#/definitions/AnyPropertyFilter"
                            },
                            "type": "array"
                        },
                        {
                            "$ref": "#/definitions/PropertyGroupFilter"
                        }
                    ],
                    "description": "Property filters for all series"
                },
                "response": {
                    "$ref": "#/definitions/FunnelsQueryResponse"
                },
                "samplingFactor": {
                    "description": "Sampling rate",
                    "type": ["number", "null"]
                }
            },
            "required": ["kind"],
            "type": "object"
        },
        "InsightsQueryBase<LifecycleQueryResponse>": {
            "additionalProperties": false,
            "description": "Base class for insight query nodes. Should not be used directly.",
            "properties": {
                "aggregation_group_type_index": {
                    "description": "Groups aggregation",
                    "type": "integer"
                },
                "dateRange": {
                    "$ref": "#/definitions/DateRange",
                    "description": "Date range for the query"
                },
                "filterTestAccounts": {
                    "description": "Exclude internal and test users by applying the respective filters",
                    "type": "boolean"
                },
                "kind": {
                    "$ref": "#/definitions/NodeKind"
                },
                "modifiers": {
                    "$ref": "#/definitions/HogQLQueryModifiers",
                    "description": "Modifiers used when performing the query"
                },
                "properties": {
                    "anyOf": [
                        {
                            "items": {
                                "$ref": "#/definitions/AnyPropertyFilter"
                            },
                            "type": "array"
                        },
                        {
                            "$ref": "#/definitions/PropertyGroupFilter"
                        }
                    ],
                    "description": "Property filters for all series"
                },
                "response": {
                    "$ref": "#/definitions/LifecycleQueryResponse"
                },
                "samplingFactor": {
                    "description": "Sampling rate",
                    "type": ["number", "null"]
                }
            },
            "required": ["kind"],
            "type": "object"
        },
        "InsightsQueryBase<PathsQueryResponse>": {
            "additionalProperties": false,
            "description": "Base class for insight query nodes. Should not be used directly.",
            "properties": {
                "aggregation_group_type_index": {
                    "description": "Groups aggregation",
                    "type": "integer"
                },
                "dateRange": {
                    "$ref": "#/definitions/DateRange",
                    "description": "Date range for the query"
                },
                "filterTestAccounts": {
                    "description": "Exclude internal and test users by applying the respective filters",
                    "type": "boolean"
                },
                "kind": {
                    "$ref": "#/definitions/NodeKind"
                },
                "modifiers": {
                    "$ref": "#/definitions/HogQLQueryModifiers",
                    "description": "Modifiers used when performing the query"
                },
                "properties": {
                    "anyOf": [
                        {
                            "items": {
                                "$ref": "#/definitions/AnyPropertyFilter"
                            },
                            "type": "array"
                        },
                        {
                            "$ref": "#/definitions/PropertyGroupFilter"
                        }
                    ],
                    "description": "Property filters for all series"
                },
                "response": {
                    "$ref": "#/definitions/PathsQueryResponse"
                },
                "samplingFactor": {
                    "description": "Sampling rate",
                    "type": ["number", "null"]
                }
            },
            "required": ["kind"],
            "type": "object"
        },
        "InsightsQueryBase<RetentionQueryResponse>": {
            "additionalProperties": false,
            "description": "Base class for insight query nodes. Should not be used directly.",
            "properties": {
                "aggregation_group_type_index": {
                    "description": "Groups aggregation",
                    "type": "integer"
                },
                "dateRange": {
                    "$ref": "#/definitions/DateRange",
                    "description": "Date range for the query"
                },
                "filterTestAccounts": {
                    "description": "Exclude internal and test users by applying the respective filters",
                    "type": "boolean"
                },
                "kind": {
                    "$ref": "#/definitions/NodeKind"
                },
                "modifiers": {
                    "$ref": "#/definitions/HogQLQueryModifiers",
                    "description": "Modifiers used when performing the query"
                },
                "properties": {
                    "anyOf": [
                        {
                            "items": {
                                "$ref": "#/definitions/AnyPropertyFilter"
                            },
                            "type": "array"
                        },
                        {
                            "$ref": "#/definitions/PropertyGroupFilter"
                        }
                    ],
                    "description": "Property filters for all series"
                },
                "response": {
                    "$ref": "#/definitions/RetentionQueryResponse"
                },
                "samplingFactor": {
                    "description": "Sampling rate",
                    "type": ["number", "null"]
                }
            },
            "required": ["kind"],
            "type": "object"
        },
        "InsightsQueryBase<TrendsQueryResponse>": {
            "additionalProperties": false,
            "description": "Base class for insight query nodes. Should not be used directly.",
            "properties": {
                "aggregation_group_type_index": {
                    "description": "Groups aggregation",
                    "type": "integer"
                },
                "dateRange": {
                    "$ref": "#/definitions/DateRange",
                    "description": "Date range for the query"
                },
                "filterTestAccounts": {
                    "description": "Exclude internal and test users by applying the respective filters",
                    "type": "boolean"
                },
                "kind": {
                    "$ref": "#/definitions/NodeKind"
                },
                "modifiers": {
                    "$ref": "#/definitions/HogQLQueryModifiers",
                    "description": "Modifiers used when performing the query"
                },
                "properties": {
                    "anyOf": [
                        {
                            "items": {
                                "$ref": "#/definitions/AnyPropertyFilter"
                            },
                            "type": "array"
                        },
                        {
                            "$ref": "#/definitions/PropertyGroupFilter"
                        }
                    ],
                    "description": "Property filters for all series"
                },
                "response": {
                    "$ref": "#/definitions/TrendsQueryResponse"
                },
                "samplingFactor": {
                    "description": "Sampling rate",
                    "type": ["number", "null"]
                }
            },
            "required": ["kind"],
            "type": "object"
        },
        "IntervalType": {
            "enum": ["minute", "hour", "day", "week", "month"],
            "type": "string"
        },
        "LifecycleFilter": {
            "additionalProperties": false,
            "properties": {
                "showLegend": {
                    "type": "boolean"
                },
                "showValuesOnSeries": {
                    "type": "boolean"
                },
                "toggledLifecycles": {
                    "items": {
                        "$ref": "#/definitions/LifecycleToggle"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "LifecycleFilterLegacy": {
            "additionalProperties": false,
            "description": "`LifecycleFilterType` minus everything inherited from `FilterType`",
            "properties": {
                "show_legend": {
                    "type": "boolean"
                },
                "show_values_on_series": {
                    "type": "boolean"
                },
                "toggledLifecycles": {
                    "items": {
                        "$ref": "#/definitions/LifecycleToggle"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "LifecycleQuery": {
            "additionalProperties": false,
            "properties": {
                "aggregation_group_type_index": {
                    "description": "Groups aggregation",
                    "type": "integer"
                },
                "dateRange": {
                    "$ref": "#/definitions/DateRange",
                    "description": "Date range for the query"
                },
                "filterTestAccounts": {
                    "description": "Exclude internal and test users by applying the respective filters",
                    "type": "boolean"
                },
                "interval": {
                    "$ref": "#/definitions/IntervalType",
                    "description": "Granularity of the response. Can be one of `hour`, `day`, `week` or `month`"
                },
                "kind": {
                    "const": "LifecycleQuery",
                    "type": "string"
                },
                "lifecycleFilter": {
                    "$ref": "#/definitions/LifecycleFilter",
                    "description": "Properties specific to the lifecycle insight"
                },
                "modifiers": {
                    "$ref": "#/definitions/HogQLQueryModifiers",
                    "description": "Modifiers used when performing the query"
                },
                "properties": {
                    "anyOf": [
                        {
                            "items": {
                                "$ref": "#/definitions/AnyPropertyFilter"
                            },
                            "type": "array"
                        },
                        {
                            "$ref": "#/definitions/PropertyGroupFilter"
                        }
                    ],
                    "description": "Property filters for all series"
                },
                "response": {
                    "$ref": "#/definitions/LifecycleQueryResponse"
                },
                "samplingFactor": {
                    "description": "Sampling rate",
                    "type": ["number", "null"]
                },
                "series": {
                    "description": "Events and actions to include",
                    "items": {
                        "$ref": "#/definitions/AnyEntityNode"
                    },
                    "type": "array"
                }
            },
            "required": ["kind", "series"],
            "type": "object"
        },
        "LifecycleQueryResponse": {
            "additionalProperties": false,
            "properties": {
                "error": {
                    "description": "Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",
                    "type": "string"
                },
                "hogql": {
                    "description": "Generated HogQL query.",
                    "type": "string"
                },
                "modifiers": {
                    "$ref": "#/definitions/HogQLQueryModifiers",
                    "description": "Modifiers used when performing the query"
                },
                "results": {
                    "items": {
                        "type": "object"
                    },
                    "type": "array"
                },
                "timings": {
                    "description": "Measured timings for different parts of the query generation process",
                    "items": {
                        "$ref": "#/definitions/QueryTiming"
                    },
                    "type": "array"
                }
            },
            "required": ["results"],
            "type": "object"
        },
        "LifecycleToggle": {
            "enum": ["new", "resurrecting", "returning", "dormant"],
            "type": "string"
        },
        "MathType": {
            "anyOf": [
                {
                    "$ref": "#/definitions/BaseMathType"
                },
                {
                    "$ref": "#/definitions/PropertyMathType"
                },
                {
                    "$ref": "#/definitions/CountPerActorMathType"
                },
                {
                    "$ref": "#/definitions/GroupMathType"
                },
                {
                    "$ref": "#/definitions/HogQLMathType"
                }
            ]
        },
        "NamedParameters<typeof dateRangeForFilter>": {
            "additionalProperties": false,
            "properties": {
                "source": {
                    "$ref": "#/definitions/FilterType"
                }
            },
            "type": "object"
        },
        "NodeKind": {
            "description": "PostHog Query Schema definition.\n\nThis file acts as the source of truth for:\n\n- frontend/src/queries/schema.json   - generated from typescript via \"pnpm run generate:schema:json\"\n\n- posthog/schema.py   - generated from json the above json via \"pnpm run generate:schema:python\"",
            "enum": [
                "EventsNode",
                "ActionsNode",
                "DataWarehouseNode",
                "EventsQuery",
                "PersonsNode",
                "HogQLQuery",
                "HogQLMetadata",
                "HogQLAutocomplete",
                "ActorsQuery",
                "FunnelsActorsQuery",
                "FunnelCorrelationActorsQuery",
                "SessionsTimelineQuery",
                "DataTableNode",
                "DataVisualizationNode",
                "SavedInsightNode",
                "InsightVizNode",
                "TrendsQuery",
                "FunnelsQuery",
                "RetentionQuery",
                "PathsQuery",
                "StickinessQuery",
                "LifecycleQuery",
                "InsightActorsQuery",
                "InsightActorsQueryOptions",
                "FunnelCorrelationQuery",
                "WebOverviewQuery",
                "WebTopClicksQuery",
                "WebStatsTableQuery",
                "TimeToSeeDataSessionsQuery",
                "TimeToSeeDataQuery",
                "TimeToSeeDataSessionsJSONNode",
                "TimeToSeeDataSessionsWaterfallNode",
                "DatabaseSchemaQuery"
            ],
            "type": "string"
        },
        "PathCleaningFilter": {
            "additionalProperties": false,
            "properties": {
                "alias": {
                    "type": "string"
                },
                "regex": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PathType": {
            "enum": ["$pageview", "$screen", "custom_event", "hogql"],
            "type": "string"
        },
        "PathsFilter": {
            "additionalProperties": false,
            "properties": {
                "edgeLimit": {
                    "type": "integer"
                },
                "endPoint": {
                    "type": "string"
                },
                "excludeEvents": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "includeEventTypes": {
                    "items": {
                        "$ref": "#/definitions/PathType"
                    },
                    "type": "array"
                },
                "localPathCleaningFilters": {
                    "items": {
                        "$ref": "#/definitions/PathCleaningFilter"
                    },
                    "type": "array"
                },
                "maxEdgeWeight": {
                    "type": "integer"
                },
                "minEdgeWeight": {
                    "type": "integer"
                },
                "pathDropoffKey": {
                    "description": "Relevant only within actors query",
                    "type": "string"
                },
                "pathEndKey": {
                    "description": "Relevant only within actors query",
                    "type": "string"
                },
                "pathGroupings": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "pathReplacements": {
                    "type": "boolean"
                },
                "pathStartKey": {
                    "description": "Relevant only within actors query",
                    "type": "string"
                },
                "pathsHogQLExpression": {
                    "type": "string"
                },
                "startPoint": {
                    "type": "string"
                },
                "stepLimit": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "PathsFilterLegacy": {
            "additionalProperties": false,
            "description": "`PathsFilterType` minus everything inherited from `FilterType` and persons modal related params",
            "properties": {
                "edge_limit": {
                    "type": "integer"
                },
                "end_point": {
                    "type": "string"
                },
                "exclude_events": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "funnel_filter": {
                    "type": "object"
                },
                "funnel_paths": {
                    "$ref": "#/definitions/FunnelPathType"
                },
                "include_event_types": {
                    "items": {
                        "$ref": "#/definitions/PathType"
                    },
                    "type": "array"
                },
                "local_path_cleaning_filters": {
                    "items": {
                        "$ref": "#/definitions/PathCleaningFilter"
                    },
                    "type": "array"
                },
                "max_edge_weight": {
                    "type": "integer"
                },
                "min_edge_weight": {
                    "type": "integer"
                },
                "path_groupings": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "path_replacements": {
                    "type": "boolean"
                },
                "path_type": {
                    "$ref": "#/definitions/PathType"
                },
                "paths_hogql_expression": {
                    "type": "string"
                },
                "start_point": {
                    "type": "string"
                },
                "step_limit": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "PathsQuery": {
            "additionalProperties": false,
            "properties": {
                "aggregation_group_type_index": {
                    "description": "Groups aggregation",
                    "type": "integer"
                },
                "dateRange": {
                    "$ref": "#/definitions/DateRange",
                    "description": "Date range for the query"
                },
                "filterTestAccounts": {
                    "description": "Exclude internal and test users by applying the respective filters",
                    "type": "boolean"
                },
                "funnelPathsFilter": {
                    "$ref": "#/definitions/FunnelPathsFilter",
                    "description": "Used for displaying paths in relation to funnel steps."
                },
                "kind": {
                    "const": "PathsQuery",
                    "type": "string"
                },
                "modifiers": {
                    "$ref": "#/definitions/HogQLQueryModifiers",
                    "description": "Modifiers used when performing the query"
                },
                "pathsFilter": {
                    "$ref": "#/definitions/PathsFilter",
                    "description": "Properties specific to the paths insight"
                },
                "properties": {
                    "anyOf": [
                        {
                            "items": {
                                "$ref": "#/definitions/AnyPropertyFilter"
                            },
                            "type": "array"
                        },
                        {
                            "$ref": "#/definitions/PropertyGroupFilter"
                        }
                    ],
                    "description": "Property filters for all series"
                },
                "response": {
                    "$ref": "#/definitions/PathsQueryResponse"
                },
                "samplingFactor": {
                    "description": "Sampling rate",
                    "type": ["number", "null"]
                }
            },
            "required": ["kind", "pathsFilter"],
            "type": "object"
        },
        "PathsQueryResponse": {
            "additionalProperties": false,
            "properties": {
                "error": {
                    "description": "Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",
                    "type": "string"
                },
                "hogql": {
                    "description": "Generated HogQL query.",
                    "type": "string"
                },
                "modifiers": {
                    "$ref": "#/definitions/HogQLQueryModifiers",
                    "description": "Modifiers used when performing the query"
                },
                "results": {
                    "items": {
                        "type": "object"
                    },
                    "type": "array"
                },
                "timings": {
                    "description": "Measured timings for different parts of the query generation process",
                    "items": {
                        "$ref": "#/definitions/QueryTiming"
                    },
                    "type": "array"
                }
            },
            "required": ["results"],
            "type": "object"
        },
        "PersonPropertyFilter": {
            "additionalProperties": false,
            "description": "Sync with plugin-server/src/types.ts",
            "properties": {
                "key": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "operator": {
                    "$ref": "#/definitions/PropertyOperator"
                },
                "type": {
                    "const": "person",
                    "description": "Person properties",
                    "type": "string"
                },
                "value": {
                    "$ref": "#/definitions/PropertyFilterValue"
                }
            },
            "required": ["key", "operator", "type"],
            "type": "object"
        },
        "PersonsNode": {
            "additionalProperties": false,
            "properties": {
                "cohort": {
                    "type": "integer"
                },
                "distinctId": {
                    "type": "string"
                },
                "fixedProperties": {
                    "description": "Fixed properties in the query, can't be edited in the interface (e.g. scoping down by person)",
                    "items": {
                        "$ref": "#/definitions/AnyPropertyFilter"
                    },
                    "type": "array"
                },
                "kind": {
                    "const": "PersonsNode",
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "modifiers": {
                    "$ref": "#/definitions/HogQLQueryModifiers",
                    "description": "Modifiers used when performing the query"
                },
                "offset": {
                    "type": "integer"
                },
                "properties": {
                    "description": "Properties configurable in the interface",
                    "items": {
                        "$ref": "#/definitions/AnyPropertyFilter"
                    },
                    "type": "array"
                },
                "response": {
                    "type": "object"
                },
                "search": {
                    "type": "string"
                }
            },
            "required": ["kind"],
            "type": "object"
        },
        "PropertyFilterType": {
            "enum": [
                "meta",
                "event",
                "person",
                "element",
                "feature",
                "session",
                "cohort",
                "recording",
                "group",
                "hogql",
                "data_warehouse",
                "data_warehouse_person_property"
            ],
            "type": "string"
        },
        "PropertyFilterValue": {
            "anyOf": [
                {
                    "type": "string"
                },
                {
                    "type": "number"
                },
                {
                    "items": {
                        "type": ["string", "number"]
                    },
                    "type": "array"
                },
                {
                    "type": "null"
                }
            ]
        },
        "PropertyGroupFilter": {
            "additionalProperties": false,
            "properties": {
                "type": {
                    "$ref": "#/definitions/FilterLogicalOperator"
                },
                "values": {
                    "items": {
                        "$ref": "#/definitions/PropertyGroupFilterValue"
                    },
                    "type": "array"
                }
            },
            "required": ["type", "values"],
            "type": "object"
        },
        "PropertyGroupFilterValue": {
            "additionalProperties": false,
            "properties": {
                "type": {
                    "$ref": "#/definitions/FilterLogicalOperator"
                },
                "values": {
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/AnyPropertyFilter"
                            },
                            {
                                "$ref": "#/definitions/PropertyGroupFilterValue"
                            }
                        ]
                    },
                    "type": "array"
                }
            },
            "required": ["type", "values"],
            "type": "object"
        },
        "PropertyMathType": {
            "enum": ["avg", "sum", "min", "max", "median", "p90", "p95", "p99"],
            "type": "string"
        },
        "PropertyOperator": {
            "description": "Sync with plugin-server/src/types.ts",
            "enum": [
                "exact",
                "is_not",
                "icontains",
                "not_icontains",
                "regex",
                "not_regex",
                "gt",
                "gte",
                "lt",
                "lte",
                "is_set",
                "is_not_set",
                "is_date_exact",
                "is_date_before",
                "is_date_after",
                "between",
                "not_between",
                "min",
                "max"
            ],
            "type": "string"
        },
        "QueryRequest": {
            "additionalProperties": false,
            "properties": {
                "async": {
                    "description": "(Experimental) Whether to run the query asynchronously. Defaults to False. If True, the `id` of the query can be used to check the status and to cancel it.",
                    "examples": [true],
                    "type": "boolean"
                },
                "client_query_id": {
                    "description": "Client provided query ID. Can be used to retrieve the status or cancel the query.",
                    "type": "string"
                },
                "query": {
                    "$ref": "#/definitions/QuerySchema",
                    "description": "Submit a JSON string representing a query for PostHog data analysis, for example a HogQL query.\n\nExample payload:\n\n```\n\n{\"query\": {\"kind\": \"HogQLQuery\", \"query\": \"select * from events limit 100\"}}\n\n```\n\nFor more details on HogQL queries, see the [PostHog HogQL documentation](/docs/hogql#api-access)."
                },
                "refresh": {
                    "type": "boolean"
                }
            },
            "required": ["query"],
            "type": "object"
        },
        "QueryResponseAlternative": {
            "anyOf": [
                {
                    "type": "object"
                },
                {
                    "additionalProperties": false,
                    "properties": {
                        "results": {
                            "items": {
                                "type": "object"
                            },
                            "type": "array"
                        }
                    },
                    "required": ["results"],
                    "type": "object"
                },
                {
                    "additionalProperties": false,
                    "properties": {
                        "columns": {
                            "items": {},
                            "type": "array"
                        },
                        "error": {
                            "description": "Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",
                            "type": "string"
                        },
                        "hasMore": {
                            "type": "boolean"
                        },
                        "hogql": {
                            "description": "Generated HogQL query.",
                            "type": "string"
                        },
                        "limit": {
                            "type": "integer"
                        },
                        "modifiers": {
                            "$ref": "#/definitions/HogQLQueryModifiers",
                            "description": "Modifiers used when performing the query"
                        },
                        "offset": {
                            "type": "integer"
                        },
                        "results": {
                            "items": {
                                "items": {},
                                "type": "array"
                            },
                            "type": "array"
                        },
                        "timings": {
                            "description": "Measured timings for different parts of the query generation process",
                            "items": {
                                "$ref": "#/definitions/QueryTiming"
                            },
                            "type": "array"
                        },
                        "types": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    "required": ["columns", "hogql", "results", "types"],
                    "type": "object"
                },
                {
                    "additionalProperties": false,
                    "properties": {
                        "columns": {
                            "items": {},
                            "type": "array"
                        },
                        "error": {
                            "description": "Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",
                            "type": "string"
                        },
                        "hasMore": {
                            "type": "boolean"
                        },
                        "hogql": {
                            "description": "Generated HogQL query.",
                            "type": "string"
                        },
                        "limit": {
                            "type": "integer"
                        },
                        "missing_actors_count": {
                            "type": "integer"
                        },
                        "modifiers": {
                            "$ref": "#/definitions/HogQLQueryModifiers",
                            "description": "Modifiers used when performing the query"
                        },
                        "offset": {
                            "type": "integer"
                        },
                        "results": {
                            "items": {
                                "items": {},
                                "type": "array"
                            },
                            "type": "array"
                        },
                        "timings": {
                            "description": "Measured timings for different parts of the query generation process",
                            "items": {
                                "$ref": "#/definitions/QueryTiming"
                            },
                            "type": "array"
                        },
                        "types": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    "required": ["columns", "hogql", "limit", "offset", "results", "types"],
                    "type": "object"
                },
                {
                    "additionalProperties": false,
                    "properties": {
                        "breakdown": {
                            "items": {
                                "additionalProperties": false,
                                "properties": {
                                    "label": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "$ref": "#/definitions/BreakdownValueInt"
                                            }
                                        ]
                                    }
                                },
                                "required": ["label", "value"],
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "compare": {
                            "items": {
                                "additionalProperties": false,
                                "properties": {
                                    "label": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                },
                                "required": ["label", "value"],
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "day": {
                            "items": {
                                "additionalProperties": false,
                                "properties": {
                                    "label": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "$ref": "#/definitions/DatetimeDay"
                                            },
                                            {
                                                "$ref": "#/definitions/Day"
                                            }
                                        ]
                                    }
                                },
                                "required": ["label", "value"],
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "interval": {
                            "items": {
                                "additionalProperties": false,
                                "properties": {
                                    "label": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "description": "An interval selected out of available intervals in source query",
                                        "type": "integer"
                                    }
                                },
                                "required": ["label", "value"],
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "series": {
                            "items": {
                                "additionalProperties": false,
                                "properties": {
                                    "label": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "integer"
                                    }
                                },
                                "required": ["label", "value"],
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "status": {
                            "items": {
                                "additionalProperties": false,
                                "properties": {
                                    "label": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                },
                                "required": ["label", "value"],
                                "type": "object"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                },
                {
                    "additionalProperties": false,
                    "properties": {
                        "error": {
                            "description": "Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",
                            "type": "string"
                        },
                        "hasMore": {
                            "type": "boolean"
                        },
                        "hogql": {
                            "description": "Generated HogQL query.",
                            "type": "string"
                        },
                        "modifiers": {
                            "$ref": "#/definitions/HogQLQueryModifiers",
                            "description": "Modifiers used when performing the query"
                        },
                        "results": {
                            "items": {
                                "$ref": "#/definitions/TimelineEntry"
                            },
                            "type": "array"
                        },
                        "timings": {
                            "description": "Measured timings for different parts of the query generation process",
                            "items": {
                                "$ref": "#/definitions/QueryTiming"
                            },
                            "type": "array"
                        }
                    },
                    "required": ["results"],
                    "type": "object"
                },
                {
                    "additionalProperties": false,
                    "properties": {
                        "clickhouse": {
                            "description": "Executed ClickHouse query",
                            "type": "string"
                        },
                        "columns": {
                            "description": "Returned columns",
                            "items": {},
                            "type": "array"
                        },
                        "error": {
                            "description": "Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",
                            "type": "string"
                        },
                        "explain": {
                            "description": "Query explanation output",
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "hasMore": {
                            "type": "boolean"
                        },
                        "hogql": {
                            "description": "Generated HogQL query.",
                            "type": "string"
                        },
                        "limit": {
                            "type": "integer"
                        },
                        "metadata": {
                            "$ref": "#/definitions/HogQLMetadataResponse",
                            "description": "Query metadata output"
                        },
                        "modifiers": {
                            "$ref": "#/definitions/HogQLQueryModifiers",
                            "description": "Modifiers used when performing the query"
                        },
                        "offset": {
                            "type": "integer"
                        },
                        "query": {
                            "description": "Input query string",
                            "type": "string"
                        },
                        "results": {
                            "items": {},
                            "type": "array"
                        },
                        "timings": {
                            "description": "Measured timings for different parts of the query generation process",
                            "items": {
                                "$ref": "#/definitions/QueryTiming"
                            },
                            "type": "array"
                        },
                        "types": {
                            "description": "Types of returned columns",
                            "items": {},
                            "type": "array"
                        }
                    },
                    "required": ["results"],
                    "type": "object"
                },
                {
                    "additionalProperties": false,
                    "properties": {
                        "errors": {
                            "items": {
                                "$ref": "#/definitions/HogQLNotice"
                            },
                            "type": "array"
                        },
                        "inputExpr": {
                            "type": "string"
                        },
                        "inputSelect": {
                            "type": "string"
                        },
                        "isValid": {
                            "type": "boolean"
                        },
                        "isValidView": {
                            "type": "boolean"
                        },
                        "notices": {
                            "items": {
                                "$ref": "#/definitions/HogQLNotice"
                            },
                            "type": "array"
                        },
                        "warnings": {
                            "items": {
                                "$ref": "#/definitions/HogQLNotice"
                            },
                            "type": "array"
                        }
                    },
                    "required": ["errors", "warnings", "notices"],
                    "type": "object"
                },
                {
                    "additionalProperties": false,
                    "properties": {
                        "incomplete_list": {
                            "description": "Whether or not the suggestions returned are complete",
                            "type": "boolean"
                        },
                        "suggestions": {
                            "items": {
                                "$ref": "#/definitions/AutocompleteCompletionItem"
                            },
                            "type": "array"
                        },
                        "timings": {
                            "description": "Measured timings for different parts of the query generation process",
                            "items": {
                                "$ref": "#/definitions/QueryTiming"
                            },
                            "type": "array"
                        }
                    },
                    "required": ["suggestions", "incomplete_list"],
                    "type": "object"
                },
                {
                    "additionalProperties": false,
                    "properties": {
                        "error": {
                            "description": "Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",
                            "type": "string"
                        },
                        "hogql": {
                            "description": "Generated HogQL query.",
                            "type": "string"
                        },
                        "modifiers": {
                            "$ref": "#/definitions/HogQLQueryModifiers",
                            "description": "Modifiers used when performing the query"
                        },
                        "results": {
                            "items": {
                                "$ref": "#/definitions/WebOverviewItem"
                            },
                            "type": "array"
                        },
                        "samplingRate": {
                            "$ref": "#/definitions/SamplingRate"
                        },
                        "timings": {
                            "description": "Measured timings for different parts of the query generation process",
                            "items": {
                                "$ref": "#/definitions/QueryTiming"
                            },
                            "type": "array"
                        }
                    },
                    "required": ["results"],
                    "type": "object"
                },
                {
                    "additionalProperties": false,
                    "properties": {
                        "columns": {
                            "items": {},
                            "type": "array"
                        },
                        "error": {
                            "description": "Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",
                            "type": "string"
                        },
                        "hasMore": {
                            "type": "boolean"
                        },
                        "hogql": {
                            "description": "Generated HogQL query.",
                            "type": "string"
                        },
                        "limit": {
                            "type": "integer"
                        },
                        "modifiers": {
                            "$ref": "#/definitions/HogQLQueryModifiers",
                            "description": "Modifiers used when performing the query"
                        },
                        "offset": {
                            "type": "integer"
                        },
                        "results": {
                            "items": {},
                            "type": "array"
                        },
                        "samplingRate": {
                            "$ref": "#/definitions/SamplingRate"
                        },
                        "timings": {
                            "description": "Measured timings for different parts of the query generation process",
                            "items": {
                                "$ref": "#/definitions/QueryTiming"
                            },
                            "type": "array"
                        },
                        "types": {
                            "items": {},
                            "type": "array"
                        }
                    },
                    "required": ["results"],
                    "type": "object"
                },
                {
                    "additionalProperties": false,
                    "properties": {
                        "columns": {
                            "items": {},
                            "type": "array"
                        },
                        "error": {
                            "description": "Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",
                            "type": "string"
                        },
                        "hogql": {
                            "description": "Generated HogQL query.",
                            "type": "string"
                        },
                        "modifiers": {
                            "$ref": "#/definitions/HogQLQueryModifiers",
                            "description": "Modifiers used when performing the query"
                        },
                        "results": {
                            "items": {},
                            "type": "array"
                        },
                        "samplingRate": {
                            "$ref": "#/definitions/SamplingRate"
                        },
                        "timings": {
                            "description": "Measured timings for different parts of the query generation process",
                            "items": {
                                "$ref": "#/definitions/QueryTiming"
                            },
                            "type": "array"
                        },
                        "types": {
                            "items": {},
                            "type": "array"
                        }
                    },
                    "required": ["results"],
                    "type": "object"
                },
                {
                    "properties": {},
                    "type": "object"
                },
                {
                    "not": {}
                },
                {
                    "additionalProperties": false,
                    "properties": {
                        "columns": {
                            "items": {},
                            "type": "array"
                        },
                        "error": {
                            "description": "Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",
                            "type": "string"
                        },
                        "hasMore": {
                            "type": "boolean"
                        },
                        "hogql": {
                            "description": "Generated HogQL query.",
                            "type": "string"
                        },
                        "limit": {
                            "type": "integer"
                        },
                        "modifiers": {
                            "$ref": "#/definitions/HogQLQueryModifiers",
                            "description": "Modifiers used when performing the query"
                        },
                        "offset": {
                            "type": "integer"
                        },
                        "results": {
                            "items": {
                                "items": {},
                                "type": "array"
                            },
                            "type": "array"
                        },
                        "timings": {
                            "description": "Measured timings for different parts of the query generation process",
                            "items": {
                                "$ref": "#/definitions/QueryTiming"
                            },
                            "type": "array"
                        },
                        "types": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    "required": ["columns", "hogql", "results", "types"],
                    "type": "object"
                },
                {
                    "additionalProperties": false,
                    "properties": {
                        "columns": {
                            "items": {},
                            "type": "array"
                        },
                        "error": {
                            "description": "Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",
                            "type": "string"
                        },
                        "hasMore": {
                            "type": "boolean"
                        },
                        "hogql": {
                            "description": "Generated HogQL query.",
                            "type": "string"
                        },
                        "limit": {
                            "type": "integer"
                        },
                        "missing_actors_count": {
                            "type": "integer"
                        },
                        "modifiers": {
                            "$ref": "#/definitions/HogQLQueryModifiers",
                            "description": "Modifiers used when performing the query"
                        },
                        "offset": {
                            "type": "integer"
                        },
                        "results": {
                            "items": {
                                "items": {},
                                "type": "array"
                            },
                            "type": "array"
                        },
                        "timings": {
                            "description": "Measured timings for different parts of the query generation process",
                            "items": {
                                "$ref": "#/definitions/QueryTiming"
                            },
                            "type": "array"
                        },
                        "types": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    "required": ["columns", "hogql", "limit", "offset", "results", "types"],
                    "type": "object"
                },
                {
                    "additionalProperties": false,
                    "properties": {
                        "clickhouse": {
                            "description": "Executed ClickHouse query",
                            "type": "string"
                        },
                        "columns": {
                            "description": "Returned columns",
                            "items": {},
                            "type": "array"
                        },
                        "error": {
                            "description": "Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",
                            "type": "string"
                        },
                        "explain": {
                            "description": "Query explanation output",
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "hasMore": {
                            "type": "boolean"
                        },
                        "hogql": {
                            "description": "Generated HogQL query.",
                            "type": "string"
                        },
                        "limit": {
                            "type": "integer"
                        },
                        "metadata": {
                            "$ref": "#/definitions/HogQLMetadataResponse",
                            "description": "Query metadata output"
                        },
                        "modifiers": {
                            "$ref": "#/definitions/HogQLQueryModifiers",
                            "description": "Modifiers used when performing the query"
                        },
                        "offset": {
                            "type": "integer"
                        },
                        "query": {
                            "description": "Input query string",
                            "type": "string"
                        },
                        "results": {
                            "items": {},
                            "type": "array"
                        },
                        "timings": {
                            "description": "Measured timings for different parts of the query generation process",
                            "items": {
                                "$ref": "#/definitions/QueryTiming"
                            },
                            "type": "array"
                        },
                        "types": {
                            "description": "Types of returned columns",
                            "items": {},
                            "type": "array"
                        }
                    },
                    "required": ["results"],
                    "type": "object"
                },
                {
                    "additionalProperties": false,
                    "properties": {
                        "results": {
                            "items": {
                                "type": "object"
                            },
                            "type": "array"
                        }
                    },
                    "required": ["results"],
                    "type": "object"
                },
                {
                    "additionalProperties": false,
                    "properties": {
                        "error": {
                            "description": "Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",
                            "type": "string"
                        },
                        "hogql": {
                            "description": "Generated HogQL query.",
                            "type": "string"
                        },
                        "modifiers": {
                            "$ref": "#/definitions/HogQLQueryModifiers",
                            "description": "Modifiers used when performing the query"
                        },
                        "results": {
                            "items": {
                                "$ref": "#/definitions/WebOverviewItem"
                            },
                            "type": "array"
                        },
                        "samplingRate": {
                            "$ref": "#/definitions/SamplingRate"
                        },
                        "timings": {
                            "description": "Measured timings for different parts of the query generation process",
                            "items": {
                                "$ref": "#/definitions/QueryTiming"
                            },
                            "type": "array"
                        }
                    },
                    "required": ["results"],
                    "type": "object"
                },
                {
                    "additionalProperties": false,
                    "properties": {
                        "columns": {
                            "items": {},
                            "type": "array"
                        },
                        "error": {
                            "description": "Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",
                            "type": "string"
                        },
                        "hasMore": {
                            "type": "boolean"
                        },
                        "hogql": {
                            "description": "Generated HogQL query.",
                            "type": "string"
                        },
                        "limit": {
                            "type": "integer"
                        },
                        "modifiers": {
                            "$ref": "#/definitions/HogQLQueryModifiers",
                            "description": "Modifiers used when performing the query"
                        },
                        "offset": {
                            "type": "integer"
                        },
                        "results": {
                            "items": {},
                            "type": "array"
                        },
                        "samplingRate": {
                            "$ref": "#/definitions/SamplingRate"
                        },
                        "timings": {
                            "description": "Measured timings for different parts of the query generation process",
                            "items": {
                                "$ref": "#/definitions/QueryTiming"
                            },
                            "type": "array"
                        },
                        "types": {
                            "items": {},
                            "type": "array"
                        }
                    },
                    "required": ["results"],
                    "type": "object"
                },
                {
                    "additionalProperties": false,
                    "properties": {
                        "columns": {
                            "items": {},
                            "type": "array"
                        },
                        "error": {
                            "description": "Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",
                            "type": "string"
                        },
                        "hogql": {
                            "description": "Generated HogQL query.",
                            "type": "string"
                        },
                        "modifiers": {
                            "$ref": "#/definitions/HogQLQueryModifiers",
                            "description": "Modifiers used when performing the query"
                        },
                        "results": {
                            "items": {},
                            "type": "array"
                        },
                        "samplingRate": {
                            "$ref": "#/definitions/SamplingRate"
                        },
                        "timings": {
                            "description": "Measured timings for different parts of the query generation process",
                            "items": {
                                "$ref": "#/definitions/QueryTiming"
                            },
                            "type": "array"
                        },
                        "types": {
                            "items": {},
                            "type": "array"
                        }
                    },
                    "required": ["results"],
                    "type": "object"
                },
                {
                    "additionalProperties": false,
                    "properties": {
                        "error": {
                            "description": "Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",
                            "type": "string"
                        },
                        "hogql": {
                            "description": "Generated HogQL query.",
                            "type": "string"
                        },
                        "modifiers": {
                            "$ref": "#/definitions/HogQLQueryModifiers",
                            "description": "Modifiers used when performing the query"
                        },
                        "results": {
                            "items": {
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "timings": {
                            "description": "Measured timings for different parts of the query generation process",
                            "items": {
                                "$ref": "#/definitions/QueryTiming"
                            },
                            "type": "array"
                        }
                    },
                    "required": ["results"],
                    "type": "object"
                },
                {
                    "additionalProperties": false,
                    "properties": {
                        "error": {
                            "description": "Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",
                            "type": "string"
                        },
                        "hogql": {
                            "description": "Generated HogQL query.",
                            "type": "string"
                        },
                        "modifiers": {
                            "$ref": "#/definitions/HogQLQueryModifiers",
                            "description": "Modifiers used when performing the query"
                        },
                        "results": {
                            "anyOf": [
                                {
                                    "$ref": "#/definitions/FunnelStepsResults"
                                },
                                {
                                    "$ref": "#/definitions/FunnelStepsBreakdownResults"
                                },
                                {
                                    "$ref": "#/definitions/FunnelTimeToConvertResults"
                                },
                                {
                                    "$ref": "#/definitions/FunnelTrendsResults"
                                }
                            ]
                        },
                        "timings": {
                            "description": "Measured timings for different parts of the query generation process",
                            "items": {
                                "$ref": "#/definitions/QueryTiming"
                            },
                            "type": "array"
                        }
                    },
                    "required": ["results"],
                    "type": "object"
                },
                {
                    "additionalProperties": false,
                    "properties": {
                        "error": {
                            "description": "Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",
                            "type": "string"
                        },
                        "hogql": {
                            "description": "Generated HogQL query.",
                            "type": "string"
                        },
                        "modifiers": {
                            "$ref": "#/definitions/HogQLQueryModifiers",
                            "description": "Modifiers used when performing the query"
                        },
                        "results": {
                            "items": {
                                "$ref": "#/definitions/RetentionResult"
                            },
                            "type": "array"
                        },
                        "timings": {
                            "description": "Measured timings for different parts of the query generation process",
                            "items": {
                                "$ref": "#/definitions/QueryTiming"
                            },
                            "type": "array"
                        }
                    },
                    "required": ["results"],
                    "type": "object"
                },
                {
                    "additionalProperties": false,
                    "properties": {
                        "error": {
                            "description": "Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",
                            "type": "string"
                        },
                        "hogql": {
                            "description": "Generated HogQL query.",
                            "type": "string"
                        },
                        "modifiers": {
                            "$ref": "#/definitions/HogQLQueryModifiers",
                            "description": "Modifiers used when performing the query"
                        },
                        "results": {
                            "items": {
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "timings": {
                            "description": "Measured timings for different parts of the query generation process",
                            "items": {
                                "$ref": "#/definitions/QueryTiming"
                            },
                            "type": "array"
                        }
                    },
                    "required": ["results"],
                    "type": "object"
                },
                {
                    "additionalProperties": false,
                    "properties": {
                        "error": {
                            "description": "Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",
                            "type": "string"
                        },
                        "hogql": {
                            "description": "Generated HogQL query.",
                            "type": "string"
                        },
                        "modifiers": {
                            "$ref": "#/definitions/HogQLQueryModifiers",
                            "description": "Modifiers used when performing the query"
                        },
                        "results": {
                            "items": {
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "timings": {
                            "description": "Measured timings for different parts of the query generation process",
                            "items": {
                                "$ref": "#/definitions/QueryTiming"
                            },
                            "type": "array"
                        }
                    },
                    "required": ["results"],
                    "type": "object"
                },
                {
                    "additionalProperties": false,
                    "properties": {
                        "error": {
                            "description": "Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",
                            "type": "string"
                        },
                        "hogql": {
                            "description": "Generated HogQL query.",
                            "type": "string"
                        },
                        "modifiers": {
                            "$ref": "#/definitions/HogQLQueryModifiers",
                            "description": "Modifiers used when performing the query"
                        },
                        "results": {
                            "items": {
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "timings": {
                            "description": "Measured timings for different parts of the query generation process",
                            "items": {
                                "$ref": "#/definitions/QueryTiming"
                            },
                            "type": "array"
                        }
                    },
                    "required": ["results"],
                    "type": "object"
                },
                {
                    "additionalProperties": false,
                    "properties": {
                        "columns": {
                            "items": {},
                            "type": "array"
                        },
                        "error": {
                            "description": "Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",
                            "type": "string"
                        },
                        "hasMore": {
                            "type": "boolean"
                        },
                        "hogql": {
                            "description": "Generated HogQL query.",
                            "type": "string"
                        },
                        "limit": {
                            "type": "integer"
                        },
                        "modifiers": {
                            "$ref": "#/definitions/HogQLQueryModifiers",
                            "description": "Modifiers used when performing the query"
                        },
                        "offset": {
                            "type": "integer"
                        },
                        "results": {
                            "$ref": "#/definitions/FunnelCorrelationResult"
                        },
                        "timings": {
                            "description": "Measured timings for different parts of the query generation process",
                            "items": {
                                "$ref": "#/definitions/QueryTiming"
                            },
                            "type": "array"
                        },
                        "types": {
                            "items": {},
                            "type": "array"
                        }
                    },
                    "required": ["results"],
                    "type": "object"
                },
                {
                    "additionalProperties": {
                        "items": {
                            "$ref": "#/definitions/DatabaseSchemaQueryResponseField"
                        },
                        "type": "array"
                    },
                    "type": "object"
                }
            ]
        },
        "QuerySchema": {
            "discriminator": {
                "propertyName": "kind"
            },
            "oneOf": [
                {
                    "$ref": "#/definitions/EventsNode"
                },
                {
                    "$ref": "#/definitions/ActionsNode"
                },
                {
                    "$ref": "#/definitions/PersonsNode"
                },
                {
                    "$ref": "#/definitions/DataWarehouseNode"
                },
                {
                    "$ref": "#/definitions/TimeToSeeDataSessionsQuery"
                },
                {
                    "$ref": "#/definitions/EventsQuery"
                },
                {
                    "$ref": "#/definitions/ActorsQuery"
                },
                {
                    "$ref": "#/definitions/InsightActorsQuery"
                },
                {
                    "$ref": "#/definitions/InsightActorsQueryOptions"
                },
                {
                    "$ref": "#/definitions/SessionsTimelineQuery"
                },
                {
                    "$ref": "#/definitions/HogQLQuery"
                },
                {
                    "$ref": "#/definitions/HogQLMetadata"
                },
                {
                    "$ref": "#/definitions/HogQLAutocomplete"
                },
                {
                    "$ref": "#/definitions/WebOverviewQuery"
                },
                {
                    "$ref": "#/definitions/WebStatsTableQuery"
                },
                {
                    "$ref": "#/definitions/WebTopClicksQuery"
                },
                {
                    "$ref": "#/definitions/DataVisualizationNode"
                },
                {
                    "$ref": "#/definitions/DataTableNode"
                },
                {
                    "$ref": "#/definitions/SavedInsightNode"
                },
                {
                    "$ref": "#/definitions/InsightVizNode"
                },
                {
                    "$ref": "#/definitions/TrendsQuery"
                },
                {
                    "$ref": "#/definitions/FunnelsQuery"
                },
                {
                    "$ref": "#/definitions/RetentionQuery"
                },
                {
                    "$ref": "#/definitions/PathsQuery"
                },
                {
                    "$ref": "#/definitions/StickinessQuery"
                },
                {
                    "$ref": "#/definitions/LifecycleQuery"
                },
                {
                    "$ref": "#/definitions/FunnelCorrelationQuery"
                },
                {
                    "$ref": "#/definitions/DatabaseSchemaQuery"
                }
            ],
            "required": ["kind"],
            "type": "object"
        },
        "QuerySchemaRoot": {
            "$ref": "#/definitions/QuerySchema"
        },
        "QueryStatus": {
            "additionalProperties": false,
            "properties": {
                "complete": {
                    "default": false,
                    "type": "boolean"
                },
                "end_time": {
                    "format": "date-time",
                    "type": "string"
                },
                "error": {
                    "default": false,
                    "type": "boolean"
                },
                "error_message": {
                    "default": null,
                    "type": ["string", "null"]
                },
                "expiration_time": {
                    "format": "date-time",
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "query_async": {
                    "default": true,
                    "type": "boolean"
                },
                "query_progress": {
                    "$ref": "#/definitions/ClickhouseQueryStatus"
                },
                "results": {},
                "start_time": {
                    "format": "date-time",
                    "type": "string"
                },
                "task_id": {
                    "type": "string"
                },
                "team_id": {
                    "type": "integer"
                }
            },
            "required": ["id", "query_async", "team_id", "error", "complete", "error_message"],
            "type": "object"
        },
        "QueryTiming": {
            "additionalProperties": false,
            "properties": {
                "k": {
                    "description": "Key. Shortened to 'k' to save on data.",
                    "type": "string"
                },
                "t": {
                    "description": "Time in seconds. Shortened to 't' to save on data.",
                    "type": "number"
                }
            },
            "required": ["k", "t"],
            "type": "object"
        },
        "RecordingDurationFilter": {
            "additionalProperties": false,
            "properties": {
                "key": {
                    "const": "duration",
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "operator": {
                    "$ref": "#/definitions/PropertyOperator"
                },
                "type": {
                    "const": "recording",
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            },
            "required": ["key", "operator", "type", "value"],
            "type": "object"
        },
        "RetentionEntity": {
            "additionalProperties": false,
            "properties": {
                "custom_name": {
                    "type": "string"
                },
                "id": {
                    "type": ["string", "number"]
                },
                "kind": {
                    "enum": ["ActionsNode", "EventsNode"],
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "order": {
                    "type": "integer"
                },
                "type": {
                    "$ref": "#/definitions/EntityType"
                },
                "uuid": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "RetentionFilter": {
            "additionalProperties": false,
            "properties": {
                "period": {
                    "$ref": "#/definitions/RetentionPeriod"
                },
                "retentionReference": {
                    "enum": ["total", "previous"],
                    "type": "string"
                },
                "retentionType": {
                    "$ref": "#/definitions/RetentionType"
                },
                "returningEntity": {
                    "$ref": "#/definitions/RetentionEntity"
                },
                "showMean": {
                    "type": "boolean"
                },
                "targetEntity": {
                    "$ref": "#/definitions/RetentionEntity"
                },
                "totalIntervals": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "RetentionFilterLegacy": {
            "additionalProperties": false,
            "description": "`RetentionFilterType` minus everything inherited from `FilterType`",
            "properties": {
                "period": {
                    "$ref": "#/definitions/RetentionPeriod"
                },
                "retention_reference": {
                    "enum": ["total", "previous"],
                    "type": "string"
                },
                "retention_type": {
                    "$ref": "#/definitions/RetentionType"
                },
                "returning_entity": {
                    "$ref": "#/definitions/RetentionEntity"
                },
                "show_mean": {
                    "type": "boolean"
                },
                "target_entity": {
                    "$ref": "#/definitions/RetentionEntity"
                },
                "total_intervals": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "RetentionPeriod": {
            "enum": ["Hour", "Day", "Week", "Month"],
            "type": "string"
        },
        "RetentionQuery": {
            "additionalProperties": false,
            "properties": {
                "aggregation_group_type_index": {
                    "description": "Groups aggregation",
                    "type": "integer"
                },
                "dateRange": {
                    "$ref": "#/definitions/DateRange",
                    "description": "Date range for the query"
                },
                "filterTestAccounts": {
                    "description": "Exclude internal and test users by applying the respective filters",
                    "type": "boolean"
                },
                "kind": {
                    "const": "RetentionQuery",
                    "type": "string"
                },
                "modifiers": {
                    "$ref": "#/definitions/HogQLQueryModifiers",
                    "description": "Modifiers used when performing the query"
                },
                "properties": {
                    "anyOf": [
                        {
                            "items": {
                                "$ref": "#/definitions/AnyPropertyFilter"
                            },
                            "type": "array"
                        },
                        {
                            "$ref": "#/definitions/PropertyGroupFilter"
                        }
                    ],
                    "description": "Property filters for all series"
                },
                "response": {
                    "$ref": "#/definitions/RetentionQueryResponse"
                },
                "retentionFilter": {
                    "$ref": "#/definitions/RetentionFilter",
                    "description": "Properties specific to the retention insight"
                },
                "samplingFactor": {
                    "description": "Sampling rate",
                    "type": ["number", "null"]
                }
            },
            "required": ["kind", "retentionFilter"],
            "type": "object"
        },
        "RetentionQueryResponse": {
            "additionalProperties": false,
            "properties": {
                "error": {
                    "description": "Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",
                    "type": "string"
                },
                "hogql": {
                    "description": "Generated HogQL query.",
                    "type": "string"
                },
                "modifiers": {
                    "$ref": "#/definitions/HogQLQueryModifiers",
                    "description": "Modifiers used when performing the query"
                },
                "results": {
                    "items": {
                        "$ref": "#/definitions/RetentionResult"
                    },
                    "type": "array"
                },
                "timings": {
                    "description": "Measured timings for different parts of the query generation process",
                    "items": {
                        "$ref": "#/definitions/QueryTiming"
                    },
                    "type": "array"
                }
            },
            "required": ["results"],
            "type": "object"
        },
        "RetentionResult": {
            "additionalProperties": false,
            "properties": {
                "date": {
                    "format": "date-time",
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "values": {
                    "items": {
                        "$ref": "#/definitions/RetentionValue"
                    },
                    "type": "array"
                }
            },
            "required": ["values", "label", "date"],
            "type": "object"
        },
        "RetentionType": {
            "enum": ["retention_recurring", "retention_first_time"],
            "type": "string"
        },
        "RetentionValue": {
            "additionalProperties": false,
            "properties": {
                "count": {
                    "type": "integer"
                }
            },
            "required": ["count"],
            "type": "object"
        },
        "SamplingRate": {
            "additionalProperties": false,
            "properties": {
                "denominator": {
                    "type": "number"
                },
                "numerator": {
                    "type": "number"
                }
            },
            "required": ["numerator"],
            "type": "object"
        },
        "SavedInsightNode": {
            "additionalProperties": false,
            "properties": {
                "allowSorting": {
                    "description": "Can the user click on column headers to sort the table? (default: true)",
                    "type": "boolean"
                },
                "embedded": {
                    "description": "Query is embedded inside another bordered component",
                    "type": "boolean"
                },
                "expandable": {
                    "description": "Can expand row to show raw event data (default: true)",
                    "type": "boolean"
                },
                "full": {
                    "description": "Show with most visual options enabled. Used in insight scene.",
                    "type": "boolean"
                },
                "hidePersonsModal": {
                    "type": "boolean"
                },
                "kind": {
                    "const": "SavedInsightNode",
                    "type": "string"
                },
                "propertiesViaUrl": {
                    "description": "Link properties via the URL (default: false)",
                    "type": "boolean"
                },
                "shortId": {
                    "$ref": "#/definitions/InsightShortId"
                },
                "showActions": {
                    "description": "Show the kebab menu at the end of the row",
                    "type": "boolean"
                },
                "showColumnConfigurator": {
                    "description": "Show a button to configure the table's columns if possible",
                    "type": "boolean"
                },
                "showCorrelationTable": {
                    "type": "boolean"
                },
                "showDateRange": {
                    "description": "Show date range selector",
                    "type": "boolean"
                },
                "showElapsedTime": {
                    "description": "Show the time it takes to run a query",
                    "type": "boolean"
                },
                "showEventFilter": {
                    "description": "Include an event filter above the table (EventsNode only)",
                    "type": "boolean"
                },
                "showExport": {
                    "description": "Show the export button",
                    "type": "boolean"
                },
                "showFilters": {
                    "type": "boolean"
                },
                "showHeader": {
                    "type": "boolean"
                },
                "showHogQLEditor": {
                    "description": "Include a HogQL query editor above HogQL tables",
                    "type": "boolean"
                },
                "showLastComputation": {
                    "type": "boolean"
                },
                "showLastComputationRefresh": {
                    "type": "boolean"
                },
                "showOpenEditorButton": {
                    "description": "Show a button to open the current query as a new insight. (default: true)",
                    "type": "boolean"
                },
                "showPersistentColumnConfigurator": {
                    "description": "Show a button to configure and persist the table's default columns if possible",
                    "type": "boolean"
                },
                "showPropertyFilter": {
                    "description": "Include a property filter above the table",
                    "type": "boolean"
                },
                "showReload": {
                    "description": "Show a reload button",
                    "type": "boolean"
                },
                "showResults": {
                    "type": "boolean"
                },
                "showResultsTable": {
                    "description": "Show a results table",
                    "type": "boolean"
                },
                "showSavedQueries": {
                    "description": "Shows a list of saved queries",
                    "type": "boolean"
                },
                "showSearch": {
                    "description": "Include a free text search field (PersonsNode only)",
                    "type": "boolean"
                },
                "showTable": {
                    "type": "boolean"
                },
                "showTestAccountFilters": {
                    "description": "Show filter to exclude test accounts",
                    "type": "boolean"
                },
                "showTimings": {
                    "description": "Show a detailed query timing breakdown",
                    "type": "boolean"
                },
                "suppressSessionAnalysisWarning": {
                    "type": "boolean"
                },
                "vizSpecificOptions": {
                    "$ref": "#/definitions/VizSpecificOptions"
                }
            },
            "required": ["kind", "shortId"],
            "type": "object"
        },
        "SessionPropertyFilter": {
            "additionalProperties": false,
            "properties": {
                "key": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "operator": {
                    "$ref": "#/definitions/PropertyOperator"
                },
                "type": {
                    "const": "session",
                    "type": "string"
                },
                "value": {
                    "$ref": "#/definitions/PropertyFilterValue"
                }
            },
            "required": ["key", "operator", "type"],
            "type": "object"
        },
        "SessionsTimelineQuery": {
            "additionalProperties": false,
            "properties": {
                "after": {
                    "description": "Only fetch sessions that started after this timestamp (default: '-24h')",
                    "type": "string"
                },
                "before": {
                    "description": "Only fetch sessions that started before this timestamp (default: '+5s')",
                    "type": "string"
                },
                "kind": {
                    "const": "SessionsTimelineQuery",
                    "type": "string"
                },
                "modifiers": {
                    "$ref": "#/definitions/HogQLQueryModifiers",
                    "description": "Modifiers used when performing the query"
                },
                "personId": {
                    "description": "Fetch sessions only for a given person",
                    "type": "string"
                },
                "response": {
                    "$ref": "#/definitions/SessionsTimelineQueryResponse"
                }
            },
            "required": ["kind"],
            "type": "object"
        },
        "SessionsTimelineQueryResponse": {
            "additionalProperties": false,
            "properties": {
                "error": {
                    "description": "Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",
                    "type": "string"
                },
                "hasMore": {
                    "type": "boolean"
                },
                "hogql": {
                    "description": "Generated HogQL query.",
                    "type": "string"
                },
                "modifiers": {
                    "$ref": "#/definitions/HogQLQueryModifiers",
                    "description": "Modifiers used when performing the query"
                },
                "results": {
                    "items": {
                        "$ref": "#/definitions/TimelineEntry"
                    },
                    "type": "array"
                },
                "timings": {
                    "description": "Measured timings for different parts of the query generation process",
                    "items": {
                        "$ref": "#/definitions/QueryTiming"
                    },
                    "type": "array"
                }
            },
            "required": ["results"],
            "type": "object"
        },
        "StepOrderValue": {
            "enum": ["strict", "unordered", "ordered"],
            "type": "string"
        },
        "StickinessFilter": {
            "additionalProperties": false,
            "properties": {
                "compare": {
                    "type": "boolean"
                },
                "display": {
                    "$ref": "#/definitions/ChartDisplayType"
                },
                "hidden_legend_indexes": {
                    "items": {
                        "type": "number"
                    },
                    "type": "array"
                },
                "showLegend": {
                    "type": "boolean"
                },
                "showValuesOnSeries": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "StickinessFilterLegacy": {
            "additionalProperties": false,
            "description": "`StickinessFilterType` minus everything inherited from `FilterType` and persons modal related params and `hidden_legend_keys` replaced by `hidden_legend_indexes`",
            "properties": {
                "compare": {
                    "type": "boolean"
                },
                "display": {
                    "$ref": "#/definitions/ChartDisplayType"
                },
                "hidden_legend_indexes": {
                    "items": {
                        "type": "number"
                    },
                    "type": "array"
                },
                "show_legend": {
                    "type": "boolean"
                },
                "show_values_on_series": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "StickinessQuery": {
            "additionalProperties": false,
            "properties": {
                "dateRange": {
                    "$ref": "#/definitions/DateRange",
                    "description": "Date range for the query"
                },
                "filterTestAccounts": {
                    "description": "Exclude internal and test users by applying the respective filters",
                    "type": "boolean"
                },
                "interval": {
                    "$ref": "#/definitions/IntervalType",
                    "description": "Granularity of the response. Can be one of `hour`, `day`, `week` or `month`"
                },
                "kind": {
                    "const": "StickinessQuery",
                    "type": "string"
                },
                "modifiers": {
                    "$ref": "#/definitions/HogQLQueryModifiers",
                    "description": "Modifiers used when performing the query"
                },
                "properties": {
                    "anyOf": [
                        {
                            "items": {
                                "$ref": "#/definitions/AnyPropertyFilter"
                            },
                            "type": "array"
                        },
                        {
                            "$ref": "#/definitions/PropertyGroupFilter"
                        }
                    ],
                    "description": "Property filters for all series"
                },
                "response": {
                    "$ref": "#/definitions/StickinessQueryResponse"
                },
                "samplingFactor": {
                    "description": "Sampling rate",
                    "type": ["number", "null"]
                },
                "series": {
                    "description": "Events and actions to include",
                    "items": {
                        "$ref": "#/definitions/AnyEntityNode"
                    },
                    "type": "array"
                },
                "stickinessFilter": {
                    "$ref": "#/definitions/StickinessFilter",
                    "description": "Properties specific to the stickiness insight"
                }
            },
            "required": ["kind", "series"],
            "type": "object"
        },
        "StickinessQueryResponse": {
            "additionalProperties": false,
            "properties": {
                "error": {
                    "description": "Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",
                    "type": "string"
                },
                "hogql": {
                    "description": "Generated HogQL query.",
                    "type": "string"
                },
                "modifiers": {
                    "$ref": "#/definitions/HogQLQueryModifiers",
                    "description": "Modifiers used when performing the query"
                },
                "results": {
                    "items": {
                        "type": "object"
                    },
                    "type": "array"
                },
                "timings": {
                    "description": "Measured timings for different parts of the query generation process",
                    "items": {
                        "$ref": "#/definitions/QueryTiming"
                    },
                    "type": "array"
                }
            },
            "required": ["results"],
            "type": "object"
        },
        "TestBasicQueryResponse": {
            "additionalProperties": false,
            "deprecated": "Only exported for use in test_query_runner.py! Don't use anywhere else.",
            "properties": {
                "error": {
                    "description": "Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",
                    "type": "string"
                },
                "hogql": {
                    "description": "Generated HogQL query.",
                    "type": "string"
                },
                "modifiers": {
                    "$ref": "#/definitions/HogQLQueryModifiers",
                    "description": "Modifiers used when performing the query"
                },
                "results": {
                    "items": {},
                    "type": "array"
                },
                "timings": {
                    "description": "Measured timings for different parts of the query generation process",
                    "items": {
                        "$ref": "#/definitions/QueryTiming"
                    },
                    "type": "array"
                }
            },
            "required": ["results"],
            "type": "object"
        },
        "TestCachedBasicQueryResponse": {
            "additionalProperties": false,
            "deprecated": "Only exported for use in test_query_runner.py! Don't use anywhere else.",
            "properties": {
                "cache_key": {
                    "type": "string"
                },
                "error": {
                    "description": "Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",
                    "type": "string"
                },
                "hogql": {
                    "description": "Generated HogQL query.",
                    "type": "string"
                },
                "is_cached": {
                    "type": "boolean"
                },
                "last_refresh": {
                    "type": "string"
                },
                "modifiers": {
                    "$ref": "#/definitions/HogQLQueryModifiers",
                    "description": "Modifiers used when performing the query"
                },
                "next_allowed_client_refresh": {
                    "type": "string"
                },
                "results": {
                    "items": {},
                    "type": "array"
                },
                "timezone": {
                    "type": "string"
                },
                "timings": {
                    "description": "Measured timings for different parts of the query generation process",
                    "items": {
                        "$ref": "#/definitions/QueryTiming"
                    },
                    "type": "array"
                }
            },
            "required": [
                "cache_key",
                "is_cached",
                "last_refresh",
                "next_allowed_client_refresh",
                "results",
                "timezone"
            ],
            "type": "object"
        },
        "TimeToSeeDataJSONNode": {
            "additionalProperties": false,
            "properties": {
                "kind": {
                    "const": "TimeToSeeDataSessionsJSONNode",
                    "type": "string"
                },
                "source": {
                    "$ref": "#/definitions/TimeToSeeDataQuery"
                }
            },
            "required": ["kind", "source"],
            "type": "object"
        },
        "TimeToSeeDataNode": {
            "anyOf": [
                {
                    "$ref": "#/definitions/TimeToSeeDataJSONNode"
                },
                {
                    "$ref": "#/definitions/TimeToSeeDataWaterfallNode"
                }
            ]
        },
        "TimeToSeeDataQuery": {
            "additionalProperties": false,
            "properties": {
                "kind": {
                    "const": "TimeToSeeDataQuery",
                    "type": "string"
                },
                "modifiers": {
                    "$ref": "#/definitions/HogQLQueryModifiers",
                    "description": "Modifiers used when performing the query"
                },
                "response": {
                    "type": "object"
                },
                "sessionEnd": {
                    "type": "string"
                },
                "sessionId": {
                    "description": "Project to filter on. Defaults to current session",
                    "type": "string"
                },
                "sessionStart": {
                    "description": "Session start time. Defaults to current time - 2 hours",
                    "type": "string"
                },
                "teamId": {
                    "description": "Project to filter on. Defaults to current project",
                    "type": "integer"
                }
            },
            "required": ["kind"],
            "type": "object"
        },
        "TimeToSeeDataSessionsQuery": {
            "additionalProperties": false,
            "properties": {
                "dateRange": {
                    "$ref": "#/definitions/DateRange",
                    "description": "Date range for the query"
                },
                "kind": {
                    "const": "TimeToSeeDataSessionsQuery",
                    "type": "string"
                },
                "modifiers": {
                    "$ref": "#/definitions/HogQLQueryModifiers",
                    "description": "Modifiers used when performing the query"
                },
                "response": {
                    "$ref": "#/definitions/TimeToSeeDataSessionsQueryResponse"
                },
                "teamId": {
                    "description": "Project to filter on. Defaults to current project",
                    "type": "integer"
                }
            },
            "required": ["kind"],
            "type": "object"
        },
        "TimeToSeeDataSessionsQueryResponse": {
            "additionalProperties": false,
            "properties": {
                "results": {
                    "items": {
                        "type": "object"
                    },
                    "type": "array"
                }
            },
            "required": ["results"],
            "type": "object"
        },
        "TimeToSeeDataWaterfallNode": {
            "additionalProperties": false,
            "properties": {
                "kind": {
                    "const": "TimeToSeeDataSessionsWaterfallNode",
                    "type": "string"
                },
                "source": {
                    "$ref": "#/definitions/TimeToSeeDataQuery"
                }
            },
            "required": ["kind", "source"],
            "type": "object"
        },
        "TimelineEntry": {
            "additionalProperties": false,
            "properties": {
                "events": {
                    "items": {
                        "$ref": "#/definitions/EventType"
                    },
                    "type": "array"
                },
                "recording_duration_s": {
                    "description": "Duration of the recording in seconds.",
                    "type": "number"
                },
                "sessionId": {
                    "description": "Session ID. None means out-of-session events",
                    "type": "string"
                }
            },
            "required": ["events"],
            "type": "object"
        },
        "TrendsFilter": {
            "additionalProperties": false,
            "properties": {
                "aggregationAxisFormat": {
                    "$ref": "#/definitions/AggregationAxisFormat"
                },
                "aggregationAxisPostfix": {
                    "type": "string"
                },
                "aggregationAxisPrefix": {
                    "type": "string"
                },
                "breakdown_histogram_bin_count": {
                    "type": "number"
                },
                "compare": {
                    "type": "boolean"
                },
                "decimalPlaces": {
                    "type": "number"
                },
                "display": {
                    "$ref": "#/definitions/ChartDisplayType"
                },
                "formula": {
                    "type": "string"
                },
                "hidden_legend_indexes": {
                    "items": {
                        "type": "number"
                    },
                    "type": "array"
                },
                "showLabelsOnSeries": {
                    "type": "boolean"
                },
                "showLegend": {
                    "type": "boolean"
                },
                "showPercentStackView": {
                    "type": "boolean"
                },
                "showValuesOnSeries": {
                    "type": "boolean"
                },
                "smoothingIntervals": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "TrendsFilterLegacy": {
            "additionalProperties": false,
            "description": "`TrendsFilterType` minus everything inherited from `FilterType` and `hidden_legend_keys` replaced by `hidden_legend_indexes`",
            "properties": {
                "aggregation_axis_format": {
                    "$ref": "#/definitions/AggregationAxisFormat"
                },
                "aggregation_axis_postfix": {
                    "type": "string"
                },
                "aggregation_axis_prefix": {
                    "type": "string"
                },
                "breakdown_histogram_bin_count": {
                    "type": "number"
                },
                "compare": {
                    "type": "boolean"
                },
                "decimal_places": {
                    "type": "number"
                },
                "display": {
                    "$ref": "#/definitions/ChartDisplayType"
                },
                "formula": {
                    "type": "string"
                },
                "hidden_legend_indexes": {
                    "items": {
                        "type": "number"
                    },
                    "type": "array"
                },
                "show_labels_on_series": {
                    "type": "boolean"
                },
                "show_legend": {
                    "type": "boolean"
                },
                "show_percent_stack_view": {
                    "type": "boolean"
                },
                "show_values_on_series": {
                    "type": "boolean"
                },
                "smoothing_intervals": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "TrendsQuery": {
            "additionalProperties": false,
            "properties": {
                "aggregation_group_type_index": {
                    "description": "Groups aggregation",
                    "type": "integer"
                },
                "breakdownFilter": {
                    "$ref": "#/definitions/BreakdownFilter",
                    "description": "Breakdown of the events and actions"
                },
                "dateRange": {
                    "$ref": "#/definitions/DateRange",
                    "description": "Date range for the query"
                },
                "filterTestAccounts": {
                    "description": "Exclude internal and test users by applying the respective filters",
                    "type": "boolean"
                },
                "interval": {
                    "$ref": "#/definitions/IntervalType",
                    "description": "Granularity of the response. Can be one of `hour`, `day`, `week` or `month`"
                },
                "kind": {
                    "const": "TrendsQuery",
                    "type": "string"
                },
                "modifiers": {
                    "$ref": "#/definitions/HogQLQueryModifiers",
                    "description": "Modifiers used when performing the query"
                },
                "properties": {
                    "anyOf": [
                        {
                            "items": {
                                "$ref": "#/definitions/AnyPropertyFilter"
                            },
                            "type": "array"
                        },
                        {
                            "$ref": "#/definitions/PropertyGroupFilter"
                        }
                    ],
                    "description": "Property filters for all series"
                },
                "response": {
                    "$ref": "#/definitions/TrendsQueryResponse"
                },
                "samplingFactor": {
                    "description": "Sampling rate",
                    "type": ["number", "null"]
                },
                "series": {
                    "description": "Events and actions to include",
                    "items": {
                        "$ref": "#/definitions/AnyEntityNode"
                    },
                    "type": "array"
                },
                "trendsFilter": {
                    "$ref": "#/definitions/TrendsFilter",
                    "description": "Properties specific to the trends insight"
                }
            },
            "required": ["kind", "series"],
            "type": "object"
        },
        "TrendsQueryResponse": {
            "additionalProperties": false,
            "properties": {
                "error": {
                    "description": "Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",
                    "type": "string"
                },
                "hogql": {
                    "description": "Generated HogQL query.",
                    "type": "string"
                },
                "modifiers": {
                    "$ref": "#/definitions/HogQLQueryModifiers",
                    "description": "Modifiers used when performing the query"
                },
                "results": {
                    "items": {
                        "type": "object"
                    },
                    "type": "array"
                },
                "timings": {
                    "description": "Measured timings for different parts of the query generation process",
                    "items": {
                        "$ref": "#/definitions/QueryTiming"
                    },
                    "type": "array"
                }
            },
            "required": ["results"],
            "type": "object"
        },
        "VizSpecificOptions": {
            "additionalProperties": false,
            "description": "Chart specific rendering options. Use ChartRenderingMetadata for non-serializable values, e.g. onClick handlers",
            "properties": {
                "ActionsPie": {
                    "additionalProperties": false,
                    "properties": {
                        "disableHoverOffset": {
                            "type": "boolean"
                        },
                        "hideAggregation": {
                            "type": "boolean"
                        }
                    },
                    "type": "object"
                },
                "RETENTION": {
                    "additionalProperties": false,
                    "properties": {
                        "hideLineGraph": {
                            "type": "boolean"
                        },
                        "hideSizeColumn": {
                            "type": "boolean"
                        },
                        "useSmallLayout": {
                            "type": "boolean"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "WebAnalyticsPropertyFilter": {
            "anyOf": [
                {
                    "$ref": "#/definitions/EventPropertyFilter"
                },
                {
                    "$ref": "#/definitions/PersonPropertyFilter"
                },
                {
                    "$ref": "#/definitions/SessionPropertyFilter"
                }
            ]
        },
        "WebAnalyticsPropertyFilters": {
            "items": {
                "$ref": "#/definitions/WebAnalyticsPropertyFilter"
            },
            "type": "array"
        },
        "WebOverviewItem": {
            "additionalProperties": false,
            "properties": {
                "changeFromPreviousPct": {
                    "type": "number"
                },
                "isIncreaseBad": {
                    "type": "boolean"
                },
                "key": {
                    "type": "string"
                },
                "kind": {
                    "enum": ["unit", "duration_s", "percentage"],
                    "type": "string"
                },
                "previous": {
                    "type": "number"
                },
                "value": {
                    "type": "number"
                }
            },
            "required": ["key", "kind"],
            "type": "object"
        },
        "WebOverviewQuery": {
            "additionalProperties": false,
            "properties": {
                "compare": {
                    "type": "boolean"
                },
                "dateRange": {
                    "$ref": "#/definitions/DateRange"
                },
                "kind": {
                    "const": "WebOverviewQuery",
                    "type": "string"
                },
                "modifiers": {
                    "$ref": "#/definitions/HogQLQueryModifiers",
                    "description": "Modifiers used when performing the query"
                },
                "properties": {
                    "$ref": "#/definitions/WebAnalyticsPropertyFilters"
                },
                "response": {
                    "$ref": "#/definitions/WebOverviewQueryResponse"
                },
                "sampling": {
                    "additionalProperties": false,
                    "properties": {
                        "enabled": {
                            "type": "boolean"
                        },
                        "forceSamplingRate": {
                            "$ref": "#/definitions/SamplingRate"
                        }
                    },
                    "type": "object"
                },
                "useSessionsTable": {
                    "type": "boolean"
                }
            },
            "required": ["kind", "properties"],
            "type": "object"
        },
        "WebOverviewQueryResponse": {
            "additionalProperties": false,
            "properties": {
                "error": {
                    "description": "Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",
                    "type": "string"
                },
                "hogql": {
                    "description": "Generated HogQL query.",
                    "type": "string"
                },
                "modifiers": {
                    "$ref": "#/definitions/HogQLQueryModifiers",
                    "description": "Modifiers used when performing the query"
                },
                "results": {
                    "items": {
                        "$ref": "#/definitions/WebOverviewItem"
                    },
                    "type": "array"
                },
                "samplingRate": {
                    "$ref": "#/definitions/SamplingRate"
                },
                "timings": {
                    "description": "Measured timings for different parts of the query generation process",
                    "items": {
                        "$ref": "#/definitions/QueryTiming"
                    },
                    "type": "array"
                }
            },
            "required": ["results"],
            "type": "object"
        },
        "WebStatsBreakdown": {
            "enum": [
                "Page",
                "InitialPage",
                "ExitPage",
                "InitialChannelType",
                "InitialReferringDomain",
                "InitialUTMSource",
                "InitialUTMCampaign",
                "InitialUTMMedium",
                "InitialUTMTerm",
                "InitialUTMContent",
                "Browser",
                "OS",
                "DeviceType",
                "Country",
                "Region",
                "City"
            ],
            "type": "string"
        },
        "WebStatsTableQuery": {
            "additionalProperties": false,
            "properties": {
                "breakdownBy": {
                    "$ref": "#/definitions/WebStatsBreakdown"
                },
                "dateRange": {
                    "$ref": "#/definitions/DateRange"
                },
                "doPathCleaning": {
                    "type": "boolean"
                },
                "includeBounceRate": {
                    "type": "boolean"
                },
                "includeScrollDepth": {
                    "type": "boolean"
                },
                "kind": {
                    "const": "WebStatsTableQuery",
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "modifiers": {
                    "$ref": "#/definitions/HogQLQueryModifiers",
                    "description": "Modifiers used when performing the query"
                },
                "properties": {
                    "$ref": "#/definitions/WebAnalyticsPropertyFilters"
                },
                "response": {
                    "$ref": "#/definitions/WebStatsTableQueryResponse"
                },
                "sampling": {
                    "additionalProperties": false,
                    "properties": {
                        "enabled": {
                            "type": "boolean"
                        },
                        "forceSamplingRate": {
                            "$ref": "#/definitions/SamplingRate"
                        }
                    },
                    "type": "object"
                },
                "useSessionsTable": {
                    "type": "boolean"
                }
            },
            "required": ["breakdownBy", "kind", "properties"],
            "type": "object"
        },
        "WebStatsTableQueryResponse": {
            "additionalProperties": false,
            "properties": {
                "columns": {
                    "items": {},
                    "type": "array"
                },
                "error": {
                    "description": "Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",
                    "type": "string"
                },
                "hasMore": {
                    "type": "boolean"
                },
                "hogql": {
                    "description": "Generated HogQL query.",
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "modifiers": {
                    "$ref": "#/definitions/HogQLQueryModifiers",
                    "description": "Modifiers used when performing the query"
                },
                "offset": {
                    "type": "integer"
                },
                "results": {
                    "items": {},
                    "type": "array"
                },
                "samplingRate": {
                    "$ref": "#/definitions/SamplingRate"
                },
                "timings": {
                    "description": "Measured timings for different parts of the query generation process",
                    "items": {
                        "$ref": "#/definitions/QueryTiming"
                    },
                    "type": "array"
                },
                "types": {
                    "items": {},
                    "type": "array"
                }
            },
            "required": ["results"],
            "type": "object"
        },
        "WebTopClicksQuery": {
            "additionalProperties": false,
            "properties": {
                "dateRange": {
                    "$ref": "#/definitions/DateRange"
                },
                "kind": {
                    "const": "WebTopClicksQuery",
                    "type": "string"
                },
                "modifiers": {
                    "$ref": "#/definitions/HogQLQueryModifiers",
                    "description": "Modifiers used when performing the query"
                },
                "properties": {
                    "$ref": "#/definitions/WebAnalyticsPropertyFilters"
                },
                "response": {
                    "$ref": "#/definitions/WebTopClicksQueryResponse"
                },
                "sampling": {
                    "additionalProperties": false,
                    "properties": {
                        "enabled": {
                            "type": "boolean"
                        },
                        "forceSamplingRate": {
                            "$ref": "#/definitions/SamplingRate"
                        }
                    },
                    "type": "object"
                },
                "useSessionsTable": {
                    "type": "boolean"
                }
            },
            "required": ["kind", "properties"],
            "type": "object"
        },
        "WebTopClicksQueryResponse": {
            "additionalProperties": false,
            "properties": {
                "columns": {
                    "items": {},
                    "type": "array"
                },
                "error": {
                    "description": "Query error. Returned only if 'explain' or `modifiers.debug` is true. Throws an error otherwise.",
                    "type": "string"
                },
                "hogql": {
                    "description": "Generated HogQL query.",
                    "type": "string"
                },
                "modifiers": {
                    "$ref": "#/definitions/HogQLQueryModifiers",
                    "description": "Modifiers used when performing the query"
                },
                "results": {
                    "items": {},
                    "type": "array"
                },
                "samplingRate": {
                    "$ref": "#/definitions/SamplingRate"
                },
                "timings": {
                    "description": "Measured timings for different parts of the query generation process",
                    "items": {
                        "$ref": "#/definitions/QueryTiming"
                    },
                    "type": "array"
                },
                "types": {
                    "items": {},
                    "type": "array"
                }
            },
            "required": ["results"],
            "type": "object"
        }
    }
}
