# Generated by Django 4.2.22 on 2025-07-21 11:16

from django.db import migrations

# Bulk update every CHUNK_SIZE items
CHUNK_SIZE = 500


# NB: sort of duplicates migration 789
# we were still creating saved filters on team creation with no type set
# so we end up with rows in DB with no type
# uses bigger chunks than 789
# we know for this migration that all the rows with no type
# are definitely saved filters and not collections
def migrate_playlist_types(apps, schema_editor):
    SessionRecordingPlaylist = apps.get_model("posthog", "SessionRecordingPlaylist")

    saved_filters_with_no_type = SessionRecordingPlaylist.objects.filter(
        type__isnull=True, deleted=False, filters__isnull=False
    )

    chunk = []
    for playlist in saved_filters_with_no_type.iterator(chunk_size=CHUNK_SIZE):
        playlist.type = "filters"
        chunk.append(playlist)

        # Bulk update every CHUNK_SIZE items
        if len(chunk) == CHUNK_SIZE:
            SessionRecordingPlaylist.objects.bulk_update(chunk, ["type"])
            chunk = []

    if chunk:  # Handle remaining items if length is less than CHUNK_SIZE
        SessionRecordingPlaylist.objects.bulk_update(chunk, ["type"])


class Migration(migrations.Migration):
    dependencies = [
        ("posthog", "0798_alter_integration_kind"),
    ]

    operations = [
        migrations.RunPython(migrate_playlist_types, reverse_code=migrations.RunPython.noop),
    ]
