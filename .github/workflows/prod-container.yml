name: Build production containers

on:
    push:
        branches: master

jobs:
    build:
        name: Build production Docker image
        runs-on: ubuntu-20.04
        steps:
            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: us-east-1

            - name: Login to Amazon ECR
              id: login-ecr
              uses: aws-actions/amazon-ecr-login@v1

            - name: Fetch posthog-production
              run: |
                  curl -L https://github.com/posthog/posthog-production/tarball/master | tar --strip-components=1 -xz --
                  mkdir deploy/

            - name: Checkout master
              uses: actions/checkout@v2
              with:
                  ref: 'master'
                  path: 'deploy/'

            - name: Link posthog-production at master
              run: |
                  cp -r multi_tenancy deploy/
                  cp -r messaging deploy/
                  cat multi_tenancy_settings.py >> deploy/posthog/settings.py
                  cat requirements.txt >> deploy/requirements.txt

            - name: Build, tag, and push image to Amazon ECR
              env:
                  ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
                  ECR_REPOSITORY: posthog-production
                  IMAGE_TAG: ${{ github.sha }}
              run: |
                  docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f prod.web.Dockerfile .
                  docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
