#
# Build and push PostHog and PostHog Cloud container images
#
# - posthog_build: build and push the PostHog container image to DockerHub
#
# - posthog_cloud_build: build the PostHog Cloud container image using
#   as base image the container image from the previous step. The image is
#   then pushed to AWS ECR.
#
name: Container Images CD

on:
    push:
        branches:
            - master
        paths-ignore:
            - 'rust/**'
            - 'livestream/**'
    workflow_dispatch:

jobs:
    posthog_build:
        name: Build and push PostHog
        if: github.repository == 'PostHog/posthog'
        runs-on: depot-ubuntu-latest
        permissions:
            id-token: write # allow issuing OIDC tokens for this workflow run
            contents: read # allow at least reading the repo contents, add other permissions if necessary
            packages: write # allow push to ghcr.io

        steps:
            - name: Check out
              uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
              with:
                  fetch-depth: 2

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3

            - name: Set up QEMU
              uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3

            - name: Set up Depot CLI
              uses: depot/setup-action@b0b1ea4f69e92ebf5dea3f8713a1b0c37b2126a5 # v1

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: us-east-1

            - name: Login to Amazon ECR
              id: aws-ecr
              uses: aws-actions/amazon-ecr-login@062b18b96a7aff071d4dc91bc00c4c1a7945b076 # v2

            - name: Login to DockerHub
              uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3
              with:
                  username: ${{ secrets.DOCKERHUB_USER }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}

            - name: Build and push container image
              id: build
              uses: depot/build-push-action@636daae76684e38c301daa0c5eca1c095b24e780 # v1
              with:
                  buildx-fallback: false # the fallback is so slow it's better to just fail
                  push: true
                  tags: posthog/posthog:${{ github.sha }},posthog/posthog:latest,${{ steps.aws-ecr.outputs.registry }}/posthog-cloud:master
                  platforms: linux/arm64,linux/amd64
                  build-args: COMMIT_HASH=${{ github.sha }}

            - name: report failure
              if: failure()
              uses: PostHog/posthog-github-action@v0.1
              with:
                  posthog-token: ${{secrets.POSTHOG_API_TOKEN}}
                  event: 'posthog-image-build'
                  properties: '{"status": "failure", "commit_hash": "${{ github.sha }}"}'

            - name: get deployer token
              id: deployer
              uses: getsentry/action-github-app-token@d4b5da6c5e37703f8c3b3e43abb5705b46e159cc # v3
              with:
                  app_id: ${{ secrets.DEPLOYER_APP_ID }}
                  private_key: ${{ secrets.DEPLOYER_APP_PRIVATE_KEY }}

            - name: get PR labels
              id: labels
              uses: ./.github/actions/get-pr-labels
              with:
                  token: ${{ secrets.GITHUB_TOKEN }}

            - name: Trigger PostHog Cloud deployment from Charts
              uses: peter-evans/repository-dispatch@ff45666b9427631e3450c54a1bcbee4d9ff4d7c0 # v3
              with:
                  token: ${{ steps.deployer.outputs.token }}
                  repository: PostHog/charts
                  event-type: commit_state_update
                  client-payload: |
                      {
                        "values": {
                          "image": {
                            "sha": "${{ steps.build.outputs.digest }}"
                          }
                        },
                        "release": "posthog",
                        "commit": ${{ toJson(github.event.head_commit) }},
                        "repository": ${{ toJson(github.repository) }},
                        "labels": ${{ steps.labels.outputs.labels }},
                        "timestamp": "${{ github.event.head_commit.timestamp }}"
                      }

            - name: Check for changes in plugins directory
              id: check_changes_plugins
              run: |
                  echo "changed=$((git diff --name-only HEAD^ HEAD | grep -q '^plugin-server/' && echo true) || echo false)" >> $GITHUB_OUTPUT

            - name: Trigger Ingestion Cloud deployment
              if: steps.check_changes_plugins.outputs.changed == 'true'
              uses: peter-evans/repository-dispatch@ff45666b9427631e3450c54a1bcbee4d9ff4d7c0 # v3
              with:
                  token: ${{ steps.deployer.outputs.token }}
                  repository: PostHog/charts
                  event-type: commit_state_update
                  client-payload: |
                      {
                        "values": {
                          "image": {
                            "sha": "${{ steps.build.outputs.digest }}"
                          }
                        },
                        "release": "ingestion",
                        "commit": ${{ toJson(github.event.head_commit) }},
                        "repository": ${{ toJson(github.repository) }},
                        "labels": ${{ toJson(steps.labels.outputs.labels) }},
                        "timestamp": "${{ github.event.head_commit.timestamp }}"
                      }

            - name: Check for changes that affect batch exports temporal worker
              id: check_changes_batch_exports_temporal_worker
              run: |
                  echo "changed=$((git diff --name-only HEAD^ HEAD | grep -qE '^posthog/temporal/common|^posthog/temporal/batch_exports|^posthog/batch_exports/|^posthog/management/commands/start_temporal_worker.py$|^requirements.txt$|^bin/temporal-django-worker$' && echo true) || echo false)" >> $GITHUB_OUTPUT

            - name: Trigger Batch Exports Sync Temporal Worker Cloud deployment
              if: steps.check_changes_batch_exports_temporal_worker.outputs.changed == 'true'
              uses: peter-evans/repository-dispatch@ff45666b9427631e3450c54a1bcbee4d9ff4d7c0 # v3
              with:
                  token: ${{ steps.deployer.outputs.token }}
                  repository: PostHog/charts
                  event-type: commit_state_update
                  client-payload: |
                      {
                        "values": {
                          "image": {
                            "sha": "${{ steps.build.outputs.digest }}"
                          }
                        },
                        "release": "temporal-worker",
                        "commit": ${{ toJson(github.event.head_commit) }},
                        "repository": ${{ toJson(github.repository) }},
                        "labels": ${{ steps.labels.outputs.labels }},
                        "timestamp": "${{ github.event.head_commit.timestamp }}"
                      }

            - name: Trigger Batch Exports Temporal Worker Cloud deployment
              if: steps.check_changes_batch_exports_temporal_worker.outputs.changed == 'true'
              uses: peter-evans/repository-dispatch@ff45666b9427631e3450c54a1bcbee4d9ff4d7c0 # v3
              with:
                  token: ${{ steps.deployer.outputs.token }}
                  repository: PostHog/charts
                  event-type: commit_state_update
                  client-payload: |
                      {
                        "values": {
                          "image": {
                            "sha": "${{ steps.build.outputs.digest }}"
                          }
                        },
                        "release": "temporal-worker-batch-exports",
                        "commit": ${{ toJson(github.event.head_commit) }},
                        "repository": ${{ toJson(github.repository) }},
                        "labels": ${{ steps.labels.outputs.labels }},
                        "timestamp": "${{ github.event.head_commit.timestamp }}"
                      }

            - name: Check for changes that affect general purpose temporal worker
              id: check_changes_general_purpose_temporal_worker
              run: |
                  echo "changed=$((git diff --name-only HEAD^ HEAD | grep -qE '^posthog/temporal/common|^posthog/temporal/compare_recording_metadata|^posthog/temporal/proxy_service|^posthog/temporal/usage_reports|^posthog/management/commands/start_temporal_worker.py$|^requirements.txt$|^bin/temporal-django-worker$' && echo true) || echo false)" >> $GITHUB_OUTPUT

            - name: Trigger General Purpose Temporal Worker Cloud deployment
              if: steps.check_changes_general_purpose_temporal_worker.outputs.changed == 'true'
              uses: peter-evans/repository-dispatch@ff45666b9427631e3450c54a1bcbee4d9ff4d7c0 # v3
              with:
                  token: ${{ steps.deployer.outputs.token }}
                  repository: PostHog/charts
                  event-type: commit_state_update
                  client-payload: |
                      {
                        "values": {
                          "image": {
                            "sha": "${{ steps.build.outputs.digest }}"
                          }
                        },
                        "release": "temporal-worker-general-purpose",
                        "commit": ${{ toJson(github.event.head_commit) }},
                        "repository": ${{ toJson(github.repository) }},
                        "labels": ${{ steps.labels.outputs.labels }},
                        "timestamp": "${{ github.event.head_commit.timestamp }}"
                      }

            - name: Check for changes that affect data warehouse temporal worker
              id: check_changes_data_warehouse_temporal_worker
              run: |
                  echo "changed=$((git diff --name-only HEAD^ HEAD | grep -qE '^posthog/hogql|^posthog/temporal/common|^posthog/temporal/data_imports|^posthog/warehouse/|^posthog/management/commands/start_temporal_worker.py$|^requirements.txt$|^bin/temporal-django-worker$' && echo true) || echo false)" >> $GITHUB_OUTPUT

            - name: Trigger Data Warehouse Temporal Worker Cloud deployment
              if: steps.check_changes_data_warehouse_temporal_worker.outputs.changed == 'true'
              uses: peter-evans/repository-dispatch@ff45666b9427631e3450c54a1bcbee4d9ff4d7c0 # v3
              with:
                  token: ${{ steps.deployer.outputs.token }}
                  repository: PostHog/charts
                  event-type: commit_state_update
                  client-payload: |
                      {
                        "values": {
                          "image": {
                            "sha": "${{ steps.build.outputs.digest }}"
                          }
                        },
                        "release": "temporal-worker-data-warehouse",
                        "commit": ${{ toJson(github.event.head_commit) }},
                        "repository": ${{ toJson(github.repository) }},
                        "labels": ${{ steps.labels.outputs.labels }},
                        "timestamp": "${{ github.event.head_commit.timestamp }}"
                      }

            - name: Trigger Data Warehouse Compaction Temporal Worker Cloud deployment
              if: steps.check_changes_data_warehouse_temporal_worker.outputs.changed == 'true'
              uses: peter-evans/repository-dispatch@ff45666b9427631e3450c54a1bcbee4d9ff4d7c0 # v3
              with:
                  token: ${{ steps.deployer.outputs.token }}
                  repository: PostHog/charts
                  event-type: commit_state_update
                  client-payload: |
                      {
                        "values": {
                          "image": {
                            "sha": "${{ steps.build.outputs.digest }}"
                          }
                        },
                        "release": "temporal-worker-data-warehouse-compaction",
                        "commit": ${{ toJson(github.event.head_commit) }},
                        "repository": ${{ toJson(github.repository) }},
                        "labels": ${{ steps.labels.outputs.labels }},
                        "timestamp": "${{ github.event.head_commit.timestamp }}"
                      }

            - name: Check for changes that affect dagster code locations
              id: check_changes_dagster_code_location
              run: |
                  echo "changed=$((git diff --name-only HEAD^ HEAD | grep -qE '^dags/' && echo true) || echo false)" >> $GITHUB_OUTPUT

            - name: Trigger Dagster Code Location Reload
              if: steps.check_changes_dagster_code_location.outputs.changed == 'true'
              uses: peter-evans/repository-dispatch@ff45666b9427631e3450c54a1bcbee4d9ff4d7c0 # v3
              with:
                  token: ${{ steps.deployer.outputs.token }}
                  repository: PostHog/charts
                  event-type: restart_dagster_code_location
                  client-payload: |
                      {
                        "values": {
                          "image": {
                            "sha": "${{ steps.build.outputs.digest }}"
                          }
                        },
                        "release": "dagster-code-location",
                        "commit": ${{ toJson(github.event.head_commit) }},
                        "repository": ${{ toJson(github.repository) }},
                        "labels": ${{ toJson(steps.labels.outputs.labels) }},
                        "timestamp": "${{ github.event.head_commit.timestamp }}"
                      }
