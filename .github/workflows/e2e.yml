name: e2e
on: [pull_request]
jobs:
  cypress-run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      # Install Node.js
      - uses: actions/setup-node@v1
        with:
          node-version: 12
      - run: yarn install
      
      - name: Prepare server
        run: docker-compose -f docker-compose.e2e.yml up -d
      - name: Check running containers
        run: docker ps -a
      - name: Check logs
        run: docker logs posthog_server

      - name: Cypress run
        run: |
          sleep 60
          yarn run cypress run --config-file cypress.json

name: CI

on: [pull_request]

jobs:

  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports: ['5432:5432']
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7

      # Install Node.js
      - uses: actions/setup-node@v1
        with:
          node-version: 12

      - uses: actions/cache@v1
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
        if: steps.cache.outputs.cache-hit != 'true'
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
        run: |
          python -m pip install --upgrade pip
      - name: install dependencies
        run: |
          yarn install    
        if: steps.cache.outputs.cache-hit != 'true'
      - name: Run tests
        env:
          DATABASE_URL: 'postgres://postgres:postgres@localhost:${{ job.services.postgres.ports[5432] }}/postgres'
        run: |
          yarn build
          gunicorn posthog.wsgi --config gunicorn.config.py --bind 0.0.0.0:8000 --log-file - --worker-tmp-dir /dev/shm --workers=2 --threads=4 --worker-class=gthread & yarn run cypress run --config-file cypress.json
