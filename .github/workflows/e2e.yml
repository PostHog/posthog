name: E2E

on:
    - pull_request

jobs:
    cypress_prep:
        name: Cypress E2E preparation
        runs-on: ubuntu-latest
        outputs:
            matrix: ${{ steps.set-matrix.outputs.matrix }}
        steps:
            - name: Check out
              uses: actions/checkout@v2
            - id: set-matrix
              run: |
                  if ${{github.event.pull_request.head.repo.full_name == github.repository}}; then
                  matrix=$(jq 'map(.)' .github/workflows/e2e_matrix.json)  
                  else              
                  matrix=[]
                  fi
                  echo ::set-output name=matrix::{\"include\":$(echo $matrix)}\"

    cypress:
        name: Cypress E2E tests
        runs-on: ubuntu-18.04
        needs: cypress_prep

        strategy:
            # when one test fails, DO NOT cancel the other
            # containers, because this will kill Cypress processes
            # leaving the Dashboard hanging ...
            # https://github.com/cypress-io/github-action/issues/48
            fail-fast: false
            matrix: ${{fromJson(needs.cypress_prep.outputs.matrix)}}

        services:
            postgres:
                image: postgres:12
                env:
                    POSTGRES_USER: postgres
                    POSTGRES_PASSWORD: postgres
                    POSTGRES_DB: postgres
                ports:
                    # Maps port 5432 on service container to the host
                    # Needed because `postgres` host is not discoverable for some reason
                    - 5432:5432
                options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
            redis:
                image: redis
                ports:
                    # Maps port 6379 on service container to the host
                    # Needed because `redis` host is not discoverable for some reason
                    - 6379:6379
                options: >-
                    --health-cmd "redis-cli ping"
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5
        steps:
            - name: Checkout
              uses: actions/checkout@v2
            - run: echo "Matrix container ${{ matrix.containers }}"
