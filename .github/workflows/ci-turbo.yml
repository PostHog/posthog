name: Turbo CI

on:
    pull_request:

jobs:
    turbo-affected-4:
        timeout-minutes: 30
        name: Turbo Affected
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                # os: [depot-ubuntu-22.04, depot-ubuntu-22.04-4]
                os: [depot-ubuntu-22.04-4]

        steps:
            - name: Check out code
              uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3
              with:
                  # Just fetch the current commit/PR head
                  fetch-depth: 1

            - name: Detect architecture
              if: ${{ runner.os == 'Linux' || runner.os == 'macOS' }}
              run: |
                  ARCH=$(uname -m)
                  echo "ARCH=$ARCH" >> $GITHUB_ENV

            # Conditionally fetch the base branch so Turborepo can compare against it
            - name: Fetch base branch
              run: |
                  if [ "${{ github.event_name }}" = "pull_request" ]; then
                    git fetch origin refs/heads/${GITHUB_BASE_REF}:refs/heads/${GITHUB_BASE_REF} --depth=1
                    echo "TURBO_SCM_BASE=${GITHUB_BASE_REF}" >> $GITHUB_ENV
                  else
                    git fetch origin refs/heads/master:refs/heads/master --depth=1
                    echo "TURBO_SCM_BASE=master" >> $GITHUB_ENV
                  fi

            - name: Set up Python
              uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38 # v5
              with:
                  python-version-file: 'pyproject.toml'
                  token: ${{ secrets.POSTHOG_BOT_GITHUB_TOKEN }}

            - name: Install uv
              uses: astral-sh/setup-uv@0c5e2b8115b80b4c7c5ddf6ffdd634974642d182 # v5.4.1
              with:
                  enable-cache: true

            - name: Install pnpm
              uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4

            - name: Set up Node.js
              uses: actions/setup-node@1d0ff469b7ec7b3cb9d8673fde0c81c44821de2a # v4
              with:
                  node-version: 18
                  cache: 'pnpm'

            - name: Cache node-gyp artifacts
              uses: actions/cache@2f8e54208210a422b2efd51efaa6bd6d7ca8920f # v3
              with:
                  path: ~/.cache/node-gyp
                  key: ${{ runner.os }}-${{ env.ARCH }}-node-gyp-node-${{ matrix.node-version }}-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: |
                      ${{ runner.os }}-${{ env.ARCH }}-node-gyp-node-${{ matrix.node-version }}-

            - name: Run Python and Node setup in parallel
              run: |
                  set -e
                  set -m

                  (
                    echo ">>> [Python] Installing SAML (python3-saml) dependencies..."
                    sudo apt-get update
                    sudo apt-get install -y libxml2-dev libxmlsec1 libxmlsec1-dev libxmlsec1-openssl

                    echo ">>> [Python] Installing dependencies..."
                    UV_PROJECT_ENVIRONMENT=$pythonLocation uv sync --frozen --dev
                  ) &
                  PY_PID=$!

                  (
                    echo ">>> [Node] Installing dependencies..."
                    pnpm install --frozen-lockfile
                  ) &
                  NODE_PID=$!

                  wait -n || (echo ">>> One of the parallel tasks failed, killing the other..." && kill $PY_PID $NODE_PID 2>/dev/null && exit 1)
                  wait -n || (echo ">>> The second parallel task failed" && exit 1)

                  echo ">>> Both parallel tasks completed successfully!"

            - name: Turbo Affected
              run: |
                  bin/turbo build --affected --dry-run
              env:
                  NODE_OPTIONS: --max-old-space-size=8192
                  TURBO_SCM_BASE: ${{ env.TURBO_SCM_BASE }}
