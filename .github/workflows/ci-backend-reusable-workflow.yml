on:
    workflow_call:
        inputs:
            python-version:
                required: true
                type: string
            ee:
                required: true
                type: boolean
            foss:
                required: true
                type: boolean
            saml:
                required: true
                type: boolean
            concurrency:
                required: true
                type: number
            group:
                required: true
                type: number

jobs:
    django:
        steps:
            - name: Start stack with Docker Compose
              run: |
                  docker-compose -f docker-compose.dev.yml down
                  docker-compose -f docker-compose.dev.yml up -d db clickhouse zookeeper kafka redis &

            - name: Set up Python
              uses: actions/setup-python@v2
              with:
                  python-version: ${{ inputs.python-version }}

            - name: Install SAML (python3-saml) dependencies (not required for Cloud or FOSS)
              if: ${{ inputs.saml }}
              run: |
                  sudo apt-get update
                  sudo apt-get install libxml2-dev libxmlsec1-dev libxmlsec1-openssl

            - uses: syphar/restore-virtualenv@v1.2
              id: cache-backend-tests
              with:
                  custom_cache_key_element: v1-${{ inputs.name }}

            - uses: syphar/restore-pip-download-cache@v1
              if: steps.cache-backend-tests.outputs.cache-hit != 'true'

            - name: Install python dependencies
              if: steps.cache-backend-tests.outputs.cache-hit != 'true'
              run: |
                  python -m pip install -r requirements-dev.txt
                  python -m pip install -r requirements.txt

            - name: Install SAML python dependencies
              if: ${{ inputs.saml }}
              run: |
                  python -m pip install python3-saml==1.12.0

            - name: Check migrations
              run: |
                  python manage.py makemigrations --check --dry-run
                  git fetch origin master
                  # `git diff --name-only` returns a list of files that were changed - added OR deleted OR modified
                  # With `--name-status` we get the same, but including a column for status, respectively: A, D, M
                  # In this check we exclusively care about files that were added (A) in posthog/migrations/
                  git diff --name-status origin/master..HEAD | grep "A\tposthog/migrations/" | awk '{print $2}' | python manage.py test_migrations_are_null

            - name: Add kafka host to /etc/hosts for kafka connectivity
              run: sudo echo "127.0.0.1 kafka" | sudo tee -a /etc/hosts

            - name: Set up needed files
              run: |
                  mkdir -p frontend/dist
                  touch frontend/dist/index.html
                  touch frontend/dist/layout.html
                  touch frontend/dist/shared_dashboard.html

            - name: Wait for Clickhouse & Kafka
              run: bin/check_kafka_clickhouse_up

            - name: Run FOSS tests
              if: ${{ inputs.foss }}
              run: |
                  pytest -m "not ee" posthog/ --cov  --cov-report=xml:coverage-postgres.xml

            - name: Run SAML tests
              if: ${{ inputs.saml }}
              run: |
                  pytest ee -m "saml_only"

            - name: Run ee/ tests
              if: ${{ inputs.ee }}
              run: |
                  pytest ee -m "not saml_only" \
                      --splits ${{ inputs.concurrency }} \
                      --group ${{ inputs.group }} \
                      --store-durations \
                      --cov \
                      --cov-report=xml:coverage-clickhouse.xml

            - name: Run pytest.mark.ee tests
              if: ${{ inputs.ee && inputs.group == '1' }}
              run: |
                  pytest posthog -m "ee"

            - uses: codecov/codecov-action@v2
              if: ${{ !inputs.saml && !inputs.cloud }}
              with:
                  files: ./coverage-postgres.xml,./coverage-clickhouse.xml
                  fail_ci_if_error: false
                  verbose: true

            - name: Upload updated timing data as artifacts
              uses: actions/upload-artifact@v2
              if: ${{ inputs.ee }}
              with:
                  name: timing_data-${{ inputs.group }}
                  path: .test_durations
