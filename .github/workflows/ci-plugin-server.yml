name: Plugin Server CI

on:
    pull_request:
        paths:
            - 'plugin-server/**'
            - 'ee/clickhouse/migrations/**'
            - 'ee/migrations/**'
            - 'ee/management/commands/setup_test_environment.py'
            - 'posthog/migrations/**'
            - 'posthog/plugins/**'
            - 'docker*.yml'
            - '*Dockerfile'

env:
    OBJECT_STORAGE_ENABLED: true
    OBJECT_STORAGE_ENDPOINT: 'http://localhost:19000'
    OBJECT_STORAGE_ACCESS_KEY_ID: 'object_storage_root_user'
    OBJECT_STORAGE_SECRET_ACCESS_KEY: 'object_storage_root_password'
    OBJECT_STORAGE_SESSION_RECORDING_FOLDER: 'session_recordings'
    OBJECT_STORAGE_BUCKET: 'posthog'

concurrency:
    group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
    cancel-in-progress: true

jobs:
    code-quality:
        name: Code quality
        runs-on: ubuntu-20.04
        defaults:
            run:
                working-directory: 'plugin-server'

        steps:
            - uses: actions/checkout@v1

            - name: Set up Node 16
              uses: actions/setup-node@v1
              with:
                  node-version: 16

            - name: Install package.json dependencies with Yarn
              run: yarn

            - name: Check formatting with prettier
              run: yarn prettier:check

            - name: Lint with ESLint
              run: yarn lint

    tests:
        name: Tests (${{matrix.shard}})
        runs-on: ubuntu-20.04

        strategy:
            fail-fast: false
            matrix:
                shard: [1/3, 2/3, 3/3]

        services:
            postgres:
                image: postgres:12
                env:
                    POSTGRES_USER: postgres
                    POSTGRES_PASSWORD: postgres
                    POSTGRES_DB: test_posthog
                ports: ['5432:5432']
                options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
            redis:
                image: redis:6.2.7-alpine
                ports:
                    - '6379:6379'
                options: >-
                    --health-cmd "redis-cli ping"
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5
        env:
            REDIS_URL: 'redis://localhost'
            CLICKHOUSE_HOST: 'localhost'
            CLICKHOUSE_DATABASE: 'posthog_test'
            KAFKA_HOSTS: 'kafka:9092'

        steps:
            - name: Code check out
              uses: actions/checkout@v2

            - name: Fix Kafka Hostname
              run: |
                  sudo bash -c 'echo "127.0.0.1 kafka zookeeper" >> /etc/hosts'
                  ping -c 1 kafka
                  ping -c 1 zookeeper
            - name: Start Kafka, ClickHouse, Zookeeper, Object Storage
              run: docker-compose -f docker-compose.dev.yml up -d zookeeper kafka clickhouse object_storage &

            - name: Set up Python 3.8.12
              uses: actions/setup-python@v2
              with:
                  python-version: 3.8.12

            - uses: syphar/restore-virtualenv@v1.2
              id: cache-backend-tests
              with:
                  custom_cache_key_element: v1-

            - uses: syphar/restore-pip-download-cache@v1
              if: steps.cache-backend-tests.outputs.cache-hit != 'true'

            - name: Install python dependencies
              if: steps.cache-backend-tests.outputs.cache-hit != 'true'
              run: |
                  python -m pip install -r requirements-dev.txt
                  python -m pip install -r requirements.txt

            - name: Set up Node 16
              uses: actions/setup-node@v2
              with:
                  node-version: 16

            - name: Get yarn cache directory path
              id: yarn-cache-dir-path
              run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

            - uses: actions/cache@v2
              id: yarn-cache
              with:
                  path: |
                      ${{ steps.yarn-cache-dir-path.outputs.dir }}
                      plugin-server/node_modules
                  key: plugin-server-yarn-${{ runner.os }}-${{ hashFiles('plugin-server/yarn.lock') }}
                  restore-keys: |
                      plugin-server-yarn-${{ runner.os }}

            - name: Install package.json dependencies with Yarn
              if: steps.yarn-cache.cache-hit != 'true'
              run: cd plugin-server && yarn

            - name: Wait for Clickhouse & Kafka
              shell: bash
              run: bin/check_kafka_clickhouse_up

            - name: Set up databases
              env:
                  SECRET_KEY: 'abcdef' # unsafe - for testing only
                  DATABASE_URL: 'postgres://postgres:postgres@localhost:5432/posthog'
                  TEST: 'true'
              run: cd plugin-server && yarn setup:test

            - name: Test with Jest
              env:
                  # Below DB name has `test_` prepended, as that's how Django (ran above) creates the test DB
                  DATABASE_URL: 'postgres://postgres:postgres@localhost:5432/test_posthog'
                  REDIS_URL: 'redis://localhost'
              run: cd plugin-server && yarn test --shard=${{matrix.shard}}
