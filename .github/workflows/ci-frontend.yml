name: Frontend CI

on:
    pull_request:
    # NOTE: by running on master, aside from highlight issues on master it also
    # ensures we have e.g. node modules cached for master, which can then be
    # used for branches. See https://github.com/actions/cache#cache-scopes for
    # scope details.
    push:
        branches:
            - master

concurrency:
    group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
    cancel-in-progress: true

jobs:
    frontend-code-quality:
        name: Code quality checks
        runs-on: ubuntu-20.04
        steps:
            - uses: actions/checkout@v3

            - name: Install pnpm
              uses: pnpm/action-setup@v2
              with:
                  version: 7.x.x

            - name: Set up Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: 18
                  cache: pnpm

            - name: Install package.json dependencies with pnpm
              run: pnpm install --frozen-lockfile

            - name: Check formatting with prettier
              run: pnpm prettier:check

            - name: Lint with ESLint
              run: pnpm eslint

            - name: Generate logic types and run typescript with strict
              run: pnpm typegen:write && pnpm typescript:check

            - name: Check if "schema.json" is up to date
              run: pnpm schema:build:json && git diff --exit-code

    jest-setup:
        # Split the tests into multiple chunks
        runs-on: ubuntu-latest
        outputs:
            test-chunks: ${{ steps['set-test-chunks'].outputs['test-chunks'] }}
            test-chunk-ids: ${{ steps['set-test-chunk-ids'].outputs['test-chunk-ids'] }}
        steps:
            - uses: actions/checkout@v3
            - name: Install pnpm
              uses: pnpm/action-setup@v2
              with:
                  version: 7.x.x

            - name: Set up Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: 18
                  cache: pnpm

            - run: pnpm install --frozen-lockfile
            - id: set-test-chunks
              name: Set Chunks
              # Looks at the output of 'pnpm test:unit -- --listTests --json'
              # Take the 5th line of the output (the first two are pnpm non-sense)
              # Split the test into 3 parts. To increase the number split change the denominator in `length / 3`
              run: echo "test-chunks=$(pnpm test:unit --listTests --json | sed -n 5p | jq -cM '[_nwise(length / 3 | ceil)]')" >> $GITHUB_OUTPUT
            - id: set-test-chunk-ids
              name: Set Chunk IDs
              run: echo "test-chunk-ids=$(echo $CHUNKS | jq -cM 'to_entries | map(.key)')" >> $GITHUB_OUTPUT
              env:
                  CHUNKS: ${{ steps['set-test-chunks'].outputs['test-chunks'] }}

    jest:
        runs-on: ubuntu-20.04
        name: Jest test (${{ matrix.chunk }})
        needs: [jest-setup]

        strategy:
            # If one test fails, still run the others
            fail-fast: false
            matrix:
                chunk: ${{fromJson(needs.jest-setup.outputs['test-chunk-ids'])}}

        steps:
            - uses: actions/checkout@v3

            - name: Install pnpm
              uses: pnpm/action-setup@v2
              with:
                  version: 7.x.x

            - name: Set up Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: 18
                  cache: pnpm

            - name: Install package.json dependencies with pnpm
              run: pnpm install --frozen-lockfile

            - name: Test with Jest
              # set maxWorkers or Jest only uses 1 CPU in GitHub Actions
              run: pnpm test:unit --maxWorkers=2 $(echo $CHUNKS | jq '.[${{ matrix.chunk }}] | .[] | @text')
              env:
                  NODE_OPTIONS: --max-old-space-size=6144
                  CHUNKS: ${{ needs.jest-setup.outputs['test-chunks'] }}

    visual-regression:
        name: Visual regression tests
        runs-on: ubuntu-20.04
        container:
            image: mcr.microsoft.com/playwright:v1.29.2-focal
        strategy:
            fail-fast: false
            matrix:
                browser: ['chromium', 'firefox', 'webkit']
        env:
            CYPRESS_INSTALL_BINARY: '0'
            NODE_OPTIONS: --max_old_space_size=4096
        steps:
            - uses: actions/checkout@v3

            - name: Install pnpm
              uses: pnpm/action-setup@v2
              with:
                  version: 7.x.x

            - name: Set up Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: 18
                  cache: pnpm

            - name: Install package.json dependencies with pnpm
              run: pnpm install --frozen-lockfile

            - name: Install CI utilities with pnpm
              run: pnpm install http-server wait-on

            - name: Build Storybook
              run: pnpm build-storybook --quiet # Silence since progress logging results in a massive wall of spam

            - name: Serve Storybook in the background
              run: pnpm exec http-server storybook-static --port 6006 --silent &

            - name: Run @storybook/test-runner
              env:
                  HOME: /root # Solves https://github.com/microsoft/playwright/issues/6500
              run: |
                  pnpm wait-on http://127.0.0.1:6006 --timeout 60 # Wait for the server to be ready
                  pnpm test:visual-regression:stories:ci ${{ matrix.browser }}

            - name: Run @playwright/test (legacy, Chromium-only)
              if: ${{ matrix.browser == 'chromium' }}
              run: |
                  pnpm test:visual-regression:legacy:ci

            - name: Upload Playwright report and diffs
              uses: actions/upload-artifact@v3
              if: failure()
              with:
                  name: visual-regression-report-${{ matrix.browser }}
                  path: |
                      playwright-report/
                      test-results/
                      frontend/__snapshots__/__diff_output__/
                  retention-days: 7
