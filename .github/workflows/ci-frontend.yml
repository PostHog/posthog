name: Frontend CI

on:
    - pull_request

jobs:
    frontend-code-quality:
        name: Code quality checks
        runs-on: ubuntu-20.04
        steps:
            - uses: actions/checkout@v1

            - name: Set up Node 16
              uses: actions/setup-node@v1
              with:
                  node-version: 16

            - uses: actions/cache@v2
              id: node-modules-cache
              with:
                  path: |
                      node_modules
                  key: ${{ runner.os }}-node-modules-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-node-modules

            - name: Install package.json dependencies with Yarn
              if: steps.node-modules-cache.outputs.cache-hit != 'true'
              run: yarn install --frozen-lockfile

            - name: Check formatting with prettier
              run: yarn prettier:check

            - name: Lint with ESLint
              run: yarn eslint

            - name: Run typescript with strict
              run: |
                  ./bin/check-typescript-strict

    jest-setup:
        runs-on: ubuntu-latest
        outputs:
            test-chunks: ${{ steps['set-test-chunks'].outputs['test-chunks'] }}
            test-chunk-ids: ${{ steps['set-test-chunk-ids'].outputs['test-chunk-ids'] }}
        steps:
            - uses: actions/checkout@v1
            - run: yarn install --frozen-lockfile
            - id: set-test-chunks
              name: Set Chunks
              run: echo "::set-output name=test-chunks::$(yarn test --listTests --json | sed -n 3p | jq -cM '[_nwise(length / 2 | ceil)]')"
            - id: set-test-chunk-ids
              name: Set Chunk IDs
              run: echo "::set-output name=test-chunk-ids::$(echo $CHUNKS | jq -cM 'to_entries | map(.key)')"
              env:
                  CHUNKS: ${{ steps['set-test-chunks'].outputs['test-chunks'] }}

    jest:
        runs-on: ubuntu-20.04
        name: Jest test (chunk ${{ matrix.chunk }})
        needs: [jest-setup]

        strategy:
            fail-fast: false
            matrix:
                chunk: ${{fromJson(needs.jest-setup.outputs['test-chunk-ids'])}}

        steps:
            - uses: actions/checkout@v1
            - name: Set up Node 16
              uses: actions/setup-node@v1
              with:
                  node-version: 16

            - uses: actions/cache@v2
              id: node-modules-cache
              with:
                  path: |
                      node_modules
                  key: ${{ runner.os }}-node-modules-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-node-modules

            - name: Install package.json dependencies with Yarn
              if: steps.node-modules-cache.outputs.cache-hit != 'true'
              run: yarn install --frozen-lockfile

            - name: Test with Jest
              run: echo $CHUNKS | jq '.[${{ matrix.chunk }}] | .[] | @text' | xargs yarn test:sequential
              env:
                  CHUNKS: ${{ needs.jest-setup.outputs['test-chunks'] }}
