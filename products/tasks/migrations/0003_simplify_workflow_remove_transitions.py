# Generated by Django 4.2.22 on 2025-09-16 23:58

import django.db.models.deletion
from django.db import migrations, models


def migrate_agent_data_from_transitions_to_stages(apps, schema_editor):
    """
    Migrate agent assignments from WorkflowTransition to WorkflowStage.
    For each stage, find the transition that goes FROM that stage and has an agent,
    then assign that agent to the stage itself.
    """
    WorkflowTransition = apps.get_model("tasks", "WorkflowTransition")
    WorkflowStage = apps.get_model("tasks", "WorkflowStage")

    # For each stage, look for outgoing transitions that have agents
    for stage in WorkflowStage.objects.all():
        # Find the transition that starts from this stage and has an agent
        transition = WorkflowTransition.objects.filter(from_stage=stage, agent__isnull=False).first()

        if transition and transition.agent:
            stage.agent = transition.agent
            stage.save(update_fields=["agent"])


class Migration(migrations.Migration):
    dependencies = [
        ("tasks", "0002_agentdefinition_taskworkflow_workflowstage_and_more"),
    ]

    operations = [
        migrations.AddField(
            model_name="taskworkflow",
            name="color",
            field=models.CharField(default="#3b82f6", help_text="Hex color for UI display", max_length=7),
        ),
        migrations.AddField(
            model_name="workflowstage",
            name="agent",
            field=models.ForeignKey(
                blank=True,
                help_text="Agent responsible for processing tasks in this stage",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="tasks.agentdefinition",
            ),
        ),
        migrations.RunPython(
            migrate_agent_data_from_transitions_to_stages,
            reverse_code=migrations.RunPython.noop,
        ),
        migrations.DeleteModel(
            name="WorkflowTransition",
        ),
    ]
