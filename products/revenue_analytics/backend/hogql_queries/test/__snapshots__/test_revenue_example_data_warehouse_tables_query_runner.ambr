# serializer version: 1
# name: TestRevenueExampleDataWarehouseTablesQueryRunner.test_database_query
  '''
  SELECT 'stripe.posthog_test.revenue_item_revenue_view' AS view_name,
         `stripe.posthog_test.revenue_item_revenue_view`.id AS distinct_id,
         `stripe.posthog_test.revenue_item_revenue_view`.currency_aware_amount AS original_amount,
         `stripe.posthog_test.revenue_item_revenue_view`.original_currency AS original_currency,
         `stripe.posthog_test.revenue_item_revenue_view`.amount AS amount,
         `stripe.posthog_test.revenue_item_revenue_view`.currency AS currency,
         toTimeZone(`stripe.posthog_test.revenue_item_revenue_view`.timestamp, 'UTC') AS timestamp
  FROM
    (SELECT if(ifNull(greater(invoice.period_months, 1), 0), concat(ifNull(toString(invoice.invoice_item_id), ''), '_', ifNull(toString(invoice.month_index), '')), invoice.invoice_item_id) AS id,
            invoice.invoice_item_id AS invoice_item_id,
            'stripe.posthog_test' AS source_label,
            addMonths(invoice.timestamp, invoice.month_index) AS timestamp,
            invoice.created_at AS created_at,
            ifNull(notEmpty(invoice.subscription_id), 0) AS is_recurring,
            invoice.product_id AS product_id,
            invoice.customer_id AS customer_id,
            NULL AS group_0_key,
            NULL AS group_1_key,
            NULL AS group_2_key,
            NULL AS group_3_key,
            NULL AS group_4_key,
            invoice.id AS invoice_id,
            invoice.subscription_id AS subscription_id,
            NULL AS session_id,
            NULL AS event_name,
            JSONExtractString(invoice.discount, 'coupon', 'name') AS coupon,
            JSONExtractString(invoice.discount, 'coupon', 'id') AS coupon_id,
            upper(invoice.currency) AS original_currency,
            accurateCastOrNull(invoice.amount_captured, 'Decimal64(10)') AS original_amount,
            in(original_currency,
               ['BIF', 'CLP', 'DJF', 'GNF', 'JPY', 'KMF', 'KRW', 'MGA', 'PYG', 'RWF', 'UGX', 'VND', 'VUV', 'XAF', 'XOF', 'XPF']) AS enable_currency_aware_divider,
              if(enable_currency_aware_divider, accurateCastOrNull(1, 'Decimal64(10)'), accurateCastOrNull(100, 'Decimal64(10)')) AS currency_aware_divider,
              divideDecimal(original_amount, currency_aware_divider) AS currency_aware_amount,
              'GBP' AS currency,
              divideDecimal(if(equals(original_currency, currency), toDecimal64(currency_aware_amount, 10), if(dictGetOrDefault(`posthog_test`.`exchange_rate_dict`, 'rate', original_currency, toDate(ifNull(timestamp, toDateTime(0, 'UTC'))), toDecimal64(0, 10)) = 0, toDecimal64(0, 10), multiplyDecimal(divideDecimal(toDecimal64(currency_aware_amount, 10), dictGetOrDefault(`posthog_test`.`exchange_rate_dict`, 'rate', original_currency, toDate(ifNull(timestamp, toDateTime(0, 'UTC'))), toDecimal64(0, 10))), dictGetOrDefault(`posthog_test`.`exchange_rate_dict`, 'rate', currency, toDate(ifNull(timestamp, toDateTime(0, 'UTC'))), toDecimal64(0, 10))))), accurateCastOrNull(invoice.period_months, 'Decimal64(10)')) AS amount
     FROM
       (SELECT posthog_test_stripe_invoice.id AS id,
               parseDateTime64BestEffortOrNull(toString(posthog_test_stripe_invoice.created), 6, 'UTC') AS created_at,
               posthog_test_stripe_invoice.customer AS customer_id,
               posthog_test_stripe_invoice.subscription AS subscription_id,
               posthog_test_stripe_invoice.discount AS discount,
               arrayJoin(JSONExtractArrayRaw(assumeNotNull(replaceRegexpAll(nullIf(nullIf(JSONExtractRaw(posthog_test_stripe_invoice.lines, 'data'), ''), 'null'), '^"|"$', '')))) AS data,
               JSONExtractString(data, 'id') AS invoice_item_id,
               JSONExtractString(data, 'amount') AS amount_captured,
               JSONExtractString(data, 'currency') AS currency,
               JSONExtractString(data, 'price', 'product') AS product_id,
               fromUnixTimestamp(JSONExtractUInt(data, 'period', 'start')) AS period_start,
               fromUnixTimestamp(JSONExtractUInt(data, 'period', 'end')) AS period_end,
               greatest(toInt16(round(divide(dateDiff('day', ifNull(period_start, parseDateTime64BestEffortOrNull(toString(posthog_test_stripe_invoice.created), 6, 'UTC')), ifNull(period_end, parseDateTime64BestEffortOrNull(toString(posthog_test_stripe_invoice.created), 6, 'UTC'))), 30.44))), 1) AS period_months,
               arrayJoin(range(0, period_months)) AS month_index,
               ifNull(period_start, parseDateTime64BestEffortOrNull(toString(posthog_test_stripe_invoice.created), 6, 'UTC')) AS timestamp
        FROM s3('http://host.docker.internal:19000/posthog/test_storage_bucket-posthog.revenue.stripe_invoices/posthog_test_stripe_invoice/*.csv', 'object_storage_root_user', 'object_storage_root_password', 'CSVWithNames', '`id` String, `tax` Int64, `paid` UInt8, `lines` String, `total` Int64, `charge` String, `issuer` String, `number` String, `object` String, `status` String, `created` DateTime, `currency` String, `customer` String, `discount` String, `due_date` DateTime, `livemode` UInt8, `metadata` String, `subtotal` Int64, `attempted` UInt8, `discounts` String, `rendering` String, `amount_due` Int64, `amount_paid` Int64, `description` String, `invoice_pdf` String, `account_name` String, `auto_advance` UInt8, `effective_at` DateTime, `subscription` String, `attempt_count` UInt8, `automatic_tax` String, `customer_name` String, `period_end_at` DateTime, `billing_reason` String, `customer_email` String, `ending_balance` Int64, `payment_intent` String, `account_country` String, `amount_shipping` Int64, `period_start_at` DateTime, `amount_remaining` Int64, `customer_address` String, `customer_tax_ids` String, `paid_out_of_band` UInt8, `payment_settings` String, `starting_balance` Int64, `collection_method` String, `default_tax_rates` String, `total_tax_amounts` String, `hosted_invoice_url` String, `status_transitions` String, `customer_tax_exempt` String, `total_excluding_tax` Int64, `subscription_details` String, `webhooks_delivered_at` DateTime, `subtotal_excluding_tax` Int64, `total_discount_amounts` String, `pre_payment_credit_notes_amount` Int64, `post_payment_credit_notes_amount` Int64') AS posthog_test_stripe_invoice
        WHERE posthog_test_stripe_invoice.paid) AS invoice) AS `stripe.posthog_test.revenue_item_revenue_view`
  ORDER BY timestamp DESC
  LIMIT 101
  OFFSET 0 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1,
                    format_csv_allow_double_quotes=1,
                    max_ast_elements=4000000,
                    max_expanded_ast_elements=4000000,
                    max_bytes_before_external_group_by=0,
                    transform_null_in=1,
                    optimize_min_equality_disjunction_chain_length=4294967295,
                    allow_experimental_join_condition=1
  '''
# ---
# name: TestRevenueExampleDataWarehouseTablesQueryRunner.test_no_crash_when_no_data
  '''
  SELECT 'stripe.posthog_test.revenue_item_revenue_view' AS view_name,
         `stripe.posthog_test.revenue_item_revenue_view`.id AS distinct_id,
         `stripe.posthog_test.revenue_item_revenue_view`.currency_aware_amount AS original_amount,
         `stripe.posthog_test.revenue_item_revenue_view`.original_currency AS original_currency,
         `stripe.posthog_test.revenue_item_revenue_view`.amount AS amount,
         `stripe.posthog_test.revenue_item_revenue_view`.currency AS currency,
         toTimeZone(`stripe.posthog_test.revenue_item_revenue_view`.timestamp, 'UTC') AS timestamp
  FROM
    (SELECT NULL AS id,
            NULL AS invoice_item_id,
            NULL AS source_label,
            NULL AS timestamp,
            NULL AS created_at,
            NULL AS is_recurring,
            NULL AS product_id,
            NULL AS customer_id,
            NULL AS group_0_key,
            NULL AS group_1_key,
            NULL AS group_2_key,
            NULL AS group_3_key,
            NULL AS group_4_key,
            NULL AS invoice_id,
            NULL AS subscription_id,
            NULL AS session_id,
            NULL AS event_name,
            NULL AS coupon,
            NULL AS coupon_id,
            NULL AS original_currency,
            NULL AS original_amount,
            NULL AS enable_currency_aware_divider,
            NULL AS currency_aware_divider,
            NULL AS currency_aware_amount,
            NULL AS currency,
            NULL AS amount
     WHERE 0) AS `stripe.posthog_test.revenue_item_revenue_view`
  ORDER BY timestamp DESC
  LIMIT 101
  OFFSET 0 SETTINGS readonly=2,
                    max_execution_time=60,
                    allow_experimental_object_type=1,
                    format_csv_allow_double_quotes=1,
                    max_ast_elements=4000000,
                    max_expanded_ast_elements=4000000,
                    max_bytes_before_external_group_by=0,
                    transform_null_in=1,
                    optimize_min_equality_disjunction_chain_length=4294967295,
                    allow_experimental_join_condition=1
  '''
# ---
