# Generated by Django 4.2.22 on 2025-10-30 08:32

import datetime

import django.utils.timezone
import django.db.models.deletion
import django.db.models.constraints
import django.contrib.postgres.indexes
from django.conf import settings
from django.db import migrations, models

import posthog.models.utils
import posthog.helpers.encrypted_fields

import products.data_warehouse.backend.models.modeling
import products.data_warehouse.backend.models.datawarehouse_saved_query


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("posthog", "0893_migrate_data_warehouse_models"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.SeparateDatabaseAndState(
            database_operations=[
                # No database operations - table already exists with this name
            ],
            state_operations=[
                migrations.CreateModel(
                    name="DataWarehouseCredential",
                    fields=[
                        ("created_at", models.DateTimeField(auto_now_add=True)),
                        (
                            "id",
                            models.UUIDField(
                                default=posthog.models.utils.UUIDT, editable=False, primary_key=True, serialize=False
                            ),
                        ),
                        ("access_key", posthog.helpers.encrypted_fields.EncryptedTextField(max_length=500)),
                        ("access_secret", posthog.helpers.encrypted_fields.EncryptedTextField(max_length=500)),
                        (
                            "created_by",
                            models.ForeignKey(
                                blank=True,
                                null=True,
                                on_delete=django.db.models.deletion.SET_NULL,
                                to=settings.AUTH_USER_MODEL,
                            ),
                        ),
                        ("team", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="posthog.team")),
                    ],
                    options={
                        "db_table": "posthog_datawarehousecredential",
                    },
                ),
                migrations.CreateModel(
                    name="DataWarehouseManagedViewSet",
                    fields=[
                        ("created_at", models.DateTimeField(auto_now_add=True)),
                        ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                        (
                            "id",
                            models.UUIDField(
                                default=posthog.models.utils.UUIDT, editable=False, primary_key=True, serialize=False
                            ),
                        ),
                        ("kind", models.CharField(choices=[("revenue_analytics", "Revenue Analytics")], max_length=64)),
                        (
                            "created_by",
                            models.ForeignKey(
                                blank=True,
                                null=True,
                                on_delete=django.db.models.deletion.SET_NULL,
                                to=settings.AUTH_USER_MODEL,
                            ),
                        ),
                        ("team", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="posthog.team")),
                    ],
                    options={
                        "db_table": "posthog_datawarehousemanagedviewset",
                    },
                ),
                migrations.CreateModel(
                    name="DataWarehouseSavedQuery",
                    fields=[
                        ("created_at", models.DateTimeField(auto_now_add=True)),
                        ("deleted", models.BooleanField(blank=True, default=False, null=True)),
                        ("deleted_at", models.DateTimeField(blank=True, null=True)),
                        (
                            "id",
                            models.UUIDField(
                                default=posthog.models.utils.UUIDT, editable=False, primary_key=True, serialize=False
                            ),
                        ),
                        (
                            "name",
                            models.CharField(
                                max_length=128,
                                validators=[
                                    products.data_warehouse.backend.models.datawarehouse_saved_query.validate_saved_query_name
                                ],
                            ),
                        ),
                        ("latest_error", models.TextField(blank=True, default=None, null=True)),
                        (
                            "columns",
                            models.JSONField(
                                blank=True,
                                default=dict,
                                help_text="Dict of all columns with ClickHouse type (including Nullable())",
                                null=True,
                            ),
                        ),
                        (
                            "external_tables",
                            models.JSONField(
                                blank=True, default=list, help_text="List of all external tables", null=True
                            ),
                        ),
                        ("query", models.JSONField(blank=True, default=dict, help_text="HogQL query", null=True)),
                        (
                            "status",
                            models.CharField(
                                choices=[
                                    ("Cancelled", "Cancelled"),
                                    ("Modified", "Modified"),
                                    ("Completed", "Completed"),
                                    ("Failed", "Failed"),
                                    ("Running", "Running"),
                                ],
                                help_text="The status of when this SavedQuery last ran.",
                                max_length=64,
                                null=True,
                            ),
                        ),
                        (
                            "last_run_at",
                            models.DateTimeField(
                                help_text="The timestamp of this SavedQuery's last run (if any).", null=True
                            ),
                        ),
                        ("sync_frequency_interval", models.DurationField(blank=True, default=None, null=True)),
                        ("is_materialized", models.BooleanField(blank=True, default=False, null=True)),
                        ("deleted_name", models.CharField(blank=True, default=None, max_length=128, null=True)),
                        (
                            "created_by",
                            models.ForeignKey(
                                blank=True,
                                null=True,
                                on_delete=django.db.models.deletion.SET_NULL,
                                to=settings.AUTH_USER_MODEL,
                            ),
                        ),
                        (
                            "managed_viewset",
                            models.ForeignKey(
                                blank=True,
                                null=True,
                                on_delete=django.db.models.deletion.SET_NULL,
                                related_name="saved_queries",
                                to="data_warehouse.datawarehousemanagedviewset",
                            ),
                        ),
                    ],
                    options={
                        "db_table": "posthog_datawarehousesavedquery",
                    },
                ),
                migrations.CreateModel(
                    name="DataWarehouseTable",
                    fields=[
                        ("created_at", models.DateTimeField(auto_now_add=True)),
                        ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                        ("deleted", models.BooleanField(blank=True, default=False, null=True)),
                        ("deleted_at", models.DateTimeField(blank=True, null=True)),
                        (
                            "id",
                            models.UUIDField(
                                default=posthog.models.utils.UUIDT, editable=False, primary_key=True, serialize=False
                            ),
                        ),
                        ("name", models.CharField(max_length=128)),
                        (
                            "format",
                            models.CharField(
                                choices=[
                                    ("CSV", "CSV"),
                                    ("CSVWithNames", "CSVWithNames"),
                                    ("Parquet", "Parquet"),
                                    ("JSONEachRow", "JSON"),
                                    ("Delta", "Delta"),
                                    ("DeltaS3Wrapper", "DeltaS3Wrapper"),
                                ],
                                max_length=128,
                            ),
                        ),
                        ("url_pattern", models.CharField(max_length=500)),
                        ("queryable_folder", models.CharField(blank=True, max_length=500, null=True)),
                        (
                            "columns",
                            models.JSONField(
                                blank=True,
                                default=dict,
                                help_text="Dict of all columns with Clickhouse type (including Nullable())",
                                null=True,
                            ),
                        ),
                        (
                            "row_count",
                            models.IntegerField(
                                help_text="How many rows are currently synced in this table", null=True
                            ),
                        ),
                        (
                            "size_in_s3_mib",
                            models.FloatField(help_text="The object size in S3 for this table in MiB", null=True),
                        ),
                        (
                            "created_by",
                            models.ForeignKey(
                                blank=True,
                                null=True,
                                on_delete=django.db.models.deletion.SET_NULL,
                                to=settings.AUTH_USER_MODEL,
                            ),
                        ),
                        (
                            "credential",
                            models.ForeignKey(
                                blank=True,
                                null=True,
                                on_delete=django.db.models.deletion.CASCADE,
                                to="data_warehouse.datawarehousecredential",
                            ),
                        ),
                    ],
                    options={
                        "db_table": "posthog_datawarehousetable",
                    },
                ),
                migrations.CreateModel(
                    name="ExternalDataSource",
                    fields=[
                        ("created_at", models.DateTimeField(auto_now_add=True)),
                        ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                        ("deleted", models.BooleanField(blank=True, default=False, null=True)),
                        ("deleted_at", models.DateTimeField(blank=True, null=True)),
                        (
                            "id",
                            models.UUIDField(
                                default=posthog.models.utils.UUIDT, editable=False, primary_key=True, serialize=False
                            ),
                        ),
                        ("source_id", models.CharField(max_length=400)),
                        ("connection_id", models.CharField(max_length=400)),
                        ("destination_id", models.CharField(blank=True, max_length=400, null=True)),
                        (
                            "sync_frequency",
                            models.CharField(
                                blank=True,
                                choices=[("day", "Daily"), ("week", "Weekly"), ("month", "Monthly")],
                                default="day",
                                max_length=128,
                            ),
                        ),
                        ("status", models.CharField(max_length=400)),
                        (
                            "source_type",
                            models.CharField(
                                choices=[
                                    ("Stripe", "Stripe"),
                                    ("Hubspot", "Hubspot"),
                                    ("Postgres", "Postgres"),
                                    ("Zendesk", "Zendesk"),
                                    ("Snowflake", "Snowflake"),
                                    ("Salesforce", "Salesforce"),
                                    ("MySQL", "MySQL"),
                                    ("MongoDB", "MongoDB"),
                                    ("MSSQL", "MSSQL"),
                                    ("Vitally", "Vitally"),
                                    ("BigQuery", "BigQuery"),
                                    ("Chargebee", "Chargebee"),
                                    ("GoogleAds", "GoogleAds"),
                                    ("TemporalIO", "TemporalIO"),
                                    ("DoIt", "DoIt"),
                                    ("GoogleSheets", "GoogleSheets"),
                                    ("MetaAds", "MetaAds"),
                                    ("Klaviyo", "Klaviyo"),
                                    ("Mailchimp", "Mailchimp"),
                                    ("Braze", "Braze"),
                                    ("Mailjet", "Mailjet"),
                                    ("Redshift", "Redshift"),
                                    ("Polar", "Polar"),
                                    ("RevenueCat", "RevenueCat"),
                                    ("LinkedinAds", "LinkedinAds"),
                                    ("RedditAds", "RedditAds"),
                                    ("TikTokAds", "TikTokAds"),
                                    ("Shopify", "Shopify"),
                                ],
                                max_length=128,
                            ),
                        ),
                        ("job_inputs", posthog.helpers.encrypted_fields.EncryptedJSONField(blank=True, null=True)),
                        ("are_tables_created", models.BooleanField(default=False)),
                        ("prefix", models.CharField(blank=True, max_length=100, null=True)),
                        ("revenue_analytics_enabled", models.BooleanField(blank=True, default=False, null=True)),
                        (
                            "created_by",
                            models.ForeignKey(
                                blank=True,
                                null=True,
                                on_delete=django.db.models.deletion.SET_NULL,
                                to=settings.AUTH_USER_MODEL,
                            ),
                        ),
                        ("team", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="posthog.team")),
                    ],
                    options={
                        "db_table": "posthog_externaldatasource",
                    },
                ),
                migrations.CreateModel(
                    name="ExternalDataSourceRevenueAnalyticsConfig",
                    fields=[
                        (
                            "external_data_source",
                            models.OneToOneField(
                                on_delete=django.db.models.deletion.CASCADE,
                                primary_key=True,
                                related_name="revenue_analytics_config",
                                serialize=False,
                                to="data_warehouse.externaldatasource",
                            ),
                        ),
                        ("enabled", models.BooleanField(default=True)),
                        ("include_invoiceless_charges", models.BooleanField(default=True)),
                    ],
                    options={
                        "db_table": "posthog_externaldatasourcerevenueanalyticsconfig",
                    },
                ),
                migrations.CreateModel(
                    name="QueryTabState",
                    fields=[
                        ("created_at", models.DateTimeField(auto_now_add=True)),
                        ("deleted", models.BooleanField(blank=True, default=False, null=True)),
                        ("deleted_at", models.DateTimeField(blank=True, null=True)),
                        (
                            "id",
                            models.UUIDField(
                                default=posthog.models.utils.UUIDT, editable=False, primary_key=True, serialize=False
                            ),
                        ),
                        (
                            "state",
                            models.JSONField(
                                blank=True,
                                default=dict,
                                help_text="\n            Dict of query tab state for a user. Keys are editorModelsStateKey, activeModelStateKey, activeModelVariablesStateKey\n            and values are the state for that key. EditorModelsStateKey is a list of all the editor models for a user.\n            ActiveModelStateKey is the active model for a user. ActiveModelVariablesStateKey is the active model variables\n            for a user.\n            ",
                                null=True,
                            ),
                        ),
                        (
                            "created_by",
                            models.ForeignKey(
                                blank=True,
                                null=True,
                                on_delete=django.db.models.deletion.SET_NULL,
                                to=settings.AUTH_USER_MODEL,
                            ),
                        ),
                        ("team", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="posthog.team")),
                    ],
                    options={
                        "db_table": "posthog_querytabstate",
                    },
                ),
                migrations.CreateModel(
                    name="ExternalDataSchema",
                    fields=[
                        ("created_at", models.DateTimeField(auto_now_add=True)),
                        ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                        ("deleted", models.BooleanField(blank=True, default=False, null=True)),
                        ("deleted_at", models.DateTimeField(blank=True, null=True)),
                        (
                            "id",
                            models.UUIDField(
                                default=posthog.models.utils.UUIDT, editable=False, primary_key=True, serialize=False
                            ),
                        ),
                        ("name", models.CharField(max_length=400)),
                        ("should_sync", models.BooleanField(default=True)),
                        (
                            "latest_error",
                            models.TextField(
                                help_text="The latest error that occurred when syncing this schema.", null=True
                            ),
                        ),
                        ("status", models.CharField(blank=True, max_length=400, null=True)),
                        ("last_synced_at", models.DateTimeField(blank=True, null=True)),
                        (
                            "sync_type",
                            models.CharField(
                                blank=True,
                                choices=[
                                    ("full_refresh", "full_refresh"),
                                    ("incremental", "incremental"),
                                    ("append", "append"),
                                ],
                                max_length=128,
                                null=True,
                            ),
                        ),
                        ("sync_type_config", models.JSONField(blank=True, default=dict)),
                        (
                            "sync_frequency",
                            models.CharField(
                                blank=True,
                                choices=[("day", "Daily"), ("week", "Weekly"), ("month", "Monthly")],
                                default="day",
                                max_length=128,
                                null=True,
                            ),
                        ),
                        (
                            "sync_frequency_interval",
                            models.DurationField(blank=True, default=datetime.timedelta(seconds=21600), null=True),
                        ),
                        (
                            "sync_time_of_day",
                            models.TimeField(blank=True, help_text="Time of day to run the sync (UTC)", null=True),
                        ),
                        (
                            "created_by",
                            models.ForeignKey(
                                blank=True,
                                null=True,
                                on_delete=django.db.models.deletion.SET_NULL,
                                to=settings.AUTH_USER_MODEL,
                            ),
                        ),
                        (
                            "source",
                            models.ForeignKey(
                                on_delete=django.db.models.deletion.CASCADE,
                                related_name="schemas",
                                to="data_warehouse.externaldatasource",
                            ),
                        ),
                        (
                            "table",
                            models.ForeignKey(
                                blank=True,
                                null=True,
                                on_delete=django.db.models.deletion.SET_NULL,
                                to="data_warehouse.datawarehousetable",
                            ),
                        ),
                        ("team", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="posthog.team")),
                    ],
                    options={
                        "db_table": "posthog_externaldataschema",
                    },
                ),
                migrations.CreateModel(
                    name="ExternalDataJob",
                    fields=[
                        ("created_at", models.DateTimeField(auto_now_add=True)),
                        ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                        (
                            "id",
                            models.UUIDField(
                                default=posthog.models.utils.UUIDT, editable=False, primary_key=True, serialize=False
                            ),
                        ),
                        ("status", models.CharField(max_length=400)),
                        ("rows_synced", models.BigIntegerField(blank=True, null=True)),
                        (
                            "latest_error",
                            models.TextField(help_text="The latest error that occurred during this run.", null=True),
                        ),
                        ("workflow_id", models.CharField(blank=True, max_length=400, null=True)),
                        ("workflow_run_id", models.CharField(blank=True, max_length=400, null=True)),
                        (
                            "pipeline_version",
                            models.CharField(
                                blank=True,
                                choices=[("v1-dlt-sync", "v1-dlt-sync"), ("v2-non-dlt", "v2-non-dlt")],
                                max_length=400,
                                null=True,
                            ),
                        ),
                        ("billable", models.BooleanField(blank=True, default=True, null=True)),
                        ("finished_at", models.DateTimeField(blank=True, null=True)),
                        ("storage_delta_mib", models.FloatField(blank=True, default=0, null=True)),
                        (
                            "created_by",
                            models.ForeignKey(
                                blank=True,
                                null=True,
                                on_delete=django.db.models.deletion.SET_NULL,
                                to=settings.AUTH_USER_MODEL,
                            ),
                        ),
                        (
                            "pipeline",
                            models.ForeignKey(
                                on_delete=django.db.models.deletion.CASCADE,
                                related_name="jobs",
                                to="data_warehouse.externaldatasource",
                            ),
                        ),
                        (
                            "schema",
                            models.ForeignKey(
                                blank=True,
                                null=True,
                                on_delete=django.db.models.deletion.CASCADE,
                                to="data_warehouse.externaldataschema",
                            ),
                        ),
                        ("team", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="posthog.team")),
                    ],
                    options={
                        "db_table": "posthog_externaldatajob",
                    },
                ),
                migrations.CreateModel(
                    name="DataWarehouseViewLink",
                    fields=[
                        ("created_at", models.DateTimeField(auto_now_add=True)),
                        ("deleted", models.BooleanField(blank=True, default=False, null=True)),
                        ("deleted_at", models.DateTimeField(blank=True, null=True)),
                        (
                            "id",
                            models.UUIDField(
                                default=posthog.models.utils.UUIDT, editable=False, primary_key=True, serialize=False
                            ),
                        ),
                        ("table", models.CharField(max_length=128)),
                        ("from_join_key", models.CharField(max_length=400)),
                        ("to_join_key", models.CharField(max_length=400)),
                        (
                            "created_by",
                            models.ForeignKey(
                                blank=True,
                                null=True,
                                on_delete=django.db.models.deletion.SET_NULL,
                                to=settings.AUTH_USER_MODEL,
                            ),
                        ),
                        (
                            "saved_query",
                            models.ForeignKey(
                                on_delete=django.db.models.deletion.CASCADE, to="data_warehouse.datawarehousesavedquery"
                            ),
                        ),
                        ("team", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="posthog.team")),
                    ],
                    options={
                        "db_table": "posthog_datawarehouseviewlink",
                    },
                ),
                migrations.AddField(
                    model_name="datawarehousetable",
                    name="external_data_source",
                    field=models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="data_warehouse.externaldatasource",
                    ),
                ),
                migrations.AddField(
                    model_name="datawarehousetable",
                    name="team",
                    field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="posthog.team"),
                ),
                migrations.CreateModel(
                    name="DataWarehouseSavedQueryDraft",
                    fields=[
                        ("created_at", models.DateTimeField(auto_now_add=True)),
                        ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                        ("deleted", models.BooleanField(blank=True, default=False, null=True)),
                        ("deleted_at", models.DateTimeField(blank=True, null=True)),
                        (
                            "id",
                            models.UUIDField(
                                default=posthog.models.utils.UUIDT, editable=False, primary_key=True, serialize=False
                            ),
                        ),
                        ("query", models.JSONField(blank=True, default=dict, help_text="HogQL query draft")),
                        (
                            "name",
                            models.CharField(blank=True, help_text="Name of the draft", max_length=255, null=True),
                        ),
                        (
                            "edited_history_id",
                            models.CharField(
                                blank=True,
                                help_text="view history id that the draft branched from",
                                max_length=255,
                                null=True,
                            ),
                        ),
                        (
                            "created_by",
                            models.ForeignKey(
                                blank=True,
                                null=True,
                                on_delete=django.db.models.deletion.SET_NULL,
                                to=settings.AUTH_USER_MODEL,
                            ),
                        ),
                        (
                            "saved_query",
                            models.ForeignKey(
                                blank=True,
                                help_text="Original saved query this draft is editing (optional)",
                                null=True,
                                on_delete=django.db.models.deletion.SET_NULL,
                                to="data_warehouse.datawarehousesavedquery",
                            ),
                        ),
                        ("team", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="posthog.team")),
                    ],
                    options={
                        "db_table": "posthog_datawarehousesavedquerydraft",
                    },
                ),
                migrations.AddField(
                    model_name="datawarehousesavedquery",
                    name="table",
                    field=models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="data_warehouse.datawarehousetable",
                    ),
                ),
                migrations.AddField(
                    model_name="datawarehousesavedquery",
                    name="team",
                    field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="posthog.team"),
                ),
                migrations.CreateModel(
                    name="DataWarehouseModelPath",
                    fields=[
                        ("created_at", models.DateTimeField(auto_now_add=True)),
                        ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                        (
                            "id",
                            models.UUIDField(
                                default=posthog.models.utils.UUIDT, editable=False, primary_key=True, serialize=False
                            ),
                        ),
                        ("path", products.data_warehouse.backend.models.modeling.LabelTreeField()),
                        (
                            "created_by",
                            models.ForeignKey(
                                blank=True,
                                null=True,
                                on_delete=django.db.models.deletion.SET_NULL,
                                to=settings.AUTH_USER_MODEL,
                            ),
                        ),
                        (
                            "saved_query",
                            models.ForeignKey(
                                default=None,
                                null=True,
                                on_delete=django.db.models.deletion.SET_NULL,
                                to="data_warehouse.datawarehousesavedquery",
                            ),
                        ),
                        (
                            "table",
                            models.ForeignKey(
                                default=None,
                                null=True,
                                on_delete=django.db.models.deletion.SET_NULL,
                                to="data_warehouse.datawarehousetable",
                            ),
                        ),
                        ("team", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="posthog.team")),
                    ],
                    options={
                        "db_table": "posthog_datawarehousemodelpath",
                    },
                ),
                migrations.CreateModel(
                    name="DataWarehouseJoin",
                    fields=[
                        ("created_at", models.DateTimeField(auto_now_add=True)),
                        ("deleted", models.BooleanField(blank=True, default=False, null=True)),
                        ("deleted_at", models.DateTimeField(blank=True, null=True)),
                        (
                            "id",
                            models.UUIDField(
                                default=posthog.models.utils.UUIDT, editable=False, primary_key=True, serialize=False
                            ),
                        ),
                        ("source_table_name", models.CharField(max_length=400)),
                        ("source_table_key", models.CharField(max_length=400)),
                        ("joining_table_name", models.CharField(max_length=400)),
                        ("joining_table_key", models.CharField(max_length=400)),
                        ("field_name", models.CharField(max_length=400)),
                        ("configuration", models.JSONField(default=dict, null=True)),
                        (
                            "created_by",
                            models.ForeignKey(
                                blank=True,
                                null=True,
                                on_delete=django.db.models.deletion.SET_NULL,
                                to=settings.AUTH_USER_MODEL,
                            ),
                        ),
                        ("team", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="posthog.team")),
                    ],
                    options={
                        "db_table": "posthog_datawarehousejoin",
                    },
                ),
                migrations.CreateModel(
                    name="DataModelingJob",
                    fields=[
                        ("created_at", models.DateTimeField(auto_now_add=True)),
                        ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                        (
                            "id",
                            models.UUIDField(
                                default=posthog.models.utils.UUIDT, editable=False, primary_key=True, serialize=False
                            ),
                        ),
                        (
                            "status",
                            models.CharField(
                                choices=[
                                    ("Running", "Running"),
                                    ("Completed", "Completed"),
                                    ("Failed", "Failed"),
                                    ("Cancelled", "Cancelled"),
                                ],
                                default="Running",
                                max_length=400,
                            ),
                        ),
                        ("rows_materialized", models.IntegerField(default=0)),
                        ("error", models.TextField(blank=True, null=True)),
                        ("workflow_id", models.CharField(blank=True, max_length=400, null=True)),
                        ("workflow_run_id", models.CharField(blank=True, max_length=400, null=True)),
                        ("last_run_at", models.DateTimeField(default=django.utils.timezone.now)),
                        (
                            "rows_expected",
                            models.IntegerField(
                                blank=True, help_text="Total rows expected to be materialized", null=True
                            ),
                        ),
                        ("storage_delta_mib", models.FloatField(blank=True, default=0, null=True)),
                        (
                            "created_by",
                            models.ForeignKey(
                                blank=True,
                                null=True,
                                on_delete=django.db.models.deletion.SET_NULL,
                                to=settings.AUTH_USER_MODEL,
                            ),
                        ),
                        (
                            "saved_query",
                            models.ForeignKey(
                                null=True,
                                on_delete=django.db.models.deletion.SET_NULL,
                                to="data_warehouse.datawarehousesavedquery",
                            ),
                        ),
                        (
                            "team",
                            models.ForeignKey(
                                null=True, on_delete=django.db.models.deletion.SET_NULL, to="posthog.team"
                            ),
                        ),
                    ],
                    options={
                        "db_table": "posthog_datamodelingjob",
                    },
                ),
                migrations.AddConstraint(
                    model_name="querytabstate",
                    constraint=models.UniqueConstraint(fields=("team", "created_by"), name="unique_team_created_by"),
                ),
                migrations.AddConstraint(
                    model_name="datawarehousesavedquery",
                    constraint=models.UniqueConstraint(
                        fields=("team", "name"), name="posthog_datawarehouse_saved_query_unique_name"
                    ),
                ),
                migrations.AddIndex(
                    model_name="datawarehousemodelpath",
                    index=models.Index(fields=["team_id", "path"], name="team_id_path"),
                ),
                migrations.AddIndex(
                    model_name="datawarehousemodelpath",
                    index=models.Index(fields=["team_id", "saved_query_id"], name="team_id_saved_query_id"),
                ),
                migrations.AddIndex(
                    model_name="datawarehousemodelpath",
                    index=django.contrib.postgres.indexes.GistIndex(models.F("path"), name="model_path_path"),
                ),
                migrations.AddConstraint(
                    model_name="datawarehousemodelpath",
                    constraint=models.UniqueConstraint(
                        deferrable=django.db.models.constraints.Deferrable["IMMEDIATE"],
                        fields=("team_id", "path"),
                        name="unique_team_id_path",
                    ),
                ),
                migrations.AddConstraint(
                    model_name="datawarehousemanagedviewset",
                    constraint=models.UniqueConstraint(
                        fields=("team", "kind"), name="datawarehouse_unique_managed_viewset_team_kind"
                    ),
                ),
            ],
        ),
    ]
