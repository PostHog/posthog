# Generated by Django 4.2.22 on 2025-10-30 12:39

from django.db import migrations, models


class Migration(migrations.Migration):
    atomic = False  # Added to support concurrent index creation
    dependencies = [
        ("error_tracking", "0003_frame_part_field"),
    ]

    operations = [
        migrations.SeparateDatabaseAndState(
            state_operations=[
                migrations.AddIndex(
                    model_name="errortrackingstackframe",
                    index=models.Index(fields=["team_id", "raw_id", "part"], name="idx_team_id_raw_id_part"),
                ),
            ],
            database_operations=[
                # We add CONCURRENTLY to the create command
                # No reverse SQL needed as the index will be dropped with the constraint
                migrations.RunSQL(
                    """
                    CREATE UNIQUE INDEX CONCURRENTLY IF NOT EXISTS "idx_team_id_raw_id_part" ON "posthog_errortrackingstackframe" ("team_id", "raw_id", "part");
                    """,
                    reverse_sql="""
                        DROP INDEX IF EXISTS "idx_team_id_raw_id_part";
                    """,
                ),
            ],
        ),
    ]
