# Generated by Django 4.2.22 on 2025-10-10 13:52

import django.db.models.deletion
import django.contrib.postgres.fields
from django.conf import settings
from django.db import migrations, models

import posthog.models.utils


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("posthog", "0879_migrate_error_tracking_models"),
        ("ee", "0028_alter_conversation_type"),
    ]

    database_operations = [
        # No database operations - table already exists with this name
    ]

    state_operations = [
        migrations.CreateModel(
            name="ErrorTrackingGroup",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=posthog.models.utils.UUIDT, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("fingerprint", django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), size=None)),
                (
                    "merged_fingerprints",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), size=None),
                        default=list,
                        size=None,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("archived", "Archived"),
                            ("active", "Active"),
                            ("resolved", "Resolved"),
                            ("pending_release", "Pending release"),
                        ],
                        default="active",
                        max_length=40,
                    ),
                ),
                (
                    "assignee",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL
                    ),
                ),
                ("team", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="posthog.team")),
            ],
            options={
                "db_table": "posthog_errortrackinggroup",
            },
        ),
        migrations.CreateModel(
            name="ErrorTrackingIssue",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=posthog.models.utils.UUIDT, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "status",
                    models.TextField(
                        choices=[
                            ("archived", "Archived"),
                            ("active", "Active"),
                            ("resolved", "Resolved"),
                            ("pending_release", "Pending release"),
                            ("suppressed", "Suppressed"),
                        ],
                        default="active",
                    ),
                ),
                ("name", models.TextField(blank=True, null=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("team", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="posthog.team")),
            ],
            options={
                "db_table": "posthog_errortrackingissue",
            },
        ),
        migrations.CreateModel(
            name="ErrorTrackingRelease",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=posthog.models.utils.UUIDT, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ("hash_id", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("version", models.TextField()),
                ("project", models.TextField()),
                ("metadata", models.JSONField(null=True)),
                ("team", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="posthog.team")),
            ],
            options={
                "db_table": "posthog_errortrackingrelease",
            },
        ),
        migrations.CreateModel(
            name="ErrorTrackingSymbolSet",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=posthog.models.utils.UUIDT, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ("ref", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("storage_ptr", models.TextField(null=True)),
                ("failure_reason", models.TextField(blank=True, null=True)),
                ("content_hash", models.TextField(null=True)),
                ("last_used", models.DateTimeField(blank=True, null=True)),
                (
                    "release",
                    models.ForeignKey(
                        null=True, on_delete=django.db.models.deletion.CASCADE, to="error_tracking.errortrackingrelease"
                    ),
                ),
                ("team", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="posthog.team")),
            ],
            options={
                "db_table": "posthog_errortrackingsymbolset",
            },
        ),
        migrations.CreateModel(
            name="ErrorTrackingSuppressionRule",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=posthog.models.utils.UUIDT, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ("filters", models.JSONField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("order_key", models.IntegerField()),
                ("team", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="posthog.team")),
            ],
            options={
                "db_table": "posthog_errortrackingsuppressionrule",
            },
        ),
        migrations.CreateModel(
            name="ErrorTrackingStackFrame",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=posthog.models.utils.UUIDT, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ("raw_id", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("contents", models.JSONField()),
                ("resolved", models.BooleanField()),
                ("context", models.JSONField(blank=True, null=True)),
                (
                    "symbol_set",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="error_tracking.errortrackingsymbolset",
                    ),
                ),
                ("team", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="posthog.team")),
            ],
            options={
                "db_table": "posthog_errortrackingstackframe",
            },
        ),
        migrations.CreateModel(
            name="ErrorTrackingIssueFingerprintV2",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=posthog.models.utils.UUIDT, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ("fingerprint", models.TextField()),
                ("version", models.BigIntegerField(blank=True, default=0)),
                ("first_seen", models.DateTimeField(auto_now_add=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "issue",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="fingerprints",
                        to="error_tracking.errortrackingissue",
                    ),
                ),
                ("team", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="posthog.team")),
            ],
            options={
                "db_table": "posthog_errortrackingissuefingerprintv2",
            },
        ),
        migrations.CreateModel(
            name="ErrorTrackingIssueFingerprint",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("fingerprint", models.TextField()),
                ("version", models.BigIntegerField(blank=True, default=0)),
                (
                    "issue",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="error_tracking.errortrackinggroup"
                    ),
                ),
                (
                    "team",
                    models.ForeignKey(db_index=False, on_delete=django.db.models.deletion.CASCADE, to="posthog.team"),
                ),
            ],
            options={
                "db_table": "posthog_errortrackingissuefingerprint",
            },
        ),
        migrations.CreateModel(
            name="ErrorTrackingIssueAssignment",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=posthog.models.utils.UUIDT, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "issue",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="assignment",
                        to="error_tracking.errortrackingissue",
                    ),
                ),
                ("role", models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to="ee.role")),
                (
                    "user",
                    models.ForeignKey(
                        null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
                    ),
                ),
                (
                    "user_group",
                    models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to="posthog.usergroup"),
                ),
            ],
            options={
                "db_table": "posthog_errortrackingissueassignment",
            },
        ),
        migrations.CreateModel(
            name="ErrorTrackingGroupingRule",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=posthog.models.utils.UUIDT, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ("bytecode", models.JSONField()),
                ("filters", models.JSONField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("disabled_data", models.JSONField(blank=True, null=True)),
                ("order_key", models.IntegerField()),
                ("description", models.TextField(null=True)),
                ("role", models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to="ee.role")),
                ("team", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="posthog.team")),
                (
                    "user",
                    models.ForeignKey(
                        null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
                    ),
                ),
                (
                    "user_group",
                    models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to="posthog.usergroup"),
                ),
            ],
            options={
                "db_table": "posthog_errortrackinggroupingrule",
            },
        ),
        migrations.CreateModel(
            name="ErrorTrackingExternalReference",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=posthog.models.utils.UUIDT, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ("provider", models.TextField(null=True)),
                ("external_id", models.TextField(null=True)),
                ("external_context", models.JSONField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "integration",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="posthog.integration"),
                ),
                (
                    "issue",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="external_issues",
                        related_query_name="external_issue",
                        to="error_tracking.errortrackingissue",
                    ),
                ),
            ],
            options={
                "db_table": "posthog_errortrackingexternalreference",
            },
        ),
        migrations.CreateModel(
            name="ErrorTrackingAssignmentRule",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=posthog.models.utils.UUIDT, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ("order_key", models.IntegerField()),
                ("bytecode", models.JSONField()),
                ("filters", models.JSONField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("disabled_data", models.JSONField(blank=True, null=True)),
                ("role", models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to="ee.role")),
                ("team", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="posthog.team")),
                (
                    "user",
                    models.ForeignKey(
                        null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
                    ),
                ),
                (
                    "user_group",
                    models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to="posthog.usergroup"),
                ),
            ],
            options={
                "db_table": "posthog_errortrackingassignmentrule",
            },
        ),
        migrations.AddIndex(
            model_name="errortrackingsymbolset",
            index=models.Index(fields=["team_id", "ref"], name="posthog_err_team_id_927574_idx"),
        ),
        migrations.AddIndex(
            model_name="errortrackingsymbolset",
            index=models.Index(fields=["last_used"], name="posthog_err_last_us_c924f6_idx"),
        ),
        migrations.AddConstraint(
            model_name="errortrackingsymbolset",
            constraint=models.UniqueConstraint(fields=("team_id", "ref"), name="unique_ref_per_team"),
        ),
        migrations.AddIndex(
            model_name="errortrackingsuppressionrule",
            index=models.Index(fields=["team_id"], name="posthog_err_team_id_503a5b_idx"),
        ),
        migrations.AddIndex(
            model_name="errortrackingstackframe",
            index=models.Index(fields=["team_id", "raw_id"], name="posthog_err_team_id_dc6a7f_idx"),
        ),
        migrations.AddConstraint(
            model_name="errortrackingstackframe",
            constraint=models.UniqueConstraint(fields=("team_id", "raw_id"), name="unique_raw_id_per_team"),
        ),
        migrations.AddIndex(
            model_name="errortrackingrelease",
            index=models.Index(fields=["team_id", "hash_id"], name="posthog_err_team_id_e9f6b2_idx"),
        ),
        migrations.AddConstraint(
            model_name="errortrackingrelease",
            constraint=models.UniqueConstraint(fields=("team_id", "hash_id"), name="unique_release_hash_id_per_team"),
        ),
        migrations.AddConstraint(
            model_name="errortrackingissuefingerprintv2",
            constraint=models.UniqueConstraint(fields=("team", "fingerprint"), name="unique_fingerprint_for_team"),
        ),
        migrations.AddConstraint(
            model_name="errortrackingissuefingerprint",
            constraint=models.UniqueConstraint(fields=("team", "fingerprint"), name="unique fingerprint for team"),
        ),
        migrations.AddIndex(
            model_name="errortrackinggroupingrule",
            index=models.Index(fields=["team_id"], name="posthog_err_team_id_bf614f_idx"),
        ),
        migrations.AddIndex(
            model_name="errortrackingassignmentrule",
            index=models.Index(fields=["team_id"], name="posthog_err_team_id_9da78b_idx"),
        ),
    ]

    operations = [
        migrations.SeparateDatabaseAndState(database_operations=database_operations, state_operations=state_operations)
    ]
