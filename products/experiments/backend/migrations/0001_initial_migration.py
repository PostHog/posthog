# Generated by Django 4.2.22 on 2025-09-23 11:42

import django.utils.timezone
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("posthog", "0863_experimentmetricresult"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.SeparateDatabaseAndState(
            state_operations=[
                migrations.CreateModel(
                    name="Experiment",
                    fields=[
                        (
                            "id",
                            models.BigAutoField(
                                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                            ),
                        ),
                        ("name", models.CharField(max_length=400)),
                        ("description", models.CharField(blank=True, max_length=400, null=True)),
                        ("filters", models.JSONField(blank=True, default=dict)),
                        ("parameters", models.JSONField(default=dict, null=True)),
                        ("secondary_metrics", models.JSONField(blank=True, default=list, null=True)),
                        ("start_date", models.DateTimeField(blank=True, null=True)),
                        ("end_date", models.DateTimeField(blank=True, null=True)),
                        ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                        ("updated_at", models.DateTimeField(auto_now=True)),
                        ("archived", models.BooleanField(default=False)),
                        ("deleted", models.BooleanField(default=False, null=True)),
                        (
                            "type",
                            models.CharField(
                                blank=True,
                                choices=[("web", "web"), ("product", "product")],
                                default="product",
                                max_length=40,
                                null=True,
                            ),
                        ),
                        ("variants", models.JSONField(blank=True, default=dict, null=True)),
                        ("exposure_criteria", models.JSONField(blank=True, default=dict, null=True)),
                        ("metrics", models.JSONField(blank=True, default=list, null=True)),
                        ("metrics_secondary", models.JSONField(blank=True, default=list, null=True)),
                        ("primary_metrics_ordered_uuids", models.JSONField(blank=True, default=None, null=True)),
                        ("secondary_metrics_ordered_uuids", models.JSONField(blank=True, default=None, null=True)),
                        ("stats_config", models.JSONField(blank=True, default=dict, null=True)),
                        (
                            "conclusion",
                            models.CharField(
                                blank=True,
                                choices=[
                                    ("won", "Won"),
                                    ("lost", "Lost"),
                                    ("inconclusive", "Inconclusive"),
                                    ("stopped_early", "Stopped Early"),
                                    ("invalid", "Invalid"),
                                ],
                                max_length=30,
                                null=True,
                            ),
                        ),
                        ("conclusion_comment", models.TextField(blank=True, null=True)),
                        (
                            "created_by",
                            models.ForeignKey(
                                null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL
                            ),
                        ),
                        (
                            "exposure_cohort",
                            models.ForeignKey(
                                blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="posthog.cohort"
                            ),
                        ),
                        (
                            "feature_flag",
                            models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to="posthog.featureflag"),
                        ),
                    ],
                    options={
                        "db_table": "posthog_experiment",
                    },
                ),
                migrations.CreateModel(
                    name="ExperimentSavedMetric",
                    fields=[
                        (
                            "id",
                            models.BigAutoField(
                                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                            ),
                        ),
                        ("name", models.CharField(max_length=400)),
                        ("description", models.CharField(blank=True, max_length=400, null=True)),
                        ("query", models.JSONField()),
                        ("metadata", models.JSONField(blank=True, default=dict, null=True)),
                        ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                        ("updated_at", models.DateTimeField(auto_now=True)),
                        (
                            "created_by",
                            models.ForeignKey(
                                null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL
                            ),
                        ),
                        ("team", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="posthog.team")),
                    ],
                    options={
                        "db_table": "posthog_experimentsavedmetric",
                    },
                ),
                migrations.CreateModel(
                    name="ExperimentToSavedMetric",
                    fields=[
                        (
                            "id",
                            models.BigAutoField(
                                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                            ),
                        ),
                        ("metadata", models.JSONField(default=dict)),
                        ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                        ("updated_at", models.DateTimeField(auto_now=True)),
                        (
                            "experiment",
                            models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="experiments.experiment"),
                        ),
                        (
                            "saved_metric",
                            models.ForeignKey(
                                on_delete=django.db.models.deletion.CASCADE, to="experiments.experimentsavedmetric"
                            ),
                        ),
                    ],
                    options={
                        "db_table": "posthog_experimenttosavedmetric",
                    },
                ),
                migrations.CreateModel(
                    name="ExperimentHoldout",
                    fields=[
                        (
                            "id",
                            models.BigAutoField(
                                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                            ),
                        ),
                        ("name", models.CharField(max_length=400)),
                        ("description", models.CharField(blank=True, max_length=400, null=True)),
                        ("filters", models.JSONField(default=list)),
                        ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                        ("updated_at", models.DateTimeField(auto_now=True)),
                        (
                            "created_by",
                            models.ForeignKey(
                                null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL
                            ),
                        ),
                        ("team", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="posthog.team")),
                    ],
                    options={
                        "db_table": "posthog_experimentholdout",
                    },
                ),
                migrations.AddField(
                    model_name="experiment",
                    name="holdout",
                    field=models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="experiments.experimentholdout",
                    ),
                ),
                migrations.AddField(
                    model_name="experiment",
                    name="saved_metrics",
                    field=models.ManyToManyField(
                        blank=True,
                        related_name="experiments",
                        through="experiments.ExperimentToSavedMetric",
                        to="experiments.experimentsavedmetric",
                    ),
                ),
                migrations.AddField(
                    model_name="experiment",
                    name="team",
                    field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="posthog.team"),
                ),
                migrations.CreateModel(
                    name="WebExperiment",
                    fields=[],
                    options={
                        "proxy": True,
                        "indexes": [],
                        "constraints": [],
                    },
                    bases=("experiments.experiment", models.Model),
                ),
                migrations.CreateModel(
                    name="ExperimentMetricResult",
                    fields=[
                        (
                            "id",
                            models.BigAutoField(
                                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                            ),
                        ),
                        ("metric_uuid", models.CharField(max_length=255)),
                        ("query_from", models.DateTimeField()),
                        ("query_to", models.DateTimeField()),
                        (
                            "status",
                            models.CharField(
                                choices=[("pending", "Pending"), ("completed", "Completed"), ("failed", "Failed")],
                                default="pending",
                                max_length=20,
                            ),
                        ),
                        ("result", models.JSONField(blank=True, default=None, null=True)),
                        ("query_id", models.CharField(blank=True, max_length=255, null=True)),
                        ("completed_at", models.DateTimeField(blank=True, null=True)),
                        ("error_message", models.TextField(blank=True, null=True)),
                        ("created_at", models.DateTimeField(auto_now_add=True)),
                        ("updated_at", models.DateTimeField(auto_now=True)),
                        (
                            "experiment",
                            models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="experiments.experiment"),
                        ),
                    ],
                    options={
                        "db_table": "posthog_experimentmetricresult",
                        "indexes": [
                            models.Index(
                                fields=["experiment", "metric_uuid", "query_to"], name="posthog_exp_experim_b5f6d4_idx"
                            )
                        ],
                        "unique_together": {("experiment", "metric_uuid", "query_to")},
                    },
                ),
            ],
            database_operations=[
                # No database operations - table already exists with this name
            ],
        ),
    ]
