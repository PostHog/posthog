//let a := 1
//
//fn execFunction() {
//  print('execFunction', a)
//}
//
//fn execFunctionNested() {
//  let a := 2
//  fn execFunction() {
//    print('execFunctionNew', a)
//  }
//  print('execFunctionNested', a)
//  execFunction()
//}
//
//execFunction()
//execFunctionNested()
//execFunction()
//
////let b := arrayExists(x -> x, [1, 2, 3])

let b := x -> x * 2
print(b)
print(b(2))
print(b(8))

//print('-- test functions --')
//
//fn add(a, b) {
//    return a + b
//}
//fn add2(a, b) {
//    let c := a + b
//    return c
//}
//
//print(add(3, 4))
//print(add(3, 4) + 100 + add(1, 1))
