// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EventPipelineRunner runAsyncHandlersEventPipeline() runs remaining steps 1`] = `
Array [
  Array [
    "runAsyncHandlersStep",
    Array [
      Object {
        "distinctId": "my_id",
        "elementsList": Array [],
        "event": "$pageview",
        "eventUuid": "uuid1",
        "ip": "127.0.0.1",
        "properties": Object {},
        "teamId": 2,
        "timestamp": "2020-02-23T02:15:00Z",
      },
      LazyPersonContainer {
        "distinctId": "my_id",
        "hub": Object {
          "db": Object {
            "fetchPerson": [MockFunction],
            "kafkaProducer": Object {
              "queueMessage": [MockFunction],
            },
          },
          "statsd": Object {
            "increment": [MockFunction] {
              "calls": Array [
                Array [
                  "kafka_queue.event_pipeline.start",
                  Object {
                    "pipeline": "asyncHandlers",
                  },
                ],
                Array [
                  "kafka_queue.event_pipeline.step",
                  Object {
                    "step": "runAsyncHandlersStep",
                  },
                ],
                Array [
                  "kafka_queue.event_pipeline.step.last",
                  Object {
                    "step": "runAsyncHandlersStep",
                    "team_id": "2",
                  },
                ],
                Array [
                  "kafka_queue.async_handlers.processed",
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": undefined,
                },
                Object {
                  "type": "return",
                  "value": undefined,
                },
                Object {
                  "type": "return",
                  "value": undefined,
                },
                Object {
                  "type": "return",
                  "value": undefined,
                },
              ],
            },
            "timing": [MockFunction] {
              "calls": Array [
                Array [
                  "kafka_queue.event_pipeline.step.timing",
                  2022-08-02T11:12:57.677Z,
                  Object {
                    "step": "runAsyncHandlersStep",
                  },
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": undefined,
                },
              ],
            },
          },
        },
        "promise": null,
        "teamId": 2,
      },
    ],
  ],
]
`;

exports[`EventPipelineRunner runBufferEventPipeline() runs remaining steps 1`] = `
Array [
  Array [
    "pluginsProcessEventStep",
    Array [
      Object {
        "distinct_id": "my_id",
        "event": "default event",
        "ip": "127.0.0.1",
        "now": "2020-02-23T02:15:00Z",
        "properties": Object {},
        "site_url": "http://localhost",
        "team_id": 2,
        "timestamp": "2020-02-23T02:15:00Z",
        "uuid": "uuid1",
      },
      LazyPersonContainer {
        "distinctId": "my_id",
        "hub": Object {
          "db": Object {
            "fetchPerson": [MockFunction],
            "kafkaProducer": Object {
              "queueMessage": [MockFunction],
            },
          },
          "statsd": Object {
            "increment": [MockFunction] {
              "calls": Array [
                Array [
                  "kafka_queue.event_pipeline.start",
                  Object {
                    "pipeline": "buffer",
                  },
                ],
                Array [
                  "kafka_queue.event_pipeline.step",
                  Object {
                    "step": "pluginsProcessEventStep",
                  },
                ],
                Array [
                  "kafka_queue.event_pipeline.step",
                  Object {
                    "step": "processPersonsStep",
                  },
                ],
                Array [
                  "kafka_queue.event_pipeline.step",
                  Object {
                    "step": "prepareEventStep",
                  },
                ],
                Array [
                  "kafka_queue.event_pipeline.step",
                  Object {
                    "step": "createEventStep",
                  },
                ],
                Array [
                  "kafka_queue.event_pipeline.step",
                  Object {
                    "step": "runAsyncHandlersStep",
                  },
                ],
                Array [
                  "kafka_queue.event_pipeline.step.last",
                  Object {
                    "step": "runAsyncHandlersStep",
                    "team_id": "2",
                  },
                ],
                Array [
                  "kafka_queue.buffer_event.processed_and_ingested",
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": undefined,
                },
                Object {
                  "type": "return",
                  "value": undefined,
                },
                Object {
                  "type": "return",
                  "value": undefined,
                },
                Object {
                  "type": "return",
                  "value": undefined,
                },
                Object {
                  "type": "return",
                  "value": undefined,
                },
                Object {
                  "type": "return",
                  "value": undefined,
                },
                Object {
                  "type": "return",
                  "value": undefined,
                },
                Object {
                  "type": "return",
                  "value": undefined,
                },
              ],
            },
            "timing": [MockFunction] {
              "calls": Array [
                Array [
                  "kafka_queue.event_pipeline.step.timing",
                  2022-08-02T11:12:57.675Z,
                  Object {
                    "step": "pluginsProcessEventStep",
                  },
                ],
                Array [
                  "kafka_queue.event_pipeline.step.timing",
                  2022-08-02T11:12:57.675Z,
                  Object {
                    "step": "processPersonsStep",
                  },
                ],
                Array [
                  "kafka_queue.event_pipeline.step.timing",
                  2022-08-02T11:12:57.675Z,
                  Object {
                    "step": "prepareEventStep",
                  },
                ],
                Array [
                  "kafka_queue.event_pipeline.step.timing",
                  2022-08-02T11:12:57.675Z,
                  Object {
                    "step": "createEventStep",
                  },
                ],
                Array [
                  "kafka_queue.event_pipeline.step.timing",
                  2022-08-02T11:12:57.675Z,
                  Object {
                    "step": "runAsyncHandlersStep",
                  },
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": undefined,
                },
                Object {
                  "type": "return",
                  "value": undefined,
                },
                Object {
                  "type": "return",
                  "value": undefined,
                },
                Object {
                  "type": "return",
                  "value": undefined,
                },
                Object {
                  "type": "return",
                  "value": undefined,
                },
              ],
            },
          },
        },
        "promise": null,
        "teamId": 2,
      },
    ],
  ],
  Array [
    "processPersonsStep",
    Array [
      Object {
        "distinct_id": "my_id",
        "event": "default event",
        "ip": "127.0.0.1",
        "now": "2020-02-23T02:15:00Z",
        "properties": Object {},
        "site_url": "http://localhost",
        "team_id": 2,
        "timestamp": "2020-02-23T02:15:00Z",
        "uuid": "uuid1",
      },
      Object {
        "person": Object {
          "created_at": "2020-02-23T02:15:00.000Z",
          "id": 123,
          "is_identified": true,
          "is_user_id": 0,
          "properties": Object {},
          "properties_last_operation": Object {},
          "properties_last_updated_at": Object {},
          "team_id": 2,
          "uuid": "uuid",
          "version": 0,
        },
        "personUpdateProperties": Object {},
      },
    ],
  ],
  Array [
    "prepareEventStep",
    Array [
      Object {
        "distinct_id": "my_id",
        "event": "default event",
        "ip": "127.0.0.1",
        "now": "2020-02-23T02:15:00Z",
        "properties": Object {},
        "site_url": "http://localhost",
        "team_id": 2,
        "timestamp": "2020-02-23T02:15:00Z",
        "uuid": "uuid1",
      },
      Object {
        "person": Object {
          "created_at": "2020-02-23T02:15:00.000Z",
          "id": 123,
          "is_identified": true,
          "is_user_id": 0,
          "properties": Object {},
          "properties_last_operation": Object {},
          "properties_last_updated_at": Object {},
          "team_id": 2,
          "uuid": "uuid",
          "version": 0,
        },
        "personUpdateProperties": Object {},
      },
    ],
  ],
  Array [
    "createEventStep",
    Array [
      Object {
        "distinctId": "my_id",
        "elementsList": Array [],
        "event": "$pageview",
        "eventUuid": "uuid1",
        "ip": "127.0.0.1",
        "properties": Object {},
        "teamId": 2,
        "timestamp": "2020-02-23T02:15:00Z",
      },
    ],
  ],
  Array [
    "runAsyncHandlersStep",
    Array [
      Object {
        "distinctId": "my_id",
        "elementsList": Array [],
        "event": "$pageview",
        "eventUuid": "uuid1",
        "ip": "127.0.0.1",
        "properties": Object {},
        "teamId": 2,
        "timestamp": "2020-02-23T02:15:00Z",
      },
    ],
  ],
]
`;

exports[`EventPipelineRunner runEventPipeline() runs all steps 1`] = `
Array [
  Array [
    "emitToBufferStep",
    Array [
      Object {
        "distinct_id": "my_id",
        "event": "default event",
        "ip": "127.0.0.1",
        "now": "2020-02-23T02:15:00Z",
        "properties": Object {},
        "site_url": "http://localhost",
        "team_id": 2,
        "timestamp": "2020-02-23T02:15:00Z",
        "uuid": "uuid1",
      },
    ],
  ],
  Array [
    "pluginsProcessEventStep",
    Array [
      Object {
        "distinct_id": "my_id",
        "event": "default event",
        "ip": "127.0.0.1",
        "now": "2020-02-23T02:15:00Z",
        "properties": Object {},
        "site_url": "http://localhost",
        "team_id": 2,
        "timestamp": "2020-02-23T02:15:00Z",
        "uuid": "uuid1",
      },
      Object {
        "created_at": "2020-02-23T02:15:00.000Z",
        "id": 123,
        "is_identified": true,
        "is_user_id": 0,
        "properties": Object {},
        "properties_last_operation": Object {},
        "properties_last_updated_at": Object {},
        "team_id": 2,
        "uuid": "uuid",
        "version": 0,
      },
    ],
  ],
  Array [
    "processPersonsStep",
    Array [
      Object {
        "distinct_id": "my_id",
        "event": "default event",
        "ip": "127.0.0.1",
        "now": "2020-02-23T02:15:00Z",
        "properties": Object {},
        "site_url": "http://localhost",
        "team_id": 2,
        "timestamp": "2020-02-23T02:15:00Z",
        "uuid": "uuid1",
      },
      Object {
        "person": Object {
          "created_at": "2020-02-23T02:15:00.000Z",
          "id": 123,
          "is_identified": true,
          "is_user_id": 0,
          "properties": Object {},
          "properties_last_operation": Object {},
          "properties_last_updated_at": Object {},
          "team_id": 2,
          "uuid": "uuid",
          "version": 0,
        },
        "personUpdateProperties": Object {},
      },
    ],
  ],
  Array [
    "prepareEventStep",
    Array [
      Object {
        "distinct_id": "my_id",
        "event": "default event",
        "ip": "127.0.0.1",
        "now": "2020-02-23T02:15:00Z",
        "properties": Object {},
        "site_url": "http://localhost",
        "team_id": 2,
        "timestamp": "2020-02-23T02:15:00Z",
        "uuid": "uuid1",
      },
      Object {
        "person": Object {
          "created_at": "2020-02-23T02:15:00.000Z",
          "id": 123,
          "is_identified": true,
          "is_user_id": 0,
          "properties": Object {},
          "properties_last_operation": Object {},
          "properties_last_updated_at": Object {},
          "team_id": 2,
          "uuid": "uuid",
          "version": 0,
        },
        "personUpdateProperties": Object {},
      },
    ],
  ],
  Array [
    "createEventStep",
    Array [
      Object {
        "distinctId": "my_id",
        "elementsList": Array [],
        "event": "$pageview",
        "eventUuid": "uuid1",
        "ip": "127.0.0.1",
        "properties": Object {},
        "teamId": 2,
        "timestamp": "2020-02-23T02:15:00Z",
      },
    ],
  ],
  Array [
    "runAsyncHandlersStep",
    Array [
      Object {
        "distinctId": "my_id",
        "elementsList": Array [],
        "event": "$pageview",
        "eventUuid": "uuid1",
        "ip": "127.0.0.1",
        "properties": Object {},
        "teamId": 2,
        "timestamp": "2020-02-23T02:15:00Z",
      },
    ],
  ],
]
`;
