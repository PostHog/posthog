// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`segment templates template 0 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to 1plusX",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/1plusx.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-1plusx",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Your 1plusX Client ID.",
      "key": "client_id",
      "label": "Client ID",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": false,
      "description": "If true, events are sent to \`https://tagger-test.opecloud.com\` instead of \`https://tagger.opecloud.com\`",
      "key": "use_test_endpoint",
      "label": "Use Test Endpoint",
      "required": false,
      "secret": false,
      "type": "boolean",
    },
  ],
  "mapping_templates": [],
  "name": "1plusX",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 1 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Actable Predictive",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/actable.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-actable-predictive",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Your Actable-supplied Client ID.",
      "key": "client_id",
      "label": "Client ID",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "Your Actable-supplied Client Secret.",
      "key": "client_secret",
      "label": "Client Secret",
      "required": true,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [],
  "name": "Actable Predictive",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 2 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Adobe Target Cloud Mode",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/adobe.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-adobe-target-cloud",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Your Adobe Target client code. To find your client code in Adobe Target, navigate to **Administration > Implementation**. The client code is shown at the top under Account Details.",
      "key": "client_code",
      "label": "Client Code",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "If you choose to require authentication for Adobe Target's Profile API, you will need to generate an authentication token. Tokens can be generated in your Adobe Target account under the Implementation Settings tab or via the [Adobe.IO Authentication Token API](https://developers.adobetarget.com/api/#authentication-tokens). Input the authentication token here. Note: Authentication tokens expire so a new token will need to be generated and updated here prior to expiration.",
      "key": "bearer_token",
      "label": "Authentication Token",
      "required": false,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [],
  "name": "Adobe Target Cloud Mode",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 3 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Amplitude",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/amplitude.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-amplitude",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Amplitude project API key. You can find this key in the "General" tab of your Amplitude project.",
      "key": "apiKey",
      "label": "API Key",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "Amplitude project secret key. You can find this key in the "General" tab of your Amplitude project.",
      "key": "secretKey",
      "label": "Secret Key",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "choices": [
        {
          "label": "North America",
          "value": "north_america",
        },
        {
          "label": "Europe",
          "value": "europe",
        },
      ],
      "default": "north_america",
      "description": "The region to send your data.",
      "key": "endpoint",
      "label": "Endpoint Region",
      "required": false,
      "secret": false,
      "type": "choice",
    },
  ],
  "mapping_templates": [
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify') and event != 'Order Completed'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{person.id}",
          "description": "A readable ID specified by you. Must have a minimum length of 5 characters. Required unless device ID is present. **Note:** If you send a request with a user ID that is not in the Amplitude system yet, then the user tied to that ID will not be marked new until their first event.",
          "key": "user_id",
          "label": "User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_id ?? event.distinct_id}",
          "description": "A device-specific identifier, such as the Identifier for Vendor on iOS. Required unless user ID is present. If a device ID is not sent with the event, it will be set to a hashed version of the user ID.",
          "key": "device_id",
          "label": "Device ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.event}",
          "description": "A unique identifier for your event.",
          "key": "event_type",
          "label": "Event Type",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "The start time of the session, necessary if you want to associate events with a particular system. To use automatic Amplitude session tracking in browsers, enable Analytics 2.0 on your connected source.",
          "key": "session_id",
          "label": "Session ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The timestamp of the event. If time is not sent with the event, it will be set to the request upload time.",
          "key": "time",
          "label": "Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties}",
          "description": "An object of key-value pairs that represent additional data to be sent along with the event. You can store property values in an array, but note that Amplitude only supports one-dimensional arrays. Date values are transformed into string values. Object depth may not exceed 40 layers.",
          "key": "event_properties",
          "label": "Event Properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties}",
          "description": "An object of key-value pairs that represent additional data tied to the user. You can store property values in an array, but note that Amplitude only supports one-dimensional arrays. Date values are transformed into string values. Object depth may not exceed 40 layers.",
          "key": "user_properties",
          "label": "User Properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {},
          "description": "Groups of users for the event as an event-level group. You can only track up to 5 groups. **Note:** This Amplitude feature is only available to Enterprise customers who have purchased the Accounts add-on.",
          "key": "groups",
          "label": "Groups",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.event.properties.$app_version}",
          "description": "The current version of your application.",
          "key": "app_version",
          "label": "App Version",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_type}",
          "description": "Platform of the device. If using analytics.js to send events from a Browser and no if no Platform value is provided, the value "Web" will be sent.",
          "key": "platform",
          "label": "Platform",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$os}",
          "description": "The name of the mobile operating system or browser that the user is using.",
          "key": "os_name",
          "label": "OS Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$os_version}",
          "description": "The version of the mobile operating system or browser the user is using.",
          "key": "os_version",
          "label": "OS Version",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "The device brand that the user is using.",
          "key": "device_brand",
          "label": "Device Brand",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_manufacturer}",
          "description": "The device manufacturer that the user is using.",
          "key": "device_manufacturer",
          "label": "Device Manufacturer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_model}",
          "description": "The device model that the user is using.",
          "key": "device_model",
          "label": "Device Model",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "The carrier that the user is using.",
          "key": "carrier",
          "label": "Carrier",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$geoip_country_name}",
          "description": "The current country of the user.",
          "key": "country",
          "label": "Country",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "The current region of the user.",
          "key": "region",
          "label": "Region",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$geoip_city_name}",
          "description": "The current city of the user.",
          "key": "city",
          "label": "City",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "The current Designated Market Area of the user.",
          "key": "dma",
          "label": "Designated Market Area",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$locale}",
          "description": "The language set by the user.",
          "key": "language",
          "label": "Language",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.price}",
          "description": "The price of the item purchased. Required for revenue data if the revenue field is not sent. You can use negative values to indicate refunds.",
          "key": "price",
          "label": "Price",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.quantity}",
          "description": "The quantity of the item purchased. Defaults to 1 if not specified.",
          "key": "quantity",
          "label": "Quantity",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.revenue}",
          "description": "Revenue = price * quantity. If you send all 3 fields of price, quantity, and revenue, then (price * quantity) will be used as the revenue value. You can use negative values to indicate refunds. **Note:** You will need to explicitly set this if you are using the Amplitude in cloud-mode.",
          "key": "revenue",
          "label": "Revenue",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.productId}",
          "description": "An identifier for the item purchased. You must send a price and quantity or revenue with this field.",
          "key": "productId",
          "label": "Product ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.revenueType}",
          "description": "The type of revenue for the item purchased. You must send a price and quantity or revenue with this field.",
          "key": "revenueType",
          "label": "Revenue Type",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$geoip_latitude}",
          "description": "The current Latitude of the user.",
          "key": "location_lat",
          "label": "Latitude",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$geoip_longitude}",
          "description": "The current Longitude of the user.",
          "key": "location_lng",
          "label": "Longtitude",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "The IP address of the user. Use "$remote" to use the IP address on the upload request. Amplitude will use the IP address to reverse lookup a user's location (city, country, region, and DMA). Amplitude has the ability to drop the location and IP address from events once it reaches our servers. You can submit a request to Amplitude's platform specialist team here to configure this for you.",
          "key": "ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_idfa}",
          "description": "Identifier for Advertiser. _(iOS)_",
          "key": "idfa",
          "label": "Identifier For Advertiser (IDFA)",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_id}",
          "description": "Identifier for Vendor. _(iOS)_",
          "key": "idfv",
          "label": "Identifier For Vendor (IDFV)",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_idfa}",
          "description": "Google Play Services advertising ID. _(Android)_",
          "key": "adid",
          "label": "Google Play Services Advertising ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Android ID (not the advertising ID). _(Android)_",
          "key": "android_id",
          "label": "Android ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "An incrementing counter to distinguish events with the same user ID and timestamp from each other. Amplitude recommends you send an event ID, increasing over time, especially if you expect events to occur simultanenously.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Amplitude will deduplicate subsequent events sent with this ID we have already seen before within the past 7 days. Amplitude recommends generating a UUID or using some combination of device ID, user ID, event type, event ID, and time.",
          "key": "insert_id",
          "label": "Insert ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$lib}",
          "description": "The name of the library that generated the event.",
          "key": "library",
          "label": "Library",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "price": undefined,
            "productId": undefined,
            "quantity": undefined,
            "revenue": undefined,
            "revenueType": undefined,
          },
          "description": "The list of products purchased.",
          "key": "products",
          "label": "Products",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "initial_referrer": "{event.properties.$referrer}",
            "initial_utm_campaign": "{event.properties.utm_campaign}",
            "initial_utm_content": "{event.properties.utm_content}",
            "initial_utm_medium": "{event.properties.utm_medium}",
            "initial_utm_source": "{event.properties.utm_source}",
            "initial_utm_term": "{event.properties.utm_term}",
          },
          "description": "The following fields will only be set as user properties if they do not already have a value.",
          "key": "setOnce",
          "label": "Set Once",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "referrer": "{event.properties.$referrer}",
            "utm_campaign": "{event.properties.utm_campaign}",
            "utm_content": "{event.properties.utm_content}",
            "utm_medium": "{event.properties.utm_medium}",
            "utm_source": "{event.properties.utm_source}",
            "utm_term": "{event.properties.utm_term}",
          },
          "description": "The following fields will be set as user properties for every event.",
          "key": "setAlways",
          "label": "Set Always",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {},
          "description": "Increment a user property by a number with add. If the user property doesn't have a value set yet, it's initialized to 0.",
          "key": "add",
          "label": "Add",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": false,
          "description": "If true, events are sent to Amplitude's \`batch\` endpoint rather than their \`httpapi\` events endpoint. Enabling this setting may help reduce 429s – or throttling errors – from Amplitude. More information about Amplitude's throttling is available in [their docs](https://developers.amplitude.com/docs/batch-event-upload-api#429s-in-depth).",
          "key": "use_batch_endpoint",
          "label": "Use Batch Endpoint",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "The user agent of the device sending the event.",
          "key": "userAgent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": true,
          "description": "Enabling this setting will set the Device manufacturer, Device Model and OS Name properties based on the user agent string provided in the userAgent field.",
          "key": "userAgentParsing",
          "label": "User Agent Parsing",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": false,
          "description": "Enabling this setting will send user_agent based on the raw user agent string provided in the userAgent field",
          "key": "includeRawUserAgent",
          "label": "Include Raw User Agent",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": undefined,
          "description": "Amplitude has a default minimum id length of 5 characters for user_id and device_id fields. This field allows the minimum to be overridden to allow shorter id lengths.",
          "key": "min_id_length",
          "label": "Minimum ID Length",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "model": "",
            "platformVersion": "",
          },
          "description": "The user agent data of device sending the event",
          "key": "userAgentData",
          "label": "User Agent Data",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "logEventV2",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Track Calls",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify') and event = 'Order Completed'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": false,
          "description": "When enabled, track revenue with each product within the event. When disabled, track total revenue once for the event.",
          "key": "trackRevenuePerProduct",
          "label": "Track Revenue Per Product",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": "{person.id}",
          "description": "A readable ID specified by you. Must have a minimum length of 5 characters. Required unless device ID is present. **Note:** If you send a request with a user ID that is not in the Amplitude system yet, then the user tied to that ID will not be marked new until their first event.",
          "key": "user_id",
          "label": "User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_id ?? event.distinct_id}",
          "description": "A device-specific identifier, such as the Identifier for Vendor on iOS. Required unless user ID is present. If a device ID is not sent with the event, it will be set to a hashed version of the user ID.",
          "key": "device_id",
          "label": "Device ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.event}",
          "description": "A unique identifier for your event.",
          "key": "event_type",
          "label": "Event Type",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "The start time of the session, necessary if you want to associate events with a particular system. To use automatic Amplitude session tracking in browsers, enable Analytics 2.0 on your connected source.",
          "key": "session_id",
          "label": "Session ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The timestamp of the event. If time is not sent with the event, it will be set to the request upload time.",
          "key": "time",
          "label": "Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties}",
          "description": "An object of key-value pairs that represent additional data to be sent along with the event. You can store property values in an array, but note that Amplitude only supports one-dimensional arrays. Date values are transformed into string values. Object depth may not exceed 40 layers.",
          "key": "event_properties",
          "label": "Event Properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties}",
          "description": "An object of key-value pairs that represent additional data tied to the user. You can store property values in an array, but note that Amplitude only supports one-dimensional arrays. Date values are transformed into string values. Object depth may not exceed 40 layers.",
          "key": "user_properties",
          "label": "User Properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {},
          "description": "Groups of users for the event as an event-level group. You can only track up to 5 groups. **Note:** This Amplitude feature is only available to Enterprise customers who have purchased the Accounts add-on.",
          "key": "groups",
          "label": "Groups",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.event.properties.$app_version}",
          "description": "The current version of your application.",
          "key": "app_version",
          "label": "App Version",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_type}",
          "description": "Platform of the device. If using analytics.js to send events from a Browser and no if no Platform value is provided, the value "Web" will be sent.",
          "key": "platform",
          "label": "Platform",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$os}",
          "description": "The name of the mobile operating system or browser that the user is using.",
          "key": "os_name",
          "label": "OS Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$os_version}",
          "description": "The version of the mobile operating system or browser the user is using.",
          "key": "os_version",
          "label": "OS Version",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "The device brand that the user is using.",
          "key": "device_brand",
          "label": "Device Brand",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_manufacturer}",
          "description": "The device manufacturer that the user is using.",
          "key": "device_manufacturer",
          "label": "Device Manufacturer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_model}",
          "description": "The device model that the user is using.",
          "key": "device_model",
          "label": "Device Model",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "The carrier that the user is using.",
          "key": "carrier",
          "label": "Carrier",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$geoip_country_name}",
          "description": "The current country of the user.",
          "key": "country",
          "label": "Country",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "The current region of the user.",
          "key": "region",
          "label": "Region",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$geoip_city_name}",
          "description": "The current city of the user.",
          "key": "city",
          "label": "City",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "The current Designated Market Area of the user.",
          "key": "dma",
          "label": "Designated Market Area",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$locale}",
          "description": "The language set by the user.",
          "key": "language",
          "label": "Language",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.price}",
          "description": "The price of the item purchased. Required for revenue data if the revenue field is not sent. You can use negative values to indicate refunds.",
          "key": "price",
          "label": "Price",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.quantity}",
          "description": "The quantity of the item purchased. Defaults to 1 if not specified.",
          "key": "quantity",
          "label": "Quantity",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.revenue}",
          "description": "Revenue = price * quantity. If you send all 3 fields of price, quantity, and revenue, then (price * quantity) will be used as the revenue value. You can use negative values to indicate refunds. **Note:** You will need to explicitly set this if you are using the Amplitude in cloud-mode.",
          "key": "revenue",
          "label": "Revenue",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.productId}",
          "description": "An identifier for the item purchased. You must send a price and quantity or revenue with this field.",
          "key": "productId",
          "label": "Product ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.revenueType}",
          "description": "The type of revenue for the item purchased. You must send a price and quantity or revenue with this field.",
          "key": "revenueType",
          "label": "Revenue Type",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$geoip_latitude}",
          "description": "The current Latitude of the user.",
          "key": "location_lat",
          "label": "Latitude",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$geoip_longitude}",
          "description": "The current Longitude of the user.",
          "key": "location_lng",
          "label": "Longtitude",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "The IP address of the user. Use "$remote" to use the IP address on the upload request. Amplitude will use the IP address to reverse lookup a user's location (city, country, region, and DMA). Amplitude has the ability to drop the location and IP address from events once it reaches our servers. You can submit a request to Amplitude's platform specialist team here to configure this for you.",
          "key": "ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_idfa}",
          "description": "Identifier for Advertiser. _(iOS)_",
          "key": "idfa",
          "label": "Identifier For Advertiser (IDFA)",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_id}",
          "description": "Identifier for Vendor. _(iOS)_",
          "key": "idfv",
          "label": "Identifier For Vendor (IDFV)",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_idfa}",
          "description": "Google Play Services advertising ID. _(Android)_",
          "key": "adid",
          "label": "Google Play Services Advertising ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Android ID (not the advertising ID). _(Android)_",
          "key": "android_id",
          "label": "Android ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "An incrementing counter to distinguish events with the same user ID and timestamp from each other. Amplitude recommends you send an event ID, increasing over time, especially if you expect events to occur simultanenously.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Amplitude will deduplicate subsequent events sent with this ID we have already seen before within the past 7 days. Amplitude recommends generating a UUID or using some combination of device ID, user ID, event type, event ID, and time.",
          "key": "insert_id",
          "label": "Insert ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$lib}",
          "description": "The name of the library that generated the event.",
          "key": "library",
          "label": "Library",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "price": undefined,
            "productId": undefined,
            "quantity": undefined,
            "revenue": undefined,
            "revenueType": undefined,
          },
          "description": "The list of products purchased.",
          "key": "products",
          "label": "Products",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": false,
          "description": "If true, events are sent to Amplitude's \`batch\` endpoint rather than their \`httpapi\` events endpoint. Enabling this setting may help reduce 429s – or throttling errors – from Amplitude. More information about Amplitude's throttling is available in [their docs](https://developers.amplitude.com/docs/batch-event-upload-api#429s-in-depth).",
          "key": "use_batch_endpoint",
          "label": "Use Batch Endpoint",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "The user agent of the device sending the event.",
          "key": "userAgent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": true,
          "description": "Enabling this setting will set the Device manufacturer, Device Model and OS Name properties based on the user agent string provided in the userAgent field",
          "key": "userAgentParsing",
          "label": "User Agent Parsing",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": false,
          "description": "Enabling this setting will send user_agent based on the raw user agent string provided in the userAgent field",
          "key": "includeRawUserAgent",
          "label": "Include Raw User Agent",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": {
            "utm_campaign": "{event.properties.utm_campaign}",
            "utm_content": "{event.properties.utm_content}",
            "utm_medium": "{event.properties.utm_medium}",
            "utm_source": "{event.properties.utm_source}",
            "utm_term": "{event.properties.utm_term}",
          },
          "description": "UTM Tracking Properties",
          "key": "utm_properties",
          "label": "UTM Properties",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.properties.$referrer}",
          "description": "The referrer of the web request. Sent to Amplitude as both last touch “referrer” and first touch “initial_referrer”",
          "key": "referrer",
          "label": "Referrer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Amplitude has a default minimum id lenght of 5 characters for user_id and device_id fields. This field allows the minimum to be overridden to allow shorter id lengths.",
          "key": "min_id_length",
          "label": "Minimum ID Length",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "model": "",
            "platformVersion": "",
          },
          "description": "The user agent data of device sending the event",
          "key": "userAgentData",
          "label": "User Agent Data",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "logPurchase",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Order Completed Calls",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = '$pageview'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{person.id}",
          "description": "A readable ID specified by you. Must have a minimum length of 5 characters. Required unless device ID is present. **Note:** If you send a request with a user ID that is not in the Amplitude system yet, then the user tied to that ID will not be marked new until their first event.",
          "key": "user_id",
          "label": "User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_id ?? event.distinct_id}",
          "description": "A device-specific identifier, such as the Identifier for Vendor on iOS. Required unless user ID is present. If a device ID is not sent with the event, it will be set to a hashed version of the user ID.",
          "key": "device_id",
          "label": "Device ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.event}",
          "description": "A unique identifier for your event.",
          "key": "event_type",
          "label": "Event Type",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "The start time of the session, necessary if you want to associate events with a particular system. To use automatic Amplitude session tracking in browsers, enable Analytics 2.0 on your connected source.",
          "key": "session_id",
          "label": "Session ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The timestamp of the event. If time is not sent with the event, it will be set to the request upload time.",
          "key": "time",
          "label": "Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties}",
          "description": "An object of key-value pairs that represent additional data to be sent along with the event. You can store property values in an array, but note that Amplitude only supports one-dimensional arrays. Date values are transformed into string values. Object depth may not exceed 40 layers.",
          "key": "event_properties",
          "label": "Event Properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties}",
          "description": "An object of key-value pairs that represent additional data tied to the user. You can store property values in an array, but note that Amplitude only supports one-dimensional arrays. Date values are transformed into string values. Object depth may not exceed 40 layers.",
          "key": "user_properties",
          "label": "User Properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {},
          "description": "Groups of users for the event as an event-level group. You can only track up to 5 groups. **Note:** This Amplitude feature is only available to Enterprise customers who have purchased the Accounts add-on.",
          "key": "groups",
          "label": "Groups",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.event.properties.$app_version}",
          "description": "The current version of your application.",
          "key": "app_version",
          "label": "App Version",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_type}",
          "description": "Platform of the device. If using analytics.js to send events from a Browser and no if no Platform value is provided, the value "Web" will be sent.",
          "key": "platform",
          "label": "Platform",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$os}",
          "description": "The name of the mobile operating system or browser that the user is using.",
          "key": "os_name",
          "label": "OS Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$os_version}",
          "description": "The version of the mobile operating system or browser the user is using.",
          "key": "os_version",
          "label": "OS Version",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "The device brand that the user is using.",
          "key": "device_brand",
          "label": "Device Brand",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_manufacturer}",
          "description": "The device manufacturer that the user is using.",
          "key": "device_manufacturer",
          "label": "Device Manufacturer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_model}",
          "description": "The device model that the user is using.",
          "key": "device_model",
          "label": "Device Model",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "The carrier that the user is using.",
          "key": "carrier",
          "label": "Carrier",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$geoip_country_name}",
          "description": "The current country of the user.",
          "key": "country",
          "label": "Country",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "The current region of the user.",
          "key": "region",
          "label": "Region",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$geoip_city_name}",
          "description": "The current city of the user.",
          "key": "city",
          "label": "City",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "The current Designated Market Area of the user.",
          "key": "dma",
          "label": "Designated Market Area",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$locale}",
          "description": "The language set by the user.",
          "key": "language",
          "label": "Language",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.price}",
          "description": "The price of the item purchased. Required for revenue data if the revenue field is not sent. You can use negative values to indicate refunds.",
          "key": "price",
          "label": "Price",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.quantity}",
          "description": "The quantity of the item purchased. Defaults to 1 if not specified.",
          "key": "quantity",
          "label": "Quantity",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.revenue}",
          "description": "Revenue = price * quantity. If you send all 3 fields of price, quantity, and revenue, then (price * quantity) will be used as the revenue value. You can use negative values to indicate refunds. **Note:** You will need to explicitly set this if you are using the Amplitude in cloud-mode.",
          "key": "revenue",
          "label": "Revenue",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.productId}",
          "description": "An identifier for the item purchased. You must send a price and quantity or revenue with this field.",
          "key": "productId",
          "label": "Product ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.revenueType}",
          "description": "The type of revenue for the item purchased. You must send a price and quantity or revenue with this field.",
          "key": "revenueType",
          "label": "Revenue Type",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$geoip_latitude}",
          "description": "The current Latitude of the user.",
          "key": "location_lat",
          "label": "Latitude",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$geoip_longitude}",
          "description": "The current Longitude of the user.",
          "key": "location_lng",
          "label": "Longtitude",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "The IP address of the user. Use "$remote" to use the IP address on the upload request. Amplitude will use the IP address to reverse lookup a user's location (city, country, region, and DMA). Amplitude has the ability to drop the location and IP address from events once it reaches our servers. You can submit a request to Amplitude's platform specialist team here to configure this for you.",
          "key": "ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_idfa}",
          "description": "Identifier for Advertiser. _(iOS)_",
          "key": "idfa",
          "label": "Identifier For Advertiser (IDFA)",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_id}",
          "description": "Identifier for Vendor. _(iOS)_",
          "key": "idfv",
          "label": "Identifier For Vendor (IDFV)",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_idfa}",
          "description": "Google Play Services advertising ID. _(Android)_",
          "key": "adid",
          "label": "Google Play Services Advertising ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Android ID (not the advertising ID). _(Android)_",
          "key": "android_id",
          "label": "Android ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "An incrementing counter to distinguish events with the same user ID and timestamp from each other. Amplitude recommends you send an event ID, increasing over time, especially if you expect events to occur simultanenously.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Amplitude will deduplicate subsequent events sent with this ID we have already seen before within the past 7 days. Amplitude recommends generating a UUID or using some combination of device ID, user ID, event type, event ID, and time.",
          "key": "insert_id",
          "label": "Insert ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$lib}",
          "description": "The name of the library that generated the event.",
          "key": "library",
          "label": "Library",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "price": undefined,
            "productId": undefined,
            "quantity": undefined,
            "revenue": undefined,
            "revenueType": undefined,
          },
          "description": "The list of products purchased.",
          "key": "products",
          "label": "Products",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "initial_referrer": "{event.properties.$referrer}",
            "initial_utm_campaign": "{event.properties.utm_campaign}",
            "initial_utm_content": "{event.properties.utm_content}",
            "initial_utm_medium": "{event.properties.utm_medium}",
            "initial_utm_source": "{event.properties.utm_source}",
            "initial_utm_term": "{event.properties.utm_term}",
          },
          "description": "The following fields will only be set as user properties if they do not already have a value.",
          "key": "setOnce",
          "label": "Set Once",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "referrer": "{event.properties.$referrer}",
            "utm_campaign": "{event.properties.utm_campaign}",
            "utm_content": "{event.properties.utm_content}",
            "utm_medium": "{event.properties.utm_medium}",
            "utm_source": "{event.properties.utm_source}",
            "utm_term": "{event.properties.utm_term}",
          },
          "description": "The following fields will be set as user properties for every event.",
          "key": "setAlways",
          "label": "Set Always",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {},
          "description": "Increment a user property by a number with add. If the user property doesn't have a value set yet, it's initialized to 0.",
          "key": "add",
          "label": "Add",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": false,
          "description": "If true, events are sent to Amplitude's \`batch\` endpoint rather than their \`httpapi\` events endpoint. Enabling this setting may help reduce 429s – or throttling errors – from Amplitude. More information about Amplitude's throttling is available in [their docs](https://developers.amplitude.com/docs/batch-event-upload-api#429s-in-depth).",
          "key": "use_batch_endpoint",
          "label": "Use Batch Endpoint",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "The user agent of the device sending the event.",
          "key": "userAgent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": true,
          "description": "Enabling this setting will set the Device manufacturer, Device Model and OS Name properties based on the user agent string provided in the userAgent field.",
          "key": "userAgentParsing",
          "label": "User Agent Parsing",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": false,
          "description": "Enabling this setting will send user_agent based on the raw user agent string provided in the userAgent field",
          "key": "includeRawUserAgent",
          "label": "Include Raw User Agent",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": undefined,
          "description": "Amplitude has a default minimum id length of 5 characters for user_id and device_id fields. This field allows the minimum to be overridden to allow shorter id lengths.",
          "key": "min_id_length",
          "label": "Minimum ID Length",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "model": "",
            "platformVersion": "",
          },
          "description": "The user agent data of device sending the event",
          "key": "userAgentData",
          "label": "User Agent Data",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "logEventV2",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Page Calls",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = '$screen'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{person.id}",
          "description": "A readable ID specified by you. Must have a minimum length of 5 characters. Required unless device ID is present. **Note:** If you send a request with a user ID that is not in the Amplitude system yet, then the user tied to that ID will not be marked new until their first event.",
          "key": "user_id",
          "label": "User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_id ?? event.distinct_id}",
          "description": "A device-specific identifier, such as the Identifier for Vendor on iOS. Required unless user ID is present. If a device ID is not sent with the event, it will be set to a hashed version of the user ID.",
          "key": "device_id",
          "label": "Device ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.event}",
          "description": "A unique identifier for your event.",
          "key": "event_type",
          "label": "Event Type",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "The start time of the session, necessary if you want to associate events with a particular system. To use automatic Amplitude session tracking in browsers, enable Analytics 2.0 on your connected source.",
          "key": "session_id",
          "label": "Session ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The timestamp of the event. If time is not sent with the event, it will be set to the request upload time.",
          "key": "time",
          "label": "Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties}",
          "description": "An object of key-value pairs that represent additional data to be sent along with the event. You can store property values in an array, but note that Amplitude only supports one-dimensional arrays. Date values are transformed into string values. Object depth may not exceed 40 layers.",
          "key": "event_properties",
          "label": "Event Properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties}",
          "description": "An object of key-value pairs that represent additional data tied to the user. You can store property values in an array, but note that Amplitude only supports one-dimensional arrays. Date values are transformed into string values. Object depth may not exceed 40 layers.",
          "key": "user_properties",
          "label": "User Properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {},
          "description": "Groups of users for the event as an event-level group. You can only track up to 5 groups. **Note:** This Amplitude feature is only available to Enterprise customers who have purchased the Accounts add-on.",
          "key": "groups",
          "label": "Groups",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.event.properties.$app_version}",
          "description": "The current version of your application.",
          "key": "app_version",
          "label": "App Version",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_type}",
          "description": "Platform of the device. If using analytics.js to send events from a Browser and no if no Platform value is provided, the value "Web" will be sent.",
          "key": "platform",
          "label": "Platform",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$os}",
          "description": "The name of the mobile operating system or browser that the user is using.",
          "key": "os_name",
          "label": "OS Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$os_version}",
          "description": "The version of the mobile operating system or browser the user is using.",
          "key": "os_version",
          "label": "OS Version",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "The device brand that the user is using.",
          "key": "device_brand",
          "label": "Device Brand",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_manufacturer}",
          "description": "The device manufacturer that the user is using.",
          "key": "device_manufacturer",
          "label": "Device Manufacturer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_model}",
          "description": "The device model that the user is using.",
          "key": "device_model",
          "label": "Device Model",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "The carrier that the user is using.",
          "key": "carrier",
          "label": "Carrier",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$geoip_country_name}",
          "description": "The current country of the user.",
          "key": "country",
          "label": "Country",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "The current region of the user.",
          "key": "region",
          "label": "Region",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$geoip_city_name}",
          "description": "The current city of the user.",
          "key": "city",
          "label": "City",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "The current Designated Market Area of the user.",
          "key": "dma",
          "label": "Designated Market Area",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$locale}",
          "description": "The language set by the user.",
          "key": "language",
          "label": "Language",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.price}",
          "description": "The price of the item purchased. Required for revenue data if the revenue field is not sent. You can use negative values to indicate refunds.",
          "key": "price",
          "label": "Price",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.quantity}",
          "description": "The quantity of the item purchased. Defaults to 1 if not specified.",
          "key": "quantity",
          "label": "Quantity",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.revenue}",
          "description": "Revenue = price * quantity. If you send all 3 fields of price, quantity, and revenue, then (price * quantity) will be used as the revenue value. You can use negative values to indicate refunds. **Note:** You will need to explicitly set this if you are using the Amplitude in cloud-mode.",
          "key": "revenue",
          "label": "Revenue",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.productId}",
          "description": "An identifier for the item purchased. You must send a price and quantity or revenue with this field.",
          "key": "productId",
          "label": "Product ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.revenueType}",
          "description": "The type of revenue for the item purchased. You must send a price and quantity or revenue with this field.",
          "key": "revenueType",
          "label": "Revenue Type",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$geoip_latitude}",
          "description": "The current Latitude of the user.",
          "key": "location_lat",
          "label": "Latitude",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$geoip_longitude}",
          "description": "The current Longitude of the user.",
          "key": "location_lng",
          "label": "Longtitude",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "The IP address of the user. Use "$remote" to use the IP address on the upload request. Amplitude will use the IP address to reverse lookup a user's location (city, country, region, and DMA). Amplitude has the ability to drop the location and IP address from events once it reaches our servers. You can submit a request to Amplitude's platform specialist team here to configure this for you.",
          "key": "ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_idfa}",
          "description": "Identifier for Advertiser. _(iOS)_",
          "key": "idfa",
          "label": "Identifier For Advertiser (IDFA)",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_id}",
          "description": "Identifier for Vendor. _(iOS)_",
          "key": "idfv",
          "label": "Identifier For Vendor (IDFV)",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_idfa}",
          "description": "Google Play Services advertising ID. _(Android)_",
          "key": "adid",
          "label": "Google Play Services Advertising ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Android ID (not the advertising ID). _(Android)_",
          "key": "android_id",
          "label": "Android ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "An incrementing counter to distinguish events with the same user ID and timestamp from each other. Amplitude recommends you send an event ID, increasing over time, especially if you expect events to occur simultanenously.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Amplitude will deduplicate subsequent events sent with this ID we have already seen before within the past 7 days. Amplitude recommends generating a UUID or using some combination of device ID, user ID, event type, event ID, and time.",
          "key": "insert_id",
          "label": "Insert ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$lib}",
          "description": "The name of the library that generated the event.",
          "key": "library",
          "label": "Library",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "price": undefined,
            "productId": undefined,
            "quantity": undefined,
            "revenue": undefined,
            "revenueType": undefined,
          },
          "description": "The list of products purchased.",
          "key": "products",
          "label": "Products",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "initial_referrer": "{event.properties.$referrer}",
            "initial_utm_campaign": "{event.properties.utm_campaign}",
            "initial_utm_content": "{event.properties.utm_content}",
            "initial_utm_medium": "{event.properties.utm_medium}",
            "initial_utm_source": "{event.properties.utm_source}",
            "initial_utm_term": "{event.properties.utm_term}",
          },
          "description": "The following fields will only be set as user properties if they do not already have a value.",
          "key": "setOnce",
          "label": "Set Once",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "referrer": "{event.properties.$referrer}",
            "utm_campaign": "{event.properties.utm_campaign}",
            "utm_content": "{event.properties.utm_content}",
            "utm_medium": "{event.properties.utm_medium}",
            "utm_source": "{event.properties.utm_source}",
            "utm_term": "{event.properties.utm_term}",
          },
          "description": "The following fields will be set as user properties for every event.",
          "key": "setAlways",
          "label": "Set Always",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {},
          "description": "Increment a user property by a number with add. If the user property doesn't have a value set yet, it's initialized to 0.",
          "key": "add",
          "label": "Add",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": false,
          "description": "If true, events are sent to Amplitude's \`batch\` endpoint rather than their \`httpapi\` events endpoint. Enabling this setting may help reduce 429s – or throttling errors – from Amplitude. More information about Amplitude's throttling is available in [their docs](https://developers.amplitude.com/docs/batch-event-upload-api#429s-in-depth).",
          "key": "use_batch_endpoint",
          "label": "Use Batch Endpoint",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "The user agent of the device sending the event.",
          "key": "userAgent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": true,
          "description": "Enabling this setting will set the Device manufacturer, Device Model and OS Name properties based on the user agent string provided in the userAgent field.",
          "key": "userAgentParsing",
          "label": "User Agent Parsing",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": false,
          "description": "Enabling this setting will send user_agent based on the raw user agent string provided in the userAgent field",
          "key": "includeRawUserAgent",
          "label": "Include Raw User Agent",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": undefined,
          "description": "Amplitude has a default minimum id length of 5 characters for user_id and device_id fields. This field allows the minimum to be overridden to allow shorter id lengths.",
          "key": "min_id_length",
          "label": "Minimum ID Length",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "model": "",
            "platformVersion": "",
          },
          "description": "The user agent data of device sending the event",
          "key": "userAgentData",
          "label": "User Agent Data",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "logEventV2",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Screen Calls",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event in ('$identify', '$set')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{person.id}",
          "description": "A UUID (unique user ID) specified by you. **Note:** If you send a request with a user ID that is not in the Amplitude system yet, then the user tied to that ID will not be marked new until their first event. Required unless device ID is present.",
          "key": "user_id",
          "label": "User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_id ?? event.distinct_id}",
          "description": "A device specific identifier, such as the Identifier for Vendor (IDFV) on iOS. Required unless user ID is present.",
          "key": "device_id",
          "label": "Device ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties}",
          "description": "Additional data tied to the user in Amplitude. Each distinct value will show up as a user segment on the Amplitude dashboard. Object depth may not exceed 40 layers. **Note:** You can store property values in an array and date values are transformed into string values.",
          "key": "user_properties",
          "label": "User Properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {},
          "description": "Groups of users for Amplitude's account-level reporting feature. Note: You can only track up to 5 groups. Any groups past that threshold will not be tracked. **Note:** This feature is only available to Amplitude Enterprise customers who have purchased the Amplitude Accounts add-on.",
          "key": "groups",
          "label": "Groups",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.event.properties.$app_version}",
          "description": "Version of the app the user is on.",
          "key": "app_version",
          "label": "App Version",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_type}",
          "description": "The platform of the user's device.",
          "key": "platform",
          "label": "Platform",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$os}",
          "description": "The mobile operating system or browser of the user's device.",
          "key": "os_name",
          "label": "OS Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$os_version}",
          "description": "The version of the mobile operating system or browser of the user's device.",
          "key": "os_version",
          "label": "OS Version",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "The brand of user's the device.",
          "key": "device_brand",
          "label": "Device Brand",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_manufacturer}",
          "description": "The manufacturer of the user's device.",
          "key": "device_manufacturer",
          "label": "Device Manufacturer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_model}",
          "description": "The model of the user's device.",
          "key": "device_model",
          "label": "Device Model",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "The user's mobile carrier.",
          "key": "carrier",
          "label": "Carrier",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$geoip_country_name}",
          "description": "The country in which the user is located.",
          "key": "country",
          "label": "Country",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "The geographical region in which the user is located.",
          "key": "region",
          "label": "Region",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$geoip_city_name}",
          "description": "The city in which the user is located.",
          "key": "city",
          "label": "City",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "The Designated Market Area in which the user is located.",
          "key": "dma",
          "label": "Designated Market Area",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$locale}",
          "description": "Language the user has set on their device or browser.",
          "key": "language",
          "label": "Language",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Whether the user is paying or not.",
          "key": "paying",
          "label": "Is Paying",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": undefined,
          "description": "The version of the app the user was first on.",
          "key": "start_version",
          "label": "Initial Version",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Amplitude will deduplicate subsequent events sent with this ID we have already seen before within the past 7 days. Amplitude recommends generating a UUID or using some combination of device ID, user ID, event type, event ID, and time.",
          "key": "insert_id",
          "label": "Insert ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "The user agent of the device sending the event.",
          "key": "userAgent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": true,
          "description": "Enabling this setting will set the Device manufacturer, Device Model and OS Name properties based on the user agent string provided in the userAgent field",
          "key": "userAgentParsing",
          "label": "User Agent Parsing",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": false,
          "description": "Enabling this setting will send user_agent based on the raw user agent string provided in the userAgent field",
          "key": "includeRawUserAgent",
          "label": "Include Raw User Agent",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": {
            "utm_campaign": "{event.properties.utm_campaign}",
            "utm_content": "{event.properties.utm_content}",
            "utm_medium": "{event.properties.utm_medium}",
            "utm_source": "{event.properties.utm_source}",
            "utm_term": "{event.properties.utm_term}",
          },
          "description": "UTM Tracking Properties",
          "key": "utm_properties",
          "label": "UTM Properties",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.properties.$referrer}",
          "description": "The referrer of the web request. Sent to Amplitude as both last touch “referrer” and first touch “initial_referrer”",
          "key": "referrer",
          "label": "Referrer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Amplitude has a default minimum id length of 5 characters for user_id and device_id fields. This field allows the minimum to be overridden to allow shorter id lengths.",
          "key": "min_id_length",
          "label": "Minimum ID Length",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$lib}",
          "description": "The name of the library that generated the event.",
          "key": "library",
          "label": "Library",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "model": "",
            "platformVersion": "",
          },
          "description": "The user agent data of device sending the event",
          "key": "userAgentData",
          "label": "User Agent Data",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "identifyUser",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Identify Calls",
    },
  ],
  "name": "Amplitude",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 4 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Antavo",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/antavo.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-antavo",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "The Antavo Loyalty Engine stack where your brand resides",
      "key": "stack",
      "label": "Stack",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "The Antavo brand API key supplied to your brand in Antavo Loyalty Engine",
      "key": "api_key",
      "label": "API Key",
      "required": true,
      "secret": false,
      "type": "password",
    },
  ],
  "mapping_templates": [],
  "name": "Antavo",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 5 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Braze Cloud Mode",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/braze.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-braze-cloud",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Created under Developer Console in the Braze Dashboard.",
      "key": "api_key",
      "label": "API Key",
      "required": true,
      "secret": false,
      "type": "password",
    },
    {
      "default": undefined,
      "description": "The app identifier used to reference specific Apps in requests made to the Braze API. Created under Developer Console in the Braze Dashboard.",
      "key": "app_id",
      "label": "App ID",
      "required": false,
      "secret": false,
      "type": "string",
    },
    {
      "choices": [
        {
          "label": "US-01	(https://dashboard-01.braze.com)",
          "value": "https://rest.iad-01.braze.com",
        },
        {
          "label": "US-02	(https://dashboard-02.braze.com)",
          "value": "https://rest.iad-02.braze.com",
        },
        {
          "label": "US-03	(https://dashboard-03.braze.com)",
          "value": "https://rest.iad-03.braze.com",
        },
        {
          "label": "US-04	(https://dashboard-04.braze.com)",
          "value": "https://rest.iad-04.braze.com",
        },
        {
          "label": "US-05	(https://dashboard-05.braze.com)",
          "value": "https://rest.iad-05.braze.com",
        },
        {
          "label": "US-06	(https://dashboard-06.braze.com)",
          "value": "https://rest.iad-06.braze.com",
        },
        {
          "label": "US-07	(https://dashboard-07.braze.com)",
          "value": "https://rest.iad-07.braze.com",
        },
        {
          "label": "US-08	(https://dashboard-08.braze.com)",
          "value": "https://rest.iad-08.braze.com",
        },
        {
          "label": "US-09	(https://dashboard-09.braze.com)",
          "value": "https://rest.iad-09.braze.com",
        },
        {
          "label": "EU-01	(https://dashboard-01.braze.eu)",
          "value": "https://rest.fra-01.braze.eu",
        },
        {
          "label": "EU-02	(https://dashboard-02.braze.eu)",
          "value": "https://rest.fra-02.braze.eu",
        },
        {
          "label": "AU-01 (https://dashboard.au-01.braze.com)",
          "value": "https://rest.au-01.braze.com",
        },
      ],
      "default": "https://rest.iad-01.braze.com",
      "description": "Your Braze REST endpoint. [See more details](https://www.braze.com/docs/api/basics/#endpoints)",
      "key": "endpoint",
      "label": "REST Endpoint",
      "required": true,
      "secret": false,
      "type": "choice",
    },
  ],
  "mapping_templates": [
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify') and event != 'Order Completed'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{person.id}",
          "description": "The unique user identifier",
          "key": "external_id",
          "label": "External User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "alias_label": undefined,
            "alias_name": undefined,
          },
          "description": "A user alias object. See [the docs](https://www.braze.com/docs/api/objects_filters/user_alias_object/).",
          "key": "user_alias",
          "label": "User Alias Object",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.context.traits.email ?? event.properties.email}",
          "description": "The user email",
          "key": "email",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.braze_id}",
          "description": "The unique user identifier",
          "key": "braze_id",
          "label": "Braze User Identifier",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.event}",
          "description": "The event name",
          "key": "name",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.receivedAt}",
          "description": "When the event occurred.",
          "key": "time",
          "label": "Time",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties}",
          "description": "Properties of the event",
          "key": "properties",
          "label": "Event Properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": false,
          "description": "Setting this flag to true will put the API in "Update Only" mode. When using a "user_alias", "Update Only" mode is always true.",
          "key": "_update_existing_only",
          "label": "Update Existing Only",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": true,
          "description": "If true, Segment will batch events before sending to Braze’s user track endpoint. Braze accepts batches of up to 75 events.",
          "key": "enable_batching",
          "label": "Batch Data to Braze",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": "75",
          "description": "Maximum number of events to include in each batch. Actual batch sizes may be lower.",
          "key": "batch_size",
          "label": "Batch Size",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "trackEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Track Calls",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Order Completed'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{person.id}",
          "description": "The unique user identifier",
          "key": "external_id",
          "label": "External User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "alias_label": undefined,
            "alias_name": undefined,
          },
          "description": "A user alias object. See [the docs](https://www.braze.com/docs/api/objects_filters/user_alias_object/).",
          "key": "user_alias",
          "label": "User Alias Object",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{person.properties.email}",
          "description": "The user email",
          "key": "email",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.braze_id}",
          "description": "The unique user identifier",
          "key": "braze_id",
          "label": "Braze User Identifier",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.receivedAt}",
          "description": "When the event occurred.",
          "key": "time",
          "label": "Time",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.products}",
          "description": "Products purchased",
          "key": "products",
          "label": "Products",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties}",
          "description": "Properties of the event",
          "key": "properties",
          "label": "Event Properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": false,
          "description": "Setting this flag to true will put the API in "Update Only" mode. When using a "user_alias", "Update Only" mode is always true.",
          "key": "_update_existing_only",
          "label": "Update Existing Only",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": true,
          "description": "If true, Segment will batch events before sending to Braze’s user track endpoint. Braze accepts batches of up to 75 events.",
          "key": "enable_batching",
          "label": "Batch Data to Braze",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": "75",
          "description": "Maximum number of events to include in each batch. Actual batch sizes may be lower.",
          "key": "batch_size",
          "label": "Batch Size",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "trackPurchase",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Order Completed Calls",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event in ('$identify', '$set')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{person.id}",
          "description": "The unique user identifier",
          "key": "external_id",
          "label": "External User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "alias_label": undefined,
            "alias_name": undefined,
          },
          "description": "A user alias object. See [the docs](https://www.braze.com/docs/api/objects_filters/user_alias_object/).",
          "key": "user_alias",
          "label": "User Alias Object",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.properties.braze_id}",
          "description": "The unique user identifier",
          "key": "braze_id",
          "label": "Braze User Identifier",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$geoip_country_name}",
          "description": "The country code of the user",
          "key": "country",
          "label": "Country",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "latitude": "{event.properties.$geoip_latitude}",
            "longitude": "{event.properties.$geoip_longitude}",
          },
          "description": "The user's current longitude/latitude.",
          "key": "current_location",
          "label": "Current Location",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": undefined,
          "description": "The date the user first used the app",
          "key": "date_of_first_session",
          "label": "Date of First Session",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "The date the user last used the app",
          "key": "date_of_last_session",
          "label": "Date of Last Session",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "The user's date of birth",
          "key": "dob",
          "label": "Date of Birth",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.email}",
          "description": "The user's email",
          "key": "email",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "The user's email subscription preference: “opted_in” (explicitly registered to receive email messages), “unsubscribed” (explicitly opted out of email messages), and “subscribed” (neither opted in nor out).",
          "key": "email_subscribe",
          "label": "Email Subscribe",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Set to true to disable the open tracking pixel from being added to all future emails sent to this user.",
          "key": "email_open_tracking_disabled",
          "label": "Email Open Tracking Disabled",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": undefined,
          "description": "Set to true to disable the click tracking for all links within a future email, sent to this user.",
          "key": "email_click_tracking_disabled",
          "label": "Email Click Tracking Disabled",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": {
            "id": undefined,
            "likes": undefined,
            "num_friends": undefined,
          },
          "description": "Hash of Facebook attribution containing any of \`id\` (string), \`likes\` (array of strings), \`num_friends\` (integer).",
          "key": "facebook",
          "label": "Facebook Attribution Data",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{person.properties.firstName}",
          "description": "The user's first name",
          "key": "first_name",
          "label": "First Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.gender}",
          "description": "The user's gender: “M”, “F”, “O” (other), “N” (not applicable), “P” (prefer not to say) or nil (unknown).",
          "key": "gender",
          "label": "Gender",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.address.city}",
          "description": "The user's home city.",
          "key": "home_city",
          "label": "Home City",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.avatar}",
          "description": "URL of image to be associated with user profile.",
          "key": "image_url",
          "label": "Image URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "The user's preferred language.",
          "key": "language",
          "label": "Language",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.lastName}",
          "description": "The user's last name",
          "key": "last_name",
          "label": "Last Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "The date the user marked their email as spam.",
          "key": "marked_email_as_spam_at",
          "label": "Marked Email as Spam At",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.phone}",
          "description": "The user's phone number",
          "key": "phone",
          "label": "Phone Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "The user's push subscription preference: “opted_in” (explicitly registered to receive push messages), “unsubscribed” (explicitly opted out of push messages), and “subscribed” (neither opted in nor out).",
          "key": "push_subscribe",
          "label": "Push Subscribe",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "app_id": undefined,
            "device_id": undefined,
            "token": undefined,
          },
          "description": "Array of objects with app_id and token string. You may optionally provide a device_id for the device this token is associated with, e.g., [{"app_id": App Identifier, "token": "abcd", "device_id": "optional_field_value"}]. If a device_id is not provided, one will be randomly generated.",
          "key": "push_tokens",
          "label": "Push Tokens",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": undefined,
          "description": "The user’s time zone name from IANA Time Zone Database  (e.g., “America/New_York” or “Eastern Time (US & Canada)”). Only valid time zone values will be set.",
          "key": "time_zone",
          "label": "Time zone",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "followers_count": undefined,
            "friends_count": undefined,
            "id": undefined,
            "screen_name": undefined,
            "statuses_count": undefined,
          },
          "description": "Hash containing any of id (integer), screen_name (string, Twitter handle), followers_count (integer), friends_count (integer), statuses_count (integer).",
          "key": "twitter",
          "label": "Twitter Attribution Data",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{person.properties}",
          "description": "Hash of custom attributes to send to Braze",
          "key": "custom_attributes",
          "label": "Custom Attributes",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": false,
          "description": "Setting this flag to true will put the API in "Update Only" mode. When using a "user_alias", "Update Only" mode is always true.",
          "key": "_update_existing_only",
          "label": "Update Existing Only",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": true,
          "description": "If true, Segment will batch events before sending to Braze’s user track endpoint. Braze accepts batches of up to 75 events.",
          "key": "enable_batching",
          "label": "Batch Data to Braze",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": "75",
          "description": "Maximum number of events to include in each batch. Actual batch sizes may be lower.",
          "key": "batch_size",
          "label": "Batch Size",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "updateUserProfile",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Identify Calls",
    },
  ],
  "name": "Braze Cloud Mode",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 6 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to CleverTap",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/clevertap.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-clevertap",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "CleverTap Account Id. This can be found under [Settings Page](https://developer.clevertap.com/docs/authentication#getting-your-account-credentials).",
      "key": "clevertapAccountId",
      "label": "CleverTap Account ID",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "CleverTap Passcode. This can be found under [Settings Page](https://developer.clevertap.com/docs/authentication#getting-your-account-credentials).",
      "key": "clevertapPasscode",
      "label": "CleverTap Account Passcode",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "choices": [
        {
          "label": "SK",
          "value": "https://sk1.api.clevertap.com",
        },
        {
          "label": "EU",
          "value": "https://eu1.api.clevertap.com",
        },
        {
          "label": "US",
          "value": "https://us1.api.clevertap.com",
        },
        {
          "label": "SG",
          "value": "https://sg1.api.clevertap.com",
        },
        {
          "label": "IN",
          "value": "https://in1.api.clevertap.com",
        },
      ],
      "default": "https://sk1.api.clevertap.com",
      "description": "Learn More about [Account regions](https://docs.clevertap.com/docs/build-segment-destination#set-up-segment-destination-action).",
      "key": "clevertapEndpoint",
      "label": "REST Endpoint",
      "required": true,
      "secret": false,
      "type": "choice",
    },
  ],
  "mapping_templates": [
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Delete User'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{person.id}",
          "description": "The ID of the profile which you want to delete",
          "key": "identity",
          "label": "Identity",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "userDelete",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Event Name is Delete User",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event in ('$identify', '$set')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.timestamp}",
          "description": "A timestamp when the person was created",
          "key": "ts",
          "label": "Created At",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties}",
          "description": "Optional attributes for the person. When updating a person attributes added or updated, not removed",
          "key": "profileData",
          "label": "Person Attributes",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id}",
          "description": "The Id used to uniquely identify a person in CleverTap",
          "key": "identity",
          "label": "Identity",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "userUpload",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Event Type is Identify",
    },
  ],
  "name": "CleverTap",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 7 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Close",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/undefined.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "close",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Your Close API key.",
      "key": "api_key",
      "label": "API key",
      "required": true,
      "secret": false,
      "type": "password",
    },
    {
      "default": "",
      "description": "Enter the ID of a Lead Custom Field that'll be used to store Company ID. You'll need to create this Lead Custom Field in Close first, and then the integration will use this field to store the Company ID when creating new contacts, and/or will be used as a lookup key when updating existing Lead. The Custom Field type must be a text. If this field is not filled out, it will only lookup and de-dupe based on Contact's email.",
      "key": "lead_custom_field_id_for_company_id",
      "label": "Lead Custom Field ID for Company ID",
      "required": false,
      "secret": false,
      "type": "string",
    },
    {
      "default": "",
      "description": "Enter the ID of a Contact Custom Field that'll be used to store User ID. You'll need to create this Contact Custom Field in Close first, and then the integration will use this field to store the User ID when creating new contacts, and/or will be used as a lookup key when updating existing Contacts. The Custom Field type must be a text. If this field is not filled out, it will only look up and de-dupe based on email.",
      "key": "contact_custom_field_id_for_user_id",
      "label": "Contact Custom Field ID for User ID",
      "required": false,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [],
  "name": "Close",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 8 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Cordial",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/cordial.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-cordial",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Your Cordial API Key",
      "key": "apiKey",
      "label": "API Key",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": "https://integrations-ingest-svc.usw1.cordial.com",
      "description": "Cordial API endpoint. Leave default, unless you've been provided with another one. [See more details](https://support.cordial.com/hc/en-us/sections/200553578-REST-API-Introduction-and-Overview)",
      "key": "endpoint",
      "label": "Endpoint",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "Cordial string unique attribute key to store Segment User ID in (e.g. \`segment_id\`)",
      "key": "segmentIdKey",
      "label": "User ID attribute key",
      "required": false,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [],
  "name": "Cordial",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 9 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Criteo Audiences",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/criteo.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-criteo-audiences",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Your Criteo API client ID",
      "key": "client_id",
      "label": "API Client ID",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "Your Criteo API client secret",
      "key": "client_secret",
      "label": "API Client Secret",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "Your Criteo Advertiser ID",
      "key": "advertiser_id",
      "label": "Advertiser ID",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": true,
      "description": "Important: This setting should remain enabled!",
      "key": "enable_batching",
      "label": "Enable Batching",
      "required": false,
      "secret": false,
      "type": "boolean",
    },
  ],
  "mapping_templates": [],
  "name": "Criteo Audiences",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 10 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Customerio",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/customerio.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-customerio",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Customer.io site ID. This can be found on your [API Credentials page](https://fly.customer.io/settings/api_credentials).",
      "key": "siteId",
      "label": "Site ID",
      "required": true,
      "secret": false,
      "type": "password",
    },
    {
      "default": undefined,
      "description": "Customer.io API key. This can be found on your [API Credentials page](https://fly.customer.io/settings/api_credentials).",
      "key": "apiKey",
      "label": "API Key",
      "required": true,
      "secret": false,
      "type": "password",
    },
    {
      "choices": [
        {
          "label": "US 🇺🇸",
          "value": "US 🇺🇸",
        },
        {
          "label": "EU 🇪🇺",
          "value": "EU 🇪🇺",
        },
      ],
      "default": "US 🇺🇸",
      "description": "Learn about [Account Regions](https://customer.io/docs/data-centers/).",
      "key": "accountRegion",
      "label": "Account Region",
      "required": false,
      "secret": false,
      "type": "choice",
    },
  ],
  "mapping_templates": [
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event in ('$identify', '$set')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{person.id ?? person.properties.email}",
          "description": "The ID used to uniquely identify a person in Customer.io. [Learn more](https://customer.io/docs/identifying-people/#identifiers).",
          "key": "id",
          "label": "Person ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.distinct_id}",
          "description": "An optional anonymous ID. This is used to tie anonymous events to this person. [Learn more](https://customer.io/docs/anonymous-events/).",
          "key": "anonymous_id",
          "label": "Anonymous ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{"@template":"{{traits.email}}"}",
          "description": "The person's email address.",
          "key": "email",
          "label": "Email Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.created_at ?? person.properties.createdAt}",
          "description": "A timestamp of when the person was created.",
          "key": "created_at",
          "label": "Created At",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.objectId}",
          "description": "The ID used to uniquely identify an object in Customer.io. [Learn more](https://customer.io/docs/object-relationships).",
          "key": "group_id",
          "label": "Object ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties}",
          "description": "Optional attributes for the person. When updating a person, attributes are added or updated, not removed.",
          "key": "custom_attributes",
          "label": "Person Attributes",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.relationshipAttributes}",
          "description": "Optional attributes for the relationship between the object and the user. When updating an object, attributes are added or updated, not removed.",
          "key": "relationship_attributes",
          "label": "Relationship Attributes",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": true,
          "description": "Convert dates to Unix timestamps (seconds since Epoch).",
          "key": "convert_timestamp",
          "label": "Convert Timestamps",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": "{person.properties.object_type_id ?? person.properties.objectTypeId}",
          "description": "The ID used to uniquely identify a custom object type in Customer.io. [Learn more](https://customer.io/docs/object-relationships).",
          "key": "object_type_id",
          "label": "Object Type Id",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "createUpdatePerson",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Create or Update Person",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Application Installed' or event = 'Application Opened'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{person.id}",
          "description": "The ID of the person that this mobile device belongs to.",
          "key": "person_id",
          "label": "Person ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.context.device.token}",
          "description": "The device token of a customer's mobile device.",
          "key": "device_id",
          "label": "Device ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.event.properties.$app_version}",
          "description": "The version of the App",
          "key": "app_version",
          "label": "App Version",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_type}",
          "description": "The mobile device's platform. ("ios" or "android")",
          "key": "platform",
          "label": "Platform",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The timestamp for when the mobile device was last used. Default is current date and time.",
          "key": "last_used",
          "label": "Last Used",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties}",
          "description": "Optional data that you can reference to segment your audience, like a person's attributes, but specific to a device.",
          "key": "attributes",
          "label": "Event Attributes",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": true,
          "description": "Convert dates to Unix timestamps (seconds since Epoch).",
          "key": "convert_timestamp",
          "label": "Convert Timestamps",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": "createUpdateDevice",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Create or Update Device",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "
        event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify')
        and event != 'Relationship Deleted'
        and event != 'User Deleted'
        and event != 'User Suppressed'
        and event != 'User Unsuppressed'
        and event != 'Object Deleted'
        and event != 'Report Delivery Event'
      ",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{person.id}",
          "description": "The ID used to uniquely identify a person in Customer.io. [Learn more](https://customer.io/docs/identifying-people/#identifiers).",
          "key": "id",
          "label": "Person ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.distinct_id}",
          "description": "An anonymous ID for when no Person ID exists. [Learn more](https://customer.io/docs/anonymous-events/).",
          "key": "anonymous_id",
          "label": "Anonymous ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.event}",
          "description": "The name of the event.",
          "key": "name",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "An optional identifier used to deduplicate events. [Learn more](https://customer.io/docs/api/#operation/track).",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "A timestamp of when the event took place. Default is current date and time.",
          "key": "timestamp",
          "label": "Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties}",
          "description": "Optional data to include with the event.",
          "key": "data",
          "label": "Event Attributes",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": true,
          "description": "Convert dates to Unix timestamps (seconds since Epoch).",
          "key": "convert_timestamp",
          "label": "Convert Timestamps",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": "trackEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Track Event",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = '$pageview'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{person.id}",
          "description": "The ID used to uniquely identify a person in Customer.io. [Learn more](https://customer.io/docs/identifying-people/#identifiers).",
          "key": "id",
          "label": "Person ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.distinct_id}",
          "description": "An anonymous ID for when no Person ID exists. [Learn more](https://customer.io/docs/anonymous-events/).",
          "key": "anonymous_id",
          "label": "Anonymous ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "An optional identifier used to deduplicate events. [Learn more](https://customer.io/docs/api/#operation/track).",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.url}",
          "description": "The URL of the page visited.",
          "key": "url",
          "label": "Page URL",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "A timestamp of when the event took place. Default is current date and time.",
          "key": "timestamp",
          "label": "Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties}",
          "description": "Optional data to include with the event.",
          "key": "data",
          "label": "Event Attributes",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": true,
          "description": "Convert dates to Unix timestamps (seconds since Epoch).",
          "key": "convert_timestamp",
          "label": "Convert Timestamps",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": "trackPageView",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Track Page View",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = '$screen'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{person.id}",
          "description": "The ID used to uniquely identify a person in Customer.io. [Learn more](https://customer.io/docs/identifying-people/#identifiers).",
          "key": "id",
          "label": "Person ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.distinct_id}",
          "description": "An anonymous ID for when no Person ID exists. [Learn more](https://customer.io/docs/anonymous-events/).",
          "key": "anonymous_id",
          "label": "Anonymous ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "An optional identifier used to deduplicate events. [Learn more](https://customer.io/docs/api/#operation/track).",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.name}",
          "description": "The name of the screen visited.",
          "key": "name",
          "label": "Screen name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "A timestamp of when the event took place. Default is current date and time.",
          "key": "timestamp",
          "label": "Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties}",
          "description": "Optional data to include with the event.",
          "key": "data",
          "label": "Event Attributes",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": true,
          "description": "Convert dates to Unix timestamps (seconds since Epoch).",
          "key": "convert_timestamp",
          "label": "Convert Timestamps",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": "trackScreenView",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Track Screen View",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = '$groupidentify'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.groupId}",
          "description": "The ID used to uniquely identify an object in Customer.io. [Learn more](https://customer.io/docs/object-relationships).",
          "key": "id",
          "label": "Object ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.created_at ?? person.properties.createdAt}",
          "description": "A timestamp of when the object was created.",
          "key": "created_at",
          "label": "Created At",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.objectAttributes}",
          "description": "Optional attributes for the object. When updating an object, attributes are added or updated, not removed.",
          "key": "custom_attributes",
          "label": "Object Attributes",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.relationshipAttributes}",
          "description": "Optional attributes for the relationship between the object and the user. When updating an relationship, attributes are added or updated, not removed.",
          "key": "relationship_attributes",
          "label": "Relationship Attributes",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id}",
          "description": "The ID used to relate a user to an object in Customer.io. [Learn more](https://customer.io/docs/identifying-people/#identifiers).",
          "key": "user_id",
          "label": "User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.distinct_id}",
          "description": "An anonymous ID to relate to an object when no Person ID exists. [Learn more](https://customer.io/docs/anonymous-events/).",
          "key": "anonymous_id",
          "label": "Anonymous ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.object_type_id ?? person.properties.objectTypeId}",
          "description": "The ID used to uniquely identify a custom object type in Customer.io. [Learn more](https://customer.io/docs/object-relationships).",
          "key": "object_type_id",
          "label": "Object Type Id",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": true,
          "description": "Convert dates to Unix timestamps (seconds since Epoch).",
          "key": "convert_timestamp",
          "label": "Convert Timestamps",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": "createUpdateObject",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Create or Update Object",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Report Delivery Event'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.properties.deliveryId}",
          "description": "The CIO-Delivery-ID from the message that you want to associate the metric with.",
          "key": "delivery_id",
          "label": "Delivery ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "choices": [
            {
              "label": "Delivered",
              "value": "delivered",
            },
            {
              "label": "Opened",
              "value": "opened",
            },
            {
              "label": "Clicked",
              "value": "clicked",
            },
            {
              "label": "Converted",
              "value": "converted",
            },
            {
              "label": "Marked as Spam",
              "value": "spammed",
            },
            {
              "label": "Bounced",
              "value": "bounced",
            },
            {
              "label": "Suppressed",
              "value": "dropped",
            },
            {
              "label": "Deferred",
              "value": "deferred",
            },
          ],
          "default": "{event.properties.metric}",
          "description": "The metric you want to report back to Customer.io. Not all metrics are available for all channels. Please refer to the [documentation](https://customer.io/docs/api/track/#operation/metrics) for more information.",
          "key": "metric",
          "label": "Metric",
          "required": true,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.recipient}",
          "description": "Information about who the message was delivered to. For email, SMS and mobile push this is the email address, phone number and device token, respectively.",
          "key": "recipient",
          "label": "Recipient",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.reason}",
          "description": "For metrics indicating a failure, this field provides information for the failure.",
          "key": "reason",
          "label": "Reason",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.href}",
          "description": "For click metrics, this is the link that was clicked.",
          "key": "href",
          "label": "Href",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.actionName}",
          "description": "For In-App messages, this is the name of the action that was clicked.",
          "key": "action_name",
          "label": "Action Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.actionValue}",
          "description": "For In-App messages, this is the value of the action that was clicked.",
          "key": "action_value",
          "label": "Action Value",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "A timestamp of when the metric event took place. Default is when the event was triggered.",
          "key": "timestamp",
          "label": "Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "reportDeliveryEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Report Delivery Event",
    },
  ],
  "name": "Customerio",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 11 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Emarsys",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/emarsys.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-emarsys",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Your Emarsys API username",
      "key": "api_user",
      "label": "API username",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "Your Emarsys API password.",
      "key": "api_password",
      "label": "API password",
      "required": true,
      "secret": false,
      "type": "password",
    },
  ],
  "mapping_templates": [],
  "name": "Emarsys",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 12 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Engage Messaging SendGrid",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/personas.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-personas-messaging-sendgrid",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "The API key for your Unlayer account",
      "key": "unlayerApiKey",
      "label": "Unlayer API Key",
      "required": false,
      "secret": false,
      "type": "password",
    },
    {
      "default": undefined,
      "description": "The Api Key for your SendGrid account",
      "key": "sendGridApiKey",
      "label": "API Key",
      "required": true,
      "secret": false,
      "type": "password",
    },
    {
      "default": undefined,
      "description": "Profile API Environment",
      "key": "profileApiEnvironment",
      "label": "Profile API Environment",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "Profile API Access Token",
      "key": "profileApiAccessToken",
      "label": "Profile API Access Token",
      "required": true,
      "secret": false,
      "type": "password",
    },
    {
      "default": undefined,
      "description": "Space ID",
      "key": "spaceId",
      "label": "Space ID",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "Source ID",
      "key": "sourceId",
      "label": "Source ID",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "choices": [
        {
          "label": "US West 2",
          "value": "us-west-2",
        },
        {
          "label": "EU West 1",
          "value": "eu-west-1",
        },
      ],
      "default": "us-west-2",
      "description": "The region where the email is originating from",
      "key": "region",
      "label": "Region",
      "required": false,
      "secret": false,
      "type": "choice",
    },
  ],
  "mapping_templates": [],
  "name": "Engage Messaging SendGrid",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 13 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Engage Messaging Twilio",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/personas.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-personas-messaging-twilio",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Twilio Account SID",
      "key": "twilioAccountSID",
      "label": "Twilio Account SID",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "Twilio API Key SID",
      "key": "twilioApiKeySID",
      "label": "Twilio API Key SID",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "Twilio API Key Secret",
      "key": "twilioApiKeySecret",
      "label": "Twilio API Key Secret",
      "required": true,
      "secret": false,
      "type": "password",
    },
    {
      "default": undefined,
      "description": "Profile API Environment",
      "key": "profileApiEnvironment",
      "label": "Profile API Environment",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "Profile API Access Token",
      "key": "profileApiAccessToken",
      "label": "Profile API Access Token",
      "required": true,
      "secret": false,
      "type": "password",
    },
    {
      "default": undefined,
      "description": "Space ID",
      "key": "spaceId",
      "label": "Space ID",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "Source ID",
      "key": "sourceId",
      "label": "Source ID",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "Webhook URL that will receive all events for the sent message",
      "key": "webhookUrl",
      "label": "Webhook URL",
      "required": false,
      "secret": false,
      "type": "string",
    },
    {
      "default": "api.twilio.com",
      "description": "Overrides the default Twilio host name used mainly for testing without having to send real messages.",
      "key": "twilioHostname",
      "label": "Twilio host name",
      "required": false,
      "secret": false,
      "type": "string",
    },
    {
      "default": "rp=all&rc=5",
      "description": "Connection overrides are configuration supported by twilio webhook services. Must be passed as fragments on the callback url",
      "key": "connectionOverrides",
      "label": "Connection Overrides",
      "required": false,
      "secret": false,
      "type": "string",
    },
    {
      "choices": [
        {
          "label": "US West 2",
          "value": "us-west-2",
        },
        {
          "label": "EU West 1",
          "value": "eu-west-1",
        },
      ],
      "default": "us-west-2",
      "description": "The region where the message is originating from",
      "key": "region",
      "label": "Region",
      "required": false,
      "secret": false,
      "type": "choice",
    },
  ],
  "mapping_templates": [],
  "name": "Engage Messaging Twilio",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 14 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Facebook Conversions API",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/facebook.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-facebook-conversions-api",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Your Facebook Pixel ID. Note: You may also use a dataset ID here if you have configured a dataset in your Facebook Events Manager.",
      "key": "pixelId",
      "label": "Pixel ID",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "Use this field to specify that events should be test events rather than actual traffic. You can find your Test Event Code in your Facebook Events Manager under the "Test events" tab. This can be overridden by the Test Event Code defined in the mapping. You'll want to remove your Test Event Code when sending real traffic through this integration.",
      "key": "testEventCode",
      "label": "Test Event Code",
      "required": false,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [],
  "name": "Facebook Conversions API",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 15 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Facebook Custom Audiences",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/facebook.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-facebook-custom-audiences",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Your advertiser account id. Read [more](https://www.facebook.com/business/help/1492627900875762).",
      "key": "retlAdAccountId",
      "label": "Advertiser Account ID",
      "required": true,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [],
  "name": "Facebook Custom Audiences",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 16 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Friendbuy (Cloud Destination)",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/friendbuy.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-friendbuy-cloud",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Contact your Friendbuy account manager to generate your Friendbuy MAPI key and secret.",
      "key": "authKey",
      "label": "Friendbuy MAPI Key",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "See Friendbuy MAPI Key.",
      "key": "authSecret",
      "label": "Friendbuy MAPI Secret",
      "required": true,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [],
  "name": "Friendbuy (Cloud Destination)",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 17 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Fullstory Cloud Mode",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/fullstory.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-fullstory-cloud",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "[FullStory API key](https://help.fullstory.com/hc/en-us/articles/360052021773-Managing-API-Keys)",
      "key": "apiKey",
      "label": "API Key",
      "required": true,
      "secret": false,
      "type": "password",
    },
  ],
  "mapping_templates": [
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{person.id}",
          "description": "The user's id",
          "key": "userId",
          "label": "User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.event}",
          "description": "The name of the event.",
          "key": "name",
          "label": "Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties}",
          "description": "A JSON object containing additional information about the event that will be indexed by FullStory.",
          "key": "properties",
          "label": "Properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The date and time when the event occurred. If not provided, the current FullStory server time will be used.",
          "key": "timestamp",
          "label": "Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Set to true if the custom event should be attached to the user's most recent session. The most recent session must have had activity within the past 30 minutes.",
          "key": "useRecentSession",
          "label": "Use Recent Session",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": undefined,
          "description": "If known, the FullStory session playback URL to which the event should be attached, as returned by the FS.getCurrentSessionURL() client API.",
          "key": "sessionUrl",
          "label": "Session URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "trackEventV2",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Track Event",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event in ('$identify', '$set')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{person.id}",
          "description": "The user's id",
          "key": "uid",
          "label": "User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.distinct_id}",
          "description": "The user's anonymous id",
          "key": "anonymousId",
          "label": "Anonymous ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.name}",
          "description": "The user's display name",
          "key": "displayName",
          "label": "Display Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.email}",
          "description": "The user's email",
          "key": "email",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties}",
          "description": "The Segment traits to be forwarded to FullStory",
          "key": "properties",
          "label": "Traits",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "identifyUserV2",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Identify User",
    },
  ],
  "name": "Fullstory Cloud Mode",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 18 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Gainsight Px Cloud",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/gainsight.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-gainsight-px-cloud",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Gainsight PX API key. You can find this key in the "Administration/Products" screen.",
      "key": "apiKey",
      "label": "API Key",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "choices": [
        {
          "label": "North America",
          "value": "north_america",
        },
        {
          "label": "Europe",
          "value": "europe",
        },
        {
          "label": "US2",
          "value": "us2",
        },
      ],
      "default": undefined,
      "description": "The PX data center where your PX subscription is hosted.",
      "key": "dataCenter",
      "label": "Data center",
      "required": true,
      "secret": false,
      "type": "choice",
    },
  ],
  "mapping_templates": [
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event in ('$identify', '$set')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "",
          "description": "The raw Segment event",
          "key": "segmentEvent",
          "label": "Segment Event",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "sendEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Identify User",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = '$groupidentify'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "",
          "description": "The raw Segment event",
          "key": "segmentEvent",
          "label": "Segment Event",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "sendEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Group User",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "",
          "description": "The raw Segment event",
          "key": "segmentEvent",
          "label": "Segment Event",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "sendEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Track Event",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = '$pageview'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "",
          "description": "The raw Segment event",
          "key": "segmentEvent",
          "label": "Segment Event",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "sendEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Track Page View",
    },
  ],
  "name": "Gainsight Px Cloud",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 19 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Google Analytics 4 Cloud",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/google.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-google-analytics-4",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "The Measurement ID associated with a stream. Found in the Google Analytics UI under: Admin > Data Streams > choose your stream > Measurement ID. **Required for web streams.**",
      "key": "measurementId",
      "label": "Measurement ID",
      "required": false,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "The Firebase App ID associated with the Firebase app. Found in the Firebase console under: Project Settings > General > Your Apps > App ID. **Required for mobile app streams.**",
      "key": "firebaseAppId",
      "label": "Firebase App ID",
      "required": false,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "An API SECRET generated in the Google Analytics UI, navigate to: Admin > Data Streams > choose your stream > Measurement Protocol > Create",
      "key": "apiSecret",
      "label": "API Secret",
      "required": true,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [],
  "name": "Google Analytics 4 Cloud",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 20 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Google Ads Conversions",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/google.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-google-enhanced-conversions",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "You will find this information in the event snippet for your conversion action, for example \`send_to: AW-CONVERSION_ID/AW-CONVERSION_LABEL\`. In the sample snippet, AW-CONVERSION_ID stands for the conversion ID unique to your account. Enter the conversion ID, without the AW- prefix. **Required if you are using a mapping that sends data to the legacy Google Enhanced Conversions API (i.e. Upload Enhanced Conversion (Legacy) Action).**",
      "key": "conversionTrackingId",
      "label": "Conversion ID",
      "required": false,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "ID of your Google Ads Account. This should be 10-digits and in XXX-XXX-XXXX format. **Required if you are using a mapping that sends data to the Google Ads API.**",
      "key": "customerId",
      "label": "Customer ID",
      "required": false,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [],
  "name": "Google Ads Conversions",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 21 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Google Sheets",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/google.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-google-sheets",
  "inputs_schema": [],
  "mapping_templates": [],
  "name": "Google Sheets",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 22 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Heap Cloud",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/heap.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-heap-cloud",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "The app_id corresponding to one of your projects.",
      "key": "appId",
      "label": "App ID",
      "required": true,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify') or event = '$pageview' or event = '$screen'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.uuid}",
          "description": "Unique event ID generated by Segment.",
          "key": "message_id",
          "label": "Message ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "a string that uniquely identifies a user, such as an email, handle, or username. This means no two users in one environment may share the same identity. More on identify: https://developers.heap.io/docs/using-identify",
          "key": "identity",
          "label": "Identity",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.distinct_id}",
          "description": "The generated anonymous ID for the user.",
          "key": "anonymous_id",
          "label": "Anonymous ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.event}",
          "description": "Name of the user action. This only exists on track events. Limited to 1024 characters.",
          "key": "event",
          "label": "Track Event Type",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties}",
          "description": "An object with key-value properties you want associated with the event. Each key and property must either be a number or string with fewer than 1024 characters.",
          "key": "properties",
          "label": "Event Properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Defaults to the current time if not provided.",
          "key": "timestamp",
          "label": "Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.type}",
          "description": "The type of call. Can be track, page, or screen.",
          "key": "type",
          "label": "Type",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.name}",
          "description": "The name of the page or screen being viewed. This only exists for page and screen events.",
          "key": "name",
          "label": "Page or Screen Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.context.traits}",
          "description": "An object with key-value properties you want associated with the user. Each property must either be a number or string with fewer than 1024 characters.",
          "key": "traits",
          "label": "User Properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "trackEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Track Calls",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event in ('$identify', '$set')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{person.id}",
          "description": "REQUIRED: A string that uniquely identifies a user, such as an email, handle, or username. This means no two users in one environment may share the same identity. More on identify: https://developers.heap.io/docs/using-identify",
          "key": "user_id",
          "label": "Identity",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.distinct_id}",
          "description": "The generated anonymous ID for the user.",
          "key": "anonymous_id",
          "label": "Anonymous ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties}",
          "description": "An object with key-value properties you want associated with the user. Each key and property must either be a number or string with fewer than 1024 characters.",
          "key": "traits",
          "label": "User Properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "identifyUser",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Identify Calls",
    },
  ],
  "name": "Heap Cloud",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 23 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to LaunchDarkly",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/launchdarkly.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-launchdarkly",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Find and copy the client-side ID in the LaunchDarkly account settings page.",
      "key": "client_id",
      "label": "LaunchDarkly client-side ID",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": "events.launchdarkly.com",
      "description": "Your LaunchDarkly events host name. If not specified, the default value of events.launchdarkly.com will be used. Most customers will not need to change this setting.",
      "key": "events_host_name",
      "label": "LaunchDarkly events host name",
      "required": false,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "user",
          "description": "The event's context kind. If not specified, the context kind will default to \`user\`. To learn more about context kinds and where you can find a list of context kinds LaunchDarkly has observed, read [Context kinds](https://docs.launchdarkly.com/home/contexts/context-kinds).",
          "key": "context_kind",
          "label": "Context Kind",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "The unique LaunchDarkly context key. In most cases the Segment \`userId\` should be used.",
          "key": "user_key",
          "label": "Context Key",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": {},
          "description": "A mapping of additional context kinds to context keys. To learn more, read [Contexts and segments](https://docs.launchdarkly.com/home/contexts).",
          "key": "additional_context_keys",
          "label": "Additional Context Keys",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.event}",
          "description": "The name of the event to track. This name typically corresponds to a LaunchDarkly metric with the same key.",
          "key": "event_name",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.revenue ?? event.properties.value}",
          "description": "The numeric value associated with the event. This value is used by the LaunchDarkly experimentation feature in numeric custom metrics, and will also be returned as part of the custom event for Data Export.",
          "key": "metric_value",
          "label": "Metric Value",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties}",
          "description": "Optional object containing the properties for the event being tracked. These properties assist with observational analytics for LaunchDarkly Data Export destinations. These properties are not saved to the LaunchDarkly user.",
          "key": "event_properties",
          "label": "Event Properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The time when the event happened. Defaults to the current time.",
          "key": "timestamp",
          "label": "Event timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "trackEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Track Event",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event in ('$identify', '$set') or event = '$alias'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{person.id}",
          "description": "The user's unique key.",
          "key": "user_key",
          "label": "User key",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.previousId ?? event.distinct_id}",
          "description": "The user's unauthenticated identifier.",
          "key": "previous_key",
          "label": "Anonymous ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The time when the event happened. Defaults to the current time.",
          "key": "timestamp",
          "label": "Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "aliasUser",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Alias User",
    },
  ],
  "name": "LaunchDarkly",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 24 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Loops",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/loops.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-loops",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Your Loops API Key",
      "key": "apiKey",
      "label": "API Key",
      "required": true,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [],
  "name": "Loops",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 25 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Linkedin Audiences",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/linkedin.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-linkedin-audiences",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "The id of the LinkedIn Ad Account where batches should be synced. You can find your Ad Account id in your [LinkedIn Campaign Manager](https://www.linkedin.com/campaignmanager/login).",
      "key": "ad_account_id",
      "label": "LinkedIn Ad Account Id",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": true,
      "description": "Whether to send \`email\` to LinkedIn. This setting applies to all mappings you create in this destination instance.",
      "key": "send_email",
      "label": "Send Email",
      "required": true,
      "secret": false,
      "type": "boolean",
    },
    {
      "default": true,
      "description": "Whether to send Google Advertising ID to LinkedIn. This setting applies to all mappings you create in this destination instance.",
      "key": "send_google_advertising_id",
      "label": "Send Google Advertising ID",
      "required": true,
      "secret": false,
      "type": "boolean",
    },
  ],
  "mapping_templates": [],
  "name": "Linkedin Audiences",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 26 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Mixpanel",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/mixpanel.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-mixpanel",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Mixpanel project token.",
      "key": "projectToken",
      "label": "Project Token",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "Mixpanel project secret.",
      "key": "apiSecret",
      "label": "Secret Key",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "choices": [
        {
          "label": "US 🇺🇸",
          "value": "US 🇺🇸",
        },
        {
          "label": "EU 🇪🇺",
          "value": "EU 🇪🇺",
        },
        {
          "label": "IN 🇮🇳",
          "value": "IN 🇮🇳",
        },
      ],
      "default": "US 🇺🇸",
      "description": "Learn about [EU data residency](https://docs.mixpanel.com/docs/privacy/eu-residency) and [India data residency](https://docs.mixpanel.com/docs/privacy/in-residency)",
      "key": "apiRegion",
      "label": "Data Residency",
      "required": false,
      "secret": false,
      "type": "choice",
    },
    {
      "default": undefined,
      "description": "This value, if it's not blank, will be sent as segment_source_name to Mixpanel for every event/page/screen call.",
      "key": "sourceName",
      "label": "Source Name",
      "required": false,
      "secret": false,
      "type": "string",
    },
    {
      "choices": [
        {
          "label": "1",
          "value": "1",
        },
        {
          "label": "0",
          "value": "0",
        },
      ],
      "default": "1",
      "description": "This value, if it's 1 (recommended), Mixpanel will validate the events you are trying to send and return errors per event that failed. Learn more about the Mixpanel [Import Events API](https://developer.mixpanel.com/reference/import-events)",
      "key": "strictMode",
      "label": "Strict Mode",
      "required": false,
      "secret": false,
      "type": "choice",
    },
  ],
  "mapping_templates": [
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify') and event != 'Order Completed'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.event}",
          "description": "The name of the action being performed.",
          "key": "event",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "A distinct ID specified by you.",
          "key": "distinct_id",
          "label": "Distinct ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.distinct_id}",
          "description": "A distinct ID randomly generated prior to calling identify.",
          "key": "anonymous_id",
          "label": "Anonymous ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id}",
          "description": "The distinct ID after calling identify.",
          "key": "user_id",
          "label": "User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "The unique identifier of the group that performed this event.",
          "key": "group_id",
          "label": "Group ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "A random id that is unique to an event. Mixpanel uses $insert_id to deduplicate events.",
          "key": "insert_id",
          "label": "Insert ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The timestamp of the event. Mixpanel expects epoch timestamp in millisecond or second. Please note, Mixpanel only accepts this field as the timestamp. If the field is empty, it will be set to the time Mixpanel servers receive it.",
          "key": "time",
          "label": "Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.event.properties.$app_name}",
          "description": "The name of your application.",
          "key": "app_name",
          "label": "App Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.event.properties.$app_namespace}",
          "description": "The namespace of your application.",
          "key": "app_namespace",
          "label": "App Namespace",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.event.properties.$app_build}",
          "description": "The current build of your application.",
          "key": "app_build",
          "label": "App Build",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.event.properties.$app_version}",
          "description": "The current version of your application.",
          "key": "app_version",
          "label": "App Version",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$os}",
          "description": "The name of the mobile operating system or browser that the user is using.",
          "key": "os_name",
          "label": "OS Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$os_version}",
          "description": "The version of the mobile operating system or browser the user is using.",
          "key": "os_version",
          "label": "OS Version",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_id}",
          "description": "A unique identifier for the device the user is using.",
          "key": "device_id",
          "label": "Device ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_type}",
          "description": "The type of the user's device.",
          "key": "device_type",
          "label": "Device Type",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_name}",
          "description": "The name of the user's device.",
          "key": "device_name",
          "label": "Device Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_manufacturer}",
          "description": "The device manufacturer that the user is using.",
          "key": "device_manufacturer",
          "label": "Device Manufacturer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_model}",
          "description": "The device model that the user is using.",
          "key": "device_model",
          "label": "Device Model",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "Whether bluetooth is enabled.",
          "key": "bluetooth",
          "label": "Bluetooth Enabled",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "The carrier that the user is using.",
          "key": "carrier",
          "label": "Carrier",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "Whether cellular is enabled.",
          "key": "cellular",
          "label": "Cellular Enabled",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "Set to true if user’s device has an active, available Wifi connection, false if not.",
          "key": "wifi",
          "label": "Wifi",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$geoip_country_name}",
          "description": "The current country of the user.",
          "key": "country",
          "label": "Country",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "The current region of the user.",
          "key": "region",
          "label": "Region",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$locale}",
          "description": "The language set by the user.",
          "key": "language",
          "label": "Language",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$lib}",
          "description": "The name of the SDK used to send events.",
          "key": "library_name",
          "label": "Library Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$lib_version}",
          "description": "The version of the SDK used to send events.",
          "key": "library_version",
          "label": "Library Version",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "The IP address of the user. This is only used for geolocation and won't be stored.",
          "key": "ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_idfa}",
          "description": "Identifier for Advertiser. _(iOS)_",
          "key": "idfa",
          "label": "Identifier For Advertiser (IDFA)",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The full URL of the webpage on which the event is triggered.",
          "key": "url",
          "label": "URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "Width, in pixels, of the device screen.",
          "key": "screen_width",
          "label": "Screen width",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "Height, in pixels, of the device screen.",
          "key": "screen_height",
          "label": "Screen height",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "Pixel density of the device screen.",
          "key": "screen_density",
          "label": "Screen density",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$referrer}",
          "description": "Referrer url",
          "key": "referrer",
          "label": "Referrer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "User agent",
          "key": "userAgent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "Advertising ID",
          "key": "advertising_id",
          "label": "Advertising ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "Ad Tracking Enabled (true or false)",
          "key": "ad_tracking_enabled",
          "label": "Ad Tracking Enabled",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$timezone}",
          "description": "The event timezone",
          "key": "timezone",
          "label": "Timezone",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "The App Platform, if applicable",
          "key": "app_platform",
          "label": "App Platform",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.event ?? event.name}",
          "description": "The Event Original Name, if applicable",
          "key": "name",
          "label": "Event Original Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties}",
          "description": "An object of key-value pairs that represent additional data to be sent along with the event.",
          "key": "event_properties",
          "label": "Event Properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.context}",
          "description": "An object of key-value pairs that provides useful context about the event.",
          "key": "context",
          "label": "Event context",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "utm_campaign": "{event.properties.utm_campaign}",
            "utm_content": "{event.properties.utm_content}",
            "utm_medium": "{event.properties.utm_medium}",
            "utm_source": "{event.properties.utm_source}",
            "utm_term": "{event.properties.utm_term}",
          },
          "description": "UTM Tracking Properties",
          "key": "utm_properties",
          "label": "UTM Properties",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": true,
          "description": "Set as true to ensure Segment sends data to Mixpanel in batches.",
          "key": "enable_batching",
          "label": "Batch Data to Mixpanel",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": "1000",
          "description": "Maximum number of events to include in each batch. Actual batch sizes may be lower.",
          "key": "batch_size",
          "label": "Batch Size",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "architecture": "",
            "bitness": "",
            "mobile": "",
            "model": "",
            "platform": "",
            "platformVersion": "",
            "uaFullVersion": "",
            "wow64": "",
          },
          "description": "The user agent data of device sending the event",
          "key": "userAgentData",
          "label": "User Agent Data",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "trackEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Track Calls",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify') and event = 'Order Completed'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": true,
          "description": "When enabled, send "Product Purchased" with each product within the event.",
          "key": "generatePurchaseEventPerProduct",
          "label": "Generate Purchase Event Per Product",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "A distinct ID specified by you.",
          "key": "distinct_id",
          "label": "Distinct ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.distinct_id}",
          "description": "A distinct ID randomly generated prior to calling identify.",
          "key": "anonymous_id",
          "label": "Anonymous ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id}",
          "description": "The distinct ID after calling identify.",
          "key": "user_id",
          "label": "User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "The unique identifier of the group that performed this event.",
          "key": "group_id",
          "label": "Group ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "A random id that is unique to an event. Mixpanel uses $insert_id to deduplicate events.",
          "key": "insert_id",
          "label": "Insert ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The timestamp of the event. Mixpanel expects epoch timestamp in millisecond or second. Please note, Mixpanel only accepts this field as the timestamp. If the field is empty, it will be set to the time Mixpanel servers receive it.",
          "key": "time",
          "label": "Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.event.properties.$app_name}",
          "description": "The name of your application.",
          "key": "app_name",
          "label": "App Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.event.properties.$app_namespace}",
          "description": "The namespace of your application.",
          "key": "app_namespace",
          "label": "App Namespace",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.event.properties.$app_build}",
          "description": "The current build of your application.",
          "key": "app_build",
          "label": "App Build",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.event.properties.$app_version}",
          "description": "The current version of your application.",
          "key": "app_version",
          "label": "App Version",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$os}",
          "description": "The name of the mobile operating system or browser that the user is using.",
          "key": "os_name",
          "label": "OS Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$os_version}",
          "description": "The version of the mobile operating system or browser the user is using.",
          "key": "os_version",
          "label": "OS Version",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_id}",
          "description": "A unique identifier for the device the user is using.",
          "key": "device_id",
          "label": "Device ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_type}",
          "description": "The type of the user's device.",
          "key": "device_type",
          "label": "Device Type",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_name}",
          "description": "The name of the user's device.",
          "key": "device_name",
          "label": "Device Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_manufacturer}",
          "description": "The device manufacturer that the user is using.",
          "key": "device_manufacturer",
          "label": "Device Manufacturer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_model}",
          "description": "The device model that the user is using.",
          "key": "device_model",
          "label": "Device Model",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "Whether bluetooth is enabled.",
          "key": "bluetooth",
          "label": "Bluetooth Enabled",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "The carrier that the user is using.",
          "key": "carrier",
          "label": "Carrier",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "Whether cellular is enabled.",
          "key": "cellular",
          "label": "Cellular Enabled",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "Set to true if user’s device has an active, available Wifi connection, false if not.",
          "key": "wifi",
          "label": "Wifi",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$geoip_country_name}",
          "description": "The current country of the user.",
          "key": "country",
          "label": "Country",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "The current region of the user.",
          "key": "region",
          "label": "Region",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$locale}",
          "description": "The language set by the user.",
          "key": "language",
          "label": "Language",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$lib}",
          "description": "The name of the SDK used to send events.",
          "key": "library_name",
          "label": "Library Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$lib_version}",
          "description": "The version of the SDK used to send events.",
          "key": "library_version",
          "label": "Library Version",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "The IP address of the user. This is only used for geolocation and won't be stored.",
          "key": "ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_idfa}",
          "description": "Identifier for Advertiser. _(iOS)_",
          "key": "idfa",
          "label": "Identifier For Advertiser (IDFA)",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The full URL of the webpage on which the event is triggered.",
          "key": "url",
          "label": "URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "Width, in pixels, of the device screen.",
          "key": "screen_width",
          "label": "Screen width",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "Height, in pixels, of the device screen.",
          "key": "screen_height",
          "label": "Screen height",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "Pixel density of the device screen.",
          "key": "screen_density",
          "label": "Screen density",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$referrer}",
          "description": "Referrer url",
          "key": "referrer",
          "label": "Referrer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "User agent",
          "key": "userAgent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "Advertising ID",
          "key": "advertising_id",
          "label": "Advertising ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "Ad Tracking Enabled (true or false)",
          "key": "ad_tracking_enabled",
          "label": "Ad Tracking Enabled",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$timezone}",
          "description": "The event timezone",
          "key": "timezone",
          "label": "Timezone",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "The App Platform, if applicable",
          "key": "app_platform",
          "label": "App Platform",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.event ?? event.name}",
          "description": "The Event Original Name, if applicable",
          "key": "name",
          "label": "Event Original Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties}",
          "description": "An object of key-value pairs that represent additional data to be sent along with the event.",
          "key": "event_properties",
          "label": "Event Properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.context}",
          "description": "An object of key-value pairs that provides useful context about the event.",
          "key": "context",
          "label": "Event context",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "utm_campaign": "{event.properties.utm_campaign}",
            "utm_content": "{event.properties.utm_content}",
            "utm_medium": "{event.properties.utm_medium}",
            "utm_source": "{event.properties.utm_source}",
            "utm_term": "{event.properties.utm_term}",
          },
          "description": "UTM Tracking Properties",
          "key": "utm_properties",
          "label": "UTM Properties",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": true,
          "description": "Set as true to ensure Segment sends data to Mixpanel in batches.",
          "key": "enable_batching",
          "label": "Batch Data to Mixpanel",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": "1000",
          "description": "Maximum number of events to include in each batch. Actual batch sizes may be lower.",
          "key": "batch_size",
          "label": "Batch Size",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "architecture": "",
            "bitness": "",
            "mobile": "",
            "model": "",
            "platform": "",
            "platformVersion": "",
            "uaFullVersion": "",
            "wow64": "",
          },
          "description": "The user agent data of device sending the event",
          "key": "userAgentData",
          "label": "User Agent Data",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "brand": undefined,
            "category": undefined,
            "coupon": undefined,
            "image_url": undefined,
            "name": undefined,
            "position": undefined,
            "price": undefined,
            "product_id": undefined,
            "quantity": undefined,
            "sku": undefined,
            "url": undefined,
            "variant": undefined,
          },
          "description": "Products in the order.",
          "key": "products",
          "label": "Products",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.event}",
          "description": "The name of the action being performed.",
          "key": "event",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "trackPurchase",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Order Completed Calls",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = '$pageview'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.event}",
          "description": "The name of the action being performed.",
          "key": "event",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "A distinct ID specified by you.",
          "key": "distinct_id",
          "label": "Distinct ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.distinct_id}",
          "description": "A distinct ID randomly generated prior to calling identify.",
          "key": "anonymous_id",
          "label": "Anonymous ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id}",
          "description": "The distinct ID after calling identify.",
          "key": "user_id",
          "label": "User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "The unique identifier of the group that performed this event.",
          "key": "group_id",
          "label": "Group ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "A random id that is unique to an event. Mixpanel uses $insert_id to deduplicate events.",
          "key": "insert_id",
          "label": "Insert ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The timestamp of the event. Mixpanel expects epoch timestamp in millisecond or second. Please note, Mixpanel only accepts this field as the timestamp. If the field is empty, it will be set to the time Mixpanel servers receive it.",
          "key": "time",
          "label": "Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.event.properties.$app_name}",
          "description": "The name of your application.",
          "key": "app_name",
          "label": "App Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.event.properties.$app_namespace}",
          "description": "The namespace of your application.",
          "key": "app_namespace",
          "label": "App Namespace",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.event.properties.$app_build}",
          "description": "The current build of your application.",
          "key": "app_build",
          "label": "App Build",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.event.properties.$app_version}",
          "description": "The current version of your application.",
          "key": "app_version",
          "label": "App Version",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$os}",
          "description": "The name of the mobile operating system or browser that the user is using.",
          "key": "os_name",
          "label": "OS Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$os_version}",
          "description": "The version of the mobile operating system or browser the user is using.",
          "key": "os_version",
          "label": "OS Version",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_id}",
          "description": "A unique identifier for the device the user is using.",
          "key": "device_id",
          "label": "Device ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_type}",
          "description": "The type of the user's device.",
          "key": "device_type",
          "label": "Device Type",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_name}",
          "description": "The name of the user's device.",
          "key": "device_name",
          "label": "Device Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_manufacturer}",
          "description": "The device manufacturer that the user is using.",
          "key": "device_manufacturer",
          "label": "Device Manufacturer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_model}",
          "description": "The device model that the user is using.",
          "key": "device_model",
          "label": "Device Model",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "Whether bluetooth is enabled.",
          "key": "bluetooth",
          "label": "Bluetooth Enabled",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "The carrier that the user is using.",
          "key": "carrier",
          "label": "Carrier",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "Whether cellular is enabled.",
          "key": "cellular",
          "label": "Cellular Enabled",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "Set to true if user’s device has an active, available Wifi connection, false if not.",
          "key": "wifi",
          "label": "Wifi",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$geoip_country_name}",
          "description": "The current country of the user.",
          "key": "country",
          "label": "Country",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "The current region of the user.",
          "key": "region",
          "label": "Region",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$locale}",
          "description": "The language set by the user.",
          "key": "language",
          "label": "Language",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$lib}",
          "description": "The name of the SDK used to send events.",
          "key": "library_name",
          "label": "Library Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$lib_version}",
          "description": "The version of the SDK used to send events.",
          "key": "library_version",
          "label": "Library Version",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "The IP address of the user. This is only used for geolocation and won't be stored.",
          "key": "ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_idfa}",
          "description": "Identifier for Advertiser. _(iOS)_",
          "key": "idfa",
          "label": "Identifier For Advertiser (IDFA)",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The full URL of the webpage on which the event is triggered.",
          "key": "url",
          "label": "URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "Width, in pixels, of the device screen.",
          "key": "screen_width",
          "label": "Screen width",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "Height, in pixels, of the device screen.",
          "key": "screen_height",
          "label": "Screen height",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "Pixel density of the device screen.",
          "key": "screen_density",
          "label": "Screen density",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$referrer}",
          "description": "Referrer url",
          "key": "referrer",
          "label": "Referrer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "User agent",
          "key": "userAgent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "Advertising ID",
          "key": "advertising_id",
          "label": "Advertising ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "Ad Tracking Enabled (true or false)",
          "key": "ad_tracking_enabled",
          "label": "Ad Tracking Enabled",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$timezone}",
          "description": "The event timezone",
          "key": "timezone",
          "label": "Timezone",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "The App Platform, if applicable",
          "key": "app_platform",
          "label": "App Platform",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.event ?? event.name}",
          "description": "The Event Original Name, if applicable",
          "key": "name",
          "label": "Event Original Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties}",
          "description": "An object of key-value pairs that represent additional data to be sent along with the event.",
          "key": "event_properties",
          "label": "Event Properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.context}",
          "description": "An object of key-value pairs that provides useful context about the event.",
          "key": "context",
          "label": "Event context",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "utm_campaign": "{event.properties.utm_campaign}",
            "utm_content": "{event.properties.utm_content}",
            "utm_medium": "{event.properties.utm_medium}",
            "utm_source": "{event.properties.utm_source}",
            "utm_term": "{event.properties.utm_term}",
          },
          "description": "UTM Tracking Properties",
          "key": "utm_properties",
          "label": "UTM Properties",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": true,
          "description": "Set as true to ensure Segment sends data to Mixpanel in batches.",
          "key": "enable_batching",
          "label": "Batch Data to Mixpanel",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": "1000",
          "description": "Maximum number of events to include in each batch. Actual batch sizes may be lower.",
          "key": "batch_size",
          "label": "Batch Size",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "architecture": "",
            "bitness": "",
            "mobile": "",
            "model": "",
            "platform": "",
            "platformVersion": "",
            "uaFullVersion": "",
            "wow64": "",
          },
          "description": "The user agent data of device sending the event",
          "key": "userAgentData",
          "label": "User Agent Data",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "trackEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Page Calls",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = '$screen'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.event}",
          "description": "The name of the action being performed.",
          "key": "event",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "A distinct ID specified by you.",
          "key": "distinct_id",
          "label": "Distinct ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.distinct_id}",
          "description": "A distinct ID randomly generated prior to calling identify.",
          "key": "anonymous_id",
          "label": "Anonymous ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id}",
          "description": "The distinct ID after calling identify.",
          "key": "user_id",
          "label": "User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "The unique identifier of the group that performed this event.",
          "key": "group_id",
          "label": "Group ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "A random id that is unique to an event. Mixpanel uses $insert_id to deduplicate events.",
          "key": "insert_id",
          "label": "Insert ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The timestamp of the event. Mixpanel expects epoch timestamp in millisecond or second. Please note, Mixpanel only accepts this field as the timestamp. If the field is empty, it will be set to the time Mixpanel servers receive it.",
          "key": "time",
          "label": "Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.event.properties.$app_name}",
          "description": "The name of your application.",
          "key": "app_name",
          "label": "App Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.event.properties.$app_namespace}",
          "description": "The namespace of your application.",
          "key": "app_namespace",
          "label": "App Namespace",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.event.properties.$app_build}",
          "description": "The current build of your application.",
          "key": "app_build",
          "label": "App Build",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.event.properties.$app_version}",
          "description": "The current version of your application.",
          "key": "app_version",
          "label": "App Version",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$os}",
          "description": "The name of the mobile operating system or browser that the user is using.",
          "key": "os_name",
          "label": "OS Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$os_version}",
          "description": "The version of the mobile operating system or browser the user is using.",
          "key": "os_version",
          "label": "OS Version",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_id}",
          "description": "A unique identifier for the device the user is using.",
          "key": "device_id",
          "label": "Device ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_type}",
          "description": "The type of the user's device.",
          "key": "device_type",
          "label": "Device Type",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_name}",
          "description": "The name of the user's device.",
          "key": "device_name",
          "label": "Device Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_manufacturer}",
          "description": "The device manufacturer that the user is using.",
          "key": "device_manufacturer",
          "label": "Device Manufacturer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_model}",
          "description": "The device model that the user is using.",
          "key": "device_model",
          "label": "Device Model",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "Whether bluetooth is enabled.",
          "key": "bluetooth",
          "label": "Bluetooth Enabled",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "The carrier that the user is using.",
          "key": "carrier",
          "label": "Carrier",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "Whether cellular is enabled.",
          "key": "cellular",
          "label": "Cellular Enabled",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "Set to true if user’s device has an active, available Wifi connection, false if not.",
          "key": "wifi",
          "label": "Wifi",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$geoip_country_name}",
          "description": "The current country of the user.",
          "key": "country",
          "label": "Country",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "The current region of the user.",
          "key": "region",
          "label": "Region",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$locale}",
          "description": "The language set by the user.",
          "key": "language",
          "label": "Language",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$lib}",
          "description": "The name of the SDK used to send events.",
          "key": "library_name",
          "label": "Library Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$lib_version}",
          "description": "The version of the SDK used to send events.",
          "key": "library_version",
          "label": "Library Version",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "The IP address of the user. This is only used for geolocation and won't be stored.",
          "key": "ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_idfa}",
          "description": "Identifier for Advertiser. _(iOS)_",
          "key": "idfa",
          "label": "Identifier For Advertiser (IDFA)",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The full URL of the webpage on which the event is triggered.",
          "key": "url",
          "label": "URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "Width, in pixels, of the device screen.",
          "key": "screen_width",
          "label": "Screen width",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "Height, in pixels, of the device screen.",
          "key": "screen_height",
          "label": "Screen height",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "Pixel density of the device screen.",
          "key": "screen_density",
          "label": "Screen density",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$referrer}",
          "description": "Referrer url",
          "key": "referrer",
          "label": "Referrer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "User agent",
          "key": "userAgent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "Advertising ID",
          "key": "advertising_id",
          "label": "Advertising ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "Ad Tracking Enabled (true or false)",
          "key": "ad_tracking_enabled",
          "label": "Ad Tracking Enabled",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$timezone}",
          "description": "The event timezone",
          "key": "timezone",
          "label": "Timezone",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "The App Platform, if applicable",
          "key": "app_platform",
          "label": "App Platform",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.event ?? event.name}",
          "description": "The Event Original Name, if applicable",
          "key": "name",
          "label": "Event Original Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties}",
          "description": "An object of key-value pairs that represent additional data to be sent along with the event.",
          "key": "event_properties",
          "label": "Event Properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.context}",
          "description": "An object of key-value pairs that provides useful context about the event.",
          "key": "context",
          "label": "Event context",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "utm_campaign": "{event.properties.utm_campaign}",
            "utm_content": "{event.properties.utm_content}",
            "utm_medium": "{event.properties.utm_medium}",
            "utm_source": "{event.properties.utm_source}",
            "utm_term": "{event.properties.utm_term}",
          },
          "description": "UTM Tracking Properties",
          "key": "utm_properties",
          "label": "UTM Properties",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": true,
          "description": "Set as true to ensure Segment sends data to Mixpanel in batches.",
          "key": "enable_batching",
          "label": "Batch Data to Mixpanel",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": "1000",
          "description": "Maximum number of events to include in each batch. Actual batch sizes may be lower.",
          "key": "batch_size",
          "label": "Batch Size",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "architecture": "",
            "bitness": "",
            "mobile": "",
            "model": "",
            "platform": "",
            "platformVersion": "",
            "uaFullVersion": "",
            "wow64": "",
          },
          "description": "The user agent data of device sending the event",
          "key": "userAgentData",
          "label": "User Agent Data",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "trackEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Screen Calls",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event in ('$identify', '$set')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.properties.$ip}",
          "description": "The IP address of the user. This is only used for geolocation and won't be stored.",
          "key": "ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id}",
          "description": "The unique user identifier set by you",
          "key": "user_id",
          "label": "User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.distinct_id}",
          "description": "The generated anonymous ID for the user",
          "key": "anonymous_id",
          "label": "Anonymous ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties}",
          "description": "Properties to set on the user profile",
          "key": "traits",
          "label": "User Properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "identifyUser",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Identify Calls",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = '$groupidentify'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": undefined,
          "description": "The group key you specified in Mixpanel under Project settings. If this is not specified, it will be defaulted to "$group_id".",
          "key": "group_key",
          "label": "Group Key",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.groupId}",
          "description": "The unique identifier of the group. If there is a trait that matches the group key, it will override this value.",
          "key": "group_id",
          "label": "Group ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties}",
          "description": "The properties to set on the group profile.",
          "key": "traits",
          "label": "Group Properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "groupIdentifyUser",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Group Calls",
    },
  ],
  "name": "Mixpanel",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 27 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Metronome",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/actions.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "metronome-actions",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Your Metronome API Token",
      "key": "apiToken",
      "label": "API Token",
      "required": true,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.uuid}",
          "description": "The Metronome transaction ID uniquely identifies an event to ensure Metronome only processes each event once.",
          "key": "transaction_id",
          "label": "transaction_id",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "The Metronome customer ID or ingest alias this event should be associated with.",
          "key": "customer_id",
          "label": "customer_id",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The timestamp at which this event occurred.",
          "key": "timestamp",
          "label": "timestamp",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.event}",
          "description": "The Metronome \`event_type\`.",
          "key": "event_type",
          "label": "event_type",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties}",
          "description": "The Metronome properties object.",
          "key": "properties",
          "label": "properties",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "sendEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Send track events to Metronome",
    },
  ],
  "name": "Metronome",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 28 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Moengage",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/moengage.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-moengage",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Your Moengage API Id",
      "key": "api_id",
      "label": "Api Id",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "Your Moengage API Key",
      "key": "api_key",
      "label": "Api Key",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "choices": [
        {
          "label": "DataCenter-01",
          "value": "DC_01",
        },
        {
          "label": "DataCenter-02",
          "value": "DC_02",
        },
        {
          "label": "DataCenter-03",
          "value": "DC_03",
        },
        {
          "label": "DataCenter-04",
          "value": "DC_04",
        },
        {
          "label": "DataCenter-05",
          "value": "DC_05",
        },
      ],
      "default": "DC_01",
      "description": "The region to send your data.",
      "key": "region",
      "label": "Endpoint Region",
      "required": true,
      "secret": false,
      "type": "choice",
    },
  ],
  "mapping_templates": [],
  "name": "Moengage",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 29 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Pardot",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/pardot.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-pardot",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "The Pardot Business Unit ID associated with your Pardot Account. To find your Business Unit ID in Salesforce, go to **Setup** and search for \`Pardot\`. Your Pardot Business Unit ID is an 18-character string that starts with \`0Uv\`.  If you cannot access the Pardot Account Setup information, ask your Salesforce Administrator to find the Pardot Business Unit ID for you.",
      "key": "businessUnitID",
      "label": "Pardot Business Unit ID",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "You can find your Account ID (\`piAId\`) under **Marketing > Campaigns** in your [Pardot account](https://pi.pardot.com/campaign). After selecting your desired website campaign, press **View Tracking Code**. ",
      "key": "accountID",
      "label": "Account ID",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": false,
      "description": "Enable to authenticate into a sandbox instance. You can log in to a sandbox by appending the sandbox name to your Salesforce username. For example, if a username for a production org is user@acme.com and the sandbox is named \`test\`, the username to log in to the sandbox is user@acme.com.test. If you are already authenticated, please disconnect and reconnect with your sandbox username.",
      "key": "isSandbox",
      "label": "Sandbox Instance",
      "required": false,
      "secret": false,
      "type": "boolean",
    },
  ],
  "mapping_templates": [],
  "name": "Pardot",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 30 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Pipedrive",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/pipedrive.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-pipedrive",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Pipedrive domain. This is found in Pipedrive in Settings > Company settings > Company domain.",
      "key": "domain",
      "label": "Domain",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "Pipedrive API token. This is found in Pipedrive in Settings > Personal preferences > API > Your personal API token.",
      "key": "apiToken",
      "label": "API Token",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": "id",
      "description": "This is a key by which a Person in Pipedrive will be searched. It can be either Person id or has of a custom field containing external id. Default value is \`person_id\`.",
      "key": "personField",
      "label": "External ID field for a Person in Pipedrive",
      "required": false,
      "secret": false,
      "type": "string",
    },
    {
      "default": "id",
      "description": "This is a key by which an Organization in Pipedrive will be searched. It can be either Organization id or has of a custom field containing external id. Default value is \`org_id\`.",
      "key": "organizationField",
      "label": "External ID field for an Organization in Pipedrive",
      "required": false,
      "secret": false,
      "type": "string",
    },
    {
      "default": "id",
      "description": "This is a key by which a Deal in Pipedrive will be searched. It can be either Deal id or has of a custom field containing external id. Default value is \`deal_id\`.",
      "key": "dealField",
      "label": "External ID field for a Deal in Pipedrive",
      "required": false,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event in ('$identify', '$set')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": undefined,
          "description": "If present, used instead of field in settings to find existing person in Pipedrive.",
          "key": "match_field",
          "label": "Match field",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id}",
          "description": "Value to find existing person by",
          "key": "match_value",
          "label": "Match value",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.name}",
          "description": "Name of the person",
          "key": "name",
          "label": "Person Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.email}",
          "description": "Email addresses for this person.",
          "key": "email",
          "label": "Email Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.phone}",
          "description": "Phone numbers for the person.",
          "key": "phone",
          "label": "Phone Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "choices": [
            {
              "label": "Owner & followers (private)",
              "value": "1",
            },
            {
              "label": "Entire company (shared)",
              "value": "3",
            },
            {
              "label": "Owner's visibility group and sub-groups",
              "value": "5",
            },
            {
              "label": "Entire company",
              "value": "7",
            },
          ],
          "default": undefined,
          "description": "Visibility of the Person. If omitted, visibility will be set to the default visibility setting of this item type for the authorized user. 'Owner's visibility group and sub-groups' and 'Entire company' options only available with Professional or Enterprise plans",
          "key": "visible_to",
          "label": "Visible To",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": undefined,
          "description": "If the person is created, use this timestamp as the creation timestamp. Format: YYY-MM-DD HH:MM:SS",
          "key": "add_time",
          "label": "Created At",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {},
          "description": "New values for custom fields.",
          "key": "custom_fields",
          "label": "Custom fields",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "createUpdatePerson",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Create or Update a Person",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = '$groupidentify'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": undefined,
          "description": "If present, used instead of field in settings to find existing organization in Pipedrive.",
          "key": "match_field",
          "label": "Match field",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.groupId}",
          "description": "Value to find existing organization by",
          "key": "match_value",
          "label": "Match value",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.name}",
          "description": "Name of the organization",
          "key": "name",
          "label": "Organization Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "choices": [
            {
              "label": "Owner & followers (private)",
              "value": "1",
            },
            {
              "label": "Entire company (shared)",
              "value": "3",
            },
            {
              "label": "Owner's visibility group and sub-groups",
              "value": "5",
            },
            {
              "label": "Entire company",
              "value": "7",
            },
          ],
          "default": undefined,
          "description": "Visibility of the Organization. If omitted, visibility will be set to the default visibility setting of this item type for the authorized user. 'Owner's visibility group and sub-groups' and 'Entire company' options only available with Professional or Enterprise plans",
          "key": "visible_to",
          "label": "Visible To",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": undefined,
          "description": "If the organization is created, use this timestamp as the creation timestamp. Format: YYY-MM-DD HH:MM:SS",
          "key": "add_time",
          "label": "Created At",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {},
          "description": "New values for custom fields.",
          "key": "custom_fields",
          "label": "Custom fields",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "createUpdateOrganization",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Create or Update an Organization",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify') and event = 'Activity Upserted'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.properties.activity_id}",
          "description": "ID of Activity in Pipedrive to Update. If left empty, a new one will be created",
          "key": "activity_id",
          "label": "Activity ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "If present, used instead of field in settings to find existing person in Pipedrive.",
          "key": "person_match_field",
          "label": "Person match field",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id}",
          "description": "Value to find existing person by",
          "key": "person_match_value",
          "label": "Person match value",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "If present, used instead of field in settings to find existing organization in Pipedrive.",
          "key": "organization_match_field",
          "label": "Organization match field",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "Value to find existing organization by",
          "key": "organization_match_value",
          "label": "Organization match value",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "If present, used instead of field in settings to find existing deal in Pipedrive.",
          "key": "deal_match_field",
          "label": "Deal match field",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.deal_id}",
          "description": "Value to find existing deal by",
          "key": "deal_match_value",
          "label": "Deal match value",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.subject}",
          "description": "Subject of the Activity. When value for subject is not set, it will be given a default value \`Call\`.",
          "key": "subject",
          "label": "Activity Subject",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.type}",
          "description": "Type of the Activity. This is in correlation with the key_string parameter of ActivityTypes. When value for type is not set, it will be given a default value \`Call\`",
          "key": "type",
          "label": "Type",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.description}",
          "description": "Additional details about the Activity that is synced to your external calendar. Unlike the note added to the Activity, the description is publicly visible to any guests added to the Activity.",
          "key": "description",
          "label": "Description",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.note}",
          "description": "Note of the Activity (Accepts plain text and HTML)",
          "key": "note",
          "label": "Note",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.due_date}",
          "description": "Due date of the Activity. Format: YYYY-MM-DD",
          "key": "due_date",
          "label": "Due Date",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.due_time}",
          "description": "Due time of the Activity. Format: HH:MM",
          "key": "due_time",
          "label": "Due Time",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.duration}",
          "description": "Duration of the Activity. Format: HH:MM",
          "key": "duration",
          "label": "Duration",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.done}",
          "description": "Whether the Activity is done or not.",
          "key": "done",
          "label": "Done",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "createUpdateActivity",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Create or Update an Activity",
    },
  ],
  "name": "Pipedrive",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 31 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Qualtrics",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/qualtrics.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-qualtrics",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Qualtrics API token found in your Qualtrics account under "Account settings" -> "Qualtrics IDs."",
      "key": "apiToken",
      "label": "API Token",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": "iad1",
      "description": "Qualtrics datacenter id that identifies where your qualtrics instance is located. Found under "Account settings" -> "Qualtrics IDs".",
      "key": "datacenter",
      "label": "Datacenter ID",
      "required": true,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [],
  "name": "Qualtrics",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 32 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Ripe Cloud Mode",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/ripe.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-ripe-cloud",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "The Ripe API key found in the Ripe App",
      "key": "apiKey",
      "label": "API Key",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": "https://api.getripe.com/event",
      "description": "The Ripe API endpoint (do not change this unless you know what you're doing)",
      "key": "endpoint",
      "label": "API Endpoint",
      "required": false,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = '$groupidentify'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.distinct_id}",
          "description": "Anonymous id",
          "key": "anonymousId",
          "label": "Anonymous ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id}",
          "description": "The ID associated with the user",
          "key": "userId",
          "label": "User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.groupId}",
          "description": "The group id",
          "key": "groupId",
          "label": "Group ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.context}",
          "description": "Device context",
          "key": "context",
          "label": "Context",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties}",
          "description": "Traits to associate with the group",
          "key": "traits",
          "label": "Traits",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The timestamp of the event",
          "key": "timestamp",
          "label": "Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "The Segment messageId",
          "key": "messageId",
          "label": "MessageId",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "group",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Group user",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event in ('$identify', '$set')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.distinct_id}",
          "description": "An anonymous identifier",
          "key": "anonymousId",
          "label": "Anonymous ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id}",
          "description": "The ID associated with the user",
          "key": "userId",
          "label": "User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.context}",
          "description": "Device context",
          "key": "context",
          "label": "Context",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties}",
          "description": "Traits to associate with the user",
          "key": "traits",
          "label": "Traits",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The timestamp of the event",
          "key": "timestamp",
          "label": "Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "The Segment messageId",
          "key": "messageId",
          "label": "MessageId",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "identify",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Identify user",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = '$pageview'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.distinct_id}",
          "description": "An anonymous identifier",
          "key": "anonymousId",
          "label": "Anonymous ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id}",
          "description": "The ID associated with the user",
          "key": "userId",
          "label": "User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.context}",
          "description": "Device context",
          "key": "context",
          "label": "Context",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties}",
          "description": "Page properties",
          "key": "properties",
          "label": "Properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.name}",
          "description": "The name of the page",
          "key": "name",
          "label": "Page Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url ?? event.properties.url}",
          "description": "The page URL",
          "key": "url",
          "label": "Page URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.context.page.path ?? event.properties.path}",
          "description": "The page path",
          "key": "path",
          "label": "Page Path",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.context.page.search ?? event.properties.search}",
          "description": "URL query string",
          "key": "search",
          "label": "Page Query String",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$referrer ?? event.properties.referrer}",
          "description": "The page referrer",
          "key": "referrer",
          "label": "Page Referrer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.context.page.title ?? event.properties.title}",
          "description": "The page title",
          "key": "title",
          "label": "Page Title",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The timestamp of the event",
          "key": "timestamp",
          "label": "Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "The Segment messageId",
          "key": "messageId",
          "label": "MessageId",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "page",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Page view",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.distinct_id}",
          "description": "An anonymous identifier",
          "key": "anonymousId",
          "label": "Anonymous ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id}",
          "description": "The ID associated with the user",
          "key": "userId",
          "label": "User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.event}",
          "description": "The event name",
          "key": "event",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.context}",
          "description": "Device context",
          "key": "context",
          "label": "Context",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties}",
          "description": "Properties to send with the event",
          "key": "properties",
          "label": "Event properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The timestamp of the event",
          "key": "timestamp",
          "label": "Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "The Segment messageId",
          "key": "messageId",
          "label": "MessageId",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "track",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Track event",
    },
  ],
  "name": "Ripe Cloud Mode",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 33 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Salesforce",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/salesforce.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-salesforce",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "The user specific instance URL returned by Salesforce Oauth. This setting is hidden to the user and set by Oauth Service.",
      "key": "instanceUrl",
      "label": "Instance URL",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": false,
      "description": "Enable to authenticate into a sandbox instance. You can log in to a sandbox by appending the sandbox name to your Salesforce username. For example, if a username for a production org is user@acme.com and the sandbox is named test, the username to log in to the sandbox is user@acme.com.test. If you are already authenticated, please disconnect and reconnect with your sandbox username.",
      "key": "isSandbox",
      "label": "Sandbox Instance",
      "required": false,
      "secret": false,
      "type": "boolean",
    },
    {
      "default": undefined,
      "description": "The username of the Salesforce account you want to connect to. When all three of username, password, and security token are provided, a username-password flow is used to authenticate. This field is hidden to all users except those who have opted in to the username+password flow.",
      "key": "username",
      "label": "Username",
      "required": false,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "The password of the Salesforce account you want to connect to. When all three of username, password, and security token are provided, a username-password flow is used to authenticate. This field is hidden to all users except those who have opted in to the username+password flow.",
      "key": "auth_password",
      "label": "Password",
      "required": false,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "The security token of the Salesforce account you want to connect to. When all three of username, password, and security token are provided, a username-password flow is used to authenticate. This value will be appended to the password field to construct the credential used for authentication. This field is hidden to all users except those who have opted in to the username+password flow.",
      "key": "security_token",
      "label": "Security Token",
      "required": false,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [],
  "name": "Salesforce",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 34 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Salesforce Marketing Cloud",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/salesforce.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-salesforce-marketing-cloud",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "The unique subdomain Salesforce Marketing Cloud assigned to your account. Subdomains are tenant specific and should be a 28-character string starting with the letters "mc". Do not include the .rest.marketingcloudapis.com part of your subdomain URL. See more information on how to find your subdomain [here](https://developer.salesforce.com/docs/marketing/marketing-cloud/guide/your-subdomain-tenant-specific-endpoints.html).",
      "key": "subdomain",
      "label": "Subdomain",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "Your Salesforce Marketing Cloud account identifier (or MID). See more information on how to find your MID [here](https://help.salesforce.com/s/articleView?id=sf.mc_overview_determine_your_marketing_cloud_instance.htm&type=5).",
      "key": "account_id",
      "label": "Account ID",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "Your Salesforce Marketing Cloud client ID. The client ID is issued when you create an API integration in [Installed Packages](https://developer.salesforce.com/docs/marketing/marketing-cloud/guide/install-packages.html).",
      "key": "client_id",
      "label": "Client ID",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "Your Salesforce Marketing Cloud client secret. The client secret is issued when you create an API integration in Installed Packages.",
      "key": "client_secret",
      "label": "Client Secret",
      "required": true,
      "secret": false,
      "type": "password",
    },
  ],
  "mapping_templates": [],
  "name": "Salesforce Marketing Cloud",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 35 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Slack",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/slack.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-slack",
  "inputs_schema": [],
  "mapping_templates": [],
  "name": "Slack",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 36 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Snap Conversions Api",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/snap.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-snap-conversions",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "The Pixel ID for your Snapchat Ad Account. **Required for web and offline events**.",
      "key": "pixel_id",
      "label": "Pixel ID",
      "required": false,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "The Snap App ID associated with your app. This is a unique code generated in Snapchat Ads Manager and included in your MMP dashboard. **Required for app events**.",
      "key": "snap_app_id",
      "label": "Snap App ID",
      "required": false,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "The unique ID assigned for a given application. It should be numeric for iOS, and the human interpretable string for Android. **Required for app events**.",
      "key": "app_id",
      "label": "App ID",
      "required": false,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Payment Info Entered'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": undefined,
          "description": "The conversion event type. For custom events, you must use one of the predefined event types (i.e. CUSTOM_EVENT_1). Please refer to the possible event types in [Snapchat Marketing API docs](https://marketingapi.snapchat.com/docs/conversion.html#conversion-parameters).",
          "key": "event_name",
          "label": "Event Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "If you are reporting events via more than one method (Snap Pixel, App Ads Kit, Conversions API) you should use the same event_id across all methods. Please refer to the [Snapchat Marketing API docs](https://marketingapi.snapchat.com/docs/conversion.html#deduplication) for information on how this field is used for deduplication against Snap Pixel SDK and App Adds Kit events.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The Epoch timestamp for when the conversion happened. The timestamp cannot be more than 7 days in the past.",
          "key": "event_time",
          "label": "Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "choices": [
            {
              "label": "EMAIL",
              "value": "email",
            },
            {
              "label": "WEBSITE",
              "value": "website",
            },
            {
              "label": "APP",
              "value": "app",
            },
            {
              "label": "PHONE CALL",
              "value": "phone_call",
            },
            {
              "label": "CHAT",
              "value": "chat",
            },
            {
              "label": "PHYSICAL STORE",
              "value": "physical_store",
            },
            {
              "label": "SYSTEM GENERATED",
              "value": "system_generated",
            },
            {
              "label": "OTHER",
              "value": "other",
            },
          ],
          "default": undefined,
          "description": "This field allows you to specify where your conversions occurred.",
          "key": "action_source",
          "label": "Action Source",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": {
            "city": "{event.context.traits.address.city ?? event.properties.address.city}",
            "client_ip_address": "{event.properties.$ip}",
            "client_user_agent": "{event.properties.$raw_user_agent}",
            "country": "{event.context.traits.address.country ?? event.properties.address.country}",
            "dateOfBirth": "{event.context.traits.birthday ?? event.properties.birthday}",
            "email": "{event.properties.email ?? person.properties.email}",
            "externalId": "{person.id ?? event.distinct_id}",
            "firstName": "{event.context.traits.first_name ?? event.properties.first_name}",
            "gender": "{event.context.traits.gender ?? event.properties.gender}",
            "idfv": "{event.properties.$device_id}",
            "lastName": "{event.context.traits.last_name ?? event.properties.last_name}",
            "leadID": undefined,
            "madid": "",
            "phone": "{event.properties.phone ?? person.properties.phone}",
            "sc_click_id": "",
            "sc_cookie1": "",
            "state": "{event.context.traits.address.state ?? event.properties.address.state}",
            "subscriptionID": undefined,
            "zip": "{event.context.traits.address.postalCode ?? event.properties.address.postalCode}",
          },
          "description": "These parameters are a set of identifiers Snapchat can use for targeted attribution. You must provide at least one of the following parameters in your request.",
          "key": "user_data",
          "label": "User Data",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "advertiser_tracking_enabled": undefined,
            "application_tracking_enabled": "",
            "carrier": "",
            "cpuCores": undefined,
            "density": "",
            "deviceName": "{event.properties.$device_model}",
            "deviceTimezone": "{event.properties.$timezone}",
            "freeStorage": undefined,
            "height": "{event.context.screen.height}",
            "locale": "{event.properties.$locale}",
            "longVersion": "{event.event.properties.$app_version}",
            "osVersion": "{event.properties.$os_version}",
            "packageName": "{event.event.properties.$app_namespace}",
            "shortVersion": undefined,
            "storageSize": undefined,
            "timezone": undefined,
            "version": undefined,
            "width": "{event.context.screen.width}",
          },
          "description": "These fields support sending app events to Snapchat through the Conversions API.",
          "key": "app_data",
          "label": "App Data",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "checkin_date": undefined,
            "city": undefined,
            "country": undefined,
            "currency": "{event.properties.currency}",
            "departing_arrival_date": undefined,
            "departing_departure_date": undefined,
            "destination_airport": undefined,
            "hotel_score": undefined,
            "neighborhood": undefined,
            "num_adults": undefined,
            "num_children": undefined,
            "num_infants": undefined,
            "num_items": "{event.properties.quantity}",
            "order_id": "{event.properties.order_id}",
            "origin_airport": undefined,
            "postal_code": undefined,
            "preferred_neighborhoods": undefined,
            "preferred_star_ratings": undefined,
            "region": undefined,
            "returning_arrival_date": undefined,
            "returning_departure_date": undefined,
            "search_string": "{event.properties.query}",
            "sign_up_method": undefined,
            "suggested_destinations": undefined,
            "suggested_hotels": undefined,
            "travel_end": undefined,
            "travel_start": undefined,
            "value": "{event.properties.revenue ?? event.properties.total}",
          },
          "description": "The custom data object can be used to pass custom properties.",
          "key": "custom_data",
          "label": "Custom Data",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": undefined,
          "description": "The Data Processing Options to send to Snapchat. If set to true, Segment will send an array to Snapchat indicating events should be processed with Limited Data Use (LDU) restrictions.",
          "key": "data_processing_options",
          "label": "Data Processing Options",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "choices": [
            {
              "label": "Use Snapchat's Geolocation Logic",
              "value": 0,
            },
            {
              "label": "United States of America",
              "value": 1,
            },
          ],
          "default": undefined,
          "description": "A country that you want to associate to the Data Processing Options. Accepted values are 1, for the United States of America, or 0, to request that Snapchat geolocates the event using IP address. This is required if Data Processing Options is set to true. If nothing is provided, Segment will send 0.",
          "key": "data_processing_options_country",
          "label": "Data Processing Country",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "choices": [
            {
              "label": "Use Snapchat's Geolocation Logic",
              "value": 0,
            },
            {
              "label": "California",
              "value": 1000,
            },
          ],
          "default": undefined,
          "description": "A state that you want to associate to the Data Processing Options. Accepted values are 1000, for California, or 0, to request that Snapchat geolocates the event using IP address. This is required if Data Processing Options is set to true. If nothing is provided, Segment will send 0.",
          "key": "data_processing_options_state",
          "label": "Data Processing State",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The URL of the web page where the event took place.",
          "key": "event_source_url",
          "label": "Event Source URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "brand": undefined,
            "item_category": undefined,
            "item_id": undefined,
          },
          "description": "Use this field to send details of mulitple products / items. This field overrides individual 'Item ID', 'Item Category' and 'Brand' fields. Note: total purchase value is tracked using the 'Price' field",
          "key": "products",
          "label": "Products",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": undefined,
          "description": "[Deprecated] Use Products field.",
          "key": "brands",
          "label": "[Deprecated] Brand",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data sc_click_id field.",
          "key": "click_id",
          "label": "[Deprecated] Click ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Event ID field.",
          "key": "client_dedup_id",
          "label": "[Deprecated] Client Deduplication ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Custom Data currency field.",
          "key": "currency",
          "label": "[Deprecated] Currency",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. No longer supported.",
          "key": "description",
          "label": "[Deprecated] Description",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use App Data deviceName field.",
          "key": "device_model",
          "label": "[Deprecated] Device Model",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data email field.",
          "key": "email",
          "label": "[Deprecated] Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "choices": [
            {
              "label": "Offline",
              "value": "OFFLINE",
            },
            {
              "label": "Web",
              "value": "WEB",
            },
            {
              "label": "Mobile App",
              "value": "MOBILE_APP",
            },
          ],
          "default": undefined,
          "description": "Deprecated. Use Action Source field.",
          "key": "event_conversion_type",
          "label": "[Deprecated] Event Conversion Type",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": undefined,
          "description": "Deprecated. No longer supported.",
          "key": "event_tag",
          "label": "[Deprecated] Event Tag",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Event Name field.",
          "key": "event_type",
          "label": "[Deprecated] Event Type",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data idfv field.",
          "key": "idfv",
          "label": "[Deprecated] Identifier for Vendor",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data client_ip_address field.",
          "key": "ip_address",
          "label": "[Deprecated] IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use products field.",
          "key": "item_category",
          "label": "[Deprecated] Item Category",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use products field.",
          "key": "item_ids",
          "label": "[Deprecated] Item ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. No longer supported.",
          "key": "level",
          "label": "[Deprecated] Level",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data madid field.",
          "key": "mobile_ad_id",
          "label": "[Deprecated] Mobile Ad Identifier",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Custom Data num_items field.",
          "key": "number_items",
          "label": "[Deprecated] Number of Items",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use App Data version field.",
          "key": "os_version",
          "label": "[Deprecated] OS Version",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Event Source URL field.",
          "key": "page_url",
          "label": "[Deprecated] Page URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data phone field.",
          "key": "phone_number",
          "label": "[Deprecated] Phone Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Custom Data value field.",
          "key": "price",
          "label": "[Deprecated] Price",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Custom Data search_string field.",
          "key": "search_string",
          "label": "[Deprecated] Search String",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Custom Data sign_up_method field.",
          "key": "sign_up_method",
          "label": "[Deprecated] Sign Up Method",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Event Timestamp field.",
          "key": "timestamp",
          "label": "[Deprecated] Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Custom Data order_id field.",
          "key": "transaction_id",
          "label": "[Deprecated] Transaction ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data client_user_agent field.",
          "key": "user_agent",
          "label": "[Deprecated] User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data sc_cookie1 field.",
          "key": "uuid_c1",
          "label": "[Deprecated] uuid_c1 Cookie",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "reportConversionEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Add Billing",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Product Added'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": undefined,
          "description": "The conversion event type. For custom events, you must use one of the predefined event types (i.e. CUSTOM_EVENT_1). Please refer to the possible event types in [Snapchat Marketing API docs](https://marketingapi.snapchat.com/docs/conversion.html#conversion-parameters).",
          "key": "event_name",
          "label": "Event Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "If you are reporting events via more than one method (Snap Pixel, App Ads Kit, Conversions API) you should use the same event_id across all methods. Please refer to the [Snapchat Marketing API docs](https://marketingapi.snapchat.com/docs/conversion.html#deduplication) for information on how this field is used for deduplication against Snap Pixel SDK and App Adds Kit events.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The Epoch timestamp for when the conversion happened. The timestamp cannot be more than 7 days in the past.",
          "key": "event_time",
          "label": "Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "choices": [
            {
              "label": "EMAIL",
              "value": "email",
            },
            {
              "label": "WEBSITE",
              "value": "website",
            },
            {
              "label": "APP",
              "value": "app",
            },
            {
              "label": "PHONE CALL",
              "value": "phone_call",
            },
            {
              "label": "CHAT",
              "value": "chat",
            },
            {
              "label": "PHYSICAL STORE",
              "value": "physical_store",
            },
            {
              "label": "SYSTEM GENERATED",
              "value": "system_generated",
            },
            {
              "label": "OTHER",
              "value": "other",
            },
          ],
          "default": undefined,
          "description": "This field allows you to specify where your conversions occurred.",
          "key": "action_source",
          "label": "Action Source",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": {
            "city": "{event.context.traits.address.city ?? event.properties.address.city}",
            "client_ip_address": "{event.properties.$ip}",
            "client_user_agent": "{event.properties.$raw_user_agent}",
            "country": "{event.context.traits.address.country ?? event.properties.address.country}",
            "dateOfBirth": "{event.context.traits.birthday ?? event.properties.birthday}",
            "email": "{event.properties.email ?? person.properties.email}",
            "externalId": "{person.id ?? event.distinct_id}",
            "firstName": "{event.context.traits.first_name ?? event.properties.first_name}",
            "gender": "{event.context.traits.gender ?? event.properties.gender}",
            "idfv": "{event.properties.$device_id}",
            "lastName": "{event.context.traits.last_name ?? event.properties.last_name}",
            "leadID": undefined,
            "madid": "",
            "phone": "{event.properties.phone ?? person.properties.phone}",
            "sc_click_id": "",
            "sc_cookie1": "",
            "state": "{event.context.traits.address.state ?? event.properties.address.state}",
            "subscriptionID": undefined,
            "zip": "{event.context.traits.address.postalCode ?? event.properties.address.postalCode}",
          },
          "description": "These parameters are a set of identifiers Snapchat can use for targeted attribution. You must provide at least one of the following parameters in your request.",
          "key": "user_data",
          "label": "User Data",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "advertiser_tracking_enabled": undefined,
            "application_tracking_enabled": "",
            "carrier": "",
            "cpuCores": undefined,
            "density": "",
            "deviceName": "{event.properties.$device_model}",
            "deviceTimezone": "{event.properties.$timezone}",
            "freeStorage": undefined,
            "height": "{event.context.screen.height}",
            "locale": "{event.properties.$locale}",
            "longVersion": "{event.event.properties.$app_version}",
            "osVersion": "{event.properties.$os_version}",
            "packageName": "{event.event.properties.$app_namespace}",
            "shortVersion": undefined,
            "storageSize": undefined,
            "timezone": undefined,
            "version": undefined,
            "width": "{event.context.screen.width}",
          },
          "description": "These fields support sending app events to Snapchat through the Conversions API.",
          "key": "app_data",
          "label": "App Data",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "checkin_date": undefined,
            "city": undefined,
            "country": undefined,
            "currency": "{event.properties.currency}",
            "departing_arrival_date": undefined,
            "departing_departure_date": undefined,
            "destination_airport": undefined,
            "hotel_score": undefined,
            "neighborhood": undefined,
            "num_adults": undefined,
            "num_children": undefined,
            "num_infants": undefined,
            "num_items": "{event.properties.quantity}",
            "order_id": "{event.properties.order_id}",
            "origin_airport": undefined,
            "postal_code": undefined,
            "preferred_neighborhoods": undefined,
            "preferred_star_ratings": undefined,
            "region": undefined,
            "returning_arrival_date": undefined,
            "returning_departure_date": undefined,
            "search_string": "{event.properties.query}",
            "sign_up_method": undefined,
            "suggested_destinations": undefined,
            "suggested_hotels": undefined,
            "travel_end": undefined,
            "travel_start": undefined,
            "value": "{event.properties.revenue ?? event.properties.total}",
          },
          "description": "The custom data object can be used to pass custom properties.",
          "key": "custom_data",
          "label": "Custom Data",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": undefined,
          "description": "The Data Processing Options to send to Snapchat. If set to true, Segment will send an array to Snapchat indicating events should be processed with Limited Data Use (LDU) restrictions.",
          "key": "data_processing_options",
          "label": "Data Processing Options",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "choices": [
            {
              "label": "Use Snapchat's Geolocation Logic",
              "value": 0,
            },
            {
              "label": "United States of America",
              "value": 1,
            },
          ],
          "default": undefined,
          "description": "A country that you want to associate to the Data Processing Options. Accepted values are 1, for the United States of America, or 0, to request that Snapchat geolocates the event using IP address. This is required if Data Processing Options is set to true. If nothing is provided, Segment will send 0.",
          "key": "data_processing_options_country",
          "label": "Data Processing Country",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "choices": [
            {
              "label": "Use Snapchat's Geolocation Logic",
              "value": 0,
            },
            {
              "label": "California",
              "value": 1000,
            },
          ],
          "default": undefined,
          "description": "A state that you want to associate to the Data Processing Options. Accepted values are 1000, for California, or 0, to request that Snapchat geolocates the event using IP address. This is required if Data Processing Options is set to true. If nothing is provided, Segment will send 0.",
          "key": "data_processing_options_state",
          "label": "Data Processing State",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The URL of the web page where the event took place.",
          "key": "event_source_url",
          "label": "Event Source URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "brand": undefined,
            "item_category": undefined,
            "item_id": undefined,
          },
          "description": "Use this field to send details of mulitple products / items. This field overrides individual 'Item ID', 'Item Category' and 'Brand' fields. Note: total purchase value is tracked using the 'Price' field",
          "key": "products",
          "label": "Products",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": undefined,
          "description": "[Deprecated] Use Products field.",
          "key": "brands",
          "label": "[Deprecated] Brand",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data sc_click_id field.",
          "key": "click_id",
          "label": "[Deprecated] Click ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Event ID field.",
          "key": "client_dedup_id",
          "label": "[Deprecated] Client Deduplication ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Custom Data currency field.",
          "key": "currency",
          "label": "[Deprecated] Currency",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. No longer supported.",
          "key": "description",
          "label": "[Deprecated] Description",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use App Data deviceName field.",
          "key": "device_model",
          "label": "[Deprecated] Device Model",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data email field.",
          "key": "email",
          "label": "[Deprecated] Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "choices": [
            {
              "label": "Offline",
              "value": "OFFLINE",
            },
            {
              "label": "Web",
              "value": "WEB",
            },
            {
              "label": "Mobile App",
              "value": "MOBILE_APP",
            },
          ],
          "default": undefined,
          "description": "Deprecated. Use Action Source field.",
          "key": "event_conversion_type",
          "label": "[Deprecated] Event Conversion Type",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": undefined,
          "description": "Deprecated. No longer supported.",
          "key": "event_tag",
          "label": "[Deprecated] Event Tag",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Event Name field.",
          "key": "event_type",
          "label": "[Deprecated] Event Type",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data idfv field.",
          "key": "idfv",
          "label": "[Deprecated] Identifier for Vendor",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data client_ip_address field.",
          "key": "ip_address",
          "label": "[Deprecated] IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use products field.",
          "key": "item_category",
          "label": "[Deprecated] Item Category",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use products field.",
          "key": "item_ids",
          "label": "[Deprecated] Item ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. No longer supported.",
          "key": "level",
          "label": "[Deprecated] Level",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data madid field.",
          "key": "mobile_ad_id",
          "label": "[Deprecated] Mobile Ad Identifier",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Custom Data num_items field.",
          "key": "number_items",
          "label": "[Deprecated] Number of Items",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use App Data version field.",
          "key": "os_version",
          "label": "[Deprecated] OS Version",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Event Source URL field.",
          "key": "page_url",
          "label": "[Deprecated] Page URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data phone field.",
          "key": "phone_number",
          "label": "[Deprecated] Phone Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Custom Data value field.",
          "key": "price",
          "label": "[Deprecated] Price",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Custom Data search_string field.",
          "key": "search_string",
          "label": "[Deprecated] Search String",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Custom Data sign_up_method field.",
          "key": "sign_up_method",
          "label": "[Deprecated] Sign Up Method",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Event Timestamp field.",
          "key": "timestamp",
          "label": "[Deprecated] Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Custom Data order_id field.",
          "key": "transaction_id",
          "label": "[Deprecated] Transaction ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data client_user_agent field.",
          "key": "user_agent",
          "label": "[Deprecated] User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data sc_cookie1 field.",
          "key": "uuid_c1",
          "label": "[Deprecated] uuid_c1 Cookie",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "reportConversionEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Add to Cart",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Product Added to Wishlist'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": undefined,
          "description": "The conversion event type. For custom events, you must use one of the predefined event types (i.e. CUSTOM_EVENT_1). Please refer to the possible event types in [Snapchat Marketing API docs](https://marketingapi.snapchat.com/docs/conversion.html#conversion-parameters).",
          "key": "event_name",
          "label": "Event Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "If you are reporting events via more than one method (Snap Pixel, App Ads Kit, Conversions API) you should use the same event_id across all methods. Please refer to the [Snapchat Marketing API docs](https://marketingapi.snapchat.com/docs/conversion.html#deduplication) for information on how this field is used for deduplication against Snap Pixel SDK and App Adds Kit events.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The Epoch timestamp for when the conversion happened. The timestamp cannot be more than 7 days in the past.",
          "key": "event_time",
          "label": "Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "choices": [
            {
              "label": "EMAIL",
              "value": "email",
            },
            {
              "label": "WEBSITE",
              "value": "website",
            },
            {
              "label": "APP",
              "value": "app",
            },
            {
              "label": "PHONE CALL",
              "value": "phone_call",
            },
            {
              "label": "CHAT",
              "value": "chat",
            },
            {
              "label": "PHYSICAL STORE",
              "value": "physical_store",
            },
            {
              "label": "SYSTEM GENERATED",
              "value": "system_generated",
            },
            {
              "label": "OTHER",
              "value": "other",
            },
          ],
          "default": undefined,
          "description": "This field allows you to specify where your conversions occurred.",
          "key": "action_source",
          "label": "Action Source",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": {
            "city": "{event.context.traits.address.city ?? event.properties.address.city}",
            "client_ip_address": "{event.properties.$ip}",
            "client_user_agent": "{event.properties.$raw_user_agent}",
            "country": "{event.context.traits.address.country ?? event.properties.address.country}",
            "dateOfBirth": "{event.context.traits.birthday ?? event.properties.birthday}",
            "email": "{event.properties.email ?? person.properties.email}",
            "externalId": "{person.id ?? event.distinct_id}",
            "firstName": "{event.context.traits.first_name ?? event.properties.first_name}",
            "gender": "{event.context.traits.gender ?? event.properties.gender}",
            "idfv": "{event.properties.$device_id}",
            "lastName": "{event.context.traits.last_name ?? event.properties.last_name}",
            "leadID": undefined,
            "madid": "",
            "phone": "{event.properties.phone ?? person.properties.phone}",
            "sc_click_id": "",
            "sc_cookie1": "",
            "state": "{event.context.traits.address.state ?? event.properties.address.state}",
            "subscriptionID": undefined,
            "zip": "{event.context.traits.address.postalCode ?? event.properties.address.postalCode}",
          },
          "description": "These parameters are a set of identifiers Snapchat can use for targeted attribution. You must provide at least one of the following parameters in your request.",
          "key": "user_data",
          "label": "User Data",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "advertiser_tracking_enabled": undefined,
            "application_tracking_enabled": "",
            "carrier": "",
            "cpuCores": undefined,
            "density": "",
            "deviceName": "{event.properties.$device_model}",
            "deviceTimezone": "{event.properties.$timezone}",
            "freeStorage": undefined,
            "height": "{event.context.screen.height}",
            "locale": "{event.properties.$locale}",
            "longVersion": "{event.event.properties.$app_version}",
            "osVersion": "{event.properties.$os_version}",
            "packageName": "{event.event.properties.$app_namespace}",
            "shortVersion": undefined,
            "storageSize": undefined,
            "timezone": undefined,
            "version": undefined,
            "width": "{event.context.screen.width}",
          },
          "description": "These fields support sending app events to Snapchat through the Conversions API.",
          "key": "app_data",
          "label": "App Data",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "checkin_date": undefined,
            "city": undefined,
            "country": undefined,
            "currency": "{event.properties.currency}",
            "departing_arrival_date": undefined,
            "departing_departure_date": undefined,
            "destination_airport": undefined,
            "hotel_score": undefined,
            "neighborhood": undefined,
            "num_adults": undefined,
            "num_children": undefined,
            "num_infants": undefined,
            "num_items": "{event.properties.quantity}",
            "order_id": "{event.properties.order_id}",
            "origin_airport": undefined,
            "postal_code": undefined,
            "preferred_neighborhoods": undefined,
            "preferred_star_ratings": undefined,
            "region": undefined,
            "returning_arrival_date": undefined,
            "returning_departure_date": undefined,
            "search_string": "{event.properties.query}",
            "sign_up_method": undefined,
            "suggested_destinations": undefined,
            "suggested_hotels": undefined,
            "travel_end": undefined,
            "travel_start": undefined,
            "value": "{event.properties.revenue ?? event.properties.total}",
          },
          "description": "The custom data object can be used to pass custom properties.",
          "key": "custom_data",
          "label": "Custom Data",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": undefined,
          "description": "The Data Processing Options to send to Snapchat. If set to true, Segment will send an array to Snapchat indicating events should be processed with Limited Data Use (LDU) restrictions.",
          "key": "data_processing_options",
          "label": "Data Processing Options",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "choices": [
            {
              "label": "Use Snapchat's Geolocation Logic",
              "value": 0,
            },
            {
              "label": "United States of America",
              "value": 1,
            },
          ],
          "default": undefined,
          "description": "A country that you want to associate to the Data Processing Options. Accepted values are 1, for the United States of America, or 0, to request that Snapchat geolocates the event using IP address. This is required if Data Processing Options is set to true. If nothing is provided, Segment will send 0.",
          "key": "data_processing_options_country",
          "label": "Data Processing Country",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "choices": [
            {
              "label": "Use Snapchat's Geolocation Logic",
              "value": 0,
            },
            {
              "label": "California",
              "value": 1000,
            },
          ],
          "default": undefined,
          "description": "A state that you want to associate to the Data Processing Options. Accepted values are 1000, for California, or 0, to request that Snapchat geolocates the event using IP address. This is required if Data Processing Options is set to true. If nothing is provided, Segment will send 0.",
          "key": "data_processing_options_state",
          "label": "Data Processing State",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The URL of the web page where the event took place.",
          "key": "event_source_url",
          "label": "Event Source URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "brand": undefined,
            "item_category": undefined,
            "item_id": undefined,
          },
          "description": "Use this field to send details of mulitple products / items. This field overrides individual 'Item ID', 'Item Category' and 'Brand' fields. Note: total purchase value is tracked using the 'Price' field",
          "key": "products",
          "label": "Products",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": undefined,
          "description": "[Deprecated] Use Products field.",
          "key": "brands",
          "label": "[Deprecated] Brand",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data sc_click_id field.",
          "key": "click_id",
          "label": "[Deprecated] Click ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Event ID field.",
          "key": "client_dedup_id",
          "label": "[Deprecated] Client Deduplication ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Custom Data currency field.",
          "key": "currency",
          "label": "[Deprecated] Currency",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. No longer supported.",
          "key": "description",
          "label": "[Deprecated] Description",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use App Data deviceName field.",
          "key": "device_model",
          "label": "[Deprecated] Device Model",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data email field.",
          "key": "email",
          "label": "[Deprecated] Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "choices": [
            {
              "label": "Offline",
              "value": "OFFLINE",
            },
            {
              "label": "Web",
              "value": "WEB",
            },
            {
              "label": "Mobile App",
              "value": "MOBILE_APP",
            },
          ],
          "default": undefined,
          "description": "Deprecated. Use Action Source field.",
          "key": "event_conversion_type",
          "label": "[Deprecated] Event Conversion Type",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": undefined,
          "description": "Deprecated. No longer supported.",
          "key": "event_tag",
          "label": "[Deprecated] Event Tag",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Event Name field.",
          "key": "event_type",
          "label": "[Deprecated] Event Type",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data idfv field.",
          "key": "idfv",
          "label": "[Deprecated] Identifier for Vendor",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data client_ip_address field.",
          "key": "ip_address",
          "label": "[Deprecated] IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use products field.",
          "key": "item_category",
          "label": "[Deprecated] Item Category",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use products field.",
          "key": "item_ids",
          "label": "[Deprecated] Item ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. No longer supported.",
          "key": "level",
          "label": "[Deprecated] Level",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data madid field.",
          "key": "mobile_ad_id",
          "label": "[Deprecated] Mobile Ad Identifier",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Custom Data num_items field.",
          "key": "number_items",
          "label": "[Deprecated] Number of Items",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use App Data version field.",
          "key": "os_version",
          "label": "[Deprecated] OS Version",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Event Source URL field.",
          "key": "page_url",
          "label": "[Deprecated] Page URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data phone field.",
          "key": "phone_number",
          "label": "[Deprecated] Phone Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Custom Data value field.",
          "key": "price",
          "label": "[Deprecated] Price",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Custom Data search_string field.",
          "key": "search_string",
          "label": "[Deprecated] Search String",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Custom Data sign_up_method field.",
          "key": "sign_up_method",
          "label": "[Deprecated] Sign Up Method",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Event Timestamp field.",
          "key": "timestamp",
          "label": "[Deprecated] Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Custom Data order_id field.",
          "key": "transaction_id",
          "label": "[Deprecated] Transaction ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data client_user_agent field.",
          "key": "user_agent",
          "label": "[Deprecated] User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data sc_cookie1 field.",
          "key": "uuid_c1",
          "label": "[Deprecated] uuid_c1 Cookie",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "reportConversionEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Add to Wishlist",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Application Installed'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": undefined,
          "description": "The conversion event type. For custom events, you must use one of the predefined event types (i.e. CUSTOM_EVENT_1). Please refer to the possible event types in [Snapchat Marketing API docs](https://marketingapi.snapchat.com/docs/conversion.html#conversion-parameters).",
          "key": "event_name",
          "label": "Event Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "If you are reporting events via more than one method (Snap Pixel, App Ads Kit, Conversions API) you should use the same event_id across all methods. Please refer to the [Snapchat Marketing API docs](https://marketingapi.snapchat.com/docs/conversion.html#deduplication) for information on how this field is used for deduplication against Snap Pixel SDK and App Adds Kit events.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The Epoch timestamp for when the conversion happened. The timestamp cannot be more than 7 days in the past.",
          "key": "event_time",
          "label": "Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "choices": [
            {
              "label": "EMAIL",
              "value": "email",
            },
            {
              "label": "WEBSITE",
              "value": "website",
            },
            {
              "label": "APP",
              "value": "app",
            },
            {
              "label": "PHONE CALL",
              "value": "phone_call",
            },
            {
              "label": "CHAT",
              "value": "chat",
            },
            {
              "label": "PHYSICAL STORE",
              "value": "physical_store",
            },
            {
              "label": "SYSTEM GENERATED",
              "value": "system_generated",
            },
            {
              "label": "OTHER",
              "value": "other",
            },
          ],
          "default": undefined,
          "description": "This field allows you to specify where your conversions occurred.",
          "key": "action_source",
          "label": "Action Source",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": {
            "city": "{event.context.traits.address.city ?? event.properties.address.city}",
            "client_ip_address": "{event.properties.$ip}",
            "client_user_agent": "{event.properties.$raw_user_agent}",
            "country": "{event.context.traits.address.country ?? event.properties.address.country}",
            "dateOfBirth": "{event.context.traits.birthday ?? event.properties.birthday}",
            "email": "{event.properties.email ?? person.properties.email}",
            "externalId": "{person.id ?? event.distinct_id}",
            "firstName": "{event.context.traits.first_name ?? event.properties.first_name}",
            "gender": "{event.context.traits.gender ?? event.properties.gender}",
            "idfv": "{event.properties.$device_id}",
            "lastName": "{event.context.traits.last_name ?? event.properties.last_name}",
            "leadID": undefined,
            "madid": "",
            "phone": "{event.properties.phone ?? person.properties.phone}",
            "sc_click_id": "",
            "sc_cookie1": "",
            "state": "{event.context.traits.address.state ?? event.properties.address.state}",
            "subscriptionID": undefined,
            "zip": "{event.context.traits.address.postalCode ?? event.properties.address.postalCode}",
          },
          "description": "These parameters are a set of identifiers Snapchat can use for targeted attribution. You must provide at least one of the following parameters in your request.",
          "key": "user_data",
          "label": "User Data",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "advertiser_tracking_enabled": undefined,
            "application_tracking_enabled": "",
            "carrier": "",
            "cpuCores": undefined,
            "density": "",
            "deviceName": "{event.properties.$device_model}",
            "deviceTimezone": "{event.properties.$timezone}",
            "freeStorage": undefined,
            "height": "{event.context.screen.height}",
            "locale": "{event.properties.$locale}",
            "longVersion": "{event.event.properties.$app_version}",
            "osVersion": "{event.properties.$os_version}",
            "packageName": "{event.event.properties.$app_namespace}",
            "shortVersion": undefined,
            "storageSize": undefined,
            "timezone": undefined,
            "version": undefined,
            "width": "{event.context.screen.width}",
          },
          "description": "These fields support sending app events to Snapchat through the Conversions API.",
          "key": "app_data",
          "label": "App Data",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "checkin_date": undefined,
            "city": undefined,
            "country": undefined,
            "currency": "{event.properties.currency}",
            "departing_arrival_date": undefined,
            "departing_departure_date": undefined,
            "destination_airport": undefined,
            "hotel_score": undefined,
            "neighborhood": undefined,
            "num_adults": undefined,
            "num_children": undefined,
            "num_infants": undefined,
            "num_items": "{event.properties.quantity}",
            "order_id": "{event.properties.order_id}",
            "origin_airport": undefined,
            "postal_code": undefined,
            "preferred_neighborhoods": undefined,
            "preferred_star_ratings": undefined,
            "region": undefined,
            "returning_arrival_date": undefined,
            "returning_departure_date": undefined,
            "search_string": "{event.properties.query}",
            "sign_up_method": undefined,
            "suggested_destinations": undefined,
            "suggested_hotels": undefined,
            "travel_end": undefined,
            "travel_start": undefined,
            "value": "{event.properties.revenue ?? event.properties.total}",
          },
          "description": "The custom data object can be used to pass custom properties.",
          "key": "custom_data",
          "label": "Custom Data",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": undefined,
          "description": "The Data Processing Options to send to Snapchat. If set to true, Segment will send an array to Snapchat indicating events should be processed with Limited Data Use (LDU) restrictions.",
          "key": "data_processing_options",
          "label": "Data Processing Options",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "choices": [
            {
              "label": "Use Snapchat's Geolocation Logic",
              "value": 0,
            },
            {
              "label": "United States of America",
              "value": 1,
            },
          ],
          "default": undefined,
          "description": "A country that you want to associate to the Data Processing Options. Accepted values are 1, for the United States of America, or 0, to request that Snapchat geolocates the event using IP address. This is required if Data Processing Options is set to true. If nothing is provided, Segment will send 0.",
          "key": "data_processing_options_country",
          "label": "Data Processing Country",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "choices": [
            {
              "label": "Use Snapchat's Geolocation Logic",
              "value": 0,
            },
            {
              "label": "California",
              "value": 1000,
            },
          ],
          "default": undefined,
          "description": "A state that you want to associate to the Data Processing Options. Accepted values are 1000, for California, or 0, to request that Snapchat geolocates the event using IP address. This is required if Data Processing Options is set to true. If nothing is provided, Segment will send 0.",
          "key": "data_processing_options_state",
          "label": "Data Processing State",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The URL of the web page where the event took place.",
          "key": "event_source_url",
          "label": "Event Source URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "brand": undefined,
            "item_category": undefined,
            "item_id": undefined,
          },
          "description": "Use this field to send details of mulitple products / items. This field overrides individual 'Item ID', 'Item Category' and 'Brand' fields. Note: total purchase value is tracked using the 'Price' field",
          "key": "products",
          "label": "Products",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": undefined,
          "description": "[Deprecated] Use Products field.",
          "key": "brands",
          "label": "[Deprecated] Brand",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data sc_click_id field.",
          "key": "click_id",
          "label": "[Deprecated] Click ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Event ID field.",
          "key": "client_dedup_id",
          "label": "[Deprecated] Client Deduplication ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Custom Data currency field.",
          "key": "currency",
          "label": "[Deprecated] Currency",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. No longer supported.",
          "key": "description",
          "label": "[Deprecated] Description",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use App Data deviceName field.",
          "key": "device_model",
          "label": "[Deprecated] Device Model",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data email field.",
          "key": "email",
          "label": "[Deprecated] Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "choices": [
            {
              "label": "Offline",
              "value": "OFFLINE",
            },
            {
              "label": "Web",
              "value": "WEB",
            },
            {
              "label": "Mobile App",
              "value": "MOBILE_APP",
            },
          ],
          "default": undefined,
          "description": "Deprecated. Use Action Source field.",
          "key": "event_conversion_type",
          "label": "[Deprecated] Event Conversion Type",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": undefined,
          "description": "Deprecated. No longer supported.",
          "key": "event_tag",
          "label": "[Deprecated] Event Tag",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Event Name field.",
          "key": "event_type",
          "label": "[Deprecated] Event Type",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data idfv field.",
          "key": "idfv",
          "label": "[Deprecated] Identifier for Vendor",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data client_ip_address field.",
          "key": "ip_address",
          "label": "[Deprecated] IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use products field.",
          "key": "item_category",
          "label": "[Deprecated] Item Category",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use products field.",
          "key": "item_ids",
          "label": "[Deprecated] Item ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. No longer supported.",
          "key": "level",
          "label": "[Deprecated] Level",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data madid field.",
          "key": "mobile_ad_id",
          "label": "[Deprecated] Mobile Ad Identifier",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Custom Data num_items field.",
          "key": "number_items",
          "label": "[Deprecated] Number of Items",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use App Data version field.",
          "key": "os_version",
          "label": "[Deprecated] OS Version",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Event Source URL field.",
          "key": "page_url",
          "label": "[Deprecated] Page URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data phone field.",
          "key": "phone_number",
          "label": "[Deprecated] Phone Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Custom Data value field.",
          "key": "price",
          "label": "[Deprecated] Price",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Custom Data search_string field.",
          "key": "search_string",
          "label": "[Deprecated] Search String",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Custom Data sign_up_method field.",
          "key": "sign_up_method",
          "label": "[Deprecated] Sign Up Method",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Event Timestamp field.",
          "key": "timestamp",
          "label": "[Deprecated] Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Custom Data order_id field.",
          "key": "transaction_id",
          "label": "[Deprecated] Transaction ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data client_user_agent field.",
          "key": "user_agent",
          "label": "[Deprecated] User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data sc_cookie1 field.",
          "key": "uuid_c1",
          "label": "[Deprecated] uuid_c1 Cookie",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "reportConversionEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "App Install",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Product List Viewed'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": undefined,
          "description": "The conversion event type. For custom events, you must use one of the predefined event types (i.e. CUSTOM_EVENT_1). Please refer to the possible event types in [Snapchat Marketing API docs](https://marketingapi.snapchat.com/docs/conversion.html#conversion-parameters).",
          "key": "event_name",
          "label": "Event Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "If you are reporting events via more than one method (Snap Pixel, App Ads Kit, Conversions API) you should use the same event_id across all methods. Please refer to the [Snapchat Marketing API docs](https://marketingapi.snapchat.com/docs/conversion.html#deduplication) for information on how this field is used for deduplication against Snap Pixel SDK and App Adds Kit events.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The Epoch timestamp for when the conversion happened. The timestamp cannot be more than 7 days in the past.",
          "key": "event_time",
          "label": "Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "choices": [
            {
              "label": "EMAIL",
              "value": "email",
            },
            {
              "label": "WEBSITE",
              "value": "website",
            },
            {
              "label": "APP",
              "value": "app",
            },
            {
              "label": "PHONE CALL",
              "value": "phone_call",
            },
            {
              "label": "CHAT",
              "value": "chat",
            },
            {
              "label": "PHYSICAL STORE",
              "value": "physical_store",
            },
            {
              "label": "SYSTEM GENERATED",
              "value": "system_generated",
            },
            {
              "label": "OTHER",
              "value": "other",
            },
          ],
          "default": undefined,
          "description": "This field allows you to specify where your conversions occurred.",
          "key": "action_source",
          "label": "Action Source",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": {
            "city": "{event.context.traits.address.city ?? event.properties.address.city}",
            "client_ip_address": "{event.properties.$ip}",
            "client_user_agent": "{event.properties.$raw_user_agent}",
            "country": "{event.context.traits.address.country ?? event.properties.address.country}",
            "dateOfBirth": "{event.context.traits.birthday ?? event.properties.birthday}",
            "email": "{event.properties.email ?? person.properties.email}",
            "externalId": "{person.id ?? event.distinct_id}",
            "firstName": "{event.context.traits.first_name ?? event.properties.first_name}",
            "gender": "{event.context.traits.gender ?? event.properties.gender}",
            "idfv": "{event.properties.$device_id}",
            "lastName": "{event.context.traits.last_name ?? event.properties.last_name}",
            "leadID": undefined,
            "madid": "",
            "phone": "{event.properties.phone ?? person.properties.phone}",
            "sc_click_id": "",
            "sc_cookie1": "",
            "state": "{event.context.traits.address.state ?? event.properties.address.state}",
            "subscriptionID": undefined,
            "zip": "{event.context.traits.address.postalCode ?? event.properties.address.postalCode}",
          },
          "description": "These parameters are a set of identifiers Snapchat can use for targeted attribution. You must provide at least one of the following parameters in your request.",
          "key": "user_data",
          "label": "User Data",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "advertiser_tracking_enabled": undefined,
            "application_tracking_enabled": "",
            "carrier": "",
            "cpuCores": undefined,
            "density": "",
            "deviceName": "{event.properties.$device_model}",
            "deviceTimezone": "{event.properties.$timezone}",
            "freeStorage": undefined,
            "height": "{event.context.screen.height}",
            "locale": "{event.properties.$locale}",
            "longVersion": "{event.event.properties.$app_version}",
            "osVersion": "{event.properties.$os_version}",
            "packageName": "{event.event.properties.$app_namespace}",
            "shortVersion": undefined,
            "storageSize": undefined,
            "timezone": undefined,
            "version": undefined,
            "width": "{event.context.screen.width}",
          },
          "description": "These fields support sending app events to Snapchat through the Conversions API.",
          "key": "app_data",
          "label": "App Data",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "checkin_date": undefined,
            "city": undefined,
            "country": undefined,
            "currency": "{event.properties.currency}",
            "departing_arrival_date": undefined,
            "departing_departure_date": undefined,
            "destination_airport": undefined,
            "hotel_score": undefined,
            "neighborhood": undefined,
            "num_adults": undefined,
            "num_children": undefined,
            "num_infants": undefined,
            "num_items": "{event.properties.quantity}",
            "order_id": "{event.properties.order_id}",
            "origin_airport": undefined,
            "postal_code": undefined,
            "preferred_neighborhoods": undefined,
            "preferred_star_ratings": undefined,
            "region": undefined,
            "returning_arrival_date": undefined,
            "returning_departure_date": undefined,
            "search_string": "{event.properties.query}",
            "sign_up_method": undefined,
            "suggested_destinations": undefined,
            "suggested_hotels": undefined,
            "travel_end": undefined,
            "travel_start": undefined,
            "value": "{event.properties.revenue ?? event.properties.total}",
          },
          "description": "The custom data object can be used to pass custom properties.",
          "key": "custom_data",
          "label": "Custom Data",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": undefined,
          "description": "The Data Processing Options to send to Snapchat. If set to true, Segment will send an array to Snapchat indicating events should be processed with Limited Data Use (LDU) restrictions.",
          "key": "data_processing_options",
          "label": "Data Processing Options",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "choices": [
            {
              "label": "Use Snapchat's Geolocation Logic",
              "value": 0,
            },
            {
              "label": "United States of America",
              "value": 1,
            },
          ],
          "default": undefined,
          "description": "A country that you want to associate to the Data Processing Options. Accepted values are 1, for the United States of America, or 0, to request that Snapchat geolocates the event using IP address. This is required if Data Processing Options is set to true. If nothing is provided, Segment will send 0.",
          "key": "data_processing_options_country",
          "label": "Data Processing Country",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "choices": [
            {
              "label": "Use Snapchat's Geolocation Logic",
              "value": 0,
            },
            {
              "label": "California",
              "value": 1000,
            },
          ],
          "default": undefined,
          "description": "A state that you want to associate to the Data Processing Options. Accepted values are 1000, for California, or 0, to request that Snapchat geolocates the event using IP address. This is required if Data Processing Options is set to true. If nothing is provided, Segment will send 0.",
          "key": "data_processing_options_state",
          "label": "Data Processing State",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The URL of the web page where the event took place.",
          "key": "event_source_url",
          "label": "Event Source URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "brand": undefined,
            "item_category": undefined,
            "item_id": undefined,
          },
          "description": "Use this field to send details of mulitple products / items. This field overrides individual 'Item ID', 'Item Category' and 'Brand' fields. Note: total purchase value is tracked using the 'Price' field",
          "key": "products",
          "label": "Products",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": undefined,
          "description": "[Deprecated] Use Products field.",
          "key": "brands",
          "label": "[Deprecated] Brand",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data sc_click_id field.",
          "key": "click_id",
          "label": "[Deprecated] Click ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Event ID field.",
          "key": "client_dedup_id",
          "label": "[Deprecated] Client Deduplication ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Custom Data currency field.",
          "key": "currency",
          "label": "[Deprecated] Currency",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. No longer supported.",
          "key": "description",
          "label": "[Deprecated] Description",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use App Data deviceName field.",
          "key": "device_model",
          "label": "[Deprecated] Device Model",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data email field.",
          "key": "email",
          "label": "[Deprecated] Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "choices": [
            {
              "label": "Offline",
              "value": "OFFLINE",
            },
            {
              "label": "Web",
              "value": "WEB",
            },
            {
              "label": "Mobile App",
              "value": "MOBILE_APP",
            },
          ],
          "default": undefined,
          "description": "Deprecated. Use Action Source field.",
          "key": "event_conversion_type",
          "label": "[Deprecated] Event Conversion Type",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": undefined,
          "description": "Deprecated. No longer supported.",
          "key": "event_tag",
          "label": "[Deprecated] Event Tag",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Event Name field.",
          "key": "event_type",
          "label": "[Deprecated] Event Type",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data idfv field.",
          "key": "idfv",
          "label": "[Deprecated] Identifier for Vendor",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data client_ip_address field.",
          "key": "ip_address",
          "label": "[Deprecated] IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use products field.",
          "key": "item_category",
          "label": "[Deprecated] Item Category",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use products field.",
          "key": "item_ids",
          "label": "[Deprecated] Item ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. No longer supported.",
          "key": "level",
          "label": "[Deprecated] Level",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data madid field.",
          "key": "mobile_ad_id",
          "label": "[Deprecated] Mobile Ad Identifier",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Custom Data num_items field.",
          "key": "number_items",
          "label": "[Deprecated] Number of Items",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use App Data version field.",
          "key": "os_version",
          "label": "[Deprecated] OS Version",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Event Source URL field.",
          "key": "page_url",
          "label": "[Deprecated] Page URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data phone field.",
          "key": "phone_number",
          "label": "[Deprecated] Phone Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Custom Data value field.",
          "key": "price",
          "label": "[Deprecated] Price",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Custom Data search_string field.",
          "key": "search_string",
          "label": "[Deprecated] Search String",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Custom Data sign_up_method field.",
          "key": "sign_up_method",
          "label": "[Deprecated] Sign Up Method",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Event Timestamp field.",
          "key": "timestamp",
          "label": "[Deprecated] Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Custom Data order_id field.",
          "key": "transaction_id",
          "label": "[Deprecated] Transaction ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data client_user_agent field.",
          "key": "user_agent",
          "label": "[Deprecated] User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data sc_cookie1 field.",
          "key": "uuid_c1",
          "label": "[Deprecated] uuid_c1 Cookie",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "reportConversionEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "List View",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Application Opened'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": undefined,
          "description": "The conversion event type. For custom events, you must use one of the predefined event types (i.e. CUSTOM_EVENT_1). Please refer to the possible event types in [Snapchat Marketing API docs](https://marketingapi.snapchat.com/docs/conversion.html#conversion-parameters).",
          "key": "event_name",
          "label": "Event Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "If you are reporting events via more than one method (Snap Pixel, App Ads Kit, Conversions API) you should use the same event_id across all methods. Please refer to the [Snapchat Marketing API docs](https://marketingapi.snapchat.com/docs/conversion.html#deduplication) for information on how this field is used for deduplication against Snap Pixel SDK and App Adds Kit events.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The Epoch timestamp for when the conversion happened. The timestamp cannot be more than 7 days in the past.",
          "key": "event_time",
          "label": "Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "choices": [
            {
              "label": "EMAIL",
              "value": "email",
            },
            {
              "label": "WEBSITE",
              "value": "website",
            },
            {
              "label": "APP",
              "value": "app",
            },
            {
              "label": "PHONE CALL",
              "value": "phone_call",
            },
            {
              "label": "CHAT",
              "value": "chat",
            },
            {
              "label": "PHYSICAL STORE",
              "value": "physical_store",
            },
            {
              "label": "SYSTEM GENERATED",
              "value": "system_generated",
            },
            {
              "label": "OTHER",
              "value": "other",
            },
          ],
          "default": undefined,
          "description": "This field allows you to specify where your conversions occurred.",
          "key": "action_source",
          "label": "Action Source",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": {
            "city": "{event.context.traits.address.city ?? event.properties.address.city}",
            "client_ip_address": "{event.properties.$ip}",
            "client_user_agent": "{event.properties.$raw_user_agent}",
            "country": "{event.context.traits.address.country ?? event.properties.address.country}",
            "dateOfBirth": "{event.context.traits.birthday ?? event.properties.birthday}",
            "email": "{event.properties.email ?? person.properties.email}",
            "externalId": "{person.id ?? event.distinct_id}",
            "firstName": "{event.context.traits.first_name ?? event.properties.first_name}",
            "gender": "{event.context.traits.gender ?? event.properties.gender}",
            "idfv": "{event.properties.$device_id}",
            "lastName": "{event.context.traits.last_name ?? event.properties.last_name}",
            "leadID": undefined,
            "madid": "",
            "phone": "{event.properties.phone ?? person.properties.phone}",
            "sc_click_id": "",
            "sc_cookie1": "",
            "state": "{event.context.traits.address.state ?? event.properties.address.state}",
            "subscriptionID": undefined,
            "zip": "{event.context.traits.address.postalCode ?? event.properties.address.postalCode}",
          },
          "description": "These parameters are a set of identifiers Snapchat can use for targeted attribution. You must provide at least one of the following parameters in your request.",
          "key": "user_data",
          "label": "User Data",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "advertiser_tracking_enabled": undefined,
            "application_tracking_enabled": "",
            "carrier": "",
            "cpuCores": undefined,
            "density": "",
            "deviceName": "{event.properties.$device_model}",
            "deviceTimezone": "{event.properties.$timezone}",
            "freeStorage": undefined,
            "height": "{event.context.screen.height}",
            "locale": "{event.properties.$locale}",
            "longVersion": "{event.event.properties.$app_version}",
            "osVersion": "{event.properties.$os_version}",
            "packageName": "{event.event.properties.$app_namespace}",
            "shortVersion": undefined,
            "storageSize": undefined,
            "timezone": undefined,
            "version": undefined,
            "width": "{event.context.screen.width}",
          },
          "description": "These fields support sending app events to Snapchat through the Conversions API.",
          "key": "app_data",
          "label": "App Data",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "checkin_date": undefined,
            "city": undefined,
            "country": undefined,
            "currency": "{event.properties.currency}",
            "departing_arrival_date": undefined,
            "departing_departure_date": undefined,
            "destination_airport": undefined,
            "hotel_score": undefined,
            "neighborhood": undefined,
            "num_adults": undefined,
            "num_children": undefined,
            "num_infants": undefined,
            "num_items": "{event.properties.quantity}",
            "order_id": "{event.properties.order_id}",
            "origin_airport": undefined,
            "postal_code": undefined,
            "preferred_neighborhoods": undefined,
            "preferred_star_ratings": undefined,
            "region": undefined,
            "returning_arrival_date": undefined,
            "returning_departure_date": undefined,
            "search_string": "{event.properties.query}",
            "sign_up_method": undefined,
            "suggested_destinations": undefined,
            "suggested_hotels": undefined,
            "travel_end": undefined,
            "travel_start": undefined,
            "value": "{event.properties.revenue ?? event.properties.total}",
          },
          "description": "The custom data object can be used to pass custom properties.",
          "key": "custom_data",
          "label": "Custom Data",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": undefined,
          "description": "The Data Processing Options to send to Snapchat. If set to true, Segment will send an array to Snapchat indicating events should be processed with Limited Data Use (LDU) restrictions.",
          "key": "data_processing_options",
          "label": "Data Processing Options",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "choices": [
            {
              "label": "Use Snapchat's Geolocation Logic",
              "value": 0,
            },
            {
              "label": "United States of America",
              "value": 1,
            },
          ],
          "default": undefined,
          "description": "A country that you want to associate to the Data Processing Options. Accepted values are 1, for the United States of America, or 0, to request that Snapchat geolocates the event using IP address. This is required if Data Processing Options is set to true. If nothing is provided, Segment will send 0.",
          "key": "data_processing_options_country",
          "label": "Data Processing Country",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "choices": [
            {
              "label": "Use Snapchat's Geolocation Logic",
              "value": 0,
            },
            {
              "label": "California",
              "value": 1000,
            },
          ],
          "default": undefined,
          "description": "A state that you want to associate to the Data Processing Options. Accepted values are 1000, for California, or 0, to request that Snapchat geolocates the event using IP address. This is required if Data Processing Options is set to true. If nothing is provided, Segment will send 0.",
          "key": "data_processing_options_state",
          "label": "Data Processing State",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The URL of the web page where the event took place.",
          "key": "event_source_url",
          "label": "Event Source URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "brand": undefined,
            "item_category": undefined,
            "item_id": undefined,
          },
          "description": "Use this field to send details of mulitple products / items. This field overrides individual 'Item ID', 'Item Category' and 'Brand' fields. Note: total purchase value is tracked using the 'Price' field",
          "key": "products",
          "label": "Products",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": undefined,
          "description": "[Deprecated] Use Products field.",
          "key": "brands",
          "label": "[Deprecated] Brand",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data sc_click_id field.",
          "key": "click_id",
          "label": "[Deprecated] Click ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Event ID field.",
          "key": "client_dedup_id",
          "label": "[Deprecated] Client Deduplication ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Custom Data currency field.",
          "key": "currency",
          "label": "[Deprecated] Currency",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. No longer supported.",
          "key": "description",
          "label": "[Deprecated] Description",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use App Data deviceName field.",
          "key": "device_model",
          "label": "[Deprecated] Device Model",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data email field.",
          "key": "email",
          "label": "[Deprecated] Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "choices": [
            {
              "label": "Offline",
              "value": "OFFLINE",
            },
            {
              "label": "Web",
              "value": "WEB",
            },
            {
              "label": "Mobile App",
              "value": "MOBILE_APP",
            },
          ],
          "default": undefined,
          "description": "Deprecated. Use Action Source field.",
          "key": "event_conversion_type",
          "label": "[Deprecated] Event Conversion Type",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": undefined,
          "description": "Deprecated. No longer supported.",
          "key": "event_tag",
          "label": "[Deprecated] Event Tag",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Event Name field.",
          "key": "event_type",
          "label": "[Deprecated] Event Type",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data idfv field.",
          "key": "idfv",
          "label": "[Deprecated] Identifier for Vendor",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data client_ip_address field.",
          "key": "ip_address",
          "label": "[Deprecated] IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use products field.",
          "key": "item_category",
          "label": "[Deprecated] Item Category",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use products field.",
          "key": "item_ids",
          "label": "[Deprecated] Item ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. No longer supported.",
          "key": "level",
          "label": "[Deprecated] Level",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data madid field.",
          "key": "mobile_ad_id",
          "label": "[Deprecated] Mobile Ad Identifier",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Custom Data num_items field.",
          "key": "number_items",
          "label": "[Deprecated] Number of Items",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use App Data version field.",
          "key": "os_version",
          "label": "[Deprecated] OS Version",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Event Source URL field.",
          "key": "page_url",
          "label": "[Deprecated] Page URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data phone field.",
          "key": "phone_number",
          "label": "[Deprecated] Phone Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Custom Data value field.",
          "key": "price",
          "label": "[Deprecated] Price",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Custom Data search_string field.",
          "key": "search_string",
          "label": "[Deprecated] Search String",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Custom Data sign_up_method field.",
          "key": "sign_up_method",
          "label": "[Deprecated] Sign Up Method",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Event Timestamp field.",
          "key": "timestamp",
          "label": "[Deprecated] Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Custom Data order_id field.",
          "key": "transaction_id",
          "label": "[Deprecated] Transaction ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data client_user_agent field.",
          "key": "user_agent",
          "label": "[Deprecated] User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data sc_cookie1 field.",
          "key": "uuid_c1",
          "label": "[Deprecated] uuid_c1 Cookie",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "reportConversionEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "App Open",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Signed In'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": undefined,
          "description": "The conversion event type. For custom events, you must use one of the predefined event types (i.e. CUSTOM_EVENT_1). Please refer to the possible event types in [Snapchat Marketing API docs](https://marketingapi.snapchat.com/docs/conversion.html#conversion-parameters).",
          "key": "event_name",
          "label": "Event Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "If you are reporting events via more than one method (Snap Pixel, App Ads Kit, Conversions API) you should use the same event_id across all methods. Please refer to the [Snapchat Marketing API docs](https://marketingapi.snapchat.com/docs/conversion.html#deduplication) for information on how this field is used for deduplication against Snap Pixel SDK and App Adds Kit events.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The Epoch timestamp for when the conversion happened. The timestamp cannot be more than 7 days in the past.",
          "key": "event_time",
          "label": "Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "choices": [
            {
              "label": "EMAIL",
              "value": "email",
            },
            {
              "label": "WEBSITE",
              "value": "website",
            },
            {
              "label": "APP",
              "value": "app",
            },
            {
              "label": "PHONE CALL",
              "value": "phone_call",
            },
            {
              "label": "CHAT",
              "value": "chat",
            },
            {
              "label": "PHYSICAL STORE",
              "value": "physical_store",
            },
            {
              "label": "SYSTEM GENERATED",
              "value": "system_generated",
            },
            {
              "label": "OTHER",
              "value": "other",
            },
          ],
          "default": undefined,
          "description": "This field allows you to specify where your conversions occurred.",
          "key": "action_source",
          "label": "Action Source",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": {
            "city": "{event.context.traits.address.city ?? event.properties.address.city}",
            "client_ip_address": "{event.properties.$ip}",
            "client_user_agent": "{event.properties.$raw_user_agent}",
            "country": "{event.context.traits.address.country ?? event.properties.address.country}",
            "dateOfBirth": "{event.context.traits.birthday ?? event.properties.birthday}",
            "email": "{event.properties.email ?? person.properties.email}",
            "externalId": "{person.id ?? event.distinct_id}",
            "firstName": "{event.context.traits.first_name ?? event.properties.first_name}",
            "gender": "{event.context.traits.gender ?? event.properties.gender}",
            "idfv": "{event.properties.$device_id}",
            "lastName": "{event.context.traits.last_name ?? event.properties.last_name}",
            "leadID": undefined,
            "madid": "",
            "phone": "{event.properties.phone ?? person.properties.phone}",
            "sc_click_id": "",
            "sc_cookie1": "",
            "state": "{event.context.traits.address.state ?? event.properties.address.state}",
            "subscriptionID": undefined,
            "zip": "{event.context.traits.address.postalCode ?? event.properties.address.postalCode}",
          },
          "description": "These parameters are a set of identifiers Snapchat can use for targeted attribution. You must provide at least one of the following parameters in your request.",
          "key": "user_data",
          "label": "User Data",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "advertiser_tracking_enabled": undefined,
            "application_tracking_enabled": "",
            "carrier": "",
            "cpuCores": undefined,
            "density": "",
            "deviceName": "{event.properties.$device_model}",
            "deviceTimezone": "{event.properties.$timezone}",
            "freeStorage": undefined,
            "height": "{event.context.screen.height}",
            "locale": "{event.properties.$locale}",
            "longVersion": "{event.event.properties.$app_version}",
            "osVersion": "{event.properties.$os_version}",
            "packageName": "{event.event.properties.$app_namespace}",
            "shortVersion": undefined,
            "storageSize": undefined,
            "timezone": undefined,
            "version": undefined,
            "width": "{event.context.screen.width}",
          },
          "description": "These fields support sending app events to Snapchat through the Conversions API.",
          "key": "app_data",
          "label": "App Data",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "checkin_date": undefined,
            "city": undefined,
            "country": undefined,
            "currency": "{event.properties.currency}",
            "departing_arrival_date": undefined,
            "departing_departure_date": undefined,
            "destination_airport": undefined,
            "hotel_score": undefined,
            "neighborhood": undefined,
            "num_adults": undefined,
            "num_children": undefined,
            "num_infants": undefined,
            "num_items": "{event.properties.quantity}",
            "order_id": "{event.properties.order_id}",
            "origin_airport": undefined,
            "postal_code": undefined,
            "preferred_neighborhoods": undefined,
            "preferred_star_ratings": undefined,
            "region": undefined,
            "returning_arrival_date": undefined,
            "returning_departure_date": undefined,
            "search_string": "{event.properties.query}",
            "sign_up_method": undefined,
            "suggested_destinations": undefined,
            "suggested_hotels": undefined,
            "travel_end": undefined,
            "travel_start": undefined,
            "value": "{event.properties.revenue ?? event.properties.total}",
          },
          "description": "The custom data object can be used to pass custom properties.",
          "key": "custom_data",
          "label": "Custom Data",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": undefined,
          "description": "The Data Processing Options to send to Snapchat. If set to true, Segment will send an array to Snapchat indicating events should be processed with Limited Data Use (LDU) restrictions.",
          "key": "data_processing_options",
          "label": "Data Processing Options",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "choices": [
            {
              "label": "Use Snapchat's Geolocation Logic",
              "value": 0,
            },
            {
              "label": "United States of America",
              "value": 1,
            },
          ],
          "default": undefined,
          "description": "A country that you want to associate to the Data Processing Options. Accepted values are 1, for the United States of America, or 0, to request that Snapchat geolocates the event using IP address. This is required if Data Processing Options is set to true. If nothing is provided, Segment will send 0.",
          "key": "data_processing_options_country",
          "label": "Data Processing Country",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "choices": [
            {
              "label": "Use Snapchat's Geolocation Logic",
              "value": 0,
            },
            {
              "label": "California",
              "value": 1000,
            },
          ],
          "default": undefined,
          "description": "A state that you want to associate to the Data Processing Options. Accepted values are 1000, for California, or 0, to request that Snapchat geolocates the event using IP address. This is required if Data Processing Options is set to true. If nothing is provided, Segment will send 0.",
          "key": "data_processing_options_state",
          "label": "Data Processing State",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The URL of the web page where the event took place.",
          "key": "event_source_url",
          "label": "Event Source URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "brand": undefined,
            "item_category": undefined,
            "item_id": undefined,
          },
          "description": "Use this field to send details of mulitple products / items. This field overrides individual 'Item ID', 'Item Category' and 'Brand' fields. Note: total purchase value is tracked using the 'Price' field",
          "key": "products",
          "label": "Products",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": undefined,
          "description": "[Deprecated] Use Products field.",
          "key": "brands",
          "label": "[Deprecated] Brand",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data sc_click_id field.",
          "key": "click_id",
          "label": "[Deprecated] Click ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Event ID field.",
          "key": "client_dedup_id",
          "label": "[Deprecated] Client Deduplication ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Custom Data currency field.",
          "key": "currency",
          "label": "[Deprecated] Currency",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. No longer supported.",
          "key": "description",
          "label": "[Deprecated] Description",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use App Data deviceName field.",
          "key": "device_model",
          "label": "[Deprecated] Device Model",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data email field.",
          "key": "email",
          "label": "[Deprecated] Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "choices": [
            {
              "label": "Offline",
              "value": "OFFLINE",
            },
            {
              "label": "Web",
              "value": "WEB",
            },
            {
              "label": "Mobile App",
              "value": "MOBILE_APP",
            },
          ],
          "default": undefined,
          "description": "Deprecated. Use Action Source field.",
          "key": "event_conversion_type",
          "label": "[Deprecated] Event Conversion Type",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": undefined,
          "description": "Deprecated. No longer supported.",
          "key": "event_tag",
          "label": "[Deprecated] Event Tag",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Event Name field.",
          "key": "event_type",
          "label": "[Deprecated] Event Type",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data idfv field.",
          "key": "idfv",
          "label": "[Deprecated] Identifier for Vendor",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data client_ip_address field.",
          "key": "ip_address",
          "label": "[Deprecated] IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use products field.",
          "key": "item_category",
          "label": "[Deprecated] Item Category",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use products field.",
          "key": "item_ids",
          "label": "[Deprecated] Item ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. No longer supported.",
          "key": "level",
          "label": "[Deprecated] Level",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data madid field.",
          "key": "mobile_ad_id",
          "label": "[Deprecated] Mobile Ad Identifier",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Custom Data num_items field.",
          "key": "number_items",
          "label": "[Deprecated] Number of Items",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use App Data version field.",
          "key": "os_version",
          "label": "[Deprecated] OS Version",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Event Source URL field.",
          "key": "page_url",
          "label": "[Deprecated] Page URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data phone field.",
          "key": "phone_number",
          "label": "[Deprecated] Phone Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Custom Data value field.",
          "key": "price",
          "label": "[Deprecated] Price",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Custom Data search_string field.",
          "key": "search_string",
          "label": "[Deprecated] Search String",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Custom Data sign_up_method field.",
          "key": "sign_up_method",
          "label": "[Deprecated] Sign Up Method",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Event Timestamp field.",
          "key": "timestamp",
          "label": "[Deprecated] Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Custom Data order_id field.",
          "key": "transaction_id",
          "label": "[Deprecated] Transaction ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data client_user_agent field.",
          "key": "user_agent",
          "label": "[Deprecated] User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data sc_cookie1 field.",
          "key": "uuid_c1",
          "label": "[Deprecated] uuid_c1 Cookie",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "reportConversionEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Login",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = '$pageview'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": undefined,
          "description": "The conversion event type. For custom events, you must use one of the predefined event types (i.e. CUSTOM_EVENT_1). Please refer to the possible event types in [Snapchat Marketing API docs](https://marketingapi.snapchat.com/docs/conversion.html#conversion-parameters).",
          "key": "event_name",
          "label": "Event Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "If you are reporting events via more than one method (Snap Pixel, App Ads Kit, Conversions API) you should use the same event_id across all methods. Please refer to the [Snapchat Marketing API docs](https://marketingapi.snapchat.com/docs/conversion.html#deduplication) for information on how this field is used for deduplication against Snap Pixel SDK and App Adds Kit events.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The Epoch timestamp for when the conversion happened. The timestamp cannot be more than 7 days in the past.",
          "key": "event_time",
          "label": "Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "choices": [
            {
              "label": "EMAIL",
              "value": "email",
            },
            {
              "label": "WEBSITE",
              "value": "website",
            },
            {
              "label": "APP",
              "value": "app",
            },
            {
              "label": "PHONE CALL",
              "value": "phone_call",
            },
            {
              "label": "CHAT",
              "value": "chat",
            },
            {
              "label": "PHYSICAL STORE",
              "value": "physical_store",
            },
            {
              "label": "SYSTEM GENERATED",
              "value": "system_generated",
            },
            {
              "label": "OTHER",
              "value": "other",
            },
          ],
          "default": undefined,
          "description": "This field allows you to specify where your conversions occurred.",
          "key": "action_source",
          "label": "Action Source",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": {
            "city": "{event.context.traits.address.city ?? event.properties.address.city}",
            "client_ip_address": "{event.properties.$ip}",
            "client_user_agent": "{event.properties.$raw_user_agent}",
            "country": "{event.context.traits.address.country ?? event.properties.address.country}",
            "dateOfBirth": "{event.context.traits.birthday ?? event.properties.birthday}",
            "email": "{event.properties.email ?? person.properties.email}",
            "externalId": "{person.id ?? event.distinct_id}",
            "firstName": "{event.context.traits.first_name ?? event.properties.first_name}",
            "gender": "{event.context.traits.gender ?? event.properties.gender}",
            "idfv": "{event.properties.$device_id}",
            "lastName": "{event.context.traits.last_name ?? event.properties.last_name}",
            "leadID": undefined,
            "madid": "",
            "phone": "{event.properties.phone ?? person.properties.phone}",
            "sc_click_id": "",
            "sc_cookie1": "",
            "state": "{event.context.traits.address.state ?? event.properties.address.state}",
            "subscriptionID": undefined,
            "zip": "{event.context.traits.address.postalCode ?? event.properties.address.postalCode}",
          },
          "description": "These parameters are a set of identifiers Snapchat can use for targeted attribution. You must provide at least one of the following parameters in your request.",
          "key": "user_data",
          "label": "User Data",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "advertiser_tracking_enabled": undefined,
            "application_tracking_enabled": "",
            "carrier": "",
            "cpuCores": undefined,
            "density": "",
            "deviceName": "{event.properties.$device_model}",
            "deviceTimezone": "{event.properties.$timezone}",
            "freeStorage": undefined,
            "height": "{event.context.screen.height}",
            "locale": "{event.properties.$locale}",
            "longVersion": "{event.event.properties.$app_version}",
            "osVersion": "{event.properties.$os_version}",
            "packageName": "{event.event.properties.$app_namespace}",
            "shortVersion": undefined,
            "storageSize": undefined,
            "timezone": undefined,
            "version": undefined,
            "width": "{event.context.screen.width}",
          },
          "description": "These fields support sending app events to Snapchat through the Conversions API.",
          "key": "app_data",
          "label": "App Data",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "checkin_date": undefined,
            "city": undefined,
            "country": undefined,
            "currency": "{event.properties.currency}",
            "departing_arrival_date": undefined,
            "departing_departure_date": undefined,
            "destination_airport": undefined,
            "hotel_score": undefined,
            "neighborhood": undefined,
            "num_adults": undefined,
            "num_children": undefined,
            "num_infants": undefined,
            "num_items": "{event.properties.quantity}",
            "order_id": "{event.properties.order_id}",
            "origin_airport": undefined,
            "postal_code": undefined,
            "preferred_neighborhoods": undefined,
            "preferred_star_ratings": undefined,
            "region": undefined,
            "returning_arrival_date": undefined,
            "returning_departure_date": undefined,
            "search_string": "{event.properties.query}",
            "sign_up_method": undefined,
            "suggested_destinations": undefined,
            "suggested_hotels": undefined,
            "travel_end": undefined,
            "travel_start": undefined,
            "value": "{event.properties.revenue ?? event.properties.total}",
          },
          "description": "The custom data object can be used to pass custom properties.",
          "key": "custom_data",
          "label": "Custom Data",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": undefined,
          "description": "The Data Processing Options to send to Snapchat. If set to true, Segment will send an array to Snapchat indicating events should be processed with Limited Data Use (LDU) restrictions.",
          "key": "data_processing_options",
          "label": "Data Processing Options",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "choices": [
            {
              "label": "Use Snapchat's Geolocation Logic",
              "value": 0,
            },
            {
              "label": "United States of America",
              "value": 1,
            },
          ],
          "default": undefined,
          "description": "A country that you want to associate to the Data Processing Options. Accepted values are 1, for the United States of America, or 0, to request that Snapchat geolocates the event using IP address. This is required if Data Processing Options is set to true. If nothing is provided, Segment will send 0.",
          "key": "data_processing_options_country",
          "label": "Data Processing Country",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "choices": [
            {
              "label": "Use Snapchat's Geolocation Logic",
              "value": 0,
            },
            {
              "label": "California",
              "value": 1000,
            },
          ],
          "default": undefined,
          "description": "A state that you want to associate to the Data Processing Options. Accepted values are 1000, for California, or 0, to request that Snapchat geolocates the event using IP address. This is required if Data Processing Options is set to true. If nothing is provided, Segment will send 0.",
          "key": "data_processing_options_state",
          "label": "Data Processing State",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The URL of the web page where the event took place.",
          "key": "event_source_url",
          "label": "Event Source URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "brand": undefined,
            "item_category": undefined,
            "item_id": undefined,
          },
          "description": "Use this field to send details of mulitple products / items. This field overrides individual 'Item ID', 'Item Category' and 'Brand' fields. Note: total purchase value is tracked using the 'Price' field",
          "key": "products",
          "label": "Products",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": undefined,
          "description": "[Deprecated] Use Products field.",
          "key": "brands",
          "label": "[Deprecated] Brand",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data sc_click_id field.",
          "key": "click_id",
          "label": "[Deprecated] Click ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Event ID field.",
          "key": "client_dedup_id",
          "label": "[Deprecated] Client Deduplication ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Custom Data currency field.",
          "key": "currency",
          "label": "[Deprecated] Currency",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. No longer supported.",
          "key": "description",
          "label": "[Deprecated] Description",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use App Data deviceName field.",
          "key": "device_model",
          "label": "[Deprecated] Device Model",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data email field.",
          "key": "email",
          "label": "[Deprecated] Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "choices": [
            {
              "label": "Offline",
              "value": "OFFLINE",
            },
            {
              "label": "Web",
              "value": "WEB",
            },
            {
              "label": "Mobile App",
              "value": "MOBILE_APP",
            },
          ],
          "default": undefined,
          "description": "Deprecated. Use Action Source field.",
          "key": "event_conversion_type",
          "label": "[Deprecated] Event Conversion Type",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": undefined,
          "description": "Deprecated. No longer supported.",
          "key": "event_tag",
          "label": "[Deprecated] Event Tag",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Event Name field.",
          "key": "event_type",
          "label": "[Deprecated] Event Type",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data idfv field.",
          "key": "idfv",
          "label": "[Deprecated] Identifier for Vendor",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data client_ip_address field.",
          "key": "ip_address",
          "label": "[Deprecated] IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use products field.",
          "key": "item_category",
          "label": "[Deprecated] Item Category",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use products field.",
          "key": "item_ids",
          "label": "[Deprecated] Item ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. No longer supported.",
          "key": "level",
          "label": "[Deprecated] Level",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data madid field.",
          "key": "mobile_ad_id",
          "label": "[Deprecated] Mobile Ad Identifier",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Custom Data num_items field.",
          "key": "number_items",
          "label": "[Deprecated] Number of Items",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use App Data version field.",
          "key": "os_version",
          "label": "[Deprecated] OS Version",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Event Source URL field.",
          "key": "page_url",
          "label": "[Deprecated] Page URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data phone field.",
          "key": "phone_number",
          "label": "[Deprecated] Phone Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Custom Data value field.",
          "key": "price",
          "label": "[Deprecated] Price",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Custom Data search_string field.",
          "key": "search_string",
          "label": "[Deprecated] Search String",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Custom Data sign_up_method field.",
          "key": "sign_up_method",
          "label": "[Deprecated] Sign Up Method",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Event Timestamp field.",
          "key": "timestamp",
          "label": "[Deprecated] Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Custom Data order_id field.",
          "key": "transaction_id",
          "label": "[Deprecated] Transaction ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data client_user_agent field.",
          "key": "user_agent",
          "label": "[Deprecated] User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data sc_cookie1 field.",
          "key": "uuid_c1",
          "label": "[Deprecated] uuid_c1 Cookie",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "reportConversionEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Page View",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Order Completed'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": undefined,
          "description": "The conversion event type. For custom events, you must use one of the predefined event types (i.e. CUSTOM_EVENT_1). Please refer to the possible event types in [Snapchat Marketing API docs](https://marketingapi.snapchat.com/docs/conversion.html#conversion-parameters).",
          "key": "event_name",
          "label": "Event Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "If you are reporting events via more than one method (Snap Pixel, App Ads Kit, Conversions API) you should use the same event_id across all methods. Please refer to the [Snapchat Marketing API docs](https://marketingapi.snapchat.com/docs/conversion.html#deduplication) for information on how this field is used for deduplication against Snap Pixel SDK and App Adds Kit events.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The Epoch timestamp for when the conversion happened. The timestamp cannot be more than 7 days in the past.",
          "key": "event_time",
          "label": "Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "choices": [
            {
              "label": "EMAIL",
              "value": "email",
            },
            {
              "label": "WEBSITE",
              "value": "website",
            },
            {
              "label": "APP",
              "value": "app",
            },
            {
              "label": "PHONE CALL",
              "value": "phone_call",
            },
            {
              "label": "CHAT",
              "value": "chat",
            },
            {
              "label": "PHYSICAL STORE",
              "value": "physical_store",
            },
            {
              "label": "SYSTEM GENERATED",
              "value": "system_generated",
            },
            {
              "label": "OTHER",
              "value": "other",
            },
          ],
          "default": undefined,
          "description": "This field allows you to specify where your conversions occurred.",
          "key": "action_source",
          "label": "Action Source",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": {
            "city": "{event.context.traits.address.city ?? event.properties.address.city}",
            "client_ip_address": "{event.properties.$ip}",
            "client_user_agent": "{event.properties.$raw_user_agent}",
            "country": "{event.context.traits.address.country ?? event.properties.address.country}",
            "dateOfBirth": "{event.context.traits.birthday ?? event.properties.birthday}",
            "email": "{event.properties.email ?? person.properties.email}",
            "externalId": "{person.id ?? event.distinct_id}",
            "firstName": "{event.context.traits.first_name ?? event.properties.first_name}",
            "gender": "{event.context.traits.gender ?? event.properties.gender}",
            "idfv": "{event.properties.$device_id}",
            "lastName": "{event.context.traits.last_name ?? event.properties.last_name}",
            "leadID": undefined,
            "madid": "",
            "phone": "{event.properties.phone ?? person.properties.phone}",
            "sc_click_id": "",
            "sc_cookie1": "",
            "state": "{event.context.traits.address.state ?? event.properties.address.state}",
            "subscriptionID": undefined,
            "zip": "{event.context.traits.address.postalCode ?? event.properties.address.postalCode}",
          },
          "description": "These parameters are a set of identifiers Snapchat can use for targeted attribution. You must provide at least one of the following parameters in your request.",
          "key": "user_data",
          "label": "User Data",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "advertiser_tracking_enabled": undefined,
            "application_tracking_enabled": "",
            "carrier": "",
            "cpuCores": undefined,
            "density": "",
            "deviceName": "{event.properties.$device_model}",
            "deviceTimezone": "{event.properties.$timezone}",
            "freeStorage": undefined,
            "height": "{event.context.screen.height}",
            "locale": "{event.properties.$locale}",
            "longVersion": "{event.event.properties.$app_version}",
            "osVersion": "{event.properties.$os_version}",
            "packageName": "{event.event.properties.$app_namespace}",
            "shortVersion": undefined,
            "storageSize": undefined,
            "timezone": undefined,
            "version": undefined,
            "width": "{event.context.screen.width}",
          },
          "description": "These fields support sending app events to Snapchat through the Conversions API.",
          "key": "app_data",
          "label": "App Data",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "checkin_date": undefined,
            "city": undefined,
            "country": undefined,
            "currency": "{event.properties.currency}",
            "departing_arrival_date": undefined,
            "departing_departure_date": undefined,
            "destination_airport": undefined,
            "hotel_score": undefined,
            "neighborhood": undefined,
            "num_adults": undefined,
            "num_children": undefined,
            "num_infants": undefined,
            "num_items": "{event.properties.quantity}",
            "order_id": "{event.properties.order_id}",
            "origin_airport": undefined,
            "postal_code": undefined,
            "preferred_neighborhoods": undefined,
            "preferred_star_ratings": undefined,
            "region": undefined,
            "returning_arrival_date": undefined,
            "returning_departure_date": undefined,
            "search_string": "{event.properties.query}",
            "sign_up_method": undefined,
            "suggested_destinations": undefined,
            "suggested_hotels": undefined,
            "travel_end": undefined,
            "travel_start": undefined,
            "value": "{event.properties.revenue ?? event.properties.total}",
          },
          "description": "The custom data object can be used to pass custom properties.",
          "key": "custom_data",
          "label": "Custom Data",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": undefined,
          "description": "The Data Processing Options to send to Snapchat. If set to true, Segment will send an array to Snapchat indicating events should be processed with Limited Data Use (LDU) restrictions.",
          "key": "data_processing_options",
          "label": "Data Processing Options",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "choices": [
            {
              "label": "Use Snapchat's Geolocation Logic",
              "value": 0,
            },
            {
              "label": "United States of America",
              "value": 1,
            },
          ],
          "default": undefined,
          "description": "A country that you want to associate to the Data Processing Options. Accepted values are 1, for the United States of America, or 0, to request that Snapchat geolocates the event using IP address. This is required if Data Processing Options is set to true. If nothing is provided, Segment will send 0.",
          "key": "data_processing_options_country",
          "label": "Data Processing Country",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "choices": [
            {
              "label": "Use Snapchat's Geolocation Logic",
              "value": 0,
            },
            {
              "label": "California",
              "value": 1000,
            },
          ],
          "default": undefined,
          "description": "A state that you want to associate to the Data Processing Options. Accepted values are 1000, for California, or 0, to request that Snapchat geolocates the event using IP address. This is required if Data Processing Options is set to true. If nothing is provided, Segment will send 0.",
          "key": "data_processing_options_state",
          "label": "Data Processing State",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The URL of the web page where the event took place.",
          "key": "event_source_url",
          "label": "Event Source URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "brand": undefined,
            "item_category": undefined,
            "item_id": undefined,
          },
          "description": "Use this field to send details of mulitple products / items. This field overrides individual 'Item ID', 'Item Category' and 'Brand' fields. Note: total purchase value is tracked using the 'Price' field",
          "key": "products",
          "label": "Products",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": undefined,
          "description": "[Deprecated] Use Products field.",
          "key": "brands",
          "label": "[Deprecated] Brand",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data sc_click_id field.",
          "key": "click_id",
          "label": "[Deprecated] Click ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Event ID field.",
          "key": "client_dedup_id",
          "label": "[Deprecated] Client Deduplication ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Custom Data currency field.",
          "key": "currency",
          "label": "[Deprecated] Currency",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. No longer supported.",
          "key": "description",
          "label": "[Deprecated] Description",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use App Data deviceName field.",
          "key": "device_model",
          "label": "[Deprecated] Device Model",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data email field.",
          "key": "email",
          "label": "[Deprecated] Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "choices": [
            {
              "label": "Offline",
              "value": "OFFLINE",
            },
            {
              "label": "Web",
              "value": "WEB",
            },
            {
              "label": "Mobile App",
              "value": "MOBILE_APP",
            },
          ],
          "default": undefined,
          "description": "Deprecated. Use Action Source field.",
          "key": "event_conversion_type",
          "label": "[Deprecated] Event Conversion Type",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": undefined,
          "description": "Deprecated. No longer supported.",
          "key": "event_tag",
          "label": "[Deprecated] Event Tag",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Event Name field.",
          "key": "event_type",
          "label": "[Deprecated] Event Type",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data idfv field.",
          "key": "idfv",
          "label": "[Deprecated] Identifier for Vendor",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data client_ip_address field.",
          "key": "ip_address",
          "label": "[Deprecated] IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use products field.",
          "key": "item_category",
          "label": "[Deprecated] Item Category",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use products field.",
          "key": "item_ids",
          "label": "[Deprecated] Item ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. No longer supported.",
          "key": "level",
          "label": "[Deprecated] Level",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data madid field.",
          "key": "mobile_ad_id",
          "label": "[Deprecated] Mobile Ad Identifier",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Custom Data num_items field.",
          "key": "number_items",
          "label": "[Deprecated] Number of Items",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use App Data version field.",
          "key": "os_version",
          "label": "[Deprecated] OS Version",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Event Source URL field.",
          "key": "page_url",
          "label": "[Deprecated] Page URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data phone field.",
          "key": "phone_number",
          "label": "[Deprecated] Phone Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Custom Data value field.",
          "key": "price",
          "label": "[Deprecated] Price",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Custom Data search_string field.",
          "key": "search_string",
          "label": "[Deprecated] Search String",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Custom Data sign_up_method field.",
          "key": "sign_up_method",
          "label": "[Deprecated] Sign Up Method",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Event Timestamp field.",
          "key": "timestamp",
          "label": "[Deprecated] Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Custom Data order_id field.",
          "key": "transaction_id",
          "label": "[Deprecated] Transaction ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data client_user_agent field.",
          "key": "user_agent",
          "label": "[Deprecated] User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data sc_cookie1 field.",
          "key": "uuid_c1",
          "label": "[Deprecated] uuid_c1 Cookie",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "reportConversionEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Purchase",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Products Searched'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": undefined,
          "description": "The conversion event type. For custom events, you must use one of the predefined event types (i.e. CUSTOM_EVENT_1). Please refer to the possible event types in [Snapchat Marketing API docs](https://marketingapi.snapchat.com/docs/conversion.html#conversion-parameters).",
          "key": "event_name",
          "label": "Event Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "If you are reporting events via more than one method (Snap Pixel, App Ads Kit, Conversions API) you should use the same event_id across all methods. Please refer to the [Snapchat Marketing API docs](https://marketingapi.snapchat.com/docs/conversion.html#deduplication) for information on how this field is used for deduplication against Snap Pixel SDK and App Adds Kit events.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The Epoch timestamp for when the conversion happened. The timestamp cannot be more than 7 days in the past.",
          "key": "event_time",
          "label": "Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "choices": [
            {
              "label": "EMAIL",
              "value": "email",
            },
            {
              "label": "WEBSITE",
              "value": "website",
            },
            {
              "label": "APP",
              "value": "app",
            },
            {
              "label": "PHONE CALL",
              "value": "phone_call",
            },
            {
              "label": "CHAT",
              "value": "chat",
            },
            {
              "label": "PHYSICAL STORE",
              "value": "physical_store",
            },
            {
              "label": "SYSTEM GENERATED",
              "value": "system_generated",
            },
            {
              "label": "OTHER",
              "value": "other",
            },
          ],
          "default": undefined,
          "description": "This field allows you to specify where your conversions occurred.",
          "key": "action_source",
          "label": "Action Source",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": {
            "city": "{event.context.traits.address.city ?? event.properties.address.city}",
            "client_ip_address": "{event.properties.$ip}",
            "client_user_agent": "{event.properties.$raw_user_agent}",
            "country": "{event.context.traits.address.country ?? event.properties.address.country}",
            "dateOfBirth": "{event.context.traits.birthday ?? event.properties.birthday}",
            "email": "{event.properties.email ?? person.properties.email}",
            "externalId": "{person.id ?? event.distinct_id}",
            "firstName": "{event.context.traits.first_name ?? event.properties.first_name}",
            "gender": "{event.context.traits.gender ?? event.properties.gender}",
            "idfv": "{event.properties.$device_id}",
            "lastName": "{event.context.traits.last_name ?? event.properties.last_name}",
            "leadID": undefined,
            "madid": "",
            "phone": "{event.properties.phone ?? person.properties.phone}",
            "sc_click_id": "",
            "sc_cookie1": "",
            "state": "{event.context.traits.address.state ?? event.properties.address.state}",
            "subscriptionID": undefined,
            "zip": "{event.context.traits.address.postalCode ?? event.properties.address.postalCode}",
          },
          "description": "These parameters are a set of identifiers Snapchat can use for targeted attribution. You must provide at least one of the following parameters in your request.",
          "key": "user_data",
          "label": "User Data",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "advertiser_tracking_enabled": undefined,
            "application_tracking_enabled": "",
            "carrier": "",
            "cpuCores": undefined,
            "density": "",
            "deviceName": "{event.properties.$device_model}",
            "deviceTimezone": "{event.properties.$timezone}",
            "freeStorage": undefined,
            "height": "{event.context.screen.height}",
            "locale": "{event.properties.$locale}",
            "longVersion": "{event.event.properties.$app_version}",
            "osVersion": "{event.properties.$os_version}",
            "packageName": "{event.event.properties.$app_namespace}",
            "shortVersion": undefined,
            "storageSize": undefined,
            "timezone": undefined,
            "version": undefined,
            "width": "{event.context.screen.width}",
          },
          "description": "These fields support sending app events to Snapchat through the Conversions API.",
          "key": "app_data",
          "label": "App Data",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "checkin_date": undefined,
            "city": undefined,
            "country": undefined,
            "currency": "{event.properties.currency}",
            "departing_arrival_date": undefined,
            "departing_departure_date": undefined,
            "destination_airport": undefined,
            "hotel_score": undefined,
            "neighborhood": undefined,
            "num_adults": undefined,
            "num_children": undefined,
            "num_infants": undefined,
            "num_items": "{event.properties.quantity}",
            "order_id": "{event.properties.order_id}",
            "origin_airport": undefined,
            "postal_code": undefined,
            "preferred_neighborhoods": undefined,
            "preferred_star_ratings": undefined,
            "region": undefined,
            "returning_arrival_date": undefined,
            "returning_departure_date": undefined,
            "search_string": "{event.properties.query}",
            "sign_up_method": undefined,
            "suggested_destinations": undefined,
            "suggested_hotels": undefined,
            "travel_end": undefined,
            "travel_start": undefined,
            "value": "{event.properties.revenue ?? event.properties.total}",
          },
          "description": "The custom data object can be used to pass custom properties.",
          "key": "custom_data",
          "label": "Custom Data",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": undefined,
          "description": "The Data Processing Options to send to Snapchat. If set to true, Segment will send an array to Snapchat indicating events should be processed with Limited Data Use (LDU) restrictions.",
          "key": "data_processing_options",
          "label": "Data Processing Options",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "choices": [
            {
              "label": "Use Snapchat's Geolocation Logic",
              "value": 0,
            },
            {
              "label": "United States of America",
              "value": 1,
            },
          ],
          "default": undefined,
          "description": "A country that you want to associate to the Data Processing Options. Accepted values are 1, for the United States of America, or 0, to request that Snapchat geolocates the event using IP address. This is required if Data Processing Options is set to true. If nothing is provided, Segment will send 0.",
          "key": "data_processing_options_country",
          "label": "Data Processing Country",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "choices": [
            {
              "label": "Use Snapchat's Geolocation Logic",
              "value": 0,
            },
            {
              "label": "California",
              "value": 1000,
            },
          ],
          "default": undefined,
          "description": "A state that you want to associate to the Data Processing Options. Accepted values are 1000, for California, or 0, to request that Snapchat geolocates the event using IP address. This is required if Data Processing Options is set to true. If nothing is provided, Segment will send 0.",
          "key": "data_processing_options_state",
          "label": "Data Processing State",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The URL of the web page where the event took place.",
          "key": "event_source_url",
          "label": "Event Source URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "brand": undefined,
            "item_category": undefined,
            "item_id": undefined,
          },
          "description": "Use this field to send details of mulitple products / items. This field overrides individual 'Item ID', 'Item Category' and 'Brand' fields. Note: total purchase value is tracked using the 'Price' field",
          "key": "products",
          "label": "Products",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": undefined,
          "description": "[Deprecated] Use Products field.",
          "key": "brands",
          "label": "[Deprecated] Brand",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data sc_click_id field.",
          "key": "click_id",
          "label": "[Deprecated] Click ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Event ID field.",
          "key": "client_dedup_id",
          "label": "[Deprecated] Client Deduplication ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Custom Data currency field.",
          "key": "currency",
          "label": "[Deprecated] Currency",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. No longer supported.",
          "key": "description",
          "label": "[Deprecated] Description",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use App Data deviceName field.",
          "key": "device_model",
          "label": "[Deprecated] Device Model",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data email field.",
          "key": "email",
          "label": "[Deprecated] Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "choices": [
            {
              "label": "Offline",
              "value": "OFFLINE",
            },
            {
              "label": "Web",
              "value": "WEB",
            },
            {
              "label": "Mobile App",
              "value": "MOBILE_APP",
            },
          ],
          "default": undefined,
          "description": "Deprecated. Use Action Source field.",
          "key": "event_conversion_type",
          "label": "[Deprecated] Event Conversion Type",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": undefined,
          "description": "Deprecated. No longer supported.",
          "key": "event_tag",
          "label": "[Deprecated] Event Tag",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Event Name field.",
          "key": "event_type",
          "label": "[Deprecated] Event Type",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data idfv field.",
          "key": "idfv",
          "label": "[Deprecated] Identifier for Vendor",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data client_ip_address field.",
          "key": "ip_address",
          "label": "[Deprecated] IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use products field.",
          "key": "item_category",
          "label": "[Deprecated] Item Category",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use products field.",
          "key": "item_ids",
          "label": "[Deprecated] Item ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. No longer supported.",
          "key": "level",
          "label": "[Deprecated] Level",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data madid field.",
          "key": "mobile_ad_id",
          "label": "[Deprecated] Mobile Ad Identifier",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Custom Data num_items field.",
          "key": "number_items",
          "label": "[Deprecated] Number of Items",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use App Data version field.",
          "key": "os_version",
          "label": "[Deprecated] OS Version",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Event Source URL field.",
          "key": "page_url",
          "label": "[Deprecated] Page URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data phone field.",
          "key": "phone_number",
          "label": "[Deprecated] Phone Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Custom Data value field.",
          "key": "price",
          "label": "[Deprecated] Price",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Custom Data search_string field.",
          "key": "search_string",
          "label": "[Deprecated] Search String",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Custom Data sign_up_method field.",
          "key": "sign_up_method",
          "label": "[Deprecated] Sign Up Method",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Event Timestamp field.",
          "key": "timestamp",
          "label": "[Deprecated] Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Custom Data order_id field.",
          "key": "transaction_id",
          "label": "[Deprecated] Transaction ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data client_user_agent field.",
          "key": "user_agent",
          "label": "[Deprecated] User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data sc_cookie1 field.",
          "key": "uuid_c1",
          "label": "[Deprecated] uuid_c1 Cookie",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "reportConversionEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Search",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Product Shared'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": undefined,
          "description": "The conversion event type. For custom events, you must use one of the predefined event types (i.e. CUSTOM_EVENT_1). Please refer to the possible event types in [Snapchat Marketing API docs](https://marketingapi.snapchat.com/docs/conversion.html#conversion-parameters).",
          "key": "event_name",
          "label": "Event Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "If you are reporting events via more than one method (Snap Pixel, App Ads Kit, Conversions API) you should use the same event_id across all methods. Please refer to the [Snapchat Marketing API docs](https://marketingapi.snapchat.com/docs/conversion.html#deduplication) for information on how this field is used for deduplication against Snap Pixel SDK and App Adds Kit events.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The Epoch timestamp for when the conversion happened. The timestamp cannot be more than 7 days in the past.",
          "key": "event_time",
          "label": "Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "choices": [
            {
              "label": "EMAIL",
              "value": "email",
            },
            {
              "label": "WEBSITE",
              "value": "website",
            },
            {
              "label": "APP",
              "value": "app",
            },
            {
              "label": "PHONE CALL",
              "value": "phone_call",
            },
            {
              "label": "CHAT",
              "value": "chat",
            },
            {
              "label": "PHYSICAL STORE",
              "value": "physical_store",
            },
            {
              "label": "SYSTEM GENERATED",
              "value": "system_generated",
            },
            {
              "label": "OTHER",
              "value": "other",
            },
          ],
          "default": undefined,
          "description": "This field allows you to specify where your conversions occurred.",
          "key": "action_source",
          "label": "Action Source",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": {
            "city": "{event.context.traits.address.city ?? event.properties.address.city}",
            "client_ip_address": "{event.properties.$ip}",
            "client_user_agent": "{event.properties.$raw_user_agent}",
            "country": "{event.context.traits.address.country ?? event.properties.address.country}",
            "dateOfBirth": "{event.context.traits.birthday ?? event.properties.birthday}",
            "email": "{event.properties.email ?? person.properties.email}",
            "externalId": "{person.id ?? event.distinct_id}",
            "firstName": "{event.context.traits.first_name ?? event.properties.first_name}",
            "gender": "{event.context.traits.gender ?? event.properties.gender}",
            "idfv": "{event.properties.$device_id}",
            "lastName": "{event.context.traits.last_name ?? event.properties.last_name}",
            "leadID": undefined,
            "madid": "",
            "phone": "{event.properties.phone ?? person.properties.phone}",
            "sc_click_id": "",
            "sc_cookie1": "",
            "state": "{event.context.traits.address.state ?? event.properties.address.state}",
            "subscriptionID": undefined,
            "zip": "{event.context.traits.address.postalCode ?? event.properties.address.postalCode}",
          },
          "description": "These parameters are a set of identifiers Snapchat can use for targeted attribution. You must provide at least one of the following parameters in your request.",
          "key": "user_data",
          "label": "User Data",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "advertiser_tracking_enabled": undefined,
            "application_tracking_enabled": "",
            "carrier": "",
            "cpuCores": undefined,
            "density": "",
            "deviceName": "{event.properties.$device_model}",
            "deviceTimezone": "{event.properties.$timezone}",
            "freeStorage": undefined,
            "height": "{event.context.screen.height}",
            "locale": "{event.properties.$locale}",
            "longVersion": "{event.event.properties.$app_version}",
            "osVersion": "{event.properties.$os_version}",
            "packageName": "{event.event.properties.$app_namespace}",
            "shortVersion": undefined,
            "storageSize": undefined,
            "timezone": undefined,
            "version": undefined,
            "width": "{event.context.screen.width}",
          },
          "description": "These fields support sending app events to Snapchat through the Conversions API.",
          "key": "app_data",
          "label": "App Data",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "checkin_date": undefined,
            "city": undefined,
            "country": undefined,
            "currency": "{event.properties.currency}",
            "departing_arrival_date": undefined,
            "departing_departure_date": undefined,
            "destination_airport": undefined,
            "hotel_score": undefined,
            "neighborhood": undefined,
            "num_adults": undefined,
            "num_children": undefined,
            "num_infants": undefined,
            "num_items": "{event.properties.quantity}",
            "order_id": "{event.properties.order_id}",
            "origin_airport": undefined,
            "postal_code": undefined,
            "preferred_neighborhoods": undefined,
            "preferred_star_ratings": undefined,
            "region": undefined,
            "returning_arrival_date": undefined,
            "returning_departure_date": undefined,
            "search_string": "{event.properties.query}",
            "sign_up_method": undefined,
            "suggested_destinations": undefined,
            "suggested_hotels": undefined,
            "travel_end": undefined,
            "travel_start": undefined,
            "value": "{event.properties.revenue ?? event.properties.total}",
          },
          "description": "The custom data object can be used to pass custom properties.",
          "key": "custom_data",
          "label": "Custom Data",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": undefined,
          "description": "The Data Processing Options to send to Snapchat. If set to true, Segment will send an array to Snapchat indicating events should be processed with Limited Data Use (LDU) restrictions.",
          "key": "data_processing_options",
          "label": "Data Processing Options",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "choices": [
            {
              "label": "Use Snapchat's Geolocation Logic",
              "value": 0,
            },
            {
              "label": "United States of America",
              "value": 1,
            },
          ],
          "default": undefined,
          "description": "A country that you want to associate to the Data Processing Options. Accepted values are 1, for the United States of America, or 0, to request that Snapchat geolocates the event using IP address. This is required if Data Processing Options is set to true. If nothing is provided, Segment will send 0.",
          "key": "data_processing_options_country",
          "label": "Data Processing Country",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "choices": [
            {
              "label": "Use Snapchat's Geolocation Logic",
              "value": 0,
            },
            {
              "label": "California",
              "value": 1000,
            },
          ],
          "default": undefined,
          "description": "A state that you want to associate to the Data Processing Options. Accepted values are 1000, for California, or 0, to request that Snapchat geolocates the event using IP address. This is required if Data Processing Options is set to true. If nothing is provided, Segment will send 0.",
          "key": "data_processing_options_state",
          "label": "Data Processing State",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The URL of the web page where the event took place.",
          "key": "event_source_url",
          "label": "Event Source URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "brand": undefined,
            "item_category": undefined,
            "item_id": undefined,
          },
          "description": "Use this field to send details of mulitple products / items. This field overrides individual 'Item ID', 'Item Category' and 'Brand' fields. Note: total purchase value is tracked using the 'Price' field",
          "key": "products",
          "label": "Products",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": undefined,
          "description": "[Deprecated] Use Products field.",
          "key": "brands",
          "label": "[Deprecated] Brand",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data sc_click_id field.",
          "key": "click_id",
          "label": "[Deprecated] Click ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Event ID field.",
          "key": "client_dedup_id",
          "label": "[Deprecated] Client Deduplication ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Custom Data currency field.",
          "key": "currency",
          "label": "[Deprecated] Currency",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. No longer supported.",
          "key": "description",
          "label": "[Deprecated] Description",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use App Data deviceName field.",
          "key": "device_model",
          "label": "[Deprecated] Device Model",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data email field.",
          "key": "email",
          "label": "[Deprecated] Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "choices": [
            {
              "label": "Offline",
              "value": "OFFLINE",
            },
            {
              "label": "Web",
              "value": "WEB",
            },
            {
              "label": "Mobile App",
              "value": "MOBILE_APP",
            },
          ],
          "default": undefined,
          "description": "Deprecated. Use Action Source field.",
          "key": "event_conversion_type",
          "label": "[Deprecated] Event Conversion Type",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": undefined,
          "description": "Deprecated. No longer supported.",
          "key": "event_tag",
          "label": "[Deprecated] Event Tag",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Event Name field.",
          "key": "event_type",
          "label": "[Deprecated] Event Type",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data idfv field.",
          "key": "idfv",
          "label": "[Deprecated] Identifier for Vendor",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data client_ip_address field.",
          "key": "ip_address",
          "label": "[Deprecated] IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use products field.",
          "key": "item_category",
          "label": "[Deprecated] Item Category",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use products field.",
          "key": "item_ids",
          "label": "[Deprecated] Item ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. No longer supported.",
          "key": "level",
          "label": "[Deprecated] Level",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data madid field.",
          "key": "mobile_ad_id",
          "label": "[Deprecated] Mobile Ad Identifier",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Custom Data num_items field.",
          "key": "number_items",
          "label": "[Deprecated] Number of Items",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use App Data version field.",
          "key": "os_version",
          "label": "[Deprecated] OS Version",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Event Source URL field.",
          "key": "page_url",
          "label": "[Deprecated] Page URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data phone field.",
          "key": "phone_number",
          "label": "[Deprecated] Phone Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Custom Data value field.",
          "key": "price",
          "label": "[Deprecated] Price",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Custom Data search_string field.",
          "key": "search_string",
          "label": "[Deprecated] Search String",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Custom Data sign_up_method field.",
          "key": "sign_up_method",
          "label": "[Deprecated] Sign Up Method",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Event Timestamp field.",
          "key": "timestamp",
          "label": "[Deprecated] Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Custom Data order_id field.",
          "key": "transaction_id",
          "label": "[Deprecated] Transaction ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data client_user_agent field.",
          "key": "user_agent",
          "label": "[Deprecated] User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data sc_cookie1 field.",
          "key": "uuid_c1",
          "label": "[Deprecated] uuid_c1 Cookie",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "reportConversionEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Share",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Signed Up'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": undefined,
          "description": "The conversion event type. For custom events, you must use one of the predefined event types (i.e. CUSTOM_EVENT_1). Please refer to the possible event types in [Snapchat Marketing API docs](https://marketingapi.snapchat.com/docs/conversion.html#conversion-parameters).",
          "key": "event_name",
          "label": "Event Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "If you are reporting events via more than one method (Snap Pixel, App Ads Kit, Conversions API) you should use the same event_id across all methods. Please refer to the [Snapchat Marketing API docs](https://marketingapi.snapchat.com/docs/conversion.html#deduplication) for information on how this field is used for deduplication against Snap Pixel SDK and App Adds Kit events.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The Epoch timestamp for when the conversion happened. The timestamp cannot be more than 7 days in the past.",
          "key": "event_time",
          "label": "Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "choices": [
            {
              "label": "EMAIL",
              "value": "email",
            },
            {
              "label": "WEBSITE",
              "value": "website",
            },
            {
              "label": "APP",
              "value": "app",
            },
            {
              "label": "PHONE CALL",
              "value": "phone_call",
            },
            {
              "label": "CHAT",
              "value": "chat",
            },
            {
              "label": "PHYSICAL STORE",
              "value": "physical_store",
            },
            {
              "label": "SYSTEM GENERATED",
              "value": "system_generated",
            },
            {
              "label": "OTHER",
              "value": "other",
            },
          ],
          "default": undefined,
          "description": "This field allows you to specify where your conversions occurred.",
          "key": "action_source",
          "label": "Action Source",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": {
            "city": "{event.context.traits.address.city ?? event.properties.address.city}",
            "client_ip_address": "{event.properties.$ip}",
            "client_user_agent": "{event.properties.$raw_user_agent}",
            "country": "{event.context.traits.address.country ?? event.properties.address.country}",
            "dateOfBirth": "{event.context.traits.birthday ?? event.properties.birthday}",
            "email": "{event.properties.email ?? person.properties.email}",
            "externalId": "{person.id ?? event.distinct_id}",
            "firstName": "{event.context.traits.first_name ?? event.properties.first_name}",
            "gender": "{event.context.traits.gender ?? event.properties.gender}",
            "idfv": "{event.properties.$device_id}",
            "lastName": "{event.context.traits.last_name ?? event.properties.last_name}",
            "leadID": undefined,
            "madid": "",
            "phone": "{event.properties.phone ?? person.properties.phone}",
            "sc_click_id": "",
            "sc_cookie1": "",
            "state": "{event.context.traits.address.state ?? event.properties.address.state}",
            "subscriptionID": undefined,
            "zip": "{event.context.traits.address.postalCode ?? event.properties.address.postalCode}",
          },
          "description": "These parameters are a set of identifiers Snapchat can use for targeted attribution. You must provide at least one of the following parameters in your request.",
          "key": "user_data",
          "label": "User Data",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "advertiser_tracking_enabled": undefined,
            "application_tracking_enabled": "",
            "carrier": "",
            "cpuCores": undefined,
            "density": "",
            "deviceName": "{event.properties.$device_model}",
            "deviceTimezone": "{event.properties.$timezone}",
            "freeStorage": undefined,
            "height": "{event.context.screen.height}",
            "locale": "{event.properties.$locale}",
            "longVersion": "{event.event.properties.$app_version}",
            "osVersion": "{event.properties.$os_version}",
            "packageName": "{event.event.properties.$app_namespace}",
            "shortVersion": undefined,
            "storageSize": undefined,
            "timezone": undefined,
            "version": undefined,
            "width": "{event.context.screen.width}",
          },
          "description": "These fields support sending app events to Snapchat through the Conversions API.",
          "key": "app_data",
          "label": "App Data",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "checkin_date": undefined,
            "city": undefined,
            "country": undefined,
            "currency": "{event.properties.currency}",
            "departing_arrival_date": undefined,
            "departing_departure_date": undefined,
            "destination_airport": undefined,
            "hotel_score": undefined,
            "neighborhood": undefined,
            "num_adults": undefined,
            "num_children": undefined,
            "num_infants": undefined,
            "num_items": "{event.properties.quantity}",
            "order_id": "{event.properties.order_id}",
            "origin_airport": undefined,
            "postal_code": undefined,
            "preferred_neighborhoods": undefined,
            "preferred_star_ratings": undefined,
            "region": undefined,
            "returning_arrival_date": undefined,
            "returning_departure_date": undefined,
            "search_string": "{event.properties.query}",
            "sign_up_method": undefined,
            "suggested_destinations": undefined,
            "suggested_hotels": undefined,
            "travel_end": undefined,
            "travel_start": undefined,
            "value": "{event.properties.revenue ?? event.properties.total}",
          },
          "description": "The custom data object can be used to pass custom properties.",
          "key": "custom_data",
          "label": "Custom Data",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": undefined,
          "description": "The Data Processing Options to send to Snapchat. If set to true, Segment will send an array to Snapchat indicating events should be processed with Limited Data Use (LDU) restrictions.",
          "key": "data_processing_options",
          "label": "Data Processing Options",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "choices": [
            {
              "label": "Use Snapchat's Geolocation Logic",
              "value": 0,
            },
            {
              "label": "United States of America",
              "value": 1,
            },
          ],
          "default": undefined,
          "description": "A country that you want to associate to the Data Processing Options. Accepted values are 1, for the United States of America, or 0, to request that Snapchat geolocates the event using IP address. This is required if Data Processing Options is set to true. If nothing is provided, Segment will send 0.",
          "key": "data_processing_options_country",
          "label": "Data Processing Country",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "choices": [
            {
              "label": "Use Snapchat's Geolocation Logic",
              "value": 0,
            },
            {
              "label": "California",
              "value": 1000,
            },
          ],
          "default": undefined,
          "description": "A state that you want to associate to the Data Processing Options. Accepted values are 1000, for California, or 0, to request that Snapchat geolocates the event using IP address. This is required if Data Processing Options is set to true. If nothing is provided, Segment will send 0.",
          "key": "data_processing_options_state",
          "label": "Data Processing State",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The URL of the web page where the event took place.",
          "key": "event_source_url",
          "label": "Event Source URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "brand": undefined,
            "item_category": undefined,
            "item_id": undefined,
          },
          "description": "Use this field to send details of mulitple products / items. This field overrides individual 'Item ID', 'Item Category' and 'Brand' fields. Note: total purchase value is tracked using the 'Price' field",
          "key": "products",
          "label": "Products",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": undefined,
          "description": "[Deprecated] Use Products field.",
          "key": "brands",
          "label": "[Deprecated] Brand",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data sc_click_id field.",
          "key": "click_id",
          "label": "[Deprecated] Click ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Event ID field.",
          "key": "client_dedup_id",
          "label": "[Deprecated] Client Deduplication ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Custom Data currency field.",
          "key": "currency",
          "label": "[Deprecated] Currency",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. No longer supported.",
          "key": "description",
          "label": "[Deprecated] Description",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use App Data deviceName field.",
          "key": "device_model",
          "label": "[Deprecated] Device Model",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data email field.",
          "key": "email",
          "label": "[Deprecated] Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "choices": [
            {
              "label": "Offline",
              "value": "OFFLINE",
            },
            {
              "label": "Web",
              "value": "WEB",
            },
            {
              "label": "Mobile App",
              "value": "MOBILE_APP",
            },
          ],
          "default": undefined,
          "description": "Deprecated. Use Action Source field.",
          "key": "event_conversion_type",
          "label": "[Deprecated] Event Conversion Type",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": undefined,
          "description": "Deprecated. No longer supported.",
          "key": "event_tag",
          "label": "[Deprecated] Event Tag",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Event Name field.",
          "key": "event_type",
          "label": "[Deprecated] Event Type",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data idfv field.",
          "key": "idfv",
          "label": "[Deprecated] Identifier for Vendor",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data client_ip_address field.",
          "key": "ip_address",
          "label": "[Deprecated] IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use products field.",
          "key": "item_category",
          "label": "[Deprecated] Item Category",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use products field.",
          "key": "item_ids",
          "label": "[Deprecated] Item ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. No longer supported.",
          "key": "level",
          "label": "[Deprecated] Level",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data madid field.",
          "key": "mobile_ad_id",
          "label": "[Deprecated] Mobile Ad Identifier",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Custom Data num_items field.",
          "key": "number_items",
          "label": "[Deprecated] Number of Items",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use App Data version field.",
          "key": "os_version",
          "label": "[Deprecated] OS Version",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Event Source URL field.",
          "key": "page_url",
          "label": "[Deprecated] Page URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data phone field.",
          "key": "phone_number",
          "label": "[Deprecated] Phone Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Custom Data value field.",
          "key": "price",
          "label": "[Deprecated] Price",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Custom Data search_string field.",
          "key": "search_string",
          "label": "[Deprecated] Search String",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Custom Data sign_up_method field.",
          "key": "sign_up_method",
          "label": "[Deprecated] Sign Up Method",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Event Timestamp field.",
          "key": "timestamp",
          "label": "[Deprecated] Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Custom Data order_id field.",
          "key": "transaction_id",
          "label": "[Deprecated] Transaction ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data client_user_agent field.",
          "key": "user_agent",
          "label": "[Deprecated] User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data sc_cookie1 field.",
          "key": "uuid_c1",
          "label": "[Deprecated] uuid_c1 Cookie",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "reportConversionEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Sign Up",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Checkout Started'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": undefined,
          "description": "The conversion event type. For custom events, you must use one of the predefined event types (i.e. CUSTOM_EVENT_1). Please refer to the possible event types in [Snapchat Marketing API docs](https://marketingapi.snapchat.com/docs/conversion.html#conversion-parameters).",
          "key": "event_name",
          "label": "Event Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "If you are reporting events via more than one method (Snap Pixel, App Ads Kit, Conversions API) you should use the same event_id across all methods. Please refer to the [Snapchat Marketing API docs](https://marketingapi.snapchat.com/docs/conversion.html#deduplication) for information on how this field is used for deduplication against Snap Pixel SDK and App Adds Kit events.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The Epoch timestamp for when the conversion happened. The timestamp cannot be more than 7 days in the past.",
          "key": "event_time",
          "label": "Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "choices": [
            {
              "label": "EMAIL",
              "value": "email",
            },
            {
              "label": "WEBSITE",
              "value": "website",
            },
            {
              "label": "APP",
              "value": "app",
            },
            {
              "label": "PHONE CALL",
              "value": "phone_call",
            },
            {
              "label": "CHAT",
              "value": "chat",
            },
            {
              "label": "PHYSICAL STORE",
              "value": "physical_store",
            },
            {
              "label": "SYSTEM GENERATED",
              "value": "system_generated",
            },
            {
              "label": "OTHER",
              "value": "other",
            },
          ],
          "default": undefined,
          "description": "This field allows you to specify where your conversions occurred.",
          "key": "action_source",
          "label": "Action Source",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": {
            "city": "{event.context.traits.address.city ?? event.properties.address.city}",
            "client_ip_address": "{event.properties.$ip}",
            "client_user_agent": "{event.properties.$raw_user_agent}",
            "country": "{event.context.traits.address.country ?? event.properties.address.country}",
            "dateOfBirth": "{event.context.traits.birthday ?? event.properties.birthday}",
            "email": "{event.properties.email ?? person.properties.email}",
            "externalId": "{person.id ?? event.distinct_id}",
            "firstName": "{event.context.traits.first_name ?? event.properties.first_name}",
            "gender": "{event.context.traits.gender ?? event.properties.gender}",
            "idfv": "{event.properties.$device_id}",
            "lastName": "{event.context.traits.last_name ?? event.properties.last_name}",
            "leadID": undefined,
            "madid": "",
            "phone": "{event.properties.phone ?? person.properties.phone}",
            "sc_click_id": "",
            "sc_cookie1": "",
            "state": "{event.context.traits.address.state ?? event.properties.address.state}",
            "subscriptionID": undefined,
            "zip": "{event.context.traits.address.postalCode ?? event.properties.address.postalCode}",
          },
          "description": "These parameters are a set of identifiers Snapchat can use for targeted attribution. You must provide at least one of the following parameters in your request.",
          "key": "user_data",
          "label": "User Data",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "advertiser_tracking_enabled": undefined,
            "application_tracking_enabled": "",
            "carrier": "",
            "cpuCores": undefined,
            "density": "",
            "deviceName": "{event.properties.$device_model}",
            "deviceTimezone": "{event.properties.$timezone}",
            "freeStorage": undefined,
            "height": "{event.context.screen.height}",
            "locale": "{event.properties.$locale}",
            "longVersion": "{event.event.properties.$app_version}",
            "osVersion": "{event.properties.$os_version}",
            "packageName": "{event.event.properties.$app_namespace}",
            "shortVersion": undefined,
            "storageSize": undefined,
            "timezone": undefined,
            "version": undefined,
            "width": "{event.context.screen.width}",
          },
          "description": "These fields support sending app events to Snapchat through the Conversions API.",
          "key": "app_data",
          "label": "App Data",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "checkin_date": undefined,
            "city": undefined,
            "country": undefined,
            "currency": "{event.properties.currency}",
            "departing_arrival_date": undefined,
            "departing_departure_date": undefined,
            "destination_airport": undefined,
            "hotel_score": undefined,
            "neighborhood": undefined,
            "num_adults": undefined,
            "num_children": undefined,
            "num_infants": undefined,
            "num_items": "{event.properties.quantity}",
            "order_id": "{event.properties.order_id}",
            "origin_airport": undefined,
            "postal_code": undefined,
            "preferred_neighborhoods": undefined,
            "preferred_star_ratings": undefined,
            "region": undefined,
            "returning_arrival_date": undefined,
            "returning_departure_date": undefined,
            "search_string": "{event.properties.query}",
            "sign_up_method": undefined,
            "suggested_destinations": undefined,
            "suggested_hotels": undefined,
            "travel_end": undefined,
            "travel_start": undefined,
            "value": "{event.properties.revenue ?? event.properties.total}",
          },
          "description": "The custom data object can be used to pass custom properties.",
          "key": "custom_data",
          "label": "Custom Data",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": undefined,
          "description": "The Data Processing Options to send to Snapchat. If set to true, Segment will send an array to Snapchat indicating events should be processed with Limited Data Use (LDU) restrictions.",
          "key": "data_processing_options",
          "label": "Data Processing Options",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "choices": [
            {
              "label": "Use Snapchat's Geolocation Logic",
              "value": 0,
            },
            {
              "label": "United States of America",
              "value": 1,
            },
          ],
          "default": undefined,
          "description": "A country that you want to associate to the Data Processing Options. Accepted values are 1, for the United States of America, or 0, to request that Snapchat geolocates the event using IP address. This is required if Data Processing Options is set to true. If nothing is provided, Segment will send 0.",
          "key": "data_processing_options_country",
          "label": "Data Processing Country",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "choices": [
            {
              "label": "Use Snapchat's Geolocation Logic",
              "value": 0,
            },
            {
              "label": "California",
              "value": 1000,
            },
          ],
          "default": undefined,
          "description": "A state that you want to associate to the Data Processing Options. Accepted values are 1000, for California, or 0, to request that Snapchat geolocates the event using IP address. This is required if Data Processing Options is set to true. If nothing is provided, Segment will send 0.",
          "key": "data_processing_options_state",
          "label": "Data Processing State",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The URL of the web page where the event took place.",
          "key": "event_source_url",
          "label": "Event Source URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "brand": undefined,
            "item_category": undefined,
            "item_id": undefined,
          },
          "description": "Use this field to send details of mulitple products / items. This field overrides individual 'Item ID', 'Item Category' and 'Brand' fields. Note: total purchase value is tracked using the 'Price' field",
          "key": "products",
          "label": "Products",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": undefined,
          "description": "[Deprecated] Use Products field.",
          "key": "brands",
          "label": "[Deprecated] Brand",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data sc_click_id field.",
          "key": "click_id",
          "label": "[Deprecated] Click ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Event ID field.",
          "key": "client_dedup_id",
          "label": "[Deprecated] Client Deduplication ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Custom Data currency field.",
          "key": "currency",
          "label": "[Deprecated] Currency",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. No longer supported.",
          "key": "description",
          "label": "[Deprecated] Description",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use App Data deviceName field.",
          "key": "device_model",
          "label": "[Deprecated] Device Model",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data email field.",
          "key": "email",
          "label": "[Deprecated] Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "choices": [
            {
              "label": "Offline",
              "value": "OFFLINE",
            },
            {
              "label": "Web",
              "value": "WEB",
            },
            {
              "label": "Mobile App",
              "value": "MOBILE_APP",
            },
          ],
          "default": undefined,
          "description": "Deprecated. Use Action Source field.",
          "key": "event_conversion_type",
          "label": "[Deprecated] Event Conversion Type",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": undefined,
          "description": "Deprecated. No longer supported.",
          "key": "event_tag",
          "label": "[Deprecated] Event Tag",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Event Name field.",
          "key": "event_type",
          "label": "[Deprecated] Event Type",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data idfv field.",
          "key": "idfv",
          "label": "[Deprecated] Identifier for Vendor",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data client_ip_address field.",
          "key": "ip_address",
          "label": "[Deprecated] IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use products field.",
          "key": "item_category",
          "label": "[Deprecated] Item Category",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use products field.",
          "key": "item_ids",
          "label": "[Deprecated] Item ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. No longer supported.",
          "key": "level",
          "label": "[Deprecated] Level",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data madid field.",
          "key": "mobile_ad_id",
          "label": "[Deprecated] Mobile Ad Identifier",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Custom Data num_items field.",
          "key": "number_items",
          "label": "[Deprecated] Number of Items",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use App Data version field.",
          "key": "os_version",
          "label": "[Deprecated] OS Version",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Event Source URL field.",
          "key": "page_url",
          "label": "[Deprecated] Page URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data phone field.",
          "key": "phone_number",
          "label": "[Deprecated] Phone Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Custom Data value field.",
          "key": "price",
          "label": "[Deprecated] Price",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Custom Data search_string field.",
          "key": "search_string",
          "label": "[Deprecated] Search String",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Custom Data sign_up_method field.",
          "key": "sign_up_method",
          "label": "[Deprecated] Sign Up Method",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Event Timestamp field.",
          "key": "timestamp",
          "label": "[Deprecated] Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Custom Data order_id field.",
          "key": "transaction_id",
          "label": "[Deprecated] Transaction ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data client_user_agent field.",
          "key": "user_agent",
          "label": "[Deprecated] User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data sc_cookie1 field.",
          "key": "uuid_c1",
          "label": "[Deprecated] uuid_c1 Cookie",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "reportConversionEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Start Checkout",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Product Viewed'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": undefined,
          "description": "The conversion event type. For custom events, you must use one of the predefined event types (i.e. CUSTOM_EVENT_1). Please refer to the possible event types in [Snapchat Marketing API docs](https://marketingapi.snapchat.com/docs/conversion.html#conversion-parameters).",
          "key": "event_name",
          "label": "Event Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "If you are reporting events via more than one method (Snap Pixel, App Ads Kit, Conversions API) you should use the same event_id across all methods. Please refer to the [Snapchat Marketing API docs](https://marketingapi.snapchat.com/docs/conversion.html#deduplication) for information on how this field is used for deduplication against Snap Pixel SDK and App Adds Kit events.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The Epoch timestamp for when the conversion happened. The timestamp cannot be more than 7 days in the past.",
          "key": "event_time",
          "label": "Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "choices": [
            {
              "label": "EMAIL",
              "value": "email",
            },
            {
              "label": "WEBSITE",
              "value": "website",
            },
            {
              "label": "APP",
              "value": "app",
            },
            {
              "label": "PHONE CALL",
              "value": "phone_call",
            },
            {
              "label": "CHAT",
              "value": "chat",
            },
            {
              "label": "PHYSICAL STORE",
              "value": "physical_store",
            },
            {
              "label": "SYSTEM GENERATED",
              "value": "system_generated",
            },
            {
              "label": "OTHER",
              "value": "other",
            },
          ],
          "default": undefined,
          "description": "This field allows you to specify where your conversions occurred.",
          "key": "action_source",
          "label": "Action Source",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": {
            "city": "{event.context.traits.address.city ?? event.properties.address.city}",
            "client_ip_address": "{event.properties.$ip}",
            "client_user_agent": "{event.properties.$raw_user_agent}",
            "country": "{event.context.traits.address.country ?? event.properties.address.country}",
            "dateOfBirth": "{event.context.traits.birthday ?? event.properties.birthday}",
            "email": "{event.properties.email ?? person.properties.email}",
            "externalId": "{person.id ?? event.distinct_id}",
            "firstName": "{event.context.traits.first_name ?? event.properties.first_name}",
            "gender": "{event.context.traits.gender ?? event.properties.gender}",
            "idfv": "{event.properties.$device_id}",
            "lastName": "{event.context.traits.last_name ?? event.properties.last_name}",
            "leadID": undefined,
            "madid": "",
            "phone": "{event.properties.phone ?? person.properties.phone}",
            "sc_click_id": "",
            "sc_cookie1": "",
            "state": "{event.context.traits.address.state ?? event.properties.address.state}",
            "subscriptionID": undefined,
            "zip": "{event.context.traits.address.postalCode ?? event.properties.address.postalCode}",
          },
          "description": "These parameters are a set of identifiers Snapchat can use for targeted attribution. You must provide at least one of the following parameters in your request.",
          "key": "user_data",
          "label": "User Data",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "advertiser_tracking_enabled": undefined,
            "application_tracking_enabled": "",
            "carrier": "",
            "cpuCores": undefined,
            "density": "",
            "deviceName": "{event.properties.$device_model}",
            "deviceTimezone": "{event.properties.$timezone}",
            "freeStorage": undefined,
            "height": "{event.context.screen.height}",
            "locale": "{event.properties.$locale}",
            "longVersion": "{event.event.properties.$app_version}",
            "osVersion": "{event.properties.$os_version}",
            "packageName": "{event.event.properties.$app_namespace}",
            "shortVersion": undefined,
            "storageSize": undefined,
            "timezone": undefined,
            "version": undefined,
            "width": "{event.context.screen.width}",
          },
          "description": "These fields support sending app events to Snapchat through the Conversions API.",
          "key": "app_data",
          "label": "App Data",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "checkin_date": undefined,
            "city": undefined,
            "country": undefined,
            "currency": "{event.properties.currency}",
            "departing_arrival_date": undefined,
            "departing_departure_date": undefined,
            "destination_airport": undefined,
            "hotel_score": undefined,
            "neighborhood": undefined,
            "num_adults": undefined,
            "num_children": undefined,
            "num_infants": undefined,
            "num_items": "{event.properties.quantity}",
            "order_id": "{event.properties.order_id}",
            "origin_airport": undefined,
            "postal_code": undefined,
            "preferred_neighborhoods": undefined,
            "preferred_star_ratings": undefined,
            "region": undefined,
            "returning_arrival_date": undefined,
            "returning_departure_date": undefined,
            "search_string": "{event.properties.query}",
            "sign_up_method": undefined,
            "suggested_destinations": undefined,
            "suggested_hotels": undefined,
            "travel_end": undefined,
            "travel_start": undefined,
            "value": "{event.properties.revenue ?? event.properties.total}",
          },
          "description": "The custom data object can be used to pass custom properties.",
          "key": "custom_data",
          "label": "Custom Data",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": undefined,
          "description": "The Data Processing Options to send to Snapchat. If set to true, Segment will send an array to Snapchat indicating events should be processed with Limited Data Use (LDU) restrictions.",
          "key": "data_processing_options",
          "label": "Data Processing Options",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "choices": [
            {
              "label": "Use Snapchat's Geolocation Logic",
              "value": 0,
            },
            {
              "label": "United States of America",
              "value": 1,
            },
          ],
          "default": undefined,
          "description": "A country that you want to associate to the Data Processing Options. Accepted values are 1, for the United States of America, or 0, to request that Snapchat geolocates the event using IP address. This is required if Data Processing Options is set to true. If nothing is provided, Segment will send 0.",
          "key": "data_processing_options_country",
          "label": "Data Processing Country",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "choices": [
            {
              "label": "Use Snapchat's Geolocation Logic",
              "value": 0,
            },
            {
              "label": "California",
              "value": 1000,
            },
          ],
          "default": undefined,
          "description": "A state that you want to associate to the Data Processing Options. Accepted values are 1000, for California, or 0, to request that Snapchat geolocates the event using IP address. This is required if Data Processing Options is set to true. If nothing is provided, Segment will send 0.",
          "key": "data_processing_options_state",
          "label": "Data Processing State",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The URL of the web page where the event took place.",
          "key": "event_source_url",
          "label": "Event Source URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "brand": undefined,
            "item_category": undefined,
            "item_id": undefined,
          },
          "description": "Use this field to send details of mulitple products / items. This field overrides individual 'Item ID', 'Item Category' and 'Brand' fields. Note: total purchase value is tracked using the 'Price' field",
          "key": "products",
          "label": "Products",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": undefined,
          "description": "[Deprecated] Use Products field.",
          "key": "brands",
          "label": "[Deprecated] Brand",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data sc_click_id field.",
          "key": "click_id",
          "label": "[Deprecated] Click ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Event ID field.",
          "key": "client_dedup_id",
          "label": "[Deprecated] Client Deduplication ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Custom Data currency field.",
          "key": "currency",
          "label": "[Deprecated] Currency",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. No longer supported.",
          "key": "description",
          "label": "[Deprecated] Description",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use App Data deviceName field.",
          "key": "device_model",
          "label": "[Deprecated] Device Model",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data email field.",
          "key": "email",
          "label": "[Deprecated] Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "choices": [
            {
              "label": "Offline",
              "value": "OFFLINE",
            },
            {
              "label": "Web",
              "value": "WEB",
            },
            {
              "label": "Mobile App",
              "value": "MOBILE_APP",
            },
          ],
          "default": undefined,
          "description": "Deprecated. Use Action Source field.",
          "key": "event_conversion_type",
          "label": "[Deprecated] Event Conversion Type",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": undefined,
          "description": "Deprecated. No longer supported.",
          "key": "event_tag",
          "label": "[Deprecated] Event Tag",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Event Name field.",
          "key": "event_type",
          "label": "[Deprecated] Event Type",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data idfv field.",
          "key": "idfv",
          "label": "[Deprecated] Identifier for Vendor",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data client_ip_address field.",
          "key": "ip_address",
          "label": "[Deprecated] IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use products field.",
          "key": "item_category",
          "label": "[Deprecated] Item Category",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use products field.",
          "key": "item_ids",
          "label": "[Deprecated] Item ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. No longer supported.",
          "key": "level",
          "label": "[Deprecated] Level",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data madid field.",
          "key": "mobile_ad_id",
          "label": "[Deprecated] Mobile Ad Identifier",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Custom Data num_items field.",
          "key": "number_items",
          "label": "[Deprecated] Number of Items",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use App Data version field.",
          "key": "os_version",
          "label": "[Deprecated] OS Version",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Event Source URL field.",
          "key": "page_url",
          "label": "[Deprecated] Page URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data phone field.",
          "key": "phone_number",
          "label": "[Deprecated] Phone Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Custom Data value field.",
          "key": "price",
          "label": "[Deprecated] Price",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Custom Data search_string field.",
          "key": "search_string",
          "label": "[Deprecated] Search String",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Custom Data sign_up_method field.",
          "key": "sign_up_method",
          "label": "[Deprecated] Sign Up Method",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Event Timestamp field.",
          "key": "timestamp",
          "label": "[Deprecated] Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use Custom Data order_id field.",
          "key": "transaction_id",
          "label": "[Deprecated] Transaction ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data client_user_agent field.",
          "key": "user_agent",
          "label": "[Deprecated] User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Deprecated. Use User Data sc_cookie1 field.",
          "key": "uuid_c1",
          "label": "[Deprecated] uuid_c1 Cookie",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "reportConversionEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "View Content",
    },
  ],
  "name": "Snap Conversions Api",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 37 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Talon.One",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/talon.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-talon-one",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Created under Developer Settings in the Talon.One Campaign Manager.",
      "key": "apiKey",
      "label": "API Key",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "The base URL of your Talon.One deployment.",
      "key": "deployment",
      "label": "Deployment",
      "required": true,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [],
  "name": "Talon.One",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 38 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Tiktok Conversions",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/conversions.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "tiktok-conversions",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Your TikTok Access Token. Please see TikTok’s [Events API documentation](https://ads.tiktok.com/marketing_api/docs?id=1701890979375106) for information on how to generate an access token via the TikTok Ads Manager or API.",
      "key": "accessToken",
      "label": "Access Token",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "Your TikTok Pixel ID. Please see TikTok’s [Events API documentation](https://ads.tiktok.com/marketing_api/docs?id=1701890979375106) for information on how to find this value.",
      "key": "pixelCode",
      "label": "Pixel Code",
      "required": true,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Order Completed'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": undefined,
          "description": "Conversion event name. Please refer to the "Supported Web Events" section on in TikTok’s [Events API documentation](https://ads.tiktok.com/marketing_api/docs?id=1701890979375106) for accepted event names.",
          "key": "event",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "Any hashed ID that can identify a unique user/session.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Timestamp that the event took place, in ISO 8601 format.",
          "key": "timestamp",
          "label": "Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.phone ?? event.context.traits.phone}",
          "description": "A single phone number or array of phone numbers in E.164 standard format. Segment will hash this value before sending to TikTok. e.g. +14150000000. Segment will hash this value before sending to TikTok.",
          "key": "phone_number",
          "label": "Phone Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.email ?? event.context.traits.email}",
          "description": "A single email address or an array of email addresses. Segment will hash this value before sending to TikTok.",
          "key": "email",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.first_name ?? event.context.traits.first_name}",
          "description": "The first name of the customer. The name should be in lowercase without any punctuation. Special characters are allowed.",
          "key": "first_name",
          "label": "First Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.last_name ?? event.context.traits.last_name}",
          "description": "The last name of the customer. The name should be in lowercase without any punctuation. Special characters are allowed.",
          "key": "last_name",
          "label": "Last Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "city": "{event.properties.address.city ?? event.context.traits.address.city}",
            "country": "{event.properties.address.country ?? event.context.traits.address.country}",
            "state": "{event.properties.address.state ?? event.context.traits.address.state}",
            "zip_code": "{event.properties.address.postal_code ?? event.context.traits.address.postal_code}",
          },
          "description": "The address of the customer.",
          "key": "address",
          "label": "Address",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.properties.order_id}",
          "description": "Order ID of the transaction.",
          "key": "order_id",
          "label": "Order ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.shop_id}",
          "description": "Shop ID of the transaction.",
          "key": "shop_id",
          "label": "Shop ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "Uniquely identifies the user who triggered the conversion event. Segment will hash this value before sending to TikTok. TikTok Conversions Destination supports both string and string[] types for sending external ID(s).",
          "key": "external_id",
          "label": "External ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttclid}",
          "description": "The value of the ttclid used to match website visitor events with TikTok ads. The ttclid is valid for 7 days. See [Set up ttclid](https://ads.tiktok.com/marketing_api/docs?rid=4eezrhr6lg4&id=1681728034437121) for details.",
          "key": "ttclid",
          "label": "TikTok Click ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttp}",
          "description": "TikTok Cookie ID. If you also use Pixel SDK and have enabled cookies, Pixel SDK automatically saves a unique identifier in the \`_ttp\` cookie. The value of \`_ttp\` is used to match website visitor events with TikTok ads. You can extract the value of \`_ttp\` and attach the value here. To learn more about the \`ttp\` parameter, refer to [Events API 2.0 - Send TikTok Cookie](https://ads.tiktok.com/marketing_api/docs?id=%201771100936446977) (\`_ttp\`).",
          "key": "ttp",
          "label": "TikTok Cookie ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.lead_id}",
          "description": "ID of TikTok leads. Every lead will have its own lead_id when exported from TikTok. This feature is in Beta. Please contact your TikTok representative to inquire regarding availability",
          "key": "lead_id",
          "label": "TikTok Lead ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$locale}",
          "description": "The BCP 47 language identifier. For reference, refer to the [IETF BCP 47 standardized code](https://www.rfc-editor.org/rfc/bcp/bcp47.txt).",
          "key": "locale",
          "label": "Locale",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The page URL where the conversion event took place.",
          "key": "url",
          "label": "Page URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$referrer}",
          "description": "The page referrer.",
          "key": "referrer",
          "label": "Page Referrer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "IP address of the browser.",
          "key": "ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "User agent from the user’s device.",
          "key": "user_agent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "brand": undefined,
            "content_category": undefined,
            "content_id": undefined,
            "content_name": undefined,
            "price": undefined,
            "quantity": undefined,
          },
          "description": "Related item details for the event.",
          "key": "contents",
          "label": "Contents",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "choices": [
            {
              "label": "product",
              "value": "product",
            },
            {
              "label": "product_group",
              "value": "product_group",
            },
          ],
          "default": "product",
          "description": "Type of the product item. When the \`content_id\` in the \`Contents\` field is specified as a \`sku_id\`, set this field to \`product\`. When the \`content_id\` in the \`Contents\` field is specified as an \`item_group_id\`, set this field to \`product_group\`.",
          "key": "content_type",
          "label": "Content Type",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.currency}",
          "description": "Currency for the value specified as ISO 4217 code.",
          "key": "currency",
          "label": "Currency",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.value ?? event.properties.revenue}",
          "description": "Value of the order or items sold.",
          "key": "value",
          "label": "Value",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "A string description of the web event.",
          "key": "description",
          "label": "Description",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.query}",
          "description": "The text string that was searched for.",
          "key": "query",
          "label": "Query",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.limited_data_use}",
          "description": "Use this field to flag an event for limited data processing. TikTok will recognize this parameter as a request for limited data processing, and will limit its processing activities accordingly if the event shared occurred in an eligible location. To learn more about the Limited Data Use feature, refer to [Events API 2.0 - Limited Data Use](https://ads.tiktok.com/marketing_api/docs?id=1771101204435970).",
          "key": "limited_data_use",
          "label": "Limited Data Use",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Use this field to specify that events should be test events rather than actual traffic. You can find your Test Event Code in your TikTok Events Manager under the "Test Event" tab. You'll want to remove your Test Event Code when sending real traffic through this integration.",
          "key": "test_event_code",
          "label": "Test Event Code",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "reportWebEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Complete Payment",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Callback Started'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": undefined,
          "description": "Conversion event name. Please refer to the "Supported Web Events" section on in TikTok’s [Events API documentation](https://ads.tiktok.com/marketing_api/docs?id=1701890979375106) for accepted event names.",
          "key": "event",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "Any hashed ID that can identify a unique user/session.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Timestamp that the event took place, in ISO 8601 format.",
          "key": "timestamp",
          "label": "Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.phone ?? event.context.traits.phone}",
          "description": "A single phone number or array of phone numbers in E.164 standard format. Segment will hash this value before sending to TikTok. e.g. +14150000000. Segment will hash this value before sending to TikTok.",
          "key": "phone_number",
          "label": "Phone Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.email ?? event.context.traits.email}",
          "description": "A single email address or an array of email addresses. Segment will hash this value before sending to TikTok.",
          "key": "email",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.first_name ?? event.context.traits.first_name}",
          "description": "The first name of the customer. The name should be in lowercase without any punctuation. Special characters are allowed.",
          "key": "first_name",
          "label": "First Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.last_name ?? event.context.traits.last_name}",
          "description": "The last name of the customer. The name should be in lowercase without any punctuation. Special characters are allowed.",
          "key": "last_name",
          "label": "Last Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "city": "{event.properties.address.city ?? event.context.traits.address.city}",
            "country": "{event.properties.address.country ?? event.context.traits.address.country}",
            "state": "{event.properties.address.state ?? event.context.traits.address.state}",
            "zip_code": "{event.properties.address.postal_code ?? event.context.traits.address.postal_code}",
          },
          "description": "The address of the customer.",
          "key": "address",
          "label": "Address",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.properties.order_id}",
          "description": "Order ID of the transaction.",
          "key": "order_id",
          "label": "Order ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.shop_id}",
          "description": "Shop ID of the transaction.",
          "key": "shop_id",
          "label": "Shop ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "Uniquely identifies the user who triggered the conversion event. Segment will hash this value before sending to TikTok. TikTok Conversions Destination supports both string and string[] types for sending external ID(s).",
          "key": "external_id",
          "label": "External ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttclid}",
          "description": "The value of the ttclid used to match website visitor events with TikTok ads. The ttclid is valid for 7 days. See [Set up ttclid](https://ads.tiktok.com/marketing_api/docs?rid=4eezrhr6lg4&id=1681728034437121) for details.",
          "key": "ttclid",
          "label": "TikTok Click ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttp}",
          "description": "TikTok Cookie ID. If you also use Pixel SDK and have enabled cookies, Pixel SDK automatically saves a unique identifier in the \`_ttp\` cookie. The value of \`_ttp\` is used to match website visitor events with TikTok ads. You can extract the value of \`_ttp\` and attach the value here. To learn more about the \`ttp\` parameter, refer to [Events API 2.0 - Send TikTok Cookie](https://ads.tiktok.com/marketing_api/docs?id=%201771100936446977) (\`_ttp\`).",
          "key": "ttp",
          "label": "TikTok Cookie ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.lead_id}",
          "description": "ID of TikTok leads. Every lead will have its own lead_id when exported from TikTok. This feature is in Beta. Please contact your TikTok representative to inquire regarding availability",
          "key": "lead_id",
          "label": "TikTok Lead ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$locale}",
          "description": "The BCP 47 language identifier. For reference, refer to the [IETF BCP 47 standardized code](https://www.rfc-editor.org/rfc/bcp/bcp47.txt).",
          "key": "locale",
          "label": "Locale",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The page URL where the conversion event took place.",
          "key": "url",
          "label": "Page URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$referrer}",
          "description": "The page referrer.",
          "key": "referrer",
          "label": "Page Referrer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "IP address of the browser.",
          "key": "ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "User agent from the user’s device.",
          "key": "user_agent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "brand": undefined,
            "content_category": undefined,
            "content_id": undefined,
            "content_name": undefined,
            "price": undefined,
            "quantity": undefined,
          },
          "description": "Related item details for the event.",
          "key": "contents",
          "label": "Contents",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "choices": [
            {
              "label": "product",
              "value": "product",
            },
            {
              "label": "product_group",
              "value": "product_group",
            },
          ],
          "default": "product",
          "description": "Type of the product item. When the \`content_id\` in the \`Contents\` field is specified as a \`sku_id\`, set this field to \`product\`. When the \`content_id\` in the \`Contents\` field is specified as an \`item_group_id\`, set this field to \`product_group\`.",
          "key": "content_type",
          "label": "Content Type",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.currency}",
          "description": "Currency for the value specified as ISO 4217 code.",
          "key": "currency",
          "label": "Currency",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.value ?? event.properties.revenue}",
          "description": "Value of the order or items sold.",
          "key": "value",
          "label": "Value",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "A string description of the web event.",
          "key": "description",
          "label": "Description",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.query}",
          "description": "The text string that was searched for.",
          "key": "query",
          "label": "Query",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.limited_data_use}",
          "description": "Use this field to flag an event for limited data processing. TikTok will recognize this parameter as a request for limited data processing, and will limit its processing activities accordingly if the event shared occurred in an eligible location. To learn more about the Limited Data Use feature, refer to [Events API 2.0 - Limited Data Use](https://ads.tiktok.com/marketing_api/docs?id=1771101204435970).",
          "key": "limited_data_use",
          "label": "Limited Data Use",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Use this field to specify that events should be test events rather than actual traffic. You can find your Test Event Code in your TikTok Events Manager under the "Test Event" tab. You'll want to remove your Test Event Code when sending real traffic through this integration.",
          "key": "test_event_code",
          "label": "Test Event Code",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "reportWebEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Contact",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Subscription Created'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": undefined,
          "description": "Conversion event name. Please refer to the "Supported Web Events" section on in TikTok’s [Events API documentation](https://ads.tiktok.com/marketing_api/docs?id=1701890979375106) for accepted event names.",
          "key": "event",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "Any hashed ID that can identify a unique user/session.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Timestamp that the event took place, in ISO 8601 format.",
          "key": "timestamp",
          "label": "Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.phone ?? event.context.traits.phone}",
          "description": "A single phone number or array of phone numbers in E.164 standard format. Segment will hash this value before sending to TikTok. e.g. +14150000000. Segment will hash this value before sending to TikTok.",
          "key": "phone_number",
          "label": "Phone Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.email ?? event.context.traits.email}",
          "description": "A single email address or an array of email addresses. Segment will hash this value before sending to TikTok.",
          "key": "email",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.first_name ?? event.context.traits.first_name}",
          "description": "The first name of the customer. The name should be in lowercase without any punctuation. Special characters are allowed.",
          "key": "first_name",
          "label": "First Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.last_name ?? event.context.traits.last_name}",
          "description": "The last name of the customer. The name should be in lowercase without any punctuation. Special characters are allowed.",
          "key": "last_name",
          "label": "Last Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "city": "{event.properties.address.city ?? event.context.traits.address.city}",
            "country": "{event.properties.address.country ?? event.context.traits.address.country}",
            "state": "{event.properties.address.state ?? event.context.traits.address.state}",
            "zip_code": "{event.properties.address.postal_code ?? event.context.traits.address.postal_code}",
          },
          "description": "The address of the customer.",
          "key": "address",
          "label": "Address",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.properties.order_id}",
          "description": "Order ID of the transaction.",
          "key": "order_id",
          "label": "Order ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.shop_id}",
          "description": "Shop ID of the transaction.",
          "key": "shop_id",
          "label": "Shop ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "Uniquely identifies the user who triggered the conversion event. Segment will hash this value before sending to TikTok. TikTok Conversions Destination supports both string and string[] types for sending external ID(s).",
          "key": "external_id",
          "label": "External ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttclid}",
          "description": "The value of the ttclid used to match website visitor events with TikTok ads. The ttclid is valid for 7 days. See [Set up ttclid](https://ads.tiktok.com/marketing_api/docs?rid=4eezrhr6lg4&id=1681728034437121) for details.",
          "key": "ttclid",
          "label": "TikTok Click ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttp}",
          "description": "TikTok Cookie ID. If you also use Pixel SDK and have enabled cookies, Pixel SDK automatically saves a unique identifier in the \`_ttp\` cookie. The value of \`_ttp\` is used to match website visitor events with TikTok ads. You can extract the value of \`_ttp\` and attach the value here. To learn more about the \`ttp\` parameter, refer to [Events API 2.0 - Send TikTok Cookie](https://ads.tiktok.com/marketing_api/docs?id=%201771100936446977) (\`_ttp\`).",
          "key": "ttp",
          "label": "TikTok Cookie ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.lead_id}",
          "description": "ID of TikTok leads. Every lead will have its own lead_id when exported from TikTok. This feature is in Beta. Please contact your TikTok representative to inquire regarding availability",
          "key": "lead_id",
          "label": "TikTok Lead ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$locale}",
          "description": "The BCP 47 language identifier. For reference, refer to the [IETF BCP 47 standardized code](https://www.rfc-editor.org/rfc/bcp/bcp47.txt).",
          "key": "locale",
          "label": "Locale",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The page URL where the conversion event took place.",
          "key": "url",
          "label": "Page URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$referrer}",
          "description": "The page referrer.",
          "key": "referrer",
          "label": "Page Referrer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "IP address of the browser.",
          "key": "ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "User agent from the user’s device.",
          "key": "user_agent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "brand": undefined,
            "content_category": undefined,
            "content_id": undefined,
            "content_name": undefined,
            "price": undefined,
            "quantity": undefined,
          },
          "description": "Related item details for the event.",
          "key": "contents",
          "label": "Contents",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "choices": [
            {
              "label": "product",
              "value": "product",
            },
            {
              "label": "product_group",
              "value": "product_group",
            },
          ],
          "default": "product",
          "description": "Type of the product item. When the \`content_id\` in the \`Contents\` field is specified as a \`sku_id\`, set this field to \`product\`. When the \`content_id\` in the \`Contents\` field is specified as an \`item_group_id\`, set this field to \`product_group\`.",
          "key": "content_type",
          "label": "Content Type",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.currency}",
          "description": "Currency for the value specified as ISO 4217 code.",
          "key": "currency",
          "label": "Currency",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.value ?? event.properties.revenue}",
          "description": "Value of the order or items sold.",
          "key": "value",
          "label": "Value",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "A string description of the web event.",
          "key": "description",
          "label": "Description",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.query}",
          "description": "The text string that was searched for.",
          "key": "query",
          "label": "Query",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.limited_data_use}",
          "description": "Use this field to flag an event for limited data processing. TikTok will recognize this parameter as a request for limited data processing, and will limit its processing activities accordingly if the event shared occurred in an eligible location. To learn more about the Limited Data Use feature, refer to [Events API 2.0 - Limited Data Use](https://ads.tiktok.com/marketing_api/docs?id=1771101204435970).",
          "key": "limited_data_use",
          "label": "Limited Data Use",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Use this field to specify that events should be test events rather than actual traffic. You can find your Test Event Code in your TikTok Events Manager under the "Test Event" tab. You'll want to remove your Test Event Code when sending real traffic through this integration.",
          "key": "test_event_code",
          "label": "Test Event Code",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "reportWebEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Subscribe",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Form Submitted'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": undefined,
          "description": "Conversion event name. Please refer to the "Supported Web Events" section on in TikTok’s [Events API documentation](https://ads.tiktok.com/marketing_api/docs?id=1701890979375106) for accepted event names.",
          "key": "event",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "Any hashed ID that can identify a unique user/session.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Timestamp that the event took place, in ISO 8601 format.",
          "key": "timestamp",
          "label": "Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.phone ?? event.context.traits.phone}",
          "description": "A single phone number or array of phone numbers in E.164 standard format. Segment will hash this value before sending to TikTok. e.g. +14150000000. Segment will hash this value before sending to TikTok.",
          "key": "phone_number",
          "label": "Phone Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.email ?? event.context.traits.email}",
          "description": "A single email address or an array of email addresses. Segment will hash this value before sending to TikTok.",
          "key": "email",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.first_name ?? event.context.traits.first_name}",
          "description": "The first name of the customer. The name should be in lowercase without any punctuation. Special characters are allowed.",
          "key": "first_name",
          "label": "First Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.last_name ?? event.context.traits.last_name}",
          "description": "The last name of the customer. The name should be in lowercase without any punctuation. Special characters are allowed.",
          "key": "last_name",
          "label": "Last Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "city": "{event.properties.address.city ?? event.context.traits.address.city}",
            "country": "{event.properties.address.country ?? event.context.traits.address.country}",
            "state": "{event.properties.address.state ?? event.context.traits.address.state}",
            "zip_code": "{event.properties.address.postal_code ?? event.context.traits.address.postal_code}",
          },
          "description": "The address of the customer.",
          "key": "address",
          "label": "Address",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.properties.order_id}",
          "description": "Order ID of the transaction.",
          "key": "order_id",
          "label": "Order ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.shop_id}",
          "description": "Shop ID of the transaction.",
          "key": "shop_id",
          "label": "Shop ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "Uniquely identifies the user who triggered the conversion event. Segment will hash this value before sending to TikTok. TikTok Conversions Destination supports both string and string[] types for sending external ID(s).",
          "key": "external_id",
          "label": "External ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttclid}",
          "description": "The value of the ttclid used to match website visitor events with TikTok ads. The ttclid is valid for 7 days. See [Set up ttclid](https://ads.tiktok.com/marketing_api/docs?rid=4eezrhr6lg4&id=1681728034437121) for details.",
          "key": "ttclid",
          "label": "TikTok Click ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttp}",
          "description": "TikTok Cookie ID. If you also use Pixel SDK and have enabled cookies, Pixel SDK automatically saves a unique identifier in the \`_ttp\` cookie. The value of \`_ttp\` is used to match website visitor events with TikTok ads. You can extract the value of \`_ttp\` and attach the value here. To learn more about the \`ttp\` parameter, refer to [Events API 2.0 - Send TikTok Cookie](https://ads.tiktok.com/marketing_api/docs?id=%201771100936446977) (\`_ttp\`).",
          "key": "ttp",
          "label": "TikTok Cookie ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.lead_id}",
          "description": "ID of TikTok leads. Every lead will have its own lead_id when exported from TikTok. This feature is in Beta. Please contact your TikTok representative to inquire regarding availability",
          "key": "lead_id",
          "label": "TikTok Lead ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$locale}",
          "description": "The BCP 47 language identifier. For reference, refer to the [IETF BCP 47 standardized code](https://www.rfc-editor.org/rfc/bcp/bcp47.txt).",
          "key": "locale",
          "label": "Locale",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The page URL where the conversion event took place.",
          "key": "url",
          "label": "Page URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$referrer}",
          "description": "The page referrer.",
          "key": "referrer",
          "label": "Page Referrer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "IP address of the browser.",
          "key": "ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "User agent from the user’s device.",
          "key": "user_agent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "brand": undefined,
            "content_category": undefined,
            "content_id": undefined,
            "content_name": undefined,
            "price": undefined,
            "quantity": undefined,
          },
          "description": "Related item details for the event.",
          "key": "contents",
          "label": "Contents",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "choices": [
            {
              "label": "product",
              "value": "product",
            },
            {
              "label": "product_group",
              "value": "product_group",
            },
          ],
          "default": "product",
          "description": "Type of the product item. When the \`content_id\` in the \`Contents\` field is specified as a \`sku_id\`, set this field to \`product\`. When the \`content_id\` in the \`Contents\` field is specified as an \`item_group_id\`, set this field to \`product_group\`.",
          "key": "content_type",
          "label": "Content Type",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.currency}",
          "description": "Currency for the value specified as ISO 4217 code.",
          "key": "currency",
          "label": "Currency",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.value ?? event.properties.revenue}",
          "description": "Value of the order or items sold.",
          "key": "value",
          "label": "Value",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "A string description of the web event.",
          "key": "description",
          "label": "Description",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.query}",
          "description": "The text string that was searched for.",
          "key": "query",
          "label": "Query",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.limited_data_use}",
          "description": "Use this field to flag an event for limited data processing. TikTok will recognize this parameter as a request for limited data processing, and will limit its processing activities accordingly if the event shared occurred in an eligible location. To learn more about the Limited Data Use feature, refer to [Events API 2.0 - Limited Data Use](https://ads.tiktok.com/marketing_api/docs?id=1771101204435970).",
          "key": "limited_data_use",
          "label": "Limited Data Use",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Use this field to specify that events should be test events rather than actual traffic. You can find your Test Event Code in your TikTok Events Manager under the "Test Event" tab. You'll want to remove your Test Event Code when sending real traffic through this integration.",
          "key": "test_event_code",
          "label": "Test Event Code",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "reportWebEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Submit Form",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "type='page'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": undefined,
          "description": "Conversion event name. Please refer to the "Supported Web Events" section on in TikTok’s [Events API documentation](https://ads.tiktok.com/marketing_api/docs?id=1701890979375106) for accepted event names.",
          "key": "event",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "Any hashed ID that can identify a unique user/session.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Timestamp that the event took place, in ISO 8601 format.",
          "key": "timestamp",
          "label": "Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.phone ?? event.context.traits.phone}",
          "description": "A single phone number or array of phone numbers in E.164 standard format. Segment will hash this value before sending to TikTok. e.g. +14150000000. Segment will hash this value before sending to TikTok.",
          "key": "phone_number",
          "label": "Phone Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.email ?? event.context.traits.email}",
          "description": "A single email address or an array of email addresses. Segment will hash this value before sending to TikTok.",
          "key": "email",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.first_name ?? event.context.traits.first_name}",
          "description": "The first name of the customer. The name should be in lowercase without any punctuation. Special characters are allowed.",
          "key": "first_name",
          "label": "First Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.last_name ?? event.context.traits.last_name}",
          "description": "The last name of the customer. The name should be in lowercase without any punctuation. Special characters are allowed.",
          "key": "last_name",
          "label": "Last Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "city": "{event.properties.address.city ?? event.context.traits.address.city}",
            "country": "{event.properties.address.country ?? event.context.traits.address.country}",
            "state": "{event.properties.address.state ?? event.context.traits.address.state}",
            "zip_code": "{event.properties.address.postal_code ?? event.context.traits.address.postal_code}",
          },
          "description": "The address of the customer.",
          "key": "address",
          "label": "Address",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.properties.order_id}",
          "description": "Order ID of the transaction.",
          "key": "order_id",
          "label": "Order ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.shop_id}",
          "description": "Shop ID of the transaction.",
          "key": "shop_id",
          "label": "Shop ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "Uniquely identifies the user who triggered the conversion event. Segment will hash this value before sending to TikTok. TikTok Conversions Destination supports both string and string[] types for sending external ID(s).",
          "key": "external_id",
          "label": "External ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttclid}",
          "description": "The value of the ttclid used to match website visitor events with TikTok ads. The ttclid is valid for 7 days. See [Set up ttclid](https://ads.tiktok.com/marketing_api/docs?rid=4eezrhr6lg4&id=1681728034437121) for details.",
          "key": "ttclid",
          "label": "TikTok Click ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttp}",
          "description": "TikTok Cookie ID. If you also use Pixel SDK and have enabled cookies, Pixel SDK automatically saves a unique identifier in the \`_ttp\` cookie. The value of \`_ttp\` is used to match website visitor events with TikTok ads. You can extract the value of \`_ttp\` and attach the value here. To learn more about the \`ttp\` parameter, refer to [Events API 2.0 - Send TikTok Cookie](https://ads.tiktok.com/marketing_api/docs?id=%201771100936446977) (\`_ttp\`).",
          "key": "ttp",
          "label": "TikTok Cookie ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.lead_id}",
          "description": "ID of TikTok leads. Every lead will have its own lead_id when exported from TikTok. This feature is in Beta. Please contact your TikTok representative to inquire regarding availability",
          "key": "lead_id",
          "label": "TikTok Lead ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$locale}",
          "description": "The BCP 47 language identifier. For reference, refer to the [IETF BCP 47 standardized code](https://www.rfc-editor.org/rfc/bcp/bcp47.txt).",
          "key": "locale",
          "label": "Locale",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The page URL where the conversion event took place.",
          "key": "url",
          "label": "Page URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$referrer}",
          "description": "The page referrer.",
          "key": "referrer",
          "label": "Page Referrer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "IP address of the browser.",
          "key": "ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "User agent from the user’s device.",
          "key": "user_agent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "brand": undefined,
            "content_category": undefined,
            "content_id": undefined,
            "content_name": undefined,
            "price": undefined,
            "quantity": undefined,
          },
          "description": "Related item details for the event.",
          "key": "contents",
          "label": "Contents",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "choices": [
            {
              "label": "product",
              "value": "product",
            },
            {
              "label": "product_group",
              "value": "product_group",
            },
          ],
          "default": "product",
          "description": "Type of the product item. When the \`content_id\` in the \`Contents\` field is specified as a \`sku_id\`, set this field to \`product\`. When the \`content_id\` in the \`Contents\` field is specified as an \`item_group_id\`, set this field to \`product_group\`.",
          "key": "content_type",
          "label": "Content Type",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.currency}",
          "description": "Currency for the value specified as ISO 4217 code.",
          "key": "currency",
          "label": "Currency",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.value ?? event.properties.revenue}",
          "description": "Value of the order or items sold.",
          "key": "value",
          "label": "Value",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "A string description of the web event.",
          "key": "description",
          "label": "Description",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.query}",
          "description": "The text string that was searched for.",
          "key": "query",
          "label": "Query",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.limited_data_use}",
          "description": "Use this field to flag an event for limited data processing. TikTok will recognize this parameter as a request for limited data processing, and will limit its processing activities accordingly if the event shared occurred in an eligible location. To learn more about the Limited Data Use feature, refer to [Events API 2.0 - Limited Data Use](https://ads.tiktok.com/marketing_api/docs?id=1771101204435970).",
          "key": "limited_data_use",
          "label": "Limited Data Use",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Use this field to specify that events should be test events rather than actual traffic. You can find your Test Event Code in your TikTok Events Manager under the "Test Event" tab. You'll want to remove your Test Event Code when sending real traffic through this integration.",
          "key": "test_event_code",
          "label": "Test Event Code",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "reportWebEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Page View",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Product Viewed'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": undefined,
          "description": "Conversion event name. Please refer to the "Supported Web Events" section on in TikTok’s [Events API documentation](https://ads.tiktok.com/marketing_api/docs?id=1701890979375106) for accepted event names.",
          "key": "event",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "Any hashed ID that can identify a unique user/session.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Timestamp that the event took place, in ISO 8601 format.",
          "key": "timestamp",
          "label": "Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.phone ?? event.context.traits.phone}",
          "description": "A single phone number or array of phone numbers in E.164 standard format. Segment will hash this value before sending to TikTok. e.g. +14150000000. Segment will hash this value before sending to TikTok.",
          "key": "phone_number",
          "label": "Phone Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.email ?? event.context.traits.email}",
          "description": "A single email address or an array of email addresses. Segment will hash this value before sending to TikTok.",
          "key": "email",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.first_name ?? event.context.traits.first_name}",
          "description": "The first name of the customer. The name should be in lowercase without any punctuation. Special characters are allowed.",
          "key": "first_name",
          "label": "First Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.last_name ?? event.context.traits.last_name}",
          "description": "The last name of the customer. The name should be in lowercase without any punctuation. Special characters are allowed.",
          "key": "last_name",
          "label": "Last Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "city": "{event.properties.address.city ?? event.context.traits.address.city}",
            "country": "{event.properties.address.country ?? event.context.traits.address.country}",
            "state": "{event.properties.address.state ?? event.context.traits.address.state}",
            "zip_code": "{event.properties.address.postal_code ?? event.context.traits.address.postal_code}",
          },
          "description": "The address of the customer.",
          "key": "address",
          "label": "Address",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.properties.order_id}",
          "description": "Order ID of the transaction.",
          "key": "order_id",
          "label": "Order ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.shop_id}",
          "description": "Shop ID of the transaction.",
          "key": "shop_id",
          "label": "Shop ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "Uniquely identifies the user who triggered the conversion event. Segment will hash this value before sending to TikTok. TikTok Conversions Destination supports both string and string[] types for sending external ID(s).",
          "key": "external_id",
          "label": "External ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttclid}",
          "description": "The value of the ttclid used to match website visitor events with TikTok ads. The ttclid is valid for 7 days. See [Set up ttclid](https://ads.tiktok.com/marketing_api/docs?rid=4eezrhr6lg4&id=1681728034437121) for details.",
          "key": "ttclid",
          "label": "TikTok Click ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttp}",
          "description": "TikTok Cookie ID. If you also use Pixel SDK and have enabled cookies, Pixel SDK automatically saves a unique identifier in the \`_ttp\` cookie. The value of \`_ttp\` is used to match website visitor events with TikTok ads. You can extract the value of \`_ttp\` and attach the value here. To learn more about the \`ttp\` parameter, refer to [Events API 2.0 - Send TikTok Cookie](https://ads.tiktok.com/marketing_api/docs?id=%201771100936446977) (\`_ttp\`).",
          "key": "ttp",
          "label": "TikTok Cookie ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.lead_id}",
          "description": "ID of TikTok leads. Every lead will have its own lead_id when exported from TikTok. This feature is in Beta. Please contact your TikTok representative to inquire regarding availability",
          "key": "lead_id",
          "label": "TikTok Lead ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$locale}",
          "description": "The BCP 47 language identifier. For reference, refer to the [IETF BCP 47 standardized code](https://www.rfc-editor.org/rfc/bcp/bcp47.txt).",
          "key": "locale",
          "label": "Locale",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The page URL where the conversion event took place.",
          "key": "url",
          "label": "Page URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$referrer}",
          "description": "The page referrer.",
          "key": "referrer",
          "label": "Page Referrer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "IP address of the browser.",
          "key": "ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "User agent from the user’s device.",
          "key": "user_agent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "brand": undefined,
            "content_category": undefined,
            "content_id": undefined,
            "content_name": undefined,
            "price": undefined,
            "quantity": undefined,
          },
          "description": "Related item details for the event.",
          "key": "contents",
          "label": "Contents",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "choices": [
            {
              "label": "product",
              "value": "product",
            },
            {
              "label": "product_group",
              "value": "product_group",
            },
          ],
          "default": "product",
          "description": "Type of the product item. When the \`content_id\` in the \`Contents\` field is specified as a \`sku_id\`, set this field to \`product\`. When the \`content_id\` in the \`Contents\` field is specified as an \`item_group_id\`, set this field to \`product_group\`.",
          "key": "content_type",
          "label": "Content Type",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.currency}",
          "description": "Currency for the value specified as ISO 4217 code.",
          "key": "currency",
          "label": "Currency",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.value ?? event.properties.revenue}",
          "description": "Value of the order or items sold.",
          "key": "value",
          "label": "Value",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "A string description of the web event.",
          "key": "description",
          "label": "Description",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.query}",
          "description": "The text string that was searched for.",
          "key": "query",
          "label": "Query",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.limited_data_use}",
          "description": "Use this field to flag an event for limited data processing. TikTok will recognize this parameter as a request for limited data processing, and will limit its processing activities accordingly if the event shared occurred in an eligible location. To learn more about the Limited Data Use feature, refer to [Events API 2.0 - Limited Data Use](https://ads.tiktok.com/marketing_api/docs?id=1771101204435970).",
          "key": "limited_data_use",
          "label": "Limited Data Use",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Use this field to specify that events should be test events rather than actual traffic. You can find your Test Event Code in your TikTok Events Manager under the "Test Event" tab. You'll want to remove your Test Event Code when sending real traffic through this integration.",
          "key": "test_event_code",
          "label": "Test Event Code",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "reportWebEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "View Content",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Product Clicked'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": undefined,
          "description": "Conversion event name. Please refer to the "Supported Web Events" section on in TikTok’s [Events API documentation](https://ads.tiktok.com/marketing_api/docs?id=1701890979375106) for accepted event names.",
          "key": "event",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "Any hashed ID that can identify a unique user/session.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Timestamp that the event took place, in ISO 8601 format.",
          "key": "timestamp",
          "label": "Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.phone ?? event.context.traits.phone}",
          "description": "A single phone number or array of phone numbers in E.164 standard format. Segment will hash this value before sending to TikTok. e.g. +14150000000. Segment will hash this value before sending to TikTok.",
          "key": "phone_number",
          "label": "Phone Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.email ?? event.context.traits.email}",
          "description": "A single email address or an array of email addresses. Segment will hash this value before sending to TikTok.",
          "key": "email",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.first_name ?? event.context.traits.first_name}",
          "description": "The first name of the customer. The name should be in lowercase without any punctuation. Special characters are allowed.",
          "key": "first_name",
          "label": "First Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.last_name ?? event.context.traits.last_name}",
          "description": "The last name of the customer. The name should be in lowercase without any punctuation. Special characters are allowed.",
          "key": "last_name",
          "label": "Last Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "city": "{event.properties.address.city ?? event.context.traits.address.city}",
            "country": "{event.properties.address.country ?? event.context.traits.address.country}",
            "state": "{event.properties.address.state ?? event.context.traits.address.state}",
            "zip_code": "{event.properties.address.postal_code ?? event.context.traits.address.postal_code}",
          },
          "description": "The address of the customer.",
          "key": "address",
          "label": "Address",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.properties.order_id}",
          "description": "Order ID of the transaction.",
          "key": "order_id",
          "label": "Order ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.shop_id}",
          "description": "Shop ID of the transaction.",
          "key": "shop_id",
          "label": "Shop ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "Uniquely identifies the user who triggered the conversion event. Segment will hash this value before sending to TikTok. TikTok Conversions Destination supports both string and string[] types for sending external ID(s).",
          "key": "external_id",
          "label": "External ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttclid}",
          "description": "The value of the ttclid used to match website visitor events with TikTok ads. The ttclid is valid for 7 days. See [Set up ttclid](https://ads.tiktok.com/marketing_api/docs?rid=4eezrhr6lg4&id=1681728034437121) for details.",
          "key": "ttclid",
          "label": "TikTok Click ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttp}",
          "description": "TikTok Cookie ID. If you also use Pixel SDK and have enabled cookies, Pixel SDK automatically saves a unique identifier in the \`_ttp\` cookie. The value of \`_ttp\` is used to match website visitor events with TikTok ads. You can extract the value of \`_ttp\` and attach the value here. To learn more about the \`ttp\` parameter, refer to [Events API 2.0 - Send TikTok Cookie](https://ads.tiktok.com/marketing_api/docs?id=%201771100936446977) (\`_ttp\`).",
          "key": "ttp",
          "label": "TikTok Cookie ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.lead_id}",
          "description": "ID of TikTok leads. Every lead will have its own lead_id when exported from TikTok. This feature is in Beta. Please contact your TikTok representative to inquire regarding availability",
          "key": "lead_id",
          "label": "TikTok Lead ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$locale}",
          "description": "The BCP 47 language identifier. For reference, refer to the [IETF BCP 47 standardized code](https://www.rfc-editor.org/rfc/bcp/bcp47.txt).",
          "key": "locale",
          "label": "Locale",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The page URL where the conversion event took place.",
          "key": "url",
          "label": "Page URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$referrer}",
          "description": "The page referrer.",
          "key": "referrer",
          "label": "Page Referrer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "IP address of the browser.",
          "key": "ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "User agent from the user’s device.",
          "key": "user_agent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "brand": undefined,
            "content_category": undefined,
            "content_id": undefined,
            "content_name": undefined,
            "price": undefined,
            "quantity": undefined,
          },
          "description": "Related item details for the event.",
          "key": "contents",
          "label": "Contents",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "choices": [
            {
              "label": "product",
              "value": "product",
            },
            {
              "label": "product_group",
              "value": "product_group",
            },
          ],
          "default": "product",
          "description": "Type of the product item. When the \`content_id\` in the \`Contents\` field is specified as a \`sku_id\`, set this field to \`product\`. When the \`content_id\` in the \`Contents\` field is specified as an \`item_group_id\`, set this field to \`product_group\`.",
          "key": "content_type",
          "label": "Content Type",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.currency}",
          "description": "Currency for the value specified as ISO 4217 code.",
          "key": "currency",
          "label": "Currency",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.value ?? event.properties.revenue}",
          "description": "Value of the order or items sold.",
          "key": "value",
          "label": "Value",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "A string description of the web event.",
          "key": "description",
          "label": "Description",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.query}",
          "description": "The text string that was searched for.",
          "key": "query",
          "label": "Query",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.limited_data_use}",
          "description": "Use this field to flag an event for limited data processing. TikTok will recognize this parameter as a request for limited data processing, and will limit its processing activities accordingly if the event shared occurred in an eligible location. To learn more about the Limited Data Use feature, refer to [Events API 2.0 - Limited Data Use](https://ads.tiktok.com/marketing_api/docs?id=1771101204435970).",
          "key": "limited_data_use",
          "label": "Limited Data Use",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Use this field to specify that events should be test events rather than actual traffic. You can find your Test Event Code in your TikTok Events Manager under the "Test Event" tab. You'll want to remove your Test Event Code when sending real traffic through this integration.",
          "key": "test_event_code",
          "label": "Test Event Code",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "reportWebEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Click Button",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Products Searched'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": undefined,
          "description": "Conversion event name. Please refer to the "Supported Web Events" section on in TikTok’s [Events API documentation](https://ads.tiktok.com/marketing_api/docs?id=1701890979375106) for accepted event names.",
          "key": "event",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "Any hashed ID that can identify a unique user/session.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Timestamp that the event took place, in ISO 8601 format.",
          "key": "timestamp",
          "label": "Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.phone ?? event.context.traits.phone}",
          "description": "A single phone number or array of phone numbers in E.164 standard format. Segment will hash this value before sending to TikTok. e.g. +14150000000. Segment will hash this value before sending to TikTok.",
          "key": "phone_number",
          "label": "Phone Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.email ?? event.context.traits.email}",
          "description": "A single email address or an array of email addresses. Segment will hash this value before sending to TikTok.",
          "key": "email",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.first_name ?? event.context.traits.first_name}",
          "description": "The first name of the customer. The name should be in lowercase without any punctuation. Special characters are allowed.",
          "key": "first_name",
          "label": "First Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.last_name ?? event.context.traits.last_name}",
          "description": "The last name of the customer. The name should be in lowercase without any punctuation. Special characters are allowed.",
          "key": "last_name",
          "label": "Last Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "city": "{event.properties.address.city ?? event.context.traits.address.city}",
            "country": "{event.properties.address.country ?? event.context.traits.address.country}",
            "state": "{event.properties.address.state ?? event.context.traits.address.state}",
            "zip_code": "{event.properties.address.postal_code ?? event.context.traits.address.postal_code}",
          },
          "description": "The address of the customer.",
          "key": "address",
          "label": "Address",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.properties.order_id}",
          "description": "Order ID of the transaction.",
          "key": "order_id",
          "label": "Order ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.shop_id}",
          "description": "Shop ID of the transaction.",
          "key": "shop_id",
          "label": "Shop ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "Uniquely identifies the user who triggered the conversion event. Segment will hash this value before sending to TikTok. TikTok Conversions Destination supports both string and string[] types for sending external ID(s).",
          "key": "external_id",
          "label": "External ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttclid}",
          "description": "The value of the ttclid used to match website visitor events with TikTok ads. The ttclid is valid for 7 days. See [Set up ttclid](https://ads.tiktok.com/marketing_api/docs?rid=4eezrhr6lg4&id=1681728034437121) for details.",
          "key": "ttclid",
          "label": "TikTok Click ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttp}",
          "description": "TikTok Cookie ID. If you also use Pixel SDK and have enabled cookies, Pixel SDK automatically saves a unique identifier in the \`_ttp\` cookie. The value of \`_ttp\` is used to match website visitor events with TikTok ads. You can extract the value of \`_ttp\` and attach the value here. To learn more about the \`ttp\` parameter, refer to [Events API 2.0 - Send TikTok Cookie](https://ads.tiktok.com/marketing_api/docs?id=%201771100936446977) (\`_ttp\`).",
          "key": "ttp",
          "label": "TikTok Cookie ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.lead_id}",
          "description": "ID of TikTok leads. Every lead will have its own lead_id when exported from TikTok. This feature is in Beta. Please contact your TikTok representative to inquire regarding availability",
          "key": "lead_id",
          "label": "TikTok Lead ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$locale}",
          "description": "The BCP 47 language identifier. For reference, refer to the [IETF BCP 47 standardized code](https://www.rfc-editor.org/rfc/bcp/bcp47.txt).",
          "key": "locale",
          "label": "Locale",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The page URL where the conversion event took place.",
          "key": "url",
          "label": "Page URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$referrer}",
          "description": "The page referrer.",
          "key": "referrer",
          "label": "Page Referrer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "IP address of the browser.",
          "key": "ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "User agent from the user’s device.",
          "key": "user_agent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "brand": undefined,
            "content_category": undefined,
            "content_id": undefined,
            "content_name": undefined,
            "price": undefined,
            "quantity": undefined,
          },
          "description": "Related item details for the event.",
          "key": "contents",
          "label": "Contents",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "choices": [
            {
              "label": "product",
              "value": "product",
            },
            {
              "label": "product_group",
              "value": "product_group",
            },
          ],
          "default": "product",
          "description": "Type of the product item. When the \`content_id\` in the \`Contents\` field is specified as a \`sku_id\`, set this field to \`product\`. When the \`content_id\` in the \`Contents\` field is specified as an \`item_group_id\`, set this field to \`product_group\`.",
          "key": "content_type",
          "label": "Content Type",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.currency}",
          "description": "Currency for the value specified as ISO 4217 code.",
          "key": "currency",
          "label": "Currency",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.value ?? event.properties.revenue}",
          "description": "Value of the order or items sold.",
          "key": "value",
          "label": "Value",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "A string description of the web event.",
          "key": "description",
          "label": "Description",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.query}",
          "description": "The text string that was searched for.",
          "key": "query",
          "label": "Query",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.limited_data_use}",
          "description": "Use this field to flag an event for limited data processing. TikTok will recognize this parameter as a request for limited data processing, and will limit its processing activities accordingly if the event shared occurred in an eligible location. To learn more about the Limited Data Use feature, refer to [Events API 2.0 - Limited Data Use](https://ads.tiktok.com/marketing_api/docs?id=1771101204435970).",
          "key": "limited_data_use",
          "label": "Limited Data Use",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Use this field to specify that events should be test events rather than actual traffic. You can find your Test Event Code in your TikTok Events Manager under the "Test Event" tab. You'll want to remove your Test Event Code when sending real traffic through this integration.",
          "key": "test_event_code",
          "label": "Test Event Code",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "reportWebEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Search",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Product Added to Wishlist'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": undefined,
          "description": "Conversion event name. Please refer to the "Supported Web Events" section on in TikTok’s [Events API documentation](https://ads.tiktok.com/marketing_api/docs?id=1701890979375106) for accepted event names.",
          "key": "event",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "Any hashed ID that can identify a unique user/session.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Timestamp that the event took place, in ISO 8601 format.",
          "key": "timestamp",
          "label": "Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.phone ?? event.context.traits.phone}",
          "description": "A single phone number or array of phone numbers in E.164 standard format. Segment will hash this value before sending to TikTok. e.g. +14150000000. Segment will hash this value before sending to TikTok.",
          "key": "phone_number",
          "label": "Phone Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.email ?? event.context.traits.email}",
          "description": "A single email address or an array of email addresses. Segment will hash this value before sending to TikTok.",
          "key": "email",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.first_name ?? event.context.traits.first_name}",
          "description": "The first name of the customer. The name should be in lowercase without any punctuation. Special characters are allowed.",
          "key": "first_name",
          "label": "First Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.last_name ?? event.context.traits.last_name}",
          "description": "The last name of the customer. The name should be in lowercase without any punctuation. Special characters are allowed.",
          "key": "last_name",
          "label": "Last Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "city": "{event.properties.address.city ?? event.context.traits.address.city}",
            "country": "{event.properties.address.country ?? event.context.traits.address.country}",
            "state": "{event.properties.address.state ?? event.context.traits.address.state}",
            "zip_code": "{event.properties.address.postal_code ?? event.context.traits.address.postal_code}",
          },
          "description": "The address of the customer.",
          "key": "address",
          "label": "Address",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.properties.order_id}",
          "description": "Order ID of the transaction.",
          "key": "order_id",
          "label": "Order ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.shop_id}",
          "description": "Shop ID of the transaction.",
          "key": "shop_id",
          "label": "Shop ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "Uniquely identifies the user who triggered the conversion event. Segment will hash this value before sending to TikTok. TikTok Conversions Destination supports both string and string[] types for sending external ID(s).",
          "key": "external_id",
          "label": "External ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttclid}",
          "description": "The value of the ttclid used to match website visitor events with TikTok ads. The ttclid is valid for 7 days. See [Set up ttclid](https://ads.tiktok.com/marketing_api/docs?rid=4eezrhr6lg4&id=1681728034437121) for details.",
          "key": "ttclid",
          "label": "TikTok Click ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttp}",
          "description": "TikTok Cookie ID. If you also use Pixel SDK and have enabled cookies, Pixel SDK automatically saves a unique identifier in the \`_ttp\` cookie. The value of \`_ttp\` is used to match website visitor events with TikTok ads. You can extract the value of \`_ttp\` and attach the value here. To learn more about the \`ttp\` parameter, refer to [Events API 2.0 - Send TikTok Cookie](https://ads.tiktok.com/marketing_api/docs?id=%201771100936446977) (\`_ttp\`).",
          "key": "ttp",
          "label": "TikTok Cookie ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.lead_id}",
          "description": "ID of TikTok leads. Every lead will have its own lead_id when exported from TikTok. This feature is in Beta. Please contact your TikTok representative to inquire regarding availability",
          "key": "lead_id",
          "label": "TikTok Lead ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$locale}",
          "description": "The BCP 47 language identifier. For reference, refer to the [IETF BCP 47 standardized code](https://www.rfc-editor.org/rfc/bcp/bcp47.txt).",
          "key": "locale",
          "label": "Locale",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The page URL where the conversion event took place.",
          "key": "url",
          "label": "Page URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$referrer}",
          "description": "The page referrer.",
          "key": "referrer",
          "label": "Page Referrer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "IP address of the browser.",
          "key": "ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "User agent from the user’s device.",
          "key": "user_agent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "brand": undefined,
            "content_category": undefined,
            "content_id": undefined,
            "content_name": undefined,
            "price": undefined,
            "quantity": undefined,
          },
          "description": "Related item details for the event.",
          "key": "contents",
          "label": "Contents",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "choices": [
            {
              "label": "product",
              "value": "product",
            },
            {
              "label": "product_group",
              "value": "product_group",
            },
          ],
          "default": "product",
          "description": "Type of the product item. When the \`content_id\` in the \`Contents\` field is specified as a \`sku_id\`, set this field to \`product\`. When the \`content_id\` in the \`Contents\` field is specified as an \`item_group_id\`, set this field to \`product_group\`.",
          "key": "content_type",
          "label": "Content Type",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.currency}",
          "description": "Currency for the value specified as ISO 4217 code.",
          "key": "currency",
          "label": "Currency",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.value ?? event.properties.revenue}",
          "description": "Value of the order or items sold.",
          "key": "value",
          "label": "Value",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "A string description of the web event.",
          "key": "description",
          "label": "Description",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.query}",
          "description": "The text string that was searched for.",
          "key": "query",
          "label": "Query",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.limited_data_use}",
          "description": "Use this field to flag an event for limited data processing. TikTok will recognize this parameter as a request for limited data processing, and will limit its processing activities accordingly if the event shared occurred in an eligible location. To learn more about the Limited Data Use feature, refer to [Events API 2.0 - Limited Data Use](https://ads.tiktok.com/marketing_api/docs?id=1771101204435970).",
          "key": "limited_data_use",
          "label": "Limited Data Use",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Use this field to specify that events should be test events rather than actual traffic. You can find your Test Event Code in your TikTok Events Manager under the "Test Event" tab. You'll want to remove your Test Event Code when sending real traffic through this integration.",
          "key": "test_event_code",
          "label": "Test Event Code",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "reportWebEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Add to Wishlist",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Product Added'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": undefined,
          "description": "Conversion event name. Please refer to the "Supported Web Events" section on in TikTok’s [Events API documentation](https://ads.tiktok.com/marketing_api/docs?id=1701890979375106) for accepted event names.",
          "key": "event",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "Any hashed ID that can identify a unique user/session.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Timestamp that the event took place, in ISO 8601 format.",
          "key": "timestamp",
          "label": "Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.phone ?? event.context.traits.phone}",
          "description": "A single phone number or array of phone numbers in E.164 standard format. Segment will hash this value before sending to TikTok. e.g. +14150000000. Segment will hash this value before sending to TikTok.",
          "key": "phone_number",
          "label": "Phone Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.email ?? event.context.traits.email}",
          "description": "A single email address or an array of email addresses. Segment will hash this value before sending to TikTok.",
          "key": "email",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.first_name ?? event.context.traits.first_name}",
          "description": "The first name of the customer. The name should be in lowercase without any punctuation. Special characters are allowed.",
          "key": "first_name",
          "label": "First Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.last_name ?? event.context.traits.last_name}",
          "description": "The last name of the customer. The name should be in lowercase without any punctuation. Special characters are allowed.",
          "key": "last_name",
          "label": "Last Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "city": "{event.properties.address.city ?? event.context.traits.address.city}",
            "country": "{event.properties.address.country ?? event.context.traits.address.country}",
            "state": "{event.properties.address.state ?? event.context.traits.address.state}",
            "zip_code": "{event.properties.address.postal_code ?? event.context.traits.address.postal_code}",
          },
          "description": "The address of the customer.",
          "key": "address",
          "label": "Address",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.properties.order_id}",
          "description": "Order ID of the transaction.",
          "key": "order_id",
          "label": "Order ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.shop_id}",
          "description": "Shop ID of the transaction.",
          "key": "shop_id",
          "label": "Shop ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "Uniquely identifies the user who triggered the conversion event. Segment will hash this value before sending to TikTok. TikTok Conversions Destination supports both string and string[] types for sending external ID(s).",
          "key": "external_id",
          "label": "External ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttclid}",
          "description": "The value of the ttclid used to match website visitor events with TikTok ads. The ttclid is valid for 7 days. See [Set up ttclid](https://ads.tiktok.com/marketing_api/docs?rid=4eezrhr6lg4&id=1681728034437121) for details.",
          "key": "ttclid",
          "label": "TikTok Click ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttp}",
          "description": "TikTok Cookie ID. If you also use Pixel SDK and have enabled cookies, Pixel SDK automatically saves a unique identifier in the \`_ttp\` cookie. The value of \`_ttp\` is used to match website visitor events with TikTok ads. You can extract the value of \`_ttp\` and attach the value here. To learn more about the \`ttp\` parameter, refer to [Events API 2.0 - Send TikTok Cookie](https://ads.tiktok.com/marketing_api/docs?id=%201771100936446977) (\`_ttp\`).",
          "key": "ttp",
          "label": "TikTok Cookie ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.lead_id}",
          "description": "ID of TikTok leads. Every lead will have its own lead_id when exported from TikTok. This feature is in Beta. Please contact your TikTok representative to inquire regarding availability",
          "key": "lead_id",
          "label": "TikTok Lead ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$locale}",
          "description": "The BCP 47 language identifier. For reference, refer to the [IETF BCP 47 standardized code](https://www.rfc-editor.org/rfc/bcp/bcp47.txt).",
          "key": "locale",
          "label": "Locale",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The page URL where the conversion event took place.",
          "key": "url",
          "label": "Page URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$referrer}",
          "description": "The page referrer.",
          "key": "referrer",
          "label": "Page Referrer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "IP address of the browser.",
          "key": "ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "User agent from the user’s device.",
          "key": "user_agent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "brand": undefined,
            "content_category": undefined,
            "content_id": undefined,
            "content_name": undefined,
            "price": undefined,
            "quantity": undefined,
          },
          "description": "Related item details for the event.",
          "key": "contents",
          "label": "Contents",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "choices": [
            {
              "label": "product",
              "value": "product",
            },
            {
              "label": "product_group",
              "value": "product_group",
            },
          ],
          "default": "product",
          "description": "Type of the product item. When the \`content_id\` in the \`Contents\` field is specified as a \`sku_id\`, set this field to \`product\`. When the \`content_id\` in the \`Contents\` field is specified as an \`item_group_id\`, set this field to \`product_group\`.",
          "key": "content_type",
          "label": "Content Type",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.currency}",
          "description": "Currency for the value specified as ISO 4217 code.",
          "key": "currency",
          "label": "Currency",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.value ?? event.properties.revenue}",
          "description": "Value of the order or items sold.",
          "key": "value",
          "label": "Value",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "A string description of the web event.",
          "key": "description",
          "label": "Description",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.query}",
          "description": "The text string that was searched for.",
          "key": "query",
          "label": "Query",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.limited_data_use}",
          "description": "Use this field to flag an event for limited data processing. TikTok will recognize this parameter as a request for limited data processing, and will limit its processing activities accordingly if the event shared occurred in an eligible location. To learn more about the Limited Data Use feature, refer to [Events API 2.0 - Limited Data Use](https://ads.tiktok.com/marketing_api/docs?id=1771101204435970).",
          "key": "limited_data_use",
          "label": "Limited Data Use",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Use this field to specify that events should be test events rather than actual traffic. You can find your Test Event Code in your TikTok Events Manager under the "Test Event" tab. You'll want to remove your Test Event Code when sending real traffic through this integration.",
          "key": "test_event_code",
          "label": "Test Event Code",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "reportWebEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Add to Cart",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Checkout Started'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": undefined,
          "description": "Conversion event name. Please refer to the "Supported Web Events" section on in TikTok’s [Events API documentation](https://ads.tiktok.com/marketing_api/docs?id=1701890979375106) for accepted event names.",
          "key": "event",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "Any hashed ID that can identify a unique user/session.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Timestamp that the event took place, in ISO 8601 format.",
          "key": "timestamp",
          "label": "Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.phone ?? event.context.traits.phone}",
          "description": "A single phone number or array of phone numbers in E.164 standard format. Segment will hash this value before sending to TikTok. e.g. +14150000000. Segment will hash this value before sending to TikTok.",
          "key": "phone_number",
          "label": "Phone Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.email ?? event.context.traits.email}",
          "description": "A single email address or an array of email addresses. Segment will hash this value before sending to TikTok.",
          "key": "email",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.first_name ?? event.context.traits.first_name}",
          "description": "The first name of the customer. The name should be in lowercase without any punctuation. Special characters are allowed.",
          "key": "first_name",
          "label": "First Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.last_name ?? event.context.traits.last_name}",
          "description": "The last name of the customer. The name should be in lowercase without any punctuation. Special characters are allowed.",
          "key": "last_name",
          "label": "Last Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "city": "{event.properties.address.city ?? event.context.traits.address.city}",
            "country": "{event.properties.address.country ?? event.context.traits.address.country}",
            "state": "{event.properties.address.state ?? event.context.traits.address.state}",
            "zip_code": "{event.properties.address.postal_code ?? event.context.traits.address.postal_code}",
          },
          "description": "The address of the customer.",
          "key": "address",
          "label": "Address",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.properties.order_id}",
          "description": "Order ID of the transaction.",
          "key": "order_id",
          "label": "Order ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.shop_id}",
          "description": "Shop ID of the transaction.",
          "key": "shop_id",
          "label": "Shop ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "Uniquely identifies the user who triggered the conversion event. Segment will hash this value before sending to TikTok. TikTok Conversions Destination supports both string and string[] types for sending external ID(s).",
          "key": "external_id",
          "label": "External ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttclid}",
          "description": "The value of the ttclid used to match website visitor events with TikTok ads. The ttclid is valid for 7 days. See [Set up ttclid](https://ads.tiktok.com/marketing_api/docs?rid=4eezrhr6lg4&id=1681728034437121) for details.",
          "key": "ttclid",
          "label": "TikTok Click ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttp}",
          "description": "TikTok Cookie ID. If you also use Pixel SDK and have enabled cookies, Pixel SDK automatically saves a unique identifier in the \`_ttp\` cookie. The value of \`_ttp\` is used to match website visitor events with TikTok ads. You can extract the value of \`_ttp\` and attach the value here. To learn more about the \`ttp\` parameter, refer to [Events API 2.0 - Send TikTok Cookie](https://ads.tiktok.com/marketing_api/docs?id=%201771100936446977) (\`_ttp\`).",
          "key": "ttp",
          "label": "TikTok Cookie ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.lead_id}",
          "description": "ID of TikTok leads. Every lead will have its own lead_id when exported from TikTok. This feature is in Beta. Please contact your TikTok representative to inquire regarding availability",
          "key": "lead_id",
          "label": "TikTok Lead ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$locale}",
          "description": "The BCP 47 language identifier. For reference, refer to the [IETF BCP 47 standardized code](https://www.rfc-editor.org/rfc/bcp/bcp47.txt).",
          "key": "locale",
          "label": "Locale",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The page URL where the conversion event took place.",
          "key": "url",
          "label": "Page URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$referrer}",
          "description": "The page referrer.",
          "key": "referrer",
          "label": "Page Referrer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "IP address of the browser.",
          "key": "ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "User agent from the user’s device.",
          "key": "user_agent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "brand": undefined,
            "content_category": undefined,
            "content_id": undefined,
            "content_name": undefined,
            "price": undefined,
            "quantity": undefined,
          },
          "description": "Related item details for the event.",
          "key": "contents",
          "label": "Contents",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "choices": [
            {
              "label": "product",
              "value": "product",
            },
            {
              "label": "product_group",
              "value": "product_group",
            },
          ],
          "default": "product",
          "description": "Type of the product item. When the \`content_id\` in the \`Contents\` field is specified as a \`sku_id\`, set this field to \`product\`. When the \`content_id\` in the \`Contents\` field is specified as an \`item_group_id\`, set this field to \`product_group\`.",
          "key": "content_type",
          "label": "Content Type",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.currency}",
          "description": "Currency for the value specified as ISO 4217 code.",
          "key": "currency",
          "label": "Currency",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.value ?? event.properties.revenue}",
          "description": "Value of the order or items sold.",
          "key": "value",
          "label": "Value",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "A string description of the web event.",
          "key": "description",
          "label": "Description",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.query}",
          "description": "The text string that was searched for.",
          "key": "query",
          "label": "Query",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.limited_data_use}",
          "description": "Use this field to flag an event for limited data processing. TikTok will recognize this parameter as a request for limited data processing, and will limit its processing activities accordingly if the event shared occurred in an eligible location. To learn more about the Limited Data Use feature, refer to [Events API 2.0 - Limited Data Use](https://ads.tiktok.com/marketing_api/docs?id=1771101204435970).",
          "key": "limited_data_use",
          "label": "Limited Data Use",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Use this field to specify that events should be test events rather than actual traffic. You can find your Test Event Code in your TikTok Events Manager under the "Test Event" tab. You'll want to remove your Test Event Code when sending real traffic through this integration.",
          "key": "test_event_code",
          "label": "Test Event Code",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "reportWebEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Initiate Checkout",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Payment Info Entered'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": undefined,
          "description": "Conversion event name. Please refer to the "Supported Web Events" section on in TikTok’s [Events API documentation](https://ads.tiktok.com/marketing_api/docs?id=1701890979375106) for accepted event names.",
          "key": "event",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "Any hashed ID that can identify a unique user/session.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Timestamp that the event took place, in ISO 8601 format.",
          "key": "timestamp",
          "label": "Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.phone ?? event.context.traits.phone}",
          "description": "A single phone number or array of phone numbers in E.164 standard format. Segment will hash this value before sending to TikTok. e.g. +14150000000. Segment will hash this value before sending to TikTok.",
          "key": "phone_number",
          "label": "Phone Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.email ?? event.context.traits.email}",
          "description": "A single email address or an array of email addresses. Segment will hash this value before sending to TikTok.",
          "key": "email",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.first_name ?? event.context.traits.first_name}",
          "description": "The first name of the customer. The name should be in lowercase without any punctuation. Special characters are allowed.",
          "key": "first_name",
          "label": "First Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.last_name ?? event.context.traits.last_name}",
          "description": "The last name of the customer. The name should be in lowercase without any punctuation. Special characters are allowed.",
          "key": "last_name",
          "label": "Last Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "city": "{event.properties.address.city ?? event.context.traits.address.city}",
            "country": "{event.properties.address.country ?? event.context.traits.address.country}",
            "state": "{event.properties.address.state ?? event.context.traits.address.state}",
            "zip_code": "{event.properties.address.postal_code ?? event.context.traits.address.postal_code}",
          },
          "description": "The address of the customer.",
          "key": "address",
          "label": "Address",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.properties.order_id}",
          "description": "Order ID of the transaction.",
          "key": "order_id",
          "label": "Order ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.shop_id}",
          "description": "Shop ID of the transaction.",
          "key": "shop_id",
          "label": "Shop ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "Uniquely identifies the user who triggered the conversion event. Segment will hash this value before sending to TikTok. TikTok Conversions Destination supports both string and string[] types for sending external ID(s).",
          "key": "external_id",
          "label": "External ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttclid}",
          "description": "The value of the ttclid used to match website visitor events with TikTok ads. The ttclid is valid for 7 days. See [Set up ttclid](https://ads.tiktok.com/marketing_api/docs?rid=4eezrhr6lg4&id=1681728034437121) for details.",
          "key": "ttclid",
          "label": "TikTok Click ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttp}",
          "description": "TikTok Cookie ID. If you also use Pixel SDK and have enabled cookies, Pixel SDK automatically saves a unique identifier in the \`_ttp\` cookie. The value of \`_ttp\` is used to match website visitor events with TikTok ads. You can extract the value of \`_ttp\` and attach the value here. To learn more about the \`ttp\` parameter, refer to [Events API 2.0 - Send TikTok Cookie](https://ads.tiktok.com/marketing_api/docs?id=%201771100936446977) (\`_ttp\`).",
          "key": "ttp",
          "label": "TikTok Cookie ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.lead_id}",
          "description": "ID of TikTok leads. Every lead will have its own lead_id when exported from TikTok. This feature is in Beta. Please contact your TikTok representative to inquire regarding availability",
          "key": "lead_id",
          "label": "TikTok Lead ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$locale}",
          "description": "The BCP 47 language identifier. For reference, refer to the [IETF BCP 47 standardized code](https://www.rfc-editor.org/rfc/bcp/bcp47.txt).",
          "key": "locale",
          "label": "Locale",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The page URL where the conversion event took place.",
          "key": "url",
          "label": "Page URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$referrer}",
          "description": "The page referrer.",
          "key": "referrer",
          "label": "Page Referrer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "IP address of the browser.",
          "key": "ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "User agent from the user’s device.",
          "key": "user_agent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "brand": undefined,
            "content_category": undefined,
            "content_id": undefined,
            "content_name": undefined,
            "price": undefined,
            "quantity": undefined,
          },
          "description": "Related item details for the event.",
          "key": "contents",
          "label": "Contents",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "choices": [
            {
              "label": "product",
              "value": "product",
            },
            {
              "label": "product_group",
              "value": "product_group",
            },
          ],
          "default": "product",
          "description": "Type of the product item. When the \`content_id\` in the \`Contents\` field is specified as a \`sku_id\`, set this field to \`product\`. When the \`content_id\` in the \`Contents\` field is specified as an \`item_group_id\`, set this field to \`product_group\`.",
          "key": "content_type",
          "label": "Content Type",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.currency}",
          "description": "Currency for the value specified as ISO 4217 code.",
          "key": "currency",
          "label": "Currency",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.value ?? event.properties.revenue}",
          "description": "Value of the order or items sold.",
          "key": "value",
          "label": "Value",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "A string description of the web event.",
          "key": "description",
          "label": "Description",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.query}",
          "description": "The text string that was searched for.",
          "key": "query",
          "label": "Query",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.limited_data_use}",
          "description": "Use this field to flag an event for limited data processing. TikTok will recognize this parameter as a request for limited data processing, and will limit its processing activities accordingly if the event shared occurred in an eligible location. To learn more about the Limited Data Use feature, refer to [Events API 2.0 - Limited Data Use](https://ads.tiktok.com/marketing_api/docs?id=1771101204435970).",
          "key": "limited_data_use",
          "label": "Limited Data Use",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Use this field to specify that events should be test events rather than actual traffic. You can find your Test Event Code in your TikTok Events Manager under the "Test Event" tab. You'll want to remove your Test Event Code when sending real traffic through this integration.",
          "key": "test_event_code",
          "label": "Test Event Code",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "reportWebEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Add Payment Info",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Order Placed'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": undefined,
          "description": "Conversion event name. Please refer to the "Supported Web Events" section on in TikTok’s [Events API documentation](https://ads.tiktok.com/marketing_api/docs?id=1701890979375106) for accepted event names.",
          "key": "event",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "Any hashed ID that can identify a unique user/session.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Timestamp that the event took place, in ISO 8601 format.",
          "key": "timestamp",
          "label": "Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.phone ?? event.context.traits.phone}",
          "description": "A single phone number or array of phone numbers in E.164 standard format. Segment will hash this value before sending to TikTok. e.g. +14150000000. Segment will hash this value before sending to TikTok.",
          "key": "phone_number",
          "label": "Phone Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.email ?? event.context.traits.email}",
          "description": "A single email address or an array of email addresses. Segment will hash this value before sending to TikTok.",
          "key": "email",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.first_name ?? event.context.traits.first_name}",
          "description": "The first name of the customer. The name should be in lowercase without any punctuation. Special characters are allowed.",
          "key": "first_name",
          "label": "First Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.last_name ?? event.context.traits.last_name}",
          "description": "The last name of the customer. The name should be in lowercase without any punctuation. Special characters are allowed.",
          "key": "last_name",
          "label": "Last Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "city": "{event.properties.address.city ?? event.context.traits.address.city}",
            "country": "{event.properties.address.country ?? event.context.traits.address.country}",
            "state": "{event.properties.address.state ?? event.context.traits.address.state}",
            "zip_code": "{event.properties.address.postal_code ?? event.context.traits.address.postal_code}",
          },
          "description": "The address of the customer.",
          "key": "address",
          "label": "Address",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.properties.order_id}",
          "description": "Order ID of the transaction.",
          "key": "order_id",
          "label": "Order ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.shop_id}",
          "description": "Shop ID of the transaction.",
          "key": "shop_id",
          "label": "Shop ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "Uniquely identifies the user who triggered the conversion event. Segment will hash this value before sending to TikTok. TikTok Conversions Destination supports both string and string[] types for sending external ID(s).",
          "key": "external_id",
          "label": "External ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttclid}",
          "description": "The value of the ttclid used to match website visitor events with TikTok ads. The ttclid is valid for 7 days. See [Set up ttclid](https://ads.tiktok.com/marketing_api/docs?rid=4eezrhr6lg4&id=1681728034437121) for details.",
          "key": "ttclid",
          "label": "TikTok Click ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttp}",
          "description": "TikTok Cookie ID. If you also use Pixel SDK and have enabled cookies, Pixel SDK automatically saves a unique identifier in the \`_ttp\` cookie. The value of \`_ttp\` is used to match website visitor events with TikTok ads. You can extract the value of \`_ttp\` and attach the value here. To learn more about the \`ttp\` parameter, refer to [Events API 2.0 - Send TikTok Cookie](https://ads.tiktok.com/marketing_api/docs?id=%201771100936446977) (\`_ttp\`).",
          "key": "ttp",
          "label": "TikTok Cookie ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.lead_id}",
          "description": "ID of TikTok leads. Every lead will have its own lead_id when exported from TikTok. This feature is in Beta. Please contact your TikTok representative to inquire regarding availability",
          "key": "lead_id",
          "label": "TikTok Lead ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$locale}",
          "description": "The BCP 47 language identifier. For reference, refer to the [IETF BCP 47 standardized code](https://www.rfc-editor.org/rfc/bcp/bcp47.txt).",
          "key": "locale",
          "label": "Locale",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The page URL where the conversion event took place.",
          "key": "url",
          "label": "Page URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$referrer}",
          "description": "The page referrer.",
          "key": "referrer",
          "label": "Page Referrer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "IP address of the browser.",
          "key": "ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "User agent from the user’s device.",
          "key": "user_agent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "brand": undefined,
            "content_category": undefined,
            "content_id": undefined,
            "content_name": undefined,
            "price": undefined,
            "quantity": undefined,
          },
          "description": "Related item details for the event.",
          "key": "contents",
          "label": "Contents",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "choices": [
            {
              "label": "product",
              "value": "product",
            },
            {
              "label": "product_group",
              "value": "product_group",
            },
          ],
          "default": "product",
          "description": "Type of the product item. When the \`content_id\` in the \`Contents\` field is specified as a \`sku_id\`, set this field to \`product\`. When the \`content_id\` in the \`Contents\` field is specified as an \`item_group_id\`, set this field to \`product_group\`.",
          "key": "content_type",
          "label": "Content Type",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.currency}",
          "description": "Currency for the value specified as ISO 4217 code.",
          "key": "currency",
          "label": "Currency",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.value ?? event.properties.revenue}",
          "description": "Value of the order or items sold.",
          "key": "value",
          "label": "Value",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "A string description of the web event.",
          "key": "description",
          "label": "Description",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.query}",
          "description": "The text string that was searched for.",
          "key": "query",
          "label": "Query",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.limited_data_use}",
          "description": "Use this field to flag an event for limited data processing. TikTok will recognize this parameter as a request for limited data processing, and will limit its processing activities accordingly if the event shared occurred in an eligible location. To learn more about the Limited Data Use feature, refer to [Events API 2.0 - Limited Data Use](https://ads.tiktok.com/marketing_api/docs?id=1771101204435970).",
          "key": "limited_data_use",
          "label": "Limited Data Use",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Use this field to specify that events should be test events rather than actual traffic. You can find your Test Event Code in your TikTok Events Manager under the "Test Event" tab. You'll want to remove your Test Event Code when sending real traffic through this integration.",
          "key": "test_event_code",
          "label": "Test Event Code",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "reportWebEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Place an Order",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Download Link Clicked'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": undefined,
          "description": "Conversion event name. Please refer to the "Supported Web Events" section on in TikTok’s [Events API documentation](https://ads.tiktok.com/marketing_api/docs?id=1701890979375106) for accepted event names.",
          "key": "event",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "Any hashed ID that can identify a unique user/session.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Timestamp that the event took place, in ISO 8601 format.",
          "key": "timestamp",
          "label": "Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.phone ?? event.context.traits.phone}",
          "description": "A single phone number or array of phone numbers in E.164 standard format. Segment will hash this value before sending to TikTok. e.g. +14150000000. Segment will hash this value before sending to TikTok.",
          "key": "phone_number",
          "label": "Phone Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.email ?? event.context.traits.email}",
          "description": "A single email address or an array of email addresses. Segment will hash this value before sending to TikTok.",
          "key": "email",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.first_name ?? event.context.traits.first_name}",
          "description": "The first name of the customer. The name should be in lowercase without any punctuation. Special characters are allowed.",
          "key": "first_name",
          "label": "First Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.last_name ?? event.context.traits.last_name}",
          "description": "The last name of the customer. The name should be in lowercase without any punctuation. Special characters are allowed.",
          "key": "last_name",
          "label": "Last Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "city": "{event.properties.address.city ?? event.context.traits.address.city}",
            "country": "{event.properties.address.country ?? event.context.traits.address.country}",
            "state": "{event.properties.address.state ?? event.context.traits.address.state}",
            "zip_code": "{event.properties.address.postal_code ?? event.context.traits.address.postal_code}",
          },
          "description": "The address of the customer.",
          "key": "address",
          "label": "Address",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.properties.order_id}",
          "description": "Order ID of the transaction.",
          "key": "order_id",
          "label": "Order ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.shop_id}",
          "description": "Shop ID of the transaction.",
          "key": "shop_id",
          "label": "Shop ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "Uniquely identifies the user who triggered the conversion event. Segment will hash this value before sending to TikTok. TikTok Conversions Destination supports both string and string[] types for sending external ID(s).",
          "key": "external_id",
          "label": "External ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttclid}",
          "description": "The value of the ttclid used to match website visitor events with TikTok ads. The ttclid is valid for 7 days. See [Set up ttclid](https://ads.tiktok.com/marketing_api/docs?rid=4eezrhr6lg4&id=1681728034437121) for details.",
          "key": "ttclid",
          "label": "TikTok Click ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttp}",
          "description": "TikTok Cookie ID. If you also use Pixel SDK and have enabled cookies, Pixel SDK automatically saves a unique identifier in the \`_ttp\` cookie. The value of \`_ttp\` is used to match website visitor events with TikTok ads. You can extract the value of \`_ttp\` and attach the value here. To learn more about the \`ttp\` parameter, refer to [Events API 2.0 - Send TikTok Cookie](https://ads.tiktok.com/marketing_api/docs?id=%201771100936446977) (\`_ttp\`).",
          "key": "ttp",
          "label": "TikTok Cookie ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.lead_id}",
          "description": "ID of TikTok leads. Every lead will have its own lead_id when exported from TikTok. This feature is in Beta. Please contact your TikTok representative to inquire regarding availability",
          "key": "lead_id",
          "label": "TikTok Lead ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$locale}",
          "description": "The BCP 47 language identifier. For reference, refer to the [IETF BCP 47 standardized code](https://www.rfc-editor.org/rfc/bcp/bcp47.txt).",
          "key": "locale",
          "label": "Locale",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The page URL where the conversion event took place.",
          "key": "url",
          "label": "Page URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$referrer}",
          "description": "The page referrer.",
          "key": "referrer",
          "label": "Page Referrer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "IP address of the browser.",
          "key": "ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "User agent from the user’s device.",
          "key": "user_agent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "brand": undefined,
            "content_category": undefined,
            "content_id": undefined,
            "content_name": undefined,
            "price": undefined,
            "quantity": undefined,
          },
          "description": "Related item details for the event.",
          "key": "contents",
          "label": "Contents",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "choices": [
            {
              "label": "product",
              "value": "product",
            },
            {
              "label": "product_group",
              "value": "product_group",
            },
          ],
          "default": "product",
          "description": "Type of the product item. When the \`content_id\` in the \`Contents\` field is specified as a \`sku_id\`, set this field to \`product\`. When the \`content_id\` in the \`Contents\` field is specified as an \`item_group_id\`, set this field to \`product_group\`.",
          "key": "content_type",
          "label": "Content Type",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.currency}",
          "description": "Currency for the value specified as ISO 4217 code.",
          "key": "currency",
          "label": "Currency",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.value ?? event.properties.revenue}",
          "description": "Value of the order or items sold.",
          "key": "value",
          "label": "Value",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "A string description of the web event.",
          "key": "description",
          "label": "Description",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.query}",
          "description": "The text string that was searched for.",
          "key": "query",
          "label": "Query",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.limited_data_use}",
          "description": "Use this field to flag an event for limited data processing. TikTok will recognize this parameter as a request for limited data processing, and will limit its processing activities accordingly if the event shared occurred in an eligible location. To learn more about the Limited Data Use feature, refer to [Events API 2.0 - Limited Data Use](https://ads.tiktok.com/marketing_api/docs?id=1771101204435970).",
          "key": "limited_data_use",
          "label": "Limited Data Use",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Use this field to specify that events should be test events rather than actual traffic. You can find your Test Event Code in your TikTok Events Manager under the "Test Event" tab. You'll want to remove your Test Event Code when sending real traffic through this integration.",
          "key": "test_event_code",
          "label": "Test Event Code",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "reportWebEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Download",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Signed Up'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": undefined,
          "description": "Conversion event name. Please refer to the "Supported Web Events" section on in TikTok’s [Events API documentation](https://ads.tiktok.com/marketing_api/docs?id=1701890979375106) for accepted event names.",
          "key": "event",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "Any hashed ID that can identify a unique user/session.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Timestamp that the event took place, in ISO 8601 format.",
          "key": "timestamp",
          "label": "Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.phone ?? event.context.traits.phone}",
          "description": "A single phone number or array of phone numbers in E.164 standard format. Segment will hash this value before sending to TikTok. e.g. +14150000000. Segment will hash this value before sending to TikTok.",
          "key": "phone_number",
          "label": "Phone Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.email ?? event.context.traits.email}",
          "description": "A single email address or an array of email addresses. Segment will hash this value before sending to TikTok.",
          "key": "email",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.first_name ?? event.context.traits.first_name}",
          "description": "The first name of the customer. The name should be in lowercase without any punctuation. Special characters are allowed.",
          "key": "first_name",
          "label": "First Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.last_name ?? event.context.traits.last_name}",
          "description": "The last name of the customer. The name should be in lowercase without any punctuation. Special characters are allowed.",
          "key": "last_name",
          "label": "Last Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "city": "{event.properties.address.city ?? event.context.traits.address.city}",
            "country": "{event.properties.address.country ?? event.context.traits.address.country}",
            "state": "{event.properties.address.state ?? event.context.traits.address.state}",
            "zip_code": "{event.properties.address.postal_code ?? event.context.traits.address.postal_code}",
          },
          "description": "The address of the customer.",
          "key": "address",
          "label": "Address",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.properties.order_id}",
          "description": "Order ID of the transaction.",
          "key": "order_id",
          "label": "Order ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.shop_id}",
          "description": "Shop ID of the transaction.",
          "key": "shop_id",
          "label": "Shop ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "Uniquely identifies the user who triggered the conversion event. Segment will hash this value before sending to TikTok. TikTok Conversions Destination supports both string and string[] types for sending external ID(s).",
          "key": "external_id",
          "label": "External ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttclid}",
          "description": "The value of the ttclid used to match website visitor events with TikTok ads. The ttclid is valid for 7 days. See [Set up ttclid](https://ads.tiktok.com/marketing_api/docs?rid=4eezrhr6lg4&id=1681728034437121) for details.",
          "key": "ttclid",
          "label": "TikTok Click ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttp}",
          "description": "TikTok Cookie ID. If you also use Pixel SDK and have enabled cookies, Pixel SDK automatically saves a unique identifier in the \`_ttp\` cookie. The value of \`_ttp\` is used to match website visitor events with TikTok ads. You can extract the value of \`_ttp\` and attach the value here. To learn more about the \`ttp\` parameter, refer to [Events API 2.0 - Send TikTok Cookie](https://ads.tiktok.com/marketing_api/docs?id=%201771100936446977) (\`_ttp\`).",
          "key": "ttp",
          "label": "TikTok Cookie ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.lead_id}",
          "description": "ID of TikTok leads. Every lead will have its own lead_id when exported from TikTok. This feature is in Beta. Please contact your TikTok representative to inquire regarding availability",
          "key": "lead_id",
          "label": "TikTok Lead ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$locale}",
          "description": "The BCP 47 language identifier. For reference, refer to the [IETF BCP 47 standardized code](https://www.rfc-editor.org/rfc/bcp/bcp47.txt).",
          "key": "locale",
          "label": "Locale",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The page URL where the conversion event took place.",
          "key": "url",
          "label": "Page URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$referrer}",
          "description": "The page referrer.",
          "key": "referrer",
          "label": "Page Referrer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "IP address of the browser.",
          "key": "ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "User agent from the user’s device.",
          "key": "user_agent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "brand": undefined,
            "content_category": undefined,
            "content_id": undefined,
            "content_name": undefined,
            "price": undefined,
            "quantity": undefined,
          },
          "description": "Related item details for the event.",
          "key": "contents",
          "label": "Contents",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "choices": [
            {
              "label": "product",
              "value": "product",
            },
            {
              "label": "product_group",
              "value": "product_group",
            },
          ],
          "default": "product",
          "description": "Type of the product item. When the \`content_id\` in the \`Contents\` field is specified as a \`sku_id\`, set this field to \`product\`. When the \`content_id\` in the \`Contents\` field is specified as an \`item_group_id\`, set this field to \`product_group\`.",
          "key": "content_type",
          "label": "Content Type",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.currency}",
          "description": "Currency for the value specified as ISO 4217 code.",
          "key": "currency",
          "label": "Currency",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.value ?? event.properties.revenue}",
          "description": "Value of the order or items sold.",
          "key": "value",
          "label": "Value",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "A string description of the web event.",
          "key": "description",
          "label": "Description",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.query}",
          "description": "The text string that was searched for.",
          "key": "query",
          "label": "Query",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.limited_data_use}",
          "description": "Use this field to flag an event for limited data processing. TikTok will recognize this parameter as a request for limited data processing, and will limit its processing activities accordingly if the event shared occurred in an eligible location. To learn more about the Limited Data Use feature, refer to [Events API 2.0 - Limited Data Use](https://ads.tiktok.com/marketing_api/docs?id=1771101204435970).",
          "key": "limited_data_use",
          "label": "Limited Data Use",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Use this field to specify that events should be test events rather than actual traffic. You can find your Test Event Code in your TikTok Events Manager under the "Test Event" tab. You'll want to remove your Test Event Code when sending real traffic through this integration.",
          "key": "test_event_code",
          "label": "Test Event Code",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "reportWebEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Complete Registration",
    },
  ],
  "name": "Tiktok Conversions",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 39 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to TikTok Audiences",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/tiktok.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-tiktok-audiences",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "The Advertiser IDs where audiences should be synced. Hidden in production and should not be altered by users.",
      "key": "advertiser_ids",
      "label": "TikTok Advertiser IDs",
      "required": false,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [],
  "name": "TikTok Audiences",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 40 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Twilio",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/twilio.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-twilio",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Your Twilio Account Id",
      "key": "accountId",
      "label": "Account Id",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "Your Twilio Token.",
      "key": "token",
      "label": "Token",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "Your Twilio Phone Number with Country Code.",
      "key": "phoneNumber",
      "label": "Phone Number",
      "required": true,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [],
  "name": "Twilio",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 41 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Webhook",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/webhook.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-webhook",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "If set, Segment will sign requests with an HMAC in the "X-Signature" request header. The HMAC is a hex-encoded SHA1 hash generated using this shared secret and the request body.",
      "key": "sharedSecret",
      "label": "Shared Secret",
      "required": false,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [],
  "name": "Webhook",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 42 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Voyage",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/voyage.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-voyage",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Voyage API key. You can create a new API key or find your existing API key in the Advanced section of your [Settings page](https://app.voyagetext.com/dashboard/settings/advanced).",
      "key": "apiKey",
      "label": "API Key",
      "required": true,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.timestamp}",
          "description": "Date of cart creation. Default to current date and time.",
          "key": "DateCreated",
          "label": "Timestamp",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.OrderNumber}",
          "description": "Order number from e-commerce platform.",
          "key": "OrderNumber",
          "label": "Order Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.SourceId}",
          "description": "Order id from e-commerce platform (same as checkout id).",
          "key": "SourceId",
          "label": "Order ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.TokenId}",
          "description": "A reference to the order that is a string value.",
          "key": "TokenId",
          "label": "Token ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.CustomerId}",
          "description": "Customer ID from e-commerce platform.",
          "key": "CustomerId",
          "label": "Customer ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.Url}",
          "description": "Link for user to click on to see status.",
          "key": "Url",
          "label": "Order URL",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.OrderTotal}",
          "description": "Total Order Value.",
          "key": "OrderTotal",
          "label": "Order Total",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.TotalSpent}",
          "description": "Total customer lifetime spend.",
          "key": "TotalSpent",
          "label": "Total Spent",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.FirstName}",
          "description": "Customer's first name.",
          "key": "FirstName",
          "label": "First name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.lastName}",
          "description": "Customer's last name.",
          "key": "lastName",
          "label": "Last name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.Phone}",
          "description": "Customer's phone number.",
          "key": "Phone",
          "label": "Phone number",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.Email}",
          "description": "Customer's email address",
          "key": "Email",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.Zip}",
          "description": "Customer's postal code",
          "key": "Zip",
          "label": "Zip code",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The date and time when the updates interacted with.",
          "key": "LastUpdated",
          "label": "Last Updated",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ProductImageUrl}",
          "description": "URL with product image.",
          "key": "ProductImageUrl",
          "label": "Product Image URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.LinkReference}",
          "description": "Used as a key to link events together.",
          "key": "LinkReference",
          "label": "Link reference",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.HomepageUrl}",
          "description": "URL of the tenant's e-commerce homepage.",
          "key": "HomepageUrl",
          "label": "Homepage URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "trackOrderPlaced",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Track Order Placed Event",
    },
  ],
  "name": "Voyage",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 43 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Voucherify",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/actions.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "voucherify-actions",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Application ID can be found in [Voucherify dashboard](https://docs.voucherify.io/docs/authentication).",
      "key": "apiKey",
      "label": "Application ID",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "Secret Key can be found in [Voucherify dashboard](https://docs.voucherify.io/docs/authentication).",
      "key": "secretKey",
      "label": "Secret Key",
      "required": true,
      "secret": false,
      "type": "password",
    },
    {
      "default": undefined,
      "description": "Check your API region in [Voucherify dashboard](https://app.voucherify.io/#/login) -> Project settings -> API endpoint. For example, if you are using a project with a URL: \`https://us1.api.voucherify.io\`, your Custom URL will be: \`https://us1.segmentio.voucherify.io\`. It also works for dedicated URLs.",
      "key": "customURL",
      "label": "Custom Voucherify URL",
      "required": true,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": {
            "email": "{event.properties.email ?? event.context.traits.email}",
            "source_id": "{person.id}",
          },
          "description": "This is an object containing information about the [customer](https://docs.voucherify.io/reference/the-customer-object).",
          "key": "customer",
          "label": "Customer Object",
          "required": true,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "code": "{event.properties.referral.code}",
            "referrer_id": "{event.properties.referral.referrer_id}",
          },
          "description": "If a conversion event for a referral program is set to a [custom event](https://docs.voucherify.io/reference/custom-event-object), then you need to send the referral code in the payload to make a record of the conversion event.",
          "key": "referral",
          "label": "Referral Object",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "code": "{event.properties.loyalty.code}",
          },
          "description": "If an earning rule in a loyalty program is based on a [custom event](https://docs.voucherify.io/reference/custom-event-object). This objects allows you specify the loyalty card to which the custom event should be attributed to.",
          "key": "loyalty",
          "label": "Loyalty Object",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.properties.metadata}",
          "description": "The metadata object stores all custom attributes assigned to the [custom event](https://docs.voucherify.io/reference/custom-event-object). A set of key/value pairs that you can attach to an event object. It can be useful for storing additional information about the event in a structured format. Event metadata schema is defined in the Dashboard > Project Settings > Event Schema > Edit particular event > Metadata property definition.",
          "key": "metadata",
          "label": "Track Event Metadata",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.event ?? event.name}",
          "description": "The name of the event that will be saved as a [custom event](https://docs.voucherify.io/reference/the-custom-event-object) in Voucherify.",
          "key": "event",
          "label": "Event Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.type}",
          "description": "Type of the [event](https://segment.com/docs/connections/spec/). For example: identify, track, page, screen or group",
          "key": "type",
          "label": "Event Type",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "addCustomEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Add Custom Event (Track Event)",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = '$pageview'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": {
            "email": "{event.properties.email ?? event.context.traits.email}",
            "source_id": "{person.id}",
          },
          "description": "This is an object containing information about the [customer](https://docs.voucherify.io/reference/the-customer-object).",
          "key": "customer",
          "label": "Customer Object",
          "required": true,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "code": "{event.properties.referral.code}",
            "referrer_id": "{event.properties.referral.referrer_id}",
          },
          "description": "If a conversion event for a referral program is set to a [custom event](https://docs.voucherify.io/reference/custom-event-object), then you need to send the referral code in the payload to make a record of the conversion event.",
          "key": "referral",
          "label": "Referral Object",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "code": "{event.properties.loyalty.code}",
          },
          "description": "If an earning rule in a loyalty program is based on a [custom event](https://docs.voucherify.io/reference/custom-event-object). This objects allows you specify the loyalty card to which the custom event should be attributed to.",
          "key": "loyalty",
          "label": "Loyalty Object",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.properties.metadata}",
          "description": "The metadata object stores all custom attributes assigned to the [custom event](https://docs.voucherify.io/reference/custom-event-object). A set of key/value pairs that you can attach to an event object. It can be useful for storing additional information about the event in a structured format. Event metadata schema is defined in the Dashboard > Project Settings > Event Schema > Edit particular event > Metadata property definition.",
          "key": "metadata",
          "label": "Track Event Metadata",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.event ?? event.name}",
          "description": "The name of the event that will be saved as a [custom event](https://docs.voucherify.io/reference/the-custom-event-object) in Voucherify.",
          "key": "event",
          "label": "Event Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.type}",
          "description": "Type of the [event](https://segment.com/docs/connections/spec/). For example: identify, track, page, screen or group",
          "key": "type",
          "label": "Event Type",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "addCustomEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Add Custom Event (Page Event)",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = '$screen'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": {
            "email": "{event.properties.email ?? event.context.traits.email}",
            "source_id": "{person.id}",
          },
          "description": "This is an object containing information about the [customer](https://docs.voucherify.io/reference/the-customer-object).",
          "key": "customer",
          "label": "Customer Object",
          "required": true,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "code": "{event.properties.referral.code}",
            "referrer_id": "{event.properties.referral.referrer_id}",
          },
          "description": "If a conversion event for a referral program is set to a [custom event](https://docs.voucherify.io/reference/custom-event-object), then you need to send the referral code in the payload to make a record of the conversion event.",
          "key": "referral",
          "label": "Referral Object",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "code": "{event.properties.loyalty.code}",
          },
          "description": "If an earning rule in a loyalty program is based on a [custom event](https://docs.voucherify.io/reference/custom-event-object). This objects allows you specify the loyalty card to which the custom event should be attributed to.",
          "key": "loyalty",
          "label": "Loyalty Object",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.properties.metadata}",
          "description": "The metadata object stores all custom attributes assigned to the [custom event](https://docs.voucherify.io/reference/custom-event-object). A set of key/value pairs that you can attach to an event object. It can be useful for storing additional information about the event in a structured format. Event metadata schema is defined in the Dashboard > Project Settings > Event Schema > Edit particular event > Metadata property definition.",
          "key": "metadata",
          "label": "Track Event Metadata",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.event ?? event.name}",
          "description": "The name of the event that will be saved as a [custom event](https://docs.voucherify.io/reference/the-custom-event-object) in Voucherify.",
          "key": "event",
          "label": "Event Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.type}",
          "description": "Type of the [event](https://segment.com/docs/connections/spec/). For example: identify, track, page, screen or group",
          "key": "type",
          "label": "Event Type",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "addCustomEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Add Custom Event (Screen Event)",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event in ('$identify', '$set')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{person.id}",
          "description": "The \`source_id\` which identifies the [customer](https://docs.voucherify.io/reference/the-customer-object) in Voucherify.",
          "key": "source_id",
          "label": "Source ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.name}",
          "description": "First name and last name of the [customer](https://docs.voucherify.io/reference/customer-object).",
          "key": "name",
          "label": "Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.first_name}",
          "description": "First name of the [customer](https://docs.voucherify.io/reference/customer-object). It will be merged with \`last_name\` to create the \`name\` field.",
          "key": "first_name",
          "label": "First Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.last_name}",
          "description": "Last name of the [customer](https://docs.voucherify.io/reference/customer-object). It will be merged with \`first_name\` to create the \`name\` field.",
          "key": "last_name",
          "label": "Last Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.description}",
          "description": "An arbitrary string that you can attach to a [customer](https://docs.voucherify.io/reference/customer-object) object.",
          "key": "description",
          "label": "Description",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.email}",
          "description": "The email that identifies the [customer](https://docs.voucherify.io/reference/the-customer-object) in Voucherify.",
          "key": "email",
          "label": "Email Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.phone}",
          "description": "Phone number of the [customer](https://docs.voucherify.io/reference/the-customer-object).",
          "key": "phone",
          "label": "Phone",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.birthdate}",
          "description": "Birthdate of the [customer](https://docs.voucherify.io/reference/the-customer-object). You can pass data here in \`date\` or \`datetime\` format (ISO 8601).",
          "key": "birthdate",
          "label": "Birthdate",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "city": "{person.properties.address.city}",
            "country": "{person.properties.address.country}",
            "postal_code": "{person.properties.address.postal_code}",
            "state": "{person.properties.address.state}",
            "street": "{person.properties.address.street}",
          },
          "description": "Address of the [customer](https://docs.voucherify.io/reference/the-customer-object).",
          "key": "address",
          "label": "Address",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{person.properties.metadata}",
          "description": "A set of custom key/value pairs that you can attach to a customer. The metadata object stores all custom attributes assigned to the customer. It can be useful for storing additional information about the customer in a structured format.",
          "key": "metadata",
          "label": "Metadata",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.type}",
          "description": "Type of the [event](https://segment.com/docs/connections/spec/). For example: identify, track, page, screen or group",
          "key": "type",
          "label": "Event Type",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "upsertCustomer",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Create Or Update Customer",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = '$groupidentify'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": {
            "email": "{event.email}",
            "source_id": "{person.id}",
          },
          "description": "Object containing information about the [customer](https://docs.voucherify.io/reference/the-customer-object).",
          "key": "customer",
          "label": "Customer Object",
          "required": true,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.groupId}",
          "description": "The ID used to uniquely identify a group to which [customer](https://docs.voucherify.io/reference/the-customer-object) belongs.",
          "key": "group_id",
          "label": "Group ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties}",
          "description": "Traits of the group that will be created in customer [metadata](https://www.voucherify.io/glossary/metadata-custom-attributes).",
          "key": "traits",
          "label": "Group Traits",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.type}",
          "description": "Type of the [event](https://segment.com/docs/connections/spec/). For example: identify, track, page, screen or group.",
          "key": "type",
          "label": "Event Type",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "assignCustomerToGroup",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Assign Customer To Group",
    },
  ],
  "name": "Voucherify",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 44 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Intercom Cloud Mode",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/intercom.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-intercom-cloud",
  "inputs_schema": [],
  "mapping_templates": [],
  "name": "Intercom Cloud Mode",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 45 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Ironclad",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/ironclad.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-ironclad",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Site Access ID. An ID that’s unique for each site within your account. Information on finding your sid can be found in the authentication section.",
      "key": "sid",
      "label": "Site Access ID",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": false,
      "description": "Turn this ON, to send requests to the staging server, ONLY if Clickwrap support instructs you to do so.",
      "key": "staging_endpoint",
      "label": "Staging Endpoint",
      "required": false,
      "secret": false,
      "type": "boolean",
    },
    {
      "default": false,
      "description": "Test Mode, whether or not to process the acceptance in test_mode. Defaults to false, Toggle to ON to enable it.",
      "key": "test_mode",
      "label": "Test Mode",
      "required": false,
      "secret": false,
      "type": "boolean",
    },
  ],
  "mapping_templates": [],
  "name": "Ironclad",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 46 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to SendGrid",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/sendgrid.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-sendgrid",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "The Api key for your SendGrid account.",
      "key": "sendGridApiKey",
      "label": "API Key",
      "required": true,
      "secret": false,
      "type": "password",
    },
    {
      "choices": [
        {
          "label": "Global (https://api.sendgrid.com)",
          "value": "https://api.sendgrid.com",
        },
        {
          "label": "EU (https://api.eu.sendgrid.com)",
          "value": "https://api.eu.sendgrid.com",
        },
      ],
      "default": "https://api.sendgrid.com",
      "description": "The regional processing endpoint for your SendGrid account. [See more details](https://www.twilio.com/en-us/blog/send-emails-in-eu?_gl=1*7hyri9*_gcl_au*MTg0MTQwMjAzNi4xNzQzMDAyNzc4*_ga*MTk4OTI2MDk1LjE3NDMwMDI3Nzg.*_ga_8W5LR442LD*MTc0MzY3NTc2NC41LjAuMTc0MzY3NTc2NC4wLjAuMA..)",
      "key": "endpoint",
      "label": "Regional Processing Endpoint",
      "required": false,
      "secret": false,
      "type": "choice",
    },
  ],
  "mapping_templates": [],
  "name": "SendGrid",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 47 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to HubSpot Cloud Mode",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/hubspot.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-hubspot-cloud",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "The Hub ID of your HubSpot account.",
      "key": "portalId",
      "label": "Hub ID",
      "required": false,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [],
  "name": "HubSpot Cloud Mode",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 48 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to 1Plusx Asset Api",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/1plusx.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-1plusx-asset-api",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Your 1plusX Client ID. Please refer to your 1PlusX representative to obtain it.",
      "key": "client_id",
      "label": "Client ID",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "Your 1plusX Key ID. Available in 1plusX UI in the "API Keys" section.",
      "key": "key_id",
      "label": "Key ID",
      "required": true,
      "secret": false,
      "type": "password",
    },
    {
      "default": undefined,
      "description": "Your 1plusX Secret. Available in 1plusX UI in the "API Keys" section.",
      "key": "client_secret",
      "label": "Secret",
      "required": true,
      "secret": false,
      "type": "password",
    },
  ],
  "mapping_templates": [],
  "name": "1Plusx Asset Api",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 49 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Segment",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/segment.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-segment",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "The **Write Key** of a Segment source.",
      "key": "source_write_key",
      "label": "Source Write Key",
      "required": true,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [],
  "name": "Segment",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 50 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Google Sheets (dev only)",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/google.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-google-sheets-dev",
  "inputs_schema": [],
  "mapping_templates": [],
  "name": "Google Sheets (dev only)",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 51 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Braze Cohorts",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/braze.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-braze-cohorts",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Data Import Key for the client whose cohort this belongs to. Also known as customer key.",
      "key": "client_secret",
      "label": "Client Secret key",
      "required": true,
      "secret": false,
      "type": "password",
    },
    {
      "choices": [
        {
          "label": "US-01	(https://dashboard-01.braze.com)",
          "value": "https://rest.iad-01.braze.com",
        },
        {
          "label": "US-02	(https://dashboard-02.braze.com)",
          "value": "https://rest.iad-02.braze.com",
        },
        {
          "label": "US-03	(https://dashboard-03.braze.com)",
          "value": "https://rest.iad-03.braze.com",
        },
        {
          "label": "US-04	(https://dashboard-04.braze.com)",
          "value": "https://rest.iad-04.braze.com",
        },
        {
          "label": "US-05	(https://dashboard-05.braze.com)",
          "value": "https://rest.iad-05.braze.com",
        },
        {
          "label": "US-06	(https://dashboard-06.braze.com)",
          "value": "https://rest.iad-06.braze.com",
        },
        {
          "label": "US-07 (https://dashboard-07.braze.com)",
          "value": "https://rest.iad-07.braze.com",
        },
        {
          "label": "US-08	(https://dashboard-08.braze.com)",
          "value": "https://rest.iad-08.braze.com",
        },
        {
          "label": "EU-01	(https://dashboard-01.braze.eu)",
          "value": "https://rest.fra-01.braze.eu",
        },
        {
          "label": "EU-02	(https://dashboard-02.braze.eu)",
          "value": "https://rest.fra-02.braze.eu",
        },
        {
          "label": "AU-01	(https://dashboard.au-01.braze.com)",
          "value": "https://rest.au-01.braze.com",
        },
      ],
      "default": "https://rest.iad-01.braze.com",
      "description": "Your Braze REST endpoint. [See more details](https://www.braze.com/docs/api/basics/#endpoints)",
      "key": "endpoint",
      "label": "REST Endpoint",
      "required": true,
      "secret": false,
      "type": "choice",
    },
  ],
  "mapping_templates": [],
  "name": "Braze Cohorts",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 52 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Segment Profiles",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/segment.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-segment-profiles",
  "inputs_schema": [],
  "mapping_templates": [],
  "name": "Segment Profiles",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 53 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to VWO Cloud Mode",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/vwo.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-vwo-cloud",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Enter your VWO Account ID",
      "key": "vwoAccountId",
      "label": "Your VWO account ID",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "VWO Fullstack SDK Key. It is mandatory when using the VWO Fullstack suite.",
      "key": "apikey",
      "label": "VWO SDK Key",
      "required": false,
      "secret": false,
      "type": "string",
    },
    {
      "choices": [
        {
          "label": "US",
          "value": "US",
        },
        {
          "label": "Europe",
          "value": "EU",
        },
        {
          "label": "Asia",
          "value": "AS",
        },
      ],
      "default": "US",
      "description": "VWO Region to sync data to. Default is US",
      "key": "region",
      "label": "Region",
      "required": false,
      "secret": false,
      "type": "choice",
    },
  ],
  "mapping_templates": [
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.event}",
          "description": "Name of the event",
          "key": "name",
          "label": "Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties}",
          "description": "JSON object containing additional properties that will be associated with the event.",
          "key": "properties",
          "label": "Properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.vwo_uuid}",
          "description": "VWO UUID",
          "key": "vwoUuid",
          "label": "VWO UUID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.context.page}",
          "description": "Contains context information regarding a webpage",
          "key": "page",
          "label": "Page",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "IP address of the user",
          "key": "ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "User-Agent of the user",
          "key": "userAgent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Timestamp on the event",
          "key": "timestamp",
          "label": "Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "trackEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Track Event",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event in ('$identify', '$set')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{person.properties}",
          "description": "Visitor's attributes to be mapped",
          "key": "attributes",
          "label": "attributes",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.vwo_uuid}",
          "description": "VWO UUID",
          "key": "vwoUuid",
          "label": "VWO UUID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.context.page}",
          "description": "Contains context information regarding a webpage",
          "key": "page",
          "label": "Page",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "IP address of the user",
          "key": "ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "User-Agent of the user",
          "key": "userAgent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Timestamp on the event",
          "key": "timestamp",
          "label": "Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "identifyUser",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Identify User",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = '$pageview'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.properties.$current_url}",
          "description": "URL of the webpage",
          "key": "url",
          "label": "Page URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.vwo_uuid}",
          "description": "VWO UUID",
          "key": "vwoUuid",
          "label": "VWO UUID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.context.page}",
          "description": "Contains context information regarding a webpage",
          "key": "page",
          "label": "Page",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "IP address of the user",
          "key": "ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "User-Agent of the user",
          "key": "userAgent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Timestamp on the event",
          "key": "timestamp",
          "label": "Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "pageVisit",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Page Visit",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Audience Entered' or event = 'Audience Exited'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.event}",
          "description": "Name of the event",
          "key": "name",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id}",
          "description": "An unique identifier for the user",
          "key": "userId",
          "label": "User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.distinct_id}",
          "description": "Anonymous ID for users",
          "key": "anonymousId",
          "label": "Anonymous ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.audience_key}",
          "description": "Segment's audience ID",
          "key": "audienceId",
          "label": "Audience ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "syncAudience",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Sync Audience",
    },
  ],
  "name": "VWO Cloud Mode",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 54 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Saleswings",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/saleswings.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-saleswings",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Segment.io API key for your SalesWings project.",
      "key": "apiKey",
      "label": "API Key",
      "required": true,
      "secret": false,
      "type": "password",
    },
    {
      "choices": [
        {
          "label": "Helium (live environment)",
          "value": "helium",
        },
        {
          "label": "Ozone (test environment)",
          "value": "ozone",
        },
      ],
      "default": "helium",
      "description": "SalesWings environment this destination is connected with.",
      "key": "environment",
      "label": "Environment",
      "required": true,
      "secret": false,
      "type": "choice",
    },
  ],
  "mapping_templates": [
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "Track",
          "description": "Type of the SalesWings custom event (a custom event is visualized in SalesWings cockpit and SalesForce Lead Intent View as "[[Kind]] Data").",
          "key": "kind",
          "label": "Custom Event Kind",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.event}",
          "description": "String description of the SalesWings custom event payload (a custom event is visualized in SalesWings cockpit and SalesForce Lead Intent View as "[[Kind]] Data").",
          "key": "data",
          "label": "Custom Event Data",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id}",
          "description": "Permanent identifier of a Segment user the event is attributed to.",
          "key": "userID",
          "label": "Segment User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.distinct_id}",
          "description": "A pseudo-unique substitute for a Segment user ID the event is attributed to.",
          "key": "anonymousID",
          "label": "Segment Anonymous User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.email ?? event.properties.email}",
          "description": "Identified email of the Segment User.",
          "key": "email",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.url ?? event.properties.$current_url}",
          "description": "URL associated with the event.",
          "key": "url",
          "label": "URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.referrer ?? event.properties.$referrer}",
          "description": "Referrer URL associated with the event.",
          "key": "referrerUrl",
          "label": "Referrer URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "User Agent associated with the event.",
          "key": "userAgent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "When the event was sent.",
          "key": "timestamp",
          "label": "Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties}",
          "description": "Custom attribute values associated with the SalesWings custom event.",
          "key": "values",
          "label": "Custom Attribute Values",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "submitTrackEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Submit Track Event",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event in ('$identify', '$set')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "Identify",
          "description": "Type of the SalesWings custom event (a custom event is visualized in SalesWings cockpit and SalesForce Lead Intent View as "[[Kind]] Data").",
          "key": "kind",
          "label": "Custom Event Kind",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.email}",
          "description": "String description of the SalesWings custom event payload (a custom event is visualized in SalesWings cockpit and SalesForce Lead Intent View as "[[Kind]] Data").",
          "key": "data",
          "label": "Custom Event Data",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id}",
          "description": "Permanent identifier of a Segment user the event is attributed to.",
          "key": "userID",
          "label": "Segment User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.distinct_id}",
          "description": "A pseudo-unique substitute for a Segment user ID the event is attributed to.",
          "key": "anonymousID",
          "label": "Segment Anonymous User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.email ?? event.properties.email}",
          "description": "Identified email of the Segment User.",
          "key": "email",
          "label": "Email",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.url ?? event.properties.$current_url}",
          "description": "URL associated with the event.",
          "key": "url",
          "label": "URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.referrer ?? event.properties.$referrer}",
          "description": "Referrer URL associated with the event.",
          "key": "referrerUrl",
          "label": "Referrer URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "User Agent associated with the event.",
          "key": "userAgent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "When the event was sent.",
          "key": "timestamp",
          "label": "Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties}",
          "description": "Custom attribute values associated with the SalesWings custom event.",
          "key": "values",
          "label": "Custom Attribute Values",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "submitIdentifyEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Submit Identify Event",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = '$pageview'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{person.id}",
          "description": "Permanent identifier of a Segment user the event is attributed to.",
          "key": "userID",
          "label": "Segment User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.distinct_id}",
          "description": "A pseudo-unique substitute for a Segment user ID the event is attributed to.",
          "key": "anonymousID",
          "label": "Segment Anonymous User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.url ?? event.properties.$current_url}",
          "description": "URL associated with the event.",
          "key": "url",
          "label": "URL",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.referrer ?? event.properties.$referrer}",
          "description": "Referrer URL associated with the event.",
          "key": "referrerUrl",
          "label": "Referrer URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "User Agent associated with the event.",
          "key": "userAgent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "When the event was sent.",
          "key": "timestamp",
          "label": "Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "submitPageEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Submit Page Event",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = '$screen'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "Screen",
          "description": "Type of the SalesWings custom event (a custom event is visualized in SalesWings cockpit and SalesForce Lead Intent View as "[[Kind]] Data").",
          "key": "kind",
          "label": "Custom Event Kind",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.name}",
          "description": "String description of the SalesWings custom event payload (a custom event is visualized in SalesWings cockpit and SalesForce Lead Intent View as "[[Kind]] Data").",
          "key": "data",
          "label": "Custom Event Data",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id}",
          "description": "Permanent identifier of a Segment user the event is attributed to.",
          "key": "userID",
          "label": "Segment User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.distinct_id}",
          "description": "A pseudo-unique substitute for a Segment user ID the event is attributed to.",
          "key": "anonymousID",
          "label": "Segment Anonymous User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.email ?? event.properties.email}",
          "description": "Identified email of the Segment User.",
          "key": "email",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.url ?? event.properties.$current_url}",
          "description": "URL associated with the event.",
          "key": "url",
          "label": "URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.referrer ?? event.properties.$referrer}",
          "description": "Referrer URL associated with the event.",
          "key": "referrerUrl",
          "label": "Referrer URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "User Agent associated with the event.",
          "key": "userAgent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "When the event was sent.",
          "key": "timestamp",
          "label": "Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties}",
          "description": "Custom attribute values associated with the SalesWings custom event.",
          "key": "values",
          "label": "Custom Attribute Values",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "submitScreenEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Submit Screen Event",
    },
  ],
  "name": "Saleswings",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 55 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Launchpad",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/launchpad.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-launchpad",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Launchpad project secret. You can find that in the settings in your Launchpad.pm account.",
      "key": "apiSecret",
      "label": "Secret Key",
      "required": true,
      "secret": false,
      "type": "password",
    },
    {
      "choices": [
        {
          "label": "US 🇺🇸",
          "value": "US 🇺🇸",
        },
        {
          "label": "EU 🇪🇺",
          "value": "EU 🇪🇺",
        },
      ],
      "default": "US 🇺🇸",
      "description": "Learn about [EU data residency](https://help.launchpad.pm).",
      "key": "apiRegion",
      "label": "Data Residency",
      "required": false,
      "secret": false,
      "type": "choice",
    },
    {
      "default": undefined,
      "description": "This value, if it's not blank, will be sent as segment_source_name to Launchpad for every event/page/screen call.",
      "key": "sourceName",
      "label": "Source Name",
      "required": false,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify') and event != 'Order Completed'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.event}",
          "description": "The name of the action being performed.",
          "key": "event",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id}",
          "description": "A unique ID for a known user. This will be used as the Distinct ID. This field is required if the Anonymous ID field is empty",
          "key": "userId",
          "label": "User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.distinct_id}",
          "description": "A unique ID for an anonymous user. This will be used as the Distinct ID if the User ID field is empty. This field is required if the User ID field is empty",
          "key": "anonymousId",
          "label": "Anonymous ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "The unique identifier of the group that performed this event.",
          "key": "groupId",
          "label": "Group ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "A random id that is unique to an event. Launchpad uses $insert_id to deduplicate events.",
          "key": "messageId",
          "label": "Insert ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The timestamp of the event. Launchpad expects epoch timestamp in millisecond or second. Please note, Launchpad only accepts this field as the timestamp. If the field is empty, it will be set to the time Launchpad servers receive it.",
          "key": "timestamp",
          "label": "Timestamp",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties}",
          "description": "An object of key-value pairs that represent additional data to be sent along with the event.",
          "key": "properties",
          "label": "Event Properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {},
          "description": "An object of key-value pairs that represent additional data tied to the user. This is used for segmentation within the platform.",
          "key": "traits",
          "label": "User Properties",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.context}",
          "description": "An object of key-value pairs that provides useful context about the event.",
          "key": "context",
          "label": "Event context",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": true,
          "description": "Set as true to ensure Segment sends data to Launchpad in batches.",
          "key": "enable_batching",
          "label": "Batch Data to Launchpad",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": "trackEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Track Calls",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = '$pageview'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.event}",
          "description": "The name of the action being performed.",
          "key": "event",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id}",
          "description": "A unique ID for a known user. This will be used as the Distinct ID. This field is required if the Anonymous ID field is empty",
          "key": "userId",
          "label": "User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.distinct_id}",
          "description": "A unique ID for an anonymous user. This will be used as the Distinct ID if the User ID field is empty. This field is required if the User ID field is empty",
          "key": "anonymousId",
          "label": "Anonymous ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "The unique identifier of the group that performed this event.",
          "key": "groupId",
          "label": "Group ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "A random id that is unique to an event. Launchpad uses $insert_id to deduplicate events.",
          "key": "messageId",
          "label": "Insert ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The timestamp of the event. Launchpad expects epoch timestamp in millisecond or second. Please note, Launchpad only accepts this field as the timestamp. If the field is empty, it will be set to the time Launchpad servers receive it.",
          "key": "timestamp",
          "label": "Timestamp",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties}",
          "description": "An object of key-value pairs that represent additional data to be sent along with the event.",
          "key": "properties",
          "label": "Event Properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {},
          "description": "An object of key-value pairs that represent additional data tied to the user. This is used for segmentation within the platform.",
          "key": "traits",
          "label": "User Properties",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.context}",
          "description": "An object of key-value pairs that provides useful context about the event.",
          "key": "context",
          "label": "Event context",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": true,
          "description": "Set as true to ensure Segment sends data to Launchpad in batches.",
          "key": "enable_batching",
          "label": "Batch Data to Launchpad",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": "trackEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Page Calls",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = '$screen'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.event}",
          "description": "The name of the action being performed.",
          "key": "event",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id}",
          "description": "A unique ID for a known user. This will be used as the Distinct ID. This field is required if the Anonymous ID field is empty",
          "key": "userId",
          "label": "User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.distinct_id}",
          "description": "A unique ID for an anonymous user. This will be used as the Distinct ID if the User ID field is empty. This field is required if the User ID field is empty",
          "key": "anonymousId",
          "label": "Anonymous ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "The unique identifier of the group that performed this event.",
          "key": "groupId",
          "label": "Group ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "A random id that is unique to an event. Launchpad uses $insert_id to deduplicate events.",
          "key": "messageId",
          "label": "Insert ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The timestamp of the event. Launchpad expects epoch timestamp in millisecond or second. Please note, Launchpad only accepts this field as the timestamp. If the field is empty, it will be set to the time Launchpad servers receive it.",
          "key": "timestamp",
          "label": "Timestamp",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties}",
          "description": "An object of key-value pairs that represent additional data to be sent along with the event.",
          "key": "properties",
          "label": "Event Properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {},
          "description": "An object of key-value pairs that represent additional data tied to the user. This is used for segmentation within the platform.",
          "key": "traits",
          "label": "User Properties",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.context}",
          "description": "An object of key-value pairs that provides useful context about the event.",
          "key": "context",
          "label": "Event context",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": true,
          "description": "Set as true to ensure Segment sends data to Launchpad in batches.",
          "key": "enable_batching",
          "label": "Batch Data to Launchpad",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": "trackEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Screen Calls",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event in ('$identify', '$set')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.properties.$ip}",
          "description": "The IP address of the user. This is only used for geolocation and won't be stored.",
          "key": "ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id}",
          "description": "A unique ID for a known user. This will be used as the Distinct ID. This field is required if the Anonymous ID field is empty",
          "key": "userId",
          "label": "User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.distinct_id}",
          "description": "A unique ID for an anonymous user. This will be used as the Distinct ID if the User ID field is empty. This field is required if the User ID field is empty",
          "key": "anonymousId",
          "label": "Anonymous ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties}",
          "description": "Properties that you want to set on the user profile and you would want to segment by later.",
          "key": "traits",
          "label": "User Properties",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "identifyUser",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Identify Calls",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = '$groupidentify'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": undefined,
          "description": "The group key you specified in Launchpad under the company corresponding to the group. If this is not specified, it will be defaulted to "$group_id". This is helpful when you have a group of companies that should be joined together as in when you have a multinational.",
          "key": "groupKey",
          "label": "Group Key",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.groupId}",
          "description": "The unique identifier of the group. If there is a trait that matches the group key, it will override this value.",
          "key": "groupId",
          "label": "Group ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties}",
          "description": "The properties to set on the group profile.",
          "key": "traits",
          "label": "Group Properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id}",
          "description": "A unique ID for a known user. This will be used as the Distinct ID. This field is required if the Anonymous ID field is empty",
          "key": "userId",
          "label": "User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.distinct_id}",
          "description": "A unique ID for an anonymous user. This will be used as the Distinct ID if the User ID field is empty. This field is required if the User ID field is empty",
          "key": "anonymousId",
          "label": "Anonymous ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "groupIdentifyUser",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Group Calls",
    },
  ],
  "name": "Launchpad",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 56 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to LiveLike",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/livelike.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-livelike-cloud",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Your LiveLike Application Client ID.",
      "key": "clientId",
      "label": "Client ID",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "Your LiveLike Producer token.",
      "key": "producerToken",
      "label": "Producer Token",
      "required": true,
      "secret": false,
      "type": "password",
    },
  ],
  "mapping_templates": [
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.event}",
          "description": "The name of the event being performed. For example, \`User Registration\` could be an event_name referring the event that is being sent to LiveLike.",
          "key": "event_name",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.type}",
          "description": "The type of event (track/screen/page)",
          "key": "event_type",
          "label": "Event Type",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id}",
          "description": "A unique identifier for a user.",
          "key": "segment_user_id",
          "label": "User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.livelike_profile_id}",
          "description": "The unique LiveLike user identifier.",
          "key": "livelike_profile_id",
          "label": "LiveLike User Profile ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.distinct_id}",
          "description": "Segment Anonymous ID.",
          "key": "anonymous_id",
          "label": "Segment Anonymous ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.custom_id}",
          "description": "In case you are not able to store \`livelike_profile_id\`, LiveLike provides a way to create your own access tokens which helps us to map your user_id to a unique \`livelike_profile_id\`. Please refer [LiveLike Docs](https://docs.livelike.com/docs/client-generated-access-tokens) for more info.",
          "key": "custom_id",
          "label": "Custom ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The date and time when the event occurred in ISO 8601 format. Defaults to current time if not provided. For example, \`2019-09-30T15:59:44.933696Z\`.",
          "key": "timestamp",
          "label": "Timestamp",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties}",
          "description": "Properties of the event.",
          "key": "properties",
          "label": "Event Properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "trackEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Track User Actions",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = '$pageview'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.event}",
          "description": "The name of the event being performed. For example, \`User Registration\` could be an event_name referring the event that is being sent to LiveLike.",
          "key": "event_name",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.type}",
          "description": "The type of event (track/screen/page)",
          "key": "event_type",
          "label": "Event Type",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id}",
          "description": "A unique identifier for a user.",
          "key": "segment_user_id",
          "label": "User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.livelike_profile_id}",
          "description": "The unique LiveLike user identifier.",
          "key": "livelike_profile_id",
          "label": "LiveLike User Profile ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.distinct_id}",
          "description": "Segment Anonymous ID.",
          "key": "anonymous_id",
          "label": "Segment Anonymous ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.custom_id}",
          "description": "In case you are not able to store \`livelike_profile_id\`, LiveLike provides a way to create your own access tokens which helps us to map your user_id to a unique \`livelike_profile_id\`. Please refer [LiveLike Docs](https://docs.livelike.com/docs/client-generated-access-tokens) for more info.",
          "key": "custom_id",
          "label": "Custom ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The date and time when the event occurred in ISO 8601 format. Defaults to current time if not provided. For example, \`2019-09-30T15:59:44.933696Z\`.",
          "key": "timestamp",
          "label": "Timestamp",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties}",
          "description": "Properties of the event.",
          "key": "properties",
          "label": "Event Properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "trackEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Page Calls",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = '$screen'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.event}",
          "description": "The name of the event being performed. For example, \`User Registration\` could be an event_name referring the event that is being sent to LiveLike.",
          "key": "event_name",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.type}",
          "description": "The type of event (track/screen/page)",
          "key": "event_type",
          "label": "Event Type",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id}",
          "description": "A unique identifier for a user.",
          "key": "segment_user_id",
          "label": "User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.livelike_profile_id}",
          "description": "The unique LiveLike user identifier.",
          "key": "livelike_profile_id",
          "label": "LiveLike User Profile ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.distinct_id}",
          "description": "Segment Anonymous ID.",
          "key": "anonymous_id",
          "label": "Segment Anonymous ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.custom_id}",
          "description": "In case you are not able to store \`livelike_profile_id\`, LiveLike provides a way to create your own access tokens which helps us to map your user_id to a unique \`livelike_profile_id\`. Please refer [LiveLike Docs](https://docs.livelike.com/docs/client-generated-access-tokens) for more info.",
          "key": "custom_id",
          "label": "Custom ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The date and time when the event occurred in ISO 8601 format. Defaults to current time if not provided. For example, \`2019-09-30T15:59:44.933696Z\`.",
          "key": "timestamp",
          "label": "Timestamp",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties}",
          "description": "Properties of the event.",
          "key": "properties",
          "label": "Event Properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "trackEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Screen Calls",
    },
  ],
  "name": "LiveLike",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 57 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Twilio Studio",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/twilio.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-twilio-studio",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Your Twilio Account SID, starting with AC. You can find this in the Account Info section of your dashboard in the [Twilio Console](https://www.twilio.com/console).",
      "key": "accountSid",
      "label": "Account SID",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "Your Twilio Auth Token. You can find this in the Account Info section of your dashboard in the [Twilio Console](https://www.twilio.com/console).",
      "key": "authToken",
      "label": "Auth Token",
      "required": true,
      "secret": false,
      "type": "password",
    },
    {
      "default": undefined,
      "description": "Your Segment Space ID.",
      "key": "spaceId",
      "label": "Space ID",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "Your Segment Profile API Access Token.",
      "key": "profileApiAccessToken",
      "label": "Profile API Access Token",
      "required": true,
      "secret": false,
      "type": "password",
    },
  ],
  "mapping_templates": [],
  "name": "Twilio Studio",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 58 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Blackbaud Raiser's Edge NXT",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/blackbaud.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-blackbaud-raisers-edge-nxt",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "The access key found on your Blackbaud "My subscriptions" page.",
      "key": "bbApiSubscriptionKey",
      "label": "Blackbaud API Subscription Key",
      "required": true,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [],
  "name": "Blackbaud Raiser's Edge NXT",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 59 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Pinterest Conversions API",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/pinterest.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-pinterest-conversions-api",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Unique identifier of an ad account. This can be found in the Pinterest UI by following the steps mentioned [here](https://developers.pinterest.com/docs/conversions/conversions/#Find%20your%20%2Cad_account_id).",
      "key": "ad_account_id",
      "label": "Ad Account ID",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "The conversion token for your Pinterest account. This can be found in the Pinterest UI by following the steps mentioned [here](https://developers.pinterest.com/docs/conversions/conversions/#Get%20the%20conversion%20token).",
      "key": "conversion_token",
      "label": "Conversion Token",
      "required": true,
      "secret": false,
      "type": "password",
    },
  ],
  "mapping_templates": [
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify') AND event = 'Product Added'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "choices": [
            {
              "label": "Add to Cart",
              "value": "add_to_cart",
            },
            {
              "label": "Checkout",
              "value": "checkout",
            },
            {
              "label": "Lead",
              "value": "lead",
            },
            {
              "label": "Page Visit",
              "value": "page_visit",
            },
            {
              "label": "Search",
              "value": "search",
            },
            {
              "label": "Sign Up",
              "value": "signup",
            },
            {
              "label": "View Category",
              "value": "view_category",
            },
            {
              "label": "Watch Video",
              "value": "watch_video",
            },
            {
              "label": "Custom",
              "value": "custom",
            },
          ],
          "default": undefined,
          "description": "The conversion event type. For custom events, you must use the predefined event name "custom". Please refer to the possible event types in [Pinterest API docs](https://developers.pinterest.com/docs/api/v5/#operation/events/create).",
          "key": "event_name",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "choice",
        },
        {
          "choices": [
            {
              "label": "App Android",
              "value": "app_android",
            },
            {
              "label": "App IOS",
              "value": "app_ios",
            },
            {
              "label": "Web",
              "value": "web",
            },
            {
              "label": "Offline",
              "value": "offline",
            },
          ],
          "default": "web",
          "description": "The source indicating where the conversion event occurred. This must be app_android, app_ios , web or offline.",
          "key": "action_source",
          "label": "Action Source",
          "required": true,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.timestamp}",
          "description": "Device IDs can be used to add and remove only anonymous users to/from a cohort. However, users with an assigned User ID cannot use Device ID to sync to a cohort.",
          "key": "event_time",
          "label": "Event Timestamp",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "A unique id string that identifies this event and can be used for deduping between events ingested via both the conversion API and Pinterest tracking.",
          "key": "event_id",
          "label": "Event ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "URL of the web conversion event.",
          "key": "event_source_url",
          "label": "Event Source URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": true,
          "description": "When action_source is web or offline, it defines whether the user has opted out of tracking for web conversion events. While when action_source is app_android or app_ios, it defines whether the user has enabled Limit Ad Tracking on their iOS device, or opted out of Ads Personalization on their Android device.",
          "key": "opt_out",
          "label": "Opt Out",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": {
            "city": undefined,
            "click_id": undefined,
            "client_ip_address": "{event.properties.$ip}",
            "client_user_agent": "{event.properties.$raw_user_agent}",
            "country": undefined,
            "date_of_birth": undefined,
            "email": "{event.properties.email ?? person.properties.email}",
            "external_id": undefined,
            "first_name": undefined,
            "gender": undefined,
            "hashed_maids": undefined,
            "last_name": undefined,
            "partner_id": undefined,
            "phone": undefined,
            "state": undefined,
            "zip": undefined,
          },
          "description": "Object containing customer information data. Note, It is required at least one of 1) em, 2) hashed_maids or 3) pair client_ip_address + client_user_agent..",
          "key": "user_data",
          "label": "User Data",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "content_ids": undefined,
            "contents": undefined,
            "currency": "{event.properties.currency}",
            "num_items": undefined,
            "opt_out_type": undefined,
            "order_id": "{event.properties.order_id}",
            "search_string": "{event.properties.query}",
            "value": "{event.properties.price ?? event.properties.value}",
          },
          "description": "Object containing customer information data.",
          "key": "custom_data",
          "label": "Custom Data",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{context.app.id}",
          "description": "The app store app ID.",
          "key": "app_id",
          "label": "App ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.event.properties.$app_name}",
          "description": "Name of the app. ",
          "key": "app_name",
          "label": "App Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.event.properties.$app_version}",
          "description": "Version of the app.",
          "key": "app_version",
          "label": "App Version",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "Brand of the user device.",
          "key": "device_brand",
          "label": "Device Brand",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{context.device.carrier}",
          "description": "User device’s mobile carrier. ",
          "key": "device_carrier",
          "label": "Device Carrier",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_model}",
          "description": "Model of the user device.",
          "key": "device_model",
          "label": "Device Model",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_type}",
          "description": "Type of the user device.",
          "key": "device_type",
          "label": "Device Type",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$os_version}",
          "description": "Version of the device operating system.",
          "key": "os_version",
          "label": "OS Version",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "Whether the event occurred when the user device was connected to wifi.",
          "key": "wifi",
          "label": "Wifi",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Two-character ISO-639-1 language code indicating the user's language.",
          "key": "language",
          "label": "Language",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "reportConversionEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Add to Cart",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify') AND event = 'Checkout'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "choices": [
            {
              "label": "Add to Cart",
              "value": "add_to_cart",
            },
            {
              "label": "Checkout",
              "value": "checkout",
            },
            {
              "label": "Lead",
              "value": "lead",
            },
            {
              "label": "Page Visit",
              "value": "page_visit",
            },
            {
              "label": "Search",
              "value": "search",
            },
            {
              "label": "Sign Up",
              "value": "signup",
            },
            {
              "label": "View Category",
              "value": "view_category",
            },
            {
              "label": "Watch Video",
              "value": "watch_video",
            },
            {
              "label": "Custom",
              "value": "custom",
            },
          ],
          "default": undefined,
          "description": "The conversion event type. For custom events, you must use the predefined event name "custom". Please refer to the possible event types in [Pinterest API docs](https://developers.pinterest.com/docs/api/v5/#operation/events/create).",
          "key": "event_name",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "choice",
        },
        {
          "choices": [
            {
              "label": "App Android",
              "value": "app_android",
            },
            {
              "label": "App IOS",
              "value": "app_ios",
            },
            {
              "label": "Web",
              "value": "web",
            },
            {
              "label": "Offline",
              "value": "offline",
            },
          ],
          "default": "web",
          "description": "The source indicating where the conversion event occurred. This must be app_android, app_ios , web or offline.",
          "key": "action_source",
          "label": "Action Source",
          "required": true,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.timestamp}",
          "description": "Device IDs can be used to add and remove only anonymous users to/from a cohort. However, users with an assigned User ID cannot use Device ID to sync to a cohort.",
          "key": "event_time",
          "label": "Event Timestamp",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "A unique id string that identifies this event and can be used for deduping between events ingested via both the conversion API and Pinterest tracking.",
          "key": "event_id",
          "label": "Event ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "URL of the web conversion event.",
          "key": "event_source_url",
          "label": "Event Source URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": true,
          "description": "When action_source is web or offline, it defines whether the user has opted out of tracking for web conversion events. While when action_source is app_android or app_ios, it defines whether the user has enabled Limit Ad Tracking on their iOS device, or opted out of Ads Personalization on their Android device.",
          "key": "opt_out",
          "label": "Opt Out",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": {
            "city": undefined,
            "click_id": undefined,
            "client_ip_address": "{event.properties.$ip}",
            "client_user_agent": "{event.properties.$raw_user_agent}",
            "country": undefined,
            "date_of_birth": undefined,
            "email": "{event.properties.email ?? person.properties.email}",
            "external_id": undefined,
            "first_name": undefined,
            "gender": undefined,
            "hashed_maids": undefined,
            "last_name": undefined,
            "partner_id": undefined,
            "phone": undefined,
            "state": undefined,
            "zip": undefined,
          },
          "description": "Object containing customer information data. Note, It is required at least one of 1) em, 2) hashed_maids or 3) pair client_ip_address + client_user_agent..",
          "key": "user_data",
          "label": "User Data",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "content_ids": undefined,
            "contents": undefined,
            "currency": "{event.properties.currency}",
            "num_items": undefined,
            "opt_out_type": undefined,
            "order_id": "{event.properties.order_id}",
            "search_string": "{event.properties.query}",
            "value": "{event.properties.price ?? event.properties.value}",
          },
          "description": "Object containing customer information data.",
          "key": "custom_data",
          "label": "Custom Data",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{context.app.id}",
          "description": "The app store app ID.",
          "key": "app_id",
          "label": "App ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.event.properties.$app_name}",
          "description": "Name of the app. ",
          "key": "app_name",
          "label": "App Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.event.properties.$app_version}",
          "description": "Version of the app.",
          "key": "app_version",
          "label": "App Version",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "Brand of the user device.",
          "key": "device_brand",
          "label": "Device Brand",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{context.device.carrier}",
          "description": "User device’s mobile carrier. ",
          "key": "device_carrier",
          "label": "Device Carrier",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_model}",
          "description": "Model of the user device.",
          "key": "device_model",
          "label": "Device Model",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_type}",
          "description": "Type of the user device.",
          "key": "device_type",
          "label": "Device Type",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$os_version}",
          "description": "Version of the device operating system.",
          "key": "os_version",
          "label": "OS Version",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "Whether the event occurred when the user device was connected to wifi.",
          "key": "wifi",
          "label": "Wifi",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Two-character ISO-639-1 language code indicating the user's language.",
          "key": "language",
          "label": "Language",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "reportConversionEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Checkout",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify') AND event = 'Generate Lead'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "choices": [
            {
              "label": "Add to Cart",
              "value": "add_to_cart",
            },
            {
              "label": "Checkout",
              "value": "checkout",
            },
            {
              "label": "Lead",
              "value": "lead",
            },
            {
              "label": "Page Visit",
              "value": "page_visit",
            },
            {
              "label": "Search",
              "value": "search",
            },
            {
              "label": "Sign Up",
              "value": "signup",
            },
            {
              "label": "View Category",
              "value": "view_category",
            },
            {
              "label": "Watch Video",
              "value": "watch_video",
            },
            {
              "label": "Custom",
              "value": "custom",
            },
          ],
          "default": undefined,
          "description": "The conversion event type. For custom events, you must use the predefined event name "custom". Please refer to the possible event types in [Pinterest API docs](https://developers.pinterest.com/docs/api/v5/#operation/events/create).",
          "key": "event_name",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "choice",
        },
        {
          "choices": [
            {
              "label": "App Android",
              "value": "app_android",
            },
            {
              "label": "App IOS",
              "value": "app_ios",
            },
            {
              "label": "Web",
              "value": "web",
            },
            {
              "label": "Offline",
              "value": "offline",
            },
          ],
          "default": "web",
          "description": "The source indicating where the conversion event occurred. This must be app_android, app_ios , web or offline.",
          "key": "action_source",
          "label": "Action Source",
          "required": true,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.timestamp}",
          "description": "Device IDs can be used to add and remove only anonymous users to/from a cohort. However, users with an assigned User ID cannot use Device ID to sync to a cohort.",
          "key": "event_time",
          "label": "Event Timestamp",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "A unique id string that identifies this event and can be used for deduping between events ingested via both the conversion API and Pinterest tracking.",
          "key": "event_id",
          "label": "Event ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "URL of the web conversion event.",
          "key": "event_source_url",
          "label": "Event Source URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": true,
          "description": "When action_source is web or offline, it defines whether the user has opted out of tracking for web conversion events. While when action_source is app_android or app_ios, it defines whether the user has enabled Limit Ad Tracking on their iOS device, or opted out of Ads Personalization on their Android device.",
          "key": "opt_out",
          "label": "Opt Out",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": {
            "city": undefined,
            "click_id": undefined,
            "client_ip_address": "{event.properties.$ip}",
            "client_user_agent": "{event.properties.$raw_user_agent}",
            "country": undefined,
            "date_of_birth": undefined,
            "email": "{event.properties.email ?? person.properties.email}",
            "external_id": undefined,
            "first_name": undefined,
            "gender": undefined,
            "hashed_maids": undefined,
            "last_name": undefined,
            "partner_id": undefined,
            "phone": undefined,
            "state": undefined,
            "zip": undefined,
          },
          "description": "Object containing customer information data. Note, It is required at least one of 1) em, 2) hashed_maids or 3) pair client_ip_address + client_user_agent..",
          "key": "user_data",
          "label": "User Data",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "content_ids": undefined,
            "contents": undefined,
            "currency": "{event.properties.currency}",
            "num_items": undefined,
            "opt_out_type": undefined,
            "order_id": "{event.properties.order_id}",
            "search_string": "{event.properties.query}",
            "value": "{event.properties.price ?? event.properties.value}",
          },
          "description": "Object containing customer information data.",
          "key": "custom_data",
          "label": "Custom Data",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{context.app.id}",
          "description": "The app store app ID.",
          "key": "app_id",
          "label": "App ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.event.properties.$app_name}",
          "description": "Name of the app. ",
          "key": "app_name",
          "label": "App Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.event.properties.$app_version}",
          "description": "Version of the app.",
          "key": "app_version",
          "label": "App Version",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "Brand of the user device.",
          "key": "device_brand",
          "label": "Device Brand",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{context.device.carrier}",
          "description": "User device’s mobile carrier. ",
          "key": "device_carrier",
          "label": "Device Carrier",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_model}",
          "description": "Model of the user device.",
          "key": "device_model",
          "label": "Device Model",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_type}",
          "description": "Type of the user device.",
          "key": "device_type",
          "label": "Device Type",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$os_version}",
          "description": "Version of the device operating system.",
          "key": "os_version",
          "label": "OS Version",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "Whether the event occurred when the user device was connected to wifi.",
          "key": "wifi",
          "label": "Wifi",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Two-character ISO-639-1 language code indicating the user's language.",
          "key": "language",
          "label": "Language",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "reportConversionEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Lead",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = '$pageview'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "choices": [
            {
              "label": "Add to Cart",
              "value": "add_to_cart",
            },
            {
              "label": "Checkout",
              "value": "checkout",
            },
            {
              "label": "Lead",
              "value": "lead",
            },
            {
              "label": "Page Visit",
              "value": "page_visit",
            },
            {
              "label": "Search",
              "value": "search",
            },
            {
              "label": "Sign Up",
              "value": "signup",
            },
            {
              "label": "View Category",
              "value": "view_category",
            },
            {
              "label": "Watch Video",
              "value": "watch_video",
            },
            {
              "label": "Custom",
              "value": "custom",
            },
          ],
          "default": undefined,
          "description": "The conversion event type. For custom events, you must use the predefined event name "custom". Please refer to the possible event types in [Pinterest API docs](https://developers.pinterest.com/docs/api/v5/#operation/events/create).",
          "key": "event_name",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "choice",
        },
        {
          "choices": [
            {
              "label": "App Android",
              "value": "app_android",
            },
            {
              "label": "App IOS",
              "value": "app_ios",
            },
            {
              "label": "Web",
              "value": "web",
            },
            {
              "label": "Offline",
              "value": "offline",
            },
          ],
          "default": "web",
          "description": "The source indicating where the conversion event occurred. This must be app_android, app_ios , web or offline.",
          "key": "action_source",
          "label": "Action Source",
          "required": true,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.timestamp}",
          "description": "Device IDs can be used to add and remove only anonymous users to/from a cohort. However, users with an assigned User ID cannot use Device ID to sync to a cohort.",
          "key": "event_time",
          "label": "Event Timestamp",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "A unique id string that identifies this event and can be used for deduping between events ingested via both the conversion API and Pinterest tracking.",
          "key": "event_id",
          "label": "Event ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "URL of the web conversion event.",
          "key": "event_source_url",
          "label": "Event Source URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": true,
          "description": "When action_source is web or offline, it defines whether the user has opted out of tracking for web conversion events. While when action_source is app_android or app_ios, it defines whether the user has enabled Limit Ad Tracking on their iOS device, or opted out of Ads Personalization on their Android device.",
          "key": "opt_out",
          "label": "Opt Out",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": {
            "city": undefined,
            "click_id": undefined,
            "client_ip_address": "{event.properties.$ip}",
            "client_user_agent": "{event.properties.$raw_user_agent}",
            "country": undefined,
            "date_of_birth": undefined,
            "email": "{event.properties.email ?? person.properties.email}",
            "external_id": undefined,
            "first_name": undefined,
            "gender": undefined,
            "hashed_maids": undefined,
            "last_name": undefined,
            "partner_id": undefined,
            "phone": undefined,
            "state": undefined,
            "zip": undefined,
          },
          "description": "Object containing customer information data. Note, It is required at least one of 1) em, 2) hashed_maids or 3) pair client_ip_address + client_user_agent..",
          "key": "user_data",
          "label": "User Data",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "content_ids": undefined,
            "contents": undefined,
            "currency": "{event.properties.currency}",
            "num_items": undefined,
            "opt_out_type": undefined,
            "order_id": "{event.properties.order_id}",
            "search_string": "{event.properties.query}",
            "value": "{event.properties.price ?? event.properties.value}",
          },
          "description": "Object containing customer information data.",
          "key": "custom_data",
          "label": "Custom Data",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{context.app.id}",
          "description": "The app store app ID.",
          "key": "app_id",
          "label": "App ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.event.properties.$app_name}",
          "description": "Name of the app. ",
          "key": "app_name",
          "label": "App Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.event.properties.$app_version}",
          "description": "Version of the app.",
          "key": "app_version",
          "label": "App Version",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "Brand of the user device.",
          "key": "device_brand",
          "label": "Device Brand",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{context.device.carrier}",
          "description": "User device’s mobile carrier. ",
          "key": "device_carrier",
          "label": "Device Carrier",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_model}",
          "description": "Model of the user device.",
          "key": "device_model",
          "label": "Device Model",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_type}",
          "description": "Type of the user device.",
          "key": "device_type",
          "label": "Device Type",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$os_version}",
          "description": "Version of the device operating system.",
          "key": "os_version",
          "label": "OS Version",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "Whether the event occurred when the user device was connected to wifi.",
          "key": "wifi",
          "label": "Wifi",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Two-character ISO-639-1 language code indicating the user's language.",
          "key": "language",
          "label": "Language",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "reportConversionEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Page Visit",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify') AND event = 'Products Searched'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "choices": [
            {
              "label": "Add to Cart",
              "value": "add_to_cart",
            },
            {
              "label": "Checkout",
              "value": "checkout",
            },
            {
              "label": "Lead",
              "value": "lead",
            },
            {
              "label": "Page Visit",
              "value": "page_visit",
            },
            {
              "label": "Search",
              "value": "search",
            },
            {
              "label": "Sign Up",
              "value": "signup",
            },
            {
              "label": "View Category",
              "value": "view_category",
            },
            {
              "label": "Watch Video",
              "value": "watch_video",
            },
            {
              "label": "Custom",
              "value": "custom",
            },
          ],
          "default": undefined,
          "description": "The conversion event type. For custom events, you must use the predefined event name "custom". Please refer to the possible event types in [Pinterest API docs](https://developers.pinterest.com/docs/api/v5/#operation/events/create).",
          "key": "event_name",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "choice",
        },
        {
          "choices": [
            {
              "label": "App Android",
              "value": "app_android",
            },
            {
              "label": "App IOS",
              "value": "app_ios",
            },
            {
              "label": "Web",
              "value": "web",
            },
            {
              "label": "Offline",
              "value": "offline",
            },
          ],
          "default": "web",
          "description": "The source indicating where the conversion event occurred. This must be app_android, app_ios , web or offline.",
          "key": "action_source",
          "label": "Action Source",
          "required": true,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.timestamp}",
          "description": "Device IDs can be used to add and remove only anonymous users to/from a cohort. However, users with an assigned User ID cannot use Device ID to sync to a cohort.",
          "key": "event_time",
          "label": "Event Timestamp",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "A unique id string that identifies this event and can be used for deduping between events ingested via both the conversion API and Pinterest tracking.",
          "key": "event_id",
          "label": "Event ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "URL of the web conversion event.",
          "key": "event_source_url",
          "label": "Event Source URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": true,
          "description": "When action_source is web or offline, it defines whether the user has opted out of tracking for web conversion events. While when action_source is app_android or app_ios, it defines whether the user has enabled Limit Ad Tracking on their iOS device, or opted out of Ads Personalization on their Android device.",
          "key": "opt_out",
          "label": "Opt Out",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": {
            "city": undefined,
            "click_id": undefined,
            "client_ip_address": "{event.properties.$ip}",
            "client_user_agent": "{event.properties.$raw_user_agent}",
            "country": undefined,
            "date_of_birth": undefined,
            "email": "{event.properties.email ?? person.properties.email}",
            "external_id": undefined,
            "first_name": undefined,
            "gender": undefined,
            "hashed_maids": undefined,
            "last_name": undefined,
            "partner_id": undefined,
            "phone": undefined,
            "state": undefined,
            "zip": undefined,
          },
          "description": "Object containing customer information data. Note, It is required at least one of 1) em, 2) hashed_maids or 3) pair client_ip_address + client_user_agent..",
          "key": "user_data",
          "label": "User Data",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "content_ids": undefined,
            "contents": undefined,
            "currency": "{event.properties.currency}",
            "num_items": undefined,
            "opt_out_type": undefined,
            "order_id": "{event.properties.order_id}",
            "search_string": "{event.properties.query}",
            "value": "{event.properties.price ?? event.properties.value}",
          },
          "description": "Object containing customer information data.",
          "key": "custom_data",
          "label": "Custom Data",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{context.app.id}",
          "description": "The app store app ID.",
          "key": "app_id",
          "label": "App ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.event.properties.$app_name}",
          "description": "Name of the app. ",
          "key": "app_name",
          "label": "App Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.event.properties.$app_version}",
          "description": "Version of the app.",
          "key": "app_version",
          "label": "App Version",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "Brand of the user device.",
          "key": "device_brand",
          "label": "Device Brand",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{context.device.carrier}",
          "description": "User device’s mobile carrier. ",
          "key": "device_carrier",
          "label": "Device Carrier",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_model}",
          "description": "Model of the user device.",
          "key": "device_model",
          "label": "Device Model",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_type}",
          "description": "Type of the user device.",
          "key": "device_type",
          "label": "Device Type",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$os_version}",
          "description": "Version of the device operating system.",
          "key": "os_version",
          "label": "OS Version",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "Whether the event occurred when the user device was connected to wifi.",
          "key": "wifi",
          "label": "Wifi",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Two-character ISO-639-1 language code indicating the user's language.",
          "key": "language",
          "label": "Language",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "reportConversionEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Search",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify') AND event = 'Signed Up'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "choices": [
            {
              "label": "Add to Cart",
              "value": "add_to_cart",
            },
            {
              "label": "Checkout",
              "value": "checkout",
            },
            {
              "label": "Lead",
              "value": "lead",
            },
            {
              "label": "Page Visit",
              "value": "page_visit",
            },
            {
              "label": "Search",
              "value": "search",
            },
            {
              "label": "Sign Up",
              "value": "signup",
            },
            {
              "label": "View Category",
              "value": "view_category",
            },
            {
              "label": "Watch Video",
              "value": "watch_video",
            },
            {
              "label": "Custom",
              "value": "custom",
            },
          ],
          "default": undefined,
          "description": "The conversion event type. For custom events, you must use the predefined event name "custom". Please refer to the possible event types in [Pinterest API docs](https://developers.pinterest.com/docs/api/v5/#operation/events/create).",
          "key": "event_name",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "choice",
        },
        {
          "choices": [
            {
              "label": "App Android",
              "value": "app_android",
            },
            {
              "label": "App IOS",
              "value": "app_ios",
            },
            {
              "label": "Web",
              "value": "web",
            },
            {
              "label": "Offline",
              "value": "offline",
            },
          ],
          "default": "web",
          "description": "The source indicating where the conversion event occurred. This must be app_android, app_ios , web or offline.",
          "key": "action_source",
          "label": "Action Source",
          "required": true,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.timestamp}",
          "description": "Device IDs can be used to add and remove only anonymous users to/from a cohort. However, users with an assigned User ID cannot use Device ID to sync to a cohort.",
          "key": "event_time",
          "label": "Event Timestamp",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "A unique id string that identifies this event and can be used for deduping between events ingested via both the conversion API and Pinterest tracking.",
          "key": "event_id",
          "label": "Event ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "URL of the web conversion event.",
          "key": "event_source_url",
          "label": "Event Source URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": true,
          "description": "When action_source is web or offline, it defines whether the user has opted out of tracking for web conversion events. While when action_source is app_android or app_ios, it defines whether the user has enabled Limit Ad Tracking on their iOS device, or opted out of Ads Personalization on their Android device.",
          "key": "opt_out",
          "label": "Opt Out",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": {
            "city": undefined,
            "click_id": undefined,
            "client_ip_address": "{event.properties.$ip}",
            "client_user_agent": "{event.properties.$raw_user_agent}",
            "country": undefined,
            "date_of_birth": undefined,
            "email": "{event.properties.email ?? person.properties.email}",
            "external_id": undefined,
            "first_name": undefined,
            "gender": undefined,
            "hashed_maids": undefined,
            "last_name": undefined,
            "partner_id": undefined,
            "phone": undefined,
            "state": undefined,
            "zip": undefined,
          },
          "description": "Object containing customer information data. Note, It is required at least one of 1) em, 2) hashed_maids or 3) pair client_ip_address + client_user_agent..",
          "key": "user_data",
          "label": "User Data",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "content_ids": undefined,
            "contents": undefined,
            "currency": "{event.properties.currency}",
            "num_items": undefined,
            "opt_out_type": undefined,
            "order_id": "{event.properties.order_id}",
            "search_string": "{event.properties.query}",
            "value": "{event.properties.price ?? event.properties.value}",
          },
          "description": "Object containing customer information data.",
          "key": "custom_data",
          "label": "Custom Data",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{context.app.id}",
          "description": "The app store app ID.",
          "key": "app_id",
          "label": "App ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.event.properties.$app_name}",
          "description": "Name of the app. ",
          "key": "app_name",
          "label": "App Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.event.properties.$app_version}",
          "description": "Version of the app.",
          "key": "app_version",
          "label": "App Version",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "Brand of the user device.",
          "key": "device_brand",
          "label": "Device Brand",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{context.device.carrier}",
          "description": "User device’s mobile carrier. ",
          "key": "device_carrier",
          "label": "Device Carrier",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_model}",
          "description": "Model of the user device.",
          "key": "device_model",
          "label": "Device Model",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_type}",
          "description": "Type of the user device.",
          "key": "device_type",
          "label": "Device Type",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$os_version}",
          "description": "Version of the device operating system.",
          "key": "os_version",
          "label": "OS Version",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "Whether the event occurred when the user device was connected to wifi.",
          "key": "wifi",
          "label": "Wifi",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Two-character ISO-639-1 language code indicating the user's language.",
          "key": "language",
          "label": "Language",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "reportConversionEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Sign Up",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify') AND event = 'Product Category Viewed'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "choices": [
            {
              "label": "Add to Cart",
              "value": "add_to_cart",
            },
            {
              "label": "Checkout",
              "value": "checkout",
            },
            {
              "label": "Lead",
              "value": "lead",
            },
            {
              "label": "Page Visit",
              "value": "page_visit",
            },
            {
              "label": "Search",
              "value": "search",
            },
            {
              "label": "Sign Up",
              "value": "signup",
            },
            {
              "label": "View Category",
              "value": "view_category",
            },
            {
              "label": "Watch Video",
              "value": "watch_video",
            },
            {
              "label": "Custom",
              "value": "custom",
            },
          ],
          "default": undefined,
          "description": "The conversion event type. For custom events, you must use the predefined event name "custom". Please refer to the possible event types in [Pinterest API docs](https://developers.pinterest.com/docs/api/v5/#operation/events/create).",
          "key": "event_name",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "choice",
        },
        {
          "choices": [
            {
              "label": "App Android",
              "value": "app_android",
            },
            {
              "label": "App IOS",
              "value": "app_ios",
            },
            {
              "label": "Web",
              "value": "web",
            },
            {
              "label": "Offline",
              "value": "offline",
            },
          ],
          "default": "web",
          "description": "The source indicating where the conversion event occurred. This must be app_android, app_ios , web or offline.",
          "key": "action_source",
          "label": "Action Source",
          "required": true,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.timestamp}",
          "description": "Device IDs can be used to add and remove only anonymous users to/from a cohort. However, users with an assigned User ID cannot use Device ID to sync to a cohort.",
          "key": "event_time",
          "label": "Event Timestamp",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "A unique id string that identifies this event and can be used for deduping between events ingested via both the conversion API and Pinterest tracking.",
          "key": "event_id",
          "label": "Event ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "URL of the web conversion event.",
          "key": "event_source_url",
          "label": "Event Source URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": true,
          "description": "When action_source is web or offline, it defines whether the user has opted out of tracking for web conversion events. While when action_source is app_android or app_ios, it defines whether the user has enabled Limit Ad Tracking on their iOS device, or opted out of Ads Personalization on their Android device.",
          "key": "opt_out",
          "label": "Opt Out",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": {
            "city": undefined,
            "click_id": undefined,
            "client_ip_address": "{event.properties.$ip}",
            "client_user_agent": "{event.properties.$raw_user_agent}",
            "country": undefined,
            "date_of_birth": undefined,
            "email": "{event.properties.email ?? person.properties.email}",
            "external_id": undefined,
            "first_name": undefined,
            "gender": undefined,
            "hashed_maids": undefined,
            "last_name": undefined,
            "partner_id": undefined,
            "phone": undefined,
            "state": undefined,
            "zip": undefined,
          },
          "description": "Object containing customer information data. Note, It is required at least one of 1) em, 2) hashed_maids or 3) pair client_ip_address + client_user_agent..",
          "key": "user_data",
          "label": "User Data",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "content_ids": undefined,
            "contents": undefined,
            "currency": "{event.properties.currency}",
            "num_items": undefined,
            "opt_out_type": undefined,
            "order_id": "{event.properties.order_id}",
            "search_string": "{event.properties.query}",
            "value": "{event.properties.price ?? event.properties.value}",
          },
          "description": "Object containing customer information data.",
          "key": "custom_data",
          "label": "Custom Data",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{context.app.id}",
          "description": "The app store app ID.",
          "key": "app_id",
          "label": "App ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.event.properties.$app_name}",
          "description": "Name of the app. ",
          "key": "app_name",
          "label": "App Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.event.properties.$app_version}",
          "description": "Version of the app.",
          "key": "app_version",
          "label": "App Version",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "Brand of the user device.",
          "key": "device_brand",
          "label": "Device Brand",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{context.device.carrier}",
          "description": "User device’s mobile carrier. ",
          "key": "device_carrier",
          "label": "Device Carrier",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_model}",
          "description": "Model of the user device.",
          "key": "device_model",
          "label": "Device Model",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_type}",
          "description": "Type of the user device.",
          "key": "device_type",
          "label": "Device Type",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$os_version}",
          "description": "Version of the device operating system.",
          "key": "os_version",
          "label": "OS Version",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "Whether the event occurred when the user device was connected to wifi.",
          "key": "wifi",
          "label": "Wifi",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Two-character ISO-639-1 language code indicating the user's language.",
          "key": "language",
          "label": "Language",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "reportConversionEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "View Category",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify') AND event = 'Product Video Watched'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "choices": [
            {
              "label": "Add to Cart",
              "value": "add_to_cart",
            },
            {
              "label": "Checkout",
              "value": "checkout",
            },
            {
              "label": "Lead",
              "value": "lead",
            },
            {
              "label": "Page Visit",
              "value": "page_visit",
            },
            {
              "label": "Search",
              "value": "search",
            },
            {
              "label": "Sign Up",
              "value": "signup",
            },
            {
              "label": "View Category",
              "value": "view_category",
            },
            {
              "label": "Watch Video",
              "value": "watch_video",
            },
            {
              "label": "Custom",
              "value": "custom",
            },
          ],
          "default": undefined,
          "description": "The conversion event type. For custom events, you must use the predefined event name "custom". Please refer to the possible event types in [Pinterest API docs](https://developers.pinterest.com/docs/api/v5/#operation/events/create).",
          "key": "event_name",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "choice",
        },
        {
          "choices": [
            {
              "label": "App Android",
              "value": "app_android",
            },
            {
              "label": "App IOS",
              "value": "app_ios",
            },
            {
              "label": "Web",
              "value": "web",
            },
            {
              "label": "Offline",
              "value": "offline",
            },
          ],
          "default": "web",
          "description": "The source indicating where the conversion event occurred. This must be app_android, app_ios , web or offline.",
          "key": "action_source",
          "label": "Action Source",
          "required": true,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.timestamp}",
          "description": "Device IDs can be used to add and remove only anonymous users to/from a cohort. However, users with an assigned User ID cannot use Device ID to sync to a cohort.",
          "key": "event_time",
          "label": "Event Timestamp",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "A unique id string that identifies this event and can be used for deduping between events ingested via both the conversion API and Pinterest tracking.",
          "key": "event_id",
          "label": "Event ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "URL of the web conversion event.",
          "key": "event_source_url",
          "label": "Event Source URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": true,
          "description": "When action_source is web or offline, it defines whether the user has opted out of tracking for web conversion events. While when action_source is app_android or app_ios, it defines whether the user has enabled Limit Ad Tracking on their iOS device, or opted out of Ads Personalization on their Android device.",
          "key": "opt_out",
          "label": "Opt Out",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": {
            "city": undefined,
            "click_id": undefined,
            "client_ip_address": "{event.properties.$ip}",
            "client_user_agent": "{event.properties.$raw_user_agent}",
            "country": undefined,
            "date_of_birth": undefined,
            "email": "{event.properties.email ?? person.properties.email}",
            "external_id": undefined,
            "first_name": undefined,
            "gender": undefined,
            "hashed_maids": undefined,
            "last_name": undefined,
            "partner_id": undefined,
            "phone": undefined,
            "state": undefined,
            "zip": undefined,
          },
          "description": "Object containing customer information data. Note, It is required at least one of 1) em, 2) hashed_maids or 3) pair client_ip_address + client_user_agent..",
          "key": "user_data",
          "label": "User Data",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "content_ids": undefined,
            "contents": undefined,
            "currency": "{event.properties.currency}",
            "num_items": undefined,
            "opt_out_type": undefined,
            "order_id": "{event.properties.order_id}",
            "search_string": "{event.properties.query}",
            "value": "{event.properties.price ?? event.properties.value}",
          },
          "description": "Object containing customer information data.",
          "key": "custom_data",
          "label": "Custom Data",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{context.app.id}",
          "description": "The app store app ID.",
          "key": "app_id",
          "label": "App ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.event.properties.$app_name}",
          "description": "Name of the app. ",
          "key": "app_name",
          "label": "App Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.event.properties.$app_version}",
          "description": "Version of the app.",
          "key": "app_version",
          "label": "App Version",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "Brand of the user device.",
          "key": "device_brand",
          "label": "Device Brand",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{context.device.carrier}",
          "description": "User device’s mobile carrier. ",
          "key": "device_carrier",
          "label": "Device Carrier",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_model}",
          "description": "Model of the user device.",
          "key": "device_model",
          "label": "Device Model",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_type}",
          "description": "Type of the user device.",
          "key": "device_type",
          "label": "Device Type",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$os_version}",
          "description": "Version of the device operating system.",
          "key": "os_version",
          "label": "OS Version",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "Whether the event occurred when the user device was connected to wifi.",
          "key": "wifi",
          "label": "Wifi",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Two-character ISO-639-1 language code indicating the user's language.",
          "key": "language",
          "label": "Language",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "reportConversionEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Watch Video",
    },
  ],
  "name": "Pinterest Conversions API",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 60 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Algolia Insights",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/algolia.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-algolia-insights",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Your Algolia Application ID.",
      "key": "appId",
      "label": "appId",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "An API key which has write permissions to the Algolia Insights API",
      "key": "apiKey",
      "label": "apiKey",
      "required": true,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify') and event = 'Product Clicked'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.properties.product_id}",
          "description": "Populates the ObjectIds field in the Algolia Insights API. Product ID of the clicked item.",
          "key": "objectID",
          "label": "Product ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.search_index}",
          "description": "Name of the targeted search index.",
          "key": "index",
          "label": "Index",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.query_id}",
          "description": "Query ID of the list on which the item was clicked.",
          "key": "queryID",
          "label": "Query ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.position}",
          "description": "Position of the click in the list of Algolia search results.",
          "key": "position",
          "label": "Position",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "The ID associated with the user.",
          "key": "userToken",
          "label": "User Token",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The timestamp of the event.",
          "key": "timestamp",
          "label": "Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties}",
          "description": "Additional fields for this event. This field may be useful for Algolia Insights fields which are not mapped in Segment.",
          "key": "extraProperties",
          "label": "Extra Properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "Product Clicked",
          "description": "The name of the event to be send to Algolia. Defaults to 'Product Clicked'",
          "key": "eventName",
          "label": "Event Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "choices": [
            {
              "label": "view",
              "value": "view",
            },
            {
              "label": "conversion",
              "value": "conversion",
            },
            {
              "label": "click",
              "value": "click",
            },
          ],
          "default": "click",
          "description": "The type of event to send to Algolia. Defaults to 'click'",
          "key": "eventType",
          "label": "Event Type",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "productClickedEvents",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Send product clicked events to Algolia",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify') and event = 'Order Completed'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "choices": [
            {
              "label": "Purchase",
              "value": "purchase",
            },
            {
              "label": "Add To Cart",
              "value": "addToCart",
            },
          ],
          "default": "purchase",
          "description": "Sub-type of the event, "purchase" or "addToCart".",
          "key": "eventSubtype",
          "label": "Event Subtype",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": {
            "discount": undefined,
            "price": undefined,
            "product_id": undefined,
            "quantity": undefined,
            "queryID": undefined,
          },
          "description": "Populates the ObjectIDs field in the Algolia Insights API. An array of objects representing the purchased items. Each object must contain a product_id field.",
          "key": "products",
          "label": "Product Details",
          "required": true,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.properties.search_index}",
          "description": "Name of the targeted search index.",
          "key": "index",
          "label": "Index",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.query_id}",
          "description": "Query ID of the list on which the item was purchased.",
          "key": "queryID",
          "label": "Query ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "The ID associated with the user.",
          "key": "userToken",
          "label": "User Token",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The timestamp of the event.",
          "key": "timestamp",
          "label": "Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.value}",
          "description": "The value of the cart that is being converted.",
          "key": "value",
          "label": "Value",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.currency}",
          "description": "Currency of the objects associated with the event in 3-letter ISO 4217 format. Required when \`value\` or \`price\` is set.",
          "key": "currency",
          "label": "Currency",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties}",
          "description": "Additional fields for this event. This field may be useful for Algolia Insights fields which are not mapped in Segment.",
          "key": "extraProperties",
          "label": "Extra Properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "Conversion Event",
          "description": "The name of the event to send to Algolia. Defaults to 'Conversion Event'",
          "key": "eventName",
          "label": "Event Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "choices": [
            {
              "label": "View",
              "value": "view",
            },
            {
              "label": "Conversion",
              "value": "conversion",
            },
            {
              "label": "Click",
              "value": "click",
            },
          ],
          "default": "conversion",
          "description": "The type of event to send to Algolia. Defaults to 'conversion'",
          "key": "eventType",
          "label": "Event Type",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "conversionEvents",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Send purchase events to Algolia",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify') and event = 'Product Added'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "choices": [
            {
              "label": "Purchase",
              "value": "purchase",
            },
            {
              "label": "Add To Cart",
              "value": "addToCart",
            },
          ],
          "default": "purchase",
          "description": "Sub-type of the event, "purchase" or "addToCart".",
          "key": "eventSubtype",
          "label": "Event Subtype",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": {
            "discount": undefined,
            "price": undefined,
            "product_id": undefined,
            "quantity": undefined,
            "queryID": undefined,
          },
          "description": "Populates the ObjectIDs field in the Algolia Insights API. An array of objects representing the purchased items. Each object must contain a product_id field.",
          "key": "products",
          "label": "Product Details",
          "required": true,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.properties.search_index}",
          "description": "Name of the targeted search index.",
          "key": "index",
          "label": "Index",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.query_id}",
          "description": "Query ID of the list on which the item was purchased.",
          "key": "queryID",
          "label": "Query ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "The ID associated with the user.",
          "key": "userToken",
          "label": "User Token",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The timestamp of the event.",
          "key": "timestamp",
          "label": "Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.value}",
          "description": "The value of the cart that is being converted.",
          "key": "value",
          "label": "Value",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.currency}",
          "description": "Currency of the objects associated with the event in 3-letter ISO 4217 format. Required when \`value\` or \`price\` is set.",
          "key": "currency",
          "label": "Currency",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties}",
          "description": "Additional fields for this event. This field may be useful for Algolia Insights fields which are not mapped in Segment.",
          "key": "extraProperties",
          "label": "Extra Properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "Conversion Event",
          "description": "The name of the event to send to Algolia. Defaults to 'Conversion Event'",
          "key": "eventName",
          "label": "Event Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "choices": [
            {
              "label": "View",
              "value": "view",
            },
            {
              "label": "Conversion",
              "value": "conversion",
            },
            {
              "label": "Click",
              "value": "click",
            },
          ],
          "default": "conversion",
          "description": "The type of event to send to Algolia. Defaults to 'conversion'",
          "key": "eventType",
          "label": "Event Type",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "conversionEvents",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Send add-to-cart events to Algolia",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify') and event = 'Product Viewed'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.properties.product_id}",
          "description": "Product ID of the clicked item.",
          "key": "objectID",
          "label": "Product ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.search_index}",
          "description": "Name of the targeted search index.",
          "key": "index",
          "label": "Index",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.query_id}",
          "description": "Query ID of the list on which the item was viewed.",
          "key": "queryID",
          "label": "Query ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "The ID associated with the user.",
          "key": "userToken",
          "label": "User Token",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The timestamp of the event.",
          "key": "timestamp",
          "label": "Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties}",
          "description": "Additional fields for this event. This field may be useful for Algolia Insights fields which are not mapped in Segment.",
          "key": "extraProperties",
          "label": "Extra Properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "Product Viewed",
          "description": "The name of the event to be send to Algolia. Defaults to 'Product Viewed'",
          "key": "eventName",
          "label": "Event Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "choices": [
            {
              "label": "view",
              "value": "view",
            },
            {
              "label": "conversion",
              "value": "conversion",
            },
            {
              "label": "click",
              "value": "click",
            },
          ],
          "default": "view",
          "description": "The type of event to send to Algolia. Defaults to 'view'",
          "key": "eventType",
          "label": "Event Type",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "productViewedEvents",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Send product viewed events to Algolia",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify') and event = 'Product List Filtered'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": {
            "attribute": undefined,
            "value": undefined,
          },
          "description": "Populates the filters field in the Algolia Insights API, a list of up to 10 facet filters. Field should be an array of strings with format \${attribute}:\${value}.",
          "key": "filters",
          "label": "Filters",
          "required": true,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.properties.search_index}",
          "description": "Name of the targeted search index.",
          "key": "index",
          "label": "Index",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.query_id}",
          "description": "Query ID of the list on which the item was clicked.",
          "key": "queryID",
          "label": "Query ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "The ID associated with the user.",
          "key": "userToken",
          "label": "User Token",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The timestamp of the event.",
          "key": "timestamp",
          "label": "Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties}",
          "description": "Additional fields for this event. This field may be useful for Algolia Insights fields which are not mapped in Segment.",
          "key": "extraProperties",
          "label": "Extra Properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "Product List Filtered",
          "description": "The name of the event to be send to Algolia. Defaults to 'Product List Filtered'",
          "key": "eventName",
          "label": "Event Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "choices": [
            {
              "label": "view",
              "value": "view",
            },
            {
              "label": "conversion",
              "value": "conversion",
            },
            {
              "label": "click",
              "value": "click",
            },
          ],
          "default": "click",
          "description": "The type of event to send to Algolia. Defaults to 'click'",
          "key": "eventType",
          "label": "Event Type",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "productListFilteredEvents",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Send product list filtered events to Algolia",
    },
  ],
  "name": "Algolia Insights",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 61 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Outfunnel",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/undefined.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "outfunnel",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Outfunnel User ID. This is found under Account",
      "key": "userId",
      "label": "Outfunnel User Id",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "Outfunnel API Token. This is found under Account",
      "key": "apiToken",
      "label": "API Token",
      "required": true,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "track",
          "description": "Indicates which action was triggered",
          "key": "action",
          "label": "Action name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.event}",
          "description": "The name of the event that occured",
          "key": "event_name",
          "label": "Event name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id}",
          "description": "The identifier of the user who performed the event",
          "key": "user_id",
          "label": "User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.distinct_id}",
          "description": "Anonymous ID of the user",
          "key": "anonymous_id",
          "label": "Anonymous ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "The identifier of the group where user belongs to",
          "key": "group_id",
          "label": "Group ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.context.traits.email ?? event.properties.email}",
          "description": "Email address of the user who performed the event",
          "key": "email",
          "label": "Email Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The time the event occured in UTC",
          "key": "timestamp",
          "label": "Event timestamp",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties}",
          "description": "Optional metadata describing the event",
          "key": "properties",
          "label": "Event properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.context}",
          "description": "Event context",
          "key": "context",
          "label": "Event context",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "forwardTrackEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Track Events",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event in ('$identify', '$set')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "identify",
          "description": "Indicates which action was triggered",
          "key": "action",
          "label": "Action name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id}",
          "description": "The identifier of the user",
          "key": "user_id",
          "label": "User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.distinct_id}",
          "description": "Anonymous ID of the user",
          "key": "anonymous_id",
          "label": "Anonymous ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.email}",
          "description": "Email address of the user who performed the event",
          "key": "email",
          "label": "Email Address",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The time the event occured in UTC",
          "key": "timestamp",
          "label": "Event timestamp",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties}",
          "description": "Optional metadata describing the user",
          "key": "traits",
          "label": "User traits",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.context}",
          "description": "Event context",
          "key": "context",
          "label": "Event context",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "forwardIdentifyEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Identify Events",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = '$groupidentify'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "group",
          "description": "Indicates which action was triggered",
          "key": "action",
          "label": "Action name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id}",
          "description": "The identifier of the user",
          "key": "user_id",
          "label": "User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.distinct_id}",
          "description": "Anonymous ID of the user",
          "key": "anonymous_id",
          "label": "Anonymous ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.groupId}",
          "description": "ID of the group",
          "key": "group_id",
          "label": "Group ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.name}",
          "description": "Name of the group where user belongs to",
          "key": "group_name",
          "label": "Group name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The time the event occured in UTC",
          "key": "timestamp",
          "label": "Event timestamp",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties}",
          "description": "Group traits",
          "key": "traits",
          "label": "Group traits",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.context}",
          "description": "Event context",
          "key": "context",
          "label": "Event context",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "forwardGroupEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Group Events",
    },
  ],
  "name": "Outfunnel",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 62 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Toplyne Cloud Mode",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/toplyne.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-toplyne-cloud",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Your Toplyne API Key",
      "key": "apiKey",
      "label": "API Key",
      "required": true,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event in ('$identify', '$set')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{person.id}",
          "description": "The ID of the user to send properties for. Required if anonymousId is not provided",
          "key": "userId",
          "label": "User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.distinct_id}",
          "description": "The anonymous ID of the user to send properties for. Required if userId is not provided",
          "key": "anonymousId",
          "label": "Anonymous ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Toplyne calculates the creation time of the user using the timestamp of the first track or identify call",
          "key": "creationTime",
          "label": "Creation time",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties}",
          "description": "The properties of the user",
          "key": "userProperties",
          "label": "User Properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "sendUserProfiles",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Send User Profiles",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = '$groupidentify'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.groupId}",
          "description": "The ID of the account to send properties for",
          "key": "accountId",
          "label": "Account ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Toplyne calculates the creation time using the timestamp of the first event or group call",
          "key": "creationTime",
          "label": "Creation time",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties}",
          "description": "The properties of the account",
          "key": "accountProperties",
          "label": "Account Properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "sendAccountProfiles",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Send Account Profiles",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{person.id}",
          "description": "The ID of the user to send events for. Required if anonymousId is not provided",
          "key": "userId",
          "label": "User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.distinct_id}",
          "description": "The anonymous ID of the user to send events for. Required if userId is not provided",
          "key": "anonymousId",
          "label": "Anonymous ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "The ID of the account to send events for",
          "key": "accountId",
          "label": "Account ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.event}",
          "description": "The name of the event to send",
          "key": "eventName",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The timestamp of the event",
          "key": "timestamp",
          "label": "Timestamp",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties}",
          "description": "The properties of the event",
          "key": "eventProperties",
          "label": "Event Properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "sendEvents",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Send Events",
    },
  ],
  "name": "Toplyne Cloud Mode",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 63 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to GWEN",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/cloud.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-cloud-gwen",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "GWEN API key. Can be found [here](http://gwen.insertcoin.se/iam/api-token) (login required)",
      "key": "apiKey",
      "label": "API Key",
      "required": true,
      "secret": false,
      "type": "password",
    },
  ],
  "mapping_templates": [
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{person.id}",
          "description": "The user's id. (Format: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)",
          "key": "userId",
          "label": "User ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.type}",
          "description": "The type of the event",
          "key": "type",
          "label": "Event Type",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties}",
          "description": "The data to be sent to GWEN",
          "key": "data",
          "label": "Data",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "sendEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Send an event to GWEN",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event in ('$identify', '$set')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{person.id}",
          "description": "The user's id. (Format: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)",
          "key": "userId",
          "label": "User ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "The IP address of the user",
          "key": "ip",
          "label": "User IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "The userAgent string of the user",
          "key": "userAgent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "identifyUser",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Identify a user",
    },
  ],
  "name": "GWEN",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 64 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Acoustic Campaign",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/acoustic.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-acoustic-campaign",
  "inputs_schema": [
    {
      "default": "2",
      "description": "Pod Number for API Endpoint",
      "key": "pod",
      "label": "Pod",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "choices": [
        {
          "label": "US",
          "value": "US",
        },
        {
          "label": "EU",
          "value": "EU",
        },
        {
          "label": "AP",
          "value": "AP",
        },
        {
          "label": "CA",
          "value": "CA",
        },
      ],
      "default": "US",
      "description": "Region for API Endpoint, either US, EU, AP, or CA",
      "key": "region",
      "label": "Region",
      "required": true,
      "secret": false,
      "type": "choice",
    },
    {
      "default": "Segment Events Table Name",
      "description": "The Segment Table Name in Acoustic Campaign Data dialog.",
      "key": "tableName",
      "label": "Acoustic Segment Table Name",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": "",
      "description": "The Segment Table List Id from the Database-Relational Table dialog in Acoustic Campaign",
      "key": "tableListId",
      "label": "Acoustic Segment Table List Id",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": "",
      "description": "The Client Id from the App definition dialog in Acoustic Campaign",
      "key": "a_clientId",
      "label": "Acoustic App Definition ClientId",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": "",
      "description": "The Client Secret from the App definition dialog in Acoustic Campaign",
      "key": "a_clientSecret",
      "label": "Acoustic App Definition ClientSecret",
      "required": true,
      "secret": false,
      "type": "password",
    },
    {
      "default": "",
      "description": "The RefreshToken provided when defining access for the App in Acoustic Campaign",
      "key": "a_refreshToken",
      "label": "Acoustic App Access Definition RefreshToken",
      "required": true,
      "secret": false,
      "type": "password",
    },
    {
      "default": "15",
      "description": "A safety against mapping too many attributes into the Event, Event will be ignored if number of Event Attributes exceeds this maximum. Note: Before increasing the default max number, consult the Acoustic Destination documentation.",
      "key": "attributesMax",
      "label": "Properties Max",
      "required": false,
      "secret": false,
      "type": "string",
    },
    {
      "default": "Version 3.1   (nodeJS: v18.20.6)",
      "description": "
Last-Modified: 06.28.2023 16.15.37
",
      "key": "version",
      "label": "Version:",
      "required": false,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.email}",
          "description": "At a minimum Email is required, see mapping presets for more info.",
          "key": "email",
          "label": "Email",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.type}",
          "description": "The Event Type, will be either Track or Identify",
          "key": "type",
          "label": "Type",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The Timestamp of the Event",
          "key": "timestamp",
          "label": "Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {},
          "description": "Map simple Key-Value pairs of Event data here.",
          "key": "key_value_pairs",
          "label": "Key-Value pairs",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {},
          "description": "Map Arrays of data into flattened data attributes here.",
          "key": "array_data",
          "label": "Arrays",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {},
          "description": "All properties provided via a Context Section ",
          "key": "context",
          "label": "Context",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {},
          "description": "All properties provided via a Properties Section",
          "key": "properties",
          "label": "Properties",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {},
          "description": "All properties provided via a Traits Section",
          "key": "traits",
          "label": "Traits",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "receiveEvents",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Track Calls",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event in ('$identify', '$set')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.email}",
          "description": "At a minimum Email is required, see mapping presets for more info.",
          "key": "email",
          "label": "Email",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.type}",
          "description": "The Event Type, will be either Track or Identify",
          "key": "type",
          "label": "Type",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The Timestamp of the Event",
          "key": "timestamp",
          "label": "Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {},
          "description": "Map simple Key-Value pairs of Event data here.",
          "key": "key_value_pairs",
          "label": "Key-Value pairs",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {},
          "description": "Map Arrays of data into flattened data attributes here.",
          "key": "array_data",
          "label": "Arrays",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {},
          "description": "All properties provided via a Context Section ",
          "key": "context",
          "label": "Context",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {},
          "description": "All properties provided via a Properties Section",
          "key": "properties",
          "label": "Properties",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {},
          "description": "All properties provided via a Traits Section",
          "key": "traits",
          "label": "Traits",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "receiveEvents",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Identify Calls",
    },
  ],
  "name": "Acoustic Campaign",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 65 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Revend Actions",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/actions.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "revend-actions",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "An API SECRET generated for endpoint usage",
      "key": "apiSecret",
      "label": "API Secret",
      "required": true,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [],
  "name": "Revend Actions",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 66 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to June",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/actions.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "june-actions",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Your June API Key",
      "key": "apiKey",
      "label": "API Key",
      "required": true,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.event}",
          "description": "The event name",
          "key": "event",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties}",
          "description": "Properties to send with the event",
          "key": "properties",
          "label": "Event properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The timestamp of the event",
          "key": "timestamp",
          "label": "Timestamp",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.distinct_id}",
          "description": "The anonymous ID associated with the user",
          "key": "anonymousId",
          "label": "Anonymous ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id}",
          "description": "The ID associated with the user",
          "key": "userId",
          "label": "User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.context}",
          "description": "Context properties to send with the event",
          "key": "context",
          "label": "Context properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "The Segment messageId",
          "key": "messageId",
          "label": "MessageId",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "track",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Track Calls",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = '$pageview'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.distinct_id}",
          "description": "An anonymous identifier",
          "key": "anonymousId",
          "label": "Anonymous ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id}",
          "description": "The ID associated with the user",
          "key": "userId",
          "label": "User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties}",
          "description": "Page properties",
          "key": "properties",
          "label": "Properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.name}",
          "description": "The name of the page",
          "key": "name",
          "label": "Page Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.context}",
          "description": "Context properties to send with the event",
          "key": "context",
          "label": "Context properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The timestamp of the event",
          "key": "timestamp",
          "label": "Timestamp",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "The Segment messageId",
          "key": "messageId",
          "label": "MessageId",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "page",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Page Calls",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event in ('$identify', '$set')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.distinct_id}",
          "description": "An anonymous identifier",
          "key": "anonymousId",
          "label": "Anonymous ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id}",
          "description": "The ID associated with the user",
          "key": "userId",
          "label": "User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties}",
          "description": "Traits to associate with the user",
          "key": "traits",
          "label": "Traits",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The timestamp of the event",
          "key": "timestamp",
          "label": "Timestamp",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "The Segment messageId",
          "key": "messageId",
          "label": "MessageId",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "identify",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Identify Calls",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = '$groupidentify'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.distinct_id}",
          "description": "Anonymous id",
          "key": "anonymousId",
          "label": "Anonymous ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id}",
          "description": "The ID associated with the user",
          "key": "userId",
          "label": "User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.groupId}",
          "description": "The group id",
          "key": "groupId",
          "label": "Group ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties}",
          "description": "Traits to associate with the group",
          "key": "traits",
          "label": "Traits",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The timestamp of the event",
          "key": "timestamp",
          "label": "Timestamp",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "The Segment messageId",
          "key": "messageId",
          "label": "MessageId",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "group",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Group Calls",
    },
  ],
  "name": "June",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 67 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Encharge",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/cloud.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "encharge-cloud-actions",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Encharge.io API Key. This can be found on your [Account page](https://app.encharge.io/settings/api-keys).",
      "key": "apiKey",
      "label": "API Key",
      "required": true,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.event}",
          "description": "The name of the event.",
          "key": "event",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties}",
          "description": "The properties of the event.",
          "key": "properties",
          "label": "Event Properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.context.traits}",
          "description": "Any default or custom field of the user. On the left-hand side, input the API name of the field as seen in your Encharge account. On the right-hand side, map the Segment field that contains the value. Any properties that don't exist will be created automatically. See more information in [Encharge's documentation](https://help.encharge.io/article/206-create-and-manage-custom-fields).",
          "key": "userFields",
          "label": "User Fields",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.type}",
          "description": "The type of event.",
          "key": "type",
          "label": "Type",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.context.traits.email ?? event.properties.email}",
          "description": "The email address of the user.",
          "key": "email",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.distinct_id}",
          "description": "An anonymous identifier for this user.",
          "key": "segmentAnonymousId",
          "label": "Anonymous ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id}",
          "description": "The User ID associated with the user in Encharge.",
          "key": "userId",
          "label": "User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "An ID associating the event with a group.",
          "key": "groupId",
          "label": "Group ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The timestamp of the event",
          "key": "timestamp",
          "label": "Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "The Segment messageId",
          "key": "messageId",
          "label": "MessageId",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "The IP address of the user.",
          "key": "ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "The user agent of the user. Used to determine the device, browser and operating system.",
          "key": "userAgent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "content": "{event.properties.utm_content}",
            "medium": "{event.properties.utm_medium}",
            "name": "{event.properties.utm_campaign}",
            "source": "{event.properties.utm_source}",
            "term": "{event.properties.utm_term}",
          },
          "description": "UTM campaign information.",
          "key": "campaign",
          "label": "Campaign",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "path": "{event.context.page.path}",
            "referrer": "{event.properties.$referrer}",
            "search": "{event.context.page.search}",
            "title": "{event.context.page.title}",
            "url": "{event.properties.$current_url}",
          },
          "description": "Information about the page where the event occurred.",
          "key": "page",
          "label": "Page",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "city": "{event.properties.$geoip_city_name}",
            "country": "{event.properties.$geoip_country_name}",
            "region": "",
          },
          "description": "Information about the location of the user.",
          "key": "location",
          "label": "Location",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "trackEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Track Event",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event in ('$identify', '$set')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{person.properties}",
          "description": "Fields to associate with the user in Encharge. Any unexisting fields will be automatically created in Encharge.",
          "key": "user",
          "label": "User Fields",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.email ?? event.context.traits.email}",
          "description": "The email address of the user.",
          "key": "email",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.type}",
          "description": "The type of event.",
          "key": "type",
          "label": "Type",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.distinct_id}",
          "description": "An anonymous identifier for this user.",
          "key": "segmentAnonymousId",
          "label": "Anonymous ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id}",
          "description": "The User ID associated with the user in Encharge.",
          "key": "userId",
          "label": "User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "An ID associating the event with a group.",
          "key": "groupId",
          "label": "Group ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The timestamp of the event",
          "key": "timestamp",
          "label": "Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "The Segment messageId",
          "key": "messageId",
          "label": "MessageId",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "The IP address of the user.",
          "key": "ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "The user agent of the user. Used to determine the device, browser and operating system.",
          "key": "userAgent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "content": "{event.properties.utm_content}",
            "medium": "{event.properties.utm_medium}",
            "name": "{event.properties.utm_campaign}",
            "source": "{event.properties.utm_source}",
            "term": "{event.properties.utm_term}",
          },
          "description": "UTM campaign information.",
          "key": "campaign",
          "label": "Campaign",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "path": "{event.context.page.path}",
            "referrer": "{event.properties.$referrer}",
            "search": "{event.context.page.search}",
            "title": "{event.context.page.title}",
            "url": "{event.properties.$current_url}",
          },
          "description": "Information about the page where the event occurred.",
          "key": "page",
          "label": "Page",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "city": "{event.properties.$geoip_city_name}",
            "country": "{event.properties.$geoip_country_name}",
            "region": "",
          },
          "description": "Information about the location of the user.",
          "key": "location",
          "label": "Location",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "identifyUser",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Identify User",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = '$pageview'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.properties}",
          "description": "Custom properties to send with the pageview. Please note that URL, title, refererrer, path and search are automatically collected and don't have to be mapped here.",
          "key": "properties",
          "label": "Page View Properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.context.traits}",
          "description": "Any default or custom field of the user. On the left-hand side, input the API name of the field as seen in your Encharge account. On the right-hand side, map the Segment field that contains the value. Any properties that don't exist will be created automatically. See more information in [Encharge's documentation](https://help.encharge.io/article/206-create-and-manage-custom-fields).",
          "key": "userFields",
          "label": "User Fields",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.type}",
          "description": "The type of event.",
          "key": "type",
          "label": "Type",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.context.traits.email ?? event.properties.email}",
          "description": "The email address of the user.",
          "key": "email",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.distinct_id}",
          "description": "An anonymous identifier for this user.",
          "key": "segmentAnonymousId",
          "label": "Anonymous ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id}",
          "description": "The User ID associated with the user in Encharge.",
          "key": "userId",
          "label": "User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "An ID associating the event with a group.",
          "key": "groupId",
          "label": "Group ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The timestamp of the event",
          "key": "timestamp",
          "label": "Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "The Segment messageId",
          "key": "messageId",
          "label": "MessageId",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "The IP address of the user.",
          "key": "ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "The user agent of the user. Used to determine the device, browser and operating system.",
          "key": "userAgent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "content": "{event.properties.utm_content}",
            "medium": "{event.properties.utm_medium}",
            "name": "{event.properties.utm_campaign}",
            "source": "{event.properties.utm_source}",
            "term": "{event.properties.utm_term}",
          },
          "description": "UTM campaign information.",
          "key": "campaign",
          "label": "Campaign",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "path": "{event.context.page.path}",
            "referrer": "{event.properties.$referrer}",
            "search": "{event.context.page.search}",
            "title": "{event.context.page.title}",
            "url": "{event.properties.$current_url}",
          },
          "description": "Information about the page where the event occurred.",
          "key": "page",
          "label": "Page",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "city": "{event.properties.$geoip_city_name}",
            "country": "{event.properties.$geoip_country_name}",
            "region": "",
          },
          "description": "Information about the location of the user.",
          "key": "location",
          "label": "Location",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "trackPageView",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Track Page View",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = '$alias'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{person.id}",
          "description": "The new User ID to associate with the user in Encharge.",
          "key": "userId",
          "label": "User ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.previousId}",
          "description": "The previous User ID associated with the user in Encharge.",
          "key": "previousUserId",
          "label": "Previous User ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The timestamp of the event",
          "key": "timestamp",
          "label": "Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "The Segment messageId",
          "key": "messageId",
          "label": "MessageId",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "aliasUser",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Alias User",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = '$groupidentify'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "company",
          "description": "The type of Encharge object to create or update.",
          "key": "objectType",
          "label": "Object Type",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.groupId}",
          "description": "An ID from your app/database that is used to uniquely identify the object in Encharge.",
          "key": "externalId",
          "label": "External Object ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "The Encharge ID of the object. Usually, you want to omit this and use External ID.",
          "key": "id",
          "label": "Object ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties}",
          "description": "Data for the object fields in Encharge. Any unexisting fields will be ignored.",
          "key": "objectData",
          "label": "Object Fields",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id}",
          "description": "The User ID of the user to associate with the object. If no email or user ID is provided, no user will be created and associated.",
          "key": "userId",
          "label": "User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.email}",
          "description": "The email of the user to associate with the object. If no email or user ID is provided, no user will be created and associated.",
          "key": "email",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "createUpdateObject",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Create or Update Object",
    },
  ],
  "name": "Encharge",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 68 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Blend Ai",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/blend.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-blend-ai",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Blend API key - found on integration page.",
      "key": "apiKey",
      "label": "API Key",
      "required": true,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event in ('$identify', '$set') or event = '$pageview' or event = '$screen' or event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.event ?? event.name}",
          "description": "The name of event, page or screen",
          "key": "eventName",
          "label": "Event Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.type}",
          "description": "The type of event",
          "key": "eventType",
          "label": "Event Type",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties}",
          "description": "Properties of the event",
          "key": "eventProperties",
          "label": "Event Properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {},
          "description": "User profile details / traits",
          "key": "userTraits",
          "label": "User Traits",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "anonymousId": "{event.distinct_id}",
            "userId": "{person.id}",
          },
          "description": "User identifiers",
          "key": "identifiers",
          "label": "Identifiers",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "trackEvents",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Send Data to Blend",
    },
  ],
  "name": "Blend Ai",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 69 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Optimizely Feature Experimentation",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/optimizely.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-optimizely-feature-experimentation-cloud",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "The personal access token will be used to submit a GDPR delete request to Optimizely. To generate a personal access token, navigate to Profile->API Access and generate a new token.",
      "key": "accessToken",
      "label": "Personal Access Token",
      "required": false,
      "secret": false,
      "type": "password",
    },
    {
      "default": undefined,
      "description": "In order to use Optimizely Feature Experimentation (Actions) via server side, you must enter your Account ID from your Optimizely account. You can find this ID by visiting https://app.optimizely.com/v2/accountsettings/account/plan",
      "key": "accountId",
      "label": "Optimizely Account Id",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "The datafile is a JSON representation of the current state of flags and experiments for an environment in your Full Stack project. It should look something like https://cdn.optimizely.com/json/9218021209.json",
      "key": "dataFileUrl",
      "label": "Datafile URL",
      "required": true,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [],
  "name": "Optimizely Feature Experimentation",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 70 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Rokt Audiences",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/rokt.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-rokt-audiences",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Rokt public key, starts with \`rpub-\`",
      "key": "rpub",
      "label": "Rokt public key",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "Rokt secret key, starts with \`rsec-\`",
      "key": "rsec",
      "label": "Rokt secret key",
      "required": true,
      "secret": false,
      "type": "password",
    },
    {
      "default": undefined,
      "description": "Rokt ID assigned to your particular account.",
      "key": "accountid",
      "label": "Rokt Account ID",
      "required": true,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify') or event in ('$identify', '$set')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.context.personas.computation_key}",
          "description": "Name of custom audience list to which emails should added/removed",
          "key": "custom_audience_name",
          "label": "Custom Audience Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.context.personas.computation_class}",
          "description": "Segment computation class used to determine if action is an 'Engage-Audience'",
          "key": "segment_computation_action",
          "label": "Segment Computation Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.context.traits.email ?? person.properties.email}",
          "description": "User's email address for including/excluding from custom audience",
          "key": "email",
          "label": "Email",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": {},
          "description": "Object which will be computed differently for track and identify events",
          "key": "traits_or_props",
          "label": "traits or properties object",
          "required": true,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": true,
          "description": "Set as true to ensure Segment infrastructure uses batching when possible.",
          "key": "enable_batching",
          "label": "enable batching to rokt api",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": "upsertCustomAudiences",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Sync Engage Audience to Rokt",
    },
  ],
  "name": "Rokt Audiences",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 71 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Insider Cloud Mode",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/insider.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-insider-cloud",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "You can get your Account Name via Insider Inone Panel > Settings > Inone Settings > Account Preferences.",
      "key": "account_name",
      "label": "Account Name",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "You can get your API Key via Insider Inone Panel > Settings > Preferences > Integration Settings",
      "key": "ucd_key",
      "label": "API Key",
      "required": true,
      "secret": false,
      "type": "password",
    },
  ],
  "mapping_templates": [
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event in ('$identify', '$set')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": true,
          "description": "If true, Email will be sent as identifier to Insider.",
          "key": "email_as_identifier",
          "label": "Treat Email as Identifier",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": true,
          "description": "If true, Phone Number will be sent as identifier to Insider",
          "key": "phone_number_as_identifier",
          "label": "Treat Phone Number as Identifier",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": false,
          "description": "If enabled, new data for array fields will be appended to the existing values in Insider.",
          "key": "append_arrays",
          "label": "Append Array Fields",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": "{person.properties.age}",
          "description": "Age of a user.",
          "key": "age",
          "label": "Age",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.birthday}",
          "description": "User’s birthday",
          "key": "birthday",
          "label": "Birthday",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.email}",
          "description": "Email address of a user.",
          "key": "email",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.first_name}",
          "description": "First name of a user.",
          "key": "firstName",
          "label": "First Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.gender}",
          "description": "Gender of a user.",
          "key": "gender",
          "label": "Gender",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.last_name}",
          "description": "Last name of a user.",
          "key": "lastName",
          "label": "Last Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.phone}",
          "description": "User's phone number in E.164 format (e.g. +6598765432), can be used as an identifier.",
          "key": "phone",
          "label": "Phone Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id}",
          "description": "User's unique identifier. The UUID string is used as identifier when sending data to Insider. UUID is required if the Anonymous Id field is empty.",
          "key": "uuid",
          "label": "UUID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.distinct_id}",
          "description": "An Anonymous Identifier. The Anonymous Id string is used as identifier when sending data to Insider. Anonymous Id is required if the UUID field is empty.",
          "key": "segment_anonymous_id",
          "label": "Anonymous Id",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {},
          "description": "You can select you custom identifiers for the event.",
          "key": "custom_identifiers",
          "label": "Custom Identifiers",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{person.properties.address.city}",
          "description": "City",
          "key": "city",
          "label": "City",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.address.country}",
          "description": "Country",
          "key": "country",
          "label": "Country",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "GDPR opt-in.",
          "key": "gdprOptin",
          "label": "GDPR Opt-in",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": undefined,
          "description": "Email opt-in.",
          "key": "emailOptin",
          "label": "Email Opt-in",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": undefined,
          "description": "SMS opt-in.",
          "key": "smsOptin",
          "label": "SMS Opt-in",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": undefined,
          "description": "Whatsapp opt-in.",
          "key": "whatsappOptin",
          "label": "Whatsapp Opt-in",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": undefined,
          "description": "The user's preferred language.",
          "key": "language",
          "label": "Language",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {},
          "description": "The user's additional information.",
          "key": "custom",
          "label": "Other Properties",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "updateUserProfile",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Create or Update a User Profile",
    },
  ],
  "name": "Insider Cloud Mode",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 72 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Insider Audiences",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/insider.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-insider-audiences",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "You can get your Account Name via Insider Inone Panel > Settings > Inone Settings > Account Preferences.",
      "key": "account_name",
      "label": "Account Name",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "You can get your API Key via Insider Inone Panel > Settings > Preferences > Integration Settings",
      "key": "ucd_key",
      "label": "API Key",
      "required": true,
      "secret": false,
      "type": "password",
    },
  ],
  "mapping_templates": [
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify') or event in ('$identify', '$set')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.context.personas.computation_key}",
          "description": "Name of custom audience list to which emails should added/removed",
          "key": "custom_audience_name",
          "label": "Custom Audience Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.context.personas.computation_class}",
          "description": "Segment computation class used to determine if action is an 'Engage-Audience'",
          "key": "segment_computation_action",
          "label": "Segment Computation Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": false,
          "description": "If enabled, new data for array fields will be appended to the existing values in Insider.",
          "key": "append_arrays",
          "label": "Append Array Fields",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": "{event.context.traits.email ?? person.properties.email}",
          "description": "User's email address for including/excluding from custom audience",
          "key": "email",
          "label": "Email",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.context.traits.phone ?? person.properties.phone}",
          "description": "User's phone number for including/excluding from custom audience",
          "key": "phone",
          "label": "Phone",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {},
          "description": "Object which will be computed differently for track and identify events",
          "key": "traits_or_props",
          "label": "traits or properties object",
          "required": true,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{person.id}",
          "description": "Known user identifier for the user",
          "key": "user_id",
          "label": "User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.distinct_id}",
          "description": "Anonymous user identifier for the user",
          "key": "anonymous_id",
          "label": "Anonymous ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.type}",
          "description": "Type of event",
          "key": "event_type",
          "label": "Event Type",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.event ?? event.name}",
          "description": "Name of event",
          "key": "event_name",
          "label": "Event Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Timestamp of event",
          "key": "timestamp",
          "label": "Timestamp",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "insiderAudiences",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Sync Engage Audience to Insider",
    },
  ],
  "name": "Insider Audiences",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 73 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Podscribe",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/podscribe.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-podscribe",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Podscribe advertiser lookup key",
      "key": "advertiser",
      "label": "Advertiser",
      "required": true,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify') and event = 'Order Completed'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.distinct_id}",
          "description": "The anonymous ID associated with the user",
          "key": "anonymousId",
          "label": "Anonymous ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The timestamp of the event",
          "key": "timestamp",
          "label": "Timestamp",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$referrer ?? event.properties.referrer}",
          "description": "The page referrer",
          "key": "referrer",
          "label": "Page Referrer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url ?? event.properties.url}",
          "description": "The page URL",
          "key": "url",
          "label": "Page URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "The IP address of the device sending the event.",
          "key": "ip",
          "label": "User IP address",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.context.library}",
          "description": "The library sending the event.",
          "key": "library",
          "label": "Segment Library",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "The user agent of the device sending the event.",
          "key": "userAgent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.context.traits.email ?? event.properties.email}",
          "description": "Email address of the user",
          "key": "email",
          "label": "Email address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "coupon": "{event.properties.coupon}",
            "currency": "{event.properties.currency}",
            "is_new_customer": "{event.properties.is_new_customer}",
            "is_subscription": "{event.properties.is_subscription}",
            "num_items_purchased": "{event.properties.num_items_purchased}",
            "order_id": "{event.properties.order_id}",
            "total": "{event.properties.total}",
          },
          "description": "Properties to send with the event",
          "key": "properties",
          "label": "Event properties",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.properties.podscribeEvent}",
          "description": "Podscribe type of event to send",
          "key": "podscribeEvent",
          "label": "Podscribe event type",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "track",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Order Completed Calls",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify') and event = 'Signed Up'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.distinct_id}",
          "description": "The anonymous ID associated with the user",
          "key": "anonymousId",
          "label": "Anonymous ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The timestamp of the event",
          "key": "timestamp",
          "label": "Timestamp",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$referrer ?? event.properties.referrer}",
          "description": "The page referrer",
          "key": "referrer",
          "label": "Page Referrer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url ?? event.properties.url}",
          "description": "The page URL",
          "key": "url",
          "label": "Page URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "The IP address of the device sending the event.",
          "key": "ip",
          "label": "User IP address",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.context.library}",
          "description": "The library sending the event.",
          "key": "library",
          "label": "Segment Library",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "The user agent of the device sending the event.",
          "key": "userAgent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.context.traits.email ?? event.properties.email}",
          "description": "Email address of the user",
          "key": "email",
          "label": "Email address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "coupon": "{event.properties.coupon}",
            "currency": "{event.properties.currency}",
            "is_new_customer": "{event.properties.is_new_customer}",
            "is_subscription": "{event.properties.is_subscription}",
            "num_items_purchased": "{event.properties.num_items_purchased}",
            "order_id": "{event.properties.order_id}",
            "total": "{event.properties.total}",
          },
          "description": "Properties to send with the event",
          "key": "properties",
          "label": "Event properties",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.properties.podscribeEvent}",
          "description": "Podscribe type of event to send",
          "key": "podscribeEvent",
          "label": "Podscribe event type",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "track",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Signed Up Calls",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = '$pageview'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.distinct_id}",
          "description": "The anonymous ID associated with the user",
          "key": "anonymousId",
          "label": "Anonymous ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The timestamp of the event",
          "key": "timestamp",
          "label": "Timestamp",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$referrer ?? event.properties.referrer}",
          "description": "The page referrer",
          "key": "referrer",
          "label": "Page Referrer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url ?? event.properties.url}",
          "description": "The page URL",
          "key": "url",
          "label": "Page URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "The IP address of the device sending the event.",
          "key": "ip",
          "label": "User IP address",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.context.library}",
          "description": "The library sending the event.",
          "key": "library",
          "label": "Segment Library",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "The user agent of the device sending the event.",
          "key": "userAgent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "page",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Page Calls",
    },
  ],
  "name": "Podscribe",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 74 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Usermaven",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/usermaven.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-usermaven",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Found on your general settings page.",
      "key": "api_key",
      "label": "API Key",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "Found on your general settings page.",
      "key": "server_token",
      "label": "Server Token",
      "required": true,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.event}",
          "description": "The event name",
          "key": "event",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties}",
          "description": "Attributes associated with the event",
          "key": "event_attributes",
          "label": "Event Attributes",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id}",
          "description": "The user id, to uniquely identify the user",
          "key": "user_id",
          "label": "User id",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.email ?? event.context.traits.email}",
          "description": "The user email address",
          "key": "user_email",
          "label": "Email address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.created_at ?? event.context.traits.created_at}",
          "description": "The timestamp when the user was created",
          "key": "user_created_at",
          "label": "Created at",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.distinct_id}",
          "description": "User Anonymous id",
          "key": "user_anonymous_id",
          "label": "Anonymous ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "The ID of the event.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.context.page.path}",
          "description": "The path of the document.",
          "key": "doc_path",
          "label": "Document Path",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.context.page.search}",
          "description": "The search query of the document.",
          "key": "doc_search",
          "label": "Document Search",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.type}",
          "description": "The type of the event.",
          "key": "event_type",
          "label": "Event Type",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.context.page.title}",
          "description": "The title of the page where the event occurred.",
          "key": "page_title",
          "label": "Page Title",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$referrer}",
          "description": "The referrer of the page where the event occurred.",
          "key": "referer",
          "label": "Referrer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The URL of the page where the event occurred.",
          "key": "url",
          "label": "URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "The user agent of the browser.",
          "key": "user_agent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$locale}",
          "description": "The language of the browser.",
          "key": "user_language",
          "label": "User Language",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The time of the event in UTC.",
          "key": "utc_time",
          "label": "UTC Time",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "content": "{event.properties.utm_content}",
            "medium": "{event.properties.utm_medium}",
            "name": "{event.properties.utm_campaign}",
            "source": "{event.properties.utm_source}",
            "term": "{event.properties.utm_term}",
          },
          "description": "Information about the UTM parameters.",
          "key": "utm",
          "label": "UTM",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "density": "",
            "height": "{event.context.screen.height}",
            "width": "{event.context.screen.width}",
          },
          "description": "Information about the screen.",
          "key": "screen",
          "label": "Screen",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.properties.timezone ?? person.properties.timezone}",
          "description": "The timezone of the browser.",
          "key": "timezone",
          "label": "Timezone",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "The IP address of the user.",
          "key": "source_ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "track",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Track Event",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event in ('$identify', '$set')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{person.id}",
          "description": "The user id, to uniquely identify the user",
          "key": "user_id",
          "label": "User id",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.email ?? event.properties.email}",
          "description": "The user email address",
          "key": "user_email",
          "label": "Email address",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.created_at}",
          "description": "The timestamp when the user was created",
          "key": "user_created_at",
          "label": "Created at",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.first_name ?? event.properties.first_name}",
          "description": "The user first name",
          "key": "user_first_name",
          "label": "First name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.last_name ?? event.properties.last_name}",
          "description": "The user last name",
          "key": "user_last_name",
          "label": "Last name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties}",
          "description": "The user custom attributes",
          "key": "user_custom_attributes",
          "label": "Custom attributes",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.distinct_id}",
          "description": "User Anonymous id",
          "key": "user_anonymous_id",
          "label": "Anonymous ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "The ID of the event.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.context.page.path}",
          "description": "The path of the document.",
          "key": "doc_path",
          "label": "Document Path",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.context.page.search}",
          "description": "The search query of the document.",
          "key": "doc_search",
          "label": "Document Search",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.type}",
          "description": "The type of the event.",
          "key": "event_type",
          "label": "Event Type",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.context.page.title}",
          "description": "The title of the page where the event occurred.",
          "key": "page_title",
          "label": "Page Title",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$referrer}",
          "description": "The referrer of the page where the event occurred.",
          "key": "referer",
          "label": "Referrer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The URL of the page where the event occurred.",
          "key": "url",
          "label": "URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "The user agent of the browser.",
          "key": "user_agent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$locale}",
          "description": "The language of the browser.",
          "key": "user_language",
          "label": "User Language",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The time of the event in UTC.",
          "key": "utc_time",
          "label": "UTC Time",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "content": "{event.properties.utm_content}",
            "medium": "{event.properties.utm_medium}",
            "name": "{event.properties.utm_campaign}",
            "source": "{event.properties.utm_source}",
            "term": "{event.properties.utm_term}",
          },
          "description": "Information about the UTM parameters.",
          "key": "utm",
          "label": "UTM",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "density": "",
            "height": "{event.context.screen.height}",
            "width": "{event.context.screen.width}",
          },
          "description": "Information about the screen.",
          "key": "screen",
          "label": "Screen",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.properties.timezone ?? person.properties.timezone}",
          "description": "The timezone of the browser.",
          "key": "timezone",
          "label": "Timezone",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "The IP address of the user.",
          "key": "source_ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "identify",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Identify User",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = '$groupidentify'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.groupId}",
          "description": "The company id, to uniquely identify the company",
          "key": "company_id",
          "label": "Company id",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id}",
          "description": "The user id, to uniquely identify the user",
          "key": "user_id",
          "label": "User id",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.name}",
          "description": "The company name",
          "key": "company_name",
          "label": "Company name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.created_at}",
          "description": "The timestamp when the company was created",
          "key": "company_created_at",
          "label": "Company created at",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties}",
          "description": "The company custom attributes",
          "key": "company_custom_attributes",
          "label": "Company custom attributes",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.distinct_id}",
          "description": "User Anonymous id",
          "key": "user_anonymous_id",
          "label": "Anonymous ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "The ID of the event.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.context.page.path}",
          "description": "The path of the document.",
          "key": "doc_path",
          "label": "Document Path",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.context.page.search}",
          "description": "The search query of the document.",
          "key": "doc_search",
          "label": "Document Search",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.type}",
          "description": "The type of the event.",
          "key": "event_type",
          "label": "Event Type",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.context.page.title}",
          "description": "The title of the page where the event occurred.",
          "key": "page_title",
          "label": "Page Title",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$referrer}",
          "description": "The referrer of the page where the event occurred.",
          "key": "referer",
          "label": "Referrer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The URL of the page where the event occurred.",
          "key": "url",
          "label": "URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "The user agent of the browser.",
          "key": "user_agent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$locale}",
          "description": "The language of the browser.",
          "key": "user_language",
          "label": "User Language",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The time of the event in UTC.",
          "key": "utc_time",
          "label": "UTC Time",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "content": "{event.properties.utm_content}",
            "medium": "{event.properties.utm_medium}",
            "name": "{event.properties.utm_campaign}",
            "source": "{event.properties.utm_source}",
            "term": "{event.properties.utm_term}",
          },
          "description": "Information about the UTM parameters.",
          "key": "utm",
          "label": "UTM",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "density": "",
            "height": "{event.context.screen.height}",
            "width": "{event.context.screen.width}",
          },
          "description": "Information about the screen.",
          "key": "screen",
          "label": "Screen",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.properties.timezone ?? person.properties.timezone}",
          "description": "The timezone of the browser.",
          "key": "timezone",
          "label": "Timezone",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "The IP address of the user.",
          "key": "source_ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "group",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Group",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = '$pageview'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{person.id}",
          "description": "The user id, to uniquely identify the user",
          "key": "user_id",
          "label": "User id",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.email ?? event.context.traits.email}",
          "description": "The user email address",
          "key": "user_email",
          "label": "Email address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.created_at ?? event.context.traits.created_at}",
          "description": "The timestamp when the user was created",
          "key": "user_created_at",
          "label": "Created at",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.name}",
          "description": "The name of the page",
          "key": "page_name",
          "label": "Page Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.distinct_id}",
          "description": "User Anonymous id",
          "key": "user_anonymous_id",
          "label": "Anonymous ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "The ID of the event.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.context.page.path}",
          "description": "The path of the document.",
          "key": "doc_path",
          "label": "Document Path",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.context.page.search}",
          "description": "The search query of the document.",
          "key": "doc_search",
          "label": "Document Search",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.type}",
          "description": "The type of the event.",
          "key": "event_type",
          "label": "Event Type",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.context.page.title}",
          "description": "The title of the page where the event occurred.",
          "key": "page_title",
          "label": "Page Title",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$referrer}",
          "description": "The referrer of the page where the event occurred.",
          "key": "referer",
          "label": "Referrer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The URL of the page where the event occurred.",
          "key": "url",
          "label": "URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "The user agent of the browser.",
          "key": "user_agent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$locale}",
          "description": "The language of the browser.",
          "key": "user_language",
          "label": "User Language",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The time of the event in UTC.",
          "key": "utc_time",
          "label": "UTC Time",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "content": "{event.properties.utm_content}",
            "medium": "{event.properties.utm_medium}",
            "name": "{event.properties.utm_campaign}",
            "source": "{event.properties.utm_source}",
            "term": "{event.properties.utm_term}",
          },
          "description": "Information about the UTM parameters.",
          "key": "utm",
          "label": "UTM",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "density": "",
            "height": "{event.context.screen.height}",
            "width": "{event.context.screen.width}",
          },
          "description": "Information about the screen.",
          "key": "screen",
          "label": "Screen",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.properties.timezone ?? person.properties.timezone}",
          "description": "The timezone of the browser.",
          "key": "timezone",
          "label": "Timezone",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "The IP address of the user.",
          "key": "source_ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "page",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Page",
    },
  ],
  "name": "Usermaven",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 75 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to The Trade Desk CRM",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/the.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-the-trade-desk-crm",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Your long-lived Trade Desk authentication token. Please see The Trade Desk’s [authentication documentation](https://api.thetradedesk.com/v3/portal/api/doc/Authentication) for information on how to generate a long-lived API Token via the Manage API Tokens in the developer Portal.",
      "key": "auth_token",
      "label": "Authentication Token",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "The platform ID of the advertiser for which to retrieve the status of the specified CRM data segment.",
      "key": "advertiser_id",
      "label": "Advertiser ID",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": true,
      "description": "Force Full Sync",
      "key": "__segment_internal_engage_force_full_sync",
      "label": "Force Full Sync",
      "required": true,
      "secret": false,
      "type": "boolean",
    },
    {
      "default": true,
      "description": "Supports batch sync via ADS",
      "key": "__segment_internal_engage_batch_sync",
      "label": "Supports batch sync via ADS",
      "required": true,
      "secret": false,
      "type": "boolean",
    },
  ],
  "mapping_templates": [],
  "name": "The Trade Desk CRM",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 76 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to TikTok Offline Conversions",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/tiktok.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-tiktok-offline-conversions",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Your TikTok Access Token. Please see TikTok’s [Events API 2.0 documentation](https://business-api.tiktok.com/portal/docs?id=1771101130925058) for information on how to generate an access token via the TikTok Ads Manager or API.",
      "key": "accessToken",
      "label": "Access Token",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "Your TikTok Offline Event Set ID. Please see TikTok’s [Events API 2.0 documentation](https://business-api.tiktok.com/portal/docs?id=1771101027431425) for information on how to find this value.",
      "key": "eventSetID",
      "label": "Event Set ID",
      "required": true,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Order Completed'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": undefined,
          "description": "Conversion event name. Please refer to the "Offline Standard Events" section on in TikTok’s [Events API 2.0 documentation](https://business-api.tiktok.com/portal/docs?id=1771101186666498) for accepted event names.",
          "key": "event",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "Any hashed ID that can identify a unique user/session.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Timestamp that the event took place, in ISO 8601 format.",
          "key": "timestamp",
          "label": "Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.phone ?? event.context.traits.phone}",
          "description": "A single phone number or array of phone numbers in E.164 standard format. At least one phone number value is required if both Email and External ID fields are empty.",
          "key": "phone_numbers",
          "label": "Phone Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.email ?? event.context.traits.email}",
          "description": "A single email address or an array of email addresses. At least one email value is required if both Phone Number and External ID fields are empty.",
          "key": "email_addresses",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.order_id}",
          "description": "Order ID of the transaction.",
          "key": "order_id",
          "label": "Order ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.shop_id}",
          "description": "Shop ID of the transaction.",
          "key": "shop_id",
          "label": "Shop ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "Uniquely identifies the user who triggered the conversion event. TikTok Offline Conversions Destination supports both string and string[] types for sending external ID(s). At least one external ID value is required if both Email and Phone Number fields are empty.",
          "key": "external_ids",
          "label": "External ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttclid}",
          "description": "The value of the ttclid used to match website visitor events with TikTok ads. The ttclid is valid for 7 days. See [Set up ttclid](https://ads.tiktok.com/marketing_api/docs?rid=4eezrhr6lg4&id=1681728034437121) for details.",
          "key": "ttclid",
          "label": "TikTok Click ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttp}",
          "description": "TikTok Cookie ID. If you also use Pixel SDK and have enabled cookies, Pixel SDK automatically saves a unique identifier in the \`_ttp\` cookie. The value of \`_ttp\` is used to match website visitor events with TikTok ads. You can extract the value of \`_ttp\` and attach the value here. To learn more about the \`ttp\` parameter, refer to [Events API 2.0 - Send TikTok Cookie](https://ads.tiktok.com/marketing_api/docs?id=%201771100936446977) (\`_ttp\`).",
          "key": "ttp",
          "label": "TikTok Cookie ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.lead_id}",
          "description": "ID of TikTok leads. Every lead will have its own lead_id when exported from TikTok. This feature is in Beta. Please contact your TikTok representative to inquire regarding availability",
          "key": "lead_id",
          "label": "TikTok Lead ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$locale}",
          "description": "The BCP 47 language identifier. For reference, refer to the [IETF BCP 47 standardized code](https://www.rfc-editor.org/rfc/bcp/bcp47.txt).",
          "key": "locale",
          "label": "Locale",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The page URL where the conversion event took place.",
          "key": "url",
          "label": "Page URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$referrer}",
          "description": "The page referrer.",
          "key": "referrer",
          "label": "Page Referrer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "IP address of the browser.",
          "key": "ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "User agent from the user’s device.",
          "key": "user_agent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "brand": undefined,
            "content_category": undefined,
            "content_id": undefined,
            "content_name": undefined,
            "price": undefined,
            "quantity": undefined,
          },
          "description": "Related item details for the event.",
          "key": "contents",
          "label": "Contents",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "choices": [
            {
              "label": "product",
              "value": "product",
            },
            {
              "label": "product_group",
              "value": "product_group",
            },
          ],
          "default": "product",
          "description": "Type of the product item. When the \`content_id\` in the \`Contents\` field is specified as a \`sku_id\`, set this field to \`product\`. When the \`content_id\` in the \`Contents\` field is specified as an \`item_group_id\`, set this field to \`product_group\`.",
          "key": "content_type",
          "label": "Content Type",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.currency}",
          "description": "Currency for the value specified as ISO 4217 code.",
          "key": "currency",
          "label": "Currency",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.value ?? event.properties.revenue}",
          "description": "Value of the order or items sold.",
          "key": "value",
          "label": "Value",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "A string description of the web event.",
          "key": "description",
          "label": "Description",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.query}",
          "description": "The text string that was searched for.",
          "key": "query",
          "label": "Query",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.limited_data_use}",
          "description": "Use this field to flag an event for limited data processing. TikTok will recognize this parameter as a request for limited data processing, and will limit its processing activities accordingly if the event shared occurred in an eligible location. To learn more about the Limited Data Use feature, refer to [Events API 2.0 - Limited Data Use](https://ads.tiktok.com/marketing_api/docs?id=1771101204435970).",
          "key": "limited_data_use",
          "label": "Limited Data Use",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Use this field to specify that events should be test events rather than actual traffic. You can find your Test Event Code in your TikTok Events Manager under the "Test Event" tab. You'll want to remove your Test Event Code when sending real traffic through this integration.",
          "key": "test_event_code",
          "label": "Test Event Code",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "reportOfflineEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Complete Payment",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Callback Started'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": undefined,
          "description": "Conversion event name. Please refer to the "Offline Standard Events" section on in TikTok’s [Events API 2.0 documentation](https://business-api.tiktok.com/portal/docs?id=1771101186666498) for accepted event names.",
          "key": "event",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "Any hashed ID that can identify a unique user/session.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Timestamp that the event took place, in ISO 8601 format.",
          "key": "timestamp",
          "label": "Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.phone ?? event.context.traits.phone}",
          "description": "A single phone number or array of phone numbers in E.164 standard format. At least one phone number value is required if both Email and External ID fields are empty.",
          "key": "phone_numbers",
          "label": "Phone Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.email ?? event.context.traits.email}",
          "description": "A single email address or an array of email addresses. At least one email value is required if both Phone Number and External ID fields are empty.",
          "key": "email_addresses",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.order_id}",
          "description": "Order ID of the transaction.",
          "key": "order_id",
          "label": "Order ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.shop_id}",
          "description": "Shop ID of the transaction.",
          "key": "shop_id",
          "label": "Shop ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "Uniquely identifies the user who triggered the conversion event. TikTok Offline Conversions Destination supports both string and string[] types for sending external ID(s). At least one external ID value is required if both Email and Phone Number fields are empty.",
          "key": "external_ids",
          "label": "External ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttclid}",
          "description": "The value of the ttclid used to match website visitor events with TikTok ads. The ttclid is valid for 7 days. See [Set up ttclid](https://ads.tiktok.com/marketing_api/docs?rid=4eezrhr6lg4&id=1681728034437121) for details.",
          "key": "ttclid",
          "label": "TikTok Click ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttp}",
          "description": "TikTok Cookie ID. If you also use Pixel SDK and have enabled cookies, Pixel SDK automatically saves a unique identifier in the \`_ttp\` cookie. The value of \`_ttp\` is used to match website visitor events with TikTok ads. You can extract the value of \`_ttp\` and attach the value here. To learn more about the \`ttp\` parameter, refer to [Events API 2.0 - Send TikTok Cookie](https://ads.tiktok.com/marketing_api/docs?id=%201771100936446977) (\`_ttp\`).",
          "key": "ttp",
          "label": "TikTok Cookie ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.lead_id}",
          "description": "ID of TikTok leads. Every lead will have its own lead_id when exported from TikTok. This feature is in Beta. Please contact your TikTok representative to inquire regarding availability",
          "key": "lead_id",
          "label": "TikTok Lead ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$locale}",
          "description": "The BCP 47 language identifier. For reference, refer to the [IETF BCP 47 standardized code](https://www.rfc-editor.org/rfc/bcp/bcp47.txt).",
          "key": "locale",
          "label": "Locale",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The page URL where the conversion event took place.",
          "key": "url",
          "label": "Page URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$referrer}",
          "description": "The page referrer.",
          "key": "referrer",
          "label": "Page Referrer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "IP address of the browser.",
          "key": "ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "User agent from the user’s device.",
          "key": "user_agent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "brand": undefined,
            "content_category": undefined,
            "content_id": undefined,
            "content_name": undefined,
            "price": undefined,
            "quantity": undefined,
          },
          "description": "Related item details for the event.",
          "key": "contents",
          "label": "Contents",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "choices": [
            {
              "label": "product",
              "value": "product",
            },
            {
              "label": "product_group",
              "value": "product_group",
            },
          ],
          "default": "product",
          "description": "Type of the product item. When the \`content_id\` in the \`Contents\` field is specified as a \`sku_id\`, set this field to \`product\`. When the \`content_id\` in the \`Contents\` field is specified as an \`item_group_id\`, set this field to \`product_group\`.",
          "key": "content_type",
          "label": "Content Type",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.currency}",
          "description": "Currency for the value specified as ISO 4217 code.",
          "key": "currency",
          "label": "Currency",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.value ?? event.properties.revenue}",
          "description": "Value of the order or items sold.",
          "key": "value",
          "label": "Value",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "A string description of the web event.",
          "key": "description",
          "label": "Description",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.query}",
          "description": "The text string that was searched for.",
          "key": "query",
          "label": "Query",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.limited_data_use}",
          "description": "Use this field to flag an event for limited data processing. TikTok will recognize this parameter as a request for limited data processing, and will limit its processing activities accordingly if the event shared occurred in an eligible location. To learn more about the Limited Data Use feature, refer to [Events API 2.0 - Limited Data Use](https://ads.tiktok.com/marketing_api/docs?id=1771101204435970).",
          "key": "limited_data_use",
          "label": "Limited Data Use",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Use this field to specify that events should be test events rather than actual traffic. You can find your Test Event Code in your TikTok Events Manager under the "Test Event" tab. You'll want to remove your Test Event Code when sending real traffic through this integration.",
          "key": "test_event_code",
          "label": "Test Event Code",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "reportOfflineEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Contact",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Subscription Created'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": undefined,
          "description": "Conversion event name. Please refer to the "Offline Standard Events" section on in TikTok’s [Events API 2.0 documentation](https://business-api.tiktok.com/portal/docs?id=1771101186666498) for accepted event names.",
          "key": "event",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "Any hashed ID that can identify a unique user/session.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Timestamp that the event took place, in ISO 8601 format.",
          "key": "timestamp",
          "label": "Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.phone ?? event.context.traits.phone}",
          "description": "A single phone number or array of phone numbers in E.164 standard format. At least one phone number value is required if both Email and External ID fields are empty.",
          "key": "phone_numbers",
          "label": "Phone Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.email ?? event.context.traits.email}",
          "description": "A single email address or an array of email addresses. At least one email value is required if both Phone Number and External ID fields are empty.",
          "key": "email_addresses",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.order_id}",
          "description": "Order ID of the transaction.",
          "key": "order_id",
          "label": "Order ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.shop_id}",
          "description": "Shop ID of the transaction.",
          "key": "shop_id",
          "label": "Shop ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "Uniquely identifies the user who triggered the conversion event. TikTok Offline Conversions Destination supports both string and string[] types for sending external ID(s). At least one external ID value is required if both Email and Phone Number fields are empty.",
          "key": "external_ids",
          "label": "External ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttclid}",
          "description": "The value of the ttclid used to match website visitor events with TikTok ads. The ttclid is valid for 7 days. See [Set up ttclid](https://ads.tiktok.com/marketing_api/docs?rid=4eezrhr6lg4&id=1681728034437121) for details.",
          "key": "ttclid",
          "label": "TikTok Click ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttp}",
          "description": "TikTok Cookie ID. If you also use Pixel SDK and have enabled cookies, Pixel SDK automatically saves a unique identifier in the \`_ttp\` cookie. The value of \`_ttp\` is used to match website visitor events with TikTok ads. You can extract the value of \`_ttp\` and attach the value here. To learn more about the \`ttp\` parameter, refer to [Events API 2.0 - Send TikTok Cookie](https://ads.tiktok.com/marketing_api/docs?id=%201771100936446977) (\`_ttp\`).",
          "key": "ttp",
          "label": "TikTok Cookie ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.lead_id}",
          "description": "ID of TikTok leads. Every lead will have its own lead_id when exported from TikTok. This feature is in Beta. Please contact your TikTok representative to inquire regarding availability",
          "key": "lead_id",
          "label": "TikTok Lead ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$locale}",
          "description": "The BCP 47 language identifier. For reference, refer to the [IETF BCP 47 standardized code](https://www.rfc-editor.org/rfc/bcp/bcp47.txt).",
          "key": "locale",
          "label": "Locale",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The page URL where the conversion event took place.",
          "key": "url",
          "label": "Page URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$referrer}",
          "description": "The page referrer.",
          "key": "referrer",
          "label": "Page Referrer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "IP address of the browser.",
          "key": "ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "User agent from the user’s device.",
          "key": "user_agent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "brand": undefined,
            "content_category": undefined,
            "content_id": undefined,
            "content_name": undefined,
            "price": undefined,
            "quantity": undefined,
          },
          "description": "Related item details for the event.",
          "key": "contents",
          "label": "Contents",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "choices": [
            {
              "label": "product",
              "value": "product",
            },
            {
              "label": "product_group",
              "value": "product_group",
            },
          ],
          "default": "product",
          "description": "Type of the product item. When the \`content_id\` in the \`Contents\` field is specified as a \`sku_id\`, set this field to \`product\`. When the \`content_id\` in the \`Contents\` field is specified as an \`item_group_id\`, set this field to \`product_group\`.",
          "key": "content_type",
          "label": "Content Type",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.currency}",
          "description": "Currency for the value specified as ISO 4217 code.",
          "key": "currency",
          "label": "Currency",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.value ?? event.properties.revenue}",
          "description": "Value of the order or items sold.",
          "key": "value",
          "label": "Value",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "A string description of the web event.",
          "key": "description",
          "label": "Description",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.query}",
          "description": "The text string that was searched for.",
          "key": "query",
          "label": "Query",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.limited_data_use}",
          "description": "Use this field to flag an event for limited data processing. TikTok will recognize this parameter as a request for limited data processing, and will limit its processing activities accordingly if the event shared occurred in an eligible location. To learn more about the Limited Data Use feature, refer to [Events API 2.0 - Limited Data Use](https://ads.tiktok.com/marketing_api/docs?id=1771101204435970).",
          "key": "limited_data_use",
          "label": "Limited Data Use",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Use this field to specify that events should be test events rather than actual traffic. You can find your Test Event Code in your TikTok Events Manager under the "Test Event" tab. You'll want to remove your Test Event Code when sending real traffic through this integration.",
          "key": "test_event_code",
          "label": "Test Event Code",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "reportOfflineEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Subscribe",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Form Submitted'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": undefined,
          "description": "Conversion event name. Please refer to the "Offline Standard Events" section on in TikTok’s [Events API 2.0 documentation](https://business-api.tiktok.com/portal/docs?id=1771101186666498) for accepted event names.",
          "key": "event",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "Any hashed ID that can identify a unique user/session.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Timestamp that the event took place, in ISO 8601 format.",
          "key": "timestamp",
          "label": "Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.phone ?? event.context.traits.phone}",
          "description": "A single phone number or array of phone numbers in E.164 standard format. At least one phone number value is required if both Email and External ID fields are empty.",
          "key": "phone_numbers",
          "label": "Phone Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.email ?? event.context.traits.email}",
          "description": "A single email address or an array of email addresses. At least one email value is required if both Phone Number and External ID fields are empty.",
          "key": "email_addresses",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.order_id}",
          "description": "Order ID of the transaction.",
          "key": "order_id",
          "label": "Order ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.shop_id}",
          "description": "Shop ID of the transaction.",
          "key": "shop_id",
          "label": "Shop ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "Uniquely identifies the user who triggered the conversion event. TikTok Offline Conversions Destination supports both string and string[] types for sending external ID(s). At least one external ID value is required if both Email and Phone Number fields are empty.",
          "key": "external_ids",
          "label": "External ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttclid}",
          "description": "The value of the ttclid used to match website visitor events with TikTok ads. The ttclid is valid for 7 days. See [Set up ttclid](https://ads.tiktok.com/marketing_api/docs?rid=4eezrhr6lg4&id=1681728034437121) for details.",
          "key": "ttclid",
          "label": "TikTok Click ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttp}",
          "description": "TikTok Cookie ID. If you also use Pixel SDK and have enabled cookies, Pixel SDK automatically saves a unique identifier in the \`_ttp\` cookie. The value of \`_ttp\` is used to match website visitor events with TikTok ads. You can extract the value of \`_ttp\` and attach the value here. To learn more about the \`ttp\` parameter, refer to [Events API 2.0 - Send TikTok Cookie](https://ads.tiktok.com/marketing_api/docs?id=%201771100936446977) (\`_ttp\`).",
          "key": "ttp",
          "label": "TikTok Cookie ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.lead_id}",
          "description": "ID of TikTok leads. Every lead will have its own lead_id when exported from TikTok. This feature is in Beta. Please contact your TikTok representative to inquire regarding availability",
          "key": "lead_id",
          "label": "TikTok Lead ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$locale}",
          "description": "The BCP 47 language identifier. For reference, refer to the [IETF BCP 47 standardized code](https://www.rfc-editor.org/rfc/bcp/bcp47.txt).",
          "key": "locale",
          "label": "Locale",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The page URL where the conversion event took place.",
          "key": "url",
          "label": "Page URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$referrer}",
          "description": "The page referrer.",
          "key": "referrer",
          "label": "Page Referrer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "IP address of the browser.",
          "key": "ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "User agent from the user’s device.",
          "key": "user_agent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "brand": undefined,
            "content_category": undefined,
            "content_id": undefined,
            "content_name": undefined,
            "price": undefined,
            "quantity": undefined,
          },
          "description": "Related item details for the event.",
          "key": "contents",
          "label": "Contents",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "choices": [
            {
              "label": "product",
              "value": "product",
            },
            {
              "label": "product_group",
              "value": "product_group",
            },
          ],
          "default": "product",
          "description": "Type of the product item. When the \`content_id\` in the \`Contents\` field is specified as a \`sku_id\`, set this field to \`product\`. When the \`content_id\` in the \`Contents\` field is specified as an \`item_group_id\`, set this field to \`product_group\`.",
          "key": "content_type",
          "label": "Content Type",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.currency}",
          "description": "Currency for the value specified as ISO 4217 code.",
          "key": "currency",
          "label": "Currency",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.value ?? event.properties.revenue}",
          "description": "Value of the order or items sold.",
          "key": "value",
          "label": "Value",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "A string description of the web event.",
          "key": "description",
          "label": "Description",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.query}",
          "description": "The text string that was searched for.",
          "key": "query",
          "label": "Query",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.limited_data_use}",
          "description": "Use this field to flag an event for limited data processing. TikTok will recognize this parameter as a request for limited data processing, and will limit its processing activities accordingly if the event shared occurred in an eligible location. To learn more about the Limited Data Use feature, refer to [Events API 2.0 - Limited Data Use](https://ads.tiktok.com/marketing_api/docs?id=1771101204435970).",
          "key": "limited_data_use",
          "label": "Limited Data Use",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Use this field to specify that events should be test events rather than actual traffic. You can find your Test Event Code in your TikTok Events Manager under the "Test Event" tab. You'll want to remove your Test Event Code when sending real traffic through this integration.",
          "key": "test_event_code",
          "label": "Test Event Code",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "reportOfflineEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Submit Form",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "type='page'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": undefined,
          "description": "Conversion event name. Please refer to the "Offline Standard Events" section on in TikTok’s [Events API 2.0 documentation](https://business-api.tiktok.com/portal/docs?id=1771101186666498) for accepted event names.",
          "key": "event",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "Any hashed ID that can identify a unique user/session.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Timestamp that the event took place, in ISO 8601 format.",
          "key": "timestamp",
          "label": "Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.phone ?? event.context.traits.phone}",
          "description": "A single phone number or array of phone numbers in E.164 standard format. At least one phone number value is required if both Email and External ID fields are empty.",
          "key": "phone_numbers",
          "label": "Phone Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.email ?? event.context.traits.email}",
          "description": "A single email address or an array of email addresses. At least one email value is required if both Phone Number and External ID fields are empty.",
          "key": "email_addresses",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.order_id}",
          "description": "Order ID of the transaction.",
          "key": "order_id",
          "label": "Order ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.shop_id}",
          "description": "Shop ID of the transaction.",
          "key": "shop_id",
          "label": "Shop ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "Uniquely identifies the user who triggered the conversion event. TikTok Offline Conversions Destination supports both string and string[] types for sending external ID(s). At least one external ID value is required if both Email and Phone Number fields are empty.",
          "key": "external_ids",
          "label": "External ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttclid}",
          "description": "The value of the ttclid used to match website visitor events with TikTok ads. The ttclid is valid for 7 days. See [Set up ttclid](https://ads.tiktok.com/marketing_api/docs?rid=4eezrhr6lg4&id=1681728034437121) for details.",
          "key": "ttclid",
          "label": "TikTok Click ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttp}",
          "description": "TikTok Cookie ID. If you also use Pixel SDK and have enabled cookies, Pixel SDK automatically saves a unique identifier in the \`_ttp\` cookie. The value of \`_ttp\` is used to match website visitor events with TikTok ads. You can extract the value of \`_ttp\` and attach the value here. To learn more about the \`ttp\` parameter, refer to [Events API 2.0 - Send TikTok Cookie](https://ads.tiktok.com/marketing_api/docs?id=%201771100936446977) (\`_ttp\`).",
          "key": "ttp",
          "label": "TikTok Cookie ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.lead_id}",
          "description": "ID of TikTok leads. Every lead will have its own lead_id when exported from TikTok. This feature is in Beta. Please contact your TikTok representative to inquire regarding availability",
          "key": "lead_id",
          "label": "TikTok Lead ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$locale}",
          "description": "The BCP 47 language identifier. For reference, refer to the [IETF BCP 47 standardized code](https://www.rfc-editor.org/rfc/bcp/bcp47.txt).",
          "key": "locale",
          "label": "Locale",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The page URL where the conversion event took place.",
          "key": "url",
          "label": "Page URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$referrer}",
          "description": "The page referrer.",
          "key": "referrer",
          "label": "Page Referrer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "IP address of the browser.",
          "key": "ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "User agent from the user’s device.",
          "key": "user_agent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "brand": undefined,
            "content_category": undefined,
            "content_id": undefined,
            "content_name": undefined,
            "price": undefined,
            "quantity": undefined,
          },
          "description": "Related item details for the event.",
          "key": "contents",
          "label": "Contents",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "choices": [
            {
              "label": "product",
              "value": "product",
            },
            {
              "label": "product_group",
              "value": "product_group",
            },
          ],
          "default": "product",
          "description": "Type of the product item. When the \`content_id\` in the \`Contents\` field is specified as a \`sku_id\`, set this field to \`product\`. When the \`content_id\` in the \`Contents\` field is specified as an \`item_group_id\`, set this field to \`product_group\`.",
          "key": "content_type",
          "label": "Content Type",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.currency}",
          "description": "Currency for the value specified as ISO 4217 code.",
          "key": "currency",
          "label": "Currency",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.value ?? event.properties.revenue}",
          "description": "Value of the order or items sold.",
          "key": "value",
          "label": "Value",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "A string description of the web event.",
          "key": "description",
          "label": "Description",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.query}",
          "description": "The text string that was searched for.",
          "key": "query",
          "label": "Query",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.limited_data_use}",
          "description": "Use this field to flag an event for limited data processing. TikTok will recognize this parameter as a request for limited data processing, and will limit its processing activities accordingly if the event shared occurred in an eligible location. To learn more about the Limited Data Use feature, refer to [Events API 2.0 - Limited Data Use](https://ads.tiktok.com/marketing_api/docs?id=1771101204435970).",
          "key": "limited_data_use",
          "label": "Limited Data Use",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Use this field to specify that events should be test events rather than actual traffic. You can find your Test Event Code in your TikTok Events Manager under the "Test Event" tab. You'll want to remove your Test Event Code when sending real traffic through this integration.",
          "key": "test_event_code",
          "label": "Test Event Code",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "reportOfflineEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Page View",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Product Viewed'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": undefined,
          "description": "Conversion event name. Please refer to the "Offline Standard Events" section on in TikTok’s [Events API 2.0 documentation](https://business-api.tiktok.com/portal/docs?id=1771101186666498) for accepted event names.",
          "key": "event",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "Any hashed ID that can identify a unique user/session.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Timestamp that the event took place, in ISO 8601 format.",
          "key": "timestamp",
          "label": "Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.phone ?? event.context.traits.phone}",
          "description": "A single phone number or array of phone numbers in E.164 standard format. At least one phone number value is required if both Email and External ID fields are empty.",
          "key": "phone_numbers",
          "label": "Phone Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.email ?? event.context.traits.email}",
          "description": "A single email address or an array of email addresses. At least one email value is required if both Phone Number and External ID fields are empty.",
          "key": "email_addresses",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.order_id}",
          "description": "Order ID of the transaction.",
          "key": "order_id",
          "label": "Order ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.shop_id}",
          "description": "Shop ID of the transaction.",
          "key": "shop_id",
          "label": "Shop ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "Uniquely identifies the user who triggered the conversion event. TikTok Offline Conversions Destination supports both string and string[] types for sending external ID(s). At least one external ID value is required if both Email and Phone Number fields are empty.",
          "key": "external_ids",
          "label": "External ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttclid}",
          "description": "The value of the ttclid used to match website visitor events with TikTok ads. The ttclid is valid for 7 days. See [Set up ttclid](https://ads.tiktok.com/marketing_api/docs?rid=4eezrhr6lg4&id=1681728034437121) for details.",
          "key": "ttclid",
          "label": "TikTok Click ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttp}",
          "description": "TikTok Cookie ID. If you also use Pixel SDK and have enabled cookies, Pixel SDK automatically saves a unique identifier in the \`_ttp\` cookie. The value of \`_ttp\` is used to match website visitor events with TikTok ads. You can extract the value of \`_ttp\` and attach the value here. To learn more about the \`ttp\` parameter, refer to [Events API 2.0 - Send TikTok Cookie](https://ads.tiktok.com/marketing_api/docs?id=%201771100936446977) (\`_ttp\`).",
          "key": "ttp",
          "label": "TikTok Cookie ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.lead_id}",
          "description": "ID of TikTok leads. Every lead will have its own lead_id when exported from TikTok. This feature is in Beta. Please contact your TikTok representative to inquire regarding availability",
          "key": "lead_id",
          "label": "TikTok Lead ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$locale}",
          "description": "The BCP 47 language identifier. For reference, refer to the [IETF BCP 47 standardized code](https://www.rfc-editor.org/rfc/bcp/bcp47.txt).",
          "key": "locale",
          "label": "Locale",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The page URL where the conversion event took place.",
          "key": "url",
          "label": "Page URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$referrer}",
          "description": "The page referrer.",
          "key": "referrer",
          "label": "Page Referrer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "IP address of the browser.",
          "key": "ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "User agent from the user’s device.",
          "key": "user_agent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "brand": undefined,
            "content_category": undefined,
            "content_id": undefined,
            "content_name": undefined,
            "price": undefined,
            "quantity": undefined,
          },
          "description": "Related item details for the event.",
          "key": "contents",
          "label": "Contents",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "choices": [
            {
              "label": "product",
              "value": "product",
            },
            {
              "label": "product_group",
              "value": "product_group",
            },
          ],
          "default": "product",
          "description": "Type of the product item. When the \`content_id\` in the \`Contents\` field is specified as a \`sku_id\`, set this field to \`product\`. When the \`content_id\` in the \`Contents\` field is specified as an \`item_group_id\`, set this field to \`product_group\`.",
          "key": "content_type",
          "label": "Content Type",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.currency}",
          "description": "Currency for the value specified as ISO 4217 code.",
          "key": "currency",
          "label": "Currency",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.value ?? event.properties.revenue}",
          "description": "Value of the order or items sold.",
          "key": "value",
          "label": "Value",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "A string description of the web event.",
          "key": "description",
          "label": "Description",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.query}",
          "description": "The text string that was searched for.",
          "key": "query",
          "label": "Query",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.limited_data_use}",
          "description": "Use this field to flag an event for limited data processing. TikTok will recognize this parameter as a request for limited data processing, and will limit its processing activities accordingly if the event shared occurred in an eligible location. To learn more about the Limited Data Use feature, refer to [Events API 2.0 - Limited Data Use](https://ads.tiktok.com/marketing_api/docs?id=1771101204435970).",
          "key": "limited_data_use",
          "label": "Limited Data Use",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Use this field to specify that events should be test events rather than actual traffic. You can find your Test Event Code in your TikTok Events Manager under the "Test Event" tab. You'll want to remove your Test Event Code when sending real traffic through this integration.",
          "key": "test_event_code",
          "label": "Test Event Code",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "reportOfflineEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "View Content",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Product Clicked'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": undefined,
          "description": "Conversion event name. Please refer to the "Offline Standard Events" section on in TikTok’s [Events API 2.0 documentation](https://business-api.tiktok.com/portal/docs?id=1771101186666498) for accepted event names.",
          "key": "event",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "Any hashed ID that can identify a unique user/session.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Timestamp that the event took place, in ISO 8601 format.",
          "key": "timestamp",
          "label": "Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.phone ?? event.context.traits.phone}",
          "description": "A single phone number or array of phone numbers in E.164 standard format. At least one phone number value is required if both Email and External ID fields are empty.",
          "key": "phone_numbers",
          "label": "Phone Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.email ?? event.context.traits.email}",
          "description": "A single email address or an array of email addresses. At least one email value is required if both Phone Number and External ID fields are empty.",
          "key": "email_addresses",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.order_id}",
          "description": "Order ID of the transaction.",
          "key": "order_id",
          "label": "Order ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.shop_id}",
          "description": "Shop ID of the transaction.",
          "key": "shop_id",
          "label": "Shop ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "Uniquely identifies the user who triggered the conversion event. TikTok Offline Conversions Destination supports both string and string[] types for sending external ID(s). At least one external ID value is required if both Email and Phone Number fields are empty.",
          "key": "external_ids",
          "label": "External ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttclid}",
          "description": "The value of the ttclid used to match website visitor events with TikTok ads. The ttclid is valid for 7 days. See [Set up ttclid](https://ads.tiktok.com/marketing_api/docs?rid=4eezrhr6lg4&id=1681728034437121) for details.",
          "key": "ttclid",
          "label": "TikTok Click ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttp}",
          "description": "TikTok Cookie ID. If you also use Pixel SDK and have enabled cookies, Pixel SDK automatically saves a unique identifier in the \`_ttp\` cookie. The value of \`_ttp\` is used to match website visitor events with TikTok ads. You can extract the value of \`_ttp\` and attach the value here. To learn more about the \`ttp\` parameter, refer to [Events API 2.0 - Send TikTok Cookie](https://ads.tiktok.com/marketing_api/docs?id=%201771100936446977) (\`_ttp\`).",
          "key": "ttp",
          "label": "TikTok Cookie ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.lead_id}",
          "description": "ID of TikTok leads. Every lead will have its own lead_id when exported from TikTok. This feature is in Beta. Please contact your TikTok representative to inquire regarding availability",
          "key": "lead_id",
          "label": "TikTok Lead ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$locale}",
          "description": "The BCP 47 language identifier. For reference, refer to the [IETF BCP 47 standardized code](https://www.rfc-editor.org/rfc/bcp/bcp47.txt).",
          "key": "locale",
          "label": "Locale",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The page URL where the conversion event took place.",
          "key": "url",
          "label": "Page URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$referrer}",
          "description": "The page referrer.",
          "key": "referrer",
          "label": "Page Referrer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "IP address of the browser.",
          "key": "ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "User agent from the user’s device.",
          "key": "user_agent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "brand": undefined,
            "content_category": undefined,
            "content_id": undefined,
            "content_name": undefined,
            "price": undefined,
            "quantity": undefined,
          },
          "description": "Related item details for the event.",
          "key": "contents",
          "label": "Contents",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "choices": [
            {
              "label": "product",
              "value": "product",
            },
            {
              "label": "product_group",
              "value": "product_group",
            },
          ],
          "default": "product",
          "description": "Type of the product item. When the \`content_id\` in the \`Contents\` field is specified as a \`sku_id\`, set this field to \`product\`. When the \`content_id\` in the \`Contents\` field is specified as an \`item_group_id\`, set this field to \`product_group\`.",
          "key": "content_type",
          "label": "Content Type",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.currency}",
          "description": "Currency for the value specified as ISO 4217 code.",
          "key": "currency",
          "label": "Currency",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.value ?? event.properties.revenue}",
          "description": "Value of the order or items sold.",
          "key": "value",
          "label": "Value",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "A string description of the web event.",
          "key": "description",
          "label": "Description",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.query}",
          "description": "The text string that was searched for.",
          "key": "query",
          "label": "Query",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.limited_data_use}",
          "description": "Use this field to flag an event for limited data processing. TikTok will recognize this parameter as a request for limited data processing, and will limit its processing activities accordingly if the event shared occurred in an eligible location. To learn more about the Limited Data Use feature, refer to [Events API 2.0 - Limited Data Use](https://ads.tiktok.com/marketing_api/docs?id=1771101204435970).",
          "key": "limited_data_use",
          "label": "Limited Data Use",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Use this field to specify that events should be test events rather than actual traffic. You can find your Test Event Code in your TikTok Events Manager under the "Test Event" tab. You'll want to remove your Test Event Code when sending real traffic through this integration.",
          "key": "test_event_code",
          "label": "Test Event Code",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "reportOfflineEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Click Button",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Products Searched'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": undefined,
          "description": "Conversion event name. Please refer to the "Offline Standard Events" section on in TikTok’s [Events API 2.0 documentation](https://business-api.tiktok.com/portal/docs?id=1771101186666498) for accepted event names.",
          "key": "event",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "Any hashed ID that can identify a unique user/session.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Timestamp that the event took place, in ISO 8601 format.",
          "key": "timestamp",
          "label": "Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.phone ?? event.context.traits.phone}",
          "description": "A single phone number or array of phone numbers in E.164 standard format. At least one phone number value is required if both Email and External ID fields are empty.",
          "key": "phone_numbers",
          "label": "Phone Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.email ?? event.context.traits.email}",
          "description": "A single email address or an array of email addresses. At least one email value is required if both Phone Number and External ID fields are empty.",
          "key": "email_addresses",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.order_id}",
          "description": "Order ID of the transaction.",
          "key": "order_id",
          "label": "Order ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.shop_id}",
          "description": "Shop ID of the transaction.",
          "key": "shop_id",
          "label": "Shop ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "Uniquely identifies the user who triggered the conversion event. TikTok Offline Conversions Destination supports both string and string[] types for sending external ID(s). At least one external ID value is required if both Email and Phone Number fields are empty.",
          "key": "external_ids",
          "label": "External ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttclid}",
          "description": "The value of the ttclid used to match website visitor events with TikTok ads. The ttclid is valid for 7 days. See [Set up ttclid](https://ads.tiktok.com/marketing_api/docs?rid=4eezrhr6lg4&id=1681728034437121) for details.",
          "key": "ttclid",
          "label": "TikTok Click ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttp}",
          "description": "TikTok Cookie ID. If you also use Pixel SDK and have enabled cookies, Pixel SDK automatically saves a unique identifier in the \`_ttp\` cookie. The value of \`_ttp\` is used to match website visitor events with TikTok ads. You can extract the value of \`_ttp\` and attach the value here. To learn more about the \`ttp\` parameter, refer to [Events API 2.0 - Send TikTok Cookie](https://ads.tiktok.com/marketing_api/docs?id=%201771100936446977) (\`_ttp\`).",
          "key": "ttp",
          "label": "TikTok Cookie ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.lead_id}",
          "description": "ID of TikTok leads. Every lead will have its own lead_id when exported from TikTok. This feature is in Beta. Please contact your TikTok representative to inquire regarding availability",
          "key": "lead_id",
          "label": "TikTok Lead ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$locale}",
          "description": "The BCP 47 language identifier. For reference, refer to the [IETF BCP 47 standardized code](https://www.rfc-editor.org/rfc/bcp/bcp47.txt).",
          "key": "locale",
          "label": "Locale",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The page URL where the conversion event took place.",
          "key": "url",
          "label": "Page URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$referrer}",
          "description": "The page referrer.",
          "key": "referrer",
          "label": "Page Referrer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "IP address of the browser.",
          "key": "ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "User agent from the user’s device.",
          "key": "user_agent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "brand": undefined,
            "content_category": undefined,
            "content_id": undefined,
            "content_name": undefined,
            "price": undefined,
            "quantity": undefined,
          },
          "description": "Related item details for the event.",
          "key": "contents",
          "label": "Contents",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "choices": [
            {
              "label": "product",
              "value": "product",
            },
            {
              "label": "product_group",
              "value": "product_group",
            },
          ],
          "default": "product",
          "description": "Type of the product item. When the \`content_id\` in the \`Contents\` field is specified as a \`sku_id\`, set this field to \`product\`. When the \`content_id\` in the \`Contents\` field is specified as an \`item_group_id\`, set this field to \`product_group\`.",
          "key": "content_type",
          "label": "Content Type",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.currency}",
          "description": "Currency for the value specified as ISO 4217 code.",
          "key": "currency",
          "label": "Currency",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.value ?? event.properties.revenue}",
          "description": "Value of the order or items sold.",
          "key": "value",
          "label": "Value",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "A string description of the web event.",
          "key": "description",
          "label": "Description",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.query}",
          "description": "The text string that was searched for.",
          "key": "query",
          "label": "Query",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.limited_data_use}",
          "description": "Use this field to flag an event for limited data processing. TikTok will recognize this parameter as a request for limited data processing, and will limit its processing activities accordingly if the event shared occurred in an eligible location. To learn more about the Limited Data Use feature, refer to [Events API 2.0 - Limited Data Use](https://ads.tiktok.com/marketing_api/docs?id=1771101204435970).",
          "key": "limited_data_use",
          "label": "Limited Data Use",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Use this field to specify that events should be test events rather than actual traffic. You can find your Test Event Code in your TikTok Events Manager under the "Test Event" tab. You'll want to remove your Test Event Code when sending real traffic through this integration.",
          "key": "test_event_code",
          "label": "Test Event Code",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "reportOfflineEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Search",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Product Added to Wishlist'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": undefined,
          "description": "Conversion event name. Please refer to the "Offline Standard Events" section on in TikTok’s [Events API 2.0 documentation](https://business-api.tiktok.com/portal/docs?id=1771101186666498) for accepted event names.",
          "key": "event",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "Any hashed ID that can identify a unique user/session.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Timestamp that the event took place, in ISO 8601 format.",
          "key": "timestamp",
          "label": "Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.phone ?? event.context.traits.phone}",
          "description": "A single phone number or array of phone numbers in E.164 standard format. At least one phone number value is required if both Email and External ID fields are empty.",
          "key": "phone_numbers",
          "label": "Phone Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.email ?? event.context.traits.email}",
          "description": "A single email address or an array of email addresses. At least one email value is required if both Phone Number and External ID fields are empty.",
          "key": "email_addresses",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.order_id}",
          "description": "Order ID of the transaction.",
          "key": "order_id",
          "label": "Order ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.shop_id}",
          "description": "Shop ID of the transaction.",
          "key": "shop_id",
          "label": "Shop ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "Uniquely identifies the user who triggered the conversion event. TikTok Offline Conversions Destination supports both string and string[] types for sending external ID(s). At least one external ID value is required if both Email and Phone Number fields are empty.",
          "key": "external_ids",
          "label": "External ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttclid}",
          "description": "The value of the ttclid used to match website visitor events with TikTok ads. The ttclid is valid for 7 days. See [Set up ttclid](https://ads.tiktok.com/marketing_api/docs?rid=4eezrhr6lg4&id=1681728034437121) for details.",
          "key": "ttclid",
          "label": "TikTok Click ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttp}",
          "description": "TikTok Cookie ID. If you also use Pixel SDK and have enabled cookies, Pixel SDK automatically saves a unique identifier in the \`_ttp\` cookie. The value of \`_ttp\` is used to match website visitor events with TikTok ads. You can extract the value of \`_ttp\` and attach the value here. To learn more about the \`ttp\` parameter, refer to [Events API 2.0 - Send TikTok Cookie](https://ads.tiktok.com/marketing_api/docs?id=%201771100936446977) (\`_ttp\`).",
          "key": "ttp",
          "label": "TikTok Cookie ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.lead_id}",
          "description": "ID of TikTok leads. Every lead will have its own lead_id when exported from TikTok. This feature is in Beta. Please contact your TikTok representative to inquire regarding availability",
          "key": "lead_id",
          "label": "TikTok Lead ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$locale}",
          "description": "The BCP 47 language identifier. For reference, refer to the [IETF BCP 47 standardized code](https://www.rfc-editor.org/rfc/bcp/bcp47.txt).",
          "key": "locale",
          "label": "Locale",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The page URL where the conversion event took place.",
          "key": "url",
          "label": "Page URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$referrer}",
          "description": "The page referrer.",
          "key": "referrer",
          "label": "Page Referrer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "IP address of the browser.",
          "key": "ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "User agent from the user’s device.",
          "key": "user_agent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "brand": undefined,
            "content_category": undefined,
            "content_id": undefined,
            "content_name": undefined,
            "price": undefined,
            "quantity": undefined,
          },
          "description": "Related item details for the event.",
          "key": "contents",
          "label": "Contents",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "choices": [
            {
              "label": "product",
              "value": "product",
            },
            {
              "label": "product_group",
              "value": "product_group",
            },
          ],
          "default": "product",
          "description": "Type of the product item. When the \`content_id\` in the \`Contents\` field is specified as a \`sku_id\`, set this field to \`product\`. When the \`content_id\` in the \`Contents\` field is specified as an \`item_group_id\`, set this field to \`product_group\`.",
          "key": "content_type",
          "label": "Content Type",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.currency}",
          "description": "Currency for the value specified as ISO 4217 code.",
          "key": "currency",
          "label": "Currency",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.value ?? event.properties.revenue}",
          "description": "Value of the order or items sold.",
          "key": "value",
          "label": "Value",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "A string description of the web event.",
          "key": "description",
          "label": "Description",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.query}",
          "description": "The text string that was searched for.",
          "key": "query",
          "label": "Query",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.limited_data_use}",
          "description": "Use this field to flag an event for limited data processing. TikTok will recognize this parameter as a request for limited data processing, and will limit its processing activities accordingly if the event shared occurred in an eligible location. To learn more about the Limited Data Use feature, refer to [Events API 2.0 - Limited Data Use](https://ads.tiktok.com/marketing_api/docs?id=1771101204435970).",
          "key": "limited_data_use",
          "label": "Limited Data Use",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Use this field to specify that events should be test events rather than actual traffic. You can find your Test Event Code in your TikTok Events Manager under the "Test Event" tab. You'll want to remove your Test Event Code when sending real traffic through this integration.",
          "key": "test_event_code",
          "label": "Test Event Code",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "reportOfflineEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Add to Wishlist",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Product Added'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": undefined,
          "description": "Conversion event name. Please refer to the "Offline Standard Events" section on in TikTok’s [Events API 2.0 documentation](https://business-api.tiktok.com/portal/docs?id=1771101186666498) for accepted event names.",
          "key": "event",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "Any hashed ID that can identify a unique user/session.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Timestamp that the event took place, in ISO 8601 format.",
          "key": "timestamp",
          "label": "Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.phone ?? event.context.traits.phone}",
          "description": "A single phone number or array of phone numbers in E.164 standard format. At least one phone number value is required if both Email and External ID fields are empty.",
          "key": "phone_numbers",
          "label": "Phone Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.email ?? event.context.traits.email}",
          "description": "A single email address or an array of email addresses. At least one email value is required if both Phone Number and External ID fields are empty.",
          "key": "email_addresses",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.order_id}",
          "description": "Order ID of the transaction.",
          "key": "order_id",
          "label": "Order ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.shop_id}",
          "description": "Shop ID of the transaction.",
          "key": "shop_id",
          "label": "Shop ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "Uniquely identifies the user who triggered the conversion event. TikTok Offline Conversions Destination supports both string and string[] types for sending external ID(s). At least one external ID value is required if both Email and Phone Number fields are empty.",
          "key": "external_ids",
          "label": "External ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttclid}",
          "description": "The value of the ttclid used to match website visitor events with TikTok ads. The ttclid is valid for 7 days. See [Set up ttclid](https://ads.tiktok.com/marketing_api/docs?rid=4eezrhr6lg4&id=1681728034437121) for details.",
          "key": "ttclid",
          "label": "TikTok Click ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttp}",
          "description": "TikTok Cookie ID. If you also use Pixel SDK and have enabled cookies, Pixel SDK automatically saves a unique identifier in the \`_ttp\` cookie. The value of \`_ttp\` is used to match website visitor events with TikTok ads. You can extract the value of \`_ttp\` and attach the value here. To learn more about the \`ttp\` parameter, refer to [Events API 2.0 - Send TikTok Cookie](https://ads.tiktok.com/marketing_api/docs?id=%201771100936446977) (\`_ttp\`).",
          "key": "ttp",
          "label": "TikTok Cookie ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.lead_id}",
          "description": "ID of TikTok leads. Every lead will have its own lead_id when exported from TikTok. This feature is in Beta. Please contact your TikTok representative to inquire regarding availability",
          "key": "lead_id",
          "label": "TikTok Lead ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$locale}",
          "description": "The BCP 47 language identifier. For reference, refer to the [IETF BCP 47 standardized code](https://www.rfc-editor.org/rfc/bcp/bcp47.txt).",
          "key": "locale",
          "label": "Locale",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The page URL where the conversion event took place.",
          "key": "url",
          "label": "Page URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$referrer}",
          "description": "The page referrer.",
          "key": "referrer",
          "label": "Page Referrer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "IP address of the browser.",
          "key": "ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "User agent from the user’s device.",
          "key": "user_agent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "brand": undefined,
            "content_category": undefined,
            "content_id": undefined,
            "content_name": undefined,
            "price": undefined,
            "quantity": undefined,
          },
          "description": "Related item details for the event.",
          "key": "contents",
          "label": "Contents",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "choices": [
            {
              "label": "product",
              "value": "product",
            },
            {
              "label": "product_group",
              "value": "product_group",
            },
          ],
          "default": "product",
          "description": "Type of the product item. When the \`content_id\` in the \`Contents\` field is specified as a \`sku_id\`, set this field to \`product\`. When the \`content_id\` in the \`Contents\` field is specified as an \`item_group_id\`, set this field to \`product_group\`.",
          "key": "content_type",
          "label": "Content Type",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.currency}",
          "description": "Currency for the value specified as ISO 4217 code.",
          "key": "currency",
          "label": "Currency",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.value ?? event.properties.revenue}",
          "description": "Value of the order or items sold.",
          "key": "value",
          "label": "Value",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "A string description of the web event.",
          "key": "description",
          "label": "Description",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.query}",
          "description": "The text string that was searched for.",
          "key": "query",
          "label": "Query",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.limited_data_use}",
          "description": "Use this field to flag an event for limited data processing. TikTok will recognize this parameter as a request for limited data processing, and will limit its processing activities accordingly if the event shared occurred in an eligible location. To learn more about the Limited Data Use feature, refer to [Events API 2.0 - Limited Data Use](https://ads.tiktok.com/marketing_api/docs?id=1771101204435970).",
          "key": "limited_data_use",
          "label": "Limited Data Use",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Use this field to specify that events should be test events rather than actual traffic. You can find your Test Event Code in your TikTok Events Manager under the "Test Event" tab. You'll want to remove your Test Event Code when sending real traffic through this integration.",
          "key": "test_event_code",
          "label": "Test Event Code",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "reportOfflineEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Add to Cart",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Checkout Started'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": undefined,
          "description": "Conversion event name. Please refer to the "Offline Standard Events" section on in TikTok’s [Events API 2.0 documentation](https://business-api.tiktok.com/portal/docs?id=1771101186666498) for accepted event names.",
          "key": "event",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "Any hashed ID that can identify a unique user/session.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Timestamp that the event took place, in ISO 8601 format.",
          "key": "timestamp",
          "label": "Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.phone ?? event.context.traits.phone}",
          "description": "A single phone number or array of phone numbers in E.164 standard format. At least one phone number value is required if both Email and External ID fields are empty.",
          "key": "phone_numbers",
          "label": "Phone Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.email ?? event.context.traits.email}",
          "description": "A single email address or an array of email addresses. At least one email value is required if both Phone Number and External ID fields are empty.",
          "key": "email_addresses",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.order_id}",
          "description": "Order ID of the transaction.",
          "key": "order_id",
          "label": "Order ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.shop_id}",
          "description": "Shop ID of the transaction.",
          "key": "shop_id",
          "label": "Shop ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "Uniquely identifies the user who triggered the conversion event. TikTok Offline Conversions Destination supports both string and string[] types for sending external ID(s). At least one external ID value is required if both Email and Phone Number fields are empty.",
          "key": "external_ids",
          "label": "External ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttclid}",
          "description": "The value of the ttclid used to match website visitor events with TikTok ads. The ttclid is valid for 7 days. See [Set up ttclid](https://ads.tiktok.com/marketing_api/docs?rid=4eezrhr6lg4&id=1681728034437121) for details.",
          "key": "ttclid",
          "label": "TikTok Click ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttp}",
          "description": "TikTok Cookie ID. If you also use Pixel SDK and have enabled cookies, Pixel SDK automatically saves a unique identifier in the \`_ttp\` cookie. The value of \`_ttp\` is used to match website visitor events with TikTok ads. You can extract the value of \`_ttp\` and attach the value here. To learn more about the \`ttp\` parameter, refer to [Events API 2.0 - Send TikTok Cookie](https://ads.tiktok.com/marketing_api/docs?id=%201771100936446977) (\`_ttp\`).",
          "key": "ttp",
          "label": "TikTok Cookie ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.lead_id}",
          "description": "ID of TikTok leads. Every lead will have its own lead_id when exported from TikTok. This feature is in Beta. Please contact your TikTok representative to inquire regarding availability",
          "key": "lead_id",
          "label": "TikTok Lead ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$locale}",
          "description": "The BCP 47 language identifier. For reference, refer to the [IETF BCP 47 standardized code](https://www.rfc-editor.org/rfc/bcp/bcp47.txt).",
          "key": "locale",
          "label": "Locale",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The page URL where the conversion event took place.",
          "key": "url",
          "label": "Page URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$referrer}",
          "description": "The page referrer.",
          "key": "referrer",
          "label": "Page Referrer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "IP address of the browser.",
          "key": "ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "User agent from the user’s device.",
          "key": "user_agent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "brand": undefined,
            "content_category": undefined,
            "content_id": undefined,
            "content_name": undefined,
            "price": undefined,
            "quantity": undefined,
          },
          "description": "Related item details for the event.",
          "key": "contents",
          "label": "Contents",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "choices": [
            {
              "label": "product",
              "value": "product",
            },
            {
              "label": "product_group",
              "value": "product_group",
            },
          ],
          "default": "product",
          "description": "Type of the product item. When the \`content_id\` in the \`Contents\` field is specified as a \`sku_id\`, set this field to \`product\`. When the \`content_id\` in the \`Contents\` field is specified as an \`item_group_id\`, set this field to \`product_group\`.",
          "key": "content_type",
          "label": "Content Type",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.currency}",
          "description": "Currency for the value specified as ISO 4217 code.",
          "key": "currency",
          "label": "Currency",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.value ?? event.properties.revenue}",
          "description": "Value of the order or items sold.",
          "key": "value",
          "label": "Value",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "A string description of the web event.",
          "key": "description",
          "label": "Description",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.query}",
          "description": "The text string that was searched for.",
          "key": "query",
          "label": "Query",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.limited_data_use}",
          "description": "Use this field to flag an event for limited data processing. TikTok will recognize this parameter as a request for limited data processing, and will limit its processing activities accordingly if the event shared occurred in an eligible location. To learn more about the Limited Data Use feature, refer to [Events API 2.0 - Limited Data Use](https://ads.tiktok.com/marketing_api/docs?id=1771101204435970).",
          "key": "limited_data_use",
          "label": "Limited Data Use",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Use this field to specify that events should be test events rather than actual traffic. You can find your Test Event Code in your TikTok Events Manager under the "Test Event" tab. You'll want to remove your Test Event Code when sending real traffic through this integration.",
          "key": "test_event_code",
          "label": "Test Event Code",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "reportOfflineEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Initiate Checkout",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Payment Info Entered'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": undefined,
          "description": "Conversion event name. Please refer to the "Offline Standard Events" section on in TikTok’s [Events API 2.0 documentation](https://business-api.tiktok.com/portal/docs?id=1771101186666498) for accepted event names.",
          "key": "event",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "Any hashed ID that can identify a unique user/session.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Timestamp that the event took place, in ISO 8601 format.",
          "key": "timestamp",
          "label": "Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.phone ?? event.context.traits.phone}",
          "description": "A single phone number or array of phone numbers in E.164 standard format. At least one phone number value is required if both Email and External ID fields are empty.",
          "key": "phone_numbers",
          "label": "Phone Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.email ?? event.context.traits.email}",
          "description": "A single email address or an array of email addresses. At least one email value is required if both Phone Number and External ID fields are empty.",
          "key": "email_addresses",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.order_id}",
          "description": "Order ID of the transaction.",
          "key": "order_id",
          "label": "Order ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.shop_id}",
          "description": "Shop ID of the transaction.",
          "key": "shop_id",
          "label": "Shop ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "Uniquely identifies the user who triggered the conversion event. TikTok Offline Conversions Destination supports both string and string[] types for sending external ID(s). At least one external ID value is required if both Email and Phone Number fields are empty.",
          "key": "external_ids",
          "label": "External ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttclid}",
          "description": "The value of the ttclid used to match website visitor events with TikTok ads. The ttclid is valid for 7 days. See [Set up ttclid](https://ads.tiktok.com/marketing_api/docs?rid=4eezrhr6lg4&id=1681728034437121) for details.",
          "key": "ttclid",
          "label": "TikTok Click ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttp}",
          "description": "TikTok Cookie ID. If you also use Pixel SDK and have enabled cookies, Pixel SDK automatically saves a unique identifier in the \`_ttp\` cookie. The value of \`_ttp\` is used to match website visitor events with TikTok ads. You can extract the value of \`_ttp\` and attach the value here. To learn more about the \`ttp\` parameter, refer to [Events API 2.0 - Send TikTok Cookie](https://ads.tiktok.com/marketing_api/docs?id=%201771100936446977) (\`_ttp\`).",
          "key": "ttp",
          "label": "TikTok Cookie ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.lead_id}",
          "description": "ID of TikTok leads. Every lead will have its own lead_id when exported from TikTok. This feature is in Beta. Please contact your TikTok representative to inquire regarding availability",
          "key": "lead_id",
          "label": "TikTok Lead ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$locale}",
          "description": "The BCP 47 language identifier. For reference, refer to the [IETF BCP 47 standardized code](https://www.rfc-editor.org/rfc/bcp/bcp47.txt).",
          "key": "locale",
          "label": "Locale",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The page URL where the conversion event took place.",
          "key": "url",
          "label": "Page URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$referrer}",
          "description": "The page referrer.",
          "key": "referrer",
          "label": "Page Referrer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "IP address of the browser.",
          "key": "ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "User agent from the user’s device.",
          "key": "user_agent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "brand": undefined,
            "content_category": undefined,
            "content_id": undefined,
            "content_name": undefined,
            "price": undefined,
            "quantity": undefined,
          },
          "description": "Related item details for the event.",
          "key": "contents",
          "label": "Contents",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "choices": [
            {
              "label": "product",
              "value": "product",
            },
            {
              "label": "product_group",
              "value": "product_group",
            },
          ],
          "default": "product",
          "description": "Type of the product item. When the \`content_id\` in the \`Contents\` field is specified as a \`sku_id\`, set this field to \`product\`. When the \`content_id\` in the \`Contents\` field is specified as an \`item_group_id\`, set this field to \`product_group\`.",
          "key": "content_type",
          "label": "Content Type",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.currency}",
          "description": "Currency for the value specified as ISO 4217 code.",
          "key": "currency",
          "label": "Currency",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.value ?? event.properties.revenue}",
          "description": "Value of the order or items sold.",
          "key": "value",
          "label": "Value",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "A string description of the web event.",
          "key": "description",
          "label": "Description",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.query}",
          "description": "The text string that was searched for.",
          "key": "query",
          "label": "Query",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.limited_data_use}",
          "description": "Use this field to flag an event for limited data processing. TikTok will recognize this parameter as a request for limited data processing, and will limit its processing activities accordingly if the event shared occurred in an eligible location. To learn more about the Limited Data Use feature, refer to [Events API 2.0 - Limited Data Use](https://ads.tiktok.com/marketing_api/docs?id=1771101204435970).",
          "key": "limited_data_use",
          "label": "Limited Data Use",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Use this field to specify that events should be test events rather than actual traffic. You can find your Test Event Code in your TikTok Events Manager under the "Test Event" tab. You'll want to remove your Test Event Code when sending real traffic through this integration.",
          "key": "test_event_code",
          "label": "Test Event Code",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "reportOfflineEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Add Payment Info",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Order Placed'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": undefined,
          "description": "Conversion event name. Please refer to the "Offline Standard Events" section on in TikTok’s [Events API 2.0 documentation](https://business-api.tiktok.com/portal/docs?id=1771101186666498) for accepted event names.",
          "key": "event",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "Any hashed ID that can identify a unique user/session.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Timestamp that the event took place, in ISO 8601 format.",
          "key": "timestamp",
          "label": "Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.phone ?? event.context.traits.phone}",
          "description": "A single phone number or array of phone numbers in E.164 standard format. At least one phone number value is required if both Email and External ID fields are empty.",
          "key": "phone_numbers",
          "label": "Phone Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.email ?? event.context.traits.email}",
          "description": "A single email address or an array of email addresses. At least one email value is required if both Phone Number and External ID fields are empty.",
          "key": "email_addresses",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.order_id}",
          "description": "Order ID of the transaction.",
          "key": "order_id",
          "label": "Order ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.shop_id}",
          "description": "Shop ID of the transaction.",
          "key": "shop_id",
          "label": "Shop ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "Uniquely identifies the user who triggered the conversion event. TikTok Offline Conversions Destination supports both string and string[] types for sending external ID(s). At least one external ID value is required if both Email and Phone Number fields are empty.",
          "key": "external_ids",
          "label": "External ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttclid}",
          "description": "The value of the ttclid used to match website visitor events with TikTok ads. The ttclid is valid for 7 days. See [Set up ttclid](https://ads.tiktok.com/marketing_api/docs?rid=4eezrhr6lg4&id=1681728034437121) for details.",
          "key": "ttclid",
          "label": "TikTok Click ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttp}",
          "description": "TikTok Cookie ID. If you also use Pixel SDK and have enabled cookies, Pixel SDK automatically saves a unique identifier in the \`_ttp\` cookie. The value of \`_ttp\` is used to match website visitor events with TikTok ads. You can extract the value of \`_ttp\` and attach the value here. To learn more about the \`ttp\` parameter, refer to [Events API 2.0 - Send TikTok Cookie](https://ads.tiktok.com/marketing_api/docs?id=%201771100936446977) (\`_ttp\`).",
          "key": "ttp",
          "label": "TikTok Cookie ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.lead_id}",
          "description": "ID of TikTok leads. Every lead will have its own lead_id when exported from TikTok. This feature is in Beta. Please contact your TikTok representative to inquire regarding availability",
          "key": "lead_id",
          "label": "TikTok Lead ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$locale}",
          "description": "The BCP 47 language identifier. For reference, refer to the [IETF BCP 47 standardized code](https://www.rfc-editor.org/rfc/bcp/bcp47.txt).",
          "key": "locale",
          "label": "Locale",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The page URL where the conversion event took place.",
          "key": "url",
          "label": "Page URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$referrer}",
          "description": "The page referrer.",
          "key": "referrer",
          "label": "Page Referrer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "IP address of the browser.",
          "key": "ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "User agent from the user’s device.",
          "key": "user_agent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "brand": undefined,
            "content_category": undefined,
            "content_id": undefined,
            "content_name": undefined,
            "price": undefined,
            "quantity": undefined,
          },
          "description": "Related item details for the event.",
          "key": "contents",
          "label": "Contents",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "choices": [
            {
              "label": "product",
              "value": "product",
            },
            {
              "label": "product_group",
              "value": "product_group",
            },
          ],
          "default": "product",
          "description": "Type of the product item. When the \`content_id\` in the \`Contents\` field is specified as a \`sku_id\`, set this field to \`product\`. When the \`content_id\` in the \`Contents\` field is specified as an \`item_group_id\`, set this field to \`product_group\`.",
          "key": "content_type",
          "label": "Content Type",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.currency}",
          "description": "Currency for the value specified as ISO 4217 code.",
          "key": "currency",
          "label": "Currency",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.value ?? event.properties.revenue}",
          "description": "Value of the order or items sold.",
          "key": "value",
          "label": "Value",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "A string description of the web event.",
          "key": "description",
          "label": "Description",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.query}",
          "description": "The text string that was searched for.",
          "key": "query",
          "label": "Query",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.limited_data_use}",
          "description": "Use this field to flag an event for limited data processing. TikTok will recognize this parameter as a request for limited data processing, and will limit its processing activities accordingly if the event shared occurred in an eligible location. To learn more about the Limited Data Use feature, refer to [Events API 2.0 - Limited Data Use](https://ads.tiktok.com/marketing_api/docs?id=1771101204435970).",
          "key": "limited_data_use",
          "label": "Limited Data Use",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Use this field to specify that events should be test events rather than actual traffic. You can find your Test Event Code in your TikTok Events Manager under the "Test Event" tab. You'll want to remove your Test Event Code when sending real traffic through this integration.",
          "key": "test_event_code",
          "label": "Test Event Code",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "reportOfflineEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Place an Order",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Download Link Clicked'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": undefined,
          "description": "Conversion event name. Please refer to the "Offline Standard Events" section on in TikTok’s [Events API 2.0 documentation](https://business-api.tiktok.com/portal/docs?id=1771101186666498) for accepted event names.",
          "key": "event",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "Any hashed ID that can identify a unique user/session.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Timestamp that the event took place, in ISO 8601 format.",
          "key": "timestamp",
          "label": "Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.phone ?? event.context.traits.phone}",
          "description": "A single phone number or array of phone numbers in E.164 standard format. At least one phone number value is required if both Email and External ID fields are empty.",
          "key": "phone_numbers",
          "label": "Phone Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.email ?? event.context.traits.email}",
          "description": "A single email address or an array of email addresses. At least one email value is required if both Phone Number and External ID fields are empty.",
          "key": "email_addresses",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.order_id}",
          "description": "Order ID of the transaction.",
          "key": "order_id",
          "label": "Order ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.shop_id}",
          "description": "Shop ID of the transaction.",
          "key": "shop_id",
          "label": "Shop ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "Uniquely identifies the user who triggered the conversion event. TikTok Offline Conversions Destination supports both string and string[] types for sending external ID(s). At least one external ID value is required if both Email and Phone Number fields are empty.",
          "key": "external_ids",
          "label": "External ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttclid}",
          "description": "The value of the ttclid used to match website visitor events with TikTok ads. The ttclid is valid for 7 days. See [Set up ttclid](https://ads.tiktok.com/marketing_api/docs?rid=4eezrhr6lg4&id=1681728034437121) for details.",
          "key": "ttclid",
          "label": "TikTok Click ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttp}",
          "description": "TikTok Cookie ID. If you also use Pixel SDK and have enabled cookies, Pixel SDK automatically saves a unique identifier in the \`_ttp\` cookie. The value of \`_ttp\` is used to match website visitor events with TikTok ads. You can extract the value of \`_ttp\` and attach the value here. To learn more about the \`ttp\` parameter, refer to [Events API 2.0 - Send TikTok Cookie](https://ads.tiktok.com/marketing_api/docs?id=%201771100936446977) (\`_ttp\`).",
          "key": "ttp",
          "label": "TikTok Cookie ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.lead_id}",
          "description": "ID of TikTok leads. Every lead will have its own lead_id when exported from TikTok. This feature is in Beta. Please contact your TikTok representative to inquire regarding availability",
          "key": "lead_id",
          "label": "TikTok Lead ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$locale}",
          "description": "The BCP 47 language identifier. For reference, refer to the [IETF BCP 47 standardized code](https://www.rfc-editor.org/rfc/bcp/bcp47.txt).",
          "key": "locale",
          "label": "Locale",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The page URL where the conversion event took place.",
          "key": "url",
          "label": "Page URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$referrer}",
          "description": "The page referrer.",
          "key": "referrer",
          "label": "Page Referrer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "IP address of the browser.",
          "key": "ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "User agent from the user’s device.",
          "key": "user_agent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "brand": undefined,
            "content_category": undefined,
            "content_id": undefined,
            "content_name": undefined,
            "price": undefined,
            "quantity": undefined,
          },
          "description": "Related item details for the event.",
          "key": "contents",
          "label": "Contents",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "choices": [
            {
              "label": "product",
              "value": "product",
            },
            {
              "label": "product_group",
              "value": "product_group",
            },
          ],
          "default": "product",
          "description": "Type of the product item. When the \`content_id\` in the \`Contents\` field is specified as a \`sku_id\`, set this field to \`product\`. When the \`content_id\` in the \`Contents\` field is specified as an \`item_group_id\`, set this field to \`product_group\`.",
          "key": "content_type",
          "label": "Content Type",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.currency}",
          "description": "Currency for the value specified as ISO 4217 code.",
          "key": "currency",
          "label": "Currency",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.value ?? event.properties.revenue}",
          "description": "Value of the order or items sold.",
          "key": "value",
          "label": "Value",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "A string description of the web event.",
          "key": "description",
          "label": "Description",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.query}",
          "description": "The text string that was searched for.",
          "key": "query",
          "label": "Query",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.limited_data_use}",
          "description": "Use this field to flag an event for limited data processing. TikTok will recognize this parameter as a request for limited data processing, and will limit its processing activities accordingly if the event shared occurred in an eligible location. To learn more about the Limited Data Use feature, refer to [Events API 2.0 - Limited Data Use](https://ads.tiktok.com/marketing_api/docs?id=1771101204435970).",
          "key": "limited_data_use",
          "label": "Limited Data Use",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Use this field to specify that events should be test events rather than actual traffic. You can find your Test Event Code in your TikTok Events Manager under the "Test Event" tab. You'll want to remove your Test Event Code when sending real traffic through this integration.",
          "key": "test_event_code",
          "label": "Test Event Code",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "reportOfflineEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Download",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Signed Up'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": undefined,
          "description": "Conversion event name. Please refer to the "Offline Standard Events" section on in TikTok’s [Events API 2.0 documentation](https://business-api.tiktok.com/portal/docs?id=1771101186666498) for accepted event names.",
          "key": "event",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "Any hashed ID that can identify a unique user/session.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Timestamp that the event took place, in ISO 8601 format.",
          "key": "timestamp",
          "label": "Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.phone ?? event.context.traits.phone}",
          "description": "A single phone number or array of phone numbers in E.164 standard format. At least one phone number value is required if both Email and External ID fields are empty.",
          "key": "phone_numbers",
          "label": "Phone Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.email ?? event.context.traits.email}",
          "description": "A single email address or an array of email addresses. At least one email value is required if both Phone Number and External ID fields are empty.",
          "key": "email_addresses",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.order_id}",
          "description": "Order ID of the transaction.",
          "key": "order_id",
          "label": "Order ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.shop_id}",
          "description": "Shop ID of the transaction.",
          "key": "shop_id",
          "label": "Shop ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "Uniquely identifies the user who triggered the conversion event. TikTok Offline Conversions Destination supports both string and string[] types for sending external ID(s). At least one external ID value is required if both Email and Phone Number fields are empty.",
          "key": "external_ids",
          "label": "External ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttclid}",
          "description": "The value of the ttclid used to match website visitor events with TikTok ads. The ttclid is valid for 7 days. See [Set up ttclid](https://ads.tiktok.com/marketing_api/docs?rid=4eezrhr6lg4&id=1681728034437121) for details.",
          "key": "ttclid",
          "label": "TikTok Click ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttp}",
          "description": "TikTok Cookie ID. If you also use Pixel SDK and have enabled cookies, Pixel SDK automatically saves a unique identifier in the \`_ttp\` cookie. The value of \`_ttp\` is used to match website visitor events with TikTok ads. You can extract the value of \`_ttp\` and attach the value here. To learn more about the \`ttp\` parameter, refer to [Events API 2.0 - Send TikTok Cookie](https://ads.tiktok.com/marketing_api/docs?id=%201771100936446977) (\`_ttp\`).",
          "key": "ttp",
          "label": "TikTok Cookie ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.lead_id}",
          "description": "ID of TikTok leads. Every lead will have its own lead_id when exported from TikTok. This feature is in Beta. Please contact your TikTok representative to inquire regarding availability",
          "key": "lead_id",
          "label": "TikTok Lead ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$locale}",
          "description": "The BCP 47 language identifier. For reference, refer to the [IETF BCP 47 standardized code](https://www.rfc-editor.org/rfc/bcp/bcp47.txt).",
          "key": "locale",
          "label": "Locale",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The page URL where the conversion event took place.",
          "key": "url",
          "label": "Page URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$referrer}",
          "description": "The page referrer.",
          "key": "referrer",
          "label": "Page Referrer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "IP address of the browser.",
          "key": "ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "User agent from the user’s device.",
          "key": "user_agent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "brand": undefined,
            "content_category": undefined,
            "content_id": undefined,
            "content_name": undefined,
            "price": undefined,
            "quantity": undefined,
          },
          "description": "Related item details for the event.",
          "key": "contents",
          "label": "Contents",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "choices": [
            {
              "label": "product",
              "value": "product",
            },
            {
              "label": "product_group",
              "value": "product_group",
            },
          ],
          "default": "product",
          "description": "Type of the product item. When the \`content_id\` in the \`Contents\` field is specified as a \`sku_id\`, set this field to \`product\`. When the \`content_id\` in the \`Contents\` field is specified as an \`item_group_id\`, set this field to \`product_group\`.",
          "key": "content_type",
          "label": "Content Type",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.currency}",
          "description": "Currency for the value specified as ISO 4217 code.",
          "key": "currency",
          "label": "Currency",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.value ?? event.properties.revenue}",
          "description": "Value of the order or items sold.",
          "key": "value",
          "label": "Value",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "A string description of the web event.",
          "key": "description",
          "label": "Description",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.query}",
          "description": "The text string that was searched for.",
          "key": "query",
          "label": "Query",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.limited_data_use}",
          "description": "Use this field to flag an event for limited data processing. TikTok will recognize this parameter as a request for limited data processing, and will limit its processing activities accordingly if the event shared occurred in an eligible location. To learn more about the Limited Data Use feature, refer to [Events API 2.0 - Limited Data Use](https://ads.tiktok.com/marketing_api/docs?id=1771101204435970).",
          "key": "limited_data_use",
          "label": "Limited Data Use",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Use this field to specify that events should be test events rather than actual traffic. You can find your Test Event Code in your TikTok Events Manager under the "Test Event" tab. You'll want to remove your Test Event Code when sending real traffic through this integration.",
          "key": "test_event_code",
          "label": "Test Event Code",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "reportOfflineEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Complete Registration",
    },
  ],
  "name": "TikTok Offline Conversions",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 77 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Iterable",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/iterable.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-iterable",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "To obtain the API Key, go to the Iterable app and naviate to Integrations > API Keys. Create a new API Key with the 'Server-Side' type.",
      "key": "apiKey",
      "label": "API Key",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "choices": [
        {
          "label": "United States",
          "value": "united_states",
        },
        {
          "label": "Europe",
          "value": "europe",
        },
      ],
      "default": "united_states",
      "description": "The location where your Iterable data is hosted.",
      "key": "dataCenterLocation",
      "label": "Data Center Location",
      "required": false,
      "secret": false,
      "type": "choice",
    },
  ],
  "mapping_templates": [
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify') and event != 'Order Completed' and event != 'Cart Updated'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.properties.email ?? event.context.traits.email}",
          "description": "An email address that identifies a user profile in Iterable.",
          "key": "email",
          "label": "Email Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id}",
          "description": "A user ID that identifies a user profile in Iterable.",
          "key": "userId",
          "label": "User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.event}",
          "description": "Name of the event",
          "key": "eventName",
          "label": "Event name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties}",
          "description": "Additional event properties.",
          "key": "dataFields",
          "label": "Event Data Fields",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "A unique ID. If an event exists with that id, the event will be updated",
          "key": "id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Time the event took place.",
          "key": "createdAt",
          "label": "Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.campaignId}",
          "description": "Iterable campaign the event can be attributed to.",
          "key": "campaignId",
          "label": "Campaign ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.templateId}",
          "description": "Iterable template the event can be attributed to.",
          "key": "templateId",
          "label": "Template ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": true,
          "description": "When enabled, Segment will send data to Iterable in batches of up to 1001",
          "key": "enable_batching",
          "label": "Enable Batching",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": "1001",
          "description": "Maximum number of events to include in each batch. Actual batch sizes may be lower.",
          "key": "batch_size",
          "label": "Batch Size",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "trackEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Track Calls",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event in ('$identify', '$set')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{person.properties.email}",
          "description": "An email address that identifies a user profile in Iterable.",
          "key": "email",
          "label": "Email Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id}",
          "description": "A user ID that identifies a user profile in Iterable.",
          "key": "userId",
          "label": "User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties}",
          "description": "Data to store on the user profile.",
          "key": "dataFields",
          "label": "User Data Fields",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.phone}",
          "description": "User phone number. Must be a valid phone number including country code. e.g. +14158675309",
          "key": "phoneNumber",
          "label": "User Phone Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": false,
          "description": "If you'd like to merge (rather than overwrite) a user profile's top-level objects with the values provided for them in the request body, set mergeNestedObjects to true.",
          "key": "mergeNestedObjects",
          "label": "Merge Nested Objects",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": true,
          "description": "When enabled, Segment will send data to Iterable in batches of up to 1001",
          "key": "enable_batching",
          "label": "Enable Batching",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": "1001",
          "description": "Maximum number of events to include in each batch. Actual batch sizes may be lower.",
          "key": "batch_size",
          "label": "Batch Size",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "updateUser",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Identify Calls",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify') and event = 'Cart Updated'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": {
            "dataFields": "{event.context.traits}",
            "email": "{event.properties.email ?? event.context.traits.email}",
            "mergeNestedObjects": false,
            "phoneNumber": "{event.context.traits.phone}",
            "userId": "{person.id}",
          },
          "description": "Updates user data or adds a user if none exists",
          "key": "user",
          "label": "User Data",
          "required": true,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "categories": undefined,
            "description": undefined,
            "id": undefined,
            "imageUrl": undefined,
            "name": undefined,
            "price": undefined,
            "quantity": undefined,
            "sku": undefined,
            "url": undefined,
          },
          "description": "Individual items in the cart. Each item must contain \`id\`, \`name\`, \`price\`, and \`quantity\`. Extra values are added to dataFields.",
          "key": "items",
          "label": "Cart items",
          "required": true,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "updateCart",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Update Cart Calls",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify') and event = 'Order Completed'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.properties.order_id}",
          "description": "Similar to \`Event ID\` in custom events. Iterable recommends mapping \`order_id\` or \`messageId\`. If a purchase exists with that id, the purchase will be updated. If none is specified, a new id will automatically be generated by Iterable",
          "key": "id",
          "label": "Order ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "dataFields": "{event.context.traits}",
            "email": "{event.properties.email ?? event.context.traits.email}",
            "mergeNestedObjects": false,
            "phoneNumber": "{event.context.traits.phone}",
            "userId": "{person.id}",
          },
          "description": "Updates user data or adds a user if none exists",
          "key": "user",
          "label": "User Data",
          "required": true,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.properties}",
          "description": "Additional event properties.",
          "key": "dataFields",
          "label": "Event Data Fields",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "categories": undefined,
            "description": undefined,
            "id": undefined,
            "imageUrl": undefined,
            "name": undefined,
            "price": undefined,
            "quantity": undefined,
            "sku": undefined,
            "url": undefined,
          },
          "description": "Individual items in the cart. Each item must contain \`id\`, \`name\`, \`price\`, and \`quantity\`. Extra values are added to dataFields.",
          "key": "items",
          "label": "Cart items",
          "required": true,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.properties.total}",
          "description": "Total order amount.",
          "key": "total",
          "label": "Total",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Time the event took place.",
          "key": "createdAt",
          "label": "Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.campaignId}",
          "description": "Iterable campaign the event can be attributed to.",
          "key": "campaignId",
          "label": "Campaign ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.templateId}",
          "description": "Iterable template the event can be attributed to.",
          "key": "templateId",
          "label": "Template ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "trackPurchase",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Order Completed Calls",
    },
  ],
  "name": "Iterable",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 78 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Liveramp Audiences",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/liveramp.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-liveramp-audiences",
  "inputs_schema": [
    {
      "default": true,
      "description": "",
      "key": "__segment_internal_engage_force_full_sync",
      "label": "Force Full Sync",
      "required": true,
      "secret": false,
      "type": "boolean",
    },
    {
      "default": true,
      "description": "",
      "key": "__segment_internal_engage_batch_sync",
      "label": "Supports batch sync via ADS",
      "required": true,
      "secret": false,
      "type": "boolean",
    },
  ],
  "mapping_templates": [],
  "name": "Liveramp Audiences",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 79 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to RevX Cloud",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/revx.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-revx",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Revx specific client id. This can be found by contacting the RevX support team",
      "key": "client_id",
      "label": "Revx Client ID",
      "required": true,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify') or type ='screen'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.properties.$device_type}",
          "description": "Platform of the device.",
          "key": "os",
          "label": "Platform",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "Identifier For Advertiser (IDFA/GAID)",
          "key": "advertising_id",
          "label": "Identifier For Advertiser (IDFA/GAID)",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.name ?? event.event}",
          "description": "A unique identifier for your event.",
          "key": "event_name",
          "label": "Event name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.type}",
          "description": "A unique identifier for your request type.",
          "key": "type",
          "label": "Request type",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_id}",
          "description": "Identifier for Device Id for IOS and Android",
          "key": "idfv",
          "label": "Identifier For Vendor (IDFV)",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The timestamp of the event. If time is not sent with the event, it will be set to the request upload time.",
          "key": "time",
          "label": "Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties}",
          "description": "An object of key-value pairs that represent additional data to be sent along with the event.",
          "key": "event_properties",
          "label": "Event Properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.context.traits}",
          "description": "An object of key-value pairs that represent additional data tied to the user",
          "key": "user_properties",
          "label": "User Properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.event.properties.$app_version}",
          "description": "The current version of your application.",
          "key": "app_version",
          "label": "App Version",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$os}",
          "description": "The name of the mobile operating system or browser that the user is using.",
          "key": "os_name",
          "label": "OS Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$os_version}",
          "description": "The version of the mobile operating system or browser the user is using.",
          "key": "os_version",
          "label": "OS Version",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "The device brand that the user is using.",
          "key": "device_brand",
          "label": "Device Brand",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_manufacturer}",
          "description": "The device manufacturer that the user is using.",
          "key": "device_manufacturer",
          "label": "Device Manufacturer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_model}",
          "description": "The device model that the user is using.",
          "key": "device_model",
          "label": "Device Model",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "The carrier that the user is using.",
          "key": "carrier",
          "label": "Carrier",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$geoip_country_name}",
          "description": "The current country of the user.",
          "key": "country",
          "label": "Country",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "The current region of the user.",
          "key": "region",
          "label": "Region",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$geoip_city_name}",
          "description": "The current city of the user.",
          "key": "city",
          "label": "City",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "The current Designated Market Area of the user.",
          "key": "dma",
          "label": "Designated Market Area",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$locale}",
          "description": "The language set by the user.",
          "key": "language",
          "label": "Language",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "price": "{event.properties.price}",
            "productId": "{event.properties.product_id}",
            "quantity": "{event.properties.quantity}",
          },
          "description": "The single product viewed or Added to cart.",
          "key": "product",
          "label": "Product",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "price": undefined,
            "productId": undefined,
            "quantity": undefined,
          },
          "description": "The list of products purchased.",
          "key": "products",
          "label": "Products",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.properties.$geoip_latitude}",
          "description": "The current Latitude of the user.",
          "key": "location_lat",
          "label": "Latitude",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$geoip_longitude}",
          "description": "The current Longitude of the user.",
          "key": "location_lng",
          "label": "Longtitude",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "The IP address of the user. Use "$remote" to use the IP address on the upload request. ",
          "key": "ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "sendRevxPing",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Send Revx Ping",
    },
  ],
  "name": "RevX Cloud",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 80 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Calliper Cloud",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/cloud.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "calliper-cloud-actions",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Your company id in Calliper. During the onboarding you can find it by selecting Segment integration. After onboarding is complete you can find it by opening "Data Sources" in the main menu, pressing "New Data Source" and pressing "Connect" on a Segment card.",
      "key": "companyId",
      "label": "Company id",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "Your Segment Key in Calliper. Please follow the instructions to find the Company id, secret key is located in a field next to it.",
      "key": "segmentKey",
      "label": "Segment Key",
      "required": true,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.event}",
          "description": "A type of your event, e.g. a sign up or a name of an action within your product.",
          "key": "event",
          "label": "Event Type",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The timestamp of the event. Could be any date string/number value compatible with JavaScript Date constructor: e.g. milliseconds epoch or an ISO datetime. If time is not sent with the event, it will be set to the request time.",
          "key": "time",
          "label": "Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.distinct_id}",
          "description": "A distinct ID of an unidentified (logged out) user. Device id is used if available",
          "key": "anonymous_id",
          "label": "Anonymous ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id}",
          "description": "A distinct ID of an identified (logged in) user.",
          "key": "user_id",
          "label": "User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "The unique identifier of the group that performed this event.",
          "key": "group_id",
          "label": "Group ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "A random id that is unique to an event. ID is being used to prevent event duplication. All the events that share the same unique id besides the first one will be ignored.",
          "key": "event_unique_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.event.properties.$app_version}",
          "description": "The current version of your application.",
          "key": "app_version",
          "label": "App Version",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$os}",
          "description": "The name of the mobile operating system or browser that the user is using.",
          "key": "os_name",
          "label": "OS Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$os_version}",
          "description": "The version of the mobile operating system or browser the user is using.",
          "key": "os_version",
          "label": "OS Version",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_id}",
          "description": "A unique identifier for the device the user is using.",
          "key": "device_id",
          "label": "Device ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_type}",
          "description": "Platform of the device.",
          "key": "platform",
          "label": "Platform",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_manufacturer}",
          "description": "The device manufacturer that the user is using.",
          "key": "device_manufacturer",
          "label": "Device Manufacturer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_model}",
          "description": "The device model that the user is using.",
          "key": "device_model",
          "label": "Device Model",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "The carrier that the user is using.",
          "key": "carrier",
          "label": "Carrier",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "Whether cellular is enabled.",
          "key": "cellular",
          "label": "Cellular Enabled",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$geoip_country_name}",
          "description": "The current country of the user.",
          "key": "country",
          "label": "Country",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "The current region of the user.",
          "key": "region",
          "label": "Region",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$geoip_city_name}",
          "description": "The current city of the user.",
          "key": "city",
          "label": "City",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$locale}",
          "description": "The language set by the user.",
          "key": "language",
          "label": "Language",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$lib}",
          "description": "The name of the SDK used to send events.",
          "key": "library_name",
          "label": "Library Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$lib_version}",
          "description": "The version of the SDK used to send events.",
          "key": "library_version",
          "label": "Library Version",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "The IP address of the user. This is only used for geolocation and won't be stored.",
          "key": "ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The full URL of the webpage on which the event is triggered.",
          "key": "url",
          "label": "URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.context.page.path}",
          "description": "The relative URL of the webpage on which the event is triggered.",
          "key": "path",
          "label": "Page Path",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.context.page.title}",
          "description": "The name of the webpage on which the event is triggered.",
          "key": "page_title",
          "label": "Page Title",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$referrer}",
          "description": "Referrer url",
          "key": "referrer",
          "label": "Referrer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "User agent",
          "key": "user_agent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties}",
          "description": "An object of key-value pairs that represent additional data to be sent along with the event.",
          "key": "event_properties",
          "label": "Event Properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "trackEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Track Event",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event in ('$identify', '$set')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.timestamp}",
          "description": "The timestamp of the event. Could be any date string/number value compatible with JavaScript Date constructor: e.g. milliseconds epoch or an ISO datetime. If time is not sent with the event, it will be set to the request time.",
          "key": "time",
          "label": "Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id}",
          "description": "A distinct ID of an identified (logged in) user.",
          "key": "user_id",
          "label": "User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.distinct_id}",
          "description": "A distinct ID of an unidentified (logged out) user. Device id is used if available",
          "key": "anonymous_id",
          "label": "Anonymous ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.first_name ?? person.properties.firstName}",
          "description": "User's first name",
          "key": "first_name",
          "label": "First Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.last_name ?? person.properties.lastName}",
          "description": "User's last name",
          "key": "last_name",
          "label": "Last Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.name}",
          "description": "User's full name",
          "key": "name",
          "label": "Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.email}",
          "description": "User's email address",
          "key": "email",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.phone}",
          "description": "User's phone number",
          "key": "phone",
          "label": "Phone",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.createdAt ?? person.properties.created_at}",
          "description": "The timestamp for when the user profile was first created",
          "key": "created_at",
          "label": "User Creation Time",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties}",
          "description": "Properties to set on the user profile",
          "key": "traits",
          "label": "User Properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "identifyUser",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Identify User",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = '$groupidentify'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.timestamp}",
          "description": "The timestamp of the event. Could be any date string/number value compatible with JavaScript Date constructor: e.g. milliseconds epoch or an ISO datetime. If time is not sent with the event, it will be set to the request time.",
          "key": "time",
          "label": "Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.groupId}",
          "description": "The unique identifier of the group.",
          "key": "group_id",
          "label": "Group ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties}",
          "description": "The properties to set on the group profile.",
          "key": "traits",
          "label": "Group Properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "identifyGroup",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Identify Group",
    },
  ],
  "name": "Calliper Cloud",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 81 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to NOOP",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/noop.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-noop",
  "inputs_schema": [],
  "mapping_templates": [
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": undefined,
          "description": "A single NOOP field",
          "key": "noop",
          "label": "NOOP",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "noop",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Track Event",
    },
  ],
  "name": "NOOP",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 82 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Airship",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/airship.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-airship",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Create in the Airship Go dashboard in Settings->Partner Integrations->Segment",
      "key": "access_token",
      "label": "Access Token",
      "required": true,
      "secret": false,
      "type": "password",
    },
    {
      "default": undefined,
      "description": "The App Key identifies the Airship Project to which API requests are made.",
      "key": "app_key",
      "label": "App Key",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "choices": [
        {
          "label": "US",
          "value": "US",
        },
        {
          "label": "EU",
          "value": "EU",
        },
      ],
      "default": "US",
      "description": "US or EU",
      "key": "endpoint",
      "label": "Data Center",
      "required": true,
      "secret": false,
      "type": "choice",
    },
  ],
  "mapping_templates": [
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{person.id}",
          "description": "The identifier assigned in Airship as the Named User",
          "key": "named_user_id",
          "label": "Airship Named User ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.event}",
          "description": "Event Name",
          "key": "name",
          "label": "Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "When the event occurred.",
          "key": "occurred",
          "label": "Occurred",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties}",
          "description": "Properties of the event",
          "key": "properties",
          "label": "Event Properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": false,
          "description": "If true, Segment will batch events before sending to Airship. Limit 100 events per request.",
          "key": "enable_batching",
          "label": "Batch Data to Airship",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": "customEvents",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Custom Events",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event in ('$identify', '$set')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{person.id}",
          "description": "The identifier assigned in Airship as the Named User",
          "key": "named_user_id",
          "label": "Airship Named User ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "When the Trait was set",
          "key": "occurred",
          "label": "Occurred",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "account_creation": "{person.properties.account_creation}",
            "advertising_id": "",
            "age": "{person.properties.age}",
            "altitude": "{person.properties.altitude}",
            "birthdate": "{person.properties.birthday}",
            "city": "{person.properties.address.city}",
            "company": "{person.properties.company_name}",
            "country": "{person.properties.address.country}",
            "email": "{person.properties.email}",
            "first_name": "{person.properties.first_name}",
            "full_name": "{person.properties.full_name}",
            "gender": "{person.properties.gender}",
            "home_phone": "{person.properties.home_phone}",
            "last_name": "{person.properties.last_name}",
            "latitude": "{person.properties.latitude}",
            "longitude": "{person.properties.longitude}",
            "loyalty_tier": "{person.properties.loyalty_tier}",
            "mobile_phone": "{person.properties.phone}",
            "region": "{person.properties.address.region}",
            "title": "{person.properties.title}",
            "username": "{person.properties.username}",
            "work_phone": "{person.properties.work_phone}",
            "zipcode": "{person.properties.address.postalCode}",
          },
          "description": "User Attributes. Attributes should exist in Airship in order to be set, including the predifined ones defaulted here.",
          "key": "attributes",
          "label": "Attributes",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "setAttributes",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Set Attributes",
    },
  ],
  "name": "Airship",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 83 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Ambee",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/ambee.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-ambee",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Enter your company’s name",
      "key": "companyName",
      "label": "Company Name",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "The API Key is available via Ambee’s API Dashboard: https://api-dashboard.getambee.com. Paste the API key generated on the homepage. For bulk use, subscribe to enterprise plan on the dashboard",
      "key": "apiKey",
      "label": "API Key",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "Enter the email address you used to sign up for Ambee’s API Key.",
      "key": "email",
      "label": "Email",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "choices": [
        {
          "label": "US",
          "value": "US",
        },
        {
          "label": "EU",
          "value": "EU",
        },
      ],
      "default": "US",
      "description": "Your Segment Workspace is hosted in either the US or EU Region. Select which Segment Region Ambee should send notifications to. The default is US",
      "key": "segmentRegion",
      "label": "Segment Region For Notifications",
      "required": false,
      "secret": false,
      "type": "choice",
    },
    {
      "default": undefined,
      "description": "This is your Segment Source WriteKey. Use this WriteKey to send data from Ambee to your destination",
      "key": "segmentWriteKey",
      "label": "Segment WriteKey For Notifications",
      "required": true,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [],
  "name": "Ambee",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 84 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Userpilot Cloud",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/userpilot.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-userpilot-cloud",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Your Userpilot API key can be found in the [Userpilot environment](https://run.userpilot.io/environment) dashboard.",
      "key": "apiKey",
      "label": "API Key",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": "https://analytex.userpilot.io/",
      "description": "Your Userpilot API endpoint can be found in the [Userpilot environment](https://run.userpilot.io/environment) dashboard.",
      "key": "endpoint",
      "label": "API Endpoint",
      "required": true,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event in ('$identify', '$set')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "The ID of the logged-in user.",
          "key": "userId",
          "label": "User ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.createdAt}",
          "description": "The date the user profile was created at",
          "key": "createdAt",
          "label": "User Created At Date",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties}",
          "description": "Segment traits",
          "key": "traits",
          "label": "Traits",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "identifyUser",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Identify User",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "The ID of the logged-in user.",
          "key": "userId",
          "label": "User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.event}",
          "description": "Event name",
          "key": "name",
          "label": "Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties}",
          "description": "Event properties",
          "key": "properties",
          "label": "Properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "trackEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Track Event",
    },
  ],
  "name": "Userpilot Cloud",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 85 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Canny",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/canny.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-canny",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "You can find your API Key in the Segment Integration page in your admin settings.",
      "key": "apiKey",
      "label": "API Key",
      "required": true,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = '$groupidentify'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.groupId}",
          "description": "The unique identifier of the group.",
          "key": "groupId",
          "label": "Group ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties}",
          "description": "Properties to set on the group profile",
          "key": "traits",
          "label": "Group Properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.type}",
          "description": "The type of the event",
          "key": "type",
          "label": "Type",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id}",
          "description": "The unique identifier of the user.",
          "key": "userId",
          "label": "User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "group",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Create or update a Company",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event in ('$identify', '$set')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{person.id}",
          "description": "A distinct ID of an identified (logged in) user.",
          "key": "userId",
          "label": "User ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "avatar": "{person.properties.avatar}",
            "company": "{person.properties.company}",
            "createdAt": "{person.properties.createdAt}",
            "email": "{person.properties.email}",
            "id": "{person.properties.id}",
            "name": "{person.properties.name}",
          },
          "description": "Properties to set on the user profile",
          "key": "traits",
          "label": "User Properties",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.type}",
          "description": "The type of the event",
          "key": "type",
          "label": "Type",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "identify",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Create or update a User",
    },
  ],
  "name": "Canny",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 86 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Koala (Cloud)",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/koala.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-koala-cloud",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Your public key",
      "key": "public_key",
      "label": "Public Key",
      "required": true,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{person.properties.email ?? event.email}",
          "description": "The email to associate with the user",
          "key": "email",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.event}",
          "description": "The event name",
          "key": "event",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties}",
          "description": "Properties to send with the event",
          "key": "properties",
          "label": "Event properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The timestamp of the event",
          "key": "sent_at",
          "label": "Sent At",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.context}",
          "description": "Context properties to send with the event",
          "key": "context",
          "label": "Context properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.context.traits}",
          "description": "Traits inherited from the context object",
          "key": "traits",
          "label": "Traits",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "The device IP collected from the context",
          "key": "device_ip",
          "label": "Device IP",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "The Segment messageId",
          "key": "message_id",
          "label": "MessageId",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "track",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Track Calls",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event in ('$identify', '$set')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{person.properties.email ?? event.email}",
          "description": "The email to associate with the user",
          "key": "email",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties}",
          "description": "Traits to associate with the user",
          "key": "traits",
          "label": "Traits",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The timestamp of the event",
          "key": "sent_at",
          "label": "Sent At",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.context}",
          "description": "Context properties to send with the event",
          "key": "context",
          "label": "Context properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "The device IP collected from the context",
          "key": "device_ip",
          "label": "Device IP",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "The Segment messageId",
          "key": "message_id",
          "label": "MessageId",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "identify",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Identify Calls",
    },
  ],
  "name": "Koala (Cloud)",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 87 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Iqm",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/iqm.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-iqm",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "The Pixel ID for your IQM Conversion.",
      "key": "pixel_id",
      "label": "Pixel ID",
      "required": true,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "",
          "description": "The data to be sent to IQM",
          "key": "data",
          "label": "Data",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "postEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Send an event to IQM",
    },
  ],
  "name": "Iqm",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 88 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to PlayerZero Cloud",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/playerzero.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-playerzero-cloud",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "The Project Token for the PlayerZero project you want to send data to. You can find this Token on the [Segment (Cloud) Connector](https://go.playerzero.app/connector/segment-cloud) page.",
      "key": "projectToken",
      "label": "PlayerZero Project Token",
      "required": true,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify') or event = '$pageview' or event = '$screen'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "trackEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Track Event",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event in ('$identify', '$set') or event = '$groupidentify' or event = '$alias'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "identifyUser",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Identify User",
    },
  ],
  "name": "PlayerZero Cloud",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 89 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to DevRev",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/devrev.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-devrev",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Your DevRev API Key, generated from the setting page in your DevRev organization.",
      "key": "apiKey",
      "label": "DevRev API Key",
      "required": true,
      "secret": false,
      "type": "password",
    },
    {
      "default": "gmail.com,hotmail.com,outlook.com,yahoo.com,aol.com,icloud.com,me.com,msn.com",
      "description": "A comma separated list of email domains to blacklist from being used to search for/create Accounts.",
      "key": "blacklistedDomains",
      "label": "Blacklisted Domains",
      "required": false,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [],
  "name": "DevRev",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 90 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Webhook Audiences",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/webhook.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-webhook-audiences",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "If set, Segment will sign requests with an HMAC in the "X-Signature" request header. The HMAC is a hex-encoded SHA1 hash generated using this shared secret and the request body.",
      "key": "sharedSecret",
      "label": "Shared Secret",
      "required": false,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "If set, Segment will send a POST request with the audienceName in the JSON to the provided URL to create the audience. The expected JSON response must have "externalId".",
      "key": "createAudienceUrl",
      "label": "URL to send requests to create an audience",
      "required": false,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "If set, Segment will send a POST request with the externalId in the JSON to the provided URL to get the audience. The expected JSON response must have "externalId".",
      "key": "getAudienceUrl",
      "label": "URL to send requests to get an audience",
      "required": false,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [],
  "name": "Webhook Audiences",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 91 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to AppFit",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/app.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-app-fit",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "AppFit project API key. ",
      "key": "apiKey",
      "label": "API Key",
      "required": true,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [],
  "name": "AppFit",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 92 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to m3ter",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/m3ter.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-m3ter",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Your service user Access Key Id. You can generate the service user and its Access Key Id in your m3ter console under "Settings" -> "Access" -> "Service Users" -> "Create Service User". Step by step guide can be found in [m3ter Docs](https://www.m3ter.com/docs/guides/authenticating-with-the-platform/service-authentication#generating-an-api-key-and-secret-for-a-service-user)",
      "key": "access_key_id",
      "label": "m3ter Access Key Id",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "Your service user Api Secret. You can generate the service user and its Api Secret in your m3ter console under "Settings" -> "Access" -> "Service Users" -> "Create Service User". Step by step guide can be found in [m3ter Docs](https://www.m3ter.com/docs/guides/authenticating-with-the-platform/service-authentication#generating-an-api-key-and-secret-for-a-service-user)",
      "key": "api_secret",
      "label": "m3ter Api Secret",
      "required": true,
      "secret": false,
      "type": "password",
    },
    {
      "default": undefined,
      "description": "ID of your organization where your data will be submitted to",
      "key": "org_id",
      "label": "m3ter Organization Id",
      "required": true,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.properties.uid}",
          "description": "Unique ID for this measurement",
          "key": "uid",
          "label": "m3ter UUID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.meter}",
          "description": "Short code identifying the Meter the measurement is for",
          "key": "meter",
          "label": "Meter",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.account}",
          "description": "Code of the Account the measurement is for",
          "key": "account",
          "label": "Account",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Timestamp for the measurement",
          "key": "ts",
          "label": "Timestamp",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "End timestamp for the measurement. Can be used in the case a usage event needs to have an explicit start and end rather than being instantaneous",
          "key": "ets",
          "label": "End timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {},
          "description": "Non-numeric who values for data measurements, such as: who logged-in to the service; who was contacted by the service",
          "key": "who",
          "label": "Who",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {},
          "description": "Non-numeric where values for data measurements such as: where someone logged into your service from",
          "key": "where",
          "label": "Where",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {},
          "description": "Non-numeric what values for data measurements such as: what level of user logged into the service",
          "key": "what",
          "label": "What",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {},
          "description": "Non-numeric other values for measurements such as textual data which is not applicable to Who, What, or Where events",
          "key": "other",
          "label": "Other",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {},
          "description": "Non-numeric metadata values for measurements using high-cardinality fields that you don't intend to segment when you aggregate the data",
          "key": "metadata",
          "label": "Metadata",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {},
          "description": "Numeric measure values for general quantitative measurements.",
          "key": "measure",
          "label": "Measure",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {},
          "description": "Numeric cost values for measurements associated with costs",
          "key": "cost",
          "label": "Cost",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {},
          "description": "Numeric income values for measurements associated with income",
          "key": "income",
          "label": "Income",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": true,
          "description": "When enabled the action will send multiple events in a single API request, improving efficiency. This is m3ter’s recommended mode.",
          "key": "enable_batching",
          "label": "Send data to m3ter in batches",
          "required": true,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": "submitMeasurements",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Submit usage data to m3ter",
    },
  ],
  "name": "m3ter",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 93 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Listrak",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/listrak.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-listrak",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Your Listrak API client ID. Find this on the setup tab of your Segment integration under Integrations > Integrations Management in https://admin.listrak.com.",
      "key": "client_id",
      "label": "API Client ID",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "Your Lisrak API client secret. Find this on the setup tab of your Segment integration under Integrations > Integrations Management in https://admin.listrak.com.",
      "key": "client_secret",
      "label": "API Client Secret",
      "required": true,
      "secret": false,
      "type": "password",
    },
  ],
  "mapping_templates": [],
  "name": "Listrak",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 94 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Hilo",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/hilo.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-hilo",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Hilo integration ID. This can be found on the integration page.",
      "key": "integrationId",
      "label": "Integration ID",
      "required": true,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.distinct_id}",
          "description": "An anonymous identifier",
          "key": "anonymousId",
          "label": "Anonymous ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.event}",
          "description": "Event name",
          "key": "event",
          "label": "Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties}",
          "description": "Properties to associate with the event",
          "key": "properties",
          "label": "Properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The timestamp of the event",
          "key": "timestamp",
          "label": "Timestamp",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id}",
          "description": "The ID associated with the user",
          "key": "userId",
          "label": "User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "track",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Track Calls",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = '$pageview'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.distinct_id}",
          "description": "An anonymous identifier",
          "key": "anonymousId",
          "label": "Anonymous ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.name}",
          "description": "Page name",
          "key": "name",
          "label": "Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties}",
          "description": "Properties to associate with the page view",
          "key": "properties",
          "label": "Properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The timestamp of the page view",
          "key": "timestamp",
          "label": "Timestamp",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id}",
          "description": "The ID associated with the user",
          "key": "userId",
          "label": "User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "page",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Page Calls",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = '$screen'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.distinct_id}",
          "description": "An anonymous identifier",
          "key": "anonymousId",
          "label": "Anonymous ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.name}",
          "description": "Mobile screen name",
          "key": "name",
          "label": "Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties}",
          "description": "Properties to associate with the screen view",
          "key": "properties",
          "label": "Properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The timestamp of the screen view",
          "key": "timestamp",
          "label": "Timestamp",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id}",
          "description": "The ID associated with the user",
          "key": "userId",
          "label": "User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "screen",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Screen Calls",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event in ('$identify', '$set')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.distinct_id}",
          "description": "An anonymous identifier",
          "key": "anonymousId",
          "label": "Anonymous ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties}",
          "description": "Traits to associate with the user",
          "key": "traits",
          "label": "Traits",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The timestamp of the event",
          "key": "timestamp",
          "label": "Timestamp",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id}",
          "description": "The ID associated with the user",
          "key": "userId",
          "label": "User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "identify",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Identify Calls",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = '$groupidentify'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.distinct_id}",
          "description": "An anonymous identifier",
          "key": "anonymousId",
          "label": "Anonymous ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.groupId}",
          "description": "The group ID",
          "key": "groupId",
          "label": "Group ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties}",
          "description": "Traits to associate with the user",
          "key": "traits",
          "label": "Traits",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The timestamp of the event",
          "key": "timestamp",
          "label": "Timestamp",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id}",
          "description": "The ID associated with the user",
          "key": "userId",
          "label": "User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "group",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Group Calls",
    },
  ],
  "name": "Hilo",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 95 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Rehook",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/rehook.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-rehook",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Your Rehook API Key",
      "key": "api_key",
      "label": "Api Key",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "Your Rehook API Secret",
      "key": "api_secret",
      "label": "Api Secret",
      "required": true,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [],
  "name": "Rehook",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 96 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Attio",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/attio.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-attio",
  "inputs_schema": [],
  "mapping_templates": [
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event in ('$identify', '$set')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{person.properties.email ?? event.email}",
          "description": "The email address of the person to link the user to",
          "key": "email_address",
          "label": "Email address",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id}",
          "description": "The ID of the User",
          "key": "user_id",
          "label": "ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": {},
          "description": "Additional attributes to either set or update on the Attio User Record. The values on the left should be Segment attributes or custom text, and the values on the right are Attio Attribute IDs or Slugs. For example: traits.name → name",
          "key": "user_attributes",
          "label": "Additional User attributes",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {},
          "description": "Additional attributes to either set or update on the Attio Person Record. The values on the left should be Segment attributes or custom text, and the values on the right are Attio Attribute IDs or Slugs. For example: traits.name → name",
          "key": "person_attributes",
          "label": "Additional Person attributes",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": false,
          "description": "Events will be sent Attio in batches. When batching is enabled any invalid events will be silently dropped.",
          "key": "enable_batching",
          "label": "Batch events",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": "1000",
          "description": "Max batch size to send to Attio (limit is 10,000)",
          "key": "batch_size",
          "label": "Batch Size",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.receivedAt}",
          "description": "When the event was received.",
          "key": "received_at",
          "label": "Received at",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "identifyUser",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Identify User",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = '$groupidentify'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{person.properties.website ?? event.website}",
          "description": "The domain of the Company (used to link the Workspace)",
          "key": "domain",
          "label": "Domain",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.groupId ?? event.context.group_id}",
          "description": "The ID of the Workspace",
          "key": "workspace_id",
          "label": "ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id}",
          "description": "The ID of the User, if you'd like to link them to this Workspace (leave blank to skip). This assumes you will have already called the Attio identifyUser action: unrecognised Users will fail this action otherwise.",
          "key": "user_id",
          "label": "ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {},
          "description": "Additional attributes to either set or update on the Attio Company Record. The values on the left should be Segment attributes or custom text, and the values on the right are Attio Attribute IDs or Slugs. For example: traits.name → name",
          "key": "company_attributes",
          "label": "Additional Company attributes",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {},
          "description": "Additional attributes to either set or update on the Attio Workspace Record. The values on the left should be Segment attributes or custom text, and the values on the right are Attio Attribute IDs or Slugs. For example: traits.name → name",
          "key": "workspace_attributes",
          "label": "Additional Workspace attributes",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": false,
          "description": "Events will be sent Attio in batches. When batching is enabled any invalid events will be silently dropped.",
          "key": "enable_batching",
          "label": "Batch events",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": "1000",
          "description": "Max batch size to send to Attio (limit is 10,000)",
          "key": "batch_size",
          "label": "Batch Size",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.receivedAt}",
          "description": "When the event was received.",
          "key": "received_at",
          "label": "Received at",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "groupWorkspace",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Group Workspace",
    },
  ],
  "name": "Attio",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 97 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Prodeology",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/prodeology.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-prodeology",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Your Prodeology API Key",
      "key": "apiKey",
      "label": "API Key",
      "required": true,
      "secret": false,
      "type": "password",
    },
  ],
  "mapping_templates": [
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.event}",
          "description": "The event name",
          "key": "event",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties}",
          "description": "Properties to send with the event",
          "key": "properties",
          "label": "Event properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The timestamp of the event",
          "key": "timestamp",
          "label": "Timestamp",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.distinct_id}",
          "description": "The anonymous ID associated with the user",
          "key": "anonymousId",
          "label": "Anonymous ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id}",
          "description": "The ID associated with the user",
          "key": "userId",
          "label": "User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.context}",
          "description": "Context properties to send with the event",
          "key": "context",
          "label": "Context properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "The Segment messageId",
          "key": "messageId",
          "label": "MessageId",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "track",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Track Calls",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = '$pageview'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.distinct_id}",
          "description": "An anonymous identifier",
          "key": "anonymousId",
          "label": "Anonymous ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id}",
          "description": "The ID associated with the user",
          "key": "userId",
          "label": "User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties}",
          "description": "Page properties",
          "key": "properties",
          "label": "Properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.name}",
          "description": "The name of the page",
          "key": "name",
          "label": "Page Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.context}",
          "description": "Context properties to send with the event",
          "key": "context",
          "label": "Context properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The timestamp of the event",
          "key": "timestamp",
          "label": "Timestamp",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "The Segment messageId",
          "key": "messageId",
          "label": "MessageId",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "page",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Page Calls",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event in ('$identify', '$set')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.distinct_id}",
          "description": "An anonymous identifier",
          "key": "anonymousId",
          "label": "Anonymous ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id}",
          "description": "The ID associated with the user",
          "key": "userId",
          "label": "User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties}",
          "description": "Traits to associate with the user",
          "key": "traits",
          "label": "Traits",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The timestamp of the event",
          "key": "timestamp",
          "label": "Timestamp",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "The Segment messageId",
          "key": "messageId",
          "label": "MessageId",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "identify",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Identify Calls",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = '$groupidentify'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.distinct_id}",
          "description": "Anonymous id",
          "key": "anonymousId",
          "label": "Anonymous ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id}",
          "description": "The ID associated with the user",
          "key": "userId",
          "label": "User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.groupId}",
          "description": "The group id",
          "key": "groupId",
          "label": "Group ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties}",
          "description": "Traits to associate with the group",
          "key": "traits",
          "label": "Traits",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The timestamp of the event",
          "key": "timestamp",
          "label": "Timestamp",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "The Segment messageId",
          "key": "messageId",
          "label": "MessageId",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "group",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Group Calls",
    },
  ],
  "name": "Prodeology",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 98 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Gameball",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/gameball.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-gameball",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Go to [help center](https://help.gameball.co/en/articles/3467114-get-your-account-integration-details-api-key-and-transaction-key) to learn how to find your API Key.",
      "key": "apiKey",
      "label": "API Key",
      "required": true,
      "secret": false,
      "type": "password",
    },
    {
      "default": undefined,
      "description": "Go to [help center](https://help.gameball.co/en/articles/3467114-get-your-account-integration-details-api-key-and-transaction-key) to learn how to find your API Key.",
      "key": "secretKey",
      "label": "Secret Key",
      "required": true,
      "secret": false,
      "type": "password",
    },
  ],
  "mapping_templates": [
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify') and event != 'Order Completed'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.event}",
          "description": "The name of the event",
          "key": "name",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties}",
          "description": "The event metadata to send to Gameball",
          "key": "metadata",
          "label": "Event Metadata",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "Unique identifier for the player in your database.",
          "key": "playerUniqueId",
          "label": "Player ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.mobile ?? person.properties.mobile}",
          "description": "Player's unique mobile number.",
          "key": "mobile",
          "label": "Mobile Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.email ?? person.properties.email}",
          "description": "Player's unique email.",
          "key": "email",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "trackEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Track Events",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify') and event = 'Order Completed'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "Unique identifier for the player in your database.",
          "key": "playerUniqueId",
          "label": "Player ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.mobile ?? person.properties.mobile}",
          "description": "Player's unique mobile number.",
          "key": "mobile",
          "label": "Mobile Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.email ?? person.properties.email}",
          "description": "Player's unique email.",
          "key": "email",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.order_id}",
          "description": "Unique order ID which identifies the underlying order in your system, e.g. order number, invoice number. It will be used for reversing any reward or redemption transaction on Gameball.",
          "key": "orderId",
          "label": "Order Id",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The date this order was placed, as an ISO8601 timestamp. Defaults to now if not provided.",
          "key": "orderDate",
          "label": "Order Date",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.total}",
          "description": "The sum of all order items' prices, including discounts, shipping, taxes, and tips. (Note: totalPaid is part of the totalPrice). Must be positive.",
          "key": "totalPrice",
          "label": "Total Price",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.subtotal}",
          "description": "The actual paid amount to the store. (Based on this amount, the player will be rewarded. Also, According to the Cashback Configuration). Must be positive.",
          "key": "totalPaid",
          "label": "Total Paid",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.shipping}",
          "description": "The total shipping price of the order. Must be positive.",
          "key": "totalShipping",
          "label": "Total Shipping",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.tax}",
          "description": "The sum of all the taxes applied to the order in the shop currency. Must be positive.",
          "key": "totalTax",
          "label": "Total Tax",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.discount}",
          "description": "Total discount applied on this order. Must be positive.",
          "key": "totalDiscount",
          "label": "Total Discount",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "category": undefined,
            "collection": undefined,
            "discount": undefined,
            "price": undefined,
            "productId": undefined,
            "quantity": undefined,
            "sku": undefined,
            "tags": undefined,
            "taxes": undefined,
            "title": undefined,
            "vendor": undefined,
            "weight": undefined,
          },
          "description": "A list of line items, each containing information about an item in the order.",
          "key": "lineItems",
          "label": "Line Items",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.properties.coupon}",
          "description": "An array of discount codes.",
          "key": "discountCodes",
          "label": "Discount Codes",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.redeemedAmount}",
          "description": "Monetary value of the redeemed points to be used by that player while placing his order. Note:  If this field is set, then the holdReference value should be null. Also, both fields could be null.",
          "key": "redeemedAmount",
          "label": "Redeemed Amount",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.holdReference}",
          "description": "Hold reference ID received after calling Hold Points API. This is used in case you want to use already held points. Note:  If this field is set, then the redeemedAmount value should be null. Also, both fields could be null.",
          "key": "holdReference",
          "label": "Hold Reference",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.is_guest ?? false}",
          "description": "A boolean value indicating if the customer who placed this order is a guest. The default is false.",
          "key": "guest",
          "label": "Guest",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": "{event.properties.extra}",
          "description": "Key value pair(s) of any extra information about the order. The key values must be of type string or number",
          "key": "extra",
          "label": "Extra",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.merchantId}",
          "description": "Merchant unique id or code",
          "key": "merchantId",
          "label": "Merchant Id",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.merchantName}",
          "description": "Merchant name",
          "key": "merchantName",
          "label": "Merchant Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.branchId}",
          "description": "Branch unique id or code",
          "key": "branchId",
          "label": "Branch Id",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.branchName}",
          "description": "Branch name",
          "key": "branchName",
          "label": "Branch Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "trackOrder",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Track Orders",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event in ('$identify', '$set')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "Unique identifier for the player in your database.",
          "key": "playerUniqueId",
          "label": "Player ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.mobile ?? person.properties.mobile}",
          "description": "Player's unique mobile number.",
          "key": "mobile",
          "label": "Mobile Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.email ?? person.properties.email}",
          "description": "Player's unique email.",
          "key": "email",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.displayName}",
          "description": "Player's display name",
          "key": "displayName",
          "label": "Display Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.first_name}",
          "description": "Player's first name",
          "key": "firstName",
          "label": "First Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.last_name}",
          "description": "Player's last name",
          "key": "lastName",
          "label": "Last Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.gender}",
          "description": "Player's gender.",
          "key": "gender",
          "label": "Gender",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.birthday}",
          "description": "Player's date of birth",
          "key": "dateOfBirth",
          "label": "Date Of Birth",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.joinDate}",
          "description": "Player's join date at your system.",
          "key": "joinDate",
          "label": "Join Date",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.address.country}",
          "description": "Player's country.",
          "key": "country",
          "label": "Country",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.address.city}",
          "description": "Player's city",
          "key": "city",
          "label": "City",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.location.postalCode}",
          "description": "Player's zip code",
          "key": "zip",
          "label": "Zip code",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$locale}",
          "description": "Player's preferred language",
          "key": "preferredLanguage",
          "label": "Preferred language",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.is_guest ?? false}",
          "description": "A boolean value indicating if the customer who placed this order is a guest. The default is false.",
          "key": "guest",
          "label": "Guest",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": {
            "campaign": undefined,
            "content": undefined,
            "medium": undefined,
            "source": undefined,
            "term": undefined,
          },
          "description": "Player's utms",
          "key": "utms",
          "label": "UTMs",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "device": undefined,
            "os": undefined,
            "userAgent": undefined,
          },
          "description": "Player's used devices",
          "key": "devices",
          "label": "Devices",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{person.properties.totalSpent}",
          "description": "Player's total spent amount",
          "key": "totalSpent",
          "label": "Total Spent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.lastOrderDate}",
          "description": "Player's last order date",
          "key": "lastOrderDate",
          "label": "Last Order Date",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.totalOrders}",
          "description": "Player's total orders",
          "key": "totalOrders",
          "label": "Total Orders",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.avgOrderAmount}",
          "description": "Player's average order amount",
          "key": "avgOrderAmount",
          "label": "Average Order Amount",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.tags}",
          "description": "Comma separated string of tags to be attached to the player.",
          "key": "tags",
          "label": "Tags",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.extra}",
          "description": "Key value pairs of any extra player attributes.",
          "key": "playerCustomAttributes",
          "label": "Player Custom Attributes",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.referrerCode}",
          "description": "Referring player’s referral code. This is used in case of referral, where the player to be created is referred by the player having this code.",
          "key": "referrerCode",
          "label": "Referrer Code",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.levelOrder}",
          "description": "The level order to place the player in. IMPORTANT: manual player leveling is available under special circumstances and is not available by default. Contact us for more info.",
          "key": "levelOrder",
          "label": "Level Order",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.deviceToken}",
          "description": "The FCM token (Firebase Cloud Messaging) needed for sending mobile push notifications. (Used only in case of mobile app)",
          "key": "deviceToken",
          "label": "Device Token",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "identifyPlayer",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Create Or Update Players",
    },
  ],
  "name": "Gameball",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 99 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Pushwoosh",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/pushwoosh.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-pushwoosh",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Pushwoosh API Key from Pushwoosh Control Panel",
      "key": "pushwooshAPIKey",
      "label": "Pushwoosh API Key",
      "required": true,
      "secret": false,
      "type": "password",
    },
    {
      "default": undefined,
      "description": "Pushwoosh Application Code from Pushwoosh Control Panel",
      "key": "pushwooshAppCode",
      "label": "Pushwoosh Application Code",
      "required": true,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify') or event = '$pageview' or event = '$screen'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{person.id}",
          "description": "The unique user identifier",
          "key": "external_id",
          "label": "External User ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_id}",
          "description": "Device ID",
          "key": "device_id",
          "label": "Device ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_type}",
          "description": "Device Platform",
          "key": "device_platform",
          "label": "Device Platform",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.event ?? event.name}",
          "description": "Event Name",
          "key": "name",
          "label": "Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "When the event occurred.",
          "key": "timestamp",
          "label": "Timestamp",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties}",
          "description": "Properties of the event",
          "key": "properties",
          "label": "Event Properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": false,
          "description": "If true, Segment will batch events before sending to Pushwoosh. 100 events per request max.",
          "key": "enable_batching",
          "label": "Batch Data to Pushwoosh",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": "trackEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Track Events",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event in ('$identify', '$set')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{person.id}",
          "description": "The unique user identifier",
          "key": "external_id",
          "label": "External User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.email}",
          "description": "The user's email",
          "key": "email",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.event.properties.$app_version}",
          "description": "Version of the app",
          "key": "app_version",
          "label": "App Version",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_id}",
          "description": "Device ID",
          "key": "device_id",
          "label": "Device ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_model}",
          "description": "Device Model",
          "key": "device_model",
          "label": "Device Model",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$device_type}",
          "description": "Device Platform",
          "key": "device_platform",
          "label": "Device Platform",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.context.device.token}",
          "description": "Device Token. This is not automatically collected by Segment Mobile SDKs. Add it into the Segment payload if needed",
          "key": "device_token",
          "label": "Device Token",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$locale}",
          "description": "Language",
          "key": "language",
          "label": "Language",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$geoip_country_name}",
          "description": "The country code of the user",
          "key": "country",
          "label": "Country",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$geoip_city_name}",
          "description": "The city of the user",
          "key": "city",
          "label": "City",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "latitude": "{event.properties.$geoip_latitude}",
            "longitude": "{event.properties.$geoip_longitude}",
          },
          "description": "The user's current longitude/latitude.",
          "key": "current_location",
          "label": "Current Location",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.properties.$os_version}",
          "description": "The version of the device OS",
          "key": "device_os_version",
          "label": "Device OS Version",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$timezone}",
          "description": "The timezone of the user",
          "key": "timezone",
          "label": "Timezone",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "User agent of the device",
          "key": "user_agent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties}",
          "description": "Custom attributes to send to Pushwoosh",
          "key": "custom_attributes",
          "label": "Custom Attributes",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "updateUserProfile",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Create or Update User Profile",
    },
  ],
  "name": "Pushwoosh",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 100 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to LaunchDarkly Audiences",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/launchdarkly.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-launchdarkly-audiences",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "We recommend creating a dedicated [LaunchDarkly service token](https://docs.launchdarkly.com/home/account-security/api-access-tokens#service-tokens) for this destination. The service token must have the ability to perform the \`createSegment\` and \`updateIncluded\` [role actions](https://docs.launchdarkly.com/home/members/role-actions#segment-actions).",
      "key": "apiKey",
      "label": "LaunchDarkly Service Token",
      "required": true,
      "secret": false,
      "type": "password",
    },
    {
      "default": undefined,
      "description": "Copy the [client-side ID](https://app.launchdarkly.com/settings/projects) of the environment for your segment. You can find this in the LaunchDarkly **Account settings** page for your project.",
      "key": "clientId",
      "label": "LaunchDarkly client-side ID",
      "required": true,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event in ('$identify', '$set') or event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.context.personas.computation_id}",
          "description": "Segment Audience ID to which user identifier should be added or removed",
          "key": "segment_audience_id",
          "label": "Audience ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.context.personas.computation_key}",
          "description": "Segment Audience key to which user identifier should be added or removed",
          "key": "segment_audience_key",
          "label": "Audience Key",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "choices": [
            {
              "label": "audience",
              "value": "audience",
            },
            {
              "label": "journey_step",
              "value": "journey_step",
            },
          ],
          "default": "{event.context.personas.computation_class}",
          "description": "Hidden field used to verify that the payload is generated by an Audience. Payloads not containing computation_class = 'audience' or 'journey_step' will be dropped before the perform() fuction call.",
          "key": "segment_computation_action",
          "label": "Segment Computation Action",
          "required": true,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "user",
          "description": "The event's context kind. To learn more about context kinds and where you can find a list of context kinds LaunchDarkly has observed, read [Context kinds](https://docs.launchdarkly.com/home/contexts/context-kinds).",
          "key": "context_kind",
          "label": "Context kind",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id}",
          "description": "The Segment userId value.",
          "key": "segment_user_id",
          "label": "Segment User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.distinct_id}",
          "description": "The Segment anonymousId value.",
          "key": "segment_anonymous_id",
          "label": "Segment Anonymous ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.email ?? event.context.traits.email}",
          "description": "The user's email address",
          "key": "user_email",
          "label": "Email address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "choices": [
            {
              "label": "Use Segment UserId or email",
              "value": "user_id_then_email",
            },
            {
              "label": "Use Segment UserId or Segment AnonymousId",
              "value": "user_id_then_anonymousId",
            },
            {
              "label": "Use Segment UserId or email or Segment AnonymousId",
              "value": "user_id_then_email_then_anonymousId",
            },
            {
              "label": "Use Segment UserId only",
              "value": "user_id_only",
            },
            {
              "label": "Use email only",
              "value": "email_only",
            },
          ],
          "default": "user_id_only",
          "description": "The unique LaunchDarkly context key. In most cases the Segment UserId should be used.",
          "key": "context_key",
          "label": "Context key",
          "required": true,
          "secret": false,
          "type": "choice",
        },
        {
          "default": {},
          "description": "A computed object for track and identify events. This field should not need to be edited.",
          "key": "traits_or_props",
          "label": "Traits or properties object",
          "required": true,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": true,
          "description": "When enabled, the action will batch events before sending them to LaunchDarkly. In most cases, batching should be enabled.",
          "key": "enable_batching",
          "label": "Batch events",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "choices": [
            {
              "label": "ADD",
              "value": "ADD",
            },
            {
              "label": "REMOVE",
              "value": "REMOVE",
            },
          ],
          "default": undefined,
          "description": "Indicates if the user will be added or removed from the Audience",
          "key": "audience_action",
          "label": "Audience Action",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "syncAudience",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Sync Engage Audience to LaunchDarkly",
    },
  ],
  "name": "LaunchDarkly Audiences",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 101 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Acoustic",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/acoustic.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-acoustic",
  "inputs_schema": [
    {
      "default": "customer_org_",
      "description": "Use your Acoustic Org name but replace any spaces with an underscore, eg., AcmeCustomer_Prod",
      "key": "fileNamePrefix",
      "label": "Customer Prefix",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": "",
      "description": "The Alias of the Access Point created for your access to the S3 Bucket.",
      "key": "s3_bucket_accesspoint_alias",
      "label": "S3 Bucket Access Point Alias",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "S3 Access Key for the S3 bucket.",
      "key": "s3_access_key",
      "label": "S3 Access Key",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "S3 Secret credential for the S3 bucket.",
      "key": "s3_secret",
      "label": "S3 Secret",
      "required": true,
      "secret": false,
      "type": "password",
    },
    {
      "default": "us-east-1",
      "description": "Should always be us-east-1 unless directed by Acoustic otherwise. ",
      "key": "s3_region",
      "label": "S3 Region",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": "Version 2.3",
      "description": "

Last-Modified: 02.01.2024 10.30.43

",
      "key": "version",
      "label": "Version:",
      "required": false,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": {},
          "description": "Map simple Key-Value pairs (optional) ",
          "key": "key_value_pairs",
          "label": "Key-Value pairs",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {},
          "description": "If the data needed is in an array, use this section to Map Array data into useable attributes (optional) ",
          "key": "array_data",
          "label": "Arrays",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {},
          "description": "If the data is present in a Context section, use this to map the attributes of a Context Section (optional)",
          "key": "context",
          "label": "Context",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {},
          "description": "If the data is present in a Properties section, use this to map the attributes of a Properties Section (optional) ",
          "key": "properties",
          "label": "Properties",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {},
          "description": "If the data is present in a Traits section, use this to map the attributes of a Traits Section (optional) ",
          "key": "traits",
          "label": "Traits",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.properties.email ?? person.properties.email}",
          "description": "The field to be used to uniquely identify the Recipient in Acoustic. This field is required with Email preferred but not required.",
          "key": "uniqueRecipientId",
          "label": "UniqueRecipientId",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.type}",
          "description": "Do Not Modify - The type of event. e.g. track or identify, this field is required",
          "key": "type",
          "label": "Type",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Do Not Modify - The timestamp for when the event took place. This field is required",
          "key": "timestamp",
          "label": "Timestamp",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "receiveEvents",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Track Calls",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event in ('$identify', '$set')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": {},
          "description": "Map simple Key-Value pairs (optional) ",
          "key": "key_value_pairs",
          "label": "Key-Value pairs",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {},
          "description": "If the data needed is in an array, use this section to Map Array data into useable attributes (optional) ",
          "key": "array_data",
          "label": "Arrays",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {},
          "description": "If the data is present in a Context section, use this to map the attributes of a Context Section (optional)",
          "key": "context",
          "label": "Context",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {},
          "description": "If the data is present in a Properties section, use this to map the attributes of a Properties Section (optional) ",
          "key": "properties",
          "label": "Properties",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {},
          "description": "If the data is present in a Traits section, use this to map the attributes of a Traits Section (optional) ",
          "key": "traits",
          "label": "Traits",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.properties.email ?? person.properties.email}",
          "description": "The field to be used to uniquely identify the Recipient in Acoustic. This field is required with Email preferred but not required.",
          "key": "uniqueRecipientId",
          "label": "UniqueRecipientId",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.type}",
          "description": "Do Not Modify - The type of event. e.g. track or identify, this field is required",
          "key": "type",
          "label": "Type",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Do Not Modify - The timestamp for when the event took place. This field is required",
          "key": "timestamp",
          "label": "Timestamp",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "receiveEvents",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Identify Calls",
    },
  ],
  "name": "Acoustic",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 102 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Optimizely Advanced Audience Targeting",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/optimizely.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-optimizely-advanced-audience-targeting",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Api Key used for Optimizely API authorization when sending events",
      "key": "apiKey",
      "label": "Api Key",
      "required": true,
      "secret": false,
      "type": "password",
    },
    {
      "choices": [
        {
          "label": "US",
          "value": "US",
        },
        {
          "label": "Europe",
          "value": "EU",
        },
        {
          "label": "Australia",
          "value": "AU",
        },
      ],
      "default": undefined,
      "description": "The Optimizely Region to sync Audience data to. Default is US",
      "key": "region",
      "label": "Region",
      "required": true,
      "secret": false,
      "type": "choice",
    },
  ],
  "mapping_templates": [],
  "name": "Optimizely Advanced Audience Targeting",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 103 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Dynamic Yield by Mastercard Audiences",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/dynamic.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-dynamic-yield-audiences",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Dynamic Yield by Mastercard Section ID",
      "key": "sectionId",
      "label": "Section ID",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "Description to be added",
      "key": "accessKey",
      "label": "Access Key",
      "required": true,
      "secret": false,
      "type": "password",
    },
  ],
  "mapping_templates": [],
  "name": "Dynamic Yield by Mastercard Audiences",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 104 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to ABsmartly",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/absmartly.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-absmartly",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "ABsmartly Collector endpoint, for example: https://you-subdomain.absmartly.io/v1 - Contact ABsmartly Support if you don't know your Collector Endpoint.",
      "key": "collectorEndpoint",
      "label": "Collector Endpoint",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "ABsmartly SDK API Key. Create SDK Api Keys in the Settings > API Keys section of the ABsmartly Web Console",
      "key": "apiKey",
      "label": "API Key",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "Environment name. Environment name needs to match what's in the Web Console. Create Environments in the Settings > Environments section of the ABsmartly Web Console",
      "key": "environment",
      "label": "Environment",
      "required": true,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify') and event != 'Experiment Viewed'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": {},
          "description": "The units of the goal to track. Mapping of unit name to source property in the event payload. Create Units in the Settings > Units section of the ABsmartly Web Console",
          "key": "units",
          "label": "Units",
          "required": true,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.event}",
          "description": "The name of the goal to track",
          "key": "name",
          "label": "Goal Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties}",
          "description": "Custom properties of the goal",
          "key": "properties",
          "label": "Goal Properties",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$lib ?? segment}",
          "description": "Optional agent identifier that originated the event. Used to identify which SDK generated the event.",
          "key": "agent",
          "label": "Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Optional application name that originated this event. Must exist if not empty. Create Applications in the Settings > Applications section of the ABsmartly Web Console",
          "key": "application",
          "label": "Application",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "trackGoal",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Track Calls",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = '$pageview'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": {},
          "description": "The units of the goal to track. Mapping of unit name to source property in the event payload. Create Units in the Settings > Units section of the ABsmartly Web Console",
          "key": "units",
          "label": "Units",
          "required": true,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.event}",
          "description": "The name of the goal to track",
          "key": "name",
          "label": "Goal Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties}",
          "description": "Custom properties of the goal",
          "key": "properties",
          "label": "Goal Properties",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$lib ?? segment}",
          "description": "Optional agent identifier that originated the event. Used to identify which SDK generated the event.",
          "key": "agent",
          "label": "Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Optional application name that originated this event. Must exist if not empty. Create Applications in the Settings > Applications section of the ABsmartly Web Console",
          "key": "application",
          "label": "Application",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "trackGoal",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Page Calls",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = '$screen'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": {},
          "description": "The units of the goal to track. Mapping of unit name to source property in the event payload. Create Units in the Settings > Units section of the ABsmartly Web Console",
          "key": "units",
          "label": "Units",
          "required": true,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.event}",
          "description": "The name of the goal to track",
          "key": "name",
          "label": "Goal Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties}",
          "description": "Custom properties of the goal",
          "key": "properties",
          "label": "Goal Properties",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$lib ?? segment}",
          "description": "Optional agent identifier that originated the event. Used to identify which SDK generated the event.",
          "key": "agent",
          "label": "Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Optional application name that originated this event. Must exist if not empty. Create Applications in the Settings > Applications section of the ABsmartly Web Console",
          "key": "application",
          "label": "Application",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "trackGoal",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Screen Calls",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify') and event = 'Experiment Viewed'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.properties.exposure}",
          "description": "The ABsmartly exposure payload without any goals. Generated by the ABsmartly SDK and should not be modified.",
          "key": "exposure",
          "label": "ABsmartly Exposure Payload",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$lib ?? segment}",
          "description": "Optional agent identifier that originated the event. Used to identify which SDK generated the event.",
          "key": "agent",
          "label": "Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Optional application name that originated this event. Must exist if not empty. Create Applications in the Settings > Applications section of the ABsmartly Web Console",
          "key": "application",
          "label": "Application",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "trackExposure",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Exposures (Verbatim)",
    },
  ],
  "name": "ABsmartly",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 105 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Yahoo Audiences",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/yahoo.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-yahoo-audiences",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Yahoo MDM ID provided by Yahoo representative",
      "key": "mdm_id",
      "label": "MDM ID",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "Engage Space Id found in Unify > Settings > API Access",
      "key": "engage_space_id",
      "label": "Engage Space Id",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "Engage space name and description",
      "key": "customer_desc",
      "label": "Customer Description",
      "required": false,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [],
  "name": "Yahoo Audiences",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 106 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Klaviyo",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/klaviyo.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-klaviyo",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "You can find this by going to Klaviyo's UI and clicking Account > Settings > API Keys > Create API Key",
      "key": "api_key",
      "label": "API Key",
      "required": true,
      "secret": false,
      "type": "password",
    },
  ],
  "mapping_templates": [],
  "name": "Klaviyo",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 107 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Optimizely Data Platform",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/optimizely.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-optimizely-data-platform",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Api Key used for Optimizely API authorization when sending events",
      "key": "apiKey",
      "label": "Api Key",
      "required": true,
      "secret": false,
      "type": "password",
    },
    {
      "choices": [
        {
          "label": "US",
          "value": "US",
        },
        {
          "label": "Europe",
          "value": "EU",
        },
        {
          "label": "Australia",
          "value": "AU",
        },
      ],
      "default": "US",
      "description": "Optimizely Region to sync data to. Default is US",
      "key": "region",
      "label": "Region",
      "required": true,
      "secret": false,
      "type": "choice",
    },
  ],
  "mapping_templates": [
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify') and event = 'Product Viewed'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": {
            "anonymousId": "{event.distinct_id}",
            "email": "{event.properties.email ?? person.properties.email}",
            "optimizely_vuid": "{event.properties.optimizely_vuid ?? person.properties.optimizely_vuid}",
            "userId": "{person.id}",
          },
          "description": "User identifier details to send to Optimizely. ",
          "key": "user_identifiers",
          "label": "User identifiers",
          "required": true,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.event}",
          "description": "The Optimizely Event Type. Defaults to "custom" if not provided",
          "key": "event_type",
          "label": "Optimizely Event Type",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "The name of the Optimizely Event Action.",
          "key": "event_action",
          "label": "Optimizely Event Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "product_id": undefined,
            "qty": undefined,
          },
          "description": "Product details to associate with the event. Product ID field is required for each product",
          "key": "products",
          "label": "Product details",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.properties.order_id}",
          "description": "Identifier for the order",
          "key": "order_id",
          "label": "Order ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.total}",
          "description": "Total value of the order",
          "key": "total",
          "label": "Order Total",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Event timestamp",
          "key": "timestamp",
          "label": "Timestamp",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": true,
          "description": "Enable batching of event data to Optimizely.",
          "key": "enable_batching",
          "label": "Enable Batching",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": "100",
          "description": "Number of events to batch before sending to Optimizely.",
          "key": "batch_size",
          "label": "Batch Size",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "customEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Product Viewed",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify') and event = 'Product Added'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": {
            "anonymousId": "{event.distinct_id}",
            "email": "{event.properties.email ?? person.properties.email}",
            "optimizely_vuid": "{event.properties.optimizely_vuid ?? person.properties.optimizely_vuid}",
            "userId": "{person.id}",
          },
          "description": "User identifier details to send to Optimizely. ",
          "key": "user_identifiers",
          "label": "User identifiers",
          "required": true,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.event}",
          "description": "The Optimizely Event Type. Defaults to "custom" if not provided",
          "key": "event_type",
          "label": "Optimizely Event Type",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "The name of the Optimizely Event Action.",
          "key": "event_action",
          "label": "Optimizely Event Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "product_id": undefined,
            "qty": undefined,
          },
          "description": "Product details to associate with the event. Product ID field is required for each product",
          "key": "products",
          "label": "Product details",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.properties.order_id}",
          "description": "Identifier for the order",
          "key": "order_id",
          "label": "Order ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.total}",
          "description": "Total value of the order",
          "key": "total",
          "label": "Order Total",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Event timestamp",
          "key": "timestamp",
          "label": "Timestamp",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": true,
          "description": "Enable batching of event data to Optimizely.",
          "key": "enable_batching",
          "label": "Enable Batching",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": "100",
          "description": "Number of events to batch before sending to Optimizely.",
          "key": "batch_size",
          "label": "Batch Size",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "customEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Product Added",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify') and event = 'Product Removed'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": {
            "anonymousId": "{event.distinct_id}",
            "email": "{event.properties.email ?? person.properties.email}",
            "optimizely_vuid": "{event.properties.optimizely_vuid ?? person.properties.optimizely_vuid}",
            "userId": "{person.id}",
          },
          "description": "User identifier details to send to Optimizely. ",
          "key": "user_identifiers",
          "label": "User identifiers",
          "required": true,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.event}",
          "description": "The Optimizely Event Type. Defaults to "custom" if not provided",
          "key": "event_type",
          "label": "Optimizely Event Type",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "The name of the Optimizely Event Action.",
          "key": "event_action",
          "label": "Optimizely Event Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "product_id": undefined,
            "qty": undefined,
          },
          "description": "Product details to associate with the event. Product ID field is required for each product",
          "key": "products",
          "label": "Product details",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.properties.order_id}",
          "description": "Identifier for the order",
          "key": "order_id",
          "label": "Order ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.total}",
          "description": "Total value of the order",
          "key": "total",
          "label": "Order Total",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Event timestamp",
          "key": "timestamp",
          "label": "Timestamp",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": true,
          "description": "Enable batching of event data to Optimizely.",
          "key": "enable_batching",
          "label": "Enable Batching",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": "100",
          "description": "Number of events to batch before sending to Optimizely.",
          "key": "batch_size",
          "label": "Batch Size",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "customEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Product Removed",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify') and event = 'Order Completed'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": {
            "anonymousId": "{event.distinct_id}",
            "email": "{event.properties.email ?? person.properties.email}",
            "optimizely_vuid": "{event.properties.optimizely_vuid ?? person.properties.optimizely_vuid}",
            "userId": "{person.id}",
          },
          "description": "User identifier details to send to Optimizely. ",
          "key": "user_identifiers",
          "label": "User identifiers",
          "required": true,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.event}",
          "description": "The Optimizely Event Type. Defaults to "custom" if not provided",
          "key": "event_type",
          "label": "Optimizely Event Type",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "The name of the Optimizely Event Action.",
          "key": "event_action",
          "label": "Optimizely Event Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "product_id": undefined,
            "qty": undefined,
          },
          "description": "Product details to associate with the event. Product ID field is required for each product",
          "key": "products",
          "label": "Product details",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.properties.order_id}",
          "description": "Identifier for the order",
          "key": "order_id",
          "label": "Order ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.total}",
          "description": "Total value of the order",
          "key": "total",
          "label": "Order Total",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Event timestamp",
          "key": "timestamp",
          "label": "Timestamp",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": true,
          "description": "Enable batching of event data to Optimizely.",
          "key": "enable_batching",
          "label": "Enable Batching",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": "100",
          "description": "Number of events to batch before sending to Optimizely.",
          "key": "batch_size",
          "label": "Batch Size",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "customEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Order Completed",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify') and event = 'Email Sent'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": {
            "anonymousId": "{event.distinct_id}",
            "email": "{event.properties.email ?? event.context.traits.email}",
            "optimizely_vuid": "{event.properties.optimizely_vuid ?? event.context.traits.optimizely_vuid}",
            "userId": "{person.id}",
          },
          "description": "User identifier details to send to Optimizely. ",
          "key": "user_identifiers",
          "label": "User identifiers",
          "required": true,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": undefined,
          "description": "The name of the Optimizely Event Action.",
          "key": "event_action",
          "label": "Optimizely Event Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.campaign_name}",
          "description": "The campaign name",
          "key": "campaign",
          "label": "Campaign Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.campaign_id}",
          "description": "The campaign unique identifier",
          "key": "campaign_id",
          "label": "Campaign ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.link_url}",
          "description": "URL of the link which was clicked",
          "key": "link_url",
          "label": "Link URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Event timestamp",
          "key": "timestamp",
          "label": "Timestamp",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": true,
          "description": "Enable batching of event data to Optimizely.",
          "key": "enable_batching",
          "label": "Enable Batching",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": "100",
          "description": "Number of events to batch before sending to Optimizely.",
          "key": "batch_size",
          "label": "Batch Size",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "emailEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Email Sent",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify') and event = 'Email Link Clicked'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": {
            "anonymousId": "{event.distinct_id}",
            "email": "{event.properties.email ?? event.context.traits.email}",
            "optimizely_vuid": "{event.properties.optimizely_vuid ?? event.context.traits.optimizely_vuid}",
            "userId": "{person.id}",
          },
          "description": "User identifier details to send to Optimizely. ",
          "key": "user_identifiers",
          "label": "User identifiers",
          "required": true,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": undefined,
          "description": "The name of the Optimizely Event Action.",
          "key": "event_action",
          "label": "Optimizely Event Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.campaign_name}",
          "description": "The campaign name",
          "key": "campaign",
          "label": "Campaign Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.campaign_id}",
          "description": "The campaign unique identifier",
          "key": "campaign_id",
          "label": "Campaign ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.link_url}",
          "description": "URL of the link which was clicked",
          "key": "link_url",
          "label": "Link URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Event timestamp",
          "key": "timestamp",
          "label": "Timestamp",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": true,
          "description": "Enable batching of event data to Optimizely.",
          "key": "enable_batching",
          "label": "Enable Batching",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": "100",
          "description": "Number of events to batch before sending to Optimizely.",
          "key": "batch_size",
          "label": "Batch Size",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "emailEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Email Link Clicked",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify') and event = 'Email Opened'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": {
            "anonymousId": "{event.distinct_id}",
            "email": "{event.properties.email ?? event.context.traits.email}",
            "optimizely_vuid": "{event.properties.optimizely_vuid ?? event.context.traits.optimizely_vuid}",
            "userId": "{person.id}",
          },
          "description": "User identifier details to send to Optimizely. ",
          "key": "user_identifiers",
          "label": "User identifiers",
          "required": true,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": undefined,
          "description": "The name of the Optimizely Event Action.",
          "key": "event_action",
          "label": "Optimizely Event Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.campaign_name}",
          "description": "The campaign name",
          "key": "campaign",
          "label": "Campaign Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.campaign_id}",
          "description": "The campaign unique identifier",
          "key": "campaign_id",
          "label": "Campaign ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.link_url}",
          "description": "URL of the link which was clicked",
          "key": "link_url",
          "label": "Link URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Event timestamp",
          "key": "timestamp",
          "label": "Timestamp",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": true,
          "description": "Enable batching of event data to Optimizely.",
          "key": "enable_batching",
          "label": "Enable Batching",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": "100",
          "description": "Number of events to batch before sending to Optimizely.",
          "key": "batch_size",
          "label": "Batch Size",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "emailEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Email Opened",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify') and event = 'Unsubscribed'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": {
            "anonymousId": "{event.distinct_id}",
            "email": "{event.properties.email ?? event.context.traits.email}",
            "optimizely_vuid": "{event.properties.optimizely_vuid ?? event.context.traits.optimizely_vuid}",
            "userId": "{person.id}",
          },
          "description": "User identifier details to send to Optimizely. ",
          "key": "user_identifiers",
          "label": "User identifiers",
          "required": true,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": undefined,
          "description": "The name of the Optimizely Event Action.",
          "key": "event_action",
          "label": "Optimizely Event Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.campaign_name}",
          "description": "The campaign name",
          "key": "campaign",
          "label": "Campaign Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.campaign_id}",
          "description": "The campaign unique identifier",
          "key": "campaign_id",
          "label": "Campaign ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.link_url}",
          "description": "URL of the link which was clicked",
          "key": "link_url",
          "label": "Link URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Event timestamp",
          "key": "timestamp",
          "label": "Timestamp",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": true,
          "description": "Enable batching of event data to Optimizely.",
          "key": "enable_batching",
          "label": "Enable Batching",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": "100",
          "description": "Number of events to batch before sending to Optimizely.",
          "key": "batch_size",
          "label": "Batch Size",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "emailEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Unsubscribed",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify') and event = 'Email Marked as Spam'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": {
            "anonymousId": "{event.distinct_id}",
            "email": "{event.properties.email ?? event.context.traits.email}",
            "optimizely_vuid": "{event.properties.optimizely_vuid ?? event.context.traits.optimizely_vuid}",
            "userId": "{person.id}",
          },
          "description": "User identifier details to send to Optimizely. ",
          "key": "user_identifiers",
          "label": "User identifiers",
          "required": true,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": undefined,
          "description": "The name of the Optimizely Event Action.",
          "key": "event_action",
          "label": "Optimizely Event Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.campaign_name}",
          "description": "The campaign name",
          "key": "campaign",
          "label": "Campaign Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.campaign_id}",
          "description": "The campaign unique identifier",
          "key": "campaign_id",
          "label": "Campaign ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.link_url}",
          "description": "URL of the link which was clicked",
          "key": "link_url",
          "label": "Link URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Event timestamp",
          "key": "timestamp",
          "label": "Timestamp",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": true,
          "description": "Enable batching of event data to Optimizely.",
          "key": "enable_batching",
          "label": "Enable Batching",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": "100",
          "description": "Number of events to batch before sending to Optimizely.",
          "key": "batch_size",
          "label": "Batch Size",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "emailEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Email Marked as Spam",
    },
  ],
  "name": "Optimizely Data Platform",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 108 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Hyperengage",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/hyperengage.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-hyperengage",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Your Hyperengage API key located in the Integration Settings page.",
      "key": "apiKey",
      "label": "API Key",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "Your Hyperengage workspace identifier located in the Integration Settings page.",
      "key": "workspaceIdentifier",
      "label": "Workspace Identifier",
      "required": true,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.event}",
          "description": "The name of the event",
          "key": "event_name",
          "label": "Event name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id}",
          "description": "The user id, to uniquely identify the user associated with the event",
          "key": "user_id",
          "label": "User id",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.groupId}",
          "description": "The account id, to uniquely identify the account associated with the user",
          "key": "account_id",
          "label": "Account id",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties}",
          "description": "The properties of the track call",
          "key": "properties",
          "label": "Event properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.distinct_id}",
          "description": "User Anonymous id",
          "key": "anonymous_id",
          "label": "Anonymous ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "The ID of the event.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.context.page.path}",
          "description": "The path of the document.",
          "key": "doc_path",
          "label": "Document Path",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.context.page.search}",
          "description": "The search query of the document.",
          "key": "doc_search",
          "label": "Document Search",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.context.page.title}",
          "description": "The title of the page where the event occurred.",
          "key": "doc_title",
          "label": "Page Title",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The URL of the page where the event occurred.",
          "key": "url",
          "label": "URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$referrer}",
          "description": "The referrer of the page where the event occurred.",
          "key": "referer",
          "label": "Referrer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "The user agent of the browser.",
          "key": "user_agent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$locale}",
          "description": "The language of the browser.",
          "key": "user_language",
          "label": "User Language",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The time of the event in UTC.",
          "key": "utc_time",
          "label": "UTC Time",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "content": "{event.properties.utm_content}",
            "medium": "{event.properties.utm_medium}",
            "name": "{event.properties.utm_campaign}",
            "source": "{event.properties.utm_source}",
            "term": "{event.properties.utm_term}",
          },
          "description": "Information about the UTM parameters.",
          "key": "utm",
          "label": "UTM",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "density": "",
            "height": "{event.context.screen.height}",
            "width": "{event.context.screen.width}",
          },
          "description": "Information about the screen.",
          "key": "screen",
          "label": "Screen",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.properties.$timezone ?? event.properties.timezone}",
          "description": "The timezone of the browser.",
          "key": "timezone",
          "label": "Timezone",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "The IP address of the user.",
          "key": "source_ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "track",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Track Event",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event in ('$identify', '$set')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{person.id}",
          "description": "The External ID of the user",
          "key": "user_id",
          "label": "User ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.name ?? event.properties.name}",
          "description": "The user's name",
          "key": "name",
          "label": "Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.first_name ?? event.properties.first_name}",
          "description": "The user's first name. This field is mandatory if you're not providing a name field",
          "key": "first_name",
          "label": "First name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.last_name ?? event.properties.last_name}",
          "description": "The user's last name. This field is mandatory if you're not providing a name field",
          "key": "last_name",
          "label": "Last name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.email ?? event.properties.email}",
          "description": "The user's email address",
          "key": "email",
          "label": "Email address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.context.group_id ?? event.groupId}",
          "description": "The account id, to uniquely identify the account associated with the user",
          "key": "account_id",
          "label": "Account id",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.created_at ?? person.properties.createdAt}",
          "description": "The timestamp when the user was created, represented in the ISO-8601 date format. For instance, "2023-09-26T15:30:00Z".",
          "key": "created_at",
          "label": "Created at",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties}",
          "description": "Properties to associate with the user",
          "key": "traits",
          "label": "Traits",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.distinct_id}",
          "description": "User Anonymous id",
          "key": "anonymous_id",
          "label": "Anonymous ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "The ID of the event.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.context.page.path}",
          "description": "The path of the document.",
          "key": "doc_path",
          "label": "Document Path",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.context.page.search}",
          "description": "The search query of the document.",
          "key": "doc_search",
          "label": "Document Search",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.context.page.title}",
          "description": "The title of the page where the event occurred.",
          "key": "doc_title",
          "label": "Page Title",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The URL of the page where the event occurred.",
          "key": "url",
          "label": "URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$referrer}",
          "description": "The referrer of the page where the event occurred.",
          "key": "referer",
          "label": "Referrer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "The user agent of the browser.",
          "key": "user_agent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$locale}",
          "description": "The language of the browser.",
          "key": "user_language",
          "label": "User Language",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The time of the event in UTC.",
          "key": "utc_time",
          "label": "UTC Time",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "content": "{event.properties.utm_content}",
            "medium": "{event.properties.utm_medium}",
            "name": "{event.properties.utm_campaign}",
            "source": "{event.properties.utm_source}",
            "term": "{event.properties.utm_term}",
          },
          "description": "Information about the UTM parameters.",
          "key": "utm",
          "label": "UTM",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "density": "",
            "height": "{event.context.screen.height}",
            "width": "{event.context.screen.width}",
          },
          "description": "Information about the screen.",
          "key": "screen",
          "label": "Screen",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.properties.$timezone ?? event.properties.timezone}",
          "description": "The timezone of the browser.",
          "key": "timezone",
          "label": "Timezone",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "The IP address of the user.",
          "key": "source_ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "identify",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Identify User",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = '$groupidentify'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.context.group_id ?? event.groupId}",
          "description": "The External ID of the account to send properties for",
          "key": "account_id",
          "label": "Account id",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id}",
          "description": "The ID associated with the user",
          "key": "user_id",
          "label": "User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.name ?? event.properties.name}",
          "description": "The Account name",
          "key": "name",
          "label": "Account name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.created_at ?? person.properties.createdAt}",
          "description": "The timestamp when the account was created, represented in the ISO-8601 date format. For instance, "2023-09-26T15:30:00Z".",
          "key": "created_at",
          "label": "Account created at",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties}",
          "description": "The properties of the account",
          "key": "traits",
          "label": "Account properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.plan ?? person.properties.plan_name}",
          "description": "Subscription plan the account is associated with",
          "key": "plan",
          "label": "Account subscription plan",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.industry}",
          "description": "The account industry",
          "key": "industry",
          "label": "Account industry",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.website}",
          "description": "The account website",
          "key": "website",
          "label": "Account website",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.distinct_id}",
          "description": "User Anonymous id",
          "key": "anonymous_id",
          "label": "Anonymous ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "The ID of the event.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.context.page.path}",
          "description": "The path of the document.",
          "key": "doc_path",
          "label": "Document Path",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.context.page.search}",
          "description": "The search query of the document.",
          "key": "doc_search",
          "label": "Document Search",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.context.page.title}",
          "description": "The title of the page where the event occurred.",
          "key": "doc_title",
          "label": "Page Title",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The URL of the page where the event occurred.",
          "key": "url",
          "label": "URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$referrer}",
          "description": "The referrer of the page where the event occurred.",
          "key": "referer",
          "label": "Referrer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "The user agent of the browser.",
          "key": "user_agent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$locale}",
          "description": "The language of the browser.",
          "key": "user_language",
          "label": "User Language",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The time of the event in UTC.",
          "key": "utc_time",
          "label": "UTC Time",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "content": "{event.properties.utm_content}",
            "medium": "{event.properties.utm_medium}",
            "name": "{event.properties.utm_campaign}",
            "source": "{event.properties.utm_source}",
            "term": "{event.properties.utm_term}",
          },
          "description": "Information about the UTM parameters.",
          "key": "utm",
          "label": "UTM",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "density": "",
            "height": "{event.context.screen.height}",
            "width": "{event.context.screen.width}",
          },
          "description": "Information about the screen.",
          "key": "screen",
          "label": "Screen",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.properties.$timezone ?? event.properties.timezone}",
          "description": "The timezone of the browser.",
          "key": "timezone",
          "label": "Timezone",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "The IP address of the user.",
          "key": "source_ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "group",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Group",
    },
  ],
  "name": "Hyperengage",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 109 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Trackey",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/trackey.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-trackey",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Your Trackey API Key",
      "key": "apiKey",
      "label": "API Key",
      "required": true,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [],
  "name": "Trackey",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 110 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to LinkedIn Conversions API",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/linkedin.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-linkedin-conversions",
  "inputs_schema": [],
  "mapping_templates": [],
  "name": "LinkedIn Conversions API",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 111 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Kameleoon",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/kameleoon.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-kameleoon",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Kameleoon API key. You can generate one using the link in the help doc (https://help.kameleoon.com/setting-up-segment/).",
      "key": "apiKey",
      "label": "API Key",
      "required": true,
      "secret": false,
      "type": "password",
    },
    {
      "default": undefined,
      "description": "Kameleoon project sitecode. You can find this project dashboard (https://help.kameleoon.com/question/how-do-i-find-my-site-id/).",
      "key": "sitecode",
      "label": "Sitecode",
      "required": true,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.distinct_id}",
          "description": "Anonymous id",
          "key": "anonymousId",
          "label": "Anonymous ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id}",
          "description": "The ID associated with the user",
          "key": "userId",
          "label": "User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.event ?? event.name}",
          "description": "The event name",
          "key": "event",
          "label": "Event Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.type}",
          "description": "The type of the event",
          "key": "type",
          "label": "Type",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": {},
          "description": "Additional event Properties or user Traits to send with the event",
          "key": "properties",
          "label": "Event properties or user traits",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.properties.kameleoonVisitorCode ?? person.properties.kameleoonVisitorCode}",
          "description": "Kameleoon Visitor Code - a unique identifier for the user",
          "key": "kameleoonVisitorCode",
          "label": "Kameleoon Visitor Code",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The timestamp of the event",
          "key": "timestamp",
          "label": "Timestamp",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.context}",
          "description": "Context properties to send with the event",
          "key": "context",
          "label": "Context properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "The Segment messageId",
          "key": "messageId",
          "label": "MessageId",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "logEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Track Calls",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = '$pageview'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.distinct_id}",
          "description": "Anonymous id",
          "key": "anonymousId",
          "label": "Anonymous ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id}",
          "description": "The ID associated with the user",
          "key": "userId",
          "label": "User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.type}",
          "description": "The type of the event",
          "key": "type",
          "label": "Type",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties}",
          "description": "Page properties",
          "key": "properties",
          "label": "Properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.kameleoonVisitorCode}",
          "description": "Kameleoon Visitor Code - a unique identifier for the user",
          "key": "kameleoonVisitorCode",
          "label": "Kameleoon Visitor Code",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.name}",
          "description": "The name of the page",
          "key": "name",
          "label": "Page Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.context}",
          "description": "Context properties to send with the event",
          "key": "context",
          "label": "Context properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The timestamp of the event",
          "key": "timestamp",
          "label": "Timestamp",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "The Segment messageId",
          "key": "messageId",
          "label": "MessageId",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "page",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Page Calls",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = '$groupidentify'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.distinct_id}",
          "description": "Anonymous id",
          "key": "anonymousId",
          "label": "Anonymous ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id}",
          "description": "The ID associated with the user",
          "key": "userId",
          "label": "User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.type}",
          "description": "The type of the event",
          "key": "type",
          "label": "Type",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.groupId}",
          "description": "The group id",
          "key": "groupId",
          "label": "Group ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties}",
          "description": "Traits to send with the event",
          "key": "properties",
          "label": "User Traits",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.kameleoonVisitorCode}",
          "description": "Kameleoon Visitor Code - a unique identifier for the user",
          "key": "kameleoonVisitorCode",
          "label": "Kameleoon Visitor Code",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The timestamp of the event",
          "key": "timestamp",
          "label": "Timestamp",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "The Segment messageId",
          "key": "messageId",
          "label": "MessageId",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "group",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Group Calls",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event in ('$identify', '$set')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.distinct_id}",
          "description": "Anonymous id",
          "key": "anonymousId",
          "label": "Anonymous ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id}",
          "description": "The ID associated with the user",
          "key": "userId",
          "label": "User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.type}",
          "description": "The type of the event",
          "key": "type",
          "label": "Type",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties}",
          "description": "Traits to send with the event",
          "key": "properties",
          "label": "User Traits",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.kameleoonVisitorCode}",
          "description": "Kameleoon Visitor Code - a unique identifier for the user",
          "key": "kameleoonVisitorCode",
          "label": "Kameleoon Visitor Code",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The timestamp of the event",
          "key": "timestamp",
          "label": "Timestamp",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "The Segment messageId",
          "key": "messageId",
          "label": "MessageId",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "identify",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Identify Calls",
    },
  ],
  "name": "Kameleoon",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 112 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Marketo Static Lists",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/marketo.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-marketo-static-lists",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Your Marketo REST API Client ID.",
      "key": "client_id",
      "label": "Client ID",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "Your Marketo REST API Client Secret.",
      "key": "client_secret",
      "label": "Client Secret",
      "required": true,
      "secret": false,
      "type": "password",
    },
    {
      "default": undefined,
      "description": "Your Marketo REST API Endpoint in this format: https://<your_account_id>.mktorest.com.",
      "key": "api_endpoint",
      "label": "API Endpoint",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "Name of the folder in which to create static lists.",
      "key": "folder_name",
      "label": "Folder Name",
      "required": true,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [],
  "name": "Marketo Static Lists",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 113 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Display and Video 360",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/display.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-display-video-360",
  "inputs_schema": [],
  "mapping_templates": [],
  "name": "Display and Video 360",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 114 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Apollo.io",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/apolloio.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-apolloio",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "API Token for authorization.",
      "key": "apiToken",
      "label": "API Token",
      "required": true,
      "secret": false,
      "type": "password",
    },
  ],
  "mapping_templates": [
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.distinct_id}",
          "description": "An anonymous identifier",
          "key": "anonymousId",
          "label": "Anonymous ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.event}",
          "description": "Event name",
          "key": "event",
          "label": "Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties}",
          "description": "Properties to associate with the event",
          "key": "properties",
          "label": "Properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The timestamp of the event",
          "key": "timestamp",
          "label": "Timestamp",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "The users's IP address.",
          "key": "ipAddress",
          "label": "IP Address",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$timezone}",
          "description": "Timezone",
          "key": "timezone",
          "label": "Timezone",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id}",
          "description": "The ID associated with the user",
          "key": "userId",
          "label": "User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "content": "{event.properties.utm_content}",
            "medium": "{event.properties.utm_medium}",
            "name": "{event.properties.utm_campaign}",
            "source": "{event.properties.utm_source}",
            "term": "{event.properties.utm_term}",
          },
          "description": "UTM campaign information.",
          "key": "campaign",
          "label": "Campaign",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "path": "{event.context.page.path}",
            "referrer": "{event.properties.$referrer}",
            "search": "{event.context.page.search}",
            "title": "{event.context.page.title}",
            "url": "{event.properties.$current_url}",
          },
          "description": "Information about the page where the event occurred.",
          "key": "page",
          "label": "Page",
          "required": true,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "track",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Track",
    },
  ],
  "name": "Apollo.io",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 115 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Movable Ink",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/movable.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-movable-ink",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Your Movable Ink username",
      "key": "username",
      "label": "Username",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "Your Movable Ink Access Secret.",
      "key": "password",
      "label": "Access Secret",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "The Movable Ink URL to send data to.",
      "key": "movable_ink_url",
      "label": "Movable Ink URL",
      "required": true,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event in ('$identify', '$set') or event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify') or event = '$pageview' or event = '$screen' or event = '$groupidentify'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": {},
          "description": "HTTP headers to send with each request. Only ASCII characters are supported.",
          "key": "headers",
          "label": "Headers",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "",
          "description": "Payload to deliver to webhook URL (JSON-encoded).",
          "key": "data",
          "label": "Data",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "sendEntireEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Send Entire Event",
    },
  ],
  "name": "Movable Ink",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 116 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to UserMotion",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/usermotion.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-usermotion",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Your UserMotion API Key",
      "key": "apiKey",
      "label": "API Key",
      "required": true,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event in ('$identify', '$set')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{person.id}",
          "description": "A identifier for a known user.",
          "key": "userId",
          "label": "User ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.distinct_id}",
          "description": "An identifier for an anonymous user",
          "key": "anonymousId",
          "label": "Anonymous ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.email ?? event.email}",
          "description": "The email address of the identified user",
          "key": "email",
          "label": "Email",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties}",
          "description": "Traits to associate with the user",
          "key": "traits",
          "label": "Traits",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "identify",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Identify User",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = '$groupidentify'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{person.id}",
          "description": "A identifier for a known user.",
          "key": "userId",
          "label": "User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.distinct_id}",
          "description": "An identifier for an anonymous user",
          "key": "anonymousId",
          "label": "Anonymous ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.groupId}",
          "description": "A identifier for a known company.",
          "key": "groupId",
          "label": "Group ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties}",
          "description": "Traits to associate with the company",
          "key": "traits",
          "label": "Traits",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "group",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Identify Group",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify') or event = '$pageview'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{person.id}",
          "description": "A identifier for a known user.",
          "key": "userId",
          "label": "User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.distinct_id}",
          "description": "An identifier for an anonymous user",
          "key": "anonymousId",
          "label": "Anonymous ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.event ?? [object Object]}",
          "description": "The name of the track() event or page() event",
          "key": "eventName",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.context}",
          "description": "Context properties to send with the event",
          "key": "context",
          "label": "Context properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties}",
          "description": "Properties to send with the event.",
          "key": "properties",
          "label": "Event Properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "track",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Track Analytics Event",
    },
  ],
  "name": "UserMotion",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 117 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Canvas",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/canvas.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-canvas",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "API token generated by Canvas",
      "key": "apiToken",
      "label": "API Token",
      "required": true,
      "secret": false,
      "type": "password",
    },
  ],
  "mapping_templates": [
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.event}",
          "description": "The name of the event.",
          "key": "event",
          "label": "Event name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties}",
          "description": "A JSON object containing the properties of the event.",
          "key": "properties",
          "label": "Event Properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": true,
          "description": "Sends events in bulk to Canvas. Highly recommended.",
          "key": "enable_batching",
          "label": "Send data in batch to Canvas",
          "required": true,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": "{event.context}",
          "description": "Event context as it appears in Segment",
          "key": "context",
          "label": "Event context",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.distinct_id}",
          "description": "The anonymous ID associated with the user",
          "key": "anonymous_id",
          "label": "Anonymous ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "The Segment messageId",
          "key": "message_id",
          "label": "Message ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "A timestamp of when the event took place. Default is current date and time.",
          "key": "timestamp",
          "label": "Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.receivedAt}",
          "description": "When the event was received.",
          "key": "received_at",
          "label": "Received at",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.sentAt}",
          "description": "Device-time when the event was sent.",
          "key": "sent_at",
          "label": "Sent at",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id}",
          "description": "The user's id",
          "key": "user_id",
          "label": "User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "sendTrackEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Send Track Event",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event in ('$identify', '$set')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{person.properties}",
          "description": "The properties of the user.",
          "key": "traits",
          "label": "User Properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": true,
          "description": "Sends events in bulk to Canvas. Highly recommended.",
          "key": "enable_batching",
          "label": "Send data in batch to Canvas",
          "required": true,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": "{event.context}",
          "description": "Event context as it appears in Segment",
          "key": "context",
          "label": "Event context",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.distinct_id}",
          "description": "The anonymous ID associated with the user",
          "key": "anonymous_id",
          "label": "Anonymous ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "The Segment messageId",
          "key": "message_id",
          "label": "Message ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "A timestamp of when the event took place. Default is current date and time.",
          "key": "timestamp",
          "label": "Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.receivedAt}",
          "description": "When the event was received.",
          "key": "received_at",
          "label": "Received at",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.sentAt}",
          "description": "Device-time when the event was sent.",
          "key": "sent_at",
          "label": "Sent at",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id}",
          "description": "The user's id",
          "key": "user_id",
          "label": "User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "sendIdentifyEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Send Identify User Event",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = '$groupidentify'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.groupId}",
          "description": "The unique identifier of the group.",
          "key": "group_id",
          "label": "Group ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties}",
          "description": "The properties of the group.",
          "key": "traits",
          "label": "Group Properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": true,
          "description": "Sends events in bulk to Canvas. Highly recommended.",
          "key": "enable_batching",
          "label": "Send data in batch to Canvas",
          "required": true,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": "{event.context}",
          "description": "Event context as it appears in Segment",
          "key": "context",
          "label": "Event context",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.distinct_id}",
          "description": "The anonymous ID associated with the user",
          "key": "anonymous_id",
          "label": "Anonymous ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "The Segment messageId",
          "key": "message_id",
          "label": "Message ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "A timestamp of when the event took place. Default is current date and time.",
          "key": "timestamp",
          "label": "Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.receivedAt}",
          "description": "When the event was received.",
          "key": "received_at",
          "label": "Received at",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.sentAt}",
          "description": "Device-time when the event was sent.",
          "key": "sent_at",
          "label": "Sent at",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id}",
          "description": "The user's id",
          "key": "user_id",
          "label": "User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "sendGroupEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Send Identify Group Event",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = '$pageview'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.name}",
          "description": "Page name",
          "key": "name",
          "label": "Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties}",
          "description": "Properties to associate with the page view",
          "key": "properties",
          "label": "Properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": true,
          "description": "Sends events in bulk to Canvas. Highly recommended.",
          "key": "enable_batching",
          "label": "Send data in batch to Canvas",
          "required": true,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": "{event.context}",
          "description": "Event context as it appears in Segment",
          "key": "context",
          "label": "Event context",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.distinct_id}",
          "description": "The anonymous ID associated with the user",
          "key": "anonymous_id",
          "label": "Anonymous ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "The Segment messageId",
          "key": "message_id",
          "label": "Message ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "A timestamp of when the event took place. Default is current date and time.",
          "key": "timestamp",
          "label": "Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.receivedAt}",
          "description": "When the event was received.",
          "key": "received_at",
          "label": "Received at",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.sentAt}",
          "description": "Device-time when the event was sent.",
          "key": "sent_at",
          "label": "Sent at",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id}",
          "description": "The user's id",
          "key": "user_id",
          "label": "User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "sendPageEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Send Page Event",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = '$screen'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.name}",
          "description": "Screen name",
          "key": "name",
          "label": "Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties}",
          "description": "Properties to associate with the screen",
          "key": "properties",
          "label": "Properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": true,
          "description": "Sends events in bulk to Canvas. Highly recommended.",
          "key": "enable_batching",
          "label": "Send data in batch to Canvas",
          "required": true,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": "{event.context}",
          "description": "Event context as it appears in Segment",
          "key": "context",
          "label": "Event context",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.distinct_id}",
          "description": "The anonymous ID associated with the user",
          "key": "anonymous_id",
          "label": "Anonymous ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "The Segment messageId",
          "key": "message_id",
          "label": "Message ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "A timestamp of when the event took place. Default is current date and time.",
          "key": "timestamp",
          "label": "Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.receivedAt}",
          "description": "When the event was received.",
          "key": "received_at",
          "label": "Received at",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.sentAt}",
          "description": "Device-time when the event was sent.",
          "key": "sent_at",
          "label": "Sent at",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id}",
          "description": "The user's id",
          "key": "user_id",
          "label": "User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "sendScreenEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Send Screen Event",
    },
  ],
  "name": "Canvas",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 118 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Gleap (Action)",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/cloud.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "gleap-cloud-actions",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Found in \`Project settings\` -> \`Secret API token\`.",
      "key": "apiToken",
      "label": "Secret API token",
      "required": true,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [],
  "name": "Gleap (Action)",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 119 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Kevel UserDB",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/kevel.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-kevel",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Your Kevel Network ID",
      "key": "networkId",
      "label": "Kevel Network ID",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "Your Kevel API Key",
      "key": "apiKey",
      "label": "Kevel API Key",
      "required": true,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [],
  "name": "Kevel UserDB",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 120 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Aggregations.io",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/aggregations.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-aggregations-io",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Your Aggregations.io API Key. This key requires Write permissions.",
      "key": "api_key",
      "label": "API Key",
      "required": true,
      "secret": false,
      "type": "password",
    },
    {
      "default": undefined,
      "description": "The ID of the ingest you want to send data to. This ingest should be set up as "Array of JSON Objects". Find your ID on the Aggregations.io Organization page.",
      "key": "ingest_id",
      "label": "Ingest Id",
      "required": true,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [],
  "name": "Aggregations.io",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 121 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Equals",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/equals.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-equals",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Equals URL to send data to.",
      "key": "url",
      "label": "Equals URL",
      "required": true,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "type = track or type = page or type = screen or type = identify or type = group",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "",
          "description": "Payload to deliver to Equals. Detaults to sending the entire Segment payload.",
          "key": "data",
          "label": "Data",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "send",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Send",
    },
  ],
  "name": "Equals",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 122 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Amazon Ads DSP and AMC",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/amazon.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-amazon-amc",
  "inputs_schema": [
    {
      "choices": [
        {
          "label": "North America (NA)",
          "value": "https://advertising-api.amazon.com",
        },
        {
          "label": "Europe (EU)",
          "value": "https://advertising-api-eu.amazon.com",
        },
        {
          "label": "Far East (FE)",
          "value": "https://advertising-api-fe.amazon.com",
        },
      ],
      "default": "https://advertising-api.amazon.com",
      "description": "Region for API Endpoint, either NA, EU, FE.",
      "key": "region",
      "label": "Region",
      "required": true,
      "secret": false,
      "type": "choice",
    },
  ],
  "mapping_templates": [],
  "name": "Amazon Ads DSP and AMC",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 123 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Schematic",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/schematic.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-schematic",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Found on your settings page.",
      "key": "apiKey",
      "label": "API Key",
      "required": true,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.event}",
          "description": "Name of event (this will be snake cased in request)",
          "key": "event_name",
          "label": "Event name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": {},
          "description": "Key-value pairs associated with a company (e.g. organization_id: 123456)",
          "key": "company_keys",
          "label": "Company keys",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.timestamp}",
          "description": "Time the event took place",
          "key": "timestamp",
          "label": "Timestamp",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": {},
          "description": "Key-value pairs associated with a user (e.g. email: example@example.com)",
          "key": "user_keys",
          "label": "User keys",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "raw_event_name": "{event.event}",
          },
          "description": "Additional properties to send with event",
          "key": "traits",
          "label": "Traits",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "trackEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Track Event",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event in ('$identify', '$set')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": {},
          "description": "Key-value pairs associated with a company (e.g. organization_id: 123456)",
          "key": "company_keys",
          "label": "Company keys",
          "required": true,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{person.properties.company_name}",
          "description": "Name of company",
          "key": "company_name",
          "label": "Company name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {},
          "description": "Properties associated with company",
          "key": "company_traits",
          "label": "Company traits",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.timestamp}",
          "description": "Time the event took place",
          "key": "timestamp",
          "label": "Timestamp",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": {},
          "description": "Key-value pairs associated with a user (e.g. email: example@example.com)",
          "key": "user_keys",
          "label": "User keys",
          "required": true,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{person.properties.name}",
          "description": "User's full name",
          "key": "user_name",
          "label": "User name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {},
          "description": "Properties associated with user",
          "key": "user_traits",
          "label": "User traits",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "identifyUser",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Identify User",
    },
  ],
  "name": "Schematic",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 124 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Courier",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/courier.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-courier",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Courier API Key from Segment integration page in the Courier Designer.",
      "key": "apiKey",
      "label": "API Key",
      "required": true,
      "secret": false,
      "type": "password",
    },
    {
      "choices": [
        {
          "label": "US",
          "value": "US",
        },
        {
          "label": "EU",
          "value": "EU",
        },
      ],
      "default": "US",
      "description": "Courier Region (US or EU)",
      "key": "region",
      "label": "Region",
      "required": true,
      "secret": false,
      "type": "choice",
    },
  ],
  "mapping_templates": [],
  "name": "Courier",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 125 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to TikTok Offline Conversions Sandbox",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/tiktok.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-tiktok-offline-conversions-sandbox",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Your TikTok Access Token. Please see TikTok’s [Events API 2.0 documentation](https://business-api.tiktok.com/portal/docs?id=1771101130925058) for information on how to generate an access token via the TikTok Ads Manager or API.",
      "key": "accessToken",
      "label": "Access Token",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "Your TikTok Offline Event Set ID. Please see TikTok’s [Events API 2.0 documentation](https://business-api.tiktok.com/portal/docs?id=1771101027431425) for information on how to find this value.",
      "key": "eventSetID",
      "label": "Event Set ID",
      "required": true,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Order Completed'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": undefined,
          "description": "Conversion event name. Please refer to the "Offline Standard Events" section on in TikTok’s [Events API 2.0 documentation](https://business-api.tiktok.com/portal/docs?id=1771101186666498) for accepted event names.",
          "key": "event",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "Any hashed ID that can identify a unique user/session.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Timestamp that the event took place, in ISO 8601 format.",
          "key": "timestamp",
          "label": "Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.phone ?? event.context.traits.phone}",
          "description": "A single phone number or array of phone numbers in E.164 standard format. Segment will hash this value before sending to TikTok. At least one phone number value is required if both Email and External ID fields are empty.",
          "key": "phone_numbers",
          "label": "Phone Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.email ?? event.context.traits.email}",
          "description": "A single email address or an array of email addresses. Segment will hash this value before sending to TikTok. At least one email value is required if both Phone Number and External ID fields are empty.",
          "key": "email_addresses",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.order_id}",
          "description": "Order ID of the transaction.",
          "key": "order_id",
          "label": "Order ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.shop_id}",
          "description": "Shop ID of the transaction.",
          "key": "shop_id",
          "label": "Shop ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "Uniquely identifies the user who triggered the conversion event. Segment will hash this value before sending to TikTok. TikTok Offline Conversions Destination supports both string and string[] types for sending external ID(s). At least one external ID value is required if both Email and Phone Number fields are empty.",
          "key": "external_ids",
          "label": "External ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttclid}",
          "description": "The value of the ttclid used to match website visitor events with TikTok ads. The ttclid is valid for 7 days. See [Set up ttclid](https://ads.tiktok.com/marketing_api/docs?rid=4eezrhr6lg4&id=1681728034437121) for details.",
          "key": "ttclid",
          "label": "TikTok Click ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttp}",
          "description": "TikTok Cookie ID. If you also use Pixel SDK and have enabled cookies, Pixel SDK automatically saves a unique identifier in the \`_ttp\` cookie. The value of \`_ttp\` is used to match website visitor events with TikTok ads. You can extract the value of \`_ttp\` and attach the value here. To learn more about the \`ttp\` parameter, refer to [Events API 2.0 - Send TikTok Cookie](https://ads.tiktok.com/marketing_api/docs?id=%201771100936446977) (\`_ttp\`).",
          "key": "ttp",
          "label": "TikTok Cookie ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.lead_id}",
          "description": "ID of TikTok leads. Every lead will have its own lead_id when exported from TikTok. This feature is in Beta. Please contact your TikTok representative to inquire regarding availability",
          "key": "lead_id",
          "label": "TikTok Lead ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$locale}",
          "description": "The BCP 47 language identifier. For reference, refer to the [IETF BCP 47 standardized code](https://www.rfc-editor.org/rfc/bcp/bcp47.txt).",
          "key": "locale",
          "label": "Locale",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The page URL where the conversion event took place.",
          "key": "url",
          "label": "Page URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$referrer}",
          "description": "The page referrer.",
          "key": "referrer",
          "label": "Page Referrer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "IP address of the browser.",
          "key": "ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "User agent from the user’s device.",
          "key": "user_agent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "brand": undefined,
            "content_category": undefined,
            "content_id": undefined,
            "content_name": undefined,
            "price": undefined,
            "quantity": undefined,
          },
          "description": "Related item details for the event.",
          "key": "contents",
          "label": "Contents",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "choices": [
            {
              "label": "product",
              "value": "product",
            },
            {
              "label": "product_group",
              "value": "product_group",
            },
          ],
          "default": "product",
          "description": "Type of the product item. When the \`content_id\` in the \`Contents\` field is specified as a \`sku_id\`, set this field to \`product\`. When the \`content_id\` in the \`Contents\` field is specified as an \`item_group_id\`, set this field to \`product_group\`.",
          "key": "content_type",
          "label": "Content Type",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.currency}",
          "description": "Currency for the value specified as ISO 4217 code.",
          "key": "currency",
          "label": "Currency",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.value ?? event.properties.revenue}",
          "description": "Value of the order or items sold.",
          "key": "value",
          "label": "Value",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "A string description of the web event.",
          "key": "description",
          "label": "Description",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.query}",
          "description": "The text string that was searched for.",
          "key": "query",
          "label": "Query",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.limited_data_use}",
          "description": "Use this field to flag an event for limited data processing. TikTok will recognize this parameter as a request for limited data processing, and will limit its processing activities accordingly if the event shared occurred in an eligible location. To learn more about the Limited Data Use feature, refer to [Events API 2.0 - Limited Data Use](https://ads.tiktok.com/marketing_api/docs?id=1771101204435970).",
          "key": "limited_data_use",
          "label": "Limited Data Use",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Use this field to specify that events should be test events rather than actual traffic. You can find your Test Event Code in your TikTok Events Manager under the "Test Event" tab. You'll want to remove your Test Event Code when sending real traffic through this integration.",
          "key": "test_event_code",
          "label": "Test Event Code",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "reportOfflineEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Complete Payment",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Callback Started'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": undefined,
          "description": "Conversion event name. Please refer to the "Offline Standard Events" section on in TikTok’s [Events API 2.0 documentation](https://business-api.tiktok.com/portal/docs?id=1771101186666498) for accepted event names.",
          "key": "event",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "Any hashed ID that can identify a unique user/session.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Timestamp that the event took place, in ISO 8601 format.",
          "key": "timestamp",
          "label": "Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.phone ?? event.context.traits.phone}",
          "description": "A single phone number or array of phone numbers in E.164 standard format. Segment will hash this value before sending to TikTok. At least one phone number value is required if both Email and External ID fields are empty.",
          "key": "phone_numbers",
          "label": "Phone Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.email ?? event.context.traits.email}",
          "description": "A single email address or an array of email addresses. Segment will hash this value before sending to TikTok. At least one email value is required if both Phone Number and External ID fields are empty.",
          "key": "email_addresses",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.order_id}",
          "description": "Order ID of the transaction.",
          "key": "order_id",
          "label": "Order ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.shop_id}",
          "description": "Shop ID of the transaction.",
          "key": "shop_id",
          "label": "Shop ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "Uniquely identifies the user who triggered the conversion event. Segment will hash this value before sending to TikTok. TikTok Offline Conversions Destination supports both string and string[] types for sending external ID(s). At least one external ID value is required if both Email and Phone Number fields are empty.",
          "key": "external_ids",
          "label": "External ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttclid}",
          "description": "The value of the ttclid used to match website visitor events with TikTok ads. The ttclid is valid for 7 days. See [Set up ttclid](https://ads.tiktok.com/marketing_api/docs?rid=4eezrhr6lg4&id=1681728034437121) for details.",
          "key": "ttclid",
          "label": "TikTok Click ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttp}",
          "description": "TikTok Cookie ID. If you also use Pixel SDK and have enabled cookies, Pixel SDK automatically saves a unique identifier in the \`_ttp\` cookie. The value of \`_ttp\` is used to match website visitor events with TikTok ads. You can extract the value of \`_ttp\` and attach the value here. To learn more about the \`ttp\` parameter, refer to [Events API 2.0 - Send TikTok Cookie](https://ads.tiktok.com/marketing_api/docs?id=%201771100936446977) (\`_ttp\`).",
          "key": "ttp",
          "label": "TikTok Cookie ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.lead_id}",
          "description": "ID of TikTok leads. Every lead will have its own lead_id when exported from TikTok. This feature is in Beta. Please contact your TikTok representative to inquire regarding availability",
          "key": "lead_id",
          "label": "TikTok Lead ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$locale}",
          "description": "The BCP 47 language identifier. For reference, refer to the [IETF BCP 47 standardized code](https://www.rfc-editor.org/rfc/bcp/bcp47.txt).",
          "key": "locale",
          "label": "Locale",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The page URL where the conversion event took place.",
          "key": "url",
          "label": "Page URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$referrer}",
          "description": "The page referrer.",
          "key": "referrer",
          "label": "Page Referrer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "IP address of the browser.",
          "key": "ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "User agent from the user’s device.",
          "key": "user_agent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "brand": undefined,
            "content_category": undefined,
            "content_id": undefined,
            "content_name": undefined,
            "price": undefined,
            "quantity": undefined,
          },
          "description": "Related item details for the event.",
          "key": "contents",
          "label": "Contents",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "choices": [
            {
              "label": "product",
              "value": "product",
            },
            {
              "label": "product_group",
              "value": "product_group",
            },
          ],
          "default": "product",
          "description": "Type of the product item. When the \`content_id\` in the \`Contents\` field is specified as a \`sku_id\`, set this field to \`product\`. When the \`content_id\` in the \`Contents\` field is specified as an \`item_group_id\`, set this field to \`product_group\`.",
          "key": "content_type",
          "label": "Content Type",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.currency}",
          "description": "Currency for the value specified as ISO 4217 code.",
          "key": "currency",
          "label": "Currency",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.value ?? event.properties.revenue}",
          "description": "Value of the order or items sold.",
          "key": "value",
          "label": "Value",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "A string description of the web event.",
          "key": "description",
          "label": "Description",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.query}",
          "description": "The text string that was searched for.",
          "key": "query",
          "label": "Query",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.limited_data_use}",
          "description": "Use this field to flag an event for limited data processing. TikTok will recognize this parameter as a request for limited data processing, and will limit its processing activities accordingly if the event shared occurred in an eligible location. To learn more about the Limited Data Use feature, refer to [Events API 2.0 - Limited Data Use](https://ads.tiktok.com/marketing_api/docs?id=1771101204435970).",
          "key": "limited_data_use",
          "label": "Limited Data Use",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Use this field to specify that events should be test events rather than actual traffic. You can find your Test Event Code in your TikTok Events Manager under the "Test Event" tab. You'll want to remove your Test Event Code when sending real traffic through this integration.",
          "key": "test_event_code",
          "label": "Test Event Code",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "reportOfflineEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Contact",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Subscription Created'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": undefined,
          "description": "Conversion event name. Please refer to the "Offline Standard Events" section on in TikTok’s [Events API 2.0 documentation](https://business-api.tiktok.com/portal/docs?id=1771101186666498) for accepted event names.",
          "key": "event",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "Any hashed ID that can identify a unique user/session.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Timestamp that the event took place, in ISO 8601 format.",
          "key": "timestamp",
          "label": "Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.phone ?? event.context.traits.phone}",
          "description": "A single phone number or array of phone numbers in E.164 standard format. Segment will hash this value before sending to TikTok. At least one phone number value is required if both Email and External ID fields are empty.",
          "key": "phone_numbers",
          "label": "Phone Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.email ?? event.context.traits.email}",
          "description": "A single email address or an array of email addresses. Segment will hash this value before sending to TikTok. At least one email value is required if both Phone Number and External ID fields are empty.",
          "key": "email_addresses",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.order_id}",
          "description": "Order ID of the transaction.",
          "key": "order_id",
          "label": "Order ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.shop_id}",
          "description": "Shop ID of the transaction.",
          "key": "shop_id",
          "label": "Shop ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "Uniquely identifies the user who triggered the conversion event. Segment will hash this value before sending to TikTok. TikTok Offline Conversions Destination supports both string and string[] types for sending external ID(s). At least one external ID value is required if both Email and Phone Number fields are empty.",
          "key": "external_ids",
          "label": "External ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttclid}",
          "description": "The value of the ttclid used to match website visitor events with TikTok ads. The ttclid is valid for 7 days. See [Set up ttclid](https://ads.tiktok.com/marketing_api/docs?rid=4eezrhr6lg4&id=1681728034437121) for details.",
          "key": "ttclid",
          "label": "TikTok Click ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttp}",
          "description": "TikTok Cookie ID. If you also use Pixel SDK and have enabled cookies, Pixel SDK automatically saves a unique identifier in the \`_ttp\` cookie. The value of \`_ttp\` is used to match website visitor events with TikTok ads. You can extract the value of \`_ttp\` and attach the value here. To learn more about the \`ttp\` parameter, refer to [Events API 2.0 - Send TikTok Cookie](https://ads.tiktok.com/marketing_api/docs?id=%201771100936446977) (\`_ttp\`).",
          "key": "ttp",
          "label": "TikTok Cookie ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.lead_id}",
          "description": "ID of TikTok leads. Every lead will have its own lead_id when exported from TikTok. This feature is in Beta. Please contact your TikTok representative to inquire regarding availability",
          "key": "lead_id",
          "label": "TikTok Lead ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$locale}",
          "description": "The BCP 47 language identifier. For reference, refer to the [IETF BCP 47 standardized code](https://www.rfc-editor.org/rfc/bcp/bcp47.txt).",
          "key": "locale",
          "label": "Locale",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The page URL where the conversion event took place.",
          "key": "url",
          "label": "Page URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$referrer}",
          "description": "The page referrer.",
          "key": "referrer",
          "label": "Page Referrer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "IP address of the browser.",
          "key": "ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "User agent from the user’s device.",
          "key": "user_agent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "brand": undefined,
            "content_category": undefined,
            "content_id": undefined,
            "content_name": undefined,
            "price": undefined,
            "quantity": undefined,
          },
          "description": "Related item details for the event.",
          "key": "contents",
          "label": "Contents",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "choices": [
            {
              "label": "product",
              "value": "product",
            },
            {
              "label": "product_group",
              "value": "product_group",
            },
          ],
          "default": "product",
          "description": "Type of the product item. When the \`content_id\` in the \`Contents\` field is specified as a \`sku_id\`, set this field to \`product\`. When the \`content_id\` in the \`Contents\` field is specified as an \`item_group_id\`, set this field to \`product_group\`.",
          "key": "content_type",
          "label": "Content Type",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.currency}",
          "description": "Currency for the value specified as ISO 4217 code.",
          "key": "currency",
          "label": "Currency",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.value ?? event.properties.revenue}",
          "description": "Value of the order or items sold.",
          "key": "value",
          "label": "Value",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "A string description of the web event.",
          "key": "description",
          "label": "Description",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.query}",
          "description": "The text string that was searched for.",
          "key": "query",
          "label": "Query",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.limited_data_use}",
          "description": "Use this field to flag an event for limited data processing. TikTok will recognize this parameter as a request for limited data processing, and will limit its processing activities accordingly if the event shared occurred in an eligible location. To learn more about the Limited Data Use feature, refer to [Events API 2.0 - Limited Data Use](https://ads.tiktok.com/marketing_api/docs?id=1771101204435970).",
          "key": "limited_data_use",
          "label": "Limited Data Use",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Use this field to specify that events should be test events rather than actual traffic. You can find your Test Event Code in your TikTok Events Manager under the "Test Event" tab. You'll want to remove your Test Event Code when sending real traffic through this integration.",
          "key": "test_event_code",
          "label": "Test Event Code",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "reportOfflineEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Subscribe",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Form Submitted'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": undefined,
          "description": "Conversion event name. Please refer to the "Offline Standard Events" section on in TikTok’s [Events API 2.0 documentation](https://business-api.tiktok.com/portal/docs?id=1771101186666498) for accepted event names.",
          "key": "event",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "Any hashed ID that can identify a unique user/session.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Timestamp that the event took place, in ISO 8601 format.",
          "key": "timestamp",
          "label": "Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.phone ?? event.context.traits.phone}",
          "description": "A single phone number or array of phone numbers in E.164 standard format. Segment will hash this value before sending to TikTok. At least one phone number value is required if both Email and External ID fields are empty.",
          "key": "phone_numbers",
          "label": "Phone Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.email ?? event.context.traits.email}",
          "description": "A single email address or an array of email addresses. Segment will hash this value before sending to TikTok. At least one email value is required if both Phone Number and External ID fields are empty.",
          "key": "email_addresses",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.order_id}",
          "description": "Order ID of the transaction.",
          "key": "order_id",
          "label": "Order ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.shop_id}",
          "description": "Shop ID of the transaction.",
          "key": "shop_id",
          "label": "Shop ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "Uniquely identifies the user who triggered the conversion event. Segment will hash this value before sending to TikTok. TikTok Offline Conversions Destination supports both string and string[] types for sending external ID(s). At least one external ID value is required if both Email and Phone Number fields are empty.",
          "key": "external_ids",
          "label": "External ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttclid}",
          "description": "The value of the ttclid used to match website visitor events with TikTok ads. The ttclid is valid for 7 days. See [Set up ttclid](https://ads.tiktok.com/marketing_api/docs?rid=4eezrhr6lg4&id=1681728034437121) for details.",
          "key": "ttclid",
          "label": "TikTok Click ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttp}",
          "description": "TikTok Cookie ID. If you also use Pixel SDK and have enabled cookies, Pixel SDK automatically saves a unique identifier in the \`_ttp\` cookie. The value of \`_ttp\` is used to match website visitor events with TikTok ads. You can extract the value of \`_ttp\` and attach the value here. To learn more about the \`ttp\` parameter, refer to [Events API 2.0 - Send TikTok Cookie](https://ads.tiktok.com/marketing_api/docs?id=%201771100936446977) (\`_ttp\`).",
          "key": "ttp",
          "label": "TikTok Cookie ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.lead_id}",
          "description": "ID of TikTok leads. Every lead will have its own lead_id when exported from TikTok. This feature is in Beta. Please contact your TikTok representative to inquire regarding availability",
          "key": "lead_id",
          "label": "TikTok Lead ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$locale}",
          "description": "The BCP 47 language identifier. For reference, refer to the [IETF BCP 47 standardized code](https://www.rfc-editor.org/rfc/bcp/bcp47.txt).",
          "key": "locale",
          "label": "Locale",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The page URL where the conversion event took place.",
          "key": "url",
          "label": "Page URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$referrer}",
          "description": "The page referrer.",
          "key": "referrer",
          "label": "Page Referrer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "IP address of the browser.",
          "key": "ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "User agent from the user’s device.",
          "key": "user_agent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "brand": undefined,
            "content_category": undefined,
            "content_id": undefined,
            "content_name": undefined,
            "price": undefined,
            "quantity": undefined,
          },
          "description": "Related item details for the event.",
          "key": "contents",
          "label": "Contents",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "choices": [
            {
              "label": "product",
              "value": "product",
            },
            {
              "label": "product_group",
              "value": "product_group",
            },
          ],
          "default": "product",
          "description": "Type of the product item. When the \`content_id\` in the \`Contents\` field is specified as a \`sku_id\`, set this field to \`product\`. When the \`content_id\` in the \`Contents\` field is specified as an \`item_group_id\`, set this field to \`product_group\`.",
          "key": "content_type",
          "label": "Content Type",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.currency}",
          "description": "Currency for the value specified as ISO 4217 code.",
          "key": "currency",
          "label": "Currency",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.value ?? event.properties.revenue}",
          "description": "Value of the order or items sold.",
          "key": "value",
          "label": "Value",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "A string description of the web event.",
          "key": "description",
          "label": "Description",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.query}",
          "description": "The text string that was searched for.",
          "key": "query",
          "label": "Query",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.limited_data_use}",
          "description": "Use this field to flag an event for limited data processing. TikTok will recognize this parameter as a request for limited data processing, and will limit its processing activities accordingly if the event shared occurred in an eligible location. To learn more about the Limited Data Use feature, refer to [Events API 2.0 - Limited Data Use](https://ads.tiktok.com/marketing_api/docs?id=1771101204435970).",
          "key": "limited_data_use",
          "label": "Limited Data Use",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Use this field to specify that events should be test events rather than actual traffic. You can find your Test Event Code in your TikTok Events Manager under the "Test Event" tab. You'll want to remove your Test Event Code when sending real traffic through this integration.",
          "key": "test_event_code",
          "label": "Test Event Code",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "reportOfflineEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Submit Form",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "type='page'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": undefined,
          "description": "Conversion event name. Please refer to the "Offline Standard Events" section on in TikTok’s [Events API 2.0 documentation](https://business-api.tiktok.com/portal/docs?id=1771101186666498) for accepted event names.",
          "key": "event",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "Any hashed ID that can identify a unique user/session.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Timestamp that the event took place, in ISO 8601 format.",
          "key": "timestamp",
          "label": "Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.phone ?? event.context.traits.phone}",
          "description": "A single phone number or array of phone numbers in E.164 standard format. Segment will hash this value before sending to TikTok. At least one phone number value is required if both Email and External ID fields are empty.",
          "key": "phone_numbers",
          "label": "Phone Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.email ?? event.context.traits.email}",
          "description": "A single email address or an array of email addresses. Segment will hash this value before sending to TikTok. At least one email value is required if both Phone Number and External ID fields are empty.",
          "key": "email_addresses",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.order_id}",
          "description": "Order ID of the transaction.",
          "key": "order_id",
          "label": "Order ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.shop_id}",
          "description": "Shop ID of the transaction.",
          "key": "shop_id",
          "label": "Shop ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "Uniquely identifies the user who triggered the conversion event. Segment will hash this value before sending to TikTok. TikTok Offline Conversions Destination supports both string and string[] types for sending external ID(s). At least one external ID value is required if both Email and Phone Number fields are empty.",
          "key": "external_ids",
          "label": "External ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttclid}",
          "description": "The value of the ttclid used to match website visitor events with TikTok ads. The ttclid is valid for 7 days. See [Set up ttclid](https://ads.tiktok.com/marketing_api/docs?rid=4eezrhr6lg4&id=1681728034437121) for details.",
          "key": "ttclid",
          "label": "TikTok Click ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttp}",
          "description": "TikTok Cookie ID. If you also use Pixel SDK and have enabled cookies, Pixel SDK automatically saves a unique identifier in the \`_ttp\` cookie. The value of \`_ttp\` is used to match website visitor events with TikTok ads. You can extract the value of \`_ttp\` and attach the value here. To learn more about the \`ttp\` parameter, refer to [Events API 2.0 - Send TikTok Cookie](https://ads.tiktok.com/marketing_api/docs?id=%201771100936446977) (\`_ttp\`).",
          "key": "ttp",
          "label": "TikTok Cookie ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.lead_id}",
          "description": "ID of TikTok leads. Every lead will have its own lead_id when exported from TikTok. This feature is in Beta. Please contact your TikTok representative to inquire regarding availability",
          "key": "lead_id",
          "label": "TikTok Lead ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$locale}",
          "description": "The BCP 47 language identifier. For reference, refer to the [IETF BCP 47 standardized code](https://www.rfc-editor.org/rfc/bcp/bcp47.txt).",
          "key": "locale",
          "label": "Locale",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The page URL where the conversion event took place.",
          "key": "url",
          "label": "Page URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$referrer}",
          "description": "The page referrer.",
          "key": "referrer",
          "label": "Page Referrer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "IP address of the browser.",
          "key": "ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "User agent from the user’s device.",
          "key": "user_agent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "brand": undefined,
            "content_category": undefined,
            "content_id": undefined,
            "content_name": undefined,
            "price": undefined,
            "quantity": undefined,
          },
          "description": "Related item details for the event.",
          "key": "contents",
          "label": "Contents",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "choices": [
            {
              "label": "product",
              "value": "product",
            },
            {
              "label": "product_group",
              "value": "product_group",
            },
          ],
          "default": "product",
          "description": "Type of the product item. When the \`content_id\` in the \`Contents\` field is specified as a \`sku_id\`, set this field to \`product\`. When the \`content_id\` in the \`Contents\` field is specified as an \`item_group_id\`, set this field to \`product_group\`.",
          "key": "content_type",
          "label": "Content Type",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.currency}",
          "description": "Currency for the value specified as ISO 4217 code.",
          "key": "currency",
          "label": "Currency",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.value ?? event.properties.revenue}",
          "description": "Value of the order or items sold.",
          "key": "value",
          "label": "Value",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "A string description of the web event.",
          "key": "description",
          "label": "Description",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.query}",
          "description": "The text string that was searched for.",
          "key": "query",
          "label": "Query",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.limited_data_use}",
          "description": "Use this field to flag an event for limited data processing. TikTok will recognize this parameter as a request for limited data processing, and will limit its processing activities accordingly if the event shared occurred in an eligible location. To learn more about the Limited Data Use feature, refer to [Events API 2.0 - Limited Data Use](https://ads.tiktok.com/marketing_api/docs?id=1771101204435970).",
          "key": "limited_data_use",
          "label": "Limited Data Use",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Use this field to specify that events should be test events rather than actual traffic. You can find your Test Event Code in your TikTok Events Manager under the "Test Event" tab. You'll want to remove your Test Event Code when sending real traffic through this integration.",
          "key": "test_event_code",
          "label": "Test Event Code",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "reportOfflineEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Page View",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Product Viewed'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": undefined,
          "description": "Conversion event name. Please refer to the "Offline Standard Events" section on in TikTok’s [Events API 2.0 documentation](https://business-api.tiktok.com/portal/docs?id=1771101186666498) for accepted event names.",
          "key": "event",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "Any hashed ID that can identify a unique user/session.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Timestamp that the event took place, in ISO 8601 format.",
          "key": "timestamp",
          "label": "Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.phone ?? event.context.traits.phone}",
          "description": "A single phone number or array of phone numbers in E.164 standard format. Segment will hash this value before sending to TikTok. At least one phone number value is required if both Email and External ID fields are empty.",
          "key": "phone_numbers",
          "label": "Phone Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.email ?? event.context.traits.email}",
          "description": "A single email address or an array of email addresses. Segment will hash this value before sending to TikTok. At least one email value is required if both Phone Number and External ID fields are empty.",
          "key": "email_addresses",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.order_id}",
          "description": "Order ID of the transaction.",
          "key": "order_id",
          "label": "Order ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.shop_id}",
          "description": "Shop ID of the transaction.",
          "key": "shop_id",
          "label": "Shop ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "Uniquely identifies the user who triggered the conversion event. Segment will hash this value before sending to TikTok. TikTok Offline Conversions Destination supports both string and string[] types for sending external ID(s). At least one external ID value is required if both Email and Phone Number fields are empty.",
          "key": "external_ids",
          "label": "External ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttclid}",
          "description": "The value of the ttclid used to match website visitor events with TikTok ads. The ttclid is valid for 7 days. See [Set up ttclid](https://ads.tiktok.com/marketing_api/docs?rid=4eezrhr6lg4&id=1681728034437121) for details.",
          "key": "ttclid",
          "label": "TikTok Click ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttp}",
          "description": "TikTok Cookie ID. If you also use Pixel SDK and have enabled cookies, Pixel SDK automatically saves a unique identifier in the \`_ttp\` cookie. The value of \`_ttp\` is used to match website visitor events with TikTok ads. You can extract the value of \`_ttp\` and attach the value here. To learn more about the \`ttp\` parameter, refer to [Events API 2.0 - Send TikTok Cookie](https://ads.tiktok.com/marketing_api/docs?id=%201771100936446977) (\`_ttp\`).",
          "key": "ttp",
          "label": "TikTok Cookie ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.lead_id}",
          "description": "ID of TikTok leads. Every lead will have its own lead_id when exported from TikTok. This feature is in Beta. Please contact your TikTok representative to inquire regarding availability",
          "key": "lead_id",
          "label": "TikTok Lead ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$locale}",
          "description": "The BCP 47 language identifier. For reference, refer to the [IETF BCP 47 standardized code](https://www.rfc-editor.org/rfc/bcp/bcp47.txt).",
          "key": "locale",
          "label": "Locale",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The page URL where the conversion event took place.",
          "key": "url",
          "label": "Page URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$referrer}",
          "description": "The page referrer.",
          "key": "referrer",
          "label": "Page Referrer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "IP address of the browser.",
          "key": "ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "User agent from the user’s device.",
          "key": "user_agent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "brand": undefined,
            "content_category": undefined,
            "content_id": undefined,
            "content_name": undefined,
            "price": undefined,
            "quantity": undefined,
          },
          "description": "Related item details for the event.",
          "key": "contents",
          "label": "Contents",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "choices": [
            {
              "label": "product",
              "value": "product",
            },
            {
              "label": "product_group",
              "value": "product_group",
            },
          ],
          "default": "product",
          "description": "Type of the product item. When the \`content_id\` in the \`Contents\` field is specified as a \`sku_id\`, set this field to \`product\`. When the \`content_id\` in the \`Contents\` field is specified as an \`item_group_id\`, set this field to \`product_group\`.",
          "key": "content_type",
          "label": "Content Type",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.currency}",
          "description": "Currency for the value specified as ISO 4217 code.",
          "key": "currency",
          "label": "Currency",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.value ?? event.properties.revenue}",
          "description": "Value of the order or items sold.",
          "key": "value",
          "label": "Value",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "A string description of the web event.",
          "key": "description",
          "label": "Description",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.query}",
          "description": "The text string that was searched for.",
          "key": "query",
          "label": "Query",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.limited_data_use}",
          "description": "Use this field to flag an event for limited data processing. TikTok will recognize this parameter as a request for limited data processing, and will limit its processing activities accordingly if the event shared occurred in an eligible location. To learn more about the Limited Data Use feature, refer to [Events API 2.0 - Limited Data Use](https://ads.tiktok.com/marketing_api/docs?id=1771101204435970).",
          "key": "limited_data_use",
          "label": "Limited Data Use",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Use this field to specify that events should be test events rather than actual traffic. You can find your Test Event Code in your TikTok Events Manager under the "Test Event" tab. You'll want to remove your Test Event Code when sending real traffic through this integration.",
          "key": "test_event_code",
          "label": "Test Event Code",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "reportOfflineEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "View Content",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Product Clicked'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": undefined,
          "description": "Conversion event name. Please refer to the "Offline Standard Events" section on in TikTok’s [Events API 2.0 documentation](https://business-api.tiktok.com/portal/docs?id=1771101186666498) for accepted event names.",
          "key": "event",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "Any hashed ID that can identify a unique user/session.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Timestamp that the event took place, in ISO 8601 format.",
          "key": "timestamp",
          "label": "Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.phone ?? event.context.traits.phone}",
          "description": "A single phone number or array of phone numbers in E.164 standard format. Segment will hash this value before sending to TikTok. At least one phone number value is required if both Email and External ID fields are empty.",
          "key": "phone_numbers",
          "label": "Phone Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.email ?? event.context.traits.email}",
          "description": "A single email address or an array of email addresses. Segment will hash this value before sending to TikTok. At least one email value is required if both Phone Number and External ID fields are empty.",
          "key": "email_addresses",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.order_id}",
          "description": "Order ID of the transaction.",
          "key": "order_id",
          "label": "Order ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.shop_id}",
          "description": "Shop ID of the transaction.",
          "key": "shop_id",
          "label": "Shop ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "Uniquely identifies the user who triggered the conversion event. Segment will hash this value before sending to TikTok. TikTok Offline Conversions Destination supports both string and string[] types for sending external ID(s). At least one external ID value is required if both Email and Phone Number fields are empty.",
          "key": "external_ids",
          "label": "External ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttclid}",
          "description": "The value of the ttclid used to match website visitor events with TikTok ads. The ttclid is valid for 7 days. See [Set up ttclid](https://ads.tiktok.com/marketing_api/docs?rid=4eezrhr6lg4&id=1681728034437121) for details.",
          "key": "ttclid",
          "label": "TikTok Click ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttp}",
          "description": "TikTok Cookie ID. If you also use Pixel SDK and have enabled cookies, Pixel SDK automatically saves a unique identifier in the \`_ttp\` cookie. The value of \`_ttp\` is used to match website visitor events with TikTok ads. You can extract the value of \`_ttp\` and attach the value here. To learn more about the \`ttp\` parameter, refer to [Events API 2.0 - Send TikTok Cookie](https://ads.tiktok.com/marketing_api/docs?id=%201771100936446977) (\`_ttp\`).",
          "key": "ttp",
          "label": "TikTok Cookie ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.lead_id}",
          "description": "ID of TikTok leads. Every lead will have its own lead_id when exported from TikTok. This feature is in Beta. Please contact your TikTok representative to inquire regarding availability",
          "key": "lead_id",
          "label": "TikTok Lead ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$locale}",
          "description": "The BCP 47 language identifier. For reference, refer to the [IETF BCP 47 standardized code](https://www.rfc-editor.org/rfc/bcp/bcp47.txt).",
          "key": "locale",
          "label": "Locale",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The page URL where the conversion event took place.",
          "key": "url",
          "label": "Page URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$referrer}",
          "description": "The page referrer.",
          "key": "referrer",
          "label": "Page Referrer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "IP address of the browser.",
          "key": "ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "User agent from the user’s device.",
          "key": "user_agent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "brand": undefined,
            "content_category": undefined,
            "content_id": undefined,
            "content_name": undefined,
            "price": undefined,
            "quantity": undefined,
          },
          "description": "Related item details for the event.",
          "key": "contents",
          "label": "Contents",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "choices": [
            {
              "label": "product",
              "value": "product",
            },
            {
              "label": "product_group",
              "value": "product_group",
            },
          ],
          "default": "product",
          "description": "Type of the product item. When the \`content_id\` in the \`Contents\` field is specified as a \`sku_id\`, set this field to \`product\`. When the \`content_id\` in the \`Contents\` field is specified as an \`item_group_id\`, set this field to \`product_group\`.",
          "key": "content_type",
          "label": "Content Type",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.currency}",
          "description": "Currency for the value specified as ISO 4217 code.",
          "key": "currency",
          "label": "Currency",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.value ?? event.properties.revenue}",
          "description": "Value of the order or items sold.",
          "key": "value",
          "label": "Value",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "A string description of the web event.",
          "key": "description",
          "label": "Description",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.query}",
          "description": "The text string that was searched for.",
          "key": "query",
          "label": "Query",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.limited_data_use}",
          "description": "Use this field to flag an event for limited data processing. TikTok will recognize this parameter as a request for limited data processing, and will limit its processing activities accordingly if the event shared occurred in an eligible location. To learn more about the Limited Data Use feature, refer to [Events API 2.0 - Limited Data Use](https://ads.tiktok.com/marketing_api/docs?id=1771101204435970).",
          "key": "limited_data_use",
          "label": "Limited Data Use",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Use this field to specify that events should be test events rather than actual traffic. You can find your Test Event Code in your TikTok Events Manager under the "Test Event" tab. You'll want to remove your Test Event Code when sending real traffic through this integration.",
          "key": "test_event_code",
          "label": "Test Event Code",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "reportOfflineEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Click Button",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Products Searched'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": undefined,
          "description": "Conversion event name. Please refer to the "Offline Standard Events" section on in TikTok’s [Events API 2.0 documentation](https://business-api.tiktok.com/portal/docs?id=1771101186666498) for accepted event names.",
          "key": "event",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "Any hashed ID that can identify a unique user/session.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Timestamp that the event took place, in ISO 8601 format.",
          "key": "timestamp",
          "label": "Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.phone ?? event.context.traits.phone}",
          "description": "A single phone number or array of phone numbers in E.164 standard format. Segment will hash this value before sending to TikTok. At least one phone number value is required if both Email and External ID fields are empty.",
          "key": "phone_numbers",
          "label": "Phone Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.email ?? event.context.traits.email}",
          "description": "A single email address or an array of email addresses. Segment will hash this value before sending to TikTok. At least one email value is required if both Phone Number and External ID fields are empty.",
          "key": "email_addresses",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.order_id}",
          "description": "Order ID of the transaction.",
          "key": "order_id",
          "label": "Order ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.shop_id}",
          "description": "Shop ID of the transaction.",
          "key": "shop_id",
          "label": "Shop ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "Uniquely identifies the user who triggered the conversion event. Segment will hash this value before sending to TikTok. TikTok Offline Conversions Destination supports both string and string[] types for sending external ID(s). At least one external ID value is required if both Email and Phone Number fields are empty.",
          "key": "external_ids",
          "label": "External ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttclid}",
          "description": "The value of the ttclid used to match website visitor events with TikTok ads. The ttclid is valid for 7 days. See [Set up ttclid](https://ads.tiktok.com/marketing_api/docs?rid=4eezrhr6lg4&id=1681728034437121) for details.",
          "key": "ttclid",
          "label": "TikTok Click ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttp}",
          "description": "TikTok Cookie ID. If you also use Pixel SDK and have enabled cookies, Pixel SDK automatically saves a unique identifier in the \`_ttp\` cookie. The value of \`_ttp\` is used to match website visitor events with TikTok ads. You can extract the value of \`_ttp\` and attach the value here. To learn more about the \`ttp\` parameter, refer to [Events API 2.0 - Send TikTok Cookie](https://ads.tiktok.com/marketing_api/docs?id=%201771100936446977) (\`_ttp\`).",
          "key": "ttp",
          "label": "TikTok Cookie ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.lead_id}",
          "description": "ID of TikTok leads. Every lead will have its own lead_id when exported from TikTok. This feature is in Beta. Please contact your TikTok representative to inquire regarding availability",
          "key": "lead_id",
          "label": "TikTok Lead ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$locale}",
          "description": "The BCP 47 language identifier. For reference, refer to the [IETF BCP 47 standardized code](https://www.rfc-editor.org/rfc/bcp/bcp47.txt).",
          "key": "locale",
          "label": "Locale",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The page URL where the conversion event took place.",
          "key": "url",
          "label": "Page URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$referrer}",
          "description": "The page referrer.",
          "key": "referrer",
          "label": "Page Referrer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "IP address of the browser.",
          "key": "ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "User agent from the user’s device.",
          "key": "user_agent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "brand": undefined,
            "content_category": undefined,
            "content_id": undefined,
            "content_name": undefined,
            "price": undefined,
            "quantity": undefined,
          },
          "description": "Related item details for the event.",
          "key": "contents",
          "label": "Contents",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "choices": [
            {
              "label": "product",
              "value": "product",
            },
            {
              "label": "product_group",
              "value": "product_group",
            },
          ],
          "default": "product",
          "description": "Type of the product item. When the \`content_id\` in the \`Contents\` field is specified as a \`sku_id\`, set this field to \`product\`. When the \`content_id\` in the \`Contents\` field is specified as an \`item_group_id\`, set this field to \`product_group\`.",
          "key": "content_type",
          "label": "Content Type",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.currency}",
          "description": "Currency for the value specified as ISO 4217 code.",
          "key": "currency",
          "label": "Currency",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.value ?? event.properties.revenue}",
          "description": "Value of the order or items sold.",
          "key": "value",
          "label": "Value",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "A string description of the web event.",
          "key": "description",
          "label": "Description",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.query}",
          "description": "The text string that was searched for.",
          "key": "query",
          "label": "Query",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.limited_data_use}",
          "description": "Use this field to flag an event for limited data processing. TikTok will recognize this parameter as a request for limited data processing, and will limit its processing activities accordingly if the event shared occurred in an eligible location. To learn more about the Limited Data Use feature, refer to [Events API 2.0 - Limited Data Use](https://ads.tiktok.com/marketing_api/docs?id=1771101204435970).",
          "key": "limited_data_use",
          "label": "Limited Data Use",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Use this field to specify that events should be test events rather than actual traffic. You can find your Test Event Code in your TikTok Events Manager under the "Test Event" tab. You'll want to remove your Test Event Code when sending real traffic through this integration.",
          "key": "test_event_code",
          "label": "Test Event Code",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "reportOfflineEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Search",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Product Added to Wishlist'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": undefined,
          "description": "Conversion event name. Please refer to the "Offline Standard Events" section on in TikTok’s [Events API 2.0 documentation](https://business-api.tiktok.com/portal/docs?id=1771101186666498) for accepted event names.",
          "key": "event",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "Any hashed ID that can identify a unique user/session.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Timestamp that the event took place, in ISO 8601 format.",
          "key": "timestamp",
          "label": "Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.phone ?? event.context.traits.phone}",
          "description": "A single phone number or array of phone numbers in E.164 standard format. Segment will hash this value before sending to TikTok. At least one phone number value is required if both Email and External ID fields are empty.",
          "key": "phone_numbers",
          "label": "Phone Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.email ?? event.context.traits.email}",
          "description": "A single email address or an array of email addresses. Segment will hash this value before sending to TikTok. At least one email value is required if both Phone Number and External ID fields are empty.",
          "key": "email_addresses",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.order_id}",
          "description": "Order ID of the transaction.",
          "key": "order_id",
          "label": "Order ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.shop_id}",
          "description": "Shop ID of the transaction.",
          "key": "shop_id",
          "label": "Shop ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "Uniquely identifies the user who triggered the conversion event. Segment will hash this value before sending to TikTok. TikTok Offline Conversions Destination supports both string and string[] types for sending external ID(s). At least one external ID value is required if both Email and Phone Number fields are empty.",
          "key": "external_ids",
          "label": "External ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttclid}",
          "description": "The value of the ttclid used to match website visitor events with TikTok ads. The ttclid is valid for 7 days. See [Set up ttclid](https://ads.tiktok.com/marketing_api/docs?rid=4eezrhr6lg4&id=1681728034437121) for details.",
          "key": "ttclid",
          "label": "TikTok Click ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttp}",
          "description": "TikTok Cookie ID. If you also use Pixel SDK and have enabled cookies, Pixel SDK automatically saves a unique identifier in the \`_ttp\` cookie. The value of \`_ttp\` is used to match website visitor events with TikTok ads. You can extract the value of \`_ttp\` and attach the value here. To learn more about the \`ttp\` parameter, refer to [Events API 2.0 - Send TikTok Cookie](https://ads.tiktok.com/marketing_api/docs?id=%201771100936446977) (\`_ttp\`).",
          "key": "ttp",
          "label": "TikTok Cookie ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.lead_id}",
          "description": "ID of TikTok leads. Every lead will have its own lead_id when exported from TikTok. This feature is in Beta. Please contact your TikTok representative to inquire regarding availability",
          "key": "lead_id",
          "label": "TikTok Lead ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$locale}",
          "description": "The BCP 47 language identifier. For reference, refer to the [IETF BCP 47 standardized code](https://www.rfc-editor.org/rfc/bcp/bcp47.txt).",
          "key": "locale",
          "label": "Locale",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The page URL where the conversion event took place.",
          "key": "url",
          "label": "Page URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$referrer}",
          "description": "The page referrer.",
          "key": "referrer",
          "label": "Page Referrer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "IP address of the browser.",
          "key": "ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "User agent from the user’s device.",
          "key": "user_agent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "brand": undefined,
            "content_category": undefined,
            "content_id": undefined,
            "content_name": undefined,
            "price": undefined,
            "quantity": undefined,
          },
          "description": "Related item details for the event.",
          "key": "contents",
          "label": "Contents",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "choices": [
            {
              "label": "product",
              "value": "product",
            },
            {
              "label": "product_group",
              "value": "product_group",
            },
          ],
          "default": "product",
          "description": "Type of the product item. When the \`content_id\` in the \`Contents\` field is specified as a \`sku_id\`, set this field to \`product\`. When the \`content_id\` in the \`Contents\` field is specified as an \`item_group_id\`, set this field to \`product_group\`.",
          "key": "content_type",
          "label": "Content Type",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.currency}",
          "description": "Currency for the value specified as ISO 4217 code.",
          "key": "currency",
          "label": "Currency",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.value ?? event.properties.revenue}",
          "description": "Value of the order or items sold.",
          "key": "value",
          "label": "Value",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "A string description of the web event.",
          "key": "description",
          "label": "Description",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.query}",
          "description": "The text string that was searched for.",
          "key": "query",
          "label": "Query",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.limited_data_use}",
          "description": "Use this field to flag an event for limited data processing. TikTok will recognize this parameter as a request for limited data processing, and will limit its processing activities accordingly if the event shared occurred in an eligible location. To learn more about the Limited Data Use feature, refer to [Events API 2.0 - Limited Data Use](https://ads.tiktok.com/marketing_api/docs?id=1771101204435970).",
          "key": "limited_data_use",
          "label": "Limited Data Use",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Use this field to specify that events should be test events rather than actual traffic. You can find your Test Event Code in your TikTok Events Manager under the "Test Event" tab. You'll want to remove your Test Event Code when sending real traffic through this integration.",
          "key": "test_event_code",
          "label": "Test Event Code",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "reportOfflineEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Add to Wishlist",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Product Added'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": undefined,
          "description": "Conversion event name. Please refer to the "Offline Standard Events" section on in TikTok’s [Events API 2.0 documentation](https://business-api.tiktok.com/portal/docs?id=1771101186666498) for accepted event names.",
          "key": "event",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "Any hashed ID that can identify a unique user/session.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Timestamp that the event took place, in ISO 8601 format.",
          "key": "timestamp",
          "label": "Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.phone ?? event.context.traits.phone}",
          "description": "A single phone number or array of phone numbers in E.164 standard format. Segment will hash this value before sending to TikTok. At least one phone number value is required if both Email and External ID fields are empty.",
          "key": "phone_numbers",
          "label": "Phone Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.email ?? event.context.traits.email}",
          "description": "A single email address or an array of email addresses. Segment will hash this value before sending to TikTok. At least one email value is required if both Phone Number and External ID fields are empty.",
          "key": "email_addresses",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.order_id}",
          "description": "Order ID of the transaction.",
          "key": "order_id",
          "label": "Order ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.shop_id}",
          "description": "Shop ID of the transaction.",
          "key": "shop_id",
          "label": "Shop ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "Uniquely identifies the user who triggered the conversion event. Segment will hash this value before sending to TikTok. TikTok Offline Conversions Destination supports both string and string[] types for sending external ID(s). At least one external ID value is required if both Email and Phone Number fields are empty.",
          "key": "external_ids",
          "label": "External ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttclid}",
          "description": "The value of the ttclid used to match website visitor events with TikTok ads. The ttclid is valid for 7 days. See [Set up ttclid](https://ads.tiktok.com/marketing_api/docs?rid=4eezrhr6lg4&id=1681728034437121) for details.",
          "key": "ttclid",
          "label": "TikTok Click ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttp}",
          "description": "TikTok Cookie ID. If you also use Pixel SDK and have enabled cookies, Pixel SDK automatically saves a unique identifier in the \`_ttp\` cookie. The value of \`_ttp\` is used to match website visitor events with TikTok ads. You can extract the value of \`_ttp\` and attach the value here. To learn more about the \`ttp\` parameter, refer to [Events API 2.0 - Send TikTok Cookie](https://ads.tiktok.com/marketing_api/docs?id=%201771100936446977) (\`_ttp\`).",
          "key": "ttp",
          "label": "TikTok Cookie ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.lead_id}",
          "description": "ID of TikTok leads. Every lead will have its own lead_id when exported from TikTok. This feature is in Beta. Please contact your TikTok representative to inquire regarding availability",
          "key": "lead_id",
          "label": "TikTok Lead ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$locale}",
          "description": "The BCP 47 language identifier. For reference, refer to the [IETF BCP 47 standardized code](https://www.rfc-editor.org/rfc/bcp/bcp47.txt).",
          "key": "locale",
          "label": "Locale",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The page URL where the conversion event took place.",
          "key": "url",
          "label": "Page URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$referrer}",
          "description": "The page referrer.",
          "key": "referrer",
          "label": "Page Referrer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "IP address of the browser.",
          "key": "ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "User agent from the user’s device.",
          "key": "user_agent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "brand": undefined,
            "content_category": undefined,
            "content_id": undefined,
            "content_name": undefined,
            "price": undefined,
            "quantity": undefined,
          },
          "description": "Related item details for the event.",
          "key": "contents",
          "label": "Contents",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "choices": [
            {
              "label": "product",
              "value": "product",
            },
            {
              "label": "product_group",
              "value": "product_group",
            },
          ],
          "default": "product",
          "description": "Type of the product item. When the \`content_id\` in the \`Contents\` field is specified as a \`sku_id\`, set this field to \`product\`. When the \`content_id\` in the \`Contents\` field is specified as an \`item_group_id\`, set this field to \`product_group\`.",
          "key": "content_type",
          "label": "Content Type",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.currency}",
          "description": "Currency for the value specified as ISO 4217 code.",
          "key": "currency",
          "label": "Currency",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.value ?? event.properties.revenue}",
          "description": "Value of the order or items sold.",
          "key": "value",
          "label": "Value",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "A string description of the web event.",
          "key": "description",
          "label": "Description",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.query}",
          "description": "The text string that was searched for.",
          "key": "query",
          "label": "Query",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.limited_data_use}",
          "description": "Use this field to flag an event for limited data processing. TikTok will recognize this parameter as a request for limited data processing, and will limit its processing activities accordingly if the event shared occurred in an eligible location. To learn more about the Limited Data Use feature, refer to [Events API 2.0 - Limited Data Use](https://ads.tiktok.com/marketing_api/docs?id=1771101204435970).",
          "key": "limited_data_use",
          "label": "Limited Data Use",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Use this field to specify that events should be test events rather than actual traffic. You can find your Test Event Code in your TikTok Events Manager under the "Test Event" tab. You'll want to remove your Test Event Code when sending real traffic through this integration.",
          "key": "test_event_code",
          "label": "Test Event Code",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "reportOfflineEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Add to Cart",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Checkout Started'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": undefined,
          "description": "Conversion event name. Please refer to the "Offline Standard Events" section on in TikTok’s [Events API 2.0 documentation](https://business-api.tiktok.com/portal/docs?id=1771101186666498) for accepted event names.",
          "key": "event",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "Any hashed ID that can identify a unique user/session.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Timestamp that the event took place, in ISO 8601 format.",
          "key": "timestamp",
          "label": "Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.phone ?? event.context.traits.phone}",
          "description": "A single phone number or array of phone numbers in E.164 standard format. Segment will hash this value before sending to TikTok. At least one phone number value is required if both Email and External ID fields are empty.",
          "key": "phone_numbers",
          "label": "Phone Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.email ?? event.context.traits.email}",
          "description": "A single email address or an array of email addresses. Segment will hash this value before sending to TikTok. At least one email value is required if both Phone Number and External ID fields are empty.",
          "key": "email_addresses",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.order_id}",
          "description": "Order ID of the transaction.",
          "key": "order_id",
          "label": "Order ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.shop_id}",
          "description": "Shop ID of the transaction.",
          "key": "shop_id",
          "label": "Shop ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "Uniquely identifies the user who triggered the conversion event. Segment will hash this value before sending to TikTok. TikTok Offline Conversions Destination supports both string and string[] types for sending external ID(s). At least one external ID value is required if both Email and Phone Number fields are empty.",
          "key": "external_ids",
          "label": "External ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttclid}",
          "description": "The value of the ttclid used to match website visitor events with TikTok ads. The ttclid is valid for 7 days. See [Set up ttclid](https://ads.tiktok.com/marketing_api/docs?rid=4eezrhr6lg4&id=1681728034437121) for details.",
          "key": "ttclid",
          "label": "TikTok Click ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttp}",
          "description": "TikTok Cookie ID. If you also use Pixel SDK and have enabled cookies, Pixel SDK automatically saves a unique identifier in the \`_ttp\` cookie. The value of \`_ttp\` is used to match website visitor events with TikTok ads. You can extract the value of \`_ttp\` and attach the value here. To learn more about the \`ttp\` parameter, refer to [Events API 2.0 - Send TikTok Cookie](https://ads.tiktok.com/marketing_api/docs?id=%201771100936446977) (\`_ttp\`).",
          "key": "ttp",
          "label": "TikTok Cookie ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.lead_id}",
          "description": "ID of TikTok leads. Every lead will have its own lead_id when exported from TikTok. This feature is in Beta. Please contact your TikTok representative to inquire regarding availability",
          "key": "lead_id",
          "label": "TikTok Lead ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$locale}",
          "description": "The BCP 47 language identifier. For reference, refer to the [IETF BCP 47 standardized code](https://www.rfc-editor.org/rfc/bcp/bcp47.txt).",
          "key": "locale",
          "label": "Locale",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The page URL where the conversion event took place.",
          "key": "url",
          "label": "Page URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$referrer}",
          "description": "The page referrer.",
          "key": "referrer",
          "label": "Page Referrer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "IP address of the browser.",
          "key": "ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "User agent from the user’s device.",
          "key": "user_agent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "brand": undefined,
            "content_category": undefined,
            "content_id": undefined,
            "content_name": undefined,
            "price": undefined,
            "quantity": undefined,
          },
          "description": "Related item details for the event.",
          "key": "contents",
          "label": "Contents",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "choices": [
            {
              "label": "product",
              "value": "product",
            },
            {
              "label": "product_group",
              "value": "product_group",
            },
          ],
          "default": "product",
          "description": "Type of the product item. When the \`content_id\` in the \`Contents\` field is specified as a \`sku_id\`, set this field to \`product\`. When the \`content_id\` in the \`Contents\` field is specified as an \`item_group_id\`, set this field to \`product_group\`.",
          "key": "content_type",
          "label": "Content Type",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.currency}",
          "description": "Currency for the value specified as ISO 4217 code.",
          "key": "currency",
          "label": "Currency",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.value ?? event.properties.revenue}",
          "description": "Value of the order or items sold.",
          "key": "value",
          "label": "Value",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "A string description of the web event.",
          "key": "description",
          "label": "Description",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.query}",
          "description": "The text string that was searched for.",
          "key": "query",
          "label": "Query",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.limited_data_use}",
          "description": "Use this field to flag an event for limited data processing. TikTok will recognize this parameter as a request for limited data processing, and will limit its processing activities accordingly if the event shared occurred in an eligible location. To learn more about the Limited Data Use feature, refer to [Events API 2.0 - Limited Data Use](https://ads.tiktok.com/marketing_api/docs?id=1771101204435970).",
          "key": "limited_data_use",
          "label": "Limited Data Use",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Use this field to specify that events should be test events rather than actual traffic. You can find your Test Event Code in your TikTok Events Manager under the "Test Event" tab. You'll want to remove your Test Event Code when sending real traffic through this integration.",
          "key": "test_event_code",
          "label": "Test Event Code",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "reportOfflineEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Initiate Checkout",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Payment Info Entered'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": undefined,
          "description": "Conversion event name. Please refer to the "Offline Standard Events" section on in TikTok’s [Events API 2.0 documentation](https://business-api.tiktok.com/portal/docs?id=1771101186666498) for accepted event names.",
          "key": "event",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "Any hashed ID that can identify a unique user/session.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Timestamp that the event took place, in ISO 8601 format.",
          "key": "timestamp",
          "label": "Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.phone ?? event.context.traits.phone}",
          "description": "A single phone number or array of phone numbers in E.164 standard format. Segment will hash this value before sending to TikTok. At least one phone number value is required if both Email and External ID fields are empty.",
          "key": "phone_numbers",
          "label": "Phone Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.email ?? event.context.traits.email}",
          "description": "A single email address or an array of email addresses. Segment will hash this value before sending to TikTok. At least one email value is required if both Phone Number and External ID fields are empty.",
          "key": "email_addresses",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.order_id}",
          "description": "Order ID of the transaction.",
          "key": "order_id",
          "label": "Order ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.shop_id}",
          "description": "Shop ID of the transaction.",
          "key": "shop_id",
          "label": "Shop ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "Uniquely identifies the user who triggered the conversion event. Segment will hash this value before sending to TikTok. TikTok Offline Conversions Destination supports both string and string[] types for sending external ID(s). At least one external ID value is required if both Email and Phone Number fields are empty.",
          "key": "external_ids",
          "label": "External ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttclid}",
          "description": "The value of the ttclid used to match website visitor events with TikTok ads. The ttclid is valid for 7 days. See [Set up ttclid](https://ads.tiktok.com/marketing_api/docs?rid=4eezrhr6lg4&id=1681728034437121) for details.",
          "key": "ttclid",
          "label": "TikTok Click ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttp}",
          "description": "TikTok Cookie ID. If you also use Pixel SDK and have enabled cookies, Pixel SDK automatically saves a unique identifier in the \`_ttp\` cookie. The value of \`_ttp\` is used to match website visitor events with TikTok ads. You can extract the value of \`_ttp\` and attach the value here. To learn more about the \`ttp\` parameter, refer to [Events API 2.0 - Send TikTok Cookie](https://ads.tiktok.com/marketing_api/docs?id=%201771100936446977) (\`_ttp\`).",
          "key": "ttp",
          "label": "TikTok Cookie ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.lead_id}",
          "description": "ID of TikTok leads. Every lead will have its own lead_id when exported from TikTok. This feature is in Beta. Please contact your TikTok representative to inquire regarding availability",
          "key": "lead_id",
          "label": "TikTok Lead ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$locale}",
          "description": "The BCP 47 language identifier. For reference, refer to the [IETF BCP 47 standardized code](https://www.rfc-editor.org/rfc/bcp/bcp47.txt).",
          "key": "locale",
          "label": "Locale",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The page URL where the conversion event took place.",
          "key": "url",
          "label": "Page URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$referrer}",
          "description": "The page referrer.",
          "key": "referrer",
          "label": "Page Referrer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "IP address of the browser.",
          "key": "ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "User agent from the user’s device.",
          "key": "user_agent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "brand": undefined,
            "content_category": undefined,
            "content_id": undefined,
            "content_name": undefined,
            "price": undefined,
            "quantity": undefined,
          },
          "description": "Related item details for the event.",
          "key": "contents",
          "label": "Contents",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "choices": [
            {
              "label": "product",
              "value": "product",
            },
            {
              "label": "product_group",
              "value": "product_group",
            },
          ],
          "default": "product",
          "description": "Type of the product item. When the \`content_id\` in the \`Contents\` field is specified as a \`sku_id\`, set this field to \`product\`. When the \`content_id\` in the \`Contents\` field is specified as an \`item_group_id\`, set this field to \`product_group\`.",
          "key": "content_type",
          "label": "Content Type",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.currency}",
          "description": "Currency for the value specified as ISO 4217 code.",
          "key": "currency",
          "label": "Currency",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.value ?? event.properties.revenue}",
          "description": "Value of the order or items sold.",
          "key": "value",
          "label": "Value",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "A string description of the web event.",
          "key": "description",
          "label": "Description",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.query}",
          "description": "The text string that was searched for.",
          "key": "query",
          "label": "Query",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.limited_data_use}",
          "description": "Use this field to flag an event for limited data processing. TikTok will recognize this parameter as a request for limited data processing, and will limit its processing activities accordingly if the event shared occurred in an eligible location. To learn more about the Limited Data Use feature, refer to [Events API 2.0 - Limited Data Use](https://ads.tiktok.com/marketing_api/docs?id=1771101204435970).",
          "key": "limited_data_use",
          "label": "Limited Data Use",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Use this field to specify that events should be test events rather than actual traffic. You can find your Test Event Code in your TikTok Events Manager under the "Test Event" tab. You'll want to remove your Test Event Code when sending real traffic through this integration.",
          "key": "test_event_code",
          "label": "Test Event Code",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "reportOfflineEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Add Payment Info",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Order Placed'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": undefined,
          "description": "Conversion event name. Please refer to the "Offline Standard Events" section on in TikTok’s [Events API 2.0 documentation](https://business-api.tiktok.com/portal/docs?id=1771101186666498) for accepted event names.",
          "key": "event",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "Any hashed ID that can identify a unique user/session.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Timestamp that the event took place, in ISO 8601 format.",
          "key": "timestamp",
          "label": "Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.phone ?? event.context.traits.phone}",
          "description": "A single phone number or array of phone numbers in E.164 standard format. Segment will hash this value before sending to TikTok. At least one phone number value is required if both Email and External ID fields are empty.",
          "key": "phone_numbers",
          "label": "Phone Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.email ?? event.context.traits.email}",
          "description": "A single email address or an array of email addresses. Segment will hash this value before sending to TikTok. At least one email value is required if both Phone Number and External ID fields are empty.",
          "key": "email_addresses",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.order_id}",
          "description": "Order ID of the transaction.",
          "key": "order_id",
          "label": "Order ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.shop_id}",
          "description": "Shop ID of the transaction.",
          "key": "shop_id",
          "label": "Shop ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "Uniquely identifies the user who triggered the conversion event. Segment will hash this value before sending to TikTok. TikTok Offline Conversions Destination supports both string and string[] types for sending external ID(s). At least one external ID value is required if both Email and Phone Number fields are empty.",
          "key": "external_ids",
          "label": "External ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttclid}",
          "description": "The value of the ttclid used to match website visitor events with TikTok ads. The ttclid is valid for 7 days. See [Set up ttclid](https://ads.tiktok.com/marketing_api/docs?rid=4eezrhr6lg4&id=1681728034437121) for details.",
          "key": "ttclid",
          "label": "TikTok Click ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttp}",
          "description": "TikTok Cookie ID. If you also use Pixel SDK and have enabled cookies, Pixel SDK automatically saves a unique identifier in the \`_ttp\` cookie. The value of \`_ttp\` is used to match website visitor events with TikTok ads. You can extract the value of \`_ttp\` and attach the value here. To learn more about the \`ttp\` parameter, refer to [Events API 2.0 - Send TikTok Cookie](https://ads.tiktok.com/marketing_api/docs?id=%201771100936446977) (\`_ttp\`).",
          "key": "ttp",
          "label": "TikTok Cookie ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.lead_id}",
          "description": "ID of TikTok leads. Every lead will have its own lead_id when exported from TikTok. This feature is in Beta. Please contact your TikTok representative to inquire regarding availability",
          "key": "lead_id",
          "label": "TikTok Lead ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$locale}",
          "description": "The BCP 47 language identifier. For reference, refer to the [IETF BCP 47 standardized code](https://www.rfc-editor.org/rfc/bcp/bcp47.txt).",
          "key": "locale",
          "label": "Locale",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The page URL where the conversion event took place.",
          "key": "url",
          "label": "Page URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$referrer}",
          "description": "The page referrer.",
          "key": "referrer",
          "label": "Page Referrer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "IP address of the browser.",
          "key": "ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "User agent from the user’s device.",
          "key": "user_agent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "brand": undefined,
            "content_category": undefined,
            "content_id": undefined,
            "content_name": undefined,
            "price": undefined,
            "quantity": undefined,
          },
          "description": "Related item details for the event.",
          "key": "contents",
          "label": "Contents",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "choices": [
            {
              "label": "product",
              "value": "product",
            },
            {
              "label": "product_group",
              "value": "product_group",
            },
          ],
          "default": "product",
          "description": "Type of the product item. When the \`content_id\` in the \`Contents\` field is specified as a \`sku_id\`, set this field to \`product\`. When the \`content_id\` in the \`Contents\` field is specified as an \`item_group_id\`, set this field to \`product_group\`.",
          "key": "content_type",
          "label": "Content Type",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.currency}",
          "description": "Currency for the value specified as ISO 4217 code.",
          "key": "currency",
          "label": "Currency",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.value ?? event.properties.revenue}",
          "description": "Value of the order or items sold.",
          "key": "value",
          "label": "Value",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "A string description of the web event.",
          "key": "description",
          "label": "Description",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.query}",
          "description": "The text string that was searched for.",
          "key": "query",
          "label": "Query",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.limited_data_use}",
          "description": "Use this field to flag an event for limited data processing. TikTok will recognize this parameter as a request for limited data processing, and will limit its processing activities accordingly if the event shared occurred in an eligible location. To learn more about the Limited Data Use feature, refer to [Events API 2.0 - Limited Data Use](https://ads.tiktok.com/marketing_api/docs?id=1771101204435970).",
          "key": "limited_data_use",
          "label": "Limited Data Use",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Use this field to specify that events should be test events rather than actual traffic. You can find your Test Event Code in your TikTok Events Manager under the "Test Event" tab. You'll want to remove your Test Event Code when sending real traffic through this integration.",
          "key": "test_event_code",
          "label": "Test Event Code",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "reportOfflineEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Place an Order",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Download Link Clicked'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": undefined,
          "description": "Conversion event name. Please refer to the "Offline Standard Events" section on in TikTok’s [Events API 2.0 documentation](https://business-api.tiktok.com/portal/docs?id=1771101186666498) for accepted event names.",
          "key": "event",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "Any hashed ID that can identify a unique user/session.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Timestamp that the event took place, in ISO 8601 format.",
          "key": "timestamp",
          "label": "Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.phone ?? event.context.traits.phone}",
          "description": "A single phone number or array of phone numbers in E.164 standard format. Segment will hash this value before sending to TikTok. At least one phone number value is required if both Email and External ID fields are empty.",
          "key": "phone_numbers",
          "label": "Phone Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.email ?? event.context.traits.email}",
          "description": "A single email address or an array of email addresses. Segment will hash this value before sending to TikTok. At least one email value is required if both Phone Number and External ID fields are empty.",
          "key": "email_addresses",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.order_id}",
          "description": "Order ID of the transaction.",
          "key": "order_id",
          "label": "Order ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.shop_id}",
          "description": "Shop ID of the transaction.",
          "key": "shop_id",
          "label": "Shop ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "Uniquely identifies the user who triggered the conversion event. Segment will hash this value before sending to TikTok. TikTok Offline Conversions Destination supports both string and string[] types for sending external ID(s). At least one external ID value is required if both Email and Phone Number fields are empty.",
          "key": "external_ids",
          "label": "External ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttclid}",
          "description": "The value of the ttclid used to match website visitor events with TikTok ads. The ttclid is valid for 7 days. See [Set up ttclid](https://ads.tiktok.com/marketing_api/docs?rid=4eezrhr6lg4&id=1681728034437121) for details.",
          "key": "ttclid",
          "label": "TikTok Click ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttp}",
          "description": "TikTok Cookie ID. If you also use Pixel SDK and have enabled cookies, Pixel SDK automatically saves a unique identifier in the \`_ttp\` cookie. The value of \`_ttp\` is used to match website visitor events with TikTok ads. You can extract the value of \`_ttp\` and attach the value here. To learn more about the \`ttp\` parameter, refer to [Events API 2.0 - Send TikTok Cookie](https://ads.tiktok.com/marketing_api/docs?id=%201771100936446977) (\`_ttp\`).",
          "key": "ttp",
          "label": "TikTok Cookie ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.lead_id}",
          "description": "ID of TikTok leads. Every lead will have its own lead_id when exported from TikTok. This feature is in Beta. Please contact your TikTok representative to inquire regarding availability",
          "key": "lead_id",
          "label": "TikTok Lead ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$locale}",
          "description": "The BCP 47 language identifier. For reference, refer to the [IETF BCP 47 standardized code](https://www.rfc-editor.org/rfc/bcp/bcp47.txt).",
          "key": "locale",
          "label": "Locale",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The page URL where the conversion event took place.",
          "key": "url",
          "label": "Page URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$referrer}",
          "description": "The page referrer.",
          "key": "referrer",
          "label": "Page Referrer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "IP address of the browser.",
          "key": "ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "User agent from the user’s device.",
          "key": "user_agent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "brand": undefined,
            "content_category": undefined,
            "content_id": undefined,
            "content_name": undefined,
            "price": undefined,
            "quantity": undefined,
          },
          "description": "Related item details for the event.",
          "key": "contents",
          "label": "Contents",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "choices": [
            {
              "label": "product",
              "value": "product",
            },
            {
              "label": "product_group",
              "value": "product_group",
            },
          ],
          "default": "product",
          "description": "Type of the product item. When the \`content_id\` in the \`Contents\` field is specified as a \`sku_id\`, set this field to \`product\`. When the \`content_id\` in the \`Contents\` field is specified as an \`item_group_id\`, set this field to \`product_group\`.",
          "key": "content_type",
          "label": "Content Type",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.currency}",
          "description": "Currency for the value specified as ISO 4217 code.",
          "key": "currency",
          "label": "Currency",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.value ?? event.properties.revenue}",
          "description": "Value of the order or items sold.",
          "key": "value",
          "label": "Value",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "A string description of the web event.",
          "key": "description",
          "label": "Description",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.query}",
          "description": "The text string that was searched for.",
          "key": "query",
          "label": "Query",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.limited_data_use}",
          "description": "Use this field to flag an event for limited data processing. TikTok will recognize this parameter as a request for limited data processing, and will limit its processing activities accordingly if the event shared occurred in an eligible location. To learn more about the Limited Data Use feature, refer to [Events API 2.0 - Limited Data Use](https://ads.tiktok.com/marketing_api/docs?id=1771101204435970).",
          "key": "limited_data_use",
          "label": "Limited Data Use",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Use this field to specify that events should be test events rather than actual traffic. You can find your Test Event Code in your TikTok Events Manager under the "Test Event" tab. You'll want to remove your Test Event Code when sending real traffic through this integration.",
          "key": "test_event_code",
          "label": "Test Event Code",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "reportOfflineEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Download",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Signed Up'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": undefined,
          "description": "Conversion event name. Please refer to the "Offline Standard Events" section on in TikTok’s [Events API 2.0 documentation](https://business-api.tiktok.com/portal/docs?id=1771101186666498) for accepted event names.",
          "key": "event",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "Any hashed ID that can identify a unique user/session.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Timestamp that the event took place, in ISO 8601 format.",
          "key": "timestamp",
          "label": "Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.phone ?? event.context.traits.phone}",
          "description": "A single phone number or array of phone numbers in E.164 standard format. Segment will hash this value before sending to TikTok. At least one phone number value is required if both Email and External ID fields are empty.",
          "key": "phone_numbers",
          "label": "Phone Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.email ?? event.context.traits.email}",
          "description": "A single email address or an array of email addresses. Segment will hash this value before sending to TikTok. At least one email value is required if both Phone Number and External ID fields are empty.",
          "key": "email_addresses",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.order_id}",
          "description": "Order ID of the transaction.",
          "key": "order_id",
          "label": "Order ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.shop_id}",
          "description": "Shop ID of the transaction.",
          "key": "shop_id",
          "label": "Shop ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "Uniquely identifies the user who triggered the conversion event. Segment will hash this value before sending to TikTok. TikTok Offline Conversions Destination supports both string and string[] types for sending external ID(s). At least one external ID value is required if both Email and Phone Number fields are empty.",
          "key": "external_ids",
          "label": "External ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttclid}",
          "description": "The value of the ttclid used to match website visitor events with TikTok ads. The ttclid is valid for 7 days. See [Set up ttclid](https://ads.tiktok.com/marketing_api/docs?rid=4eezrhr6lg4&id=1681728034437121) for details.",
          "key": "ttclid",
          "label": "TikTok Click ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttp}",
          "description": "TikTok Cookie ID. If you also use Pixel SDK and have enabled cookies, Pixel SDK automatically saves a unique identifier in the \`_ttp\` cookie. The value of \`_ttp\` is used to match website visitor events with TikTok ads. You can extract the value of \`_ttp\` and attach the value here. To learn more about the \`ttp\` parameter, refer to [Events API 2.0 - Send TikTok Cookie](https://ads.tiktok.com/marketing_api/docs?id=%201771100936446977) (\`_ttp\`).",
          "key": "ttp",
          "label": "TikTok Cookie ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.lead_id}",
          "description": "ID of TikTok leads. Every lead will have its own lead_id when exported from TikTok. This feature is in Beta. Please contact your TikTok representative to inquire regarding availability",
          "key": "lead_id",
          "label": "TikTok Lead ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$locale}",
          "description": "The BCP 47 language identifier. For reference, refer to the [IETF BCP 47 standardized code](https://www.rfc-editor.org/rfc/bcp/bcp47.txt).",
          "key": "locale",
          "label": "Locale",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The page URL where the conversion event took place.",
          "key": "url",
          "label": "Page URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$referrer}",
          "description": "The page referrer.",
          "key": "referrer",
          "label": "Page Referrer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "IP address of the browser.",
          "key": "ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "User agent from the user’s device.",
          "key": "user_agent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "brand": undefined,
            "content_category": undefined,
            "content_id": undefined,
            "content_name": undefined,
            "price": undefined,
            "quantity": undefined,
          },
          "description": "Related item details for the event.",
          "key": "contents",
          "label": "Contents",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "choices": [
            {
              "label": "product",
              "value": "product",
            },
            {
              "label": "product_group",
              "value": "product_group",
            },
          ],
          "default": "product",
          "description": "Type of the product item. When the \`content_id\` in the \`Contents\` field is specified as a \`sku_id\`, set this field to \`product\`. When the \`content_id\` in the \`Contents\` field is specified as an \`item_group_id\`, set this field to \`product_group\`.",
          "key": "content_type",
          "label": "Content Type",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.currency}",
          "description": "Currency for the value specified as ISO 4217 code.",
          "key": "currency",
          "label": "Currency",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.value ?? event.properties.revenue}",
          "description": "Value of the order or items sold.",
          "key": "value",
          "label": "Value",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "A string description of the web event.",
          "key": "description",
          "label": "Description",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.query}",
          "description": "The text string that was searched for.",
          "key": "query",
          "label": "Query",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.limited_data_use}",
          "description": "Use this field to flag an event for limited data processing. TikTok will recognize this parameter as a request for limited data processing, and will limit its processing activities accordingly if the event shared occurred in an eligible location. To learn more about the Limited Data Use feature, refer to [Events API 2.0 - Limited Data Use](https://ads.tiktok.com/marketing_api/docs?id=1771101204435970).",
          "key": "limited_data_use",
          "label": "Limited Data Use",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Use this field to specify that events should be test events rather than actual traffic. You can find your Test Event Code in your TikTok Events Manager under the "Test Event" tab. You'll want to remove your Test Event Code when sending real traffic through this integration.",
          "key": "test_event_code",
          "label": "Test Event Code",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "reportOfflineEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Complete Registration",
    },
  ],
  "name": "TikTok Offline Conversions Sandbox",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 126 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Tiktok Conversions Sandbox",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/conversions.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "tiktok-conversions-sandbox",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Your TikTok Access Token. Please see TikTok’s [Events API documentation](https://ads.tiktok.com/marketing_api/docs?id=1701890979375106) for information on how to generate an access token via the TikTok Ads Manager or API.",
      "key": "accessToken",
      "label": "Access Token",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "Your TikTok Pixel ID. Please see TikTok’s [Events API documentation](https://ads.tiktok.com/marketing_api/docs?id=1701890979375106) for information on how to find this value.",
      "key": "pixelCode",
      "label": "Pixel Code",
      "required": true,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Order Completed'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": undefined,
          "description": "Conversion event name. Please refer to the "Supported Web Events" section on in TikTok’s [Events API documentation](https://ads.tiktok.com/marketing_api/docs?id=1701890979375106) for accepted event names.",
          "key": "event",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "Any hashed ID that can identify a unique user/session.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Timestamp that the event took place, in ISO 8601 format.",
          "key": "timestamp",
          "label": "Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.phone ?? event.context.traits.phone}",
          "description": "A single phone number or array of phone numbers in E.164 standard format. Segment will hash this value before sending to TikTok. e.g. +14150000000. Segment will hash this value before sending to TikTok.",
          "key": "phone_number",
          "label": "Phone Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.email ?? event.context.traits.email}",
          "description": "A single email address or an array of email addresses. Segment will hash this value before sending to TikTok.",
          "key": "email",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.order_id}",
          "description": "Order ID of the transaction.",
          "key": "order_id",
          "label": "Order ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.shop_id}",
          "description": "Shop ID of the transaction.",
          "key": "shop_id",
          "label": "Shop ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "Uniquely identifies the user who triggered the conversion event. Segment will hash this value before sending to TikTok. TikTok Conversions Destination supports both string and string[] types for sending external ID(s).",
          "key": "external_id",
          "label": "External ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttclid}",
          "description": "The value of the ttclid used to match website visitor events with TikTok ads. The ttclid is valid for 7 days. See [Set up ttclid](https://ads.tiktok.com/marketing_api/docs?rid=4eezrhr6lg4&id=1681728034437121) for details.",
          "key": "ttclid",
          "label": "TikTok Click ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttp}",
          "description": "TikTok Cookie ID. If you also use Pixel SDK and have enabled cookies, Pixel SDK automatically saves a unique identifier in the \`_ttp\` cookie. The value of \`_ttp\` is used to match website visitor events with TikTok ads. You can extract the value of \`_ttp\` and attach the value here. To learn more about the \`ttp\` parameter, refer to [Events API 2.0 - Send TikTok Cookie](https://ads.tiktok.com/marketing_api/docs?id=%201771100936446977) (\`_ttp\`).",
          "key": "ttp",
          "label": "TikTok Cookie ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.lead_id}",
          "description": "ID of TikTok leads. Every lead will have its own lead_id when exported from TikTok. This feature is in Beta. Please contact your TikTok representative to inquire regarding availability",
          "key": "lead_id",
          "label": "TikTok Lead ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$locale}",
          "description": "The BCP 47 language identifier. For reference, refer to the [IETF BCP 47 standardized code](https://www.rfc-editor.org/rfc/bcp/bcp47.txt).",
          "key": "locale",
          "label": "Locale",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The page URL where the conversion event took place.",
          "key": "url",
          "label": "Page URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$referrer}",
          "description": "The page referrer.",
          "key": "referrer",
          "label": "Page Referrer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "IP address of the browser.",
          "key": "ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "User agent from the user’s device.",
          "key": "user_agent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "brand": undefined,
            "content_category": undefined,
            "content_id": undefined,
            "content_name": undefined,
            "price": undefined,
            "quantity": undefined,
          },
          "description": "Related item details for the event.",
          "key": "contents",
          "label": "Contents",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "choices": [
            {
              "label": "product",
              "value": "product",
            },
            {
              "label": "product_group",
              "value": "product_group",
            },
          ],
          "default": "product",
          "description": "Type of the product item. When the \`content_id\` in the \`Contents\` field is specified as a \`sku_id\`, set this field to \`product\`. When the \`content_id\` in the \`Contents\` field is specified as an \`item_group_id\`, set this field to \`product_group\`.",
          "key": "content_type",
          "label": "Content Type",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.currency}",
          "description": "Currency for the value specified as ISO 4217 code.",
          "key": "currency",
          "label": "Currency",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.value ?? event.properties.revenue}",
          "description": "Value of the order or items sold.",
          "key": "value",
          "label": "Value",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "A string description of the web event.",
          "key": "description",
          "label": "Description",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.query}",
          "description": "The text string that was searched for.",
          "key": "query",
          "label": "Query",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.limited_data_use}",
          "description": "Use this field to flag an event for limited data processing. TikTok will recognize this parameter as a request for limited data processing, and will limit its processing activities accordingly if the event shared occurred in an eligible location. To learn more about the Limited Data Use feature, refer to [Events API 2.0 - Limited Data Use](https://ads.tiktok.com/marketing_api/docs?id=1771101204435970).",
          "key": "limited_data_use",
          "label": "Limited Data Use",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Use this field to specify that events should be test events rather than actual traffic. You can find your Test Event Code in your TikTok Events Manager under the "Test Event" tab. You'll want to remove your Test Event Code when sending real traffic through this integration.",
          "key": "test_event_code",
          "label": "Test Event Code",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "reportWebEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Complete Payment",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Callback Started'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": undefined,
          "description": "Conversion event name. Please refer to the "Supported Web Events" section on in TikTok’s [Events API documentation](https://ads.tiktok.com/marketing_api/docs?id=1701890979375106) for accepted event names.",
          "key": "event",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "Any hashed ID that can identify a unique user/session.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Timestamp that the event took place, in ISO 8601 format.",
          "key": "timestamp",
          "label": "Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.phone ?? event.context.traits.phone}",
          "description": "A single phone number or array of phone numbers in E.164 standard format. Segment will hash this value before sending to TikTok. e.g. +14150000000. Segment will hash this value before sending to TikTok.",
          "key": "phone_number",
          "label": "Phone Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.email ?? event.context.traits.email}",
          "description": "A single email address or an array of email addresses. Segment will hash this value before sending to TikTok.",
          "key": "email",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.order_id}",
          "description": "Order ID of the transaction.",
          "key": "order_id",
          "label": "Order ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.shop_id}",
          "description": "Shop ID of the transaction.",
          "key": "shop_id",
          "label": "Shop ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "Uniquely identifies the user who triggered the conversion event. Segment will hash this value before sending to TikTok. TikTok Conversions Destination supports both string and string[] types for sending external ID(s).",
          "key": "external_id",
          "label": "External ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttclid}",
          "description": "The value of the ttclid used to match website visitor events with TikTok ads. The ttclid is valid for 7 days. See [Set up ttclid](https://ads.tiktok.com/marketing_api/docs?rid=4eezrhr6lg4&id=1681728034437121) for details.",
          "key": "ttclid",
          "label": "TikTok Click ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttp}",
          "description": "TikTok Cookie ID. If you also use Pixel SDK and have enabled cookies, Pixel SDK automatically saves a unique identifier in the \`_ttp\` cookie. The value of \`_ttp\` is used to match website visitor events with TikTok ads. You can extract the value of \`_ttp\` and attach the value here. To learn more about the \`ttp\` parameter, refer to [Events API 2.0 - Send TikTok Cookie](https://ads.tiktok.com/marketing_api/docs?id=%201771100936446977) (\`_ttp\`).",
          "key": "ttp",
          "label": "TikTok Cookie ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.lead_id}",
          "description": "ID of TikTok leads. Every lead will have its own lead_id when exported from TikTok. This feature is in Beta. Please contact your TikTok representative to inquire regarding availability",
          "key": "lead_id",
          "label": "TikTok Lead ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$locale}",
          "description": "The BCP 47 language identifier. For reference, refer to the [IETF BCP 47 standardized code](https://www.rfc-editor.org/rfc/bcp/bcp47.txt).",
          "key": "locale",
          "label": "Locale",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The page URL where the conversion event took place.",
          "key": "url",
          "label": "Page URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$referrer}",
          "description": "The page referrer.",
          "key": "referrer",
          "label": "Page Referrer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "IP address of the browser.",
          "key": "ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "User agent from the user’s device.",
          "key": "user_agent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "brand": undefined,
            "content_category": undefined,
            "content_id": undefined,
            "content_name": undefined,
            "price": undefined,
            "quantity": undefined,
          },
          "description": "Related item details for the event.",
          "key": "contents",
          "label": "Contents",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "choices": [
            {
              "label": "product",
              "value": "product",
            },
            {
              "label": "product_group",
              "value": "product_group",
            },
          ],
          "default": "product",
          "description": "Type of the product item. When the \`content_id\` in the \`Contents\` field is specified as a \`sku_id\`, set this field to \`product\`. When the \`content_id\` in the \`Contents\` field is specified as an \`item_group_id\`, set this field to \`product_group\`.",
          "key": "content_type",
          "label": "Content Type",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.currency}",
          "description": "Currency for the value specified as ISO 4217 code.",
          "key": "currency",
          "label": "Currency",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.value ?? event.properties.revenue}",
          "description": "Value of the order or items sold.",
          "key": "value",
          "label": "Value",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "A string description of the web event.",
          "key": "description",
          "label": "Description",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.query}",
          "description": "The text string that was searched for.",
          "key": "query",
          "label": "Query",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.limited_data_use}",
          "description": "Use this field to flag an event for limited data processing. TikTok will recognize this parameter as a request for limited data processing, and will limit its processing activities accordingly if the event shared occurred in an eligible location. To learn more about the Limited Data Use feature, refer to [Events API 2.0 - Limited Data Use](https://ads.tiktok.com/marketing_api/docs?id=1771101204435970).",
          "key": "limited_data_use",
          "label": "Limited Data Use",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Use this field to specify that events should be test events rather than actual traffic. You can find your Test Event Code in your TikTok Events Manager under the "Test Event" tab. You'll want to remove your Test Event Code when sending real traffic through this integration.",
          "key": "test_event_code",
          "label": "Test Event Code",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "reportWebEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Contact",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Subscription Created'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": undefined,
          "description": "Conversion event name. Please refer to the "Supported Web Events" section on in TikTok’s [Events API documentation](https://ads.tiktok.com/marketing_api/docs?id=1701890979375106) for accepted event names.",
          "key": "event",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "Any hashed ID that can identify a unique user/session.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Timestamp that the event took place, in ISO 8601 format.",
          "key": "timestamp",
          "label": "Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.phone ?? event.context.traits.phone}",
          "description": "A single phone number or array of phone numbers in E.164 standard format. Segment will hash this value before sending to TikTok. e.g. +14150000000. Segment will hash this value before sending to TikTok.",
          "key": "phone_number",
          "label": "Phone Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.email ?? event.context.traits.email}",
          "description": "A single email address or an array of email addresses. Segment will hash this value before sending to TikTok.",
          "key": "email",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.order_id}",
          "description": "Order ID of the transaction.",
          "key": "order_id",
          "label": "Order ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.shop_id}",
          "description": "Shop ID of the transaction.",
          "key": "shop_id",
          "label": "Shop ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "Uniquely identifies the user who triggered the conversion event. Segment will hash this value before sending to TikTok. TikTok Conversions Destination supports both string and string[] types for sending external ID(s).",
          "key": "external_id",
          "label": "External ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttclid}",
          "description": "The value of the ttclid used to match website visitor events with TikTok ads. The ttclid is valid for 7 days. See [Set up ttclid](https://ads.tiktok.com/marketing_api/docs?rid=4eezrhr6lg4&id=1681728034437121) for details.",
          "key": "ttclid",
          "label": "TikTok Click ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttp}",
          "description": "TikTok Cookie ID. If you also use Pixel SDK and have enabled cookies, Pixel SDK automatically saves a unique identifier in the \`_ttp\` cookie. The value of \`_ttp\` is used to match website visitor events with TikTok ads. You can extract the value of \`_ttp\` and attach the value here. To learn more about the \`ttp\` parameter, refer to [Events API 2.0 - Send TikTok Cookie](https://ads.tiktok.com/marketing_api/docs?id=%201771100936446977) (\`_ttp\`).",
          "key": "ttp",
          "label": "TikTok Cookie ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.lead_id}",
          "description": "ID of TikTok leads. Every lead will have its own lead_id when exported from TikTok. This feature is in Beta. Please contact your TikTok representative to inquire regarding availability",
          "key": "lead_id",
          "label": "TikTok Lead ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$locale}",
          "description": "The BCP 47 language identifier. For reference, refer to the [IETF BCP 47 standardized code](https://www.rfc-editor.org/rfc/bcp/bcp47.txt).",
          "key": "locale",
          "label": "Locale",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The page URL where the conversion event took place.",
          "key": "url",
          "label": "Page URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$referrer}",
          "description": "The page referrer.",
          "key": "referrer",
          "label": "Page Referrer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "IP address of the browser.",
          "key": "ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "User agent from the user’s device.",
          "key": "user_agent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "brand": undefined,
            "content_category": undefined,
            "content_id": undefined,
            "content_name": undefined,
            "price": undefined,
            "quantity": undefined,
          },
          "description": "Related item details for the event.",
          "key": "contents",
          "label": "Contents",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "choices": [
            {
              "label": "product",
              "value": "product",
            },
            {
              "label": "product_group",
              "value": "product_group",
            },
          ],
          "default": "product",
          "description": "Type of the product item. When the \`content_id\` in the \`Contents\` field is specified as a \`sku_id\`, set this field to \`product\`. When the \`content_id\` in the \`Contents\` field is specified as an \`item_group_id\`, set this field to \`product_group\`.",
          "key": "content_type",
          "label": "Content Type",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.currency}",
          "description": "Currency for the value specified as ISO 4217 code.",
          "key": "currency",
          "label": "Currency",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.value ?? event.properties.revenue}",
          "description": "Value of the order or items sold.",
          "key": "value",
          "label": "Value",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "A string description of the web event.",
          "key": "description",
          "label": "Description",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.query}",
          "description": "The text string that was searched for.",
          "key": "query",
          "label": "Query",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.limited_data_use}",
          "description": "Use this field to flag an event for limited data processing. TikTok will recognize this parameter as a request for limited data processing, and will limit its processing activities accordingly if the event shared occurred in an eligible location. To learn more about the Limited Data Use feature, refer to [Events API 2.0 - Limited Data Use](https://ads.tiktok.com/marketing_api/docs?id=1771101204435970).",
          "key": "limited_data_use",
          "label": "Limited Data Use",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Use this field to specify that events should be test events rather than actual traffic. You can find your Test Event Code in your TikTok Events Manager under the "Test Event" tab. You'll want to remove your Test Event Code when sending real traffic through this integration.",
          "key": "test_event_code",
          "label": "Test Event Code",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "reportWebEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Subscribe",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Form Submitted'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": undefined,
          "description": "Conversion event name. Please refer to the "Supported Web Events" section on in TikTok’s [Events API documentation](https://ads.tiktok.com/marketing_api/docs?id=1701890979375106) for accepted event names.",
          "key": "event",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "Any hashed ID that can identify a unique user/session.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Timestamp that the event took place, in ISO 8601 format.",
          "key": "timestamp",
          "label": "Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.phone ?? event.context.traits.phone}",
          "description": "A single phone number or array of phone numbers in E.164 standard format. Segment will hash this value before sending to TikTok. e.g. +14150000000. Segment will hash this value before sending to TikTok.",
          "key": "phone_number",
          "label": "Phone Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.email ?? event.context.traits.email}",
          "description": "A single email address or an array of email addresses. Segment will hash this value before sending to TikTok.",
          "key": "email",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.order_id}",
          "description": "Order ID of the transaction.",
          "key": "order_id",
          "label": "Order ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.shop_id}",
          "description": "Shop ID of the transaction.",
          "key": "shop_id",
          "label": "Shop ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "Uniquely identifies the user who triggered the conversion event. Segment will hash this value before sending to TikTok. TikTok Conversions Destination supports both string and string[] types for sending external ID(s).",
          "key": "external_id",
          "label": "External ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttclid}",
          "description": "The value of the ttclid used to match website visitor events with TikTok ads. The ttclid is valid for 7 days. See [Set up ttclid](https://ads.tiktok.com/marketing_api/docs?rid=4eezrhr6lg4&id=1681728034437121) for details.",
          "key": "ttclid",
          "label": "TikTok Click ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttp}",
          "description": "TikTok Cookie ID. If you also use Pixel SDK and have enabled cookies, Pixel SDK automatically saves a unique identifier in the \`_ttp\` cookie. The value of \`_ttp\` is used to match website visitor events with TikTok ads. You can extract the value of \`_ttp\` and attach the value here. To learn more about the \`ttp\` parameter, refer to [Events API 2.0 - Send TikTok Cookie](https://ads.tiktok.com/marketing_api/docs?id=%201771100936446977) (\`_ttp\`).",
          "key": "ttp",
          "label": "TikTok Cookie ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.lead_id}",
          "description": "ID of TikTok leads. Every lead will have its own lead_id when exported from TikTok. This feature is in Beta. Please contact your TikTok representative to inquire regarding availability",
          "key": "lead_id",
          "label": "TikTok Lead ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$locale}",
          "description": "The BCP 47 language identifier. For reference, refer to the [IETF BCP 47 standardized code](https://www.rfc-editor.org/rfc/bcp/bcp47.txt).",
          "key": "locale",
          "label": "Locale",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The page URL where the conversion event took place.",
          "key": "url",
          "label": "Page URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$referrer}",
          "description": "The page referrer.",
          "key": "referrer",
          "label": "Page Referrer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "IP address of the browser.",
          "key": "ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "User agent from the user’s device.",
          "key": "user_agent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "brand": undefined,
            "content_category": undefined,
            "content_id": undefined,
            "content_name": undefined,
            "price": undefined,
            "quantity": undefined,
          },
          "description": "Related item details for the event.",
          "key": "contents",
          "label": "Contents",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "choices": [
            {
              "label": "product",
              "value": "product",
            },
            {
              "label": "product_group",
              "value": "product_group",
            },
          ],
          "default": "product",
          "description": "Type of the product item. When the \`content_id\` in the \`Contents\` field is specified as a \`sku_id\`, set this field to \`product\`. When the \`content_id\` in the \`Contents\` field is specified as an \`item_group_id\`, set this field to \`product_group\`.",
          "key": "content_type",
          "label": "Content Type",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.currency}",
          "description": "Currency for the value specified as ISO 4217 code.",
          "key": "currency",
          "label": "Currency",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.value ?? event.properties.revenue}",
          "description": "Value of the order or items sold.",
          "key": "value",
          "label": "Value",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "A string description of the web event.",
          "key": "description",
          "label": "Description",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.query}",
          "description": "The text string that was searched for.",
          "key": "query",
          "label": "Query",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.limited_data_use}",
          "description": "Use this field to flag an event for limited data processing. TikTok will recognize this parameter as a request for limited data processing, and will limit its processing activities accordingly if the event shared occurred in an eligible location. To learn more about the Limited Data Use feature, refer to [Events API 2.0 - Limited Data Use](https://ads.tiktok.com/marketing_api/docs?id=1771101204435970).",
          "key": "limited_data_use",
          "label": "Limited Data Use",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Use this field to specify that events should be test events rather than actual traffic. You can find your Test Event Code in your TikTok Events Manager under the "Test Event" tab. You'll want to remove your Test Event Code when sending real traffic through this integration.",
          "key": "test_event_code",
          "label": "Test Event Code",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "reportWebEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Submit Form",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "type='page'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": undefined,
          "description": "Conversion event name. Please refer to the "Supported Web Events" section on in TikTok’s [Events API documentation](https://ads.tiktok.com/marketing_api/docs?id=1701890979375106) for accepted event names.",
          "key": "event",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "Any hashed ID that can identify a unique user/session.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Timestamp that the event took place, in ISO 8601 format.",
          "key": "timestamp",
          "label": "Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.phone ?? event.context.traits.phone}",
          "description": "A single phone number or array of phone numbers in E.164 standard format. Segment will hash this value before sending to TikTok. e.g. +14150000000. Segment will hash this value before sending to TikTok.",
          "key": "phone_number",
          "label": "Phone Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.email ?? event.context.traits.email}",
          "description": "A single email address or an array of email addresses. Segment will hash this value before sending to TikTok.",
          "key": "email",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.order_id}",
          "description": "Order ID of the transaction.",
          "key": "order_id",
          "label": "Order ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.shop_id}",
          "description": "Shop ID of the transaction.",
          "key": "shop_id",
          "label": "Shop ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "Uniquely identifies the user who triggered the conversion event. Segment will hash this value before sending to TikTok. TikTok Conversions Destination supports both string and string[] types for sending external ID(s).",
          "key": "external_id",
          "label": "External ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttclid}",
          "description": "The value of the ttclid used to match website visitor events with TikTok ads. The ttclid is valid for 7 days. See [Set up ttclid](https://ads.tiktok.com/marketing_api/docs?rid=4eezrhr6lg4&id=1681728034437121) for details.",
          "key": "ttclid",
          "label": "TikTok Click ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttp}",
          "description": "TikTok Cookie ID. If you also use Pixel SDK and have enabled cookies, Pixel SDK automatically saves a unique identifier in the \`_ttp\` cookie. The value of \`_ttp\` is used to match website visitor events with TikTok ads. You can extract the value of \`_ttp\` and attach the value here. To learn more about the \`ttp\` parameter, refer to [Events API 2.0 - Send TikTok Cookie](https://ads.tiktok.com/marketing_api/docs?id=%201771100936446977) (\`_ttp\`).",
          "key": "ttp",
          "label": "TikTok Cookie ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.lead_id}",
          "description": "ID of TikTok leads. Every lead will have its own lead_id when exported from TikTok. This feature is in Beta. Please contact your TikTok representative to inquire regarding availability",
          "key": "lead_id",
          "label": "TikTok Lead ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$locale}",
          "description": "The BCP 47 language identifier. For reference, refer to the [IETF BCP 47 standardized code](https://www.rfc-editor.org/rfc/bcp/bcp47.txt).",
          "key": "locale",
          "label": "Locale",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The page URL where the conversion event took place.",
          "key": "url",
          "label": "Page URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$referrer}",
          "description": "The page referrer.",
          "key": "referrer",
          "label": "Page Referrer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "IP address of the browser.",
          "key": "ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "User agent from the user’s device.",
          "key": "user_agent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "brand": undefined,
            "content_category": undefined,
            "content_id": undefined,
            "content_name": undefined,
            "price": undefined,
            "quantity": undefined,
          },
          "description": "Related item details for the event.",
          "key": "contents",
          "label": "Contents",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "choices": [
            {
              "label": "product",
              "value": "product",
            },
            {
              "label": "product_group",
              "value": "product_group",
            },
          ],
          "default": "product",
          "description": "Type of the product item. When the \`content_id\` in the \`Contents\` field is specified as a \`sku_id\`, set this field to \`product\`. When the \`content_id\` in the \`Contents\` field is specified as an \`item_group_id\`, set this field to \`product_group\`.",
          "key": "content_type",
          "label": "Content Type",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.currency}",
          "description": "Currency for the value specified as ISO 4217 code.",
          "key": "currency",
          "label": "Currency",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.value ?? event.properties.revenue}",
          "description": "Value of the order or items sold.",
          "key": "value",
          "label": "Value",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "A string description of the web event.",
          "key": "description",
          "label": "Description",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.query}",
          "description": "The text string that was searched for.",
          "key": "query",
          "label": "Query",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.limited_data_use}",
          "description": "Use this field to flag an event for limited data processing. TikTok will recognize this parameter as a request for limited data processing, and will limit its processing activities accordingly if the event shared occurred in an eligible location. To learn more about the Limited Data Use feature, refer to [Events API 2.0 - Limited Data Use](https://ads.tiktok.com/marketing_api/docs?id=1771101204435970).",
          "key": "limited_data_use",
          "label": "Limited Data Use",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Use this field to specify that events should be test events rather than actual traffic. You can find your Test Event Code in your TikTok Events Manager under the "Test Event" tab. You'll want to remove your Test Event Code when sending real traffic through this integration.",
          "key": "test_event_code",
          "label": "Test Event Code",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "reportWebEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Page View",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Product Viewed'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": undefined,
          "description": "Conversion event name. Please refer to the "Supported Web Events" section on in TikTok’s [Events API documentation](https://ads.tiktok.com/marketing_api/docs?id=1701890979375106) for accepted event names.",
          "key": "event",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "Any hashed ID that can identify a unique user/session.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Timestamp that the event took place, in ISO 8601 format.",
          "key": "timestamp",
          "label": "Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.phone ?? event.context.traits.phone}",
          "description": "A single phone number or array of phone numbers in E.164 standard format. Segment will hash this value before sending to TikTok. e.g. +14150000000. Segment will hash this value before sending to TikTok.",
          "key": "phone_number",
          "label": "Phone Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.email ?? event.context.traits.email}",
          "description": "A single email address or an array of email addresses. Segment will hash this value before sending to TikTok.",
          "key": "email",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.order_id}",
          "description": "Order ID of the transaction.",
          "key": "order_id",
          "label": "Order ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.shop_id}",
          "description": "Shop ID of the transaction.",
          "key": "shop_id",
          "label": "Shop ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "Uniquely identifies the user who triggered the conversion event. Segment will hash this value before sending to TikTok. TikTok Conversions Destination supports both string and string[] types for sending external ID(s).",
          "key": "external_id",
          "label": "External ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttclid}",
          "description": "The value of the ttclid used to match website visitor events with TikTok ads. The ttclid is valid for 7 days. See [Set up ttclid](https://ads.tiktok.com/marketing_api/docs?rid=4eezrhr6lg4&id=1681728034437121) for details.",
          "key": "ttclid",
          "label": "TikTok Click ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttp}",
          "description": "TikTok Cookie ID. If you also use Pixel SDK and have enabled cookies, Pixel SDK automatically saves a unique identifier in the \`_ttp\` cookie. The value of \`_ttp\` is used to match website visitor events with TikTok ads. You can extract the value of \`_ttp\` and attach the value here. To learn more about the \`ttp\` parameter, refer to [Events API 2.0 - Send TikTok Cookie](https://ads.tiktok.com/marketing_api/docs?id=%201771100936446977) (\`_ttp\`).",
          "key": "ttp",
          "label": "TikTok Cookie ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.lead_id}",
          "description": "ID of TikTok leads. Every lead will have its own lead_id when exported from TikTok. This feature is in Beta. Please contact your TikTok representative to inquire regarding availability",
          "key": "lead_id",
          "label": "TikTok Lead ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$locale}",
          "description": "The BCP 47 language identifier. For reference, refer to the [IETF BCP 47 standardized code](https://www.rfc-editor.org/rfc/bcp/bcp47.txt).",
          "key": "locale",
          "label": "Locale",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The page URL where the conversion event took place.",
          "key": "url",
          "label": "Page URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$referrer}",
          "description": "The page referrer.",
          "key": "referrer",
          "label": "Page Referrer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "IP address of the browser.",
          "key": "ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "User agent from the user’s device.",
          "key": "user_agent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "brand": undefined,
            "content_category": undefined,
            "content_id": undefined,
            "content_name": undefined,
            "price": undefined,
            "quantity": undefined,
          },
          "description": "Related item details for the event.",
          "key": "contents",
          "label": "Contents",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "choices": [
            {
              "label": "product",
              "value": "product",
            },
            {
              "label": "product_group",
              "value": "product_group",
            },
          ],
          "default": "product",
          "description": "Type of the product item. When the \`content_id\` in the \`Contents\` field is specified as a \`sku_id\`, set this field to \`product\`. When the \`content_id\` in the \`Contents\` field is specified as an \`item_group_id\`, set this field to \`product_group\`.",
          "key": "content_type",
          "label": "Content Type",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.currency}",
          "description": "Currency for the value specified as ISO 4217 code.",
          "key": "currency",
          "label": "Currency",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.value ?? event.properties.revenue}",
          "description": "Value of the order or items sold.",
          "key": "value",
          "label": "Value",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "A string description of the web event.",
          "key": "description",
          "label": "Description",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.query}",
          "description": "The text string that was searched for.",
          "key": "query",
          "label": "Query",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.limited_data_use}",
          "description": "Use this field to flag an event for limited data processing. TikTok will recognize this parameter as a request for limited data processing, and will limit its processing activities accordingly if the event shared occurred in an eligible location. To learn more about the Limited Data Use feature, refer to [Events API 2.0 - Limited Data Use](https://ads.tiktok.com/marketing_api/docs?id=1771101204435970).",
          "key": "limited_data_use",
          "label": "Limited Data Use",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Use this field to specify that events should be test events rather than actual traffic. You can find your Test Event Code in your TikTok Events Manager under the "Test Event" tab. You'll want to remove your Test Event Code when sending real traffic through this integration.",
          "key": "test_event_code",
          "label": "Test Event Code",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "reportWebEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "View Content",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Product Clicked'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": undefined,
          "description": "Conversion event name. Please refer to the "Supported Web Events" section on in TikTok’s [Events API documentation](https://ads.tiktok.com/marketing_api/docs?id=1701890979375106) for accepted event names.",
          "key": "event",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "Any hashed ID that can identify a unique user/session.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Timestamp that the event took place, in ISO 8601 format.",
          "key": "timestamp",
          "label": "Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.phone ?? event.context.traits.phone}",
          "description": "A single phone number or array of phone numbers in E.164 standard format. Segment will hash this value before sending to TikTok. e.g. +14150000000. Segment will hash this value before sending to TikTok.",
          "key": "phone_number",
          "label": "Phone Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.email ?? event.context.traits.email}",
          "description": "A single email address or an array of email addresses. Segment will hash this value before sending to TikTok.",
          "key": "email",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.order_id}",
          "description": "Order ID of the transaction.",
          "key": "order_id",
          "label": "Order ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.shop_id}",
          "description": "Shop ID of the transaction.",
          "key": "shop_id",
          "label": "Shop ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "Uniquely identifies the user who triggered the conversion event. Segment will hash this value before sending to TikTok. TikTok Conversions Destination supports both string and string[] types for sending external ID(s).",
          "key": "external_id",
          "label": "External ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttclid}",
          "description": "The value of the ttclid used to match website visitor events with TikTok ads. The ttclid is valid for 7 days. See [Set up ttclid](https://ads.tiktok.com/marketing_api/docs?rid=4eezrhr6lg4&id=1681728034437121) for details.",
          "key": "ttclid",
          "label": "TikTok Click ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttp}",
          "description": "TikTok Cookie ID. If you also use Pixel SDK and have enabled cookies, Pixel SDK automatically saves a unique identifier in the \`_ttp\` cookie. The value of \`_ttp\` is used to match website visitor events with TikTok ads. You can extract the value of \`_ttp\` and attach the value here. To learn more about the \`ttp\` parameter, refer to [Events API 2.0 - Send TikTok Cookie](https://ads.tiktok.com/marketing_api/docs?id=%201771100936446977) (\`_ttp\`).",
          "key": "ttp",
          "label": "TikTok Cookie ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.lead_id}",
          "description": "ID of TikTok leads. Every lead will have its own lead_id when exported from TikTok. This feature is in Beta. Please contact your TikTok representative to inquire regarding availability",
          "key": "lead_id",
          "label": "TikTok Lead ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$locale}",
          "description": "The BCP 47 language identifier. For reference, refer to the [IETF BCP 47 standardized code](https://www.rfc-editor.org/rfc/bcp/bcp47.txt).",
          "key": "locale",
          "label": "Locale",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The page URL where the conversion event took place.",
          "key": "url",
          "label": "Page URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$referrer}",
          "description": "The page referrer.",
          "key": "referrer",
          "label": "Page Referrer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "IP address of the browser.",
          "key": "ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "User agent from the user’s device.",
          "key": "user_agent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "brand": undefined,
            "content_category": undefined,
            "content_id": undefined,
            "content_name": undefined,
            "price": undefined,
            "quantity": undefined,
          },
          "description": "Related item details for the event.",
          "key": "contents",
          "label": "Contents",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "choices": [
            {
              "label": "product",
              "value": "product",
            },
            {
              "label": "product_group",
              "value": "product_group",
            },
          ],
          "default": "product",
          "description": "Type of the product item. When the \`content_id\` in the \`Contents\` field is specified as a \`sku_id\`, set this field to \`product\`. When the \`content_id\` in the \`Contents\` field is specified as an \`item_group_id\`, set this field to \`product_group\`.",
          "key": "content_type",
          "label": "Content Type",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.currency}",
          "description": "Currency for the value specified as ISO 4217 code.",
          "key": "currency",
          "label": "Currency",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.value ?? event.properties.revenue}",
          "description": "Value of the order or items sold.",
          "key": "value",
          "label": "Value",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "A string description of the web event.",
          "key": "description",
          "label": "Description",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.query}",
          "description": "The text string that was searched for.",
          "key": "query",
          "label": "Query",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.limited_data_use}",
          "description": "Use this field to flag an event for limited data processing. TikTok will recognize this parameter as a request for limited data processing, and will limit its processing activities accordingly if the event shared occurred in an eligible location. To learn more about the Limited Data Use feature, refer to [Events API 2.0 - Limited Data Use](https://ads.tiktok.com/marketing_api/docs?id=1771101204435970).",
          "key": "limited_data_use",
          "label": "Limited Data Use",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Use this field to specify that events should be test events rather than actual traffic. You can find your Test Event Code in your TikTok Events Manager under the "Test Event" tab. You'll want to remove your Test Event Code when sending real traffic through this integration.",
          "key": "test_event_code",
          "label": "Test Event Code",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "reportWebEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Click Button",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Products Searched'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": undefined,
          "description": "Conversion event name. Please refer to the "Supported Web Events" section on in TikTok’s [Events API documentation](https://ads.tiktok.com/marketing_api/docs?id=1701890979375106) for accepted event names.",
          "key": "event",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "Any hashed ID that can identify a unique user/session.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Timestamp that the event took place, in ISO 8601 format.",
          "key": "timestamp",
          "label": "Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.phone ?? event.context.traits.phone}",
          "description": "A single phone number or array of phone numbers in E.164 standard format. Segment will hash this value before sending to TikTok. e.g. +14150000000. Segment will hash this value before sending to TikTok.",
          "key": "phone_number",
          "label": "Phone Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.email ?? event.context.traits.email}",
          "description": "A single email address or an array of email addresses. Segment will hash this value before sending to TikTok.",
          "key": "email",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.order_id}",
          "description": "Order ID of the transaction.",
          "key": "order_id",
          "label": "Order ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.shop_id}",
          "description": "Shop ID of the transaction.",
          "key": "shop_id",
          "label": "Shop ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "Uniquely identifies the user who triggered the conversion event. Segment will hash this value before sending to TikTok. TikTok Conversions Destination supports both string and string[] types for sending external ID(s).",
          "key": "external_id",
          "label": "External ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttclid}",
          "description": "The value of the ttclid used to match website visitor events with TikTok ads. The ttclid is valid for 7 days. See [Set up ttclid](https://ads.tiktok.com/marketing_api/docs?rid=4eezrhr6lg4&id=1681728034437121) for details.",
          "key": "ttclid",
          "label": "TikTok Click ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttp}",
          "description": "TikTok Cookie ID. If you also use Pixel SDK and have enabled cookies, Pixel SDK automatically saves a unique identifier in the \`_ttp\` cookie. The value of \`_ttp\` is used to match website visitor events with TikTok ads. You can extract the value of \`_ttp\` and attach the value here. To learn more about the \`ttp\` parameter, refer to [Events API 2.0 - Send TikTok Cookie](https://ads.tiktok.com/marketing_api/docs?id=%201771100936446977) (\`_ttp\`).",
          "key": "ttp",
          "label": "TikTok Cookie ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.lead_id}",
          "description": "ID of TikTok leads. Every lead will have its own lead_id when exported from TikTok. This feature is in Beta. Please contact your TikTok representative to inquire regarding availability",
          "key": "lead_id",
          "label": "TikTok Lead ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$locale}",
          "description": "The BCP 47 language identifier. For reference, refer to the [IETF BCP 47 standardized code](https://www.rfc-editor.org/rfc/bcp/bcp47.txt).",
          "key": "locale",
          "label": "Locale",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The page URL where the conversion event took place.",
          "key": "url",
          "label": "Page URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$referrer}",
          "description": "The page referrer.",
          "key": "referrer",
          "label": "Page Referrer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "IP address of the browser.",
          "key": "ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "User agent from the user’s device.",
          "key": "user_agent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "brand": undefined,
            "content_category": undefined,
            "content_id": undefined,
            "content_name": undefined,
            "price": undefined,
            "quantity": undefined,
          },
          "description": "Related item details for the event.",
          "key": "contents",
          "label": "Contents",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "choices": [
            {
              "label": "product",
              "value": "product",
            },
            {
              "label": "product_group",
              "value": "product_group",
            },
          ],
          "default": "product",
          "description": "Type of the product item. When the \`content_id\` in the \`Contents\` field is specified as a \`sku_id\`, set this field to \`product\`. When the \`content_id\` in the \`Contents\` field is specified as an \`item_group_id\`, set this field to \`product_group\`.",
          "key": "content_type",
          "label": "Content Type",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.currency}",
          "description": "Currency for the value specified as ISO 4217 code.",
          "key": "currency",
          "label": "Currency",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.value ?? event.properties.revenue}",
          "description": "Value of the order or items sold.",
          "key": "value",
          "label": "Value",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "A string description of the web event.",
          "key": "description",
          "label": "Description",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.query}",
          "description": "The text string that was searched for.",
          "key": "query",
          "label": "Query",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.limited_data_use}",
          "description": "Use this field to flag an event for limited data processing. TikTok will recognize this parameter as a request for limited data processing, and will limit its processing activities accordingly if the event shared occurred in an eligible location. To learn more about the Limited Data Use feature, refer to [Events API 2.0 - Limited Data Use](https://ads.tiktok.com/marketing_api/docs?id=1771101204435970).",
          "key": "limited_data_use",
          "label": "Limited Data Use",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Use this field to specify that events should be test events rather than actual traffic. You can find your Test Event Code in your TikTok Events Manager under the "Test Event" tab. You'll want to remove your Test Event Code when sending real traffic through this integration.",
          "key": "test_event_code",
          "label": "Test Event Code",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "reportWebEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Search",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Product Added to Wishlist'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": undefined,
          "description": "Conversion event name. Please refer to the "Supported Web Events" section on in TikTok’s [Events API documentation](https://ads.tiktok.com/marketing_api/docs?id=1701890979375106) for accepted event names.",
          "key": "event",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "Any hashed ID that can identify a unique user/session.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Timestamp that the event took place, in ISO 8601 format.",
          "key": "timestamp",
          "label": "Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.phone ?? event.context.traits.phone}",
          "description": "A single phone number or array of phone numbers in E.164 standard format. Segment will hash this value before sending to TikTok. e.g. +14150000000. Segment will hash this value before sending to TikTok.",
          "key": "phone_number",
          "label": "Phone Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.email ?? event.context.traits.email}",
          "description": "A single email address or an array of email addresses. Segment will hash this value before sending to TikTok.",
          "key": "email",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.order_id}",
          "description": "Order ID of the transaction.",
          "key": "order_id",
          "label": "Order ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.shop_id}",
          "description": "Shop ID of the transaction.",
          "key": "shop_id",
          "label": "Shop ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "Uniquely identifies the user who triggered the conversion event. Segment will hash this value before sending to TikTok. TikTok Conversions Destination supports both string and string[] types for sending external ID(s).",
          "key": "external_id",
          "label": "External ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttclid}",
          "description": "The value of the ttclid used to match website visitor events with TikTok ads. The ttclid is valid for 7 days. See [Set up ttclid](https://ads.tiktok.com/marketing_api/docs?rid=4eezrhr6lg4&id=1681728034437121) for details.",
          "key": "ttclid",
          "label": "TikTok Click ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttp}",
          "description": "TikTok Cookie ID. If you also use Pixel SDK and have enabled cookies, Pixel SDK automatically saves a unique identifier in the \`_ttp\` cookie. The value of \`_ttp\` is used to match website visitor events with TikTok ads. You can extract the value of \`_ttp\` and attach the value here. To learn more about the \`ttp\` parameter, refer to [Events API 2.0 - Send TikTok Cookie](https://ads.tiktok.com/marketing_api/docs?id=%201771100936446977) (\`_ttp\`).",
          "key": "ttp",
          "label": "TikTok Cookie ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.lead_id}",
          "description": "ID of TikTok leads. Every lead will have its own lead_id when exported from TikTok. This feature is in Beta. Please contact your TikTok representative to inquire regarding availability",
          "key": "lead_id",
          "label": "TikTok Lead ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$locale}",
          "description": "The BCP 47 language identifier. For reference, refer to the [IETF BCP 47 standardized code](https://www.rfc-editor.org/rfc/bcp/bcp47.txt).",
          "key": "locale",
          "label": "Locale",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The page URL where the conversion event took place.",
          "key": "url",
          "label": "Page URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$referrer}",
          "description": "The page referrer.",
          "key": "referrer",
          "label": "Page Referrer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "IP address of the browser.",
          "key": "ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "User agent from the user’s device.",
          "key": "user_agent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "brand": undefined,
            "content_category": undefined,
            "content_id": undefined,
            "content_name": undefined,
            "price": undefined,
            "quantity": undefined,
          },
          "description": "Related item details for the event.",
          "key": "contents",
          "label": "Contents",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "choices": [
            {
              "label": "product",
              "value": "product",
            },
            {
              "label": "product_group",
              "value": "product_group",
            },
          ],
          "default": "product",
          "description": "Type of the product item. When the \`content_id\` in the \`Contents\` field is specified as a \`sku_id\`, set this field to \`product\`. When the \`content_id\` in the \`Contents\` field is specified as an \`item_group_id\`, set this field to \`product_group\`.",
          "key": "content_type",
          "label": "Content Type",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.currency}",
          "description": "Currency for the value specified as ISO 4217 code.",
          "key": "currency",
          "label": "Currency",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.value ?? event.properties.revenue}",
          "description": "Value of the order or items sold.",
          "key": "value",
          "label": "Value",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "A string description of the web event.",
          "key": "description",
          "label": "Description",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.query}",
          "description": "The text string that was searched for.",
          "key": "query",
          "label": "Query",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.limited_data_use}",
          "description": "Use this field to flag an event for limited data processing. TikTok will recognize this parameter as a request for limited data processing, and will limit its processing activities accordingly if the event shared occurred in an eligible location. To learn more about the Limited Data Use feature, refer to [Events API 2.0 - Limited Data Use](https://ads.tiktok.com/marketing_api/docs?id=1771101204435970).",
          "key": "limited_data_use",
          "label": "Limited Data Use",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Use this field to specify that events should be test events rather than actual traffic. You can find your Test Event Code in your TikTok Events Manager under the "Test Event" tab. You'll want to remove your Test Event Code when sending real traffic through this integration.",
          "key": "test_event_code",
          "label": "Test Event Code",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "reportWebEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Add to Wishlist",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Product Added'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": undefined,
          "description": "Conversion event name. Please refer to the "Supported Web Events" section on in TikTok’s [Events API documentation](https://ads.tiktok.com/marketing_api/docs?id=1701890979375106) for accepted event names.",
          "key": "event",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "Any hashed ID that can identify a unique user/session.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Timestamp that the event took place, in ISO 8601 format.",
          "key": "timestamp",
          "label": "Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.phone ?? event.context.traits.phone}",
          "description": "A single phone number or array of phone numbers in E.164 standard format. Segment will hash this value before sending to TikTok. e.g. +14150000000. Segment will hash this value before sending to TikTok.",
          "key": "phone_number",
          "label": "Phone Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.email ?? event.context.traits.email}",
          "description": "A single email address or an array of email addresses. Segment will hash this value before sending to TikTok.",
          "key": "email",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.order_id}",
          "description": "Order ID of the transaction.",
          "key": "order_id",
          "label": "Order ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.shop_id}",
          "description": "Shop ID of the transaction.",
          "key": "shop_id",
          "label": "Shop ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "Uniquely identifies the user who triggered the conversion event. Segment will hash this value before sending to TikTok. TikTok Conversions Destination supports both string and string[] types for sending external ID(s).",
          "key": "external_id",
          "label": "External ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttclid}",
          "description": "The value of the ttclid used to match website visitor events with TikTok ads. The ttclid is valid for 7 days. See [Set up ttclid](https://ads.tiktok.com/marketing_api/docs?rid=4eezrhr6lg4&id=1681728034437121) for details.",
          "key": "ttclid",
          "label": "TikTok Click ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttp}",
          "description": "TikTok Cookie ID. If you also use Pixel SDK and have enabled cookies, Pixel SDK automatically saves a unique identifier in the \`_ttp\` cookie. The value of \`_ttp\` is used to match website visitor events with TikTok ads. You can extract the value of \`_ttp\` and attach the value here. To learn more about the \`ttp\` parameter, refer to [Events API 2.0 - Send TikTok Cookie](https://ads.tiktok.com/marketing_api/docs?id=%201771100936446977) (\`_ttp\`).",
          "key": "ttp",
          "label": "TikTok Cookie ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.lead_id}",
          "description": "ID of TikTok leads. Every lead will have its own lead_id when exported from TikTok. This feature is in Beta. Please contact your TikTok representative to inquire regarding availability",
          "key": "lead_id",
          "label": "TikTok Lead ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$locale}",
          "description": "The BCP 47 language identifier. For reference, refer to the [IETF BCP 47 standardized code](https://www.rfc-editor.org/rfc/bcp/bcp47.txt).",
          "key": "locale",
          "label": "Locale",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The page URL where the conversion event took place.",
          "key": "url",
          "label": "Page URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$referrer}",
          "description": "The page referrer.",
          "key": "referrer",
          "label": "Page Referrer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "IP address of the browser.",
          "key": "ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "User agent from the user’s device.",
          "key": "user_agent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "brand": undefined,
            "content_category": undefined,
            "content_id": undefined,
            "content_name": undefined,
            "price": undefined,
            "quantity": undefined,
          },
          "description": "Related item details for the event.",
          "key": "contents",
          "label": "Contents",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "choices": [
            {
              "label": "product",
              "value": "product",
            },
            {
              "label": "product_group",
              "value": "product_group",
            },
          ],
          "default": "product",
          "description": "Type of the product item. When the \`content_id\` in the \`Contents\` field is specified as a \`sku_id\`, set this field to \`product\`. When the \`content_id\` in the \`Contents\` field is specified as an \`item_group_id\`, set this field to \`product_group\`.",
          "key": "content_type",
          "label": "Content Type",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.currency}",
          "description": "Currency for the value specified as ISO 4217 code.",
          "key": "currency",
          "label": "Currency",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.value ?? event.properties.revenue}",
          "description": "Value of the order or items sold.",
          "key": "value",
          "label": "Value",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "A string description of the web event.",
          "key": "description",
          "label": "Description",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.query}",
          "description": "The text string that was searched for.",
          "key": "query",
          "label": "Query",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.limited_data_use}",
          "description": "Use this field to flag an event for limited data processing. TikTok will recognize this parameter as a request for limited data processing, and will limit its processing activities accordingly if the event shared occurred in an eligible location. To learn more about the Limited Data Use feature, refer to [Events API 2.0 - Limited Data Use](https://ads.tiktok.com/marketing_api/docs?id=1771101204435970).",
          "key": "limited_data_use",
          "label": "Limited Data Use",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Use this field to specify that events should be test events rather than actual traffic. You can find your Test Event Code in your TikTok Events Manager under the "Test Event" tab. You'll want to remove your Test Event Code when sending real traffic through this integration.",
          "key": "test_event_code",
          "label": "Test Event Code",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "reportWebEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Add to Cart",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Checkout Started'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": undefined,
          "description": "Conversion event name. Please refer to the "Supported Web Events" section on in TikTok’s [Events API documentation](https://ads.tiktok.com/marketing_api/docs?id=1701890979375106) for accepted event names.",
          "key": "event",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "Any hashed ID that can identify a unique user/session.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Timestamp that the event took place, in ISO 8601 format.",
          "key": "timestamp",
          "label": "Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.phone ?? event.context.traits.phone}",
          "description": "A single phone number or array of phone numbers in E.164 standard format. Segment will hash this value before sending to TikTok. e.g. +14150000000. Segment will hash this value before sending to TikTok.",
          "key": "phone_number",
          "label": "Phone Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.email ?? event.context.traits.email}",
          "description": "A single email address or an array of email addresses. Segment will hash this value before sending to TikTok.",
          "key": "email",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.order_id}",
          "description": "Order ID of the transaction.",
          "key": "order_id",
          "label": "Order ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.shop_id}",
          "description": "Shop ID of the transaction.",
          "key": "shop_id",
          "label": "Shop ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "Uniquely identifies the user who triggered the conversion event. Segment will hash this value before sending to TikTok. TikTok Conversions Destination supports both string and string[] types for sending external ID(s).",
          "key": "external_id",
          "label": "External ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttclid}",
          "description": "The value of the ttclid used to match website visitor events with TikTok ads. The ttclid is valid for 7 days. See [Set up ttclid](https://ads.tiktok.com/marketing_api/docs?rid=4eezrhr6lg4&id=1681728034437121) for details.",
          "key": "ttclid",
          "label": "TikTok Click ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttp}",
          "description": "TikTok Cookie ID. If you also use Pixel SDK and have enabled cookies, Pixel SDK automatically saves a unique identifier in the \`_ttp\` cookie. The value of \`_ttp\` is used to match website visitor events with TikTok ads. You can extract the value of \`_ttp\` and attach the value here. To learn more about the \`ttp\` parameter, refer to [Events API 2.0 - Send TikTok Cookie](https://ads.tiktok.com/marketing_api/docs?id=%201771100936446977) (\`_ttp\`).",
          "key": "ttp",
          "label": "TikTok Cookie ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.lead_id}",
          "description": "ID of TikTok leads. Every lead will have its own lead_id when exported from TikTok. This feature is in Beta. Please contact your TikTok representative to inquire regarding availability",
          "key": "lead_id",
          "label": "TikTok Lead ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$locale}",
          "description": "The BCP 47 language identifier. For reference, refer to the [IETF BCP 47 standardized code](https://www.rfc-editor.org/rfc/bcp/bcp47.txt).",
          "key": "locale",
          "label": "Locale",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The page URL where the conversion event took place.",
          "key": "url",
          "label": "Page URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$referrer}",
          "description": "The page referrer.",
          "key": "referrer",
          "label": "Page Referrer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "IP address of the browser.",
          "key": "ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "User agent from the user’s device.",
          "key": "user_agent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "brand": undefined,
            "content_category": undefined,
            "content_id": undefined,
            "content_name": undefined,
            "price": undefined,
            "quantity": undefined,
          },
          "description": "Related item details for the event.",
          "key": "contents",
          "label": "Contents",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "choices": [
            {
              "label": "product",
              "value": "product",
            },
            {
              "label": "product_group",
              "value": "product_group",
            },
          ],
          "default": "product",
          "description": "Type of the product item. When the \`content_id\` in the \`Contents\` field is specified as a \`sku_id\`, set this field to \`product\`. When the \`content_id\` in the \`Contents\` field is specified as an \`item_group_id\`, set this field to \`product_group\`.",
          "key": "content_type",
          "label": "Content Type",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.currency}",
          "description": "Currency for the value specified as ISO 4217 code.",
          "key": "currency",
          "label": "Currency",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.value ?? event.properties.revenue}",
          "description": "Value of the order or items sold.",
          "key": "value",
          "label": "Value",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "A string description of the web event.",
          "key": "description",
          "label": "Description",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.query}",
          "description": "The text string that was searched for.",
          "key": "query",
          "label": "Query",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.limited_data_use}",
          "description": "Use this field to flag an event for limited data processing. TikTok will recognize this parameter as a request for limited data processing, and will limit its processing activities accordingly if the event shared occurred in an eligible location. To learn more about the Limited Data Use feature, refer to [Events API 2.0 - Limited Data Use](https://ads.tiktok.com/marketing_api/docs?id=1771101204435970).",
          "key": "limited_data_use",
          "label": "Limited Data Use",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Use this field to specify that events should be test events rather than actual traffic. You can find your Test Event Code in your TikTok Events Manager under the "Test Event" tab. You'll want to remove your Test Event Code when sending real traffic through this integration.",
          "key": "test_event_code",
          "label": "Test Event Code",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "reportWebEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Initiate Checkout",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Payment Info Entered'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": undefined,
          "description": "Conversion event name. Please refer to the "Supported Web Events" section on in TikTok’s [Events API documentation](https://ads.tiktok.com/marketing_api/docs?id=1701890979375106) for accepted event names.",
          "key": "event",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "Any hashed ID that can identify a unique user/session.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Timestamp that the event took place, in ISO 8601 format.",
          "key": "timestamp",
          "label": "Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.phone ?? event.context.traits.phone}",
          "description": "A single phone number or array of phone numbers in E.164 standard format. Segment will hash this value before sending to TikTok. e.g. +14150000000. Segment will hash this value before sending to TikTok.",
          "key": "phone_number",
          "label": "Phone Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.email ?? event.context.traits.email}",
          "description": "A single email address or an array of email addresses. Segment will hash this value before sending to TikTok.",
          "key": "email",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.order_id}",
          "description": "Order ID of the transaction.",
          "key": "order_id",
          "label": "Order ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.shop_id}",
          "description": "Shop ID of the transaction.",
          "key": "shop_id",
          "label": "Shop ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "Uniquely identifies the user who triggered the conversion event. Segment will hash this value before sending to TikTok. TikTok Conversions Destination supports both string and string[] types for sending external ID(s).",
          "key": "external_id",
          "label": "External ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttclid}",
          "description": "The value of the ttclid used to match website visitor events with TikTok ads. The ttclid is valid for 7 days. See [Set up ttclid](https://ads.tiktok.com/marketing_api/docs?rid=4eezrhr6lg4&id=1681728034437121) for details.",
          "key": "ttclid",
          "label": "TikTok Click ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttp}",
          "description": "TikTok Cookie ID. If you also use Pixel SDK and have enabled cookies, Pixel SDK automatically saves a unique identifier in the \`_ttp\` cookie. The value of \`_ttp\` is used to match website visitor events with TikTok ads. You can extract the value of \`_ttp\` and attach the value here. To learn more about the \`ttp\` parameter, refer to [Events API 2.0 - Send TikTok Cookie](https://ads.tiktok.com/marketing_api/docs?id=%201771100936446977) (\`_ttp\`).",
          "key": "ttp",
          "label": "TikTok Cookie ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.lead_id}",
          "description": "ID of TikTok leads. Every lead will have its own lead_id when exported from TikTok. This feature is in Beta. Please contact your TikTok representative to inquire regarding availability",
          "key": "lead_id",
          "label": "TikTok Lead ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$locale}",
          "description": "The BCP 47 language identifier. For reference, refer to the [IETF BCP 47 standardized code](https://www.rfc-editor.org/rfc/bcp/bcp47.txt).",
          "key": "locale",
          "label": "Locale",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The page URL where the conversion event took place.",
          "key": "url",
          "label": "Page URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$referrer}",
          "description": "The page referrer.",
          "key": "referrer",
          "label": "Page Referrer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "IP address of the browser.",
          "key": "ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "User agent from the user’s device.",
          "key": "user_agent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "brand": undefined,
            "content_category": undefined,
            "content_id": undefined,
            "content_name": undefined,
            "price": undefined,
            "quantity": undefined,
          },
          "description": "Related item details for the event.",
          "key": "contents",
          "label": "Contents",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "choices": [
            {
              "label": "product",
              "value": "product",
            },
            {
              "label": "product_group",
              "value": "product_group",
            },
          ],
          "default": "product",
          "description": "Type of the product item. When the \`content_id\` in the \`Contents\` field is specified as a \`sku_id\`, set this field to \`product\`. When the \`content_id\` in the \`Contents\` field is specified as an \`item_group_id\`, set this field to \`product_group\`.",
          "key": "content_type",
          "label": "Content Type",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.currency}",
          "description": "Currency for the value specified as ISO 4217 code.",
          "key": "currency",
          "label": "Currency",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.value ?? event.properties.revenue}",
          "description": "Value of the order or items sold.",
          "key": "value",
          "label": "Value",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "A string description of the web event.",
          "key": "description",
          "label": "Description",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.query}",
          "description": "The text string that was searched for.",
          "key": "query",
          "label": "Query",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.limited_data_use}",
          "description": "Use this field to flag an event for limited data processing. TikTok will recognize this parameter as a request for limited data processing, and will limit its processing activities accordingly if the event shared occurred in an eligible location. To learn more about the Limited Data Use feature, refer to [Events API 2.0 - Limited Data Use](https://ads.tiktok.com/marketing_api/docs?id=1771101204435970).",
          "key": "limited_data_use",
          "label": "Limited Data Use",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Use this field to specify that events should be test events rather than actual traffic. You can find your Test Event Code in your TikTok Events Manager under the "Test Event" tab. You'll want to remove your Test Event Code when sending real traffic through this integration.",
          "key": "test_event_code",
          "label": "Test Event Code",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "reportWebEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Add Payment Info",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Order Placed'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": undefined,
          "description": "Conversion event name. Please refer to the "Supported Web Events" section on in TikTok’s [Events API documentation](https://ads.tiktok.com/marketing_api/docs?id=1701890979375106) for accepted event names.",
          "key": "event",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "Any hashed ID that can identify a unique user/session.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Timestamp that the event took place, in ISO 8601 format.",
          "key": "timestamp",
          "label": "Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.phone ?? event.context.traits.phone}",
          "description": "A single phone number or array of phone numbers in E.164 standard format. Segment will hash this value before sending to TikTok. e.g. +14150000000. Segment will hash this value before sending to TikTok.",
          "key": "phone_number",
          "label": "Phone Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.email ?? event.context.traits.email}",
          "description": "A single email address or an array of email addresses. Segment will hash this value before sending to TikTok.",
          "key": "email",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.order_id}",
          "description": "Order ID of the transaction.",
          "key": "order_id",
          "label": "Order ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.shop_id}",
          "description": "Shop ID of the transaction.",
          "key": "shop_id",
          "label": "Shop ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "Uniquely identifies the user who triggered the conversion event. Segment will hash this value before sending to TikTok. TikTok Conversions Destination supports both string and string[] types for sending external ID(s).",
          "key": "external_id",
          "label": "External ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttclid}",
          "description": "The value of the ttclid used to match website visitor events with TikTok ads. The ttclid is valid for 7 days. See [Set up ttclid](https://ads.tiktok.com/marketing_api/docs?rid=4eezrhr6lg4&id=1681728034437121) for details.",
          "key": "ttclid",
          "label": "TikTok Click ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttp}",
          "description": "TikTok Cookie ID. If you also use Pixel SDK and have enabled cookies, Pixel SDK automatically saves a unique identifier in the \`_ttp\` cookie. The value of \`_ttp\` is used to match website visitor events with TikTok ads. You can extract the value of \`_ttp\` and attach the value here. To learn more about the \`ttp\` parameter, refer to [Events API 2.0 - Send TikTok Cookie](https://ads.tiktok.com/marketing_api/docs?id=%201771100936446977) (\`_ttp\`).",
          "key": "ttp",
          "label": "TikTok Cookie ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.lead_id}",
          "description": "ID of TikTok leads. Every lead will have its own lead_id when exported from TikTok. This feature is in Beta. Please contact your TikTok representative to inquire regarding availability",
          "key": "lead_id",
          "label": "TikTok Lead ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$locale}",
          "description": "The BCP 47 language identifier. For reference, refer to the [IETF BCP 47 standardized code](https://www.rfc-editor.org/rfc/bcp/bcp47.txt).",
          "key": "locale",
          "label": "Locale",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The page URL where the conversion event took place.",
          "key": "url",
          "label": "Page URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$referrer}",
          "description": "The page referrer.",
          "key": "referrer",
          "label": "Page Referrer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "IP address of the browser.",
          "key": "ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "User agent from the user’s device.",
          "key": "user_agent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "brand": undefined,
            "content_category": undefined,
            "content_id": undefined,
            "content_name": undefined,
            "price": undefined,
            "quantity": undefined,
          },
          "description": "Related item details for the event.",
          "key": "contents",
          "label": "Contents",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "choices": [
            {
              "label": "product",
              "value": "product",
            },
            {
              "label": "product_group",
              "value": "product_group",
            },
          ],
          "default": "product",
          "description": "Type of the product item. When the \`content_id\` in the \`Contents\` field is specified as a \`sku_id\`, set this field to \`product\`. When the \`content_id\` in the \`Contents\` field is specified as an \`item_group_id\`, set this field to \`product_group\`.",
          "key": "content_type",
          "label": "Content Type",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.currency}",
          "description": "Currency for the value specified as ISO 4217 code.",
          "key": "currency",
          "label": "Currency",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.value ?? event.properties.revenue}",
          "description": "Value of the order or items sold.",
          "key": "value",
          "label": "Value",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "A string description of the web event.",
          "key": "description",
          "label": "Description",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.query}",
          "description": "The text string that was searched for.",
          "key": "query",
          "label": "Query",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.limited_data_use}",
          "description": "Use this field to flag an event for limited data processing. TikTok will recognize this parameter as a request for limited data processing, and will limit its processing activities accordingly if the event shared occurred in an eligible location. To learn more about the Limited Data Use feature, refer to [Events API 2.0 - Limited Data Use](https://ads.tiktok.com/marketing_api/docs?id=1771101204435970).",
          "key": "limited_data_use",
          "label": "Limited Data Use",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Use this field to specify that events should be test events rather than actual traffic. You can find your Test Event Code in your TikTok Events Manager under the "Test Event" tab. You'll want to remove your Test Event Code when sending real traffic through this integration.",
          "key": "test_event_code",
          "label": "Test Event Code",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "reportWebEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Place an Order",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Download Link Clicked'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": undefined,
          "description": "Conversion event name. Please refer to the "Supported Web Events" section on in TikTok’s [Events API documentation](https://ads.tiktok.com/marketing_api/docs?id=1701890979375106) for accepted event names.",
          "key": "event",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "Any hashed ID that can identify a unique user/session.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Timestamp that the event took place, in ISO 8601 format.",
          "key": "timestamp",
          "label": "Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.phone ?? event.context.traits.phone}",
          "description": "A single phone number or array of phone numbers in E.164 standard format. Segment will hash this value before sending to TikTok. e.g. +14150000000. Segment will hash this value before sending to TikTok.",
          "key": "phone_number",
          "label": "Phone Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.email ?? event.context.traits.email}",
          "description": "A single email address or an array of email addresses. Segment will hash this value before sending to TikTok.",
          "key": "email",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.order_id}",
          "description": "Order ID of the transaction.",
          "key": "order_id",
          "label": "Order ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.shop_id}",
          "description": "Shop ID of the transaction.",
          "key": "shop_id",
          "label": "Shop ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "Uniquely identifies the user who triggered the conversion event. Segment will hash this value before sending to TikTok. TikTok Conversions Destination supports both string and string[] types for sending external ID(s).",
          "key": "external_id",
          "label": "External ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttclid}",
          "description": "The value of the ttclid used to match website visitor events with TikTok ads. The ttclid is valid for 7 days. See [Set up ttclid](https://ads.tiktok.com/marketing_api/docs?rid=4eezrhr6lg4&id=1681728034437121) for details.",
          "key": "ttclid",
          "label": "TikTok Click ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttp}",
          "description": "TikTok Cookie ID. If you also use Pixel SDK and have enabled cookies, Pixel SDK automatically saves a unique identifier in the \`_ttp\` cookie. The value of \`_ttp\` is used to match website visitor events with TikTok ads. You can extract the value of \`_ttp\` and attach the value here. To learn more about the \`ttp\` parameter, refer to [Events API 2.0 - Send TikTok Cookie](https://ads.tiktok.com/marketing_api/docs?id=%201771100936446977) (\`_ttp\`).",
          "key": "ttp",
          "label": "TikTok Cookie ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.lead_id}",
          "description": "ID of TikTok leads. Every lead will have its own lead_id when exported from TikTok. This feature is in Beta. Please contact your TikTok representative to inquire regarding availability",
          "key": "lead_id",
          "label": "TikTok Lead ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$locale}",
          "description": "The BCP 47 language identifier. For reference, refer to the [IETF BCP 47 standardized code](https://www.rfc-editor.org/rfc/bcp/bcp47.txt).",
          "key": "locale",
          "label": "Locale",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The page URL where the conversion event took place.",
          "key": "url",
          "label": "Page URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$referrer}",
          "description": "The page referrer.",
          "key": "referrer",
          "label": "Page Referrer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "IP address of the browser.",
          "key": "ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "User agent from the user’s device.",
          "key": "user_agent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "brand": undefined,
            "content_category": undefined,
            "content_id": undefined,
            "content_name": undefined,
            "price": undefined,
            "quantity": undefined,
          },
          "description": "Related item details for the event.",
          "key": "contents",
          "label": "Contents",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "choices": [
            {
              "label": "product",
              "value": "product",
            },
            {
              "label": "product_group",
              "value": "product_group",
            },
          ],
          "default": "product",
          "description": "Type of the product item. When the \`content_id\` in the \`Contents\` field is specified as a \`sku_id\`, set this field to \`product\`. When the \`content_id\` in the \`Contents\` field is specified as an \`item_group_id\`, set this field to \`product_group\`.",
          "key": "content_type",
          "label": "Content Type",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.currency}",
          "description": "Currency for the value specified as ISO 4217 code.",
          "key": "currency",
          "label": "Currency",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.value ?? event.properties.revenue}",
          "description": "Value of the order or items sold.",
          "key": "value",
          "label": "Value",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "A string description of the web event.",
          "key": "description",
          "label": "Description",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.query}",
          "description": "The text string that was searched for.",
          "key": "query",
          "label": "Query",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.limited_data_use}",
          "description": "Use this field to flag an event for limited data processing. TikTok will recognize this parameter as a request for limited data processing, and will limit its processing activities accordingly if the event shared occurred in an eligible location. To learn more about the Limited Data Use feature, refer to [Events API 2.0 - Limited Data Use](https://ads.tiktok.com/marketing_api/docs?id=1771101204435970).",
          "key": "limited_data_use",
          "label": "Limited Data Use",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Use this field to specify that events should be test events rather than actual traffic. You can find your Test Event Code in your TikTok Events Manager under the "Test Event" tab. You'll want to remove your Test Event Code when sending real traffic through this integration.",
          "key": "test_event_code",
          "label": "Test Event Code",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "reportWebEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Download",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Signed Up'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": undefined,
          "description": "Conversion event name. Please refer to the "Supported Web Events" section on in TikTok’s [Events API documentation](https://ads.tiktok.com/marketing_api/docs?id=1701890979375106) for accepted event names.",
          "key": "event",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "Any hashed ID that can identify a unique user/session.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Timestamp that the event took place, in ISO 8601 format.",
          "key": "timestamp",
          "label": "Event Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.phone ?? event.context.traits.phone}",
          "description": "A single phone number or array of phone numbers in E.164 standard format. Segment will hash this value before sending to TikTok. e.g. +14150000000. Segment will hash this value before sending to TikTok.",
          "key": "phone_number",
          "label": "Phone Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.email ?? event.context.traits.email}",
          "description": "A single email address or an array of email addresses. Segment will hash this value before sending to TikTok.",
          "key": "email",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.order_id}",
          "description": "Order ID of the transaction.",
          "key": "order_id",
          "label": "Order ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.shop_id}",
          "description": "Shop ID of the transaction.",
          "key": "shop_id",
          "label": "Shop ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "Uniquely identifies the user who triggered the conversion event. Segment will hash this value before sending to TikTok. TikTok Conversions Destination supports both string and string[] types for sending external ID(s).",
          "key": "external_id",
          "label": "External ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttclid}",
          "description": "The value of the ttclid used to match website visitor events with TikTok ads. The ttclid is valid for 7 days. See [Set up ttclid](https://ads.tiktok.com/marketing_api/docs?rid=4eezrhr6lg4&id=1681728034437121) for details.",
          "key": "ttclid",
          "label": "TikTok Click ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.ttp}",
          "description": "TikTok Cookie ID. If you also use Pixel SDK and have enabled cookies, Pixel SDK automatically saves a unique identifier in the \`_ttp\` cookie. The value of \`_ttp\` is used to match website visitor events with TikTok ads. You can extract the value of \`_ttp\` and attach the value here. To learn more about the \`ttp\` parameter, refer to [Events API 2.0 - Send TikTok Cookie](https://ads.tiktok.com/marketing_api/docs?id=%201771100936446977) (\`_ttp\`).",
          "key": "ttp",
          "label": "TikTok Cookie ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.lead_id}",
          "description": "ID of TikTok leads. Every lead will have its own lead_id when exported from TikTok. This feature is in Beta. Please contact your TikTok representative to inquire regarding availability",
          "key": "lead_id",
          "label": "TikTok Lead ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$locale}",
          "description": "The BCP 47 language identifier. For reference, refer to the [IETF BCP 47 standardized code](https://www.rfc-editor.org/rfc/bcp/bcp47.txt).",
          "key": "locale",
          "label": "Locale",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The page URL where the conversion event took place.",
          "key": "url",
          "label": "Page URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$referrer}",
          "description": "The page referrer.",
          "key": "referrer",
          "label": "Page Referrer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "IP address of the browser.",
          "key": "ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "User agent from the user’s device.",
          "key": "user_agent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "brand": undefined,
            "content_category": undefined,
            "content_id": undefined,
            "content_name": undefined,
            "price": undefined,
            "quantity": undefined,
          },
          "description": "Related item details for the event.",
          "key": "contents",
          "label": "Contents",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "choices": [
            {
              "label": "product",
              "value": "product",
            },
            {
              "label": "product_group",
              "value": "product_group",
            },
          ],
          "default": "product",
          "description": "Type of the product item. When the \`content_id\` in the \`Contents\` field is specified as a \`sku_id\`, set this field to \`product\`. When the \`content_id\` in the \`Contents\` field is specified as an \`item_group_id\`, set this field to \`product_group\`.",
          "key": "content_type",
          "label": "Content Type",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.currency}",
          "description": "Currency for the value specified as ISO 4217 code.",
          "key": "currency",
          "label": "Currency",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.value ?? event.properties.revenue}",
          "description": "Value of the order or items sold.",
          "key": "value",
          "label": "Value",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "A string description of the web event.",
          "key": "description",
          "label": "Description",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.query}",
          "description": "The text string that was searched for.",
          "key": "query",
          "label": "Query",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.limited_data_use}",
          "description": "Use this field to flag an event for limited data processing. TikTok will recognize this parameter as a request for limited data processing, and will limit its processing activities accordingly if the event shared occurred in an eligible location. To learn more about the Limited Data Use feature, refer to [Events API 2.0 - Limited Data Use](https://ads.tiktok.com/marketing_api/docs?id=1771101204435970).",
          "key": "limited_data_use",
          "label": "Limited Data Use",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "Use this field to specify that events should be test events rather than actual traffic. You can find your Test Event Code in your TikTok Events Manager under the "Test Event" tab. You'll want to remove your Test Event Code when sending real traffic through this integration.",
          "key": "test_event_code",
          "label": "Test Event Code",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "reportWebEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Complete Registration",
    },
  ],
  "name": "Tiktok Conversions Sandbox",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 127 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Surveysparrow",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/surveysparrow.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-surveysparrow",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "SurveySparrow Access Token can be found in Settings > Apps and Integrations > Create a Custom app",
      "key": "apiToken",
      "label": "Access Token",
      "required": true,
      "secret": false,
      "type": "password",
    },
  ],
  "mapping_templates": [],
  "name": "Surveysparrow",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 128 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Avo",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/avo.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-avo",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Avo Inspector API Key can be found in the Inspector setup page on your source in Avo.",
      "key": "apiKey",
      "label": "Avo Inspector API Key",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "choices": [
        {
          "label": "dev",
          "value": "dev",
        },
        {
          "label": "staging",
          "value": "staging",
        },
        {
          "label": "prod",
          "value": "prod",
        },
      ],
      "default": "prod",
      "description": "Avo Inspector Environment",
      "key": "env",
      "label": "Environment",
      "required": true,
      "secret": false,
      "type": "choice",
    },
    {
      "default": undefined,
      "description": "If you send a custom event property on all events that contains the app version, please enter the name of that property here (e.g. “app_version”). If you do not have a custom event property for the app version, please leave this field empty.",
      "key": "appVersionPropertyName",
      "label": "App Version Property",
      "required": false,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.event}",
          "description": "Name of the event being sent",
          "key": "event",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties}",
          "description": "Properties of the event being sent",
          "key": "properties",
          "label": "Properties",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "Message ID of the event being sent",
          "key": "messageId",
          "label": "Message ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Timestamp of when the event was sent",
          "key": "createdAt",
          "label": "Created At",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.event.properties.$app_version}",
          "description": "Version of the app that sent the event",
          "key": "appVersion",
          "label": "App Version",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.event.properties.$app_name}",
          "description": "Name of the app that sent the event",
          "key": "appName",
          "label": "App Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "URL of the page that sent the event",
          "key": "pageUrl",
          "label": "Page URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "sendSchemaToInspector",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Track Schema From Event",
    },
  ],
  "name": "Avo",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 129 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to StackAdapt",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/stackadapt.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-stackadapt-cloud",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Your StackAdapt Universal Pixel ID",
      "key": "pixelId",
      "label": "Universal Pixel ID",
      "required": true,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event in ('$identify', '$set') or event = '$pageview' or event = '$screen' or event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "The ID of the user in Segment",
          "key": "user_id",
          "label": "Segment User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.type}",
          "description": "The Segment event type (page, track, etc.)",
          "key": "event_type",
          "label": "Event Type",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.event}",
          "description": "The event name (e.g. Order Completed)",
          "key": "action",
          "label": "Event Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "IP address of the user",
          "key": "ip_fwd",
          "label": "IP Address",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.context.page.title}",
          "description": "The title of the page where the event occurred.",
          "key": "title",
          "label": "Page Title",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The URL of the page where the event occurred.",
          "key": "url",
          "label": "URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$referrer}",
          "description": "The referrer of the page where the event occurred.",
          "key": "referrer",
          "label": "Referrer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.utm_source}",
          "description": "UTM source parameter associated with event",
          "key": "utm_source",
          "label": "UTM Source",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "User-Agent of the user",
          "key": "user_agent",
          "label": "User Agent",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.email ?? event.properties.email}",
          "description": "Email address of the individual who triggered the event.",
          "key": "email",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.phone ?? event.properties.phone}",
          "description": "Phone number of the individual who triggered the event",
          "key": "phone",
          "label": "Phone Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.first_name ?? event.properties.first_name}",
          "description": "First name of the individual who triggered the event.",
          "key": "first_name",
          "label": "First Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.last_name ?? event.properties.last_name}",
          "description": "Last name of the individual who triggered the event.",
          "key": "last_name",
          "label": "Last Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "order_id": "{event.properties.order_id}",
            "product_category": "{event.properties.category}",
            "product_id": "{event.properties.product_id}",
            "product_name": "{event.properties.name}",
            "product_price": "{event.properties.price}",
            "product_quantity": "{event.properties.quantity}",
            "revenue": "{event.properties.revenue}",
          },
          "description": "Additional ecommerce fields that are included in the pixel payload.",
          "key": "ecommerce_data",
          "label": "Ecommerce Data",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "product_category": undefined,
            "product_id": undefined,
            "product_name": undefined,
            "product_price": undefined,
            "product_quantity": undefined,
          },
          "description": "The list of products associated with the event (for events with multiple products, such as Order Completed)",
          "key": "ecommerce_products",
          "label": "Products",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "forwardEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Forward Event",
    },
  ],
  "name": "StackAdapt",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 130 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Accoil Analytics",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/accoil.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-accoil-analytics",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Your Accoil.com API Key. You can find your API Key in your Accoil account settings.",
      "key": "api_key",
      "label": "API Key",
      "required": true,
      "secret": false,
      "type": "password",
    },
  ],
  "mapping_templates": [
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.event}",
          "description": "The event name",
          "key": "event",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id}",
          "description": "The ID associated with the user",
          "key": "userId",
          "label": "User ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The timestamp of the event",
          "key": "timestamp",
          "label": "Timestamp",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "track",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Track Calls",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = '$pageview'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{person.id}",
          "description": "The ID associated with the user",
          "key": "userId",
          "label": "User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.name}",
          "description": "The name of the page",
          "key": "name",
          "label": "Page Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The timestamp of the event",
          "key": "timestamp",
          "label": "Timestamp",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "page",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Page Calls",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = '$screen'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{person.id}",
          "description": "The ID associated with the user",
          "key": "userId",
          "label": "User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.name}",
          "description": "The name of the screen",
          "key": "name",
          "label": "Screen Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The timestamp of the event",
          "key": "timestamp",
          "label": "Timestamp",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "screen",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Screen Calls",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event in ('$identify', '$set')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{person.id}",
          "description": "The ID associated with the user",
          "key": "userId",
          "label": "User ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.email}",
          "description": "Email addresses are highly recommended as they are often used to identify users across multiple platforms. (Highly Recommended)",
          "key": "email",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.name}",
          "description": "Providing a name helps display users in Accoil. If no name is provided, the email address is displayed instead. (Highly Recommended)",
          "key": "name",
          "label": "Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.role}",
          "description": "Describes the user's role in your product such as Admin, Owner, Team Member. (Suggested) ",
          "key": "role",
          "label": "Role",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.accountStatus}",
          "description": "Capturing the account status on the user can be helpful to segment users. Possible options include: Free, Trial, Paid, Cancelled (Suggested) ",
          "key": "accountStatus",
          "label": "Account Status",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.createdAt}",
          "description": "When was the user created, including this ensures that tenure tracking is accurate. (Highly Recommended) ",
          "key": "createdAt",
          "label": "Created at",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties}",
          "description": "Optionally send all traits to associate with the user or the group",
          "key": "traits",
          "label": "Traits",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The timestamp of the event",
          "key": "timestamp",
          "label": "Timestamp",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "identify",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Identify Calls",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = '$groupidentify'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.distinct_id}",
          "description": "Anonymous id",
          "key": "anonymousId",
          "label": "Anonymous ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id}",
          "description": "The ID associated with the user",
          "key": "userId",
          "label": "User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.groupId}",
          "description": "The group id",
          "key": "groupId",
          "label": "Group ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.name}",
          "description": "The name of the account. Without providing a name, accounts are displayed using a numeric ID, making them harder to identify. (Highly Recommended)",
          "key": "name",
          "label": "Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.createdAt}",
          "description": "Helps calculate account tenure. If no createdAt is provided, the earliest createdAt from the associated users will be used. (Highly Recommended)",
          "key": "createdAt",
          "label": "Created at",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.status}",
          "description": "The overall status of your the account subscription. Possible options include: Free, Trial, Paid, Cancelled (Highly Recommended)",
          "key": "status",
          "label": "Status",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.plan}",
          "description": "The plan type helps in segmenting accounts by their subscription tier (e.g., starter, pro, enterprise). (Recommended)",
          "key": "plan",
          "label": "Plan",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.mrr}",
          "description": "Monthly recurring revenue (MRR) is important for segmenting accounts by value. It also allows Accoil to show the dollar value of different segments. Ideally this is passed in cents eg $99 becomes 9900. (Highly Recommended)",
          "key": "mrr",
          "label": "MRR",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties}",
          "description": "Optionally send all traits to associate with the user or the group",
          "key": "traits",
          "label": "Traits",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The timestamp of the event",
          "key": "timestamp",
          "label": "Timestamp",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "group",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Group Calls",
    },
  ],
  "name": "Accoil Analytics",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 131 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Kafka",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/kafka.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-kafka",
  "inputs_schema": [
    {
      "default": "segment-actions-kafka-producer",
      "description": "The client ID for your Kafka instance. Defaults to 'segment-actions-kafka-producer'.",
      "key": "clientId",
      "label": "Client ID",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "The brokers for your Kafka instance, in the format of \`host:port\`. E.g. localhost:9092. Accepts a comma delimited string.",
      "key": "brokers",
      "label": "Brokers",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "choices": [
        {
          "label": "Plain",
          "value": "plain",
        },
        {
          "label": "SCRAM-SHA-256",
          "value": "scram-sha-256",
        },
        {
          "label": "SCRAM-SHA-512",
          "value": "scram-sha-512",
        },
        {
          "label": "Client Certificate",
          "value": "client-cert-auth",
        },
      ],
      "default": "plain",
      "description": "Select the Authentication Mechanism to use. For SCRAM or PLAIN populate the 'Username' and 'Password' fields. For AWS IAM populated the 'AWS Access Key ID' and 'AWS Secret Key' fields. For 'Client Certificate' populated the 'SSL Client Key' and 'SSL Client Certificate' fields",
      "key": "mechanism",
      "label": "Authentication Mechanism",
      "required": true,
      "secret": false,
      "type": "choice",
    },
    {
      "default": undefined,
      "description": "The username for your Kafka instance. Should be populated only if using PLAIN or SCRAM Authentication Mechanisms.",
      "key": "username",
      "label": "Username",
      "required": false,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "The password for your Kafka instance. Should only be populated if using PLAIN or SCRAM Authentication Mechanisms.",
      "key": "password",
      "label": "Password",
      "required": false,
      "secret": false,
      "type": "password",
    },
    {
      "default": undefined,
      "description": "The Access Key ID for your AWS IAM instance. Must be populated if using AWS IAM Authentication Mechanism.",
      "key": "accessKeyId",
      "label": "AWS Access Key ID",
      "required": false,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "The Secret Key for your AWS IAM instance. Must be populated if using AWS IAM Authentication Mechanism.",
      "key": "secretAccessKey",
      "label": "AWS Secret Key",
      "required": false,
      "secret": false,
      "type": "password",
    },
    {
      "default": undefined,
      "description": "AWS IAM role ARN used for authorization. This field is optional, and should only be populated if using the AWS IAM Authentication Mechanism.",
      "key": "authorizationIdentity",
      "label": "AWS Authorization Identity",
      "required": false,
      "secret": false,
      "type": "string",
    },
    {
      "default": true,
      "description": "Indicates if SSL should be enabled.",
      "key": "ssl_enabled",
      "label": "SSL Enabled",
      "required": false,
      "secret": false,
      "type": "boolean",
    },
    {
      "default": undefined,
      "description": "The Certificate Authority for your Kafka instance. Exclude the first and last lines from the file. i.e \`-----BEGIN CERTIFICATE-----\` and \`-----END CERTIFICATE-----\`.",
      "key": "ssl_ca",
      "label": "SSL Certificate Authority",
      "required": false,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "The Client Key for your Kafka instance. Exclude the first and last lines from the file. i.e \`-----BEGIN CERTIFICATE-----\` and \`-----END CERTIFICATE-----\`.",
      "key": "ssl_key",
      "label": "SSL Client Key",
      "required": false,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "The Certificate Authority for your Kafka instance. Exclude the first and last lines from the file. i.e \`-----BEGIN CERTIFICATE-----\` and \`-----END CERTIFICATE-----\`.",
      "key": "ssl_cert",
      "label": "SSL Client Certificate",
      "required": false,
      "secret": false,
      "type": "string",
    },
    {
      "default": true,
      "description": "Whether to reject unauthorized CAs or not. This can be useful when testing, but is unadvised in Production.",
      "key": "ssl_reject_unauthorized_ca",
      "label": "SSL - Reject Unauthorized Certificate Authority",
      "required": false,
      "secret": false,
      "type": "boolean",
    },
  ],
  "mapping_templates": [],
  "name": "Kafka",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 132 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Kevel Audience",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/kevel.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-kevel-audience",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Your Kevel Audience root subdomain. For example: "cdp.yourdomain.com".",
      "key": "audienceDomain",
      "label": "Kevel Audience Domain",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "Kevel Audience User ID Type to map your Segment User ID to. For example: "crm".",
      "key": "userIdType",
      "label": "Kevel Audience User ID Type",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "The Kevel Audience client ID to identify the event. For example: "brand-name".",
      "key": "clientId",
      "label": "Kevel Audience client ID",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "The Kevel Audience site ID to identify the event. For example: "segment-app".",
      "key": "siteId",
      "label": "Kevel Audience site ID",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "The Kevel Audience API Key to authorize the requests. Get yours from your Kevel Customer Success representative.",
      "key": "apiKey",
      "label": "Kevel Audience API Key",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "The type of event to send to Kevel Audience. For example: "segmentSync".",
      "key": "eventType",
      "label": "Event Type",
      "required": true,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [],
  "name": "Kevel Audience",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 133 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Moloco MCM",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/moloco.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-moloco-rmp",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "ID of the platform",
      "key": "platformId",
      "label": "Platform ID",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": "",
      "description": "Name of the platform (default to the \`Platform ID\`)",
      "key": "platformName",
      "label": "Platform Name",
      "required": false,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "The API key for the platform",
      "key": "apiKey",
      "label": "API Key",
      "required": true,
      "secret": false,
      "type": "password",
    },
    {
      "choices": [
        {
          "label": "App",
          "value": "APP",
        },
        {
          "label": "Site",
          "value": "SITE",
        },
      ],
      "default": undefined,
      "description": "Type of channel, either APP or SITE. Defaults to SITE.",
      "key": "channel_type",
      "label": "Channel Type",
      "required": true,
      "secret": false,
      "type": "choice",
    },
  ],
  "mapping_templates": [
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify') and event = 'Products Searched'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.uuid}",
          "description": "Unique ID generated by the client to suppress duplicate events. The length should not exceed 128 characters.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Timestamp that the event happened at.",
          "key": "timestamp",
          "label": "Timestamp",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id}",
          "description": "User Identifier for the platform. The length should not exceed 128 characters.",
          "key": "user_id",
          "label": "User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "advertising_id": "",
            "ip": "{event.properties.$ip}",
            "language": undefined,
            "model": "{event.properties.$device_model}",
            "os": "{event.properties.$os}",
            "os_version": "{event.properties.$os_version}",
            "ua": "{event.properties.$raw_user_agent}",
            "unique_device_id": "{event.properties.$device_id}",
          },
          "description": "Device information of the event",
          "key": "device",
          "label": "Device",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.distinct_id}",
          "description": "Identifier for tracking users regardless of sign-in status. The length should not exceed 128 characters.",
          "key": "session_id",
          "label": "Session ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "choices": [
            {
              "label": "UNKNOWN_CURRENCY",
              "value": "UNKNOWN_CURRENCY",
            },
            {
              "label": "USD",
              "value": "USD",
            },
            {
              "label": "KRW",
              "value": "KRW",
            },
            {
              "label": "JPY",
              "value": "JPY",
            },
            {
              "label": "EUR",
              "value": "EUR",
            },
            {
              "label": "GBP",
              "value": "GBP",
            },
            {
              "label": "SEK",
              "value": "SEK",
            },
            {
              "label": "INR",
              "value": "INR",
            },
            {
              "label": "THB",
              "value": "THB",
            },
            {
              "label": "IDR",
              "value": "IDR",
            },
            {
              "label": "CNY",
              "value": "CNY",
            },
            {
              "label": "CAD",
              "value": "CAD",
            },
            {
              "label": "RUB",
              "value": "RUB",
            },
            {
              "label": "BRL",
              "value": "BRL",
            },
            {
              "label": "SGD",
              "value": "SGD",
            },
            {
              "label": "HKD",
              "value": "HKD",
            },
            {
              "label": "AUD",
              "value": "AUD",
            },
            {
              "label": "PLN",
              "value": "PLN",
            },
            {
              "label": "DKK",
              "value": "DKK",
            },
            {
              "label": "VND",
              "value": "VND",
            },
            {
              "label": "MYR",
              "value": "MYR",
            },
            {
              "label": "PHP",
              "value": "PHP",
            },
            {
              "label": "TRY",
              "value": "TRY",
            },
            {
              "label": "VEF",
              "value": "VEF",
            },
          ],
          "default": "USD",
          "description": "The default currency value. Defaults to "USD". If this is set, it will be used as a default currency value for items.",
          "key": "default_currency",
          "label": "Default Currency",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": {
            "currency": undefined,
            "id": undefined,
            "price": undefined,
            "quantity": undefined,
            "seller_id": undefined,
          },
          "description": "Item information list related to the event.",
          "key": "items",
          "label": "Items",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.properties.query}",
          "description": "Query string for the search.",
          "key": "search_query",
          "label": "Search Query",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.context.page.path}",
          "description": "A string value used to uniquely identify a page. For example: "electronics", "categories/12312", "azd911d" or "/classes/foo/lectures/bar".",
          "key": "page_id",
          "label": "Page ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {},
          "description": "Tokens that can be used to identify a page. Alternative to page_id with a lower priority.",
          "key": "page_identifier_tokens",
          "label": "Page Identifier Tokens",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.properties.$referrer}",
          "description": "Similar to referrer in HTTP, this value indicates from which page the user came to the current page.",
          "key": "referrer_page_id",
          "label": "Referrer Page ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "search",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Search",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify') and event = 'Order Completed'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.uuid}",
          "description": "Unique ID generated by the client to suppress duplicate events. The length should not exceed 128 characters.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Timestamp that the event happened at.",
          "key": "timestamp",
          "label": "Timestamp",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id}",
          "description": "User Identifier for the platform. The length should not exceed 128 characters.",
          "key": "user_id",
          "label": "User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "advertising_id": "",
            "ip": "{event.properties.$ip}",
            "language": undefined,
            "model": "{event.properties.$device_model}",
            "os": "{event.properties.$os}",
            "os_version": "{event.properties.$os_version}",
            "ua": "{event.properties.$raw_user_agent}",
            "unique_device_id": "{event.properties.$device_id}",
          },
          "description": "Device information of the event",
          "key": "device",
          "label": "Device",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.distinct_id}",
          "description": "Identifier for tracking users regardless of sign-in status. The length should not exceed 128 characters.",
          "key": "session_id",
          "label": "Session ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "choices": [
            {
              "label": "UNKNOWN_CURRENCY",
              "value": "UNKNOWN_CURRENCY",
            },
            {
              "label": "USD",
              "value": "USD",
            },
            {
              "label": "KRW",
              "value": "KRW",
            },
            {
              "label": "JPY",
              "value": "JPY",
            },
            {
              "label": "EUR",
              "value": "EUR",
            },
            {
              "label": "GBP",
              "value": "GBP",
            },
            {
              "label": "SEK",
              "value": "SEK",
            },
            {
              "label": "INR",
              "value": "INR",
            },
            {
              "label": "THB",
              "value": "THB",
            },
            {
              "label": "IDR",
              "value": "IDR",
            },
            {
              "label": "CNY",
              "value": "CNY",
            },
            {
              "label": "CAD",
              "value": "CAD",
            },
            {
              "label": "RUB",
              "value": "RUB",
            },
            {
              "label": "BRL",
              "value": "BRL",
            },
            {
              "label": "SGD",
              "value": "SGD",
            },
            {
              "label": "HKD",
              "value": "HKD",
            },
            {
              "label": "AUD",
              "value": "AUD",
            },
            {
              "label": "PLN",
              "value": "PLN",
            },
            {
              "label": "DKK",
              "value": "DKK",
            },
            {
              "label": "VND",
              "value": "VND",
            },
            {
              "label": "MYR",
              "value": "MYR",
            },
            {
              "label": "PHP",
              "value": "PHP",
            },
            {
              "label": "TRY",
              "value": "TRY",
            },
            {
              "label": "VEF",
              "value": "VEF",
            },
          ],
          "default": "USD",
          "description": "The default currency value. Defaults to "USD". If this is set, it will be used as a default currency value for items.",
          "key": "default_currency",
          "label": "Default Currency",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": {
            "currency": undefined,
            "id": undefined,
            "price": undefined,
            "quantity": undefined,
            "seller_id": undefined,
          },
          "description": "Item information list related to the event.",
          "key": "items",
          "label": "Items",
          "required": true,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "currency": "{event.properties.currency}",
            "price": "{event.properties.revenue}",
          },
          "description": "Revenue of the event",
          "key": "revenue",
          "label": "Revenue",
          "required": true,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.context.page.path}",
          "description": "A string value used to uniquely identify a page. For example: "electronics", "categories/12312", "azd911d" or "/classes/foo/lectures/bar".",
          "key": "page_id",
          "label": "Page ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {},
          "description": "Tokens that can be used to identify a page. Alternative to page_id with a lower priority.",
          "key": "page_identifier_tokens",
          "label": "Page Identifier Tokens",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "currency": undefined,
            "price": undefined,
          },
          "description": "Shipping charge’s monetary amount in a specific currency.",
          "key": "shipping_charge",
          "label": "Shipping Charge",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "purchase",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Purchase",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = '$pageview' and properties.name != 'Home' and properties.name != 'Land'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.uuid}",
          "description": "Unique ID generated by the client to suppress duplicate events. The length should not exceed 128 characters.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Timestamp that the event happened at.",
          "key": "timestamp",
          "label": "Timestamp",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id}",
          "description": "User Identifier for the platform. The length should not exceed 128 characters.",
          "key": "user_id",
          "label": "User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "advertising_id": "",
            "ip": "{event.properties.$ip}",
            "language": undefined,
            "model": "{event.properties.$device_model}",
            "os": "{event.properties.$os}",
            "os_version": "{event.properties.$os_version}",
            "ua": "{event.properties.$raw_user_agent}",
            "unique_device_id": "{event.properties.$device_id}",
          },
          "description": "Device information of the event",
          "key": "device",
          "label": "Device",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.distinct_id}",
          "description": "Identifier for tracking users regardless of sign-in status. The length should not exceed 128 characters.",
          "key": "session_id",
          "label": "Session ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "choices": [
            {
              "label": "UNKNOWN_CURRENCY",
              "value": "UNKNOWN_CURRENCY",
            },
            {
              "label": "USD",
              "value": "USD",
            },
            {
              "label": "KRW",
              "value": "KRW",
            },
            {
              "label": "JPY",
              "value": "JPY",
            },
            {
              "label": "EUR",
              "value": "EUR",
            },
            {
              "label": "GBP",
              "value": "GBP",
            },
            {
              "label": "SEK",
              "value": "SEK",
            },
            {
              "label": "INR",
              "value": "INR",
            },
            {
              "label": "THB",
              "value": "THB",
            },
            {
              "label": "IDR",
              "value": "IDR",
            },
            {
              "label": "CNY",
              "value": "CNY",
            },
            {
              "label": "CAD",
              "value": "CAD",
            },
            {
              "label": "RUB",
              "value": "RUB",
            },
            {
              "label": "BRL",
              "value": "BRL",
            },
            {
              "label": "SGD",
              "value": "SGD",
            },
            {
              "label": "HKD",
              "value": "HKD",
            },
            {
              "label": "AUD",
              "value": "AUD",
            },
            {
              "label": "PLN",
              "value": "PLN",
            },
            {
              "label": "DKK",
              "value": "DKK",
            },
            {
              "label": "VND",
              "value": "VND",
            },
            {
              "label": "MYR",
              "value": "MYR",
            },
            {
              "label": "PHP",
              "value": "PHP",
            },
            {
              "label": "TRY",
              "value": "TRY",
            },
            {
              "label": "VEF",
              "value": "VEF",
            },
          ],
          "default": "USD",
          "description": "The default currency value. Defaults to "USD". If this is set, it will be used as a default currency value for items.",
          "key": "default_currency",
          "label": "Default Currency",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": {
            "currency": undefined,
            "id": undefined,
            "price": undefined,
            "quantity": undefined,
            "seller_id": undefined,
          },
          "description": "Item information list related to the event.",
          "key": "items",
          "label": "Items",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.context.page.path}",
          "description": "A string value used to uniquely identify a page. For example: "electronics", "categories/12312", "azd911d" or "/classes/foo/lectures/bar". Either page_id or page_identifier_tokens is required.",
          "key": "page_id",
          "label": "Page ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {},
          "description": "Tokens that can be used to identify a page. Alternative to page_id with a lower priority. Either page_id or page_identifier_tokens is required.",
          "key": "page_identifier_tokens",
          "label": "Page Identifier Tokens",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.properties.$referrer}",
          "description": "Similar to referrer in HTTP, this value indicates from which page the user came to the current page.",
          "key": "referrer_page_id",
          "label": "Referrer Page ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "pageView",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Page View",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = '$pageview' and properties.name = 'Land'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.uuid}",
          "description": "Unique ID generated by the client to suppress duplicate events. The length should not exceed 128 characters.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Timestamp that the event happened at.",
          "key": "timestamp",
          "label": "Timestamp",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id}",
          "description": "User Identifier for the platform. The length should not exceed 128 characters.",
          "key": "user_id",
          "label": "User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "advertising_id": "",
            "ip": "{event.properties.$ip}",
            "language": undefined,
            "model": "{event.properties.$device_model}",
            "os": "{event.properties.$os}",
            "os_version": "{event.properties.$os_version}",
            "ua": "{event.properties.$raw_user_agent}",
            "unique_device_id": "{event.properties.$device_id}",
          },
          "description": "Device information of the event",
          "key": "device",
          "label": "Device",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.distinct_id}",
          "description": "Identifier for tracking users regardless of sign-in status. The length should not exceed 128 characters.",
          "key": "session_id",
          "label": "Session ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "choices": [
            {
              "label": "UNKNOWN_CURRENCY",
              "value": "UNKNOWN_CURRENCY",
            },
            {
              "label": "USD",
              "value": "USD",
            },
            {
              "label": "KRW",
              "value": "KRW",
            },
            {
              "label": "JPY",
              "value": "JPY",
            },
            {
              "label": "EUR",
              "value": "EUR",
            },
            {
              "label": "GBP",
              "value": "GBP",
            },
            {
              "label": "SEK",
              "value": "SEK",
            },
            {
              "label": "INR",
              "value": "INR",
            },
            {
              "label": "THB",
              "value": "THB",
            },
            {
              "label": "IDR",
              "value": "IDR",
            },
            {
              "label": "CNY",
              "value": "CNY",
            },
            {
              "label": "CAD",
              "value": "CAD",
            },
            {
              "label": "RUB",
              "value": "RUB",
            },
            {
              "label": "BRL",
              "value": "BRL",
            },
            {
              "label": "SGD",
              "value": "SGD",
            },
            {
              "label": "HKD",
              "value": "HKD",
            },
            {
              "label": "AUD",
              "value": "AUD",
            },
            {
              "label": "PLN",
              "value": "PLN",
            },
            {
              "label": "DKK",
              "value": "DKK",
            },
            {
              "label": "VND",
              "value": "VND",
            },
            {
              "label": "MYR",
              "value": "MYR",
            },
            {
              "label": "PHP",
              "value": "PHP",
            },
            {
              "label": "TRY",
              "value": "TRY",
            },
            {
              "label": "VEF",
              "value": "VEF",
            },
          ],
          "default": "USD",
          "description": "The default currency value. Defaults to "USD". If this is set, it will be used as a default currency value for items.",
          "key": "default_currency",
          "label": "Default Currency",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": {
            "currency": undefined,
            "id": undefined,
            "price": undefined,
            "quantity": undefined,
            "seller_id": undefined,
          },
          "description": "Item information list related to the event.",
          "key": "items",
          "label": "Items",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.context.page.path}",
          "description": "A string value used to uniquely identify a page. For example: "electronics", "categories/12312", "azd911d" or "/classes/foo/lectures/bar".",
          "key": "page_id",
          "label": "Page ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {},
          "description": "Tokens that can be used to identify a page. Alternative to page_id with a lower priority.",
          "key": "page_identifier_tokens",
          "label": "Page Identifier Tokens",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.properties.$referrer}",
          "description": "Similar to referrer in HTTP, this value indicates from which page the user came to the current page.",
          "key": "referrer_page_id",
          "label": "Referrer Page ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "land",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Land",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify') and event = 'Product Viewed'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.uuid}",
          "description": "Unique ID generated by the client to suppress duplicate events. The length should not exceed 128 characters.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Timestamp that the event happened at.",
          "key": "timestamp",
          "label": "Timestamp",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id}",
          "description": "User Identifier for the platform. The length should not exceed 128 characters.",
          "key": "user_id",
          "label": "User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "advertising_id": "",
            "ip": "{event.properties.$ip}",
            "language": undefined,
            "model": "{event.properties.$device_model}",
            "os": "{event.properties.$os}",
            "os_version": "{event.properties.$os_version}",
            "ua": "{event.properties.$raw_user_agent}",
            "unique_device_id": "{event.properties.$device_id}",
          },
          "description": "Device information of the event",
          "key": "device",
          "label": "Device",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.distinct_id}",
          "description": "Identifier for tracking users regardless of sign-in status. The length should not exceed 128 characters.",
          "key": "session_id",
          "label": "Session ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "choices": [
            {
              "label": "UNKNOWN_CURRENCY",
              "value": "UNKNOWN_CURRENCY",
            },
            {
              "label": "USD",
              "value": "USD",
            },
            {
              "label": "KRW",
              "value": "KRW",
            },
            {
              "label": "JPY",
              "value": "JPY",
            },
            {
              "label": "EUR",
              "value": "EUR",
            },
            {
              "label": "GBP",
              "value": "GBP",
            },
            {
              "label": "SEK",
              "value": "SEK",
            },
            {
              "label": "INR",
              "value": "INR",
            },
            {
              "label": "THB",
              "value": "THB",
            },
            {
              "label": "IDR",
              "value": "IDR",
            },
            {
              "label": "CNY",
              "value": "CNY",
            },
            {
              "label": "CAD",
              "value": "CAD",
            },
            {
              "label": "RUB",
              "value": "RUB",
            },
            {
              "label": "BRL",
              "value": "BRL",
            },
            {
              "label": "SGD",
              "value": "SGD",
            },
            {
              "label": "HKD",
              "value": "HKD",
            },
            {
              "label": "AUD",
              "value": "AUD",
            },
            {
              "label": "PLN",
              "value": "PLN",
            },
            {
              "label": "DKK",
              "value": "DKK",
            },
            {
              "label": "VND",
              "value": "VND",
            },
            {
              "label": "MYR",
              "value": "MYR",
            },
            {
              "label": "PHP",
              "value": "PHP",
            },
            {
              "label": "TRY",
              "value": "TRY",
            },
            {
              "label": "VEF",
              "value": "VEF",
            },
          ],
          "default": "USD",
          "description": "The default currency value. Defaults to "USD". If this is set, it will be used as a default currency value for items.",
          "key": "default_currency",
          "label": "Default Currency",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": {
            "currency": undefined,
            "id": undefined,
            "price": undefined,
            "quantity": undefined,
            "seller_id": undefined,
          },
          "description": "Item information list related to the event.",
          "key": "items",
          "label": "Items",
          "required": true,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.context.page.path}",
          "description": "A string value used to uniquely identify a page. For example: "electronics", "categories/12312", "azd911d" or "/classes/foo/lectures/bar".",
          "key": "page_id",
          "label": "Page ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {},
          "description": "Tokens that can be used to identify a page. Alternative to page_id with a lower priority.",
          "key": "page_identifier_tokens",
          "label": "Page Identifier Tokens",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "itemPageView",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Item Page View",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = '$pageview' and properties.name = 'Home'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.uuid}",
          "description": "Unique ID generated by the client to suppress duplicate events. The length should not exceed 128 characters.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Timestamp that the event happened at.",
          "key": "timestamp",
          "label": "Timestamp",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id}",
          "description": "User Identifier for the platform. The length should not exceed 128 characters.",
          "key": "user_id",
          "label": "User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "advertising_id": "",
            "ip": "{event.properties.$ip}",
            "language": undefined,
            "model": "{event.properties.$device_model}",
            "os": "{event.properties.$os}",
            "os_version": "{event.properties.$os_version}",
            "ua": "{event.properties.$raw_user_agent}",
            "unique_device_id": "{event.properties.$device_id}",
          },
          "description": "Device information of the event",
          "key": "device",
          "label": "Device",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.distinct_id}",
          "description": "Identifier for tracking users regardless of sign-in status. The length should not exceed 128 characters.",
          "key": "session_id",
          "label": "Session ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "choices": [
            {
              "label": "UNKNOWN_CURRENCY",
              "value": "UNKNOWN_CURRENCY",
            },
            {
              "label": "USD",
              "value": "USD",
            },
            {
              "label": "KRW",
              "value": "KRW",
            },
            {
              "label": "JPY",
              "value": "JPY",
            },
            {
              "label": "EUR",
              "value": "EUR",
            },
            {
              "label": "GBP",
              "value": "GBP",
            },
            {
              "label": "SEK",
              "value": "SEK",
            },
            {
              "label": "INR",
              "value": "INR",
            },
            {
              "label": "THB",
              "value": "THB",
            },
            {
              "label": "IDR",
              "value": "IDR",
            },
            {
              "label": "CNY",
              "value": "CNY",
            },
            {
              "label": "CAD",
              "value": "CAD",
            },
            {
              "label": "RUB",
              "value": "RUB",
            },
            {
              "label": "BRL",
              "value": "BRL",
            },
            {
              "label": "SGD",
              "value": "SGD",
            },
            {
              "label": "HKD",
              "value": "HKD",
            },
            {
              "label": "AUD",
              "value": "AUD",
            },
            {
              "label": "PLN",
              "value": "PLN",
            },
            {
              "label": "DKK",
              "value": "DKK",
            },
            {
              "label": "VND",
              "value": "VND",
            },
            {
              "label": "MYR",
              "value": "MYR",
            },
            {
              "label": "PHP",
              "value": "PHP",
            },
            {
              "label": "TRY",
              "value": "TRY",
            },
            {
              "label": "VEF",
              "value": "VEF",
            },
          ],
          "default": "USD",
          "description": "The default currency value. Defaults to "USD". If this is set, it will be used as a default currency value for items.",
          "key": "default_currency",
          "label": "Default Currency",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": {
            "currency": undefined,
            "id": undefined,
            "price": undefined,
            "quantity": undefined,
            "seller_id": undefined,
          },
          "description": "Item information list related to the event.",
          "key": "items",
          "label": "Items",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.context.page.path}",
          "description": "A string value used to uniquely identify a page. For example: "electronics", "categories/12312", "azd911d" or "/classes/foo/lectures/bar".",
          "key": "page_id",
          "label": "Page ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {},
          "description": "Tokens that can be used to identify a page. Alternative to page_id with a lower priority.",
          "key": "page_identifier_tokens",
          "label": "Page Identifier Tokens",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "home",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Home",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify') and event = 'Product Added to Wishlist'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.uuid}",
          "description": "Unique ID generated by the client to suppress duplicate events. The length should not exceed 128 characters.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Timestamp that the event happened at.",
          "key": "timestamp",
          "label": "Timestamp",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id}",
          "description": "User Identifier for the platform. The length should not exceed 128 characters.",
          "key": "user_id",
          "label": "User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "advertising_id": "",
            "ip": "{event.properties.$ip}",
            "language": undefined,
            "model": "{event.properties.$device_model}",
            "os": "{event.properties.$os}",
            "os_version": "{event.properties.$os_version}",
            "ua": "{event.properties.$raw_user_agent}",
            "unique_device_id": "{event.properties.$device_id}",
          },
          "description": "Device information of the event",
          "key": "device",
          "label": "Device",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.distinct_id}",
          "description": "Identifier for tracking users regardless of sign-in status. The length should not exceed 128 characters.",
          "key": "session_id",
          "label": "Session ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "choices": [
            {
              "label": "UNKNOWN_CURRENCY",
              "value": "UNKNOWN_CURRENCY",
            },
            {
              "label": "USD",
              "value": "USD",
            },
            {
              "label": "KRW",
              "value": "KRW",
            },
            {
              "label": "JPY",
              "value": "JPY",
            },
            {
              "label": "EUR",
              "value": "EUR",
            },
            {
              "label": "GBP",
              "value": "GBP",
            },
            {
              "label": "SEK",
              "value": "SEK",
            },
            {
              "label": "INR",
              "value": "INR",
            },
            {
              "label": "THB",
              "value": "THB",
            },
            {
              "label": "IDR",
              "value": "IDR",
            },
            {
              "label": "CNY",
              "value": "CNY",
            },
            {
              "label": "CAD",
              "value": "CAD",
            },
            {
              "label": "RUB",
              "value": "RUB",
            },
            {
              "label": "BRL",
              "value": "BRL",
            },
            {
              "label": "SGD",
              "value": "SGD",
            },
            {
              "label": "HKD",
              "value": "HKD",
            },
            {
              "label": "AUD",
              "value": "AUD",
            },
            {
              "label": "PLN",
              "value": "PLN",
            },
            {
              "label": "DKK",
              "value": "DKK",
            },
            {
              "label": "VND",
              "value": "VND",
            },
            {
              "label": "MYR",
              "value": "MYR",
            },
            {
              "label": "PHP",
              "value": "PHP",
            },
            {
              "label": "TRY",
              "value": "TRY",
            },
            {
              "label": "VEF",
              "value": "VEF",
            },
          ],
          "default": "USD",
          "description": "The default currency value. Defaults to "USD". If this is set, it will be used as a default currency value for items.",
          "key": "default_currency",
          "label": "Default Currency",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": {
            "currency": undefined,
            "id": undefined,
            "price": undefined,
            "quantity": undefined,
            "seller_id": undefined,
          },
          "description": "Item information list related to the event.",
          "key": "items",
          "label": "Items",
          "required": true,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "currency": "{event.properties.currency}",
            "price": "{event.properties.revenue}",
          },
          "description": "Revenue of the event",
          "key": "revenue",
          "label": "Revenue",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.context.page.path}",
          "description": "A string value used to uniquely identify a page. For example: "electronics", "categories/12312", "azd911d" or "/classes/foo/lectures/bar".",
          "key": "page_id",
          "label": "Page ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {},
          "description": "Tokens that can be used to identify a page. Alternative to page_id with a lower priority.",
          "key": "page_identifier_tokens",
          "label": "Page Identifier Tokens",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "addToWishlist",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Add to Wishlist",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify') and event = 'Product Added'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.uuid}",
          "description": "Unique ID generated by the client to suppress duplicate events. The length should not exceed 128 characters.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Timestamp that the event happened at.",
          "key": "timestamp",
          "label": "Timestamp",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id}",
          "description": "User Identifier for the platform. The length should not exceed 128 characters.",
          "key": "user_id",
          "label": "User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "advertising_id": "",
            "ip": "{event.properties.$ip}",
            "language": undefined,
            "model": "{event.properties.$device_model}",
            "os": "{event.properties.$os}",
            "os_version": "{event.properties.$os_version}",
            "ua": "{event.properties.$raw_user_agent}",
            "unique_device_id": "{event.properties.$device_id}",
          },
          "description": "Device information of the event",
          "key": "device",
          "label": "Device",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.distinct_id}",
          "description": "Identifier for tracking users regardless of sign-in status. The length should not exceed 128 characters.",
          "key": "session_id",
          "label": "Session ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "choices": [
            {
              "label": "UNKNOWN_CURRENCY",
              "value": "UNKNOWN_CURRENCY",
            },
            {
              "label": "USD",
              "value": "USD",
            },
            {
              "label": "KRW",
              "value": "KRW",
            },
            {
              "label": "JPY",
              "value": "JPY",
            },
            {
              "label": "EUR",
              "value": "EUR",
            },
            {
              "label": "GBP",
              "value": "GBP",
            },
            {
              "label": "SEK",
              "value": "SEK",
            },
            {
              "label": "INR",
              "value": "INR",
            },
            {
              "label": "THB",
              "value": "THB",
            },
            {
              "label": "IDR",
              "value": "IDR",
            },
            {
              "label": "CNY",
              "value": "CNY",
            },
            {
              "label": "CAD",
              "value": "CAD",
            },
            {
              "label": "RUB",
              "value": "RUB",
            },
            {
              "label": "BRL",
              "value": "BRL",
            },
            {
              "label": "SGD",
              "value": "SGD",
            },
            {
              "label": "HKD",
              "value": "HKD",
            },
            {
              "label": "AUD",
              "value": "AUD",
            },
            {
              "label": "PLN",
              "value": "PLN",
            },
            {
              "label": "DKK",
              "value": "DKK",
            },
            {
              "label": "VND",
              "value": "VND",
            },
            {
              "label": "MYR",
              "value": "MYR",
            },
            {
              "label": "PHP",
              "value": "PHP",
            },
            {
              "label": "TRY",
              "value": "TRY",
            },
            {
              "label": "VEF",
              "value": "VEF",
            },
          ],
          "default": "USD",
          "description": "The default currency value. Defaults to "USD". If this is set, it will be used as a default currency value for items.",
          "key": "default_currency",
          "label": "Default Currency",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": {
            "currency": undefined,
            "id": undefined,
            "price": undefined,
            "quantity": undefined,
            "seller_id": undefined,
          },
          "description": "Item information list related to the event.",
          "key": "items",
          "label": "Items",
          "required": true,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.context.page.path}",
          "description": "A string value used to uniquely identify a page. For example: "electronics", "categories/12312", "azd911d" or "/classes/foo/lectures/bar".",
          "key": "page_id",
          "label": "Page ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {},
          "description": "Tokens that can be used to identify a page. Alternative to page_id with a lower priority.",
          "key": "page_identifier_tokens",
          "label": "Page Identifier Tokens",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "addToCart",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Add to Cart",
    },
  ],
  "name": "Moloco MCM",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 134 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Responsys",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/responsys.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-responsys",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Optionally forward Responses from Segment's requests to Responsys to a Segment Source.",
      "key": "segmentWriteKey",
      "label": "Segment Source WriteKey",
      "required": false,
      "secret": false,
      "type": "string",
    },
    {
      "choices": [
        {
          "label": "US",
          "value": "US",
        },
        {
          "label": "EU",
          "value": "EU",
        },
      ],
      "default": "US",
      "description": "Segment Region to forward responses from Responsys to. Segment Source WriteKey must also be populated",
      "key": "segmentWriteKeyRegion",
      "label": "Segment WriteKey Region",
      "required": false,
      "secret": false,
      "type": "choice",
    },
    {
      "default": undefined,
      "description": "Responsys username",
      "key": "username",
      "label": "Username",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "Responsys password",
      "key": "userPassword",
      "label": "Password",
      "required": true,
      "secret": false,
      "type": "password",
    },
    {
      "default": undefined,
      "description": "Responsys endpoint URL. Refer to Responsys documentation for more details. Must start with 'HTTPS://'. See [Responsys docs](https://docs.oracle.com/en/cloud/saas/marketing/responsys-develop/API/GetStarted/Authentication/auth-endpoints-rest.htm).",
      "key": "baseUrl",
      "label": "Responsys endpoint URL",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "Name of the folder where the Profile Extension Table is located.",
      "key": "defaultFolderName",
      "label": "Default Folder Name",
      "required": false,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "Name of the Profile Extension Table's Contact List.",
      "key": "profileListName",
      "label": "Default Profile List Name",
      "required": false,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "Default Profile Extension Table (PET) Name. Required if using the "Send Custom Traits" Action. Can be overridden in the mapping.",
      "key": "profileExtensionTable",
      "label": "Default PET Name",
      "required": false,
      "secret": false,
      "type": "string",
    },
    {
      "default": true,
      "description": "Indicates what should be done for records where a match is not found.",
      "key": "insertOnNoMatch",
      "label": "Insert On No Match",
      "required": true,
      "secret": false,
      "type": "boolean",
    },
    {
      "choices": [
        {
          "label": "RIID",
          "value": "RIID",
        },
        {
          "label": "CUSTOMER_ID",
          "value": "CUSTOMER_ID",
        },
        {
          "label": "EMAIL_ADDRESS",
          "value": "EMAIL_ADDRESS",
        },
        {
          "label": "MOBILE_NUMBER",
          "value": "MOBILE_NUMBER",
        },
        {
          "label": "EMAIL_MD5_HASH",
          "value": "EMAIL_MD5_HASH",
        },
        {
          "label": "EMAIL_SHA256_HASH",
          "value": "EMAIL_SHA256_HASH",
        },
      ],
      "default": "EMAIL_ADDRESS",
      "description": "First match column for determining whether an insert or update should occur.
                      A trailing underscore (_) is added to the match column name at the time of request 
                      to Responsys. 
                      This aligns with Responsys’ naming conventions for match columns.",
      "key": "matchColumnName1",
      "label": "First Column Match",
      "required": true,
      "secret": false,
      "type": "choice",
    },
    {
      "choices": [
        {
          "label": "RIID",
          "value": "RIID",
        },
        {
          "label": "CUSTOMER_ID",
          "value": "CUSTOMER_ID",
        },
        {
          "label": "EMAIL_ADDRESS",
          "value": "EMAIL_ADDRESS",
        },
        {
          "label": "MOBILE_NUMBER",
          "value": "MOBILE_NUMBER",
        },
        {
          "label": "EMAIL_MD5_HASH",
          "value": "EMAIL_MD5_HASH",
        },
        {
          "label": "EMAIL_SHA256_HASH",
          "value": "EMAIL_SHA256_HASH",
        },
      ],
      "default": undefined,
      "description": "Second match column for determining whether an insert or update should occur.
                      A trailing underscore (_) is added to the match column name at the time of request 
                      to Responsys. 
                      This aligns with Responsys’ naming conventions for match columns.",
      "key": "matchColumnName2",
      "label": "Second Column Match",
      "required": false,
      "secret": false,
      "type": "choice",
    },
    {
      "choices": [
        {
          "label": "Replace All",
          "value": "REPLACE_ALL",
        },
        {
          "label": "No Update",
          "value": "NO_UPDATE",
        },
      ],
      "default": "REPLACE_ALL",
      "description": "Controls how the existing record should be updated. Defaults to Replace All.",
      "key": "updateOnMatch",
      "label": "Update On Match",
      "required": true,
      "secret": false,
      "type": "choice",
    },
    {
      "default": undefined,
      "description": "Value of incoming preferred email format data. For example, 'T' may represent a preference for Text formatted email.",
      "key": "textValue",
      "label": "Text Value",
      "required": false,
      "secret": false,
      "type": "string",
    },
    {
      "choices": [
        {
          "label": "None",
          "value": "NONE",
        },
        {
          "label": "And",
          "value": "AND",
        },
      ],
      "default": "AND",
      "description": "Operator to join match column names.",
      "key": "matchOperator",
      "label": "Match Operator",
      "required": false,
      "secret": false,
      "type": "choice",
    },
    {
      "default": undefined,
      "description": "Value of incoming opt-out status data that represents an optout status. For example, 'O' may represent an opt-out status.",
      "key": "optoutValue",
      "label": "Optout Value",
      "required": false,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "String containing comma-separated channel codes that if specified will result in record rejection when the channel address field is null. See [Responsys API docs](https://docs.oracle.com/en/cloud/saas/marketing/responsys-rest-api/op-rest-api-v1.3-lists-listname-members-post.html)",
      "key": "rejectRecordIfChannelEmpty",
      "label": "Reject Record If Channel Empty",
      "required": false,
      "secret": false,
      "type": "string",
    },
    {
      "choices": [
        {
          "label": "Opt In",
          "value": "OPTIN",
        },
        {
          "label": "Opt Out",
          "value": "OPTOUT",
        },
      ],
      "default": "OPTOUT",
      "description": "This value must be specified as either OPTIN or OPTOUT. Defaults to OPTOUT. Can be overridden in the mapping.",
      "key": "defaultPermissionStatus",
      "label": "Default Permission Status",
      "required": true,
      "secret": false,
      "type": "choice",
    },
    {
      "default": undefined,
      "description": "Value of incoming preferred email format data. For example, 'H' may represent a preference for HTML formatted email.",
      "key": "htmlValue",
      "label": "Preferred Email Format",
      "required": false,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "Value of incoming opt-in status data that represents an opt-in status. For example, 'I' may represent an opt-in status.",
      "key": "optinValue",
      "label": "Optin Value",
      "required": false,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [],
  "name": "Responsys",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 135 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Yotpo",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/actions.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "yotpo-actions",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "The store ID for your Yotpo account",
      "key": "store_id",
      "label": "Store ID",
      "required": true,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [],
  "name": "Yotpo",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 136 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Mantle",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/mantle.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-mantle",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "The unique identifier for the app in Mantle. Get this from the API Keys section for your app in Mantle.",
      "key": "appId",
      "label": "App ID",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "The API key for the app in Mantle. Get this from the API Keys section for your app in Mantle.",
      "key": "apiKey",
      "label": "API Key",
      "required": true,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [],
  "name": "Mantle",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 137 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to ChartMogul",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/chartmogul.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-chartmogul",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Copy the webhook URL from ChartMogul and paste it here",
      "key": "chartmogul_webhook_url",
      "label": "ChartMogul webhook URL",
      "required": true,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [],
  "name": "ChartMogul",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 138 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Xtremepush",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/xtremepush.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-xtremepush",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Xtremepush integration URL can be found on the Xtremepush integration overview page",
      "key": "url",
      "label": "URL",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "Auth token for API can be found on the Xtremepush integration overview page",
      "key": "apiKey",
      "label": "API Key",
      "required": true,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.type}",
          "description": "The type of the event",
          "key": "type",
          "label": "Event type",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "anonymousId": "{event.distinct_id}",
            "email": "{event.context.traits.email}",
            "phone": "{event.context.traits.phone}",
            "userId": "{person.id}",
          },
          "description": "The unique identifiers for the user",
          "key": "identifiers",
          "label": "Identifiers",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.event}",
          "description": "The name of the Segment track() event.",
          "key": "event",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties}",
          "description": "The properties of the Segment track() event.",
          "key": "properties",
          "label": "Event Properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The timestamp of the event.",
          "key": "timestamp",
          "label": "Timestamp",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "The message ID of the event.",
          "key": "messageId",
          "label": "Message ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "track",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Send Analytics Events",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event in ('$identify', '$set')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.type}",
          "description": "The type of the event",
          "key": "type",
          "label": "Event type",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "anonymousId": "{event.distinct_id}",
            "email": "{person.properties.email}",
            "phone": "{person.properties.phone}",
            "userId": "{person.id}",
          },
          "description": "The unique identifiers for the user",
          "key": "identifiers",
          "label": "Identifiers",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{person.properties}",
          "description": "Attributes assocatiated with the user.",
          "key": "traits",
          "label": "User Attributes",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The timestamp of the event.",
          "key": "timestamp",
          "label": "Timestamp",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "The message ID of the event.",
          "key": "messageId",
          "label": "Message ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "identify",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Send User Profile Data",
    },
  ],
  "name": "Xtremepush",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 139 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Spiffy",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/spiffy.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-spiffy",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Spiffy Org ID",
      "key": "org_id",
      "label": "Organization ID",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "Spiffy Org API Key",
      "key": "api_key",
      "label": "API Key",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "choices": [
        {
          "label": "Production",
          "value": "prod",
        },
        {
          "label": "Development",
          "value": "dev",
        },
      ],
      "default": undefined,
      "description": "Spiffy Org Environment",
      "key": "environment",
      "label": "Spiffy Environment",
      "required": true,
      "secret": false,
      "type": "choice",
    },
  ],
  "mapping_templates": [],
  "name": "Spiffy",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 140 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Inleads AI",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/ai.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "inleads-ai",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Your Inleads AI API Key. You can find your API Key in your inleads.ai settings.",
      "key": "apiKey",
      "label": "API Key",
      "required": true,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.event}",
          "description": "The name of the event",
          "key": "eventName",
          "label": "Event name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id}",
          "description": "The user id, to uniquely identify the user associated with the event",
          "key": "user_id",
          "label": "User id",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.groupId}",
          "description": "The account id, to uniquely identify the account associated with the user",
          "key": "account_id",
          "label": "Account id",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties}",
          "description": "The properties of the track call",
          "key": "properties",
          "label": "Event properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.context.traits}",
          "description": "The Traits of the track call",
          "key": "traits",
          "label": "Event Traits",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "browser": "{event.properties.$raw_user_agent}",
            "city": "{event.properties.$geoip_city_name}",
            "country": "{event.properties.$geoip_country_name}",
            "deviceModel": "{event.properties.$device_model}",
            "deviceType": "{event.properties.$device_type}",
            "deviceVendor": "{event.properties.$device_manufacturer}",
            "ip": "{event.properties.$ip}",
            "latitude": "{event.properties.$geoip_latitude}",
            "longitude": "{event.properties.$geoip_longitude}",
            "os": "{event.properties.$os}",
            "osVersion": "{event.properties.$os_version}",
            "timeZone": "{event.properties.$timezone ?? event.properties.timezone}",
          },
          "description": "User metadata including IP, Location, etc.",
          "key": "userMeta",
          "label": "User Metadata",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.distinct_id}",
          "description": "User Anonymous id",
          "key": "anonymous_id",
          "label": "Anonymous ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "The ID of the event.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The URL of the page where the event occurred.",
          "key": "url",
          "label": "URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$referrer}",
          "description": "The referrer of the page where the event occurred.",
          "key": "referer",
          "label": "Referrer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$locale}",
          "description": "The language of the browser.",
          "key": "user_language",
          "label": "User Language",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The time of the event in UTC.",
          "key": "utc_time",
          "label": "UTC Time",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "content": "{event.properties.utm_content}",
            "medium": "{event.properties.utm_medium}",
            "name": "{event.properties.utm_campaign}",
            "source": "{event.properties.utm_source}",
            "term": "{event.properties.utm_term}",
          },
          "description": "Information about the UTM parameters.",
          "key": "utm",
          "label": "UTM",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "density": "",
            "height": "{event.context.screen.height}",
            "width": "{event.context.screen.width}",
          },
          "description": "Information about the screen.",
          "key": "screen",
          "label": "Screen",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.properties.$timezone ?? event.properties.timezone}",
          "description": "The timezone of the browser.",
          "key": "timezone",
          "label": "Timezone",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "The IP address of the user.",
          "key": "source_ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "track",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Track Event",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = '$groupidentify'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.groupId}",
          "description": "The External ID of the account to send properties for",
          "key": "account_id",
          "label": "Account id",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id}",
          "description": "The ID associated with the user",
          "key": "user_id",
          "label": "User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.name ?? event.properties.name}",
          "description": "The Account name",
          "key": "name",
          "label": "Account name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.created_at ?? person.properties.createdAt}",
          "description": "The timestamp when the account was created, represented in the ISO-8601 date format. For instance, "2023-09-26T15:30:00Z".",
          "key": "created_at",
          "label": "Account created at",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties}",
          "description": "The properties of the account",
          "key": "traits",
          "label": "Account properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.website}",
          "description": "The account website",
          "key": "website",
          "label": "Account website",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "browser": "{event.properties.$raw_user_agent}",
            "city": "{event.properties.$geoip_city_name}",
            "country": "{event.properties.$geoip_country_name}",
            "deviceModel": "{event.properties.$device_model}",
            "deviceType": "{event.properties.$device_type}",
            "deviceVendor": "{event.properties.$device_manufacturer}",
            "ip": "{event.properties.$ip}",
            "latitude": "{event.properties.$geoip_latitude}",
            "longitude": "{event.properties.$geoip_longitude}",
            "os": "{event.properties.$os}",
            "osVersion": "{event.properties.$os_version}",
            "timeZone": "{event.properties.$timezone ?? event.properties.timezone}",
          },
          "description": "User metadata including IP, Location, etc.",
          "key": "userMeta",
          "label": "User Metadata",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.distinct_id}",
          "description": "User Anonymous id",
          "key": "anonymous_id",
          "label": "Anonymous ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "The ID of the event.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The URL of the page where the event occurred.",
          "key": "url",
          "label": "URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$referrer}",
          "description": "The referrer of the page where the event occurred.",
          "key": "referer",
          "label": "Referrer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$locale}",
          "description": "The language of the browser.",
          "key": "user_language",
          "label": "User Language",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The time of the event in UTC.",
          "key": "utc_time",
          "label": "UTC Time",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "content": "{event.properties.utm_content}",
            "medium": "{event.properties.utm_medium}",
            "name": "{event.properties.utm_campaign}",
            "source": "{event.properties.utm_source}",
            "term": "{event.properties.utm_term}",
          },
          "description": "Information about the UTM parameters.",
          "key": "utm",
          "label": "UTM",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "density": "",
            "height": "{event.context.screen.height}",
            "width": "{event.context.screen.width}",
          },
          "description": "Information about the screen.",
          "key": "screen",
          "label": "Screen",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.properties.$timezone ?? event.properties.timezone}",
          "description": "The timezone of the browser.",
          "key": "timezone",
          "label": "Timezone",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "The IP address of the user.",
          "key": "source_ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "group",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Group",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event in ('$identify', '$set')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{person.id}",
          "description": "The External ID of the user",
          "key": "user_id",
          "label": "User ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.name ?? event.properties.name}",
          "description": "The user's name",
          "key": "name",
          "label": "Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.first_name ?? event.properties.first_name}",
          "description": "The user's first name. This field is mandatory if you're not providing a name field",
          "key": "first_name",
          "label": "First name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.last_name ?? event.properties.last_name}",
          "description": "The user's last name. This field is mandatory if you're not providing a name field",
          "key": "last_name",
          "label": "Last name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.email ?? event.properties.email}",
          "description": "The user's email address",
          "key": "email",
          "label": "Email address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.context.group_id ?? event.groupId}",
          "description": "The account id, to uniquely identify the account associated with the user",
          "key": "account_id",
          "label": "Account id",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.created_at ?? person.properties.createdAt}",
          "description": "The timestamp when the user was created, represented in the ISO-8601 date format. For instance, "2023-09-26T15:30:00Z".",
          "key": "created_at",
          "label": "Created at",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties}",
          "description": "Properties to associate with the user",
          "key": "traits",
          "label": "Traits",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "browser": "{event.properties.$raw_user_agent}",
            "city": "{event.properties.$geoip_city_name}",
            "country": "{event.properties.$geoip_country_name}",
            "deviceModel": "{event.properties.$device_model}",
            "deviceType": "{event.properties.$device_type}",
            "deviceVendor": "{event.properties.$device_manufacturer}",
            "ip": "{event.properties.$ip}",
            "latitude": "{event.properties.$geoip_latitude}",
            "longitude": "{event.properties.$geoip_longitude}",
            "os": "{event.properties.$os}",
            "osVersion": "{event.properties.$os_version}",
            "timeZone": "{event.properties.$timezone ?? event.properties.timezone}",
          },
          "description": "User metadata including IP, Location, etc.",
          "key": "userMeta",
          "label": "User Metadata",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.distinct_id}",
          "description": "User Anonymous id",
          "key": "anonymous_id",
          "label": "Anonymous ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "The ID of the event.",
          "key": "event_id",
          "label": "Event ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$current_url}",
          "description": "The URL of the page where the event occurred.",
          "key": "url",
          "label": "URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$referrer}",
          "description": "The referrer of the page where the event occurred.",
          "key": "referer",
          "label": "Referrer",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$locale}",
          "description": "The language of the browser.",
          "key": "user_language",
          "label": "User Language",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The time of the event in UTC.",
          "key": "utc_time",
          "label": "UTC Time",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "content": "{event.properties.utm_content}",
            "medium": "{event.properties.utm_medium}",
            "name": "{event.properties.utm_campaign}",
            "source": "{event.properties.utm_source}",
            "term": "{event.properties.utm_term}",
          },
          "description": "Information about the UTM parameters.",
          "key": "utm",
          "label": "UTM",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "density": "",
            "height": "{event.context.screen.height}",
            "width": "{event.context.screen.width}",
          },
          "description": "Information about the screen.",
          "key": "screen",
          "label": "Screen",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.properties.$timezone ?? event.properties.timezone}",
          "description": "The timezone of the browser.",
          "key": "timezone",
          "label": "Timezone",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "The IP address of the user.",
          "key": "source_ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "identify",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Identify User",
    },
  ],
  "name": "Inleads AI",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 141 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Magellan AI",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/magellan.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-magellan-ai",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Unique identifier for the web pixel on whose behalf the event is being sent; 32 hex digits",
      "key": "pixelToken",
      "label": "Pixel token",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "Required in order to pass GDPR deletion requests to Magellan AI",
      "key": "apiToken",
      "label": "API token",
      "required": false,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [],
  "name": "Magellan AI",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 142 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Contentstack Cloud",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/contentstack.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-contentstack",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Your Personalize project ID to which Segment's data should be synced.",
      "key": "personalizeProjectId",
      "label": "Personalize project ID",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "Your region-based personalize-edge API base URL.",
      "key": "personalizeEdgeApiBaseUrl",
      "label": "Personalize Edge API base URL",
      "required": true,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [],
  "name": "Contentstack Cloud",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 143 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Trubrics",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/trubrics.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-trubrics",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Your Trubrics Project API Key. This can be found in your project settings.",
      "key": "apiKey",
      "label": "Project API Key",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": "app.trubrics.com/api/ingestion",
      "description": "The Trubrics API URL. In most cases the default value should be used.",
      "key": "url",
      "label": "Project URL",
      "required": true,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [],
  "name": "Trubrics",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 144 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Taboola",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/taboola.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-taboola-actions",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "The client ID from your Taboola account.",
      "key": "client_id",
      "label": "Client ID",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "The client's secret from your Taboola account.",
      "key": "client_secret",
      "label": "Client Secret",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "choices": [
        {
          "label": "Audience Computation Key",
          "value": "computation_key",
        },
        {
          "label": "Audience Name",
          "value": "audience_name",
        },
      ],
      "default": "computation_key",
      "description": "The audience identifier from your Taboola account.",
      "key": "audience_identifier",
      "label": "Audience Identifier",
      "required": false,
      "secret": false,
      "type": "choice",
    },
  ],
  "mapping_templates": [],
  "name": "Taboola",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 145 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to First Party Dv360",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/first.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-first-party-dv360",
  "inputs_schema": [],
  "mapping_templates": [],
  "name": "First Party Dv360",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 146 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Angler AI",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/angler.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-angler-ai",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Your Angler AI API Authentication Token",
      "key": "accessToken",
      "label": "Authentication Token",
      "required": true,
      "secret": false,
      "type": "password",
    },
    {
      "default": undefined,
      "description": "Your Angler AI Workspace ID",
      "key": "workspaceId",
      "label": "Workspace ID",
      "required": true,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event in ('$identify', '$set')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": {
            "accepts_marketing": "{person.properties.accepts_marketing}",
            "accepts_marketing_updated_at": "{person.properties.accepts_marketing_updated_at}",
            "created_at": "{person.properties.created_at}",
            "currency": "{person.properties.currency}",
            "email": "{person.properties.email}",
            "first_name": "{person.properties.first_name}",
            "hashed_email": "{person.properties.hashed_email}",
            "hashed_first_name": "{person.properties.hashed_first_name}",
            "hashed_last_name": "{person.properties.hashed_last_name}",
            "hashed_phone": "{person.properties.hashed_phone}",
            "id": "{person.id ?? person.properties.id}",
            "last_name": "{person.properties.last_name}",
            "last_order_id": "{person.properties.last_order_id}",
            "last_order_name": "{person.properties.last_order_name}",
            "marketing_opt_in_level": "{person.properties.marketing_opt_in_level}",
            "note": "{person.properties.note}",
            "orders_count": "{person.properties.orders_count}",
            "phone": "{person.properties.phone}",
            "state": "{person.properties.state}",
            "tax_exempt": "{person.properties.tax_exempt}",
            "total_spent": "{person.properties.total_spent}",
            "updated_at": "{person.properties.updated_at}",
            "verified_email": "{person.properties.verified_email}",
          },
          "description": "The user object.",
          "key": "user",
          "label": "User",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "address1": undefined,
            "address2": undefined,
            "city": undefined,
            "country": undefined,
            "country_code": undefined,
            "first_name": undefined,
            "last_name": undefined,
            "phone": undefined,
            "province": undefined,
            "province_code": undefined,
            "zip": undefined,
          },
          "description": "A list of the ten most recently updated addresses for the customer.",
          "key": "addresses",
          "label": "Addresses",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "address1": "{person.properties.default_address.address1}",
            "address2": "{person.properties.default_address.address2}",
            "city": "{person.properties.default_address.city}",
            "country": "{person.properties.default_address.country}",
            "country_code": "{person.properties.default_address.country_code}",
            "first_name": "{person.properties.default_address.first_name}",
            "last_name": "{person.properties.default_address.last_name}",
            "phone": "{person.properties.default_address.phone}",
            "province": "{person.properties.default_address.province}",
            "province_code": "{person.properties.default_address.province_code}",
            "zip": "{person.properties.default_address.zip}",
          },
          "description": "The mailing address associated with the payment method.",
          "key": "default_address",
          "label": "Default Address",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "consent_updated_at": undefined,
            "opt_in_level": undefined,
            "state": undefined,
          },
          "description": "The marketing consent information when the customer consented to receiving marketing material by email.",
          "key": "email_marketing_consent",
          "label": "Email Marketing Consent",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "key": undefined,
            "namespace": undefined,
            "type": undefined,
            "value": undefined,
          },
          "description": "Attaches additional metadata to a shop's resources.",
          "key": "metafield",
          "label": "Metafield",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "consent_collected_from": undefined,
            "consent_updated_at": undefined,
            "opt_in_level": undefined,
            "state": undefined,
          },
          "description": "The marketing consent information when the customer consented to receiving marketing material by SMS.",
          "key": "sms_marketing_consent",
          "label": "SMS Marketing Consent",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "saveUser",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Save User",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = '$pageview'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.uuid}",
          "description": "A unique event identifier.",
          "key": "eventId",
          "label": "Event ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "The IP address of the user.",
          "key": "ipAddress",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "The user agent of the device sending the event.",
          "key": "userAgent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The timestamp when the event was triggered.",
          "key": "timestamp",
          "label": "Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "anonymousId": "{event.distinct_id}",
            "clientId": "{event.distinct_id}",
            "fbc": "{event.properties.fbc}",
            "fbp": "{event.properties.fbp}",
            "ga": "{event.properties.ga}",
            "userId": "{person.id}",
          },
          "description": "Identifiers for the user",
          "key": "identifiers",
          "label": "Identifiers",
          "required": true,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "referrer": "{event.properties.$referrer}",
            "url": "{event.properties.$current_url}",
          },
          "description": "Page details to send with the event",
          "key": "page",
          "label": "Page",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {},
          "description": "Custom attributes for the event. Data should be specified as key:value pairs",
          "key": "customAttributes",
          "label": "Custom Attributes",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "dob": "{person.properties.birthday ?? event.context.traits.birthday}",
            "email": "{person.properties.email ?? event.context.traits.email}",
            "firstName": "{person.properties.first_name ?? event.context.traits.first_name}",
            "lastName": "{person.properties.last_name ?? event.context.traits.last_name}",
            "phone": "{person.properties.phone ?? event.context.traits.phone}",
          },
          "description": "Customer details",
          "key": "customer",
          "label": "Customer",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "currencyCode": undefined,
            "id": undefined,
            "totalAmount": undefined,
          },
          "description": "Cart details",
          "key": "cart",
          "label": "Cart",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "id": undefined,
            "imageSrc": undefined,
            "priceAmount": undefined,
            "quantity": undefined,
            "sku": undefined,
            "title": undefined,
            "type": undefined,
            "untranslatedTitle": undefined,
            "url": undefined,
            "variantId": undefined,
            "vendor": undefined,
          },
          "description": "Cart Line Item details",
          "key": "cartLines",
          "label": "Cart Line Items",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "choices": [
            {
              "label": "page_viewed",
              "value": "page_viewed",
            },
            {
              "label": "cart_viewed",
              "value": "cart_viewed",
            },
          ],
          "default": undefined,
          "description": "The name of the event to track.",
          "key": "eventName",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "saveBaseEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Save Event - Page Viewed",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Cart Viewed'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.uuid}",
          "description": "A unique event identifier.",
          "key": "eventId",
          "label": "Event ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "The IP address of the user.",
          "key": "ipAddress",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "The user agent of the device sending the event.",
          "key": "userAgent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The timestamp when the event was triggered.",
          "key": "timestamp",
          "label": "Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "anonymousId": "{event.distinct_id}",
            "clientId": "{event.distinct_id}",
            "fbc": "{event.properties.fbc}",
            "fbp": "{event.properties.fbp}",
            "ga": "{event.properties.ga}",
            "userId": "{person.id}",
          },
          "description": "Identifiers for the user",
          "key": "identifiers",
          "label": "Identifiers",
          "required": true,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "referrer": "{event.properties.$referrer}",
            "url": "{event.properties.$current_url}",
          },
          "description": "Page details to send with the event",
          "key": "page",
          "label": "Page",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {},
          "description": "Custom attributes for the event. Data should be specified as key:value pairs",
          "key": "customAttributes",
          "label": "Custom Attributes",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "dob": "{person.properties.birthday ?? event.context.traits.birthday}",
            "email": "{person.properties.email ?? event.context.traits.email}",
            "firstName": "{person.properties.first_name ?? event.context.traits.first_name}",
            "lastName": "{person.properties.last_name ?? event.context.traits.last_name}",
            "phone": "{person.properties.phone ?? event.context.traits.phone}",
          },
          "description": "Customer details",
          "key": "customer",
          "label": "Customer",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "currencyCode": undefined,
            "id": undefined,
            "totalAmount": undefined,
          },
          "description": "Cart details",
          "key": "cart",
          "label": "Cart",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "id": undefined,
            "imageSrc": undefined,
            "priceAmount": undefined,
            "quantity": undefined,
            "sku": undefined,
            "title": undefined,
            "type": undefined,
            "untranslatedTitle": undefined,
            "url": undefined,
            "variantId": undefined,
            "vendor": undefined,
          },
          "description": "Cart Line Item details",
          "key": "cartLines",
          "label": "Cart Line Items",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "choices": [
            {
              "label": "page_viewed",
              "value": "page_viewed",
            },
            {
              "label": "cart_viewed",
              "value": "cart_viewed",
            },
          ],
          "default": undefined,
          "description": "The name of the event to track.",
          "key": "eventName",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "saveBaseEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Save Event - Cart Viewed",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Checkout Address Info Submitted'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.uuid}",
          "description": "A unique event identifier.",
          "key": "eventId",
          "label": "Event ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "The IP address of the user.",
          "key": "ipAddress",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "The user agent of the device sending the event.",
          "key": "userAgent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The timestamp when the event was triggered.",
          "key": "timestamp",
          "label": "Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "anonymousId": "{event.distinct_id}",
            "clientId": "{event.distinct_id}",
            "fbc": "{event.properties.fbc}",
            "fbp": "{event.properties.fbp}",
            "ga": "{event.properties.ga}",
            "userId": "{person.id}",
          },
          "description": "Identifiers for the user",
          "key": "identifiers",
          "label": "Identifiers",
          "required": true,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "referrer": "{event.properties.$referrer}",
            "url": "{event.properties.$current_url}",
          },
          "description": "Page details to send with the event",
          "key": "page",
          "label": "Page",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {},
          "description": "Custom attributes for the event. Data should be specified as key:value pairs",
          "key": "customAttributes",
          "label": "Custom Attributes",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "dob": "{person.properties.birthday ?? event.context.traits.birthday}",
            "email": "{person.properties.email ?? event.context.traits.email}",
            "firstName": "{person.properties.first_name ?? event.context.traits.first_name}",
            "lastName": "{person.properties.last_name ?? event.context.traits.last_name}",
            "phone": "{person.properties.phone ?? event.context.traits.phone}",
          },
          "description": "Customer details",
          "key": "customer",
          "label": "Customer",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "currencyCode": undefined,
            "orderId": undefined,
            "shippingLinePriceAmount": undefined,
            "subtotalPriceAmount": undefined,
            "totalAmount": undefined,
            "totalTaxAmount": undefined,
          },
          "description": "Checkout details",
          "key": "checkout",
          "label": "Checkout",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "discountTitle": undefined,
            "discountValue": undefined,
            "id": undefined,
            "imageSrc": undefined,
            "priceAmount": undefined,
            "quantity": undefined,
            "sku": undefined,
            "title": undefined,
            "type": undefined,
            "untranslatedTitle": undefined,
            "url": undefined,
            "variantId": undefined,
            "vendor": undefined,
          },
          "description": "Checkout Line Item details",
          "key": "checkoutLineItems",
          "label": "Checkout Line Items",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "address1": "{event.properties.billing_address.address1}",
            "address2": "{event.properties.billing_address.address2}",
            "city": "{event.properties.billing_address.city}",
            "country": "{event.properties.billing_address.country}",
            "country_code": "{event.properties.billing_address.country_code}",
            "first_name": "{event.properties.billing_address.first_name}",
            "last_name": "{event.properties.billing_address.last_name}",
            "phone": "{event.properties.billing_address.phone}",
            "province": "{event.properties.billing_address.province}",
            "province_code": "{event.properties.billing_address.province_code}",
            "zip": "{event.properties.billing_address.zip}",
          },
          "description": "The billing address associated with the checkout.",
          "key": "checkoutBillingAddress",
          "label": "Checkout Billing Address",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "address1": "{event.properties.shipping_address.address1}",
            "address2": "{event.properties.shipping_address.address2}",
            "city": "{event.properties.shipping_address.city}",
            "country": "{event.properties.shipping_address.country}",
            "country_code": "{event.properties.shipping_address.country_code}",
            "first_name": "{event.properties.shipping_address.first_name}",
            "last_name": "{event.properties.shipping_address.last_name}",
            "phone": "{event.properties.shipping_address.phone}",
            "province": "{event.properties.shipping_address.province}",
            "province_code": "{event.properties.shipping_address.province_code}",
            "zip": "{event.properties.shipping_address.zip}",
          },
          "description": "The address to which the order will be shipped.",
          "key": "checkoutShippingAddress",
          "label": "Checkout Shipping Address",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "choices": [
            {
              "label": "checkout_address_info_submitted",
              "value": "checkout_address_info_submitted",
            },
            {
              "label": "checkout_completed",
              "value": "checkout_completed",
            },
            {
              "label": "checkout_contact_info_submitted",
              "value": "checkout_contact_info_submitted",
            },
            {
              "label": "checkout_shipping_info_submitted",
              "value": "checkout_shipping_info_submitted",
            },
            {
              "label": "checkout_started",
              "value": "checkout_started",
            },
            {
              "label": "payment_info_submitted",
              "value": "payment_info_submitted",
            },
          ],
          "default": undefined,
          "description": "The name of the Checkout Event to track.",
          "key": "eventName",
          "label": "Checkout Event Name",
          "required": true,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "saveCheckoutEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Save Event - Checkout Address Info Submitted",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Order Completed'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.uuid}",
          "description": "A unique event identifier.",
          "key": "eventId",
          "label": "Event ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "The IP address of the user.",
          "key": "ipAddress",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "The user agent of the device sending the event.",
          "key": "userAgent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The timestamp when the event was triggered.",
          "key": "timestamp",
          "label": "Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "anonymousId": "{event.distinct_id}",
            "clientId": "{event.distinct_id}",
            "fbc": "{event.properties.fbc}",
            "fbp": "{event.properties.fbp}",
            "ga": "{event.properties.ga}",
            "userId": "{person.id}",
          },
          "description": "Identifiers for the user",
          "key": "identifiers",
          "label": "Identifiers",
          "required": true,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "referrer": "{event.properties.$referrer}",
            "url": "{event.properties.$current_url}",
          },
          "description": "Page details to send with the event",
          "key": "page",
          "label": "Page",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {},
          "description": "Custom attributes for the event. Data should be specified as key:value pairs",
          "key": "customAttributes",
          "label": "Custom Attributes",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "dob": "{person.properties.birthday ?? event.context.traits.birthday}",
            "email": "{person.properties.email ?? event.context.traits.email}",
            "firstName": "{person.properties.first_name ?? event.context.traits.first_name}",
            "lastName": "{person.properties.last_name ?? event.context.traits.last_name}",
            "phone": "{person.properties.phone ?? event.context.traits.phone}",
          },
          "description": "Customer details",
          "key": "customer",
          "label": "Customer",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "currencyCode": undefined,
            "orderId": undefined,
            "shippingLinePriceAmount": undefined,
            "subtotalPriceAmount": undefined,
            "totalAmount": undefined,
            "totalTaxAmount": undefined,
          },
          "description": "Checkout details",
          "key": "checkout",
          "label": "Checkout",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "discountTitle": undefined,
            "discountValue": undefined,
            "id": undefined,
            "imageSrc": undefined,
            "priceAmount": undefined,
            "quantity": undefined,
            "sku": undefined,
            "title": undefined,
            "type": undefined,
            "untranslatedTitle": undefined,
            "url": undefined,
            "variantId": undefined,
            "vendor": undefined,
          },
          "description": "Checkout Line Item details",
          "key": "checkoutLineItems",
          "label": "Checkout Line Items",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "address1": "{event.properties.billing_address.address1}",
            "address2": "{event.properties.billing_address.address2}",
            "city": "{event.properties.billing_address.city}",
            "country": "{event.properties.billing_address.country}",
            "country_code": "{event.properties.billing_address.country_code}",
            "first_name": "{event.properties.billing_address.first_name}",
            "last_name": "{event.properties.billing_address.last_name}",
            "phone": "{event.properties.billing_address.phone}",
            "province": "{event.properties.billing_address.province}",
            "province_code": "{event.properties.billing_address.province_code}",
            "zip": "{event.properties.billing_address.zip}",
          },
          "description": "The billing address associated with the checkout.",
          "key": "checkoutBillingAddress",
          "label": "Checkout Billing Address",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "address1": "{event.properties.shipping_address.address1}",
            "address2": "{event.properties.shipping_address.address2}",
            "city": "{event.properties.shipping_address.city}",
            "country": "{event.properties.shipping_address.country}",
            "country_code": "{event.properties.shipping_address.country_code}",
            "first_name": "{event.properties.shipping_address.first_name}",
            "last_name": "{event.properties.shipping_address.last_name}",
            "phone": "{event.properties.shipping_address.phone}",
            "province": "{event.properties.shipping_address.province}",
            "province_code": "{event.properties.shipping_address.province_code}",
            "zip": "{event.properties.shipping_address.zip}",
          },
          "description": "The address to which the order will be shipped.",
          "key": "checkoutShippingAddress",
          "label": "Checkout Shipping Address",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "choices": [
            {
              "label": "checkout_address_info_submitted",
              "value": "checkout_address_info_submitted",
            },
            {
              "label": "checkout_completed",
              "value": "checkout_completed",
            },
            {
              "label": "checkout_contact_info_submitted",
              "value": "checkout_contact_info_submitted",
            },
            {
              "label": "checkout_shipping_info_submitted",
              "value": "checkout_shipping_info_submitted",
            },
            {
              "label": "checkout_started",
              "value": "checkout_started",
            },
            {
              "label": "payment_info_submitted",
              "value": "payment_info_submitted",
            },
          ],
          "default": undefined,
          "description": "The name of the Checkout Event to track.",
          "key": "eventName",
          "label": "Checkout Event Name",
          "required": true,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "saveCheckoutEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Save Event - Checkout Completed",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Checkout Contact Info Submitted'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.uuid}",
          "description": "A unique event identifier.",
          "key": "eventId",
          "label": "Event ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "The IP address of the user.",
          "key": "ipAddress",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "The user agent of the device sending the event.",
          "key": "userAgent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The timestamp when the event was triggered.",
          "key": "timestamp",
          "label": "Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "anonymousId": "{event.distinct_id}",
            "clientId": "{event.distinct_id}",
            "fbc": "{event.properties.fbc}",
            "fbp": "{event.properties.fbp}",
            "ga": "{event.properties.ga}",
            "userId": "{person.id}",
          },
          "description": "Identifiers for the user",
          "key": "identifiers",
          "label": "Identifiers",
          "required": true,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "referrer": "{event.properties.$referrer}",
            "url": "{event.properties.$current_url}",
          },
          "description": "Page details to send with the event",
          "key": "page",
          "label": "Page",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {},
          "description": "Custom attributes for the event. Data should be specified as key:value pairs",
          "key": "customAttributes",
          "label": "Custom Attributes",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "dob": "{person.properties.birthday ?? event.context.traits.birthday}",
            "email": "{person.properties.email ?? event.context.traits.email}",
            "firstName": "{person.properties.first_name ?? event.context.traits.first_name}",
            "lastName": "{person.properties.last_name ?? event.context.traits.last_name}",
            "phone": "{person.properties.phone ?? event.context.traits.phone}",
          },
          "description": "Customer details",
          "key": "customer",
          "label": "Customer",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "currencyCode": undefined,
            "orderId": undefined,
            "shippingLinePriceAmount": undefined,
            "subtotalPriceAmount": undefined,
            "totalAmount": undefined,
            "totalTaxAmount": undefined,
          },
          "description": "Checkout details",
          "key": "checkout",
          "label": "Checkout",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "discountTitle": undefined,
            "discountValue": undefined,
            "id": undefined,
            "imageSrc": undefined,
            "priceAmount": undefined,
            "quantity": undefined,
            "sku": undefined,
            "title": undefined,
            "type": undefined,
            "untranslatedTitle": undefined,
            "url": undefined,
            "variantId": undefined,
            "vendor": undefined,
          },
          "description": "Checkout Line Item details",
          "key": "checkoutLineItems",
          "label": "Checkout Line Items",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "address1": "{event.properties.billing_address.address1}",
            "address2": "{event.properties.billing_address.address2}",
            "city": "{event.properties.billing_address.city}",
            "country": "{event.properties.billing_address.country}",
            "country_code": "{event.properties.billing_address.country_code}",
            "first_name": "{event.properties.billing_address.first_name}",
            "last_name": "{event.properties.billing_address.last_name}",
            "phone": "{event.properties.billing_address.phone}",
            "province": "{event.properties.billing_address.province}",
            "province_code": "{event.properties.billing_address.province_code}",
            "zip": "{event.properties.billing_address.zip}",
          },
          "description": "The billing address associated with the checkout.",
          "key": "checkoutBillingAddress",
          "label": "Checkout Billing Address",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "address1": "{event.properties.shipping_address.address1}",
            "address2": "{event.properties.shipping_address.address2}",
            "city": "{event.properties.shipping_address.city}",
            "country": "{event.properties.shipping_address.country}",
            "country_code": "{event.properties.shipping_address.country_code}",
            "first_name": "{event.properties.shipping_address.first_name}",
            "last_name": "{event.properties.shipping_address.last_name}",
            "phone": "{event.properties.shipping_address.phone}",
            "province": "{event.properties.shipping_address.province}",
            "province_code": "{event.properties.shipping_address.province_code}",
            "zip": "{event.properties.shipping_address.zip}",
          },
          "description": "The address to which the order will be shipped.",
          "key": "checkoutShippingAddress",
          "label": "Checkout Shipping Address",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "choices": [
            {
              "label": "checkout_address_info_submitted",
              "value": "checkout_address_info_submitted",
            },
            {
              "label": "checkout_completed",
              "value": "checkout_completed",
            },
            {
              "label": "checkout_contact_info_submitted",
              "value": "checkout_contact_info_submitted",
            },
            {
              "label": "checkout_shipping_info_submitted",
              "value": "checkout_shipping_info_submitted",
            },
            {
              "label": "checkout_started",
              "value": "checkout_started",
            },
            {
              "label": "payment_info_submitted",
              "value": "payment_info_submitted",
            },
          ],
          "default": undefined,
          "description": "The name of the Checkout Event to track.",
          "key": "eventName",
          "label": "Checkout Event Name",
          "required": true,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "saveCheckoutEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Save Event - Checkout Contact Info Submitted",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Checkout Shipping Info Submitted'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.uuid}",
          "description": "A unique event identifier.",
          "key": "eventId",
          "label": "Event ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "The IP address of the user.",
          "key": "ipAddress",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "The user agent of the device sending the event.",
          "key": "userAgent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The timestamp when the event was triggered.",
          "key": "timestamp",
          "label": "Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "anonymousId": "{event.distinct_id}",
            "clientId": "{event.distinct_id}",
            "fbc": "{event.properties.fbc}",
            "fbp": "{event.properties.fbp}",
            "ga": "{event.properties.ga}",
            "userId": "{person.id}",
          },
          "description": "Identifiers for the user",
          "key": "identifiers",
          "label": "Identifiers",
          "required": true,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "referrer": "{event.properties.$referrer}",
            "url": "{event.properties.$current_url}",
          },
          "description": "Page details to send with the event",
          "key": "page",
          "label": "Page",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {},
          "description": "Custom attributes for the event. Data should be specified as key:value pairs",
          "key": "customAttributes",
          "label": "Custom Attributes",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "dob": "{person.properties.birthday ?? event.context.traits.birthday}",
            "email": "{person.properties.email ?? event.context.traits.email}",
            "firstName": "{person.properties.first_name ?? event.context.traits.first_name}",
            "lastName": "{person.properties.last_name ?? event.context.traits.last_name}",
            "phone": "{person.properties.phone ?? event.context.traits.phone}",
          },
          "description": "Customer details",
          "key": "customer",
          "label": "Customer",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "currencyCode": undefined,
            "orderId": undefined,
            "shippingLinePriceAmount": undefined,
            "subtotalPriceAmount": undefined,
            "totalAmount": undefined,
            "totalTaxAmount": undefined,
          },
          "description": "Checkout details",
          "key": "checkout",
          "label": "Checkout",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "discountTitle": undefined,
            "discountValue": undefined,
            "id": undefined,
            "imageSrc": undefined,
            "priceAmount": undefined,
            "quantity": undefined,
            "sku": undefined,
            "title": undefined,
            "type": undefined,
            "untranslatedTitle": undefined,
            "url": undefined,
            "variantId": undefined,
            "vendor": undefined,
          },
          "description": "Checkout Line Item details",
          "key": "checkoutLineItems",
          "label": "Checkout Line Items",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "address1": "{event.properties.billing_address.address1}",
            "address2": "{event.properties.billing_address.address2}",
            "city": "{event.properties.billing_address.city}",
            "country": "{event.properties.billing_address.country}",
            "country_code": "{event.properties.billing_address.country_code}",
            "first_name": "{event.properties.billing_address.first_name}",
            "last_name": "{event.properties.billing_address.last_name}",
            "phone": "{event.properties.billing_address.phone}",
            "province": "{event.properties.billing_address.province}",
            "province_code": "{event.properties.billing_address.province_code}",
            "zip": "{event.properties.billing_address.zip}",
          },
          "description": "The billing address associated with the checkout.",
          "key": "checkoutBillingAddress",
          "label": "Checkout Billing Address",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "address1": "{event.properties.shipping_address.address1}",
            "address2": "{event.properties.shipping_address.address2}",
            "city": "{event.properties.shipping_address.city}",
            "country": "{event.properties.shipping_address.country}",
            "country_code": "{event.properties.shipping_address.country_code}",
            "first_name": "{event.properties.shipping_address.first_name}",
            "last_name": "{event.properties.shipping_address.last_name}",
            "phone": "{event.properties.shipping_address.phone}",
            "province": "{event.properties.shipping_address.province}",
            "province_code": "{event.properties.shipping_address.province_code}",
            "zip": "{event.properties.shipping_address.zip}",
          },
          "description": "The address to which the order will be shipped.",
          "key": "checkoutShippingAddress",
          "label": "Checkout Shipping Address",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "choices": [
            {
              "label": "checkout_address_info_submitted",
              "value": "checkout_address_info_submitted",
            },
            {
              "label": "checkout_completed",
              "value": "checkout_completed",
            },
            {
              "label": "checkout_contact_info_submitted",
              "value": "checkout_contact_info_submitted",
            },
            {
              "label": "checkout_shipping_info_submitted",
              "value": "checkout_shipping_info_submitted",
            },
            {
              "label": "checkout_started",
              "value": "checkout_started",
            },
            {
              "label": "payment_info_submitted",
              "value": "payment_info_submitted",
            },
          ],
          "default": undefined,
          "description": "The name of the Checkout Event to track.",
          "key": "eventName",
          "label": "Checkout Event Name",
          "required": true,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "saveCheckoutEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Save Event - Checkout Shipping Info Submitted",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Checkout Started'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.uuid}",
          "description": "A unique event identifier.",
          "key": "eventId",
          "label": "Event ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "The IP address of the user.",
          "key": "ipAddress",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "The user agent of the device sending the event.",
          "key": "userAgent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The timestamp when the event was triggered.",
          "key": "timestamp",
          "label": "Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "anonymousId": "{event.distinct_id}",
            "clientId": "{event.distinct_id}",
            "fbc": "{event.properties.fbc}",
            "fbp": "{event.properties.fbp}",
            "ga": "{event.properties.ga}",
            "userId": "{person.id}",
          },
          "description": "Identifiers for the user",
          "key": "identifiers",
          "label": "Identifiers",
          "required": true,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "referrer": "{event.properties.$referrer}",
            "url": "{event.properties.$current_url}",
          },
          "description": "Page details to send with the event",
          "key": "page",
          "label": "Page",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {},
          "description": "Custom attributes for the event. Data should be specified as key:value pairs",
          "key": "customAttributes",
          "label": "Custom Attributes",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "dob": "{person.properties.birthday ?? event.context.traits.birthday}",
            "email": "{person.properties.email ?? event.context.traits.email}",
            "firstName": "{person.properties.first_name ?? event.context.traits.first_name}",
            "lastName": "{person.properties.last_name ?? event.context.traits.last_name}",
            "phone": "{person.properties.phone ?? event.context.traits.phone}",
          },
          "description": "Customer details",
          "key": "customer",
          "label": "Customer",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "currencyCode": undefined,
            "orderId": undefined,
            "shippingLinePriceAmount": undefined,
            "subtotalPriceAmount": undefined,
            "totalAmount": undefined,
            "totalTaxAmount": undefined,
          },
          "description": "Checkout details",
          "key": "checkout",
          "label": "Checkout",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "discountTitle": undefined,
            "discountValue": undefined,
            "id": undefined,
            "imageSrc": undefined,
            "priceAmount": undefined,
            "quantity": undefined,
            "sku": undefined,
            "title": undefined,
            "type": undefined,
            "untranslatedTitle": undefined,
            "url": undefined,
            "variantId": undefined,
            "vendor": undefined,
          },
          "description": "Checkout Line Item details",
          "key": "checkoutLineItems",
          "label": "Checkout Line Items",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "address1": "{event.properties.billing_address.address1}",
            "address2": "{event.properties.billing_address.address2}",
            "city": "{event.properties.billing_address.city}",
            "country": "{event.properties.billing_address.country}",
            "country_code": "{event.properties.billing_address.country_code}",
            "first_name": "{event.properties.billing_address.first_name}",
            "last_name": "{event.properties.billing_address.last_name}",
            "phone": "{event.properties.billing_address.phone}",
            "province": "{event.properties.billing_address.province}",
            "province_code": "{event.properties.billing_address.province_code}",
            "zip": "{event.properties.billing_address.zip}",
          },
          "description": "The billing address associated with the checkout.",
          "key": "checkoutBillingAddress",
          "label": "Checkout Billing Address",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "address1": "{event.properties.shipping_address.address1}",
            "address2": "{event.properties.shipping_address.address2}",
            "city": "{event.properties.shipping_address.city}",
            "country": "{event.properties.shipping_address.country}",
            "country_code": "{event.properties.shipping_address.country_code}",
            "first_name": "{event.properties.shipping_address.first_name}",
            "last_name": "{event.properties.shipping_address.last_name}",
            "phone": "{event.properties.shipping_address.phone}",
            "province": "{event.properties.shipping_address.province}",
            "province_code": "{event.properties.shipping_address.province_code}",
            "zip": "{event.properties.shipping_address.zip}",
          },
          "description": "The address to which the order will be shipped.",
          "key": "checkoutShippingAddress",
          "label": "Checkout Shipping Address",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "choices": [
            {
              "label": "checkout_address_info_submitted",
              "value": "checkout_address_info_submitted",
            },
            {
              "label": "checkout_completed",
              "value": "checkout_completed",
            },
            {
              "label": "checkout_contact_info_submitted",
              "value": "checkout_contact_info_submitted",
            },
            {
              "label": "checkout_shipping_info_submitted",
              "value": "checkout_shipping_info_submitted",
            },
            {
              "label": "checkout_started",
              "value": "checkout_started",
            },
            {
              "label": "payment_info_submitted",
              "value": "payment_info_submitted",
            },
          ],
          "default": undefined,
          "description": "The name of the Checkout Event to track.",
          "key": "eventName",
          "label": "Checkout Event Name",
          "required": true,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "saveCheckoutEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Save Event - Checkout Started",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Payment Info Entered'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.uuid}",
          "description": "A unique event identifier.",
          "key": "eventId",
          "label": "Event ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "The IP address of the user.",
          "key": "ipAddress",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "The user agent of the device sending the event.",
          "key": "userAgent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The timestamp when the event was triggered.",
          "key": "timestamp",
          "label": "Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "anonymousId": "{event.distinct_id}",
            "clientId": "{event.distinct_id}",
            "fbc": "{event.properties.fbc}",
            "fbp": "{event.properties.fbp}",
            "ga": "{event.properties.ga}",
            "userId": "{person.id}",
          },
          "description": "Identifiers for the user",
          "key": "identifiers",
          "label": "Identifiers",
          "required": true,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "referrer": "{event.properties.$referrer}",
            "url": "{event.properties.$current_url}",
          },
          "description": "Page details to send with the event",
          "key": "page",
          "label": "Page",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {},
          "description": "Custom attributes for the event. Data should be specified as key:value pairs",
          "key": "customAttributes",
          "label": "Custom Attributes",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "dob": "{person.properties.birthday ?? event.context.traits.birthday}",
            "email": "{person.properties.email ?? event.context.traits.email}",
            "firstName": "{person.properties.first_name ?? event.context.traits.first_name}",
            "lastName": "{person.properties.last_name ?? event.context.traits.last_name}",
            "phone": "{person.properties.phone ?? event.context.traits.phone}",
          },
          "description": "Customer details",
          "key": "customer",
          "label": "Customer",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "currencyCode": undefined,
            "orderId": undefined,
            "shippingLinePriceAmount": undefined,
            "subtotalPriceAmount": undefined,
            "totalAmount": undefined,
            "totalTaxAmount": undefined,
          },
          "description": "Checkout details",
          "key": "checkout",
          "label": "Checkout",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "discountTitle": undefined,
            "discountValue": undefined,
            "id": undefined,
            "imageSrc": undefined,
            "priceAmount": undefined,
            "quantity": undefined,
            "sku": undefined,
            "title": undefined,
            "type": undefined,
            "untranslatedTitle": undefined,
            "url": undefined,
            "variantId": undefined,
            "vendor": undefined,
          },
          "description": "Checkout Line Item details",
          "key": "checkoutLineItems",
          "label": "Checkout Line Items",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "address1": "{event.properties.billing_address.address1}",
            "address2": "{event.properties.billing_address.address2}",
            "city": "{event.properties.billing_address.city}",
            "country": "{event.properties.billing_address.country}",
            "country_code": "{event.properties.billing_address.country_code}",
            "first_name": "{event.properties.billing_address.first_name}",
            "last_name": "{event.properties.billing_address.last_name}",
            "phone": "{event.properties.billing_address.phone}",
            "province": "{event.properties.billing_address.province}",
            "province_code": "{event.properties.billing_address.province_code}",
            "zip": "{event.properties.billing_address.zip}",
          },
          "description": "The billing address associated with the checkout.",
          "key": "checkoutBillingAddress",
          "label": "Checkout Billing Address",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "address1": "{event.properties.shipping_address.address1}",
            "address2": "{event.properties.shipping_address.address2}",
            "city": "{event.properties.shipping_address.city}",
            "country": "{event.properties.shipping_address.country}",
            "country_code": "{event.properties.shipping_address.country_code}",
            "first_name": "{event.properties.shipping_address.first_name}",
            "last_name": "{event.properties.shipping_address.last_name}",
            "phone": "{event.properties.shipping_address.phone}",
            "province": "{event.properties.shipping_address.province}",
            "province_code": "{event.properties.shipping_address.province_code}",
            "zip": "{event.properties.shipping_address.zip}",
          },
          "description": "The address to which the order will be shipped.",
          "key": "checkoutShippingAddress",
          "label": "Checkout Shipping Address",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "choices": [
            {
              "label": "checkout_address_info_submitted",
              "value": "checkout_address_info_submitted",
            },
            {
              "label": "checkout_completed",
              "value": "checkout_completed",
            },
            {
              "label": "checkout_contact_info_submitted",
              "value": "checkout_contact_info_submitted",
            },
            {
              "label": "checkout_shipping_info_submitted",
              "value": "checkout_shipping_info_submitted",
            },
            {
              "label": "checkout_started",
              "value": "checkout_started",
            },
            {
              "label": "payment_info_submitted",
              "value": "payment_info_submitted",
            },
          ],
          "default": undefined,
          "description": "The name of the Checkout Event to track.",
          "key": "eventName",
          "label": "Checkout Event Name",
          "required": true,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "saveCheckoutEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Save Event - Checkout Payment Info Submitted",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Product List Viewed'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.uuid}",
          "description": "A unique event identifier.",
          "key": "eventId",
          "label": "Event ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "The IP address of the user.",
          "key": "ipAddress",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "The user agent of the device sending the event.",
          "key": "userAgent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The timestamp when the event was triggered.",
          "key": "timestamp",
          "label": "Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "anonymousId": "{event.distinct_id}",
            "clientId": "{event.distinct_id}",
            "fbc": "{event.properties.fbc}",
            "fbp": "{event.properties.fbp}",
            "ga": "{event.properties.ga}",
            "userId": "{person.id}",
          },
          "description": "Identifiers for the user",
          "key": "identifiers",
          "label": "Identifiers",
          "required": true,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "referrer": "{event.properties.$referrer}",
            "url": "{event.properties.$current_url}",
          },
          "description": "Page details to send with the event",
          "key": "page",
          "label": "Page",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {},
          "description": "Custom attributes for the event. Data should be specified as key:value pairs",
          "key": "customAttributes",
          "label": "Custom Attributes",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "dob": "{person.properties.birthday ?? event.context.traits.birthday}",
            "email": "{person.properties.email ?? event.context.traits.email}",
            "firstName": "{person.properties.first_name ?? event.context.traits.first_name}",
            "lastName": "{person.properties.last_name ?? event.context.traits.last_name}",
            "phone": "{person.properties.phone ?? event.context.traits.phone}",
          },
          "description": "Customer details",
          "key": "customer",
          "label": "Customer",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "currencyCode": undefined,
            "id": undefined,
            "totalAmount": undefined,
          },
          "description": "Cart details",
          "key": "cart",
          "label": "Cart",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "id": undefined,
            "imageSrc": undefined,
            "priceAmount": undefined,
            "quantity": undefined,
            "sku": undefined,
            "title": undefined,
            "type": undefined,
            "untranslatedTitle": undefined,
            "url": undefined,
            "variantId": undefined,
            "vendor": undefined,
          },
          "description": "Cart Line Item details",
          "key": "cartLines",
          "label": "Cart Line Items",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "id": "{event.properties.list_id}",
            "title": "{event.properties.list_name}",
          },
          "description": "Collection details",
          "key": "collection",
          "label": "Collection",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "id": undefined,
            "imageSrc": undefined,
            "priceAmount": undefined,
            "sku": undefined,
            "title": undefined,
            "type": undefined,
            "untranslatedTitle": undefined,
            "url": undefined,
            "variantId": undefined,
            "vendor": undefined,
          },
          "description": "A list of product variants associated with the collection.",
          "key": "collectionProductVariants",
          "label": "Collection Product Variants",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "choices": [
            {
              "label": "collection_viewed",
              "value": "collection_viewed",
            },
          ],
          "default": "collection_viewed",
          "description": "The name of the Collection Event to track.",
          "key": "eventName",
          "label": "Collection Event Name",
          "required": true,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "saveCollectionEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Save Event - Collection Viewed",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Products Searched'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.uuid}",
          "description": "A unique event identifier.",
          "key": "eventId",
          "label": "Event ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "The IP address of the user.",
          "key": "ipAddress",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "The user agent of the device sending the event.",
          "key": "userAgent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The timestamp when the event was triggered.",
          "key": "timestamp",
          "label": "Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "anonymousId": "{event.distinct_id}",
            "clientId": "{event.distinct_id}",
            "fbc": "{event.properties.fbc}",
            "fbp": "{event.properties.fbp}",
            "ga": "{event.properties.ga}",
            "userId": "{person.id}",
          },
          "description": "Identifiers for the user",
          "key": "identifiers",
          "label": "Identifiers",
          "required": true,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "referrer": "{event.properties.$referrer}",
            "url": "{event.properties.$current_url}",
          },
          "description": "Page details to send with the event",
          "key": "page",
          "label": "Page",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {},
          "description": "Custom attributes for the event. Data should be specified as key:value pairs",
          "key": "customAttributes",
          "label": "Custom Attributes",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "dob": "{person.properties.birthday ?? event.context.traits.birthday}",
            "email": "{person.properties.email ?? event.context.traits.email}",
            "firstName": "{person.properties.first_name ?? event.context.traits.first_name}",
            "lastName": "{person.properties.last_name ?? event.context.traits.last_name}",
            "phone": "{person.properties.phone ?? event.context.traits.phone}",
          },
          "description": "Customer details",
          "key": "customer",
          "label": "Customer",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "currencyCode": undefined,
            "id": undefined,
            "totalAmount": undefined,
          },
          "description": "Cart details",
          "key": "cart",
          "label": "Cart",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "id": undefined,
            "imageSrc": undefined,
            "priceAmount": undefined,
            "quantity": undefined,
            "sku": undefined,
            "title": undefined,
            "type": undefined,
            "untranslatedTitle": undefined,
            "url": undefined,
            "variantId": undefined,
            "vendor": undefined,
          },
          "description": "Cart Line Item details",
          "key": "cartLines",
          "label": "Cart Line Items",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "id": undefined,
            "imageSrc": undefined,
            "priceAmount": undefined,
            "sku": undefined,
            "title": undefined,
            "type": undefined,
            "untranslatedTitle": undefined,
            "url": undefined,
            "variantId": undefined,
            "vendor": undefined,
          },
          "description": "Search results details",
          "key": "searchResults",
          "label": "Search Results",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.properties.query}",
          "description": "The search query that was executed.",
          "key": "query",
          "label": "Search Query",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "choices": [
            {
              "label": "search_submitted",
              "value": "search_submitted",
            },
          ],
          "default": "search_submitted",
          "description": "The name of the Search event to track.",
          "key": "eventName",
          "label": "Search Event Name",
          "required": true,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "saveSearchEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Save Event - Search Submitted",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Product Added'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.uuid}",
          "description": "A unique event identifier.",
          "key": "eventId",
          "label": "Event ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "The IP address of the user.",
          "key": "ipAddress",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "The user agent of the device sending the event.",
          "key": "userAgent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The timestamp when the event was triggered.",
          "key": "timestamp",
          "label": "Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "anonymousId": "{event.distinct_id}",
            "clientId": "{event.distinct_id}",
            "fbc": "{event.properties.fbc}",
            "fbp": "{event.properties.fbp}",
            "ga": "{event.properties.ga}",
            "userId": "{person.id}",
          },
          "description": "Identifiers for the user",
          "key": "identifiers",
          "label": "Identifiers",
          "required": true,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "referrer": "{event.properties.$referrer}",
            "url": "{event.properties.$current_url}",
          },
          "description": "Page details to send with the event",
          "key": "page",
          "label": "Page",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {},
          "description": "Custom attributes for the event. Data should be specified as key:value pairs",
          "key": "customAttributes",
          "label": "Custom Attributes",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "dob": "{person.properties.birthday ?? event.context.traits.birthday}",
            "email": "{person.properties.email ?? event.context.traits.email}",
            "firstName": "{person.properties.first_name ?? event.context.traits.first_name}",
            "lastName": "{person.properties.last_name ?? event.context.traits.last_name}",
            "phone": "{person.properties.phone ?? event.context.traits.phone}",
          },
          "description": "Customer details",
          "key": "customer",
          "label": "Customer",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "id": undefined,
            "imageSrc": undefined,
            "priceAmount": undefined,
            "quantity": undefined,
            "sku": undefined,
            "title": undefined,
            "type": undefined,
            "untranslatedTitle": undefined,
            "url": undefined,
            "variantId": undefined,
            "vendor": undefined,
          },
          "description": "Cart Line details",
          "key": "cartLine",
          "label": "Cart Line",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "choices": [
            {
              "label": "product_added_to_cart",
              "value": "product_added_to_cart",
            },
            {
              "label": "product_removed_from_cart",
              "value": "product_removed_from_cart",
            },
          ],
          "default": undefined,
          "description": "The name of the Cart Event to track.",
          "key": "eventName",
          "label": "Cart Event Name",
          "required": true,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "saveCartEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Save Event - Product Added To Cart",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Product Removed'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.uuid}",
          "description": "A unique event identifier.",
          "key": "eventId",
          "label": "Event ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "The IP address of the user.",
          "key": "ipAddress",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "The user agent of the device sending the event.",
          "key": "userAgent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The timestamp when the event was triggered.",
          "key": "timestamp",
          "label": "Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "anonymousId": "{event.distinct_id}",
            "clientId": "{event.distinct_id}",
            "fbc": "{event.properties.fbc}",
            "fbp": "{event.properties.fbp}",
            "ga": "{event.properties.ga}",
            "userId": "{person.id}",
          },
          "description": "Identifiers for the user",
          "key": "identifiers",
          "label": "Identifiers",
          "required": true,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "referrer": "{event.properties.$referrer}",
            "url": "{event.properties.$current_url}",
          },
          "description": "Page details to send with the event",
          "key": "page",
          "label": "Page",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {},
          "description": "Custom attributes for the event. Data should be specified as key:value pairs",
          "key": "customAttributes",
          "label": "Custom Attributes",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "dob": "{person.properties.birthday ?? event.context.traits.birthday}",
            "email": "{person.properties.email ?? event.context.traits.email}",
            "firstName": "{person.properties.first_name ?? event.context.traits.first_name}",
            "lastName": "{person.properties.last_name ?? event.context.traits.last_name}",
            "phone": "{person.properties.phone ?? event.context.traits.phone}",
          },
          "description": "Customer details",
          "key": "customer",
          "label": "Customer",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "id": undefined,
            "imageSrc": undefined,
            "priceAmount": undefined,
            "quantity": undefined,
            "sku": undefined,
            "title": undefined,
            "type": undefined,
            "untranslatedTitle": undefined,
            "url": undefined,
            "variantId": undefined,
            "vendor": undefined,
          },
          "description": "Cart Line details",
          "key": "cartLine",
          "label": "Cart Line",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "choices": [
            {
              "label": "product_added_to_cart",
              "value": "product_added_to_cart",
            },
            {
              "label": "product_removed_from_cart",
              "value": "product_removed_from_cart",
            },
          ],
          "default": undefined,
          "description": "The name of the Cart Event to track.",
          "key": "eventName",
          "label": "Cart Event Name",
          "required": true,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "saveCartEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Save Event - Product Removed From Cart",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Product Viewed'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.uuid}",
          "description": "A unique event identifier.",
          "key": "eventId",
          "label": "Event ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "The IP address of the user.",
          "key": "ipAddress",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "The user agent of the device sending the event.",
          "key": "userAgent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The timestamp when the event was triggered.",
          "key": "timestamp",
          "label": "Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "anonymousId": "{event.distinct_id}",
            "clientId": "{event.distinct_id}",
            "fbc": "{event.properties.fbc}",
            "fbp": "{event.properties.fbp}",
            "ga": "{event.properties.ga}",
            "userId": "{person.id}",
          },
          "description": "Identifiers for the user",
          "key": "identifiers",
          "label": "Identifiers",
          "required": true,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "referrer": "{event.properties.$referrer}",
            "url": "{event.properties.$current_url}",
          },
          "description": "Page details to send with the event",
          "key": "page",
          "label": "Page",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {},
          "description": "Custom attributes for the event. Data should be specified as key:value pairs",
          "key": "customAttributes",
          "label": "Custom Attributes",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "dob": "{person.properties.birthday ?? event.context.traits.birthday}",
            "email": "{person.properties.email ?? event.context.traits.email}",
            "firstName": "{person.properties.first_name ?? event.context.traits.first_name}",
            "lastName": "{person.properties.last_name ?? event.context.traits.last_name}",
            "phone": "{person.properties.phone ?? event.context.traits.phone}",
          },
          "description": "Customer details",
          "key": "customer",
          "label": "Customer",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "currencyCode": undefined,
            "id": undefined,
            "totalAmount": undefined,
          },
          "description": "Cart details",
          "key": "cart",
          "label": "Cart",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "id": undefined,
            "imageSrc": undefined,
            "priceAmount": undefined,
            "quantity": undefined,
            "sku": undefined,
            "title": undefined,
            "type": undefined,
            "untranslatedTitle": undefined,
            "url": undefined,
            "variantId": undefined,
            "vendor": undefined,
          },
          "description": "Cart Line Item details",
          "key": "cartLines",
          "label": "Cart Line Items",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "id": "{event.properties.product_id}",
            "imageSrc": "{event.properties.image_url}",
            "priceAmount": "{event.properties.price}",
            "sku": "{event.properties.sku}",
            "title": "{event.properties.name}",
            "type": "{event.properties.category}",
            "untranslatedTitle": "{"@if":{"exists":[{"@path":"$.properties.variant"}],"then":{"@path":"$.properties.variant"},"else":{"@path":"$.properties.title"}}}",
            "url": "{event.properties.url}",
            "variantId": "{event.properties.variant}",
            "vendor": "{event.properties.vendor}",
          },
          "description": "Product Variant details",
          "key": "productVariant",
          "label": "Product Variant",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "choices": [
            {
              "label": "product_viewed",
              "value": "product_viewed",
            },
          ],
          "default": "product_viewed",
          "description": "The name of the Product event to track.",
          "key": "eventName",
          "label": "Product Event Name",
          "required": true,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "saveProductEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Save Event - Product Viewed",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Form Submitted'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.uuid}",
          "description": "A unique event identifier.",
          "key": "eventId",
          "label": "Event ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "The IP address of the user.",
          "key": "ipAddress",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$raw_user_agent}",
          "description": "The user agent of the device sending the event.",
          "key": "userAgent",
          "label": "User Agent",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The timestamp when the event was triggered.",
          "key": "timestamp",
          "label": "Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "anonymousId": "{event.distinct_id}",
            "clientId": "{event.distinct_id}",
            "fbc": "{event.properties.fbc}",
            "fbp": "{event.properties.fbp}",
            "ga": "{event.properties.ga}",
            "userId": "{person.id}",
          },
          "description": "Identifiers for the user",
          "key": "identifiers",
          "label": "Identifiers",
          "required": true,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "referrer": "{event.properties.$referrer}",
            "url": "{event.properties.$current_url}",
          },
          "description": "Page details to send with the event",
          "key": "page",
          "label": "Page",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {},
          "description": "Custom attributes for the event. Data should be specified as key:value pairs",
          "key": "customAttributes",
          "label": "Custom Attributes",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "dob": "{person.properties.birthday ?? event.context.traits.birthday}",
            "email": "{person.properties.email ?? event.context.traits.email}",
            "firstName": "{person.properties.first_name ?? event.context.traits.first_name}",
            "lastName": "{person.properties.last_name ?? event.context.traits.last_name}",
            "phone": "{person.properties.phone ?? event.context.traits.phone}",
          },
          "description": "Customer details",
          "key": "customer",
          "label": "Customer",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "currencyCode": undefined,
            "id": undefined,
            "totalAmount": undefined,
          },
          "description": "Cart details",
          "key": "cart",
          "label": "Cart",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "id": undefined,
            "imageSrc": undefined,
            "priceAmount": undefined,
            "quantity": undefined,
            "sku": undefined,
            "title": undefined,
            "type": undefined,
            "untranslatedTitle": undefined,
            "url": undefined,
            "variantId": undefined,
            "vendor": undefined,
          },
          "description": "Cart Line Item details",
          "key": "cartLines",
          "label": "Cart Line Items",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": undefined,
          "description": "The id attribute of an element.",
          "key": "id",
          "label": "Form ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "The action attribute of a form element.",
          "key": "action",
          "label": "Form Action",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "id": undefined,
            "name": undefined,
            "tagName": undefined,
            "type": undefined,
            "value": undefined,
          },
          "description": "A list of elements associated with the form.",
          "key": "elements",
          "label": "Form Elements",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "choices": [
            {
              "label": "form_submitted",
              "value": "form_submitted",
            },
          ],
          "default": "form_submitted",
          "description": "The name of the Form Event to track.",
          "key": "eventName",
          "label": "Form Event Name",
          "required": true,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "saveFormEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Save Event - Form Submitted",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = 'Order Completed'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": {
            "id": undefined,
            "imageSrc": undefined,
            "priceAmount": undefined,
            "quantity": undefined,
            "sku": undefined,
            "title": undefined,
            "type": undefined,
            "untranslatedTitle": undefined,
            "url": undefined,
            "variantId": undefined,
            "vendor": undefined,
          },
          "description": "list of line items associated with the order.",
          "key": "line_items",
          "label": "Line items",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "address1": "{event.properties.billing_address.address1}",
            "address2": "{event.properties.billing_address.address2}",
            "city": "{event.properties.billing_address.city}",
            "country": "{event.properties.billing_address.country}",
            "country_code": "{event.properties.billing_address.country_code}",
            "first_name": "{event.properties.billing_address.first_name}",
            "last_name": "{event.properties.billing_address.last_name}",
            "phone": "{event.properties.billing_address.phone}",
            "province": "{event.properties.billing_address.province}",
            "province_code": "{event.properties.billing_address.province_code}",
            "zip": "{event.properties.billing_address.zip}",
          },
          "description": "The mailing address associated with the payment method.",
          "key": "billing_address",
          "label": "Billing Address",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "The IP address of the browser used by the customer when they placed the order. Both IPv4 and IPv6 are supported.",
          "key": "browser_ip",
          "label": "Browser IP",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.buyer_accepts_marketing ?? person.properties.accepts_marketing}",
          "description": "Whether the customer consented to receive email updates from the shop.",
          "key": "buyer_accepts_marketing",
          "label": "Buyer Accepts Marketing",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": "{event.properties.checkout_id}",
          "description": "The ID of the checkout.",
          "key": "checkout_id",
          "label": "Checkout ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "browser_ip": "{event.properties.$ip}",
            "user_agent": "{event.properties.$raw_user_agent}",
          },
          "description": "Information about the browser that the customer used when they placed their order.",
          "key": "client_details",
          "label": "Client Details",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.properties.confirmed}",
          "description": "Confirmed",
          "key": "confirmed",
          "label": "Confirmed",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.contact_email ?? person.properties.email}",
          "description": "Contact Email",
          "key": "contact_email",
          "label": "Contact Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.created_at}",
          "description": "The autogenerated date and time (ISO 8601 format) when the order was created.",
          "key": "created_at",
          "label": "Created At",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.currency}",
          "description": "The three-letter code (ISO 4217 format) for the currency that the customer used when they paid for their last order.",
          "key": "currency",
          "label": "Currency",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.subtotal}",
          "description": "The current subtotal price of the order in the shop currency. The value of this field reflects order edits, returns, and refunds.",
          "key": "current_subtotal_price",
          "label": "Current Subtotal Price",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.discount}",
          "description": "The current total discounts on the order in the shop currency. The value of this field reflects order edits, returns, and refunds.",
          "key": "current_total_discounts",
          "label": "Current Total Discounts",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.current_total_price}",
          "description": "The current total price of the order in the shop currency. The value of this field reflects order edits, returns, and refunds.",
          "key": "current_total_price",
          "label": "Current Total Price",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.tax}",
          "description": "The current total taxes charged on the order in the shop currency. The value of this field reflects order edits, returns, or refunds.",
          "key": "current_total_tax",
          "label": "Current Total Tax",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id ?? person.properties.id}",
          "description": "A unique identifier for the customer.",
          "key": "customer_id",
          "label": "Customer ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "allocation_method": undefined,
            "code": undefined,
            "target_selection": undefined,
            "target_type": undefined,
            "type": undefined,
            "value": undefined,
            "value_type": undefined,
          },
          "description": "An ordered list of stacked discount applications. The discount_applications property includes 3 types: discount_code, manual, and script. All 3 types share a common structure and have some type specific attributes.",
          "key": "discount_applications",
          "label": "Discount Applications",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "amount": undefined,
            "code": undefined,
            "type": undefined,
          },
          "description": "A list of discounts applied to the order.",
          "key": "discount_codes",
          "label": "Discount Codes",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.properties.email ?? person.properties.email}",
          "description": "The customer's email address.",
          "key": "email",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.estimated_taxes}",
          "description": "Whether taxes on the order are estimated. Many factors can change between the time a customer places an order and the time the order is shipped, which could affect the calculation of taxes.",
          "key": "estimated_taxes",
          "label": "Estimated Taxes",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.financial_status}",
          "description": "The status of payments associated with the order.",
          "key": "financial_status",
          "label": "Financial Status",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.fulfillment_status}",
          "description": "The order's status in terms of fulfilled line items.",
          "key": "fulfillment_status",
          "label": "Fulfillment Status",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.gateway}",
          "description": "The payment gateway used.",
          "key": "gateway",
          "label": "Gateway",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.order_id}",
          "description": "The ID of the order, used for API purposes.",
          "key": "id",
          "label": "ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.landing_site}",
          "description": "The URL for the page where the buyer landed when they entered the shop.",
          "key": "landing_site",
          "label": "Landing Site",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.landing_site_ref}",
          "description": "Landing Site Ref",
          "key": "landing_site_ref",
          "label": "Landing Site Ref",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.name}",
          "description": "The order name.",
          "key": "name",
          "label": "Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.order_number}",
          "description": "The order position in the shop count of orders starting at 1001. Order numbers are sequential and start at 1001.",
          "key": "order_number",
          "label": "Order Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.phone}",
          "description": "The customer's phone number for receiving SMS notifications.",
          "key": "phone",
          "label": "Phone",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.processed_at}",
          "description": "The date and time (ISO 8601 format) when an order was processed.",
          "key": "processed_at",
          "label": "Processed At",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.processing_method}",
          "description": "How the payment was processed.",
          "key": "processing_method",
          "label": "Processing Method",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.reference}",
          "description": "Reference",
          "key": "reference",
          "label": "Reference",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.referring_site}",
          "description": "The website where the customer clicked a link to the shop.",
          "key": "referring_site",
          "label": "Referring Site",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "address1": "{event.properties.shipping_address.address1}",
            "address2": "{event.properties.shipping_address.address2}",
            "city": "{event.properties.shipping_address.city}",
            "country": "{event.properties.shipping_address.country}",
            "country_code": "{event.properties.shipping_address.country_code}",
            "first_name": "{event.properties.shipping_address.first_name}",
            "last_name": "{event.properties.shipping_address.last_name}",
            "phone": "{event.properties.shipping_address.phone}",
            "province": "{event.properties.shipping_address.province}",
            "province_code": "{event.properties.shipping_address.province_code}",
            "zip": "{event.properties.shipping_address.zip}",
          },
          "description": "The mailing address associated with the payment method.",
          "key": "shipping_address",
          "label": "Shipping Address",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.properties.source_identifier}",
          "description": "The ID of the order placed on the originating platform.",
          "key": "source_identifier",
          "label": "Source Identifier",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.source_name}",
          "description": "The source of the checkout.",
          "key": "source_name",
          "label": "Source Name",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.source_url}",
          "description": "A valid URL to the original order on the originating surface.",
          "key": "source_url",
          "label": "Source URL",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.subtotal}",
          "description": "The price of the order in the shop currency after discounts but before shipping, duties, taxes, and tips.",
          "key": "subtotal_price",
          "label": "Subtotal Price",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.tags}",
          "description": "Tags attached to the order, formatted as a string of comma-separated values. Tags are additional short descriptors, commonly used for filtering and searching. Each individual tag is limited to 40 characters in length.",
          "key": "tags",
          "label": "Tags",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.taxes_included}",
          "description": "Whether taxes are included in the order subtotal.",
          "key": "taxes_included",
          "label": "Taxes Included",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.discount}",
          "description": "The total discounts applied to the price of the order in the shop currency.",
          "key": "total_discounts",
          "label": "Total Discounts",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.total_line_items_price}",
          "description": "The sum of all line item prices in the shop currency.",
          "key": "total_line_items_price",
          "label": "Total Line Items Price",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.total_outstanding}",
          "description": "The total outstanding amount of the order in the shop currency.",
          "key": "total_outstanding",
          "label": "Total Outstanding",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.total}",
          "description": "The sum of all line item prices, discounts, shipping, taxes, and tips in the shop currency. Must be positive.",
          "key": "total_price",
          "label": "Total Price",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.total_price_usd}",
          "description": "The sum of all line item prices, discounts, shipping, taxes, and tips in the shop currency in USD",
          "key": "total_price_usd",
          "label": "Total Price USD",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.tax}",
          "description": "The sum of all the taxes applied to the order in the shop currency. Must be positive.",
          "key": "total_tax",
          "label": "Total Tax",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.user_id}",
          "description": "The ID of the user logged into Shopify POS who processed the order, if applicable.",
          "key": "user_id",
          "label": "User ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.updated_at}",
          "description": "The date and time (ISO 8601 format) when the order was last modified.",
          "key": "updated_at",
          "label": "Updated At",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "name": undefined,
            "value": undefined,
          },
          "description": "Extra properties.",
          "key": "additional_fields",
          "label": "Additional Fields",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "saveOrder",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Save Order",
    },
  ],
  "name": "Angler AI",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 147 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to AWS S3 CSV",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/s3.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-s3-csv",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "IAM role ARN with write permissions to the S3 bucket. Format: arn:aws:iam::account-id:role/role-name",
      "key": "iam_role_arn",
      "label": "IAM Role ARN",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "Name of the S3 bucket where the files will be uploaded to.",
      "key": "s3_aws_bucket_name",
      "label": "AWS Bucket Name",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "Region Code where the S3 bucket is hosted. See [AWS S3 Documentation](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html#concepts-regions)",
      "key": "s3_aws_region",
      "label": "AWS Region Code (S3 only)",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "The External ID to your IAM role. Generate a secure string and treat it like a password.",
      "key": "iam_external_id",
      "label": "IAM External ID",
      "required": true,
      "secret": false,
      "type": "password",
    },
  ],
  "mapping_templates": [],
  "name": "AWS S3 CSV",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 148 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Adjust",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/adjust.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-adjust",
  "inputs_schema": [
    {
      "choices": [
        {
          "label": "Production",
          "value": "production",
        },
        {
          "label": "Sandbox",
          "value": "sandbox",
        },
      ],
      "default": "production",
      "description": "The environment for your Adjust account.",
      "key": "environment",
      "label": "Environment",
      "required": true,
      "secret": false,
      "type": "choice",
    },
    {
      "default": undefined,
      "description": "The app token for your Adjust account. This can be overridden in the event mapping.",
      "key": "default_app_token",
      "label": "Default App Token",
      "required": false,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "The default event token. This can be overridden in the event mapping.",
      "key": "default_event_token",
      "label": "Default Event Token",
      "required": false,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [],
  "name": "Adjust",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 149 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Iterable Lists",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/iterable.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-iterable-lists",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "To obtain the API Key, go to the Iterable app and naviate to Integrations > API Keys. Create a new API Key with the 'Server-Side' type.",
      "key": "apiKey",
      "label": "API Key",
      "required": true,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [],
  "name": "Iterable Lists",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 150 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Extensible Webhook",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/webhook.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-webhook-extensible",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "If set, Segment will sign requests with an HMAC in the "X-Signature" request header. The HMAC is a hex-encoded SHA1 hash generated using this shared secret and the request body.",
      "key": "sharedSecret",
      "label": "Shared Secret",
      "required": false,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [],
  "name": "Extensible Webhook",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 151 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Dawn AI",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/dawn.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-dawn",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Get your key at app.dawnai.com",
      "key": "writeKey",
      "label": "Dawn Write Key",
      "required": true,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [],
  "name": "Dawn AI",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 152 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Topsort",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/topsort.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-topsort",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Created under Settings > API Integration in the Topsort Manager Platform.",
      "key": "api_key",
      "label": "API Key",
      "required": true,
      "secret": false,
      "type": "password",
    },
  ],
  "mapping_templates": [
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify') and event = 'Product Viewed'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.uuid}",
          "description": "Unique ID generated by the client to suppress duplicate events. The length should not exceed 128 characters.",
          "key": "id",
          "label": "Event ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Timestamp that the event happened at.",
          "key": "occurredAt",
          "label": "Occurred At",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.distinct_id}",
          "description": "Identifier for tracking users regardless of sign-in status. The length should not exceed 128 characters.",
          "key": "opaqueUserId",
          "label": "Opaque User ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.resolvedBidId}",
          "description": "Identifier of an instance of a resolved auction for a determined product. The length should not exceed 128 characters.",
          "key": "resolvedBidId",
          "label": "Resolved Bid ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.additionalAttribution}",
          "description": "Additional attribution information.",
          "key": "additionalAttribution",
          "label": "Additional Attribution",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "impression",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Impression",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify') and event = 'Product Clicked'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.uuid}",
          "description": "Unique ID generated by the client to suppress duplicate events. The length should not exceed 128 characters.",
          "key": "id",
          "label": "Event ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Timestamp that the event happened at.",
          "key": "occurredAt",
          "label": "Occurred At",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.distinct_id}",
          "description": "Identifier for tracking users regardless of sign-in status. The length should not exceed 128 characters.",
          "key": "opaqueUserId",
          "label": "Opaque User ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.resolvedBidId}",
          "description": "Identifier of an instance of a resolved auction for a determined product. The length should not exceed 128 characters.",
          "key": "resolvedBidId",
          "label": "Resolved Bid ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.additionalAttribution}",
          "description": "Additional attribution information.",
          "key": "additionalAttribution",
          "label": "Additional Attribution",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "click",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Click",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify') and event = 'Order Completed'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.uuid}",
          "description": "Unique ID generated by the client to suppress duplicate events. The length should not exceed 128 characters.",
          "key": "id",
          "label": "Event ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Timestamp that the event happened at.",
          "key": "occurredAt",
          "label": "Occurred At",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.distinct_id}",
          "description": "Identifier for tracking users regardless of sign-in status. The length should not exceed 128 characters.",
          "key": "opaqueUserId",
          "label": "Opaque User ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "productId": undefined,
            "quantity": undefined,
            "unitPrice": undefined,
          },
          "description": "Item information list related to the event.",
          "key": "items",
          "label": "Items",
          "required": true,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "purchase",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Purchase",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify') and event = 'Banner Impression'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.uuid}",
          "description": "Unique ID generated by the client to suppress duplicate events. The length should not exceed 128 characters.",
          "key": "id",
          "label": "Event ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Timestamp that the event happened at.",
          "key": "occurredAt",
          "label": "Occurred At",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.distinct_id}",
          "description": "Identifier for tracking users regardless of sign-in status. The length should not exceed 128 characters.",
          "key": "opaqueUserId",
          "label": "Opaque User ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.resolvedBidId}",
          "description": "Identifier of an instance of a resolved auction for a determined product. The length should not exceed 128 characters.",
          "key": "resolvedBidId",
          "label": "Resolved Bid ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.additionalAttribution}",
          "description": "Additional attribution information.",
          "key": "additionalAttribution",
          "label": "Additional Attribution",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "impression",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Banner Impression",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify') and event = 'Banner Click'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.uuid}",
          "description": "Unique ID generated by the client to suppress duplicate events. The length should not exceed 128 characters.",
          "key": "id",
          "label": "Event ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Timestamp that the event happened at.",
          "key": "occurredAt",
          "label": "Occurred At",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.distinct_id}",
          "description": "Identifier for tracking users regardless of sign-in status. The length should not exceed 128 characters.",
          "key": "opaqueUserId",
          "label": "Opaque User ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.resolvedBidId}",
          "description": "Identifier of an instance of a resolved auction for a determined product. The length should not exceed 128 characters.",
          "key": "resolvedBidId",
          "label": "Resolved Bid ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.additionalAttribution}",
          "description": "Additional attribution information.",
          "key": "additionalAttribution",
          "label": "Additional Attribution",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "click",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Banner Click",
    },
  ],
  "name": "Topsort",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 153 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Delivr AI Audiences",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/delivrai.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-delivrai-audiences",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Client Identifier is the Hashed Key that provided by Delivr AI.",
      "key": "client_identifier_id",
      "label": "Client Identifier",
      "required": true,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [],
  "name": "Delivr AI Audiences",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 154 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Reddit Conversions API",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/reddit.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-reddit-conversions-api",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Unique identifier of an ad account. This can be found in the Reddit UI.",
      "key": "ad_account_id",
      "label": "Pixel ID",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "The conversion token for your Reddit account. This can be found by following the steps mentioned [here](https://business.reddithelp.com/helpcenter/s/article/conversion-access-token).",
      "key": "conversion_token",
      "label": "Conversion Token",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": false,
      "description": "Indicates if events should be treated as test events by Reddit.",
      "key": "test_mode",
      "label": "Test Mode",
      "required": false,
      "secret": false,
      "type": "boolean",
    },
  ],
  "mapping_templates": [
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = '$pageview'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.timestamp}",
          "description": "The RFC3339 timestamp when the conversion event occurred",
          "key": "event_at",
          "label": "Event At",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "choices": [
            {
              "label": "Page Visit",
              "value": "PageVisit",
            },
            {
              "label": "View Content",
              "value": "ViewContent",
            },
            {
              "label": "Search",
              "value": "Search",
            },
            {
              "label": "Add to Cart",
              "value": "AddToCart",
            },
            {
              "label": "Add to Wishlist",
              "value": "AddToWishlist",
            },
            {
              "label": "Purchase",
              "value": "Purchase",
            },
            {
              "label": "Lead",
              "value": "Lead",
            },
            {
              "label": "Sign Up",
              "value": "SignUp",
            },
          ],
          "default": undefined,
          "description": "One of Reddit CAPI's standard conversion event types. To send a Custom event to Reddit use the Custom Event Action instead.",
          "key": "tracking_type",
          "label": "Tracking Type",
          "required": true,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.click_id}",
          "description": "The Reddit-generated id associated with a single ad click.",
          "key": "click_id",
          "label": "Click ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "category": undefined,
            "id": undefined,
            "name": undefined,
          },
          "description": "The products associated with the conversion event.",
          "key": "products",
          "label": "Products",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "advertising_id": "",
            "device_type": "{event.properties.$device_type}",
            "email": "{event.context.traits.email ?? event.properties.email}",
            "external_id": "{person.id ?? event.distinct_id}",
            "ip_address": "{event.properties.$ip}",
            "user_agent": "{event.properties.$raw_user_agent}",
            "uuid": "{event.properties.uuid}",
          },
          "description": "The identifying user parameters associated with the conversion event.",
          "key": "user",
          "label": "User",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "country": undefined,
            "modes": undefined,
            "region": undefined,
          },
          "description": "A structure of data processing options to specify the processing type for the event.",
          "key": "data_processing_options",
          "label": "Data Processing Options",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "height": "{event.context.screen.height}",
            "width": "{event.context.screen.width}",
          },
          "description": "The dimensions of the user's screen.",
          "key": "screen_dimensions",
          "label": "Screen Dimensions",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "currency": "{event.properties.currency}",
            "item_count": "{event.properties.quantity}",
            "value_decimal": "{event.properties.total}",
          },
          "description": "The metadata associated with the conversion event.",
          "key": "event_metadata",
          "label": "Event Metadata",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.properties.conversion_id}",
          "description": "The unique conversion ID that corresponds to a distinct conversion event.",
          "key": "conversion_id",
          "label": "Conversion ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "standardEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Page Visit",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify') and event = 'Product Viewed'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.timestamp}",
          "description": "The RFC3339 timestamp when the conversion event occurred",
          "key": "event_at",
          "label": "Event At",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "choices": [
            {
              "label": "Page Visit",
              "value": "PageVisit",
            },
            {
              "label": "View Content",
              "value": "ViewContent",
            },
            {
              "label": "Search",
              "value": "Search",
            },
            {
              "label": "Add to Cart",
              "value": "AddToCart",
            },
            {
              "label": "Add to Wishlist",
              "value": "AddToWishlist",
            },
            {
              "label": "Purchase",
              "value": "Purchase",
            },
            {
              "label": "Lead",
              "value": "Lead",
            },
            {
              "label": "Sign Up",
              "value": "SignUp",
            },
          ],
          "default": undefined,
          "description": "One of Reddit CAPI's standard conversion event types. To send a Custom event to Reddit use the Custom Event Action instead.",
          "key": "tracking_type",
          "label": "Tracking Type",
          "required": true,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.click_id}",
          "description": "The Reddit-generated id associated with a single ad click.",
          "key": "click_id",
          "label": "Click ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "category": undefined,
            "id": undefined,
            "name": undefined,
          },
          "description": "The products associated with the conversion event.",
          "key": "products",
          "label": "Products",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "advertising_id": "",
            "device_type": "{event.properties.$device_type}",
            "email": "{event.context.traits.email ?? event.properties.email}",
            "external_id": "{person.id ?? event.distinct_id}",
            "ip_address": "{event.properties.$ip}",
            "user_agent": "{event.properties.$raw_user_agent}",
            "uuid": "{event.properties.uuid}",
          },
          "description": "The identifying user parameters associated with the conversion event.",
          "key": "user",
          "label": "User",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "country": undefined,
            "modes": undefined,
            "region": undefined,
          },
          "description": "A structure of data processing options to specify the processing type for the event.",
          "key": "data_processing_options",
          "label": "Data Processing Options",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "height": "{event.context.screen.height}",
            "width": "{event.context.screen.width}",
          },
          "description": "The dimensions of the user's screen.",
          "key": "screen_dimensions",
          "label": "Screen Dimensions",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "currency": "{event.properties.currency}",
            "item_count": "{event.properties.quantity}",
            "value_decimal": "{event.properties.total}",
          },
          "description": "The metadata associated with the conversion event.",
          "key": "event_metadata",
          "label": "Event Metadata",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.properties.conversion_id}",
          "description": "The unique conversion ID that corresponds to a distinct conversion event.",
          "key": "conversion_id",
          "label": "Conversion ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "standardEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "View Content",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify') and event = 'Products Searched'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.timestamp}",
          "description": "The RFC3339 timestamp when the conversion event occurred",
          "key": "event_at",
          "label": "Event At",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "choices": [
            {
              "label": "Page Visit",
              "value": "PageVisit",
            },
            {
              "label": "View Content",
              "value": "ViewContent",
            },
            {
              "label": "Search",
              "value": "Search",
            },
            {
              "label": "Add to Cart",
              "value": "AddToCart",
            },
            {
              "label": "Add to Wishlist",
              "value": "AddToWishlist",
            },
            {
              "label": "Purchase",
              "value": "Purchase",
            },
            {
              "label": "Lead",
              "value": "Lead",
            },
            {
              "label": "Sign Up",
              "value": "SignUp",
            },
          ],
          "default": undefined,
          "description": "One of Reddit CAPI's standard conversion event types. To send a Custom event to Reddit use the Custom Event Action instead.",
          "key": "tracking_type",
          "label": "Tracking Type",
          "required": true,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.click_id}",
          "description": "The Reddit-generated id associated with a single ad click.",
          "key": "click_id",
          "label": "Click ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "category": undefined,
            "id": undefined,
            "name": undefined,
          },
          "description": "The products associated with the conversion event.",
          "key": "products",
          "label": "Products",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "advertising_id": "",
            "device_type": "{event.properties.$device_type}",
            "email": "{event.context.traits.email ?? event.properties.email}",
            "external_id": "{person.id ?? event.distinct_id}",
            "ip_address": "{event.properties.$ip}",
            "user_agent": "{event.properties.$raw_user_agent}",
            "uuid": "{event.properties.uuid}",
          },
          "description": "The identifying user parameters associated with the conversion event.",
          "key": "user",
          "label": "User",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "country": undefined,
            "modes": undefined,
            "region": undefined,
          },
          "description": "A structure of data processing options to specify the processing type for the event.",
          "key": "data_processing_options",
          "label": "Data Processing Options",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "height": "{event.context.screen.height}",
            "width": "{event.context.screen.width}",
          },
          "description": "The dimensions of the user's screen.",
          "key": "screen_dimensions",
          "label": "Screen Dimensions",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "currency": "{event.properties.currency}",
            "item_count": "{event.properties.quantity}",
            "value_decimal": "{event.properties.total}",
          },
          "description": "The metadata associated with the conversion event.",
          "key": "event_metadata",
          "label": "Event Metadata",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.properties.conversion_id}",
          "description": "The unique conversion ID that corresponds to a distinct conversion event.",
          "key": "conversion_id",
          "label": "Conversion ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "standardEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Search",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify') and event = 'Product Added'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.timestamp}",
          "description": "The RFC3339 timestamp when the conversion event occurred",
          "key": "event_at",
          "label": "Event At",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "choices": [
            {
              "label": "Page Visit",
              "value": "PageVisit",
            },
            {
              "label": "View Content",
              "value": "ViewContent",
            },
            {
              "label": "Search",
              "value": "Search",
            },
            {
              "label": "Add to Cart",
              "value": "AddToCart",
            },
            {
              "label": "Add to Wishlist",
              "value": "AddToWishlist",
            },
            {
              "label": "Purchase",
              "value": "Purchase",
            },
            {
              "label": "Lead",
              "value": "Lead",
            },
            {
              "label": "Sign Up",
              "value": "SignUp",
            },
          ],
          "default": undefined,
          "description": "One of Reddit CAPI's standard conversion event types. To send a Custom event to Reddit use the Custom Event Action instead.",
          "key": "tracking_type",
          "label": "Tracking Type",
          "required": true,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.click_id}",
          "description": "The Reddit-generated id associated with a single ad click.",
          "key": "click_id",
          "label": "Click ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "category": undefined,
            "id": undefined,
            "name": undefined,
          },
          "description": "The products associated with the conversion event.",
          "key": "products",
          "label": "Products",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "advertising_id": "",
            "device_type": "{event.properties.$device_type}",
            "email": "{event.context.traits.email ?? event.properties.email}",
            "external_id": "{person.id ?? event.distinct_id}",
            "ip_address": "{event.properties.$ip}",
            "user_agent": "{event.properties.$raw_user_agent}",
            "uuid": "{event.properties.uuid}",
          },
          "description": "The identifying user parameters associated with the conversion event.",
          "key": "user",
          "label": "User",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "country": undefined,
            "modes": undefined,
            "region": undefined,
          },
          "description": "A structure of data processing options to specify the processing type for the event.",
          "key": "data_processing_options",
          "label": "Data Processing Options",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "height": "{event.context.screen.height}",
            "width": "{event.context.screen.width}",
          },
          "description": "The dimensions of the user's screen.",
          "key": "screen_dimensions",
          "label": "Screen Dimensions",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "currency": "{event.properties.currency}",
            "item_count": "{event.properties.quantity}",
            "value_decimal": "{event.properties.total}",
          },
          "description": "The metadata associated with the conversion event.",
          "key": "event_metadata",
          "label": "Event Metadata",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.properties.conversion_id}",
          "description": "The unique conversion ID that corresponds to a distinct conversion event.",
          "key": "conversion_id",
          "label": "Conversion ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "standardEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Add to Cart",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify') and event = 'Product Added to Wishlist'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.timestamp}",
          "description": "The RFC3339 timestamp when the conversion event occurred",
          "key": "event_at",
          "label": "Event At",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "choices": [
            {
              "label": "Page Visit",
              "value": "PageVisit",
            },
            {
              "label": "View Content",
              "value": "ViewContent",
            },
            {
              "label": "Search",
              "value": "Search",
            },
            {
              "label": "Add to Cart",
              "value": "AddToCart",
            },
            {
              "label": "Add to Wishlist",
              "value": "AddToWishlist",
            },
            {
              "label": "Purchase",
              "value": "Purchase",
            },
            {
              "label": "Lead",
              "value": "Lead",
            },
            {
              "label": "Sign Up",
              "value": "SignUp",
            },
          ],
          "default": undefined,
          "description": "One of Reddit CAPI's standard conversion event types. To send a Custom event to Reddit use the Custom Event Action instead.",
          "key": "tracking_type",
          "label": "Tracking Type",
          "required": true,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.click_id}",
          "description": "The Reddit-generated id associated with a single ad click.",
          "key": "click_id",
          "label": "Click ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "category": undefined,
            "id": undefined,
            "name": undefined,
          },
          "description": "The products associated with the conversion event.",
          "key": "products",
          "label": "Products",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "advertising_id": "",
            "device_type": "{event.properties.$device_type}",
            "email": "{event.context.traits.email ?? event.properties.email}",
            "external_id": "{person.id ?? event.distinct_id}",
            "ip_address": "{event.properties.$ip}",
            "user_agent": "{event.properties.$raw_user_agent}",
            "uuid": "{event.properties.uuid}",
          },
          "description": "The identifying user parameters associated with the conversion event.",
          "key": "user",
          "label": "User",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "country": undefined,
            "modes": undefined,
            "region": undefined,
          },
          "description": "A structure of data processing options to specify the processing type for the event.",
          "key": "data_processing_options",
          "label": "Data Processing Options",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "height": "{event.context.screen.height}",
            "width": "{event.context.screen.width}",
          },
          "description": "The dimensions of the user's screen.",
          "key": "screen_dimensions",
          "label": "Screen Dimensions",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "currency": "{event.properties.currency}",
            "item_count": "{event.properties.quantity}",
            "value_decimal": "{event.properties.total}",
          },
          "description": "The metadata associated with the conversion event.",
          "key": "event_metadata",
          "label": "Event Metadata",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.properties.conversion_id}",
          "description": "The unique conversion ID that corresponds to a distinct conversion event.",
          "key": "conversion_id",
          "label": "Conversion ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "standardEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Add to Wishlist",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify') and event = 'Order Completed'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.timestamp}",
          "description": "The RFC3339 timestamp when the conversion event occurred",
          "key": "event_at",
          "label": "Event At",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "choices": [
            {
              "label": "Page Visit",
              "value": "PageVisit",
            },
            {
              "label": "View Content",
              "value": "ViewContent",
            },
            {
              "label": "Search",
              "value": "Search",
            },
            {
              "label": "Add to Cart",
              "value": "AddToCart",
            },
            {
              "label": "Add to Wishlist",
              "value": "AddToWishlist",
            },
            {
              "label": "Purchase",
              "value": "Purchase",
            },
            {
              "label": "Lead",
              "value": "Lead",
            },
            {
              "label": "Sign Up",
              "value": "SignUp",
            },
          ],
          "default": undefined,
          "description": "One of Reddit CAPI's standard conversion event types. To send a Custom event to Reddit use the Custom Event Action instead.",
          "key": "tracking_type",
          "label": "Tracking Type",
          "required": true,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.click_id}",
          "description": "The Reddit-generated id associated with a single ad click.",
          "key": "click_id",
          "label": "Click ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "category": undefined,
            "id": undefined,
            "name": undefined,
          },
          "description": "The products associated with the conversion event.",
          "key": "products",
          "label": "Products",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "advertising_id": "",
            "device_type": "{event.properties.$device_type}",
            "email": "{event.context.traits.email ?? event.properties.email}",
            "external_id": "{person.id ?? event.distinct_id}",
            "ip_address": "{event.properties.$ip}",
            "user_agent": "{event.properties.$raw_user_agent}",
            "uuid": "{event.properties.uuid}",
          },
          "description": "The identifying user parameters associated with the conversion event.",
          "key": "user",
          "label": "User",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "country": undefined,
            "modes": undefined,
            "region": undefined,
          },
          "description": "A structure of data processing options to specify the processing type for the event.",
          "key": "data_processing_options",
          "label": "Data Processing Options",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "height": "{event.context.screen.height}",
            "width": "{event.context.screen.width}",
          },
          "description": "The dimensions of the user's screen.",
          "key": "screen_dimensions",
          "label": "Screen Dimensions",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "currency": "{event.properties.currency}",
            "item_count": "{event.properties.quantity}",
            "value_decimal": "{event.properties.total}",
          },
          "description": "The metadata associated with the conversion event.",
          "key": "event_metadata",
          "label": "Event Metadata",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.properties.conversion_id}",
          "description": "The unique conversion ID that corresponds to a distinct conversion event.",
          "key": "conversion_id",
          "label": "Conversion ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "standardEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Purchase",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify') and event = 'Lead Generated'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.timestamp}",
          "description": "The RFC3339 timestamp when the conversion event occurred",
          "key": "event_at",
          "label": "Event At",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "choices": [
            {
              "label": "Page Visit",
              "value": "PageVisit",
            },
            {
              "label": "View Content",
              "value": "ViewContent",
            },
            {
              "label": "Search",
              "value": "Search",
            },
            {
              "label": "Add to Cart",
              "value": "AddToCart",
            },
            {
              "label": "Add to Wishlist",
              "value": "AddToWishlist",
            },
            {
              "label": "Purchase",
              "value": "Purchase",
            },
            {
              "label": "Lead",
              "value": "Lead",
            },
            {
              "label": "Sign Up",
              "value": "SignUp",
            },
          ],
          "default": undefined,
          "description": "One of Reddit CAPI's standard conversion event types. To send a Custom event to Reddit use the Custom Event Action instead.",
          "key": "tracking_type",
          "label": "Tracking Type",
          "required": true,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.click_id}",
          "description": "The Reddit-generated id associated with a single ad click.",
          "key": "click_id",
          "label": "Click ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "category": undefined,
            "id": undefined,
            "name": undefined,
          },
          "description": "The products associated with the conversion event.",
          "key": "products",
          "label": "Products",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "advertising_id": "",
            "device_type": "{event.properties.$device_type}",
            "email": "{event.context.traits.email ?? event.properties.email}",
            "external_id": "{person.id ?? event.distinct_id}",
            "ip_address": "{event.properties.$ip}",
            "user_agent": "{event.properties.$raw_user_agent}",
            "uuid": "{event.properties.uuid}",
          },
          "description": "The identifying user parameters associated with the conversion event.",
          "key": "user",
          "label": "User",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "country": undefined,
            "modes": undefined,
            "region": undefined,
          },
          "description": "A structure of data processing options to specify the processing type for the event.",
          "key": "data_processing_options",
          "label": "Data Processing Options",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "height": "{event.context.screen.height}",
            "width": "{event.context.screen.width}",
          },
          "description": "The dimensions of the user's screen.",
          "key": "screen_dimensions",
          "label": "Screen Dimensions",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "currency": "{event.properties.currency}",
            "item_count": "{event.properties.quantity}",
            "value_decimal": "{event.properties.total}",
          },
          "description": "The metadata associated with the conversion event.",
          "key": "event_metadata",
          "label": "Event Metadata",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.properties.conversion_id}",
          "description": "The unique conversion ID that corresponds to a distinct conversion event.",
          "key": "conversion_id",
          "label": "Conversion ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "standardEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Lead",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify') and event = 'Signed Up'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.timestamp}",
          "description": "The RFC3339 timestamp when the conversion event occurred",
          "key": "event_at",
          "label": "Event At",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "choices": [
            {
              "label": "Page Visit",
              "value": "PageVisit",
            },
            {
              "label": "View Content",
              "value": "ViewContent",
            },
            {
              "label": "Search",
              "value": "Search",
            },
            {
              "label": "Add to Cart",
              "value": "AddToCart",
            },
            {
              "label": "Add to Wishlist",
              "value": "AddToWishlist",
            },
            {
              "label": "Purchase",
              "value": "Purchase",
            },
            {
              "label": "Lead",
              "value": "Lead",
            },
            {
              "label": "Sign Up",
              "value": "SignUp",
            },
          ],
          "default": undefined,
          "description": "One of Reddit CAPI's standard conversion event types. To send a Custom event to Reddit use the Custom Event Action instead.",
          "key": "tracking_type",
          "label": "Tracking Type",
          "required": true,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.click_id}",
          "description": "The Reddit-generated id associated with a single ad click.",
          "key": "click_id",
          "label": "Click ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "category": undefined,
            "id": undefined,
            "name": undefined,
          },
          "description": "The products associated with the conversion event.",
          "key": "products",
          "label": "Products",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "advertising_id": "",
            "device_type": "{event.properties.$device_type}",
            "email": "{event.context.traits.email ?? event.properties.email}",
            "external_id": "{person.id ?? event.distinct_id}",
            "ip_address": "{event.properties.$ip}",
            "user_agent": "{event.properties.$raw_user_agent}",
            "uuid": "{event.properties.uuid}",
          },
          "description": "The identifying user parameters associated with the conversion event.",
          "key": "user",
          "label": "User",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "country": undefined,
            "modes": undefined,
            "region": undefined,
          },
          "description": "A structure of data processing options to specify the processing type for the event.",
          "key": "data_processing_options",
          "label": "Data Processing Options",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "height": "{event.context.screen.height}",
            "width": "{event.context.screen.width}",
          },
          "description": "The dimensions of the user's screen.",
          "key": "screen_dimensions",
          "label": "Screen Dimensions",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": {
            "currency": "{event.properties.currency}",
            "item_count": "{event.properties.quantity}",
            "value_decimal": "{event.properties.total}",
          },
          "description": "The metadata associated with the conversion event.",
          "key": "event_metadata",
          "label": "Event Metadata",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.properties.conversion_id}",
          "description": "The unique conversion ID that corresponds to a distinct conversion event.",
          "key": "conversion_id",
          "label": "Conversion ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "standardEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Sign Up",
    },
  ],
  "name": "Reddit Conversions API",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 155 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Nextdoor Conversions API",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/nextdoor.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-nextdoor-capi",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "The Embed API Key for your account. You can find this on your settings pages.",
      "key": "apiKey",
      "label": "API Key",
      "required": true,
      "secret": false,
      "type": "password",
    },
    {
      "default": undefined,
      "description": "Your Nextdoor Advertiser ID for self serve clients can be found in your NAM account for managed your support team can provide",
      "key": "client_id",
      "label": "Nextdoor Advertiser ID",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "Nextdoor Pixel Id. Used for deduplication when events are sent via CAPI and front end Pixel.",
      "key": "pixel_id",
      "label": "Nextdoor Pixel Id",
      "required": true,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [],
  "name": "Nextdoor Conversions API",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 156 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to StackAdapt Audiences",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/stackadapt.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-stackadapt-audiences",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Your StackAdapt GQL API Token",
      "key": "apiKey",
      "label": "GraphQL Token",
      "required": true,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [],
  "name": "StackAdapt Audiences",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 157 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Google Campaign Manager 360",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/google.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-google-campaign-manager-360",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "The ID of the Campaign Manager 360 profile you want to use.",
      "key": "profileId",
      "label": "Profile ID",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "The Default Floodlight activity ID associated with all the mappings. Can be overridden in the mapping.",
      "key": "defaultFloodlightActivityId",
      "label": "Default Floodlight Activity ID",
      "required": false,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "The Default Floodlight configuration ID associated with all the mappings. Can be overridden in the mapping.",
      "key": "defaultFloodlightConfigurationId",
      "label": "Default Floodlight Configuration ID",
      "required": false,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [],
  "name": "Google Campaign Manager 360",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 158 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to AWS S3",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/s3.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-s3",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "IAM role ARN with write permissions to the S3 bucket. Format: arn:aws:iam::account-id:role/role-name",
      "key": "iam_role_arn",
      "label": "IAM Role ARN",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "Name of the S3 bucket where the files will be uploaded to.",
      "key": "s3_aws_bucket_name",
      "label": "AWS Bucket Name",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "Region Code where the S3 bucket is hosted. See [AWS S3 Documentation](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html#concepts-regions)",
      "key": "s3_aws_region",
      "label": "AWS Region Code",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "The External ID to your IAM role. Generate a secure string and treat it like a password.",
      "key": "iam_external_id",
      "label": "IAM External ID",
      "required": true,
      "secret": false,
      "type": "password",
    },
  ],
  "mapping_templates": [],
  "name": "AWS S3",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 159 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Recombee",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/recombee.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-recombee",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "The ID of the Recombee Database into which the interactions will be sent.",
      "key": "databaseId",
      "label": "Database ID",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "The private token for the Recombee Database used.",
      "key": "privateToken",
      "label": "Private Token",
      "required": true,
      "secret": false,
      "type": "password",
    },
    {
      "choices": [
        {
          "label": "EU",
          "value": "eu-west",
        },
        {
          "label": "Canada (East Coast)",
          "value": "ca-east",
        },
        {
          "label": "Australia",
          "value": "ap-se",
        },
        {
          "label": "US (West Coast)",
          "value": "us-west",
        },
        {
          "label": "Custom",
          "value": "custom",
        },
      ],
      "default": "eu-west",
      "description": "The Recombee cluster where your Database is located. [Learn more](https://docs.recombee.com/regions)",
      "key": "databaseRegion",
      "label": "Database Region",
      "required": true,
      "secret": false,
      "type": "choice",
    },
    {
      "default": undefined,
      "description": "URI of the Recombee API that should be used. *Keep this field empty unless you are calling the Recombee cluster based in a specific region or you were assigned a custom URI by the Recombee Support team.*",
      "key": "apiUri",
      "label": "API URI",
      "required": false,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = '$pageview'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "The ID of the user who viewed the item.",
          "key": "userId",
          "label": "User ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.product_id ?? event.properties.asset_id}",
          "description": "The viewed item.",
          "key": "itemId",
          "label": "Item ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The UTC timestamp of when the view occurred.",
          "key": "timestamp",
          "label": "Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "The duration of the view in seconds.",
          "key": "duration",
          "label": "Duration",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.recomm_id}",
          "description": "The ID of the clicked recommendation (if the view is based on a recommendation request).",
          "key": "recommId",
          "label": "Recommendation ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {},
          "description": "Additional data to be stored with the view. *Keep this field empty unless instructed by the Recombee Support team.*",
          "key": "additionalData",
          "label": "Additional Data",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "addDetailView",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Page - Viewed",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify') and event = 'Product Viewed'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "The ID of the user who viewed the item.",
          "key": "userId",
          "label": "User ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.product_id ?? event.properties.asset_id}",
          "description": "The viewed item.",
          "key": "itemId",
          "label": "Item ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The UTC timestamp of when the view occurred.",
          "key": "timestamp",
          "label": "Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "The duration of the view in seconds.",
          "key": "duration",
          "label": "Duration",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.recomm_id}",
          "description": "The ID of the clicked recommendation (if the view is based on a recommendation request).",
          "key": "recommId",
          "label": "Recommendation ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {},
          "description": "Additional data to be stored with the view. *Keep this field empty unless instructed by the Recombee Support team.*",
          "key": "additionalData",
          "label": "Additional Data",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "addDetailView",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Ecommerce - Product Viewed",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify') and event = 'Product Added'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "The ID of the user who added the item to the cart.",
          "key": "userId",
          "label": "User ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "amount": "{event.properties.quantity}",
            "itemId": "{event.properties.product_id ?? event.properties.sku}",
            "price": "{event.properties.price}",
          },
          "description": "The item that was added to the cart.",
          "key": "item",
          "label": "Item",
          "required": true,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.timestamp}",
          "description": "The UTC timestamp of when the cart addition occurred.",
          "key": "timestamp",
          "label": "Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.recomm_id}",
          "description": "The ID of the clicked recommendation (if the cart addition is based on a recommendation request).",
          "key": "recommId",
          "label": "Recommendation ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {},
          "description": "Additional data to be stored with the cart addition. *Keep this field empty unless instructed by the Recombee Support team.*",
          "key": "additionalData",
          "label": "Additional Data",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "addCartAddition",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Ecommerce - Product Added",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify') and event = 'Product Removed'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "The ID of the user who added the item to the cart.",
          "key": "userId",
          "label": "User ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.product_id ?? event.properties.asset_id}",
          "description": "The item that was added to the cart.",
          "key": "itemId",
          "label": "Item ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "The UTC timestamp of when the cart addition occurred. If the timestamp is omitted, then all the cart additions with the given \`userId\` and \`itemId\` are deleted.",
          "key": "timestamp",
          "label": "Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "deleteCartAddition",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Ecommerce - Product Removed",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify') and event = 'Order Completed'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "The ID of the user who purchased the item(s).",
          "key": "userId",
          "label": "User ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "amount": undefined,
            "itemId": undefined,
            "price": undefined,
            "profit": undefined,
          },
          "description": "The items that were purchased.",
          "key": "items",
          "label": "Items",
          "required": true,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.timestamp}",
          "description": "The UTC timestamp of when the purchase occurred.",
          "key": "timestamp",
          "label": "Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.recomm_id}",
          "description": "The ID of the clicked recommendation (if the purchase is based on a recommendation request).",
          "key": "recommId",
          "label": "Recommendation ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {},
          "description": "Additional data to be stored with the purchase. *Keep this field empty unless instructed by the Recombee Support team.*",
          "key": "additionalData",
          "label": "Additional Data",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "addPurchase",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Ecommerce - Order Completed",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify') and event = 'Product Added to Wishlist'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "The ID of the user who bookmarked the item.",
          "key": "userId",
          "label": "User ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.product_id ?? event.properties.asset_id}",
          "description": "The bookmarked item.",
          "key": "itemId",
          "label": "Item ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The UTC timestamp of when the bookmark event occurred.",
          "key": "timestamp",
          "label": "Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.recomm_id}",
          "description": "The ID of the clicked recommendation (if the bookmark is based on a recommendation request).",
          "key": "recommId",
          "label": "Recommendation ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {},
          "description": "Additional data to be stored with the bookmark. *Keep this field empty unless instructed by the Recombee Support team.*",
          "key": "additionalData",
          "label": "Additional Data",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "addBookmark",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Ecommerce - Product Added to Wishlist",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify') and event = 'Product Removed from Wishlist'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "The ID of the user who bookmarked the item.",
          "key": "userId",
          "label": "User ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.product_id ?? event.properties.asset_id}",
          "description": "The item that was bookmarked.",
          "key": "itemId",
          "label": "Item ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "The UTC timestamp of when the bookmark occurred. If the timestamp is omitted, then all the bookmarks with the given \`userId\` and \`itemId\` are deleted.",
          "key": "timestamp",
          "label": "Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "deleteBookmark",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Ecommerce - Product Removed from Wishlist",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify') and event = 'Product Shared'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "The ID of the user who bookmarked the item.",
          "key": "userId",
          "label": "User ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.product_id ?? event.properties.asset_id}",
          "description": "The bookmarked item.",
          "key": "itemId",
          "label": "Item ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The UTC timestamp of when the bookmark event occurred.",
          "key": "timestamp",
          "label": "Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.recomm_id}",
          "description": "The ID of the clicked recommendation (if the bookmark is based on a recommendation request).",
          "key": "recommId",
          "label": "Recommendation ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {},
          "description": "Additional data to be stored with the bookmark. *Keep this field empty unless instructed by the Recombee Support team.*",
          "key": "additionalData",
          "label": "Additional Data",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "addBookmark",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Ecommerce - Product Shared",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify') and event = 'Video Playback Started'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "The ID of the user who viewed a portion of the item.",
          "key": "userId",
          "label": "User ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.product_id ?? event.properties.asset_id}",
          "description": "The viewed item.",
          "key": "itemId",
          "label": "Item ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The UTC timestamp of when the view portion occurred.",
          "key": "timestamp",
          "label": "Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.portion}",
          "description": "The viewed portion of the item as a number in the interval [0.0,1.0], where 0.0 means the user viewed nothing and 1.0 means the full item was viewed. It should be the actual viewed part of the item, no matter the seeking. For example, if the user seeked immediately to half of the item and then viewed 10% of the item, the \`portion\` should still be \`0.1\`.",
          "key": "portion",
          "label": "Portion",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.session}",
          "description": "The ID of the session in which the user viewed the item.",
          "key": "sessionId",
          "label": "Session ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.recomm_id}",
          "description": "The ID of the clicked recommendation (if the view portion is based on a recommendation request).",
          "key": "recommId",
          "label": "Recommendation ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {},
          "description": "Additional data to be stored with the view portion. *Keep this field empty unless instructed by the Recombee Support team.*",
          "key": "additionalData",
          "label": "Additional Data",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "setViewPortion",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Video - Playback Started",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify') and event = 'Video Content Playing'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "The ID of the user who viewed a portion of the item.",
          "key": "userId",
          "label": "User ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.product_id ?? event.properties.asset_id}",
          "description": "The viewed item.",
          "key": "itemId",
          "label": "Item ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The UTC timestamp of when the view portion occurred.",
          "key": "timestamp",
          "label": "Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "totalLength": "{event.properties.total_length}",
            "watchTime": "{event.properties.position}",
          },
          "description": "The portion of the item that the user viewed.",
          "key": "portion",
          "label": "Portion",
          "required": true,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.properties.session}",
          "description": "The ID of the session in which the user viewed the item.",
          "key": "sessionId",
          "label": "Session ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.recomm_id}",
          "description": "The ID of the clicked recommendation (if the view portion is based on a recommendation request).",
          "key": "recommId",
          "label": "Recommendation ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {},
          "description": "Additional data to be stored with the view portion. *Keep this field empty unless instructed by the Recombee Support team.*",
          "key": "additionalData",
          "label": "Additional Data",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "setViewPortionFromWatchTime",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Video - Content Playing",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify') and event = 'Video Playback Paused'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "The ID of the user who viewed a portion of the item.",
          "key": "userId",
          "label": "User ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.product_id ?? event.properties.asset_id}",
          "description": "The viewed item.",
          "key": "itemId",
          "label": "Item ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The UTC timestamp of when the view portion occurred.",
          "key": "timestamp",
          "label": "Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "totalLength": "{event.properties.total_length}",
            "watchTime": "{event.properties.position}",
          },
          "description": "The portion of the item that the user viewed.",
          "key": "portion",
          "label": "Portion",
          "required": true,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.properties.session}",
          "description": "The ID of the session in which the user viewed the item.",
          "key": "sessionId",
          "label": "Session ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.recomm_id}",
          "description": "The ID of the clicked recommendation (if the view portion is based on a recommendation request).",
          "key": "recommId",
          "label": "Recommendation ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {},
          "description": "Additional data to be stored with the view portion. *Keep this field empty unless instructed by the Recombee Support team.*",
          "key": "additionalData",
          "label": "Additional Data",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "setViewPortionFromWatchTime",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Video - Playback Paused",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify') and event = 'Video Playback Completed'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "The ID of the user who viewed a portion of the item.",
          "key": "userId",
          "label": "User ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.product_id ?? event.properties.asset_id}",
          "description": "The viewed item.",
          "key": "itemId",
          "label": "Item ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The UTC timestamp of when the view portion occurred.",
          "key": "timestamp",
          "label": "Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.portion}",
          "description": "The viewed portion of the item as a number in the interval [0.0,1.0], where 0.0 means the user viewed nothing and 1.0 means the full item was viewed. It should be the actual viewed part of the item, no matter the seeking. For example, if the user seeked immediately to half of the item and then viewed 10% of the item, the \`portion\` should still be \`0.1\`.",
          "key": "portion",
          "label": "Portion",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.session}",
          "description": "The ID of the session in which the user viewed the item.",
          "key": "sessionId",
          "label": "Session ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.recomm_id}",
          "description": "The ID of the clicked recommendation (if the view portion is based on a recommendation request).",
          "key": "recommId",
          "label": "Recommendation ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {},
          "description": "Additional data to be stored with the view portion. *Keep this field empty unless instructed by the Recombee Support team.*",
          "key": "additionalData",
          "label": "Additional Data",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "setViewPortion",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Video - Playback Completed",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = '$screen'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{person.id ?? event.distinct_id}",
          "description": "The ID of the user who viewed the item.",
          "key": "userId",
          "label": "User ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.product_id ?? event.properties.asset_id}",
          "description": "The viewed item.",
          "key": "itemId",
          "label": "Item ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The UTC timestamp of when the view occurred.",
          "key": "timestamp",
          "label": "Timestamp",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": undefined,
          "description": "The duration of the view in seconds.",
          "key": "duration",
          "label": "Duration",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.recomm_id}",
          "description": "The ID of the clicked recommendation (if the view is based on a recommendation request).",
          "key": "recommId",
          "label": "Recommendation ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": {},
          "description": "Additional data to be stored with the view. *Keep this field empty unless instructed by the Recombee Support team.*",
          "key": "additionalData",
          "label": "Additional Data",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "addDetailView",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Screen - Viewed",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = '$alias'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{person.id}",
          "description": "The ID of the target user that will be **kept** after the merge.",
          "key": "targetUserId",
          "label": "Target User ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.previousId}",
          "description": "The ID of the source user that will be **deleted** after the merge.",
          "key": "sourceUserId",
          "label": "Source User ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "mergeUsers",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Alias",
    },
  ],
  "name": "Recombee",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 160 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Postscript",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/postscript.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-postscript",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Your Postscript API secret key",
      "key": "secret_key",
      "label": "Secret Key",
      "required": true,
      "secret": false,
      "type": "password",
    },
  ],
  "mapping_templates": [],
  "name": "Postscript",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 161 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Reddit Audiences",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/reddit.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-reddit-audiences",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Unique identifier of an ad account. This can be found in the Reddit UI.",
      "key": "ad_account_id",
      "label": "Ad Account ID",
      "required": true,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [],
  "name": "Reddit Audiences",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 162 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Snap Audiences",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/snap.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-snap-audiences",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "The ID of the Snap Ad Account",
      "key": "ad_account_id",
      "label": "Ad Account ID",
      "required": true,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify') and context.traits.email exists",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.context.personas.external_audience_id}",
          "description": "Unique Audience Identifier returned by the createAudience() function call.",
          "key": "external_audience_id",
          "label": "External Audience ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.context.personas.computation_key}",
          "description": "Audience key.",
          "key": "audienceKey",
          "label": "Audience Key",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties}",
          "description": "A computed object for track events.",
          "key": "props",
          "label": "Properties object",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "choices": [
            {
              "label": "Mobile ID",
              "value": "MOBILE_AD_ID_SHA256",
            },
            {
              "label": "Phone",
              "value": "PHONE_SHA256",
            },
            {
              "label": "Email",
              "value": "EMAIL_SHA256",
            },
          ],
          "default": "EMAIL_SHA256",
          "description": "Choose the type of identifier to use when adding users to Snap.",
          "key": "schema_type",
          "label": "External ID Type",
          "required": true,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.phone}",
          "description": "If using phone as the identifier, an additional setup step is required when connecting the Destination to the Audience. Please ensure that 'phone' is configured as an additional identifier in the Audience settings tab.",
          "key": "phone",
          "label": "Phone",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.context.traits.email}",
          "description": "The user's email address.",
          "key": "email",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "If using Mobile Ad ID as the identifier, an additional setup step is required when connecting the Destination to the Audience. Please ensure that 'ios.idfa' and 'android.idfa' are configured as an additional identifier in the Audience settings tab.",
          "key": "advertising_id",
          "label": "Mobile Advertising ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": true,
          "description": "When enabled, events will be batched before being sent to Snap.",
          "key": "enable_batching",
          "label": "Enable Batching",
          "required": true,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": "syncAudience",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Sync Audience with Email",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify') and properties.phone exists",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.context.personas.external_audience_id}",
          "description": "Unique Audience Identifier returned by the createAudience() function call.",
          "key": "external_audience_id",
          "label": "External Audience ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.context.personas.computation_key}",
          "description": "Audience key.",
          "key": "audienceKey",
          "label": "Audience Key",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties}",
          "description": "A computed object for track events.",
          "key": "props",
          "label": "Properties object",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "choices": [
            {
              "label": "Mobile ID",
              "value": "MOBILE_AD_ID_SHA256",
            },
            {
              "label": "Phone",
              "value": "PHONE_SHA256",
            },
            {
              "label": "Email",
              "value": "EMAIL_SHA256",
            },
          ],
          "default": "EMAIL_SHA256",
          "description": "Choose the type of identifier to use when adding users to Snap.",
          "key": "schema_type",
          "label": "External ID Type",
          "required": true,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.phone}",
          "description": "If using phone as the identifier, an additional setup step is required when connecting the Destination to the Audience. Please ensure that 'phone' is configured as an additional identifier in the Audience settings tab.",
          "key": "phone",
          "label": "Phone",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.context.traits.email}",
          "description": "The user's email address.",
          "key": "email",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "If using Mobile Ad ID as the identifier, an additional setup step is required when connecting the Destination to the Audience. Please ensure that 'ios.idfa' and 'android.idfa' are configured as an additional identifier in the Audience settings tab.",
          "key": "advertising_id",
          "label": "Mobile Advertising ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": true,
          "description": "When enabled, events will be batched before being sent to Snap.",
          "key": "enable_batching",
          "label": "Enable Batching",
          "required": true,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": "syncAudience",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Sync Audience with Phone",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify') and context.device.advertisingId exists",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.context.personas.external_audience_id}",
          "description": "Unique Audience Identifier returned by the createAudience() function call.",
          "key": "external_audience_id",
          "label": "External Audience ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.context.personas.computation_key}",
          "description": "Audience key.",
          "key": "audienceKey",
          "label": "Audience Key",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties}",
          "description": "A computed object for track events.",
          "key": "props",
          "label": "Properties object",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "choices": [
            {
              "label": "Mobile ID",
              "value": "MOBILE_AD_ID_SHA256",
            },
            {
              "label": "Phone",
              "value": "PHONE_SHA256",
            },
            {
              "label": "Email",
              "value": "EMAIL_SHA256",
            },
          ],
          "default": "EMAIL_SHA256",
          "description": "Choose the type of identifier to use when adding users to Snap.",
          "key": "schema_type",
          "label": "External ID Type",
          "required": true,
          "secret": false,
          "type": "choice",
        },
        {
          "default": "{event.properties.phone}",
          "description": "If using phone as the identifier, an additional setup step is required when connecting the Destination to the Audience. Please ensure that 'phone' is configured as an additional identifier in the Audience settings tab.",
          "key": "phone",
          "label": "Phone",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.context.traits.email}",
          "description": "The user's email address.",
          "key": "email",
          "label": "Email",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "",
          "description": "If using Mobile Ad ID as the identifier, an additional setup step is required when connecting the Destination to the Audience. Please ensure that 'ios.idfa' and 'android.idfa' are configured as an additional identifier in the Audience settings tab.",
          "key": "advertising_id",
          "label": "Mobile Advertising ID",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": true,
          "description": "When enabled, events will be batched before being sent to Snap.",
          "key": "enable_batching",
          "label": "Enable Batching",
          "required": true,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": "syncAudience",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Sync Audience with Mobile AD ID",
    },
  ],
  "name": "Snap Audiences",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 163 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Optimizely Web",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/optimizely.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-optimizely-web",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Your Optimizely API Key. TODO: Provide link to instructions on how to get this.",
      "key": "optimizelyApiKey",
      "label": "Optimizely API Key",
      "required": true,
      "secret": false,
      "type": "password",
    },
    {
      "default": undefined,
      "description": "Your Optimizely Account ID. TODO: Provide link to instructions on how to get this.",
      "key": "optimizelyAccountId",
      "label": "Optimizely Account ID",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "The unique numeric identifier for the project.",
      "key": "projectID",
      "label": "Optimizely Project ID",
      "required": true,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [],
  "name": "Optimizely Web",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 164 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Singlestore",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/singlestore.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-singlestore",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "The host of the Singlestore database.",
      "key": "host",
      "label": "Host",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": "3306",
      "description": "The port of the Singlestore database.",
      "key": "port",
      "label": "Port",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "The username of the Singlestore database.",
      "key": "username",
      "label": "Username",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "The password of the Singlestore database.",
      "key": "password",
      "label": "Password",
      "required": true,
      "secret": false,
      "type": "password",
    },
    {
      "default": undefined,
      "description": "The name of the database.",
      "key": "dbName",
      "label": "Database Name",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "choices": [
        {
          "label": "Prod",
          "value": "Prod",
        },
        {
          "label": "Stage",
          "value": "Stage",
        },
      ],
      "default": "Prod",
      "description": "The environment of the Singlestore database.",
      "key": "environment",
      "label": "Environment",
      "required": true,
      "secret": false,
      "type": "choice",
    },
  ],
  "mapping_templates": [],
  "name": "Singlestore",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 165 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Sprig Cloud",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/sprig.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-sprig",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Sprig API key.",
      "key": "apiKey",
      "label": "API Key",
      "required": true,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.event}",
          "description": "The event to be sent to Sprig.",
          "key": "eventName",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The timestamp of the event.",
          "key": "timestamp",
          "label": "Event Timestamp",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id}",
          "description": "The userId of the identified user.",
          "key": "userId",
          "label": "User ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "trackEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Track Event",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event in ('$identify', '$set')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{person.id}",
          "description": "The userId of the identified user.",
          "key": "userId",
          "label": "User ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties}",
          "description": "The traits to attribute to the userId.",
          "key": "attributes",
          "label": "Attributes",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "identifyUser",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Identify User",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event = '$screen'",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.event}",
          "description": "The event to be sent to Sprig.",
          "key": "eventName",
          "label": "Event Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "The timestamp of the event.",
          "key": "timestamp",
          "label": "Event Timestamp",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.id}",
          "description": "The userId of the identified user.",
          "key": "userId",
          "label": "User ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "trackEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Screen Event",
    },
  ],
  "name": "Sprig Cloud",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 166 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to SendGrid Lists",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/sendgrid.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-sendgrid-audiences",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "The Api key for your SendGrid account.",
      "key": "sendGridApiKey",
      "label": "API Key",
      "required": true,
      "secret": false,
      "type": "password",
    },
  ],
  "mapping_templates": [],
  "name": "SendGrid Lists",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 167 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Drip",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/drip.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-drip",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Account ID for your Drip account. You can find this in your Drip account settings.",
      "key": "accountId",
      "label": "Account ID",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "API key for your Drip account. You can find this in your Drip account settings.",
      "key": "apiKey",
      "label": "API Key",
      "required": true,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event in ('$identify', '$set')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{person.properties.custom_fields}",
          "description": "Custom fields to add to a person's profile. Non string values will be stringified.",
          "key": "custom_fields",
          "label": "Custom fields",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.email}",
          "description": "The person's email address.",
          "key": "email",
          "label": "Email Address",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$ip}",
          "description": "The person's ip address.",
          "key": "ip",
          "label": "IP Address",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.phone}",
          "description": "The person's sms number.",
          "key": "phone",
          "label": "SMS Number",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.status ?? unsubscribed}",
          "description": "The person's subscription status.",
          "key": "status",
          "label": "Status",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.status_updated_at}",
          "description": "The timestamp associated with the update to a person's status.",
          "key": "status_updated_at",
          "label": "Status Updated At",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{person.properties.tags}",
          "description": "Comma delimited list of tags to add to a person's profile. e.g. "tag1,tag2".",
          "key": "tags",
          "label": "Tags",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.$timezone}",
          "description": "The person's timezone.",
          "key": "timezone",
          "label": "Timezone",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "identify",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Identify",
    },
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.event}",
          "description": "The name of the action.",
          "key": "action",
          "label": "Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties.email ?? event.context.traits.email}",
          "description": "The person's email address.",
          "key": "email",
          "label": "Email Address",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.properties}",
          "description": "Additional properties associated with the event.",
          "key": "properties",
          "label": "Properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "trackEvent",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Track event",
    },
  ],
  "name": "Drip",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 168 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Attentive",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/attentive.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-attentive",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Your Attentive API Key.",
      "key": "apiKey",
      "label": "API Key",
      "required": true,
      "secret": false,
      "type": "string",
    },
  ],
  "mapping_templates": [
    {
      "filters": {
        "events": [
          {
            "id": null,
            "name": "All events",
            "order": 0,
            "properties": [
              {
                "key": "event not in ('$pageview', '$screen', '$alias', '$identify', '$groupidentify')",
                "type": "hogql",
                "value": null,
              },
            ],
            "type": "events",
          },
        ],
      },
      "include_by_default": true,
      "inputs_schema": [
        {
          "default": "{event.event}",
          "description": "The type of event. This name is case sensitive. "Order shipped" and "Order Shipped" would be considered different event types.",
          "key": "type",
          "label": "Type",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": {
            "clientUserId": "{person.id}",
            "email": "{event.context.traits.email ?? event.properties.email}",
            "phone": "{event.context.traits.phone ?? event.properties.phone}",
          },
          "description": "At least one identifier is required. Custom identifiers can be added as additional key:value pairs.",
          "key": "userIdentifiers",
          "label": "User Identifiers",
          "required": true,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": "{event.properties}",
          "description": "Metadata to associate with the event.",
          "key": "properties",
          "label": "Properties",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.uuid}",
          "description": "A unique identifier representing this specific event. Should be a UUID format.",
          "key": "externalEventId",
          "label": "External Event Id",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "{event.timestamp}",
          "description": "Timestamp for the event, ISO 8601 format.",
          "key": "occurredAt",
          "label": "Occurred At",
          "required": false,
          "secret": false,
          "type": "string",
        },
        {
          "default": "customEvents",
          "description": "The partner action to use",
          "hidden": true,
          "key": "internal_partner_action",
          "label": "Partner Action",
          "required": true,
          "secret": false,
          "type": "string",
        },
      ],
      "name": "Track Event",
    },
  ],
  "name": "Attentive",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 169 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Twilio Messaging",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/twilio.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-twilio-messaging",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Twilio Account SID",
      "key": "accountSID",
      "label": "Twilio Account SID",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "Twilio API Key SID",
      "key": "apiKeySID",
      "label": "Twilio API Key SID",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "Twilio API Key Secret",
      "key": "apiKeySecret",
      "label": "Twilio API Key Secret",
      "required": true,
      "secret": false,
      "type": "password",
    },
    {
      "choices": [
        {
          "label": "US West 2",
          "value": "us-west-2",
        },
        {
          "label": "EU West 1",
          "value": "eu-west-1",
        },
      ],
      "default": "us-west-2",
      "description": "The region where the message is originating from",
      "key": "region",
      "label": "Region",
      "required": true,
      "secret": false,
      "type": "choice",
    },
  ],
  "mapping_templates": [],
  "name": "Twilio Messaging",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 170 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Amazon Eventbridge",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/amazon.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-amazon-eventbridge",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "The AWS Account ID that the event bus belongs to. 
                      This is used to generate the ARN for the event bus.",
      "key": "awsAccountId",
      "label": "AWS Account ID",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "choices": [
        {
          "label": "us-east-1",
          "value": "us-east-1",
        },
        {
          "label": "us-east-2",
          "value": "us-east-2",
        },
        {
          "label": "us-west-1",
          "value": "us-west-1",
        },
        {
          "label": "us-west-2",
          "value": "us-west-2",
        },
        {
          "label": "eu-west-1",
          "value": "eu-west-1",
        },
        {
          "label": "eu-west-2",
          "value": "eu-west-2",
        },
        {
          "label": "eu-west-3",
          "value": "eu-west-3",
        },
        {
          "label": "ap-southeast-1",
          "value": "ap-southeast-1",
        },
        {
          "label": "ap-southeast-2",
          "value": "ap-southeast-2",
        },
        {
          "label": "sa-east-1",
          "value": "sa-east-1",
        },
        {
          "label": "ap-northeast-1",
          "value": "ap-northeast-1",
        },
        {
          "label": "ap-northeast-2",
          "value": "ap-northeast-2",
        },
        {
          "label": "ap-south-1",
          "value": "ap-south-1",
        },
        {
          "label": "ca-central-1",
          "value": "ca-central-1",
        },
        {
          "label": "eu-central-1",
          "value": "eu-central-1",
        },
      ],
      "default": undefined,
      "description": "The AWS region that the event bus belongs to.",
      "key": "awsRegion",
      "label": "AWS Region",
      "required": true,
      "secret": false,
      "type": "choice",
    },
    {
      "choices": [
        {
          "label": "segment.com",
          "value": "aws.partner/segment.com",
        },
        {
          "label": "segment.com.test",
          "value": "aws.partner/segment.com.test",
        },
      ],
      "default": "segment.com",
      "description": "The name of the partner event source to use for the event bus.",
      "key": "partnerEventSourceName",
      "label": "Partner Event Source Name",
      "required": true,
      "secret": false,
      "type": "choice",
    },
    {
      "default": false,
      "description": "If enabled, Segment will check whether Partner Source identified by Segment source ID 
                      exists in EventBridge. 
                      If Partner Source does not exist, Segment will create a new Partner Source.",
      "key": "createPartnerEventSource",
      "label": "Create Partner Event Source",
      "required": false,
      "secret": false,
      "type": "boolean",
    },
  ],
  "mapping_templates": [],
  "name": "Amazon Eventbridge",
  "status": "beta",
  "type": "destination",
}
`;

exports[`segment templates template 171 matches expected format 1`] = `
{
  "category": [],
  "description": "Send event data to Twilio Messaging Omnichannel",
  "free": false,
  "hog": "return event",
  "icon_url": "https://img.logo.dev/twilio.com?token=pk_NiEhY0r4ToO7w_3DQvOALw",
  "id": "plugin-segment-twilio-messaging-omnichannel",
  "inputs_schema": [
    {
      "default": undefined,
      "description": "Twilio Account SID. This can be found in the [Twilio Console](https://www.twilio.com/docs/usage/api#authenticate-with-http:~:text=token%20in%20the-,Twilio%20Console,-after%20signing%20up).",
      "key": "username",
      "label": "Twilio Account SID.",
      "required": true,
      "secret": false,
      "type": "string",
    },
    {
      "default": undefined,
      "description": "AUTH Token. This can be found in the [Twilio Console](https://www.twilio.com/docs/usage/api#authenticate-with-http:~:text=token%20in%20the-,Twilio%20Console,-after%20signing%20up).",
      "key": "password",
      "label": "AUTH Token",
      "required": true,
      "secret": false,
      "type": "password",
    },
  ],
  "mapping_templates": [],
  "name": "Twilio Messaging Omnichannel",
  "status": "beta",
  "type": "destination",
}
`;
