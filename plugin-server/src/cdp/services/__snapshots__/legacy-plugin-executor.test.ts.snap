// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LegacyPluginExecutorService smoke tests should run the destination plugin: { name: 'customerio-plugin', plugin: [Object] } 1`] = `
[
  "Executing plugin customerio-plugin",
  "Successfully authenticated with Customer.io. Completing setupPlugin.",
  "Execution successful",
]
`;

exports[`LegacyPluginExecutorService smoke tests should run the destination plugin: { name: 'hubspot-plugin', plugin: [Object] } 1`] = `
[
  "Executing plugin hubspot-plugin",
  "Created Hubspot Contact for test@posthog.com",
  "Execution successful",
]
`;

exports[`LegacyPluginExecutorService smoke tests should run the destination plugin: { name: 'posthog-avo-plugin', plugin: [Object] } 1`] = `
[
  "Executing plugin posthog-avo-plugin",
  "Execution successful",
]
`;

exports[`LegacyPluginExecutorService smoke tests should run the destination plugin: { name: 'posthog-braze-app', plugin: [Object] } 1`] = `
[
  "Executing plugin posthog-braze-app",
  "Execution successful",
]
`;

exports[`LegacyPluginExecutorService smoke tests should run the destination plugin: { name: 'posthog-engage-so-plugin', plugin: [Object] } 1`] = `
[
  "Executing plugin posthog-engage-so-plugin",
  "Execution successful",
]
`;

exports[`LegacyPluginExecutorService smoke tests should run the destination plugin: { name: 'posthog-gcs-plugin', plugin: [Object] } 1`] = `
[
  "Executing plugin posthog-gcs-plugin",
  "Plugin execution failed: Plugin posthog-gcs-plugin setup failed: Cannot read properties of undefined (reading 'googleCloudKeyJson')",
]
`;

exports[`LegacyPluginExecutorService smoke tests should run the destination plugin: { name: 'posthog-intercom-plugin', plugin: [Object] } 1`] = `
[
  "Executing plugin posthog-intercom-plugin",
  "Contact test@posthog.com in Intercom not found",
  "Execution successful",
]
`;

exports[`LegacyPluginExecutorService smoke tests should run the destination plugin: { name: 'posthog-laudspeaker-app', plugin: [Object] } 1`] = `
[
  "Executing plugin posthog-laudspeaker-app",
  "Execution successful",
]
`;

exports[`LegacyPluginExecutorService smoke tests should run the destination plugin: { name: 'posthog-patterns-app', plugin: [Object] } 1`] = `
[
  "Executing plugin posthog-patterns-app",
  "Execution successful",
]
`;

exports[`LegacyPluginExecutorService smoke tests should run the destination plugin: { name: 'posthog-plugin-replicator', plugin: [Object] } 1`] = `
[
  "Executing plugin posthog-plugin-replicator",
  "Skipping 1 event, rejected by test: 200 undefined",
  "Execution successful",
]
`;

exports[`LegacyPluginExecutorService smoke tests should run the destination plugin: { name: 'pubsub-plugin', plugin: [Object] } 1`] = `
[
  "Executing plugin pubsub-plugin",
  "Plugin execution failed: Plugin pubsub-plugin setup failed: Cannot read properties of undefined (reading 'googleCloudKeyJson')",
]
`;

exports[`LegacyPluginExecutorService smoke tests should run the destination plugin: { name: 'rudderstack-posthog-plugin', plugin: [Object] } 1`] = `
[
  "Executing plugin rudderstack-posthog-plugin",
  "Execution successful",
]
`;

exports[`LegacyPluginExecutorService smoke tests should run the destination plugin: { name: 'salesforce-plugin', plugin: [Object] } 1`] = `
[
  "Executing plugin salesforce-plugin",
  "Plugin execution failed: Plugin salesforce-plugin setup failed: host not a valid URL!",
]
`;

exports[`LegacyPluginExecutorService smoke tests should run the destination plugin: { name: 'sendgrid-plugin', plugin: [Object] } 1`] = `
[
  "Executing plugin sendgrid-plugin",
  "Plugin execution failed: Plugin sendgrid-plugin setup failed: Custom field with name test is not defined in Sendgrid",
]
`;

exports[`LegacyPluginExecutorService smoke tests should run the transformation plugin: {
  name: 'plugin-posthog-plugin-snowplow-referer-parser',
  plugin: [Object]
} 1`] = `
[
  "Executing plugin plugin-posthog-plugin-snowplow-referer-parser",
  "(Event: $pageview) URL: https://posthog.com, Referrer: undefined, Referring domain: undefined",
  "Plugin execution failed: Cannot read properties of undefined (reading 'indexOf')",
]
`;

exports[`LegacyPluginExecutorService smoke tests should run the transformation plugin: {
  name: 'posthog-app-url-parameters-to-event-properties',
  plugin: [Object]
} 1`] = `
[
  "Executing plugin posthog-app-url-parameters-to-event-properties",
  "Execution successful",
]
`;

exports[`LegacyPluginExecutorService smoke tests should run the transformation plugin: {
  name: 'posthog-plugin-netdata-event-processing-plugin',
  plugin: [Object]
} 1`] = `
[
  "Executing plugin posthog-plugin-netdata-event-processing-plugin",
  "Execution successful",
]
`;

exports[`LegacyPluginExecutorService smoke tests should run the transformation plugin: { name: 'downsampling-plugin', plugin: [Object] } 1`] = `
[
  "Executing plugin downsampling-plugin",
  "Execution successful",
]
`;

exports[`LegacyPluginExecutorService smoke tests should run the transformation plugin: { name: 'drop-events-on-property-plugin', plugin: [Object] } 1`] = `
[
  "Executing plugin drop-events-on-property-plugin",
  "Execution successful",
]
`;

exports[`LegacyPluginExecutorService smoke tests should run the transformation plugin: { name: 'flatten-properties-plugin', plugin: [Object] } 1`] = `
[
  "Executing plugin flatten-properties-plugin",
  "Execution successful",
]
`;

exports[`LegacyPluginExecutorService smoke tests should run the transformation plugin: { name: 'language-url-splitter-app', plugin: [Object] } 1`] = `
[
  "Executing plugin language-url-splitter-app",
  "Execution successful",
]
`;

exports[`LegacyPluginExecutorService smoke tests should run the transformation plugin: { name: 'ph-shotgun-processevent-app', plugin: [Object] } 1`] = `
[
  "Executing plugin ph-shotgun-processevent-app",
  "Execution successful",
]
`;

exports[`LegacyPluginExecutorService smoke tests should run the transformation plugin: { name: 'plugin-advanced-geoip', plugin: [Object] } 1`] = `
[
  "Executing plugin plugin-advanced-geoip",
  "Could not discard IP for event b3a1fe86-b10c-43cc-acaf-d208977608d0 as GeoIP has not been processed.",
  "Finished processing b3a1fe86-b10c-43cc-acaf-d208977608d0.",
  "Execution successful",
]
`;

exports[`LegacyPluginExecutorService smoke tests should run the transformation plugin: { name: 'plugin-posthog-anonymization', plugin: [Object] } 1`] = `
[
  "Executing plugin plugin-posthog-anonymization",
  "Execution successful",
]
`;

exports[`LegacyPluginExecutorService smoke tests should run the transformation plugin: { name: 'plugin-stonly-clean-campaign-name', plugin: [Object] } 1`] = `
[
  "Executing plugin plugin-stonly-clean-campaign-name",
  "Execution successful",
]
`;

exports[`LegacyPluginExecutorService smoke tests should run the transformation plugin: { name: 'plugin-stonly-utm-extractor', plugin: [Object] } 1`] = `
[
  "Executing plugin plugin-stonly-utm-extractor",
  "Execution successful",
]
`;

exports[`LegacyPluginExecutorService smoke tests should run the transformation plugin: { name: 'posthog-app-unduplicator', plugin: [Object] } 1`] = `
[
  "Executing plugin posthog-app-unduplicator",
  "Execution successful",
]
`;

exports[`LegacyPluginExecutorService smoke tests should run the transformation plugin: { name: 'posthog-filter-out-plugin', plugin: [Object] } 1`] = `
[
  "Executing plugin posthog-filter-out-plugin",
  "Execution successful",
]
`;

exports[`LegacyPluginExecutorService smoke tests should run the transformation plugin: { name: 'posthog-plugin-geoip', plugin: [Object] } 1`] = `
[
  "Executing plugin posthog-plugin-geoip",
  "Execution successful",
]
`;

exports[`LegacyPluginExecutorService smoke tests should run the transformation plugin: { name: 'posthog-route-censor-plugin', plugin: [Object] } 1`] = `
[
  "Executing plugin posthog-route-censor-plugin",
  "Plugin set up with global config: , {
  "properties": [
    "$current_url",
    "$referrer",
    "$pathname",
    "$initial_current_url",
    "initial_pathname",
    "initial_referrer"
  ],
  "setProperties": [
    "$initial_current_url",
    "$initial_pathname",
    "$initial_referrer"
  ],
  "setOnceProperties": [
    "$initial_current_url",
    "$initial_pathname",
    "$initial_referrer"
  ]
}",
  "Execution successful",
]
`;

exports[`LegacyPluginExecutorService smoke tests should run the transformation plugin: { name: 'posthog-url-normalizer-plugin', plugin: [Object] } 1`] = `
[
  "Executing plugin posthog-url-normalizer-plugin",
  "event.$current_url: "https://posthog.com" normalized to "https://posthog.com/"",
  "Execution successful",
]
`;

exports[`LegacyPluginExecutorService smoke tests should run the transformation plugin: { name: 'property-filter-plugin', plugin: [Object] } 1`] = `
[
  "Executing plugin property-filter-plugin",
  "Execution successful",
]
`;

exports[`LegacyPluginExecutorService smoke tests should run the transformation plugin: { name: 'semver-flattener-plugin', plugin: [Object] } 1`] = `
[
  "Executing plugin semver-flattener-plugin",
  "found candidate property: , test,  matches , ",
  "Execution successful",
]
`;

exports[`LegacyPluginExecutorService smoke tests should run the transformation plugin: { name: 'taxonomy-plugin', plugin: [Object] } 1`] = `
[
  "Executing plugin taxonomy-plugin",
  "Execution successful",
]
`;

exports[`LegacyPluginExecutorService smoke tests should run the transformation plugin: { name: 'timestamp-parser-plugin', plugin: [Object] } 1`] = `
[
  "Executing plugin timestamp-parser-plugin",
  "Execution successful",
]
`;

exports[`LegacyPluginExecutorService smoke tests should run the transformation plugin: { name: 'user-agent-plugin', plugin: [Object] } 1`] = `
[
  "Executing plugin user-agent-plugin",
  "Execution successful",
]
`;
