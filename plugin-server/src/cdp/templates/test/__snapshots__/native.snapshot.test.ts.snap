// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Testing snapshots for native-google-sheets destination: all fields 1`] = `
{
  "capturedPostHogEvents": [],
  "finished": true,
  "invocation": {
    "functionId": "native-google-sheets",
    "hogFunction": {
      "bytecode": [],
      "category": [
        "Custom",
      ],
      "code_language": "javascript",
      "created_at": "2024-01-01T00:00:00Z",
      "deleted": false,
      "description": "Update a Google Sheet with the incoming event data",
      "enabled": true,
      "free": false,
      "hog": "return event",
      "icon_url": "/static/services/google-sheets.svg",
      "id": "native-google-sheets",
      "inputs": {
        "data_format": {
          "bytecode": [
            "_H",
            1,
            32,
            "RAW",
            38,
          ],
          "value": "RAW",
        },
        "debug_mode": {
          "bytecode": undefined,
          "value": true,
        },
        "fields": {
          "bytecode": {
            "event_name": [
              "_H",
              1,
              32,
              "event",
              32,
              "event",
              1,
              2,
              38,
            ],
            "timestamp": [
              "_H",
              1,
              32,
              "timestamp",
              32,
              "event",
              1,
              2,
              38,
            ],
          },
          "value": {
            "event_name": "{event.event}",
            "timestamp": "{event.timestamp}",
          },
        },
        "oauth": {
          "bytecode": [
            "_H",
            1,
            32,
            "5#$gnF#z",
            38,
          ],
          "value": "5#$gnF#z",
        },
        "spreadsheet_id": {
          "bytecode": [
            "_H",
            1,
            32,
            "5#$gnF#z",
            38,
          ],
          "value": "5#$gnF#z",
        },
        "spreadsheet_name": {
          "bytecode": [
            "_H",
            1,
            32,
            "Sheet1",
            38,
          ],
          "value": "Sheet1",
        },
      },
      "inputs_schema": [
        {
          "integration": "google-sheets",
          "key": "oauth",
          "label": "Google Sheets account",
          "required": true,
          "requiredScopes": "https://www.googleapis.com/auth/spreadsheets https://www.googleapis.com/auth/userinfo.email",
          "secret": false,
          "type": "integration",
        },
        {
          "description": "The ID of the Google Sheet to update. In case of https://docs.google.com/spreadsheets/d/17EdJJMxC0ovhCqpSxK4oksVO-MNlL5U0gHn7vqxkXZE/edit?gid=0#gid=0, the ID is \`17EdJJMxC0ovhCqpSxK4oksVO-MNlL5U0gHn7vqxkXZE\`",
          "key": "spreadsheet_id",
          "label": "Spreadsheet ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "Sheet1",
          "description": "The name of the sheet/tab within the spreadsheet",
          "key": "spreadsheet_name",
          "label": "Spreadsheet Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "choices": [
            {
              "label": "RAW - The values the user has entered will not be parsed and will be stored as-is.",
              "value": "RAW",
            },
            {
              "label": "USER_ENTERED - The values will be parsed as if the user typed them into the UI. Numbers will stay as numbers, but strings may be converted to numbers, dates, etc. following the same rules that are applied when entering text into a cell via the Google Sheets UI.",
              "value": "USER_ENTERED",
            },
          ],
          "default": "RAW",
          "description": "How the input data should be interpreted.",
          "key": "data_format",
          "label": "Data Format",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": {
            "event_name": "{event.event}",
            "timestamp": "{event.timestamp}",
          },
          "description": "Dictionary defining the fields to be written to the sheet.",
          "key": "fields",
          "label": "Fields",
          "required": true,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": false,
          "description": "Will log configuration and request details",
          "key": "debug_mode",
          "label": "Debug Mode",
          "type": "boolean",
        },
      ],
      "is_addon_required": false,
      "name": "Google Sheets",
      "perform": [Function],
      "status": "beta",
      "team_id": 1,
      "template_id": "native-google-sheets",
      "type": "destination",
      "updated_at": "2024-01-01T00:00:00Z",
    },
    "id": "invocation-id",
    "queue": "hog",
    "queueMetadata": {
      "tries": 1,
    },
    "queueParameters": undefined,
    "queuePriority": 0,
    "queueScheduledAt": undefined,
    "queueSource": undefined,
    "state": {
      "attempts": 0,
      "globals": {
        "event": {
          "distinct_id": "distinct_id",
          "elements_chain": "",
          "event": "test",
          "properties": {
            "email": "test@posthog.com",
          },
          "timestamp": "",
          "url": "",
          "uuid": "uuid",
        },
        "inputs": {
          "data_format": "RAW",
          "debug_mode": true,
          "fields": {
            "event_name": "test",
            "timestamp": "",
          },
          "oauth": "5#$gnF#z",
          "spreadsheet_id": "5#$gnF#z",
          "spreadsheet_name": "Sheet1",
        },
        "person": {
          "id": "person-id",
          "name": "person-name",
          "properties": {
            "email": "example@posthog.com",
          },
          "url": "https://us.posthog.com/projects/1/persons/1234",
        },
        "project": {
          "id": 1,
          "name": "project-name",
          "url": "https://us.posthog.com/projects/1",
        },
        "source": {
          "name": "hog-function-name",
          "url": "https://us.posthog.com/hog_functions/1234",
        },
      },
      "timings": [],
    },
    "teamId": 1,
  },
  "logs": [
    {
      "level": "debug",
      "message": "config, {"spreadsheet_name":"Sheet1","data_format":"RAW","fields":{"timestamp":"","event_name":"test"},"debug_mode":true,"oauth":"5#$gnF#z","spreadsheet_id":"5#$gnF#z"}",
      "timestamp": "2025-01-01T00:00:00.000Z",
    },
    {
      "level": "debug",
      "message": "endpoint, https://sheets.googleapis.com/v4/spreadsheets/5#$gnF#z/values/Sheet1:append?valueInputOption=RAW",
      "timestamp": "2025-01-01T00:00:00.000Z",
    },
    {
      "level": "debug",
      "message": "options, {"method":"POST","headers":{"Content-Type":"application/json","Authorization":"Bearer undefined"},"json":{"values":[["","test"]]}}",
      "timestamp": "2025-01-01T00:00:00.000Z",
    },
    {
      "level": "debug",
      "message": "fetchOptions, {"method":"POST","headers":{"User-Agent":"PostHog.com/1.0","Content-Type":"application/json","Authorization":"Bearer undefined"},"body":"{\\"values\\":[[\\"\\",\\"test\\"]]}"}",
      "timestamp": "2025-01-01T00:00:00.000Z",
    },
    {
      "level": "debug",
      "message": "convertedResponse, 200, {"status":"OK"}, {"status":"OK"}, {"content-type":"application/json"}",
      "timestamp": "2025-01-01T00:00:00.000Z",
    },
    {
      "level": "info",
      "message": "Function completed in [REPLACED]",
      "timestamp": "2025-01-01T00:00:00.000Z",
    },
  ],
  "metrics": [],
}
`;

exports[`Testing snapshots for native-google-sheets destination: required fields 1`] = `
{
  "capturedPostHogEvents": [],
  "finished": true,
  "invocation": {
    "functionId": "native-google-sheets",
    "hogFunction": {
      "bytecode": [],
      "category": [
        "Custom",
      ],
      "code_language": "javascript",
      "created_at": "2024-01-01T00:00:00Z",
      "deleted": false,
      "description": "Update a Google Sheet with the incoming event data",
      "enabled": true,
      "free": false,
      "hog": "return event",
      "icon_url": "/static/services/google-sheets.svg",
      "id": "native-google-sheets",
      "inputs": {
        "data_format": {
          "bytecode": [
            "_H",
            1,
            32,
            "RAW",
            38,
          ],
          "value": "RAW",
        },
        "debug_mode": {
          "bytecode": undefined,
          "value": true,
        },
        "fields": {
          "bytecode": {
            "event_name": [
              "_H",
              1,
              32,
              "event",
              32,
              "event",
              1,
              2,
              38,
            ],
            "timestamp": [
              "_H",
              1,
              32,
              "timestamp",
              32,
              "event",
              1,
              2,
              38,
            ],
          },
          "value": {
            "event_name": "{event.event}",
            "timestamp": "{event.timestamp}",
          },
        },
        "oauth": {
          "bytecode": [
            "_H",
            1,
            32,
            "5#$gnF#z",
            38,
          ],
          "value": "5#$gnF#z",
        },
        "spreadsheet_id": {
          "bytecode": [
            "_H",
            1,
            32,
            "5#$gnF#z",
            38,
          ],
          "value": "5#$gnF#z",
        },
        "spreadsheet_name": {
          "bytecode": [
            "_H",
            1,
            32,
            "Sheet1",
            38,
          ],
          "value": "Sheet1",
        },
      },
      "inputs_schema": [
        {
          "integration": "google-sheets",
          "key": "oauth",
          "label": "Google Sheets account",
          "required": true,
          "requiredScopes": "https://www.googleapis.com/auth/spreadsheets https://www.googleapis.com/auth/userinfo.email",
          "secret": false,
          "type": "integration",
        },
        {
          "description": "The ID of the Google Sheet to update. In case of https://docs.google.com/spreadsheets/d/17EdJJMxC0ovhCqpSxK4oksVO-MNlL5U0gHn7vqxkXZE/edit?gid=0#gid=0, the ID is \`17EdJJMxC0ovhCqpSxK4oksVO-MNlL5U0gHn7vqxkXZE\`",
          "key": "spreadsheet_id",
          "label": "Spreadsheet ID",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "default": "Sheet1",
          "description": "The name of the sheet/tab within the spreadsheet",
          "key": "spreadsheet_name",
          "label": "Spreadsheet Name",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "choices": [
            {
              "label": "RAW - The values the user has entered will not be parsed and will be stored as-is.",
              "value": "RAW",
            },
            {
              "label": "USER_ENTERED - The values will be parsed as if the user typed them into the UI. Numbers will stay as numbers, but strings may be converted to numbers, dates, etc. following the same rules that are applied when entering text into a cell via the Google Sheets UI.",
              "value": "USER_ENTERED",
            },
          ],
          "default": "RAW",
          "description": "How the input data should be interpreted.",
          "key": "data_format",
          "label": "Data Format",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": {
            "event_name": "{event.event}",
            "timestamp": "{event.timestamp}",
          },
          "description": "Dictionary defining the fields to be written to the sheet.",
          "key": "fields",
          "label": "Fields",
          "required": true,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": false,
          "description": "Will log configuration and request details",
          "key": "debug_mode",
          "label": "Debug Mode",
          "type": "boolean",
        },
      ],
      "is_addon_required": false,
      "name": "Google Sheets",
      "perform": [Function],
      "status": "beta",
      "team_id": 1,
      "template_id": "native-google-sheets",
      "type": "destination",
      "updated_at": "2024-01-01T00:00:00Z",
    },
    "id": "invocation-id",
    "queue": "hog",
    "queueMetadata": {
      "tries": 1,
    },
    "queueParameters": undefined,
    "queuePriority": 0,
    "queueScheduledAt": undefined,
    "queueSource": undefined,
    "state": {
      "attempts": 0,
      "globals": {
        "event": {
          "distinct_id": "distinct_id",
          "elements_chain": "",
          "event": "test",
          "properties": {
            "email": "test@posthog.com",
          },
          "timestamp": "",
          "url": "",
          "uuid": "uuid",
        },
        "inputs": {
          "data_format": "RAW",
          "debug_mode": true,
          "fields": {
            "event_name": "test",
            "timestamp": "",
          },
          "oauth": "5#$gnF#z",
          "spreadsheet_id": "5#$gnF#z",
          "spreadsheet_name": "Sheet1",
        },
        "person": {
          "id": "person-id",
          "name": "person-name",
          "properties": {
            "email": "example@posthog.com",
          },
          "url": "https://us.posthog.com/projects/1/persons/1234",
        },
        "project": {
          "id": 1,
          "name": "project-name",
          "url": "https://us.posthog.com/projects/1",
        },
        "source": {
          "name": "hog-function-name",
          "url": "https://us.posthog.com/hog_functions/1234",
        },
      },
      "timings": [],
    },
    "teamId": 1,
  },
  "logs": [
    {
      "level": "debug",
      "message": "config, {"spreadsheet_name":"Sheet1","data_format":"RAW","fields":{"timestamp":"","event_name":"test"},"debug_mode":true,"oauth":"5#$gnF#z","spreadsheet_id":"5#$gnF#z"}",
      "timestamp": "2025-01-01T00:00:00.000Z",
    },
    {
      "level": "debug",
      "message": "endpoint, https://sheets.googleapis.com/v4/spreadsheets/5#$gnF#z/values/Sheet1:append?valueInputOption=RAW",
      "timestamp": "2025-01-01T00:00:00.000Z",
    },
    {
      "level": "debug",
      "message": "options, {"method":"POST","headers":{"Content-Type":"application/json","Authorization":"Bearer undefined"},"json":{"values":[["","test"]]}}",
      "timestamp": "2025-01-01T00:00:00.000Z",
    },
    {
      "level": "debug",
      "message": "fetchOptions, {"method":"POST","headers":{"User-Agent":"PostHog.com/1.0","Content-Type":"application/json","Authorization":"Bearer undefined"},"body":"{\\"values\\":[[\\"\\",\\"test\\"]]}"}",
      "timestamp": "2025-01-01T00:00:00.000Z",
    },
    {
      "level": "debug",
      "message": "convertedResponse, 200, {"status":"OK"}, {"status":"OK"}, {"content-type":"application/json"}",
      "timestamp": "2025-01-01T00:00:00.000Z",
    },
    {
      "level": "info",
      "message": "Function completed in [REPLACED]",
      "timestamp": "2025-01-01T00:00:00.000Z",
    },
  ],
  "metrics": [],
}
`;

exports[`Testing snapshots for native-webhook destination: all fields 1`] = `
{
  "capturedPostHogEvents": [],
  "finished": true,
  "invocation": {
    "functionId": "native-webhook",
    "hogFunction": {
      "bytecode": [],
      "category": [
        "Custom",
      ],
      "code_language": "javascript",
      "created_at": "2024-01-01T00:00:00Z",
      "deleted": false,
      "description": "Sends a native webhook templated by the incoming event data",
      "enabled": true,
      "free": false,
      "hog": "return event",
      "icon_url": "/static/posthog-icon.svg",
      "id": "native-webhook",
      "inputs": {
        "body": {
          "bytecode": {
            "event": [
              "_H",
              1,
              32,
              "event",
              1,
              1,
              38,
            ],
            "person": [
              "_H",
              1,
              32,
              "person",
              1,
              1,
              38,
            ],
          },
          "value": {
            "event": "{event}",
            "person": "{person}",
          },
        },
        "debug": {
          "bytecode": undefined,
          "value": false,
        },
        "debug_mode": {
          "bytecode": undefined,
          "value": true,
        },
        "headers": {
          "bytecode": {
            "Content-Type": [
              "_H",
              1,
              32,
              "application/json",
              38,
            ],
          },
          "value": {
            "Content-Type": "application/json",
          },
        },
        "method": {
          "bytecode": [
            "_H",
            1,
            32,
            "POST",
            38,
          ],
          "value": "POST",
        },
        "url": {
          "bytecode": [
            "_H",
            1,
            32,
            "http://jaj.mu/iroti",
            38,
          ],
          "value": "http://jaj.mu/iroti",
        },
      },
      "inputs_schema": [
        {
          "description": "Endpoint URL to send event data to.",
          "key": "url",
          "label": "Webhook URL",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "choices": [
            {
              "label": "POST",
              "value": "POST",
            },
            {
              "label": "PUT",
              "value": "PUT",
            },
            {
              "label": "PATCH",
              "value": "PATCH",
            },
            {
              "label": "GET",
              "value": "GET",
            },
            {
              "label": "DELETE",
              "value": "DELETE",
            },
          ],
          "default": "POST",
          "description": "HTTP method to use for the request.",
          "key": "method",
          "label": "Method",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": {
            "event": "{event}",
            "person": "{person}",
          },
          "description": "JSON payload to send in the request body.",
          "key": "body",
          "label": "JSON Body",
          "required": false,
          "secret": false,
          "type": "json",
        },
        {
          "default": {
            "Content-Type": "application/json",
          },
          "description": "HTTP headers to send in the request.",
          "key": "headers",
          "label": "Headers",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": false,
          "description": "Logs the response of http calls for debugging.",
          "key": "debug",
          "label": "Log responses",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": false,
          "description": "Will log configuration and request details",
          "key": "debug_mode",
          "label": "Debug Mode",
          "type": "boolean",
        },
      ],
      "is_addon_required": false,
      "name": "Native HTTP Webhook",
      "perform": [Function],
      "status": "hidden",
      "team_id": 1,
      "template_id": "native-webhook",
      "type": "destination",
      "updated_at": "2024-01-01T00:00:00Z",
    },
    "id": "invocation-id",
    "queue": "hog",
    "queueMetadata": {
      "tries": 1,
    },
    "queueParameters": undefined,
    "queuePriority": 0,
    "queueScheduledAt": undefined,
    "queueSource": undefined,
    "state": {
      "attempts": 0,
      "globals": {
        "event": {
          "distinct_id": "distinct_id",
          "elements_chain": "",
          "event": "test",
          "properties": {
            "email": "test@posthog.com",
          },
          "timestamp": "",
          "url": "",
          "uuid": "uuid",
        },
        "inputs": {
          "body": {
            "event": {
              "distinct_id": "distinct_id",
              "elements_chain": "",
              "event": "test",
              "properties": {
                "email": "test@posthog.com",
              },
              "timestamp": "",
              "url": "",
              "uuid": "uuid",
            },
            "person": {
              "id": "person-id",
              "name": "person-name",
              "properties": {
                "email": "example@posthog.com",
              },
              "url": "https://us.posthog.com/projects/1/persons/1234",
            },
          },
          "debug": false,
          "debug_mode": true,
          "headers": {
            "Content-Type": "application/json",
          },
          "method": "POST",
          "url": "http://jaj.mu/iroti",
        },
        "person": {
          "id": "person-id",
          "name": "person-name",
          "properties": {
            "email": "example@posthog.com",
          },
          "url": "https://us.posthog.com/projects/1/persons/1234",
        },
        "project": {
          "id": 1,
          "name": "project-name",
          "url": "https://us.posthog.com/projects/1",
        },
        "source": {
          "name": "hog-function-name",
          "url": "https://us.posthog.com/hog_functions/1234",
        },
      },
      "timings": [],
    },
    "teamId": 1,
  },
  "logs": [
    {
      "level": "debug",
      "message": "config, {"method":"POST","body":{"event":{"uuid":"uuid","event":"test","distinct_id":"distinct_id","properties":{"email":"test@posthog.com"},"timestamp":"","elements_chain":"","url":""},"person":{"id":"person-id","name":"person-name","properties":{"email":"example@posthog.com"},"url":"https://us.posthog.com/projects/1/persons/1234"}},"headers":{"Content-Type":"application/json"},"debug":false,"debug_mode":true,"url":"http://jaj.mu/iroti"}",
      "timestamp": "2025-01-01T00:00:00.000Z",
    },
    {
      "level": "debug",
      "message": "endpoint, http://jaj.mu/iroti",
      "timestamp": "2025-01-01T00:00:00.000Z",
    },
    {
      "level": "debug",
      "message": "options, {"method":"POST","headers":{"Content-Type":"application/json"},"json":{"event":{"uuid":"uuid","event":"test","distinct_id":"distinct_id","properties":{"email":"test@posthog.com"},"timestamp":"","elements_chain":"","url":""},"person":{"id":"person-id","name":"person-name","properties":{"email":"example@posthog.com"},"url":"https://us.posthog.com/projects/1/persons/1234"}}}",
      "timestamp": "2025-01-01T00:00:00.000Z",
    },
    {
      "level": "debug",
      "message": "fetchOptions, {"method":"POST","headers":{"User-Agent":"PostHog.com/1.0","Content-Type":"application/json"},"body":"{\\"event\\":{\\"uuid\\":\\"uuid\\",\\"event\\":\\"test\\",\\"distinct_id\\":\\"distinct_id\\",\\"properties\\":{\\"email\\":\\"test@posthog.com\\"},\\"timestamp\\":\\"\\",\\"elements_chain\\":\\"\\",\\"url\\":\\"\\"},\\"person\\":{\\"id\\":\\"person-id\\",\\"name\\":\\"person-name\\",\\"properties\\":{\\"email\\":\\"example@posthog.com\\"},\\"url\\":\\"https://us.posthog.com/projects/1/persons/1234\\"}}"}",
      "timestamp": "2025-01-01T00:00:00.000Z",
    },
    {
      "level": "debug",
      "message": "convertedResponse, 200, {"status":"OK"}, {"status":"OK"}, {"content-type":"application/json"}",
      "timestamp": "2025-01-01T00:00:00.000Z",
    },
    {
      "level": "info",
      "message": "Function completed in [REPLACED]",
      "timestamp": "2025-01-01T00:00:00.000Z",
    },
  ],
  "metrics": [],
}
`;

exports[`Testing snapshots for native-webhook destination: required fields 1`] = `
{
  "capturedPostHogEvents": [],
  "finished": true,
  "invocation": {
    "functionId": "native-webhook",
    "hogFunction": {
      "bytecode": [],
      "category": [
        "Custom",
      ],
      "code_language": "javascript",
      "created_at": "2024-01-01T00:00:00Z",
      "deleted": false,
      "description": "Sends a native webhook templated by the incoming event data",
      "enabled": true,
      "free": false,
      "hog": "return event",
      "icon_url": "/static/posthog-icon.svg",
      "id": "native-webhook",
      "inputs": {
        "body": {
          "bytecode": {
            "event": [
              "_H",
              1,
              32,
              "event",
              1,
              1,
              38,
            ],
            "person": [
              "_H",
              1,
              32,
              "person",
              1,
              1,
              38,
            ],
          },
          "value": {
            "event": "{event}",
            "person": "{person}",
          },
        },
        "debug": {
          "bytecode": undefined,
          "value": false,
        },
        "debug_mode": {
          "bytecode": undefined,
          "value": true,
        },
        "headers": {
          "bytecode": {
            "Content-Type": [
              "_H",
              1,
              32,
              "application/json",
              38,
            ],
          },
          "value": {
            "Content-Type": "application/json",
          },
        },
        "method": {
          "bytecode": [
            "_H",
            1,
            32,
            "POST",
            38,
          ],
          "value": "POST",
        },
        "url": {
          "bytecode": [
            "_H",
            1,
            32,
            "http://jaj.mu/iroti",
            38,
          ],
          "value": "http://jaj.mu/iroti",
        },
      },
      "inputs_schema": [
        {
          "description": "Endpoint URL to send event data to.",
          "key": "url",
          "label": "Webhook URL",
          "required": true,
          "secret": false,
          "type": "string",
        },
        {
          "choices": [
            {
              "label": "POST",
              "value": "POST",
            },
            {
              "label": "PUT",
              "value": "PUT",
            },
            {
              "label": "PATCH",
              "value": "PATCH",
            },
            {
              "label": "GET",
              "value": "GET",
            },
            {
              "label": "DELETE",
              "value": "DELETE",
            },
          ],
          "default": "POST",
          "description": "HTTP method to use for the request.",
          "key": "method",
          "label": "Method",
          "required": false,
          "secret": false,
          "type": "choice",
        },
        {
          "default": {
            "event": "{event}",
            "person": "{person}",
          },
          "description": "JSON payload to send in the request body.",
          "key": "body",
          "label": "JSON Body",
          "required": false,
          "secret": false,
          "type": "json",
        },
        {
          "default": {
            "Content-Type": "application/json",
          },
          "description": "HTTP headers to send in the request.",
          "key": "headers",
          "label": "Headers",
          "required": false,
          "secret": false,
          "type": "dictionary",
        },
        {
          "default": false,
          "description": "Logs the response of http calls for debugging.",
          "key": "debug",
          "label": "Log responses",
          "required": false,
          "secret": false,
          "type": "boolean",
        },
        {
          "default": false,
          "description": "Will log configuration and request details",
          "key": "debug_mode",
          "label": "Debug Mode",
          "type": "boolean",
        },
      ],
      "is_addon_required": false,
      "name": "Native HTTP Webhook",
      "perform": [Function],
      "status": "hidden",
      "team_id": 1,
      "template_id": "native-webhook",
      "type": "destination",
      "updated_at": "2024-01-01T00:00:00Z",
    },
    "id": "invocation-id",
    "queue": "hog",
    "queueMetadata": {
      "tries": 1,
    },
    "queueParameters": undefined,
    "queuePriority": 0,
    "queueScheduledAt": undefined,
    "queueSource": undefined,
    "state": {
      "attempts": 0,
      "globals": {
        "event": {
          "distinct_id": "distinct_id",
          "elements_chain": "",
          "event": "test",
          "properties": {
            "email": "test@posthog.com",
          },
          "timestamp": "",
          "url": "",
          "uuid": "uuid",
        },
        "inputs": {
          "body": {
            "event": {
              "distinct_id": "distinct_id",
              "elements_chain": "",
              "event": "test",
              "properties": {
                "email": "test@posthog.com",
              },
              "timestamp": "",
              "url": "",
              "uuid": "uuid",
            },
            "person": {
              "id": "person-id",
              "name": "person-name",
              "properties": {
                "email": "example@posthog.com",
              },
              "url": "https://us.posthog.com/projects/1/persons/1234",
            },
          },
          "debug": false,
          "debug_mode": true,
          "headers": {
            "Content-Type": "application/json",
          },
          "method": "POST",
          "url": "http://jaj.mu/iroti",
        },
        "person": {
          "id": "person-id",
          "name": "person-name",
          "properties": {
            "email": "example@posthog.com",
          },
          "url": "https://us.posthog.com/projects/1/persons/1234",
        },
        "project": {
          "id": 1,
          "name": "project-name",
          "url": "https://us.posthog.com/projects/1",
        },
        "source": {
          "name": "hog-function-name",
          "url": "https://us.posthog.com/hog_functions/1234",
        },
      },
      "timings": [],
    },
    "teamId": 1,
  },
  "logs": [
    {
      "level": "debug",
      "message": "config, {"method":"POST","body":{"event":{"uuid":"uuid","event":"test","distinct_id":"distinct_id","properties":{"email":"test@posthog.com"},"timestamp":"","elements_chain":"","url":""},"person":{"id":"person-id","name":"person-name","properties":{"email":"example@posthog.com"},"url":"https://us.posthog.com/projects/1/persons/1234"}},"headers":{"Content-Type":"application/json"},"debug":false,"debug_mode":true,"url":"http://jaj.mu/iroti"}",
      "timestamp": "2025-01-01T00:00:00.000Z",
    },
    {
      "level": "debug",
      "message": "endpoint, http://jaj.mu/iroti",
      "timestamp": "2025-01-01T00:00:00.000Z",
    },
    {
      "level": "debug",
      "message": "options, {"method":"POST","headers":{"Content-Type":"application/json"},"json":{"event":{"uuid":"uuid","event":"test","distinct_id":"distinct_id","properties":{"email":"test@posthog.com"},"timestamp":"","elements_chain":"","url":""},"person":{"id":"person-id","name":"person-name","properties":{"email":"example@posthog.com"},"url":"https://us.posthog.com/projects/1/persons/1234"}}}",
      "timestamp": "2025-01-01T00:00:00.000Z",
    },
    {
      "level": "debug",
      "message": "fetchOptions, {"method":"POST","headers":{"User-Agent":"PostHog.com/1.0","Content-Type":"application/json"},"body":"{\\"event\\":{\\"uuid\\":\\"uuid\\",\\"event\\":\\"test\\",\\"distinct_id\\":\\"distinct_id\\",\\"properties\\":{\\"email\\":\\"test@posthog.com\\"},\\"timestamp\\":\\"\\",\\"elements_chain\\":\\"\\",\\"url\\":\\"\\"},\\"person\\":{\\"id\\":\\"person-id\\",\\"name\\":\\"person-name\\",\\"properties\\":{\\"email\\":\\"example@posthog.com\\"},\\"url\\":\\"https://us.posthog.com/projects/1/persons/1234\\"}}"}",
      "timestamp": "2025-01-01T00:00:00.000Z",
    },
    {
      "level": "debug",
      "message": "convertedResponse, 200, {"status":"OK"}, {"status":"OK"}, {"content-type":"application/json"}",
      "timestamp": "2025-01-01T00:00:00.000Z",
    },
    {
      "level": "info",
      "message": "Function completed in [REPLACED]",
      "timestamp": "2025-01-01T00:00:00.000Z",
    },
  ],
  "metrics": [],
}
`;
